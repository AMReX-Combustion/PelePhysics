#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  H
1  O
2  C
3  N
*/

// Species
#define H2_ID 0
#define H_ID 1
#define O_ID 2
#define O2_ID 3
#define OH_ID 4
#define H2O_ID 5
#define HO2_ID 6
#define H2O2_ID 7
#define CH3_ID 8
#define CH4_ID 9
#define CO_ID 10
#define CO2_ID 11
#define CH2O_ID 12
#define C2H2_ID 13
#define C2H4_ID 14
#define C2H6_ID 15
#define HCCO_ID 16
#define CH2CO_ID 17
#define CH3CHO_ID 18
#define aC3H5_ID 19
#define C3H6_ID 20
#define N2_ID 21

#define NUM_ELEMENTS 4
#define NUM_SPECIES 22
#define NUM_IONS 0
#define NUM_REACTIONS 206

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 22;
  ii = 206;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[22] = {
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0312519532470779, // O2
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0302975216627280, // HO2
  0.0293996589639560, // H2O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0333044694598015, // CH2O
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0226999296302181, // CH3CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0356964374955379, // N2
};
const amrex::Real h_global_imw[22] = {
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0312519532470779, // O2
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0302975216627280, // HO2
  0.0293996589639560, // H2O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0333044694598015, // CH2O
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0226999296302181, // CH3CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0356964374955379, // N2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[22] = {
  2.016000,  // H2
  1.008000,  // H
  15.999000, // O
  31.998000, // O2
  17.007000, // OH
  18.015000, // H2O
  33.006000, // HO2
  34.014000, // H2O2
  15.035000, // CH3
  16.043000, // CH4
  28.010000, // CO
  44.009000, // CO2
  30.026000, // CH2O
  26.038000, // C2H2
  28.054000, // C2H4
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  44.053000, // CH3CHO
  41.073000, // aC3H5
  42.081000, // C3H6
  28.014000, // N2
};
const amrex::Real h_global_mw[22] = {
  2.016000,  // H2
  1.008000,  // H
  15.999000, // O
  31.998000, // O2
  17.007000, // OH
  18.015000, // H2O
  33.006000, // HO2
  34.014000, // H2O2
  15.035000, // CH3
  16.043000, // CH4
  28.010000, // CO
  44.009000, // CO2
  30.026000, // CH2O
  26.038000, // C2H2
  28.054000, // C2H4
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  44.053000, // CH3CHO
  41.073000, // aC3H5
  42.081000, // C3H6
  28.014000, // N2
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.4960317460317460;  // H2
  imw_new[1] = 0.9920634920634921;  // H
  imw_new[2] = 0.0625039064941559;  // O
  imw_new[3] = 0.0312519532470779;  // O2
  imw_new[4] = 0.0587993179279120;  // OH
  imw_new[5] = 0.0555092978073827;  // H2O
  imw_new[6] = 0.0302975216627280;  // HO2
  imw_new[7] = 0.0293996589639560;  // H2O2
  imw_new[8] = 0.0665114732291320;  // CH3
  imw_new[9] = 0.0623324814560868;  // CH4
  imw_new[10] = 0.0357015351660121; // CO
  imw_new[11] = 0.0227226249176305; // CO2
  imw_new[12] = 0.0333044694598015; // CH2O
  imw_new[13] = 0.0384054074813734; // C2H2
  imw_new[14] = 0.0356455407428531; // C2H4
  imw_new[15] = 0.0332557366145660; // C2H6
  imw_new[16] = 0.0243730044602598; // HCCO
  imw_new[17] = 0.0237885672145967; // CH2CO
  imw_new[18] = 0.0226999296302181; // CH3CHO
  imw_new[19] = 0.0243468945535997; // aC3H5
  imw_new[20] = 0.0237636938285687; // C3H6
  imw_new[21] = 0.0356964374955379; // N2
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 2.016000;   // H2
  mw_new[1] = 1.008000;   // H
  mw_new[2] = 15.999000;  // O
  mw_new[3] = 31.998000;  // O2
  mw_new[4] = 17.007000;  // OH
  mw_new[5] = 18.015000;  // H2O
  mw_new[6] = 33.006000;  // HO2
  mw_new[7] = 34.014000;  // H2O2
  mw_new[8] = 15.035000;  // CH3
  mw_new[9] = 16.043000;  // CH4
  mw_new[10] = 28.010000; // CO
  mw_new[11] = 44.009000; // CO2
  mw_new[12] = 30.026000; // CH2O
  mw_new[13] = 26.038000; // C2H2
  mw_new[14] = 28.054000; // C2H4
  mw_new[15] = 30.070000; // C2H6
  mw_new[16] = 41.029000; // HCCO
  mw_new[17] = 42.037000; // CH2CO
  mw_new[18] = 44.053000; // CH3CHO
  mw_new[19] = 41.073000; // aC3H5
  mw_new[20] = 42.081000; // C3H6
  mw_new[21] = 28.014000; // N2
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 1: H
    species[1] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: O2
    species[3] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 4: OH
    species[4] = +2.99201543e+00 - 2.40131752e-03 * tc[1] +
                 4.61793841e-06 * tc[2] - 3.88113333e-09 * tc[3] +
                 1.36411470e-12 * tc[4];
    // species 5: H2O
    species[5] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 6: HO2
    species[6] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: CH3
    species[8] = +2.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 9: CH4
    species[9] = +4.14987613e+00 - 1.36709788e-02 * tc[1] +
                 4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                 1.66693956e-11 * tc[4];
    // species 10: CO
    species[10] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 11: CO2
    species[11] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 3.19328580e-03 * tc[1] +
                  4.75349210e-05 * tc[2] - 5.74586110e-08 * tc[3] +
                  2.19311120e-11 * tc[4];
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 21: N2
    species[21] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 1: H
    species[1] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: O2
    species[3] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 4: OH
    species[4] = +2.09288767e+00 + 5.48429716e-04 * tc[1] +
                 1.26505228e-07 * tc[2] - 8.79461556e-11 * tc[3] +
                 1.17412376e-14 * tc[4];
    // species 5: H2O
    species[5] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 6: HO2
    species[6] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: CH3
    species[8] = +1.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 9: CH4
    species[9] = -9.25148505e-01 + 1.33909467e-02 * tc[1] -
                 5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                 1.01815230e-13 * tc[4];
    // species 10: CO
    species[10] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 11: CO2
    species[11] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 1.17230590e-02 * tc[1] -
                  4.22631370e-06 * tc[2] + 6.83724510e-10 * tc[3] -
                  4.09848630e-14 * tc[4];
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 21: N2
    species[21] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 1: H
    species[1] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: O2
    species[3] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 4: OH
    species[4] = +3.99201543e+00 - 2.40131752e-03 * tc[1] +
                 4.61793841e-06 * tc[2] - 3.88113333e-09 * tc[3] +
                 1.36411470e-12 * tc[4];
    // species 5: H2O
    species[5] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 6: HO2
    species[6] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: CH3
    species[8] = +3.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 9: CH4
    species[9] = +5.14987613e+00 - 1.36709788e-02 * tc[1] +
                 4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                 1.66693956e-11 * tc[4];
    // species 10: CO
    species[10] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 11: CO2
    species[11] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 3.19328580e-03 * tc[1] +
                  4.75349210e-05 * tc[2] - 5.74586110e-08 * tc[3] +
                  2.19311120e-11 * tc[4];
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 21: N2
    species[21] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 1: H
    species[1] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: O2
    species[3] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 4: OH
    species[4] = +3.09288767e+00 + 5.48429716e-04 * tc[1] +
                 1.26505228e-07 * tc[2] - 8.79461556e-11 * tc[3] +
                 1.17412376e-14 * tc[4];
    // species 5: H2O
    species[5] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 6: HO2
    species[6] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: CH3
    species[8] = +2.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 9: CH4
    species[9] = +7.48514950e-02 + 1.33909467e-02 * tc[1] -
                 5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                 1.01815230e-13 * tc[4];
    // species 10: CO
    species[10] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 11: CO2
    species[11] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 1.17230590e-02 * tc[1] -
                  4.22631370e-06 * tc[2] + 6.83724510e-10 * tc[3] -
                  4.09848630e-14 * tc[4];
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 21: N2
    species[21] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 3: O2
    species[3] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 4: OH
    species[4] = +3.615080560000000e+03 * invT + 4.095940888000000e+00 -
                 3.992015430000000e+00 * tc[0] + 1.200658760000000e-03 * tc[1] -
                 7.696564016666666e-07 * tc[2] + 3.234277775000000e-10 * tc[3] -
                 6.820573500000000e-14 * tc[4];
    // species 5: H2O
    species[5] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 6: HO2
    species[6] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * tc[0] + 2.714112085000000e-04 * tc[1] -
                 2.788928350000000e-06 * tc[2] + 1.798090108333333e-09 * tc[3] -
                 4.312271815000000e-13 * tc[4];
    // species 8: CH3
    species[8] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                 3.673590400000000e+00 * tc[0] - 1.005475875000000e-03 * tc[1] -
                 9.550364266666668e-07 * tc[2] + 5.725978541666666e-10 * tc[3] -
                 1.271928670000000e-13 * tc[4];
    // species 9: CH4
    species[9] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                 5.149876130000000e+00 * tc[0] + 6.835489400000000e-03 * tc[1] -
                 8.196676650000000e-06 * tc[2] + 4.039525216666667e-09 * tc[3] -
                 8.334697800000000e-13 * tc[4];
    // species 10: CO
    species[10] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 11: CO2
    species[11] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 13: C2H2
    species[13] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 14: C2H4
    species[14] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 15: C2H6
    species[15] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 16: HCCO
    species[16] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * tc[0] -
                  8.827510500000000e-03 * tc[1] +
                  3.954850166666666e-06 * tc[2] -
                  1.439646583333334e-09 * tc[3] + 2.533240550000000e-13 * tc[4];
    // species 17: CH2CO
    species[17] = -7.042918040000000e+03 * invT - 1.007981170000000e+01 -
                  2.135836300000000e+00 * tc[0] -
                  9.059436050000000e-03 * tc[1] +
                  2.899124566666666e-06 * tc[2] -
                  7.786646400000000e-10 * tc[3] + 1.007288075000000e-13 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.157287800000000e+04 * invT + 6.264436000000000e-01 -
                  4.729459500000000e+00 * tc[0] +
                  1.596642900000000e-03 * tc[1] -
                  7.922486833333334e-06 * tc[2] +
                  4.788217583333333e-09 * tc[3] - 1.096555600000000e-12 * tc[4];
    // species 19: aC3H5
    species[19] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * tc[0] -
                  9.906910499999999e-03 * tc[1] -
                  2.082843333333333e-06 * tc[2] +
                  2.779629583333333e-09 * tc[3] - 7.923285500000000e-13 * tc[4];
    // species 20: C3H6
    species[20] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * tc[0] -
                  1.046259000000000e-02 * tc[1] -
                  7.477990000000000e-07 * tc[2] +
                  1.390760000000000e-09 * tc[3] - 3.579073000000000e-13 * tc[4];
    // species 21: N2
    species[21] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * tc[0] -
                  7.041202000000000e-04 * tc[1] +
                  6.605369999999999e-07 * tc[2] -
                  4.701262500000001e-10 * tc[3] + 1.222427000000000e-13 * tc[4];
  } else {
    // species 0: H2
    species[0] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 3: O2
    species[3] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 4: OH
    species[4] = +3.858657000000000e+03 * invT - 1.383808430000000e+00 -
                 3.092887670000000e+00 * tc[0] - 2.742148580000000e-04 * tc[1] -
                 2.108420466666667e-08 * tc[2] + 7.328846300000000e-12 * tc[3] -
                 5.870618800000000e-16 * tc[4];
    // species 5: H2O
    species[5] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 6: HO2
    species[6] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * tc[0] - 2.454158470000000e-03 * tc[1] +
                 3.168987083333333e-07 * tc[2] - 3.093216550000000e-11 * tc[3] +
                 1.439541525000000e-15 * tc[4];
    // species 8: CH3
    species[8] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                 2.285717720000000e+00 * tc[0] - 3.619950185000000e-03 * tc[1] +
                 4.978572466666667e-07 * tc[2] - 4.964038700000000e-11 * tc[3] +
                 2.335771970000000e-15 * tc[4];
    // species 9: CH4
    species[9] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                 7.485149500000000e-02 * tc[0] - 6.695473350000000e-03 * tc[1] +
                 9.554763483333333e-07 * tc[2] - 1.019104458333333e-10 * tc[3] +
                 5.090761500000000e-15 * tc[4];
    // species 10: CO
    species[10] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 11: CO2
    species[11] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 13: C2H2
    species[13] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 14: C2H4
    species[14] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 15: C2H6
    species[15] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 16: HCCO
    species[16] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * tc[0] -
                  2.042670050000000e-03 * tc[1] +
                  2.655757833333333e-07 * tc[2] -
                  2.385504333333333e-11 * tc[3] + 9.703915999999999e-16 * tc[4];
    // species 17: CH2CO
    species[17] = -7.551053110000000e+03 * invT + 3.879050115000000e+00 -
                  4.511297320000000e+00 * tc[0] -
                  4.501798725000000e-03 * tc[1] +
                  6.948993916666666e-07 * tc[2] -
                  7.694549016666667e-11 * tc[3] + 3.974191005000000e-15 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.259312200000000e+04 * invT + 8.884902499999999e+00 -
                  5.404110800000000e+00 * tc[0] -
                  5.861529500000000e-03 * tc[1] +
                  7.043856166666666e-07 * tc[2] -
                  5.697704250000000e-11 * tc[3] + 2.049243150000000e-15 * tc[4];
    // species 19: aC3H5
    species[19] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * tc[0] -
                  7.162365500000000e-03 * tc[1] +
                  9.463605333333332e-07 * tc[2] -
                  9.234000833333333e-11 * tc[3] + 4.518194349999999e-15 * tc[4];
    // species 20: C3H6
    species[20] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * tc[0] -
                  7.454170000000000e-03 * tc[1] +
                  8.249831666666666e-07 * tc[2] -
                  6.010018333333334e-11 * tc[3] + 1.883102000000000e-15 * tc[4];
    // species 21: N2
    species[21] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * tc[0] -
                  7.439884000000000e-04 * tc[1] +
                  9.474600000000001e-08 * tc[2] -
                  8.414198333333333e-12 * tc[3] + 3.376675500000000e-16 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +7.079729340000000e+04 * invT + 1.405805570000000e+00 -
                 3.489816650000000e+00 * tc[0] - 1.619177705000000e-04 * tc[1] +
                 2.814984416666667e-07 * tc[2] - 2.635144391666666e-10 * tc[3] +
                 7.030453350000001e-14 * tc[4];
    // species 1: CH2
    species[1] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 2: CH2*
    species[2] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * tc[0] + 1.183307095000000e-03 * tc[1] -
                 1.372160366666667e-06 * tc[2] + 5.573466508333334e-10 * tc[3] -
                 9.715736850000000e-14 * tc[4];
    // species 3: HCO
    species[3] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                 4.221185840000000e+00 * tc[0] + 1.621962660000000e-03 * tc[1] -
                 2.296657433333333e-06 * tc[2] + 1.109534108333333e-09 * tc[3] -
                 2.168844325000000e-13 * tc[4];
    // species 4: CH3O
    species[4] = +9.786011000000000e+02 * invT - 1.104597300000000e+01 -
                 2.106204000000000e+00 * tc[0] - 3.608297500000000e-03 * tc[1] -
                 8.897453333333333e-07 * tc[2] + 6.148030000000000e-10 * tc[3] -
                 1.037805000000000e-13 * tc[4];
    // species 5: H2CC
    species[5] = +4.862179400000000e+04 * invT - 2.638842700000001e+00 -
                 3.281548300000000e+00 * tc[0] - 3.488239550000000e-03 * tc[1] +
                 3.975874000000000e-07 * tc[2] + 1.008702666666667e-10 * tc[3] -
                 4.909477250000000e-14 * tc[4];
    // species 6: C2H3
    species[6] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                 3.212466450000000e+00 * tc[0] - 7.573958100000000e-04 * tc[1] -
                 4.320156866666666e-06 * tc[2] + 2.980482058333333e-09 * tc[3] -
                 7.357543650000000e-13 * tc[4];
    // species 7: C2H5
    species[7] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                 4.306465680000000e+00 * tc[0] + 2.093294460000000e-03 * tc[1] -
                 8.285713450000000e-06 * tc[2] + 4.992721716666666e-09 * tc[3] -
                 1.152545020000000e-12 * tc[4];
    // species 8: CH2CHO
    species[8] = +1.521476600000000e+03 * invT - 6.162391100000001e+00 -
                 3.409062400000000e+00 * tc[0] - 5.369287000000000e-03 * tc[1] -
                 3.152487500000000e-07 * tc[2] - 5.965485916666667e-10 * tc[3] -
                 1.433692550000000e-13 * tc[4];
    // species 9: nC3H7
    species[9] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                 1.049117300000000e+00 * tc[0] - 1.300448650000000e-02 * tc[1] -
                 3.923752666666667e-07 * tc[2] + 1.632927666666667e-09 * tc[3] -
                 4.686010350000000e-13 * tc[4];
  } else {
    // species 0: CH
    species[0] = +7.101243640000001e+04 * invT - 2.606515260000000e+00 -
                 2.878464730000000e+00 * tc[0] - 4.854568405000000e-04 * tc[1] -
                 2.407427583333333e-08 * tc[2] + 1.089065408333333e-11 * tc[3] -
                 8.803969149999999e-16 * tc[4];
    // species 1: CH2
    species[1] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 2: CH2*
    species[2] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * tc[0] - 2.327943185000000e-03 * tc[1] +
                 3.353199116666667e-07 * tc[2] - 3.482550000000000e-11 * tc[3] +
                 1.698581825000000e-15 * tc[4];
    // species 3: HCO
    species[3] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                 2.772174380000000e+00 * tc[0] - 2.478477630000000e-03 * tc[1] +
                 4.140760216666667e-07 * tc[2] - 4.909681483333334e-11 * tc[3] +
                 2.667543555000000e-15 * tc[4];
    // species 4: CH3O
    species[4] = +1.278325200000000e+02 * invT + 8.412240000000000e-01 -
                 3.770799000000000e+00 * tc[0] - 3.935748500000000e-03 * tc[1] +
                 4.427306666666667e-07 * tc[2] - 3.287025833333333e-11 * tc[3] +
                 1.056308000000000e-15 * tc[4];
    // species 5: H2CC
    species[5] = +4.831668800000000e+04 * invT + 3.637796990000000e+00 -
                 4.278034000000000e+00 * tc[0] - 2.378140200000000e-03 * tc[1] +
                 2.716834833333333e-07 * tc[2] - 2.121900500000000e-11 * tc[3] +
                 7.443189499999999e-16 * tc[4];
    // species 6: C2H3
    species[6] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                 3.016724000000000e+00 * tc[0] - 5.165114600000000e-03 * tc[1] +
                 7.801372483333333e-07 * tc[2] - 8.480274000000000e-11 * tc[3] +
                 4.313035205000000e-15 * tc[4];
    // species 7: C2H5
    species[7] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                 1.954656420000000e+00 * tc[0] - 8.698636100000001e-03 * tc[1] +
                 1.330344446666667e-06 * tc[2] - 1.460147408333333e-10 * tc[3] +
                 7.482078800000000e-15 * tc[4];
    // species 8: CH2CHO
    species[8] = +4.903217800000000e+02 * invT + 1.100775780000000e+01 -
                 5.975669900000000e+00 * tc[0] - 4.065295700000000e-03 * tc[1] +
                 4.572707500000000e-07 * tc[2] - 3.391920083333333e-11 * tc[3] +
                 1.088008550000000e-15 * tc[4];
    // species 9: nC3H7
    species[9] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                 7.709747900000000e+00 * tc[0] - 8.015742500000001e-03 * tc[1] +
                 8.786706333333332e-07 * tc[2] - 6.324029333333334e-11 * tc[3] +
                 1.943135950000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 2: O
    species[2] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 3: O2
    species[3] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 4: OH
    species[4] = +3.61508056e+03 * invT + 3.09594089e+00 -
                 3.99201543e+00 * tc[0] + 1.20065876e-03 * tc[1] -
                 7.69656402e-07 * tc[2] + 3.23427778e-10 * tc[3] -
                 6.82057350e-14 * tc[4];
    // species 5: H2O
    species[5] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 6: HO2
    species[6] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * tc[0] + 2.71411208e-04 * tc[1] -
                 2.78892835e-06 * tc[2] + 1.79809011e-09 * tc[3] -
                 4.31227182e-13 * tc[4];
    // species 8: CH3
    species[8] = +1.64449988e+04 * invT + 1.06902607e+00 -
                 3.67359040e+00 * tc[0] - 1.00547588e-03 * tc[1] -
                 9.55036427e-07 * tc[2] + 5.72597854e-10 * tc[3] -
                 1.27192867e-13 * tc[4];
    // species 9: CH4
    species[9] = -1.02466476e+04 * invT + 8.79117989e+00 -
                 5.14987613e+00 * tc[0] + 6.83548940e-03 * tc[1] -
                 8.19667665e-06 * tc[2] + 4.03952522e-09 * tc[3] -
                 8.33469780e-13 * tc[4];
    // species 10: CO
    species[10] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 11: CO2
    species[11] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 13: C2H2
    species[13] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 14: C2H4
    species[14] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 15: C2H6
    species[15] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 16: HCCO
    species[16] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * tc[0] - 8.82751050e-03 * tc[1] +
                  3.95485017e-06 * tc[2] - 1.43964658e-09 * tc[3] +
                  2.53324055e-13 * tc[4];
    // species 17: CH2CO
    species[17] = -7.04291804e+03 * invT - 1.10798117e+01 -
                  2.13583630e+00 * tc[0] - 9.05943605e-03 * tc[1] +
                  2.89912457e-06 * tc[2] - 7.78664640e-10 * tc[3] +
                  1.00728807e-13 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.15728780e+04 * invT - 3.73556400e-01 -
                  4.72945950e+00 * tc[0] + 1.59664290e-03 * tc[1] -
                  7.92248683e-06 * tc[2] + 4.78821758e-09 * tc[3] -
                  1.09655560e-12 * tc[4];
    // species 19: aC3H5
    species[19] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * tc[0] - 9.90691050e-03 * tc[1] -
                  2.08284333e-06 * tc[2] + 2.77962958e-09 * tc[3] -
                  7.92328550e-13 * tc[4];
    // species 20: C3H6
    species[20] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * tc[0] - 1.04625900e-02 * tc[1] -
                  7.47799000e-07 * tc[2] + 1.39076000e-09 * tc[3] -
                  3.57907300e-13 * tc[4];
    // species 21: N2
    species[21] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                  6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                  1.22242700e-13 * tc[4];
  } else {
    // species 0: H2
    species[0] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 2: O
    species[2] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 3: O2
    species[3] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 4: OH
    species[4] = +3.85865700e+03 * invT - 2.38380843e+00 -
                 3.09288767e+00 * tc[0] - 2.74214858e-04 * tc[1] -
                 2.10842047e-08 * tc[2] + 7.32884630e-12 * tc[3] -
                 5.87061880e-16 * tc[4];
    // species 5: H2O
    species[5] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 6: HO2
    species[6] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * tc[0] - 2.45415847e-03 * tc[1] +
                 3.16898708e-07 * tc[2] - 3.09321655e-11 * tc[3] +
                 1.43954153e-15 * tc[4];
    // species 8: CH3
    species[8] = +1.67755843e+04 * invT - 7.19435407e+00 -
                 2.28571772e+00 * tc[0] - 3.61995018e-03 * tc[1] +
                 4.97857247e-07 * tc[2] - 4.96403870e-11 * tc[3] +
                 2.33577197e-15 * tc[4];
    // species 9: CH4
    species[9] = -9.46834459e+03 * invT - 1.93624665e+01 -
                 7.48514950e-02 * tc[0] - 6.69547335e-03 * tc[1] +
                 9.55476348e-07 * tc[2] - 1.01910446e-10 * tc[3] +
                 5.09076150e-15 * tc[4];
    // species 10: CO
    species[10] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 11: CO2
    species[11] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 13: C2H2
    species[13] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 14: C2H4
    species[14] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 15: C2H6
    species[15] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 16: HCCO
    species[16] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * tc[0] - 2.04267005e-03 * tc[1] +
                  2.65575783e-07 * tc[2] - 2.38550433e-11 * tc[3] +
                  9.70391600e-16 * tc[4];
    // species 17: CH2CO
    species[17] = -7.55105311e+03 * invT + 2.87905011e+00 -
                  4.51129732e+00 * tc[0] - 4.50179872e-03 * tc[1] +
                  6.94899392e-07 * tc[2] - 7.69454902e-11 * tc[3] +
                  3.97419100e-15 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.25931220e+04 * invT + 7.88490250e+00 -
                  5.40411080e+00 * tc[0] - 5.86152950e-03 * tc[1] +
                  7.04385617e-07 * tc[2] - 5.69770425e-11 * tc[3] +
                  2.04924315e-15 * tc[4];
    // species 19: aC3H5
    species[19] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * tc[0] - 7.16236550e-03 * tc[1] +
                  9.46360533e-07 * tc[2] - 9.23400083e-11 * tc[3] +
                  4.51819435e-15 * tc[4];
    // species 20: C3H6
    species[20] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * tc[0] - 7.45417000e-03 * tc[1] +
                  8.24983167e-07 * tc[2] - 6.01001833e-11 * tc[3] +
                  1.88310200e-15 * tc[4];
    // species 21: N2
    species[21] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                  9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                  3.37667550e-16 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +2.99201543e+00 - 1.20065876e-03 * tc[1] +
                 1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
                 2.72822940e-13 * tc[4] + 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +2.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +4.14987613e+00 - 6.83548940e-03 * tc[1] +
                 1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                 3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 1.59664290e-03 * tc[1] +
                  1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
                  4.38622240e-12 * tc[4] - 2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +2.09288767e+00 + 2.74214858e-04 * tc[1] +
                 4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
                 2.34824752e-15 * tc[4] + 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +1.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = -9.25148505e-01 + 6.69547335e-03 * tc[1] -
                 1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                 2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 5.86152950e-03 * tc[1] -
                  1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
                  8.19697260e-15 * tc[4] - 2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +3.99201543e+00 - 1.20065876e-03 * tc[1] +
                 1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
                 2.72822940e-13 * tc[4] + 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +3.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +5.14987613e+00 - 6.83548940e-03 * tc[1] +
                 1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                 3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 1.59664290e-03 * tc[1] +
                  1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
                  4.38622240e-12 * tc[4] - 2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +3.09288767e+00 + 2.74214858e-04 * tc[1] +
                 4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
                 2.34824752e-15 * tc[4] + 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +2.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = +7.48514950e-02 + 6.69547335e-03 * tc[1] -
                 1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                 2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 5.86152950e-03 * tc[1] -
                  1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
                  8.19697260e-15 * tc[4] - 2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +3.48981665e+00 + 1.61917771e-04 * tc[1] -
                 5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
                 2.81218134e-13 * tc[4] + 7.07972934e+04 * invT;
    // species 1: CH2
    species[1] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 2: CH2*
    species[2] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 3: HCO
    species[3] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                 4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                 8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 4: CH3O
    species[4] = +2.10620400e+00 + 3.60829750e-03 * tc[1] +
                 1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
                 4.15122000e-13 * tc[4] + 9.78601100e+02 * invT;
    // species 5: H2CC
    species[5] = +3.28154830e+00 + 3.48823955e-03 * tc[1] -
                 7.95174800e-07 * tc[2] - 3.02610800e-10 * tc[3] +
                 1.96379090e-13 * tc[4] + 4.86217940e+04 * invT;
    // species 6: C2H3
    species[6] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                 8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                 2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 7: C2H5
    species[7] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                 1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                 4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 8: CH2CHO
    species[8] = +3.40906240e+00 + 5.36928700e-03 * tc[1] +
                 6.30497500e-07 * tc[2] + 1.78964578e-09 * tc[3] +
                 5.73477020e-13 * tc[4] + 1.52147660e+03 * invT;
    // species 9: nC3H7
    species[9] = +1.04911730e+00 + 1.30044865e-02 * tc[1] +
                 7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                 1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
  } else {
    // species 0: CH
    species[0] = +2.87846473e+00 + 4.85456840e-04 * tc[1] +
                 4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
                 3.52158766e-15 * tc[4] + 7.10124364e+04 * invT;
    // species 1: CH2
    species[1] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 2: CH2*
    species[2] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 3: HCO
    species[3] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                 8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                 1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 4: CH3O
    species[4] = +3.77079900e+00 + 3.93574850e-03 * tc[1] -
                 8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
                 4.22523200e-15 * tc[4] + 1.27832520e+02 * invT;
    // species 5: H2CC
    species[5] = +4.27803400e+00 + 2.37814020e-03 * tc[1] -
                 5.43366967e-07 * tc[2] + 6.36570150e-11 * tc[3] -
                 2.97727580e-15 * tc[4] + 4.83166880e+04 * invT;
    // species 6: C2H3
    species[6] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                 1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                 1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 7: C2H5
    species[7] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                 2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                 2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 8: CH2CHO
    species[8] = +5.97566990e+00 + 4.06529570e-03 * tc[1] -
                 9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                 4.35203420e-15 * tc[4] + 4.90321780e+02 * invT;
    // species 9: nC3H7
    species[9] = +7.70974790e+00 + 8.01574250e-03 * tc[1] -
                 1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                 7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 1: H
    species[1] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 2: O
    species[2] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 3: O2
    species[3] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 4: OH
    species[4] = +3.99201543e+00 * tc[0] - 2.40131752e-03 * tc[1] +
                 2.30896920e-06 * tc[2] - 1.29371111e-09 * tc[3] +
                 3.41028675e-13 * tc[4] - 1.03925458e-01;
    // species 5: H2O
    species[5] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 6: HO2
    species[6] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 7: H2O2
    species[7] = +4.27611269e+00 * tc[0] - 5.42822417e-04 * tc[1] +
                 8.36678505e-06 * tc[2] - 7.19236043e-09 * tc[3] +
                 2.15613591e-12 * tc[4] + 3.43505074e+00;
    // species 8: CH3
    species[8] = +3.67359040e+00 * tc[0] + 2.01095175e-03 * tc[1] +
                 2.86510928e-06 * tc[2] - 2.29039142e-09 * tc[3] +
                 6.35964335e-13 * tc[4] + 1.60456433e+00;
    // species 9: CH4
    species[9] = +5.14987613e+00 * tc[0] - 1.36709788e-02 * tc[1] +
                 2.45900299e-05 * tc[2] - 1.61581009e-08 * tc[3] +
                 4.16734890e-12 * tc[4] - 4.64130376e+00;
    // species 10: CO
    species[10] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 11: CO2
    species[11] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 12: CH2O
    species[12] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 13: C2H2
    species[13] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 14: C2H4
    species[14] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 15: C2H6
    species[15] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 16: HCCO
    species[16] = +2.25172140e+00 * tc[0] + 1.76550210e-02 * tc[1] -
                  1.18645505e-05 * tc[2] + 5.75858633e-09 * tc[3] -
                  1.26662028e-12 * tc[4] + 1.24904170e+01;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 * tc[0] + 1.81188721e-02 * tc[1] -
                  8.69737370e-06 * tc[2] + 3.11465856e-09 * tc[3] -
                  5.03644037e-13 * tc[4] + 1.22156480e+01;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 * tc[0] - 3.19328580e-03 * tc[1] +
                  2.37674605e-05 * tc[2] - 1.91528703e-08 * tc[3] +
                  5.48277800e-12 * tc[4] + 4.10301590e+00;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 * tc[0] + 1.98138210e-02 * tc[1] +
                  6.24853000e-06 * tc[2] - 1.11185183e-08 * tc[3] +
                  3.96164275e-12 * tc[4] + 1.71732140e+01;
    // species 20: C3H6
    species[20] = +1.49330700e+00 * tc[0] + 2.09251800e-02 * tc[1] +
                  2.24339700e-06 * tc[2] - 5.56304000e-09 * tc[3] +
                  1.78953650e-12 * tc[4] + 1.61453400e+01;
    // species 21: N2
    species[21] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                  1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                  6.11213500e-13 * tc[4] + 3.95037200e+00;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 1: H
    species[1] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 2: O
    species[2] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 3: O2
    species[3] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 4: OH
    species[4] = +3.09288767e+00 * tc[0] + 5.48429716e-04 * tc[1] +
                 6.32526140e-08 * tc[2] - 2.93153852e-11 * tc[3] +
                 2.93530940e-15 * tc[4] + 4.47669610e+00;
    // species 5: H2O
    species[5] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 6: HO2
    species[6] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 7: H2O2
    species[7] = +4.16500285e+00 * tc[0] + 4.90831694e-03 * tc[1] -
                 9.50696125e-07 * tc[2] + 1.23728662e-10 * tc[3] -
                 7.19770763e-15 * tc[4] + 2.91615662e+00;
    // species 8: CH3
    species[8] = +2.28571772e+00 * tc[0] + 7.23990037e-03 * tc[1] -
                 1.49357174e-06 * tc[2] + 1.98561548e-10 * tc[3] -
                 1.16788599e-14 * tc[4] + 8.48007179e+00;
    // species 9: CH4
    species[9] = +7.48514950e-02 * tc[0] + 1.33909467e-02 * tc[1] -
                 2.86642905e-06 * tc[2] + 4.07641783e-10 * tc[3] -
                 2.54538075e-14 * tc[4] + 1.84373180e+01;
    // species 10: CO
    species[10] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 11: CO2
    species[11] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 12: CH2O
    species[12] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 13: C2H2
    species[13] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 14: C2H4
    species[14] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 15: C2H6
    species[15] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 16: HCCO
    species[16] = +5.62820580e+00 * tc[0] + 4.08534010e-03 * tc[1] -
                  7.96727350e-07 * tc[2] + 9.54201733e-11 * tc[3] -
                  4.85195800e-15 * tc[4] - 3.93025950e+00;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 * tc[0] + 9.00359745e-03 * tc[1] -
                  2.08469817e-06 * tc[2] + 3.07781961e-10 * tc[3] -
                  1.98709550e-14 * tc[4] + 6.32247205e-01;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 * tc[0] + 1.17230590e-02 * tc[1] -
                  2.11315685e-06 * tc[2] + 2.27908170e-10 * tc[3] -
                  1.02462158e-14 * tc[4] - 3.48079170e+00;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 * tc[0] + 1.43247310e-02 * tc[1] -
                  2.83908160e-06 * tc[2] + 3.69360033e-10 * tc[3] -
                  2.25909717e-14 * tc[4] - 1.12430500e+01;
    // species 20: C3H6
    species[20] = +6.73225700e+00 * tc[0] + 1.49083400e-02 * tc[1] -
                  2.47494950e-06 * tc[2] + 2.40400733e-10 * tc[3] -
                  9.41551000e-15 * tc[4] - 1.33133500e+01;
    // species 21: N2
    species[21] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                  2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                  1.68833775e-15 * tc[4] + 5.98052800e+00;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[22];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result +=
      y[0] *
      (+2.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+2.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+3.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+3.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+3.99201543e+00 - 2.40131752e-03 * tc[1] + 4.61793841e-06 * tc[2] -
       3.88113333e-09 * tc[3] + 1.36411470e-12 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+4.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+4.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+3.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+5.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+3.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+2.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+4.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+8.08681094e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+3.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+4.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+2.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+2.13583630e+00 + 1.81188721e-02 * tc[1] - 1.73947474e-05 * tc[2] +
       9.34397568e-09 * tc[3] - 2.01457615e-12 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+4.72945950e+00 - 3.19328580e-03 * tc[1] + 4.75349210e-05 * tc[2] -
       5.74586110e-08 * tc[3] + 2.19311120e-11 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+1.36318350e+00 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+1.49330700e+00 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+3.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 0: H2
    result +=
      y[0] *
      (+3.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+2.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+3.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+3.09288767e+00 + 5.48429716e-04 * tc[1] + 1.26505228e-07 * tc[2] -
       8.79461556e-11 * tc[3] + 1.17412376e-14 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+3.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+4.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+2.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+7.48514950e-02 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+2.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+3.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+1.76069008e+00 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+4.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+2.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+1.07188150e+00 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+5.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+4.51129732e+00 + 9.00359745e-03 * tc[1] - 4.16939635e-06 * tc[2] +
       9.23345882e-10 * tc[3] - 7.94838201e-14 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+5.40411080e+00 + 1.17230590e-02 * tc[1] - 4.22631370e-06 * tc[2] +
       6.83724510e-10 * tc[3] - 4.09848630e-14 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+6.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+6.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+2.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[22];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result +=
      y[0] *
      (+1.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+1.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+2.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+2.99201543e+00 - 2.40131752e-03 * tc[1] + 4.61793841e-06 * tc[2] -
       3.88113333e-09 * tc[3] + 1.36411470e-12 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+3.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+3.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+2.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+4.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+2.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+1.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+3.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (-1.91318906e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+2.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+3.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+1.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+1.13583630e+00 + 1.81188721e-02 * tc[1] - 1.73947474e-05 * tc[2] +
       9.34397568e-09 * tc[3] - 2.01457615e-12 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+3.72945950e+00 - 3.19328580e-03 * tc[1] + 4.75349210e-05 * tc[2] -
       5.74586110e-08 * tc[3] + 2.19311120e-11 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+3.63183500e-01 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+4.93307000e-01 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+2.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 0: H2
    result +=
      y[0] *
      (+2.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+1.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+1.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+2.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+2.09288767e+00 + 5.48429716e-04 * tc[1] + 1.26505228e-07 * tc[2] -
       8.79461556e-11 * tc[3] + 1.17412376e-14 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+2.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+3.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+1.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (-9.25148505e-01 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+1.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+2.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+7.60690080e-01 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+3.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+1.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+7.18815000e-02 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+4.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+3.51129732e+00 + 9.00359745e-03 * tc[1] - 4.16939635e-06 * tc[2] +
       9.23345882e-10 * tc[3] - 7.94838201e-14 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+4.40411080e+00 + 1.17230590e-02 * tc[1] - 4.22631370e-06 * tc[2] +
       6.83724510e-10 * tc[3] - 4.09848630e-14 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+5.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+5.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+1.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[22];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result += y[0] *
              (+2.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+2.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+3.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+3.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+3.99201543e+00 - 1.20065876e-03 * tc[1] +
               1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
               2.72822940e-13 * tc[4] + 3.61508056e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+4.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+4.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+4.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+3.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+5.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+3.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+2.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+4.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+8.08681094e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+3.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+4.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+2.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+2.13583630e+00 + 9.05943605e-03 * tc[1] -
               5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
               4.02915230e-13 * tc[4] - 7.04291804e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+4.72945950e+00 - 1.59664290e-03 * tc[1] +
               1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
               4.38622240e-12 * tc[4] - 2.15728780e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+1.36318350e+00 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+1.49330700e+00 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+3.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 0: H2
    result += y[0] *
              (+3.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+2.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+3.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+3.09288767e+00 + 2.74214858e-04 * tc[1] +
               4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
               2.34824752e-15 * tc[4] + 3.85865700e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+3.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+4.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+4.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+2.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+7.48514950e-02 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+2.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+3.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+1.76069008e+00 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+4.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+2.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+1.07188150e+00 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+5.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+4.51129732e+00 + 4.50179872e-03 * tc[1] -
               1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
               1.58967640e-14 * tc[4] - 7.55105311e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+5.40411080e+00 + 5.86152950e-03 * tc[1] -
               1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
               8.19697260e-15 * tc[4] - 2.25931220e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+6.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+6.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+2.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[22];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result += y[0] *
              (+1.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+1.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+2.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+2.99201543e+00 - 1.20065876e-03 * tc[1] +
               1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
               2.72822940e-13 * tc[4] + 3.61508056e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+3.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+3.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+3.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+2.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+4.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+2.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+1.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+3.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (-1.91318906e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+2.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+3.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+1.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+1.13583630e+00 + 9.05943605e-03 * tc[1] -
               5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
               4.02915230e-13 * tc[4] - 7.04291804e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+3.72945950e+00 - 1.59664290e-03 * tc[1] +
               1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
               4.38622240e-12 * tc[4] - 2.15728780e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+3.63183500e-01 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+4.93307000e-01 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+2.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 0: H2
    result += y[0] *
              (+2.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+1.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+1.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+2.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+2.09288767e+00 + 2.74214858e-04 * tc[1] +
               4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
               2.34824752e-15 * tc[4] + 3.85865700e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+2.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+3.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+3.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+1.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (-9.25148505e-01 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+1.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+2.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+7.60690080e-01 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+3.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+1.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+7.18815000e-02 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+4.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+3.51129732e+00 + 4.50179872e-03 * tc[1] -
               1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
               1.58967640e-14 * tc[4] - 7.55105311e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+4.40411080e+00 + 5.86152950e-03 * tc[1] -
               1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
               8.19697260e-15 * tc[4] - 2.25931220e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+5.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+5.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+1.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[22]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 22; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[22]; //  temporary storage
  amrex::Real x[22];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (2.016000 * YOW);
  x[1] = y[1] / (1.008000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (31.998000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (18.015000 * YOW);
  x[6] = y[6] / (33.006000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (15.035000 * YOW);
  x[9] = y[9] / (16.043000 * YOW);
  x[10] = y[10] / (28.010000 * YOW);
  x[11] = y[11] / (44.009000 * YOW);
  x[12] = y[12] / (30.026000 * YOW);
  x[13] = y[13] / (26.038000 * YOW);
  x[14] = y[14] / (28.054000 * YOW);
  x[15] = y[15] / (30.070000 * YOW);
  x[16] = y[16] / (41.029000 * YOW);
  x[17] = y[17] / (42.037000 * YOW);
  x[18] = y[18] / (44.053000 * YOW);
  x[19] = y[19] / (41.073000 * YOW);
  x[20] = y[20] / (42.081000 * YOW);
  x[21] = y[21] / (28.014000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 22; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 2.016000;                   // H2
  XW += x[1] * 1.008000;                   // H
  XW += x[2] * 15.999000;                  // O
  XW += x[3] * 31.998000;                  // O2
  XW += x[4] * 17.007000;                  // OH
  XW += x[5] * 18.015000;                  // H2O
  XW += x[6] * 33.006000;                  // HO2
  XW += x[7] * 34.014000;                  // H2O2
  XW += x[8] * 15.035000;                  // CH3
  XW += x[9] * 16.043000;                  // CH4
  XW += x[10] * 28.010000;                 // CO
  XW += x[11] * 44.009000;                 // CO2
  XW += x[12] * 30.026000;                 // CH2O
  XW += x[13] * 26.038000;                 // C2H2
  XW += x[14] * 28.054000;                 // C2H4
  XW += x[15] * 30.070000;                 // C2H6
  XW += x[16] * 41.029000;                 // HCCO
  XW += x[17] * 42.037000;                 // CH2CO
  XW += x[18] * 44.053000;                 // CH3CHO
  XW += x[19] * 41.073000;                 // aC3H5
  XW += x[20] * 42.081000;                 // C3H6
  XW += x[21] * 28.014000;                 // N2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 2.016000;                     // H2
  XW += x[1] * 1.008000;                     // H
  XW += x[2] * 15.999000;                    // O
  XW += x[3] * 31.998000;                    // O2
  XW += x[4] * 17.007000;                    // OH
  XW += x[5] * 18.015000;                    // H2O
  XW += x[6] * 33.006000;                    // HO2
  XW += x[7] * 34.014000;                    // H2O2
  XW += x[8] * 15.035000;                    // CH3
  XW += x[9] * 16.043000;                    // CH4
  XW += x[10] * 28.010000;                   // CO
  XW += x[11] * 44.009000;                   // CO2
  XW += x[12] * 30.026000;                   // CH2O
  XW += x[13] * 26.038000;                   // C2H2
  XW += x[14] * 28.054000;                   // C2H4
  XW += x[15] * 30.070000;                   // C2H6
  XW += x[16] * 41.029000;                   // HCCO
  XW += x[17] * 42.037000;                   // CH2CO
  XW += x[18] * 44.053000;                   // CH3CHO
  XW += x[19] * 41.073000;                   // aC3H5
  XW += x[20] * 42.081000;                   // C3H6
  XW += x[21] * 28.014000;                   // N2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;      //  see Eq 4 in CK Manual
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 22; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 22; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 22; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 2.016000 * XWinv;
  y[1] = x[1] * 1.008000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 31.998000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 18.015000 * XWinv;
  y[6] = x[6] * 33.006000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 15.035000 * XWinv;
  y[9] = x[9] * 16.043000 * XWinv;
  y[10] = x[10] * 28.010000 * XWinv;
  y[11] = x[11] * 44.009000 * XWinv;
  y[12] = x[12] * 30.026000 * XWinv;
  y[13] = x[13] * 26.038000 * XWinv;
  y[14] = x[14] * 28.054000 * XWinv;
  y[15] = x[15] * 30.070000 * XWinv;
  y[16] = x[16] * 41.029000 * XWinv;
  y[17] = x[17] * 42.037000 * XWinv;
  y[18] = x[18] * 44.053000 * XWinv;
  y[19] = x[19] * 41.073000 * XWinv;
  y[20] = x[20] * 42.081000 * XWinv;
  y[21] = x[21] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 22; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 2.016000;   // H2
  CW += c[1] * 1.008000;   // H
  CW += c[2] * 15.999000;  // O
  CW += c[3] * 31.998000;  // O2
  CW += c[4] * 17.007000;  // OH
  CW += c[5] * 18.015000;  // H2O
  CW += c[6] * 33.006000;  // HO2
  CW += c[7] * 34.014000;  // H2O2
  CW += c[8] * 15.035000;  // CH3
  CW += c[9] * 16.043000;  // CH4
  CW += c[10] * 28.010000; // CO
  CW += c[11] * 44.009000; // CO2
  CW += c[12] * 30.026000; // CH2O
  CW += c[13] * 26.038000; // C2H2
  CW += c[14] * 28.054000; // C2H4
  CW += c[15] * 30.070000; // C2H6
  CW += c[16] * 41.029000; // HCCO
  CW += c[17] * 42.037000; // CH2CO
  CW += c[18] * 44.053000; // CH3CHO
  CW += c[19] * 41.073000; // aC3H5
  CW += c[20] * 42.081000; // C3H6
  CW += c[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 2.016000 * CWinv;
  y[1] = c[1] * 1.008000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 31.998000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 18.015000 * CWinv;
  y[6] = c[6] * 33.006000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 15.035000 * CWinv;
  y[9] = c[9] * 16.043000 * CWinv;
  y[10] = c[10] * 28.010000 * CWinv;
  y[11] = c[11] * 44.009000 * CWinv;
  y[12] = c[12] * 30.026000 * CWinv;
  y[13] = c[13] * 26.038000 * CWinv;
  y[14] = c[14] * 28.054000 * CWinv;
  y[15] = c[15] * 30.070000 * CWinv;
  y[16] = c[16] * 41.029000 * CWinv;
  y[17] = c[17] * 42.037000 * CWinv;
  y[18] = c[18] * 44.053000 * CWinv;
  y[19] = c[19] * 41.073000 * CWinv;
  y[20] = c[20] * 42.081000 * CWinv;
  y[21] = c[21] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 4.124237409798234e+07;  // H2
  cvms[1] *= 8.248474819596468e+07;  // H
  cvms[2] *= 5.196863940342046e+06;  // O
  cvms[3] *= 2.598431970171023e+06;  // O2
  cvms[4] *= 4.888847308845322e+06;  // OH
  cvms[5] *= 4.615299815794193e+06;  // H2O
  cvms[6] *= 2.519076112874398e+06;  // HO2
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 5.530071578419182e+06;  // CH3
  cvms[9] *= 5.182610869633635e+06;  // CH4
  cvms[10] *= 2.968390795484913e+06; // CO
  cvms[11] *= 1.889264154639560e+06; // CO2
  cvms[12] *= 2.769087663409458e+06; // CH2O
  cvms[13] *= 3.193203248388218e+06; // C2H2
  cvms[14] *= 2.963735160103101e+06; // C2H4
  cvms[15] *= 2.765035789209591e+06; // C2H6
  cvms[16] *= 2.026484344769124e+06; // HCCO
  cvms[17] *= 1.977891528451897e+06; // CH2CO
  cvms[18] *= 1.887377163451579e+06; // CH3CHO
  cvms[19] *= 2.024313446340233e+06; // aC3H5
  cvms[20] *= 1.975823440068734e+06; // C3H6
  cvms[21] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 4.124237409798234e+07;  // H2
  cpms[1] *= 8.248474819596468e+07;  // H
  cpms[2] *= 5.196863940342046e+06;  // O
  cpms[3] *= 2.598431970171023e+06;  // O2
  cpms[4] *= 4.888847308845322e+06;  // OH
  cpms[5] *= 4.615299815794193e+06;  // H2O
  cpms[6] *= 2.519076112874398e+06;  // HO2
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 5.530071578419182e+06;  // CH3
  cpms[9] *= 5.182610869633635e+06;  // CH4
  cpms[10] *= 2.968390795484913e+06; // CO
  cpms[11] *= 1.889264154639560e+06; // CO2
  cpms[12] *= 2.769087663409458e+06; // CH2O
  cpms[13] *= 3.193203248388218e+06; // C2H2
  cpms[14] *= 2.963735160103101e+06; // C2H4
  cpms[15] *= 2.765035789209591e+06; // C2H6
  cpms[16] *= 2.026484344769124e+06; // HCCO
  cpms[17] *= 1.977891528451897e+06; // CH2CO
  cpms[18] *= 1.887377163451579e+06; // CH3CHO
  cpms[19] *= 2.024313446340233e+06; // aC3H5
  cpms[20] *= 1.975823440068734e+06; // C3H6
  cpms[21] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 22; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 22; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 4.124237409798234e+07;  // H2
  sms[1] *= 8.248474819596468e+07;  // H
  sms[2] *= 5.196863940342046e+06;  // O
  sms[3] *= 2.598431970171023e+06;  // O2
  sms[4] *= 4.888847308845322e+06;  // OH
  sms[5] *= 4.615299815794193e+06;  // H2O
  sms[6] *= 2.519076112874398e+06;  // HO2
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 5.530071578419182e+06;  // CH3
  sms[9] *= 5.182610869633635e+06;  // CH4
  sms[10] *= 2.968390795484913e+06; // CO
  sms[11] *= 1.889264154639560e+06; // CO2
  sms[12] *= 2.769087663409458e+06; // CH2O
  sms[13] *= 3.193203248388218e+06; // C2H2
  sms[14] *= 2.963735160103101e+06; // C2H4
  sms[15] *= 2.765035789209591e+06; // C2H6
  sms[16] *= 2.026484344769124e+06; // HCCO
  sms[17] *= 1.977891528451897e+06; // CH2CO
  sms[18] *= 1.887377163451579e+06; // CH3CHO
  sms[19] *= 2.024313446340233e+06; // aC3H5
  sms[20] *= 1.975823440068734e+06; // C3H6
  sms[21] *= 2.967966951578939e+06; // N2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* tc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 2: CH + CO (+M) <=> HCCO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[0] * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[0] = Corr * k_f[0] * (sc[10]);
    qr[0] = Corr * k_f[0] * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
            (sc[16]);
  }

  {
    // reaction 3: H + HCO (+M) <=> CH2O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[1] * 1350000000000 *
                             exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[1] = Corr * k_f[1] * (sc[1]);
    qr[1] = Corr * k_f[1] * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) *
            (sc[12]);
  }

  {
    // reaction 4: CH2 + H (+M) <=> CH3 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[2] * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[2] = Corr * k_f[2] * (sc[1]);
    qr[2] = Corr * k_f[2] * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) *
            (sc[8]);
  }

  {
    // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[3] * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[3] = Corr * k_f[3] * (sc[10]);
    qr[3] = Corr * k_f[3] * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
            (sc[17]);
  }

  {
    // reaction 6: CH2O + H (+M) <=> CH3O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[4] * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[4] = Corr * k_f[4] * (sc[1] * sc[12]);
    qr[4] =
      Corr * k_f[4] * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) * (1.0);
  }

  {
    // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[5] * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[5] = Corr * k_f[5] * (sc[8]);
    qr[5] = Corr * k_f[5] * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) *
            (sc[18]);
  }

  {
    // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[6] * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[6] = Corr * k_f[6] * (1.0);
    qr[6] = Corr * k_f[6] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
            (refCinv) * (sc[1] * sc[13]);
  }

  {
    // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[7] * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[7] = Corr * k_f[7] * (sc[1] * sc[17]);
    qr[7] =
      Corr * k_f[7] * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) * (1.0);
  }

  {
    // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[8] * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[8] = Corr * k_f[8] * (sc[1]);
    qr[8] = Corr * k_f[8] * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) *
            (sc[14]);
  }

  {
    // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[9] * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[9] = Corr * k_f[9] * (sc[8]);
    qr[9] = Corr * k_f[9] * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) *
            (sc[20]);
  }

  {
    // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[10] * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[10] = Corr * k_f[10] * (sc[1]);
    qr[10] = Corr * k_f[10] * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) *
             (refC) * (sc[18]);
  }

  {
    // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[11] * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[11] = Corr * k_f[11] * (sc[14]);
    qr[11] = Corr * k_f[11] * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
             (refCinv) * (sc[0]);
  }

  {
    // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[12] * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[12] = Corr * k_f[12] * (sc[1] * sc[14]);
    qr[12] = Corr * k_f[12] * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) *
             (refC) * (1.0);
  }

  {
    // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[13] * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[13] = Corr * k_f[13] * (sc[1]);
    qr[13] = Corr * k_f[13] * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) *
             (refC) * (sc[15]);
  }

  {
    // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[14] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[14] = Corr * k_f[14] * (sc[1] * sc[20]);
    qr[14] = Corr * k_f[14] * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) *
             (refC) * (1.0);
  }

  {
    // reaction 20: C2H2 (+M) <=> H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (2.5 - 1) * sc[13] +
                       (2.5 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[15] * 2450000000 *
                             exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    qf[15] = Corr * k_f[15] * (sc[13]);
    qr[15] = Corr * k_f[15] * exp(-(g_RT[13] - g_RT_qss[5])) * (1.0);
  }

  {
    // reaction 33: HCO + M <=> CO + H + M
    const amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                             (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                             (3 - 1) * sc[14] + (3 - 1) * sc[15];
    qf[16] = Corr * k_f[16] * (1.0);
    qr[16] = Corr * k_f[16] * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (refCinv) * (sc[1] * sc[10]);
  }

  {
    // reaction 54: CH + O <=> CO + H
    qf[17] = k_f[17] * (sc[2]);
    qr[17] = k_f[17] * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
             (sc[1] * sc[10]);
  }

  {
    // reaction 55: CH + OH <=> H + HCO
    qf[18] = k_f[18] * (sc[4]);
    qr[18] = k_f[18] * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 56: CH + H2 <=> CH2 + H
    qf[19] = k_f[19] * (sc[0]);
    qr[19] =
      k_f[19] * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) * (sc[1]);
  }

  {
    // reaction 57: CH + H2O <=> CH2O + H
    qf[20] = k_f[20] * (sc[5]);
    qr[20] = k_f[20] * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 58: CH + O2 <=> HCO + O
    qf[21] = k_f[21] * (sc[3]);
    qr[21] = k_f[21] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[2]);
  }

  {
    // reaction 59: CH + CO2 <=> CO + HCO
    qf[22] = k_f[22] * (sc[11]);
    qr[22] = k_f[22] *
             exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[10]);
  }

  {
    // reaction 60: H + HCO <=> CO + H2
    qf[23] = k_f[23] * (sc[1]);
    qr[23] = k_f[23] * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 61: HCO + O <=> CO + OH
    qf[24] = k_f[24] * (sc[2]);
    qr[24] = k_f[24] * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
             (sc[4] * sc[10]);
  }

  {
    // reaction 62: HCO + O <=> CO2 + H
    qf[25] = k_f[25] * (sc[2]);
    qr[25] = k_f[25] * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
             (sc[1] * sc[11]);
  }

  {
    // reaction 63: HCO + OH <=> CO + H2O
    qf[26] = k_f[26] * (sc[4]);
    qr[26] = k_f[26] * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 64: HCO + O2 <=> CO + HO2
    qf[27] = k_f[27] * (sc[3]);
    qr[27] = k_f[27] * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
             (sc[6] * sc[10]);
  }

  {
    // reaction 65: CH2 + H2 <=> CH3 + H
    qf[28] = k_f[28] * (sc[0]);
    qr[28] = k_f[28] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 66: CH2 + O <=> H + HCO
    qf[29] = k_f[29] * (sc[2]);
    qr[29] = k_f[29] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 67: CH2 + O2 <=> HCO + OH
    qf[30] = k_f[30] * (sc[3]);
    qr[30] =
      k_f[30] * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 68: CH2 + O2 <=> CO2 + 2 H
    qf[31] = k_f[31] * (sc[3]);
    qr[31] = k_f[31] *
             exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
             (refCinv) * (sc[1] * sc[1] * sc[11]);
  }

  {
    // reaction 69: CH2 + OH <=> CH2O + H
    qf[32] = k_f[32] * (sc[4]);
    qr[32] = k_f[32] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 70: CH2 + OH <=> CH + H2O
    qf[33] = k_f[33] * (sc[4]);
    qr[33] =
      k_f[33] * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 71: CH2 + HO2 <=> CH2O + OH
    qf[34] = k_f[34] * (sc[6]);
    qr[34] = k_f[34] * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 72: CH + CH2 <=> C2H2 + H
    // Remove forward reaction
    // qf[35] = k_f[35] * (1.0);
    qf[35] = 0.0;
    qr[35] = k_f[35] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 73: 2 CH2 <=> C2H2 + H2
    // Remove forward reaction
    // qf[36] = k_f[36] * (1.0);
    qf[36] = 0.0;
    qr[36] = k_f[36] * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 74: CH2* + N2 <=> CH2 + N2
    qf[37] = k_f[37] * (sc[21]);
    qr[37] = k_f[37] * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[21]);
  }

  {
    // reaction 75: CH2* + H <=> CH + H2
    qf[38] = k_f[38] * (sc[1]);
    qr[38] = k_f[38] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
             (sc[0]);
  }

  {
    // reaction 76: CH2* + O <=> CO + H2
    qf[39] = k_f[39] * (sc[2]);
    qr[39] = k_f[39] * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 77: CH2* + O <=> H + HCO
    qf[40] = k_f[40] * (sc[2]);
    qr[40] = k_f[40] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 78: CH2* + OH <=> CH2O + H
    qf[41] = k_f[41] * (sc[4]);
    qr[41] = k_f[41] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 79: CH2* + H2 <=> CH3 + H
    qf[42] = k_f[42] * (sc[0]);
    qr[42] = k_f[42] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 80: CH2* + O2 <=> CO + H + OH
    qf[43] = k_f[43] * (sc[3]);
    qr[43] = k_f[43] *
             exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
             (refCinv) * (sc[1] * sc[4] * sc[10]);
  }

  {
    // reaction 81: CH2* + O2 <=> CO + H2O
    qf[44] = k_f[44] * (sc[3]);
    qr[44] = k_f[44] * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 82: CH2* + H2O <=> CH2 + H2O
    qf[45] = k_f[45] * (sc[5]);
    qr[45] =
      k_f[45] * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 83: CH2* + CO <=> CH2 + CO
    qf[46] = k_f[46] * (sc[10]);
    qr[46] = k_f[46] * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[10]);
  }

  {
    // reaction 84: CH2* + CO2 <=> CH2 + CO2
    qf[47] = k_f[47] * (sc[11]);
    qr[47] = k_f[47] * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[11]);
  }

  {
    // reaction 85: CH2* + CO2 <=> CH2O + CO
    qf[48] = k_f[48] * (sc[11]);
    qr[48] = k_f[48] * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
             (sc[10] * sc[12]);
  }

  {
    // reaction 86: CH2O + H <=> H2 + HCO
    qf[49] = k_f[49] * (sc[1] * sc[12]);
    qr[49] =
      k_f[49] * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) * (sc[0]);
  }

  {
    // reaction 87: CH2O + O <=> HCO + OH
    qf[50] = k_f[50] * (sc[2] * sc[12]);
    qr[50] =
      k_f[50] * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 88: CH2O + OH <=> H2O + HCO
    qf[51] = k_f[51] * (sc[4] * sc[12]);
    qr[51] =
      k_f[51] * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) * (sc[5]);
  }

  {
    // reaction 89: CH2O + O2 <=> HCO + HO2
    qf[52] = k_f[52] * (sc[3] * sc[12]);
    qr[52] =
      k_f[52] * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) * (sc[6]);
  }

  {
    // reaction 90: CH2O + HO2 <=> H2O2 + HCO
    qf[53] = k_f[53] * (sc[6] * sc[12]);
    qr[53] =
      k_f[53] * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 91: CH + CH2O <=> CH2CO + H
    qf[54] = k_f[54] * (sc[12]);
    qr[54] = k_f[54] * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 93: CH3 + OH <=> CH2 + H2O
    qf[55] = k_f[55] * (sc[4] * sc[8]);
    qr[55] =
      k_f[55] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 94: CH3 + OH <=> CH2* + H2O
    qf[56] = k_f[56] * (sc[4] * sc[8]);
    qr[56] =
      k_f[56] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 95: CH3 + O2 <=> CH3O + O
    qf[57] = k_f[57] * (sc[3] * sc[8]);
    qr[57] =
      k_f[57] * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) * (sc[2]);
  }

  {
    // reaction 98: CH3 + HO2 <=> CH3O + OH
    qf[58] = k_f[58] * (sc[6] * sc[8]);
    qr[58] =
      k_f[58] * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) * (sc[4]);
  }

  {
    // reaction 100: CH + CH3 <=> C2H3 + H
    qf[59] = k_f[59] * (sc[8]);
    qr[59] = k_f[59] * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
             (sc[1]);
  }

  {
    // reaction 101: CH3 + HCO <=> CH4 + CO
    qf[60] = k_f[60] * (sc[8]);
    qr[60] = k_f[60] * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
             (sc[9] * sc[10]);
  }

  {
    // reaction 102: CH2O + CH3 <=> CH4 + HCO
    qf[61] = k_f[61] * (sc[8] * sc[12]);
    qr[61] =
      k_f[61] * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) * (sc[9]);
  }

  {
    // reaction 103: CH2 + CH3 <=> C2H4 + H
    qf[62] = k_f[62] * (sc[8]);
    qr[62] = k_f[62] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 104: CH2* + CH3 <=> C2H4 + H
    qf[63] = k_f[63] * (sc[8]);
    qr[63] = k_f[63] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 105: 2 CH3 <=> C2H5 + H
    qf[64] = k_f[64] * (sc[8] * sc[8]);
    qr[64] =
      k_f[64] * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) * (sc[1]);
  }

  {
    // reaction 107: CH3O + H <=> CH2O + H2
    qf[65] = k_f[65] * (sc[1]);
    qr[65] = k_f[65] * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
             (sc[0] * sc[12]);
  }

  {
    // reaction 108: CH3O + H <=> CH3 + OH
    qf[66] = k_f[66] * (sc[1]);
    qr[66] = k_f[66] * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) *
             (sc[4] * sc[8]);
  }

  {
    // reaction 109: CH3O + H <=> CH2* + H2O
    qf[67] = k_f[67] * (sc[1]);
    qr[67] =
      k_f[67] * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) * (sc[5]);
  }

  {
    // reaction 110: CH3O + O <=> CH2O + OH
    qf[68] = k_f[68] * (sc[2]);
    qr[68] = k_f[68] * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 111: CH3O + OH <=> CH2O + H2O
    qf[69] = k_f[69] * (sc[4]);
    qr[69] = k_f[69] * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
             (sc[5] * sc[12]);
  }

  {
    // reaction 112: CH3O + O2 <=> CH2O + HO2
    qf[70] = k_f[70] * (sc[3]);
    qr[70] = k_f[70] * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
             (sc[6] * sc[12]);
  }

  {
    // reaction 116: CH + CH4 <=> C2H4 + H
    qf[71] = k_f[71] * (sc[9]);
    qr[71] = k_f[71] * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 117: CH2 + CH4 <=> 2 CH3
    qf[72] = k_f[72] * (sc[9]);
    qr[72] = k_f[72] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 118: CH2* + CH4 <=> 2 CH3
    qf[73] = k_f[73] * (sc[9]);
    qr[73] = k_f[73] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 119: H + HCCO <=> CH2* + CO
    qf[74] = k_f[74] * (sc[1] * sc[16]);
    qr[74] =
      k_f[74] * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) * (sc[10]);
  }

  {
    // reaction 122: CH + HCCO <=> C2H2 + CO
    qf[75] = k_f[75] * (sc[16]);
    qr[75] = k_f[75] * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
             (sc[10] * sc[13]);
  }

  {
    // reaction 123: CH2 + HCCO <=> C2H3 + CO
    qf[76] = k_f[76] * (sc[16]);
    qr[76] = k_f[76] *
             exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 126: C2H2 + O <=> CH2 + CO
    qf[77] = k_f[77] * (sc[2] * sc[13]);
    qr[77] =
      k_f[77] * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) * (sc[10]);
  }

  {
    // reaction 129: C2H2 + HCO <=> C2H3 + CO
    qf[78] = k_f[78] * (sc[13]);
    qr[78] = k_f[78] *
             exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 130: H + H2CC <=> C2H2 + H
    qf[79] = k_f[79] * (sc[1]);
    qr[79] = k_f[79] * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 131: H2CC + O <=> CH2 + CO
    qf[80] = k_f[80] * (sc[2]);
    qr[80] = k_f[80] * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[10]);
  }

  {
    // reaction 132: H2CC + OH <=> CH2CO + H
    qf[81] = k_f[81] * (sc[4]);
    qr[81] = k_f[81] * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 133: H2CC + O2 <=> CH2 + CO2
    qf[82] = k_f[82] * (sc[3]);
    qr[82] = k_f[82] * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[11]);
  }

  {
    // reaction 137: CH2CO + O <=> CH2 + CO2
    qf[83] = k_f[83] * (sc[2] * sc[17]);
    qr[83] =
      k_f[83] * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) * (sc[11]);
  }

  {
    // reaction 139: C2H3 + H <=> C2H2 + H2
    qf[84] = k_f[84] * (sc[1]);
    qr[84] = k_f[84] * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 140: C2H3 + H <=> H2 + H2CC
    qf[85] = k_f[85] * (sc[1]);
    qr[85] = k_f[85] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
             (sc[0]);
  }

  {
    // reaction 141: C2H3 + O <=> CH2CO + H
    qf[86] = k_f[86] * (sc[2]);
    qr[86] = k_f[86] * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 142: C2H3 + O <=> CH3 + CO
    qf[87] = k_f[87] * (sc[2]);
    qr[87] = k_f[87] * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 143: C2H3 + OH <=> C2H2 + H2O
    qf[88] = k_f[88] * (sc[4]);
    qr[88] = k_f[88] * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
             (sc[5] * sc[13]);
  }

  {
    // reaction 144: C2H3 + O2 <=> C2H2 + HO2
    qf[89] = k_f[89] * (sc[3]);
    qr[89] = k_f[89] * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
             (sc[6] * sc[13]);
  }

  {
    // reaction 145: C2H3 + O2 <=> CH2CHO + O
    qf[90] = k_f[90] * (sc[3]);
    qr[90] = k_f[90] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[2]);
  }

  {
    // reaction 146: C2H3 + O2 <=> CH2O + HCO
    qf[91] = k_f[91] * (sc[3]);
    qr[91] = k_f[91] * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
             (sc[12]);
  }

  {
    // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
    qf[92] = k_f[92] * (sc[6]);
    qr[92] = k_f[92] * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[4]);
  }

  {
    // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
    qf[93] = k_f[93] * (sc[7]);
    qr[93] = k_f[93] * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
             (sc[6] * sc[14]);
  }

  {
    // reaction 149: C2H3 + HCO <=> C2H4 + CO
    // Remove forward reaction
    // qf[94] = k_f[94] * (1.0);
    qf[94] = 0.0;
    qr[94] = k_f[94] *
             exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
             (sc[10] * sc[14]);
  }

  {
    // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
    qf[95] = k_f[95] * (sc[8]);
    qr[95] = k_f[95] * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
             (sc[9] * sc[13]);
  }

  {
    // reaction 151: C2H3 + CH3 <=> H + aC3H5
    qf[96] = k_f[96] * (sc[8]);
    qr[96] = k_f[96] * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
             (sc[1] * sc[19]);
  }

  {
    // reaction 152: CH2CHO <=> CH3 + CO
    qf[97] = k_f[97] * (1.0);
    qr[97] = k_f[97] * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 153: CH2CHO + H <=> CH3 + HCO
    qf[98] = k_f[98] * (sc[1]);
    qr[98] =
      k_f[98] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) * (sc[8]);
  }

  {
    // reaction 154: CH2CHO + H <=> CH2CO + H2
    qf[99] = k_f[99] * (sc[1]);
    qr[99] = k_f[99] * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
             (sc[0] * sc[17]);
  }

  {
    // reaction 155: CH2CHO + O <=> CH2CO + OH
    qf[100] = k_f[100] * (sc[2]);
    qr[100] = k_f[100] * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
              (sc[4] * sc[17]);
  }

  {
    // reaction 156: CH2CHO + OH <=> CH2CO + H2O
    qf[101] = k_f[101] * (sc[4]);
    qr[101] = k_f[101] * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
              (sc[5] * sc[17]);
  }

  {
    // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
    qf[102] = k_f[102] * (sc[3]);
    qr[102] = k_f[102] * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
              (sc[6] * sc[17]);
  }

  {
    // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
    qf[103] = k_f[103] * (sc[3]);
    qr[103] = k_f[103] *
              exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
              (refCinv) * (sc[4] * sc[10] * sc[12]);
  }

  {
    // reaction 159: C2H4 + H <=> C2H3 + H2
    qf[104] = k_f[104] * (sc[1] * sc[14]);
    qr[104] =
      k_f[104] * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) * (sc[0]);
  }

  {
    // reaction 160: C2H4 + O <=> C2H3 + OH
    qf[105] = k_f[105] * (sc[2] * sc[14]);
    qr[105] =
      k_f[105] * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) * (sc[4]);
  }

  {
    // reaction 161: C2H4 + O <=> CH3 + HCO
    qf[106] = k_f[106] * (sc[2] * sc[14]);
    qr[106] =
      k_f[106] * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) * (sc[8]);
  }

  {
    // reaction 162: C2H4 + O <=> CH2 + CH2O
    qf[107] = k_f[107] * (sc[2] * sc[14]);
    qr[107] =
      k_f[107] * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) * (sc[12]);
  }

  {
    // reaction 163: C2H4 + OH <=> C2H3 + H2O
    qf[108] = k_f[108] * (sc[4] * sc[14]);
    qr[108] =
      k_f[108] * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) * (sc[5]);
  }

  {
    // reaction 164: C2H4 + O2 <=> C2H3 + HO2
    qf[109] = k_f[109] * (sc[3] * sc[14]);
    qr[109] =
      k_f[109] * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) * (sc[6]);
  }

  {
    // reaction 166: C2H4 + HCO <=> C2H5 + CO
    qf[110] = k_f[110] * (sc[14]);
    qr[110] = k_f[110] *
              exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
              (sc[10]);
  }

  {
    // reaction 167: C2H4 + CH2 <=> H + aC3H5
    qf[111] = k_f[111] * (sc[14]);
    qr[111] = k_f[111] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
    qf[112] = k_f[112] * (sc[14]);
    qr[112] = k_f[112] *
              exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 169: C2H4 + CH2* <=> H + aC3H5
    qf[113] = k_f[113] * (sc[14]);
    qr[113] = k_f[113] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
    qf[114] = k_f[114] * (sc[8] * sc[14]);
    qr[114] =
      k_f[114] * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) * (sc[9]);
  }

  {
    // reaction 171: C2H4 + CH3 <=> nC3H7
    qf[115] = k_f[115] * (sc[8] * sc[14]);
    qr[115] =
      k_f[115] * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (1.0);
  }

  {
    // reaction 172: C2H5 + H <=> C2H4 + H2
    qf[116] = k_f[116] * (sc[1]);
    qr[116] = k_f[116] * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
              (sc[0] * sc[14]);
  }

  {
    // reaction 173: C2H5 + O <=> CH2O + CH3
    qf[117] = k_f[117] * (sc[2]);
    qr[117] = k_f[117] * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (sc[8] * sc[12]);
  }

  {
    // reaction 174: C2H5 + O <=> CH3CHO + H
    qf[118] = k_f[118] * (sc[2]);
    qr[118] = k_f[118] * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
              (sc[1] * sc[18]);
  }

  {
    // reaction 175: C2H5 + O2 <=> C2H4 + HO2
    qf[119] = k_f[119] * (sc[3]);
    qr[119] = k_f[119] * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
              (sc[6] * sc[14]);
  }

  {
    // reaction 176: C2H5 + HO2 <=> C2H6 + O2
    qf[120] = k_f[120] * (sc[6]);
    qr[120] = k_f[120] * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
              (sc[3] * sc[15]);
  }

  {
    // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
    qf[121] = k_f[121] * (sc[6]);
    qr[121] = k_f[121] * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
              (sc[7] * sc[14]);
  }

  {
    // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
    qf[122] = k_f[122] * (sc[6]);
    qr[122] = k_f[122] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (refCinv) * (sc[4] * sc[8] * sc[12]);
  }

  {
    // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
    qf[123] = k_f[123] * (sc[7]);
    qr[123] = k_f[123] * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
              (sc[6] * sc[15]);
  }

  {
    // reaction 180: C2H5 + HCO <=> C2H6 + CO
    // Remove forward reaction
    // qf[124] = k_f[124] * (1.0);
    qf[124] = 0.0;
    qr[124] = k_f[124] *
              exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
              (sc[10] * sc[15]);
  }

  {
    // reaction 181: C2H6 + H <=> C2H5 + H2
    qf[125] = k_f[125] * (sc[1] * sc[15]);
    qr[125] =
      k_f[125] * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) * (sc[0]);
  }

  {
    // reaction 182: C2H6 + O <=> C2H5 + OH
    qf[126] = k_f[126] * (sc[2] * sc[15]);
    qr[126] =
      k_f[126] * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) * (sc[4]);
  }

  {
    // reaction 183: C2H6 + OH <=> C2H5 + H2O
    qf[127] = k_f[127] * (sc[4] * sc[15]);
    qr[127] =
      k_f[127] * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) * (sc[5]);
  }

  {
    // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
    qf[128] = k_f[128] * (sc[15]);
    qr[128] = k_f[128] *
              exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) * (sc[8]);
  }

  {
    // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
    qf[129] = k_f[129] * (sc[8] * sc[15]);
    qr[129] =
      k_f[129] * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) * (sc[9]);
  }

  {
    // reaction 186: H + aC3H5 <=> CH4 + H2CC
    qf[130] = k_f[130] * (sc[1] * sc[19]);
    qr[130] =
      k_f[130] * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
    qf[131] = k_f[131] * (sc[6] * sc[19]);
    qr[131] = k_f[131] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
              (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 189: HCO + aC3H5 <=> C3H6 + CO
    qf[132] = k_f[132] * (sc[19]);
    qr[132] = k_f[132] * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
              (sc[10] * sc[20]);
  }

  {
    // reaction 193: C3H6 + O => C2H5 + HCO
    qf[133] = k_f[133] * (sc[2] * sc[20]);
    qr[133] = 0.0;
  }

  {
    // reaction 198: H + nC3H7 <=> C2H5 + CH3
    qf[134] = k_f[134] * (sc[1]);
    qr[134] = k_f[134] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
              (sc[8]);
  }

  {
    // reaction 199: H + nC3H7 <=> C3H6 + H2
    qf[135] = k_f[135] * (sc[1]);
    qr[135] = k_f[135] * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
              (sc[0] * sc[20]);
  }

  {
    // reaction 200: O + nC3H7 <=> C2H5 + CH2O
    qf[136] = k_f[136] * (sc[2]);
    qr[136] = k_f[136] *
              exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) * (sc[12]);
  }

  {
    // reaction 201: OH + nC3H7 <=> C3H6 + H2O
    qf[137] = k_f[137] * (sc[4]);
    qr[137] = k_f[137] * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
              (sc[5] * sc[20]);
  }

  {
    // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
    qf[138] = k_f[138] * (sc[3]);
    qr[138] = k_f[138] * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
              (sc[6] * sc[20]);
  }

  {
    // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
    qf[139] = k_f[139] * (sc[6]);
    qr[139] =
      k_f[139] *
      exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
    qf[140] = k_f[140] * (sc[8]);
    qr[140] = k_f[140] * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
              (sc[9] * sc[20]);
  }

  {
    // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
    // Remove forward reaction
    // qf[141] = k_f[141] * (1.0);
    qf[141] = 0.0;
    qr[141] = k_f[141] *
              exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
              (sc[8] * sc[19]);
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(const amrex::Real* tc, amrex::Real invT, amrex::Real* k_f)
{
  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  k_f[0] = 50000000;
  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  k_f[1] = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  k_f[2] = 25000000000 * exp((-0.8) * tc[0]);
  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  k_f[3] = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  k_f[4] = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f[5] = 18000000;
  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  k_f[6] = 386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  k_f[7] = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  k_f[8] = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f[9] = 25000000;
  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f[10] = 100000000;
  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  k_f[11] = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  k_f[12] = 1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  k_f[13] = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  k_f[14] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  k_f[15] = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  // reaction 33: HCO + M <=> CO + H + M
  k_f[16] = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  // reaction 54: CH + O <=> CO + H
  k_f[17] = 57000000;
  // reaction 55: CH + OH <=> H + HCO
  k_f[18] = 30000000;
  // reaction 56: CH + H2 <=> CH2 + H
  k_f[19] = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  // reaction 57: CH + H2O <=> CH2O + H
  k_f[20] = 5710000 * exp(-(-379.928582682563) * invT);
  // reaction 58: CH + O2 <=> HCO + O
  k_f[21] = 33000000;
  // reaction 59: CH + CO2 <=> CO + HCO
  k_f[22] = 3400000 * exp(-(347.219499405257) * invT);
  // reaction 60: H + HCO <=> CO + H2
  k_f[23] = 73400000;
  // reaction 61: HCO + O <=> CO + OH
  k_f[24] = 30000000;
  // reaction 62: HCO + O <=> CO2 + H
  k_f[25] = 30000000;
  // reaction 63: HCO + OH <=> CO + H2O
  k_f[26] = 50000000;
  // reaction 64: HCO + O2 <=> CO + HO2
  k_f[27] = 7600000 * exp(-(201.286666321888) * invT);
  // reaction 65: CH2 + H2 <=> CH3 + H
  k_f[28] = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  // reaction 66: CH2 + O <=> H + HCO
  k_f[29] = 80000000;
  // reaction 67: CH2 + O2 <=> HCO + OH
  k_f[30] = 10560000 * exp(-(754.82499870708) * invT);
  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  k_f[31] = 2640000 * exp(-(754.82499870708) * invT);
  // reaction 69: CH2 + OH <=> CH2O + H
  k_f[32] = 20000000;
  // reaction 70: CH2 + OH <=> CH + H2O
  k_f[33] = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  // reaction 71: CH2 + HO2 <=> CH2O + OH
  k_f[34] = 20000000;
  // reaction 72: CH + CH2 <=> C2H2 + H
  k_f[35] = 40000000;
  // reaction 73: 2 CH2 <=> C2H2 + H2
  k_f[36] = 32000000;
  // reaction 74: CH2* + N2 <=> CH2 + N2
  k_f[37] = 15000000 * exp(-(301.929999482832) * invT);
  // reaction 75: CH2* + H <=> CH + H2
  k_f[38] = 30000000;
  // reaction 76: CH2* + O <=> CO + H2
  k_f[39] = 15000000;
  // reaction 77: CH2* + O <=> H + HCO
  k_f[40] = 15000000;
  // reaction 78: CH2* + OH <=> CH2O + H
  k_f[41] = 30000000;
  // reaction 79: CH2* + H2 <=> CH3 + H
  k_f[42] = 70000000;
  // reaction 80: CH2* + O2 <=> CO + H + OH
  k_f[43] = 28000000;
  // reaction 81: CH2* + O2 <=> CO + H2O
  k_f[44] = 12000000;
  // reaction 82: CH2* + H2O <=> CH2 + H2O
  k_f[45] = 30000000;
  // reaction 83: CH2* + CO <=> CH2 + CO
  k_f[46] = 9000000;
  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  k_f[47] = 7000000;
  // reaction 85: CH2* + CO2 <=> CH2O + CO
  k_f[48] = 14000000;
  // reaction 86: CH2O + H <=> H2 + HCO
  k_f[49] = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  // reaction 87: CH2O + O <=> HCO + OH
  k_f[50] = 39000000 * exp(-(1781.38699694871) * invT);
  // reaction 88: CH2O + OH <=> H2O + HCO
  k_f[51] = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  // reaction 89: CH2O + O2 <=> HCO + HO2
  k_f[52] = 100000000 * exp(-(20128.6666321888) * invT);
  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  k_f[53] = 1000000 * exp(-(4025.73332643776) * invT);
  // reaction 91: CH + CH2O <=> CH2CO + H
  k_f[54] = 94600000 * exp(-(-259.156582889431) * invT);
  // reaction 93: CH3 + OH <=> CH2 + H2O
  k_f[55] = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  // reaction 94: CH3 + OH <=> CH2* + H2O
  k_f[56] = 25010000;
  // reaction 95: CH3 + O2 <=> CH3O + O
  k_f[57] = 30830000 * exp(-(14492.6399751759) * invT);
  // reaction 98: CH3 + HO2 <=> CH3O + OH
  k_f[58] = 13400000;
  // reaction 100: CH + CH3 <=> C2H3 + H
  k_f[59] = 30000000;
  // reaction 101: CH3 + HCO <=> CH4 + CO
  k_f[60] = 8480000;
  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  k_f[61] = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  // reaction 103: CH2 + CH3 <=> C2H4 + H
  k_f[62] = 40000000;
  // reaction 104: CH2* + CH3 <=> C2H4 + H
  k_f[63] = 12000000 * exp(-(-286.83349950869) * invT);
  // reaction 105: 2 CH3 <=> C2H5 + H
  k_f[64] = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  // reaction 107: CH3O + H <=> CH2O + H2
  k_f[65] = 20000000;
  // reaction 108: CH3O + H <=> CH3 + OH
  k_f[66] = 32000000;
  // reaction 109: CH3O + H <=> CH2* + H2O
  k_f[67] = 16000000;
  // reaction 110: CH3O + O <=> CH2O + OH
  k_f[68] = 10000000;
  // reaction 111: CH3O + OH <=> CH2O + H2O
  k_f[69] = 5000000;
  // reaction 112: CH3O + O2 <=> CH2O + HO2
  k_f[70] = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  // reaction 116: CH + CH4 <=> C2H4 + H
  k_f[71] = 60000000;
  // reaction 117: CH2 + CH4 <=> 2 CH3
  k_f[72] = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  // reaction 118: CH2* + CH4 <=> 2 CH3
  k_f[73] = 16000000 * exp(-(-286.83349950869) * invT);
  // reaction 119: H + HCCO <=> CH2* + CO
  k_f[74] = 100000000;
  // reaction 122: CH + HCCO <=> C2H2 + CO
  k_f[75] = 50000000;
  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  k_f[76] = 30000000;
  // reaction 126: C2H2 + O <=> CH2 + CO
  k_f[77] = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  k_f[78] = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  // reaction 130: H + H2CC <=> C2H2 + H
  k_f[79] = 100000000;
  // reaction 131: H2CC + O <=> CH2 + CO
  k_f[80] = 100000000;
  // reaction 132: H2CC + OH <=> CH2CO + H
  k_f[81] = 20000000;
  // reaction 133: H2CC + O2 <=> CH2 + CO2
  k_f[82] = 10000000;
  // reaction 137: CH2CO + O <=> CH2 + CO2
  k_f[83] = 1750000 * exp(-(679.342498836372) * invT);
  // reaction 139: C2H3 + H <=> C2H2 + H2
  k_f[84] = 30000000;
  // reaction 140: C2H3 + H <=> H2 + H2CC
  k_f[85] = 60000000;
  // reaction 141: C2H3 + O <=> CH2CO + H
  k_f[86] = 48000000;
  // reaction 142: C2H3 + O <=> CH3 + CO
  k_f[87] = 48000000;
  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  k_f[88] = 30110000;
  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  k_f[89] = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  k_f[90] = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  k_f[91] = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  k_f[92] = 10000000;
  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  k_f[93] = 12100 * exp(-(-299.917132819613) * invT);
  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  k_f[94] = 90330000;
  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  k_f[95] = 392000;
  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  k_f[96] = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  // reaction 152: CH2CHO <=> CH3 + CO
  k_f[97] = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  // reaction 153: CH2CHO + H <=> CH3 + HCO
  k_f[98] = 90000000;
  // reaction 154: CH2CHO + H <=> CH2CO + H2
  k_f[99] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 155: CH2CHO + O <=> CH2CO + OH
  k_f[100] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  k_f[101] = 10000000 * exp(-(1006.43333160944) * invT);
  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  k_f[102] = 140000;
  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  k_f[103] = 18000;
  // reaction 159: C2H4 + H <=> C2H3 + H2
  k_f[104] = 50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
  // reaction 160: C2H4 + O <=> C2H3 + OH
  k_f[105] = 15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
  // reaction 161: C2H4 + O <=> CH3 + HCO
  k_f[106] = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 162: C2H4 + O <=> CH2 + CH2O
  k_f[107] = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  k_f[108] = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  k_f[109] = 42200000 * exp(-(30595.573280927) * invT);
  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  k_f[110] = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  k_f[111] = 20000000 * exp(-(3019.29999482832) * invT);
  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  k_f[112] = 50000000;
  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  k_f[113] = 50000000;
  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  k_f[114] = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  // reaction 171: C2H4 + CH3 <=> nC3H7
  k_f[115] = 330000 * exp(-(3874.76832669634) * invT);
  // reaction 172: C2H5 + H <=> C2H4 + H2
  k_f[116] = 2000000;
  // reaction 173: C2H5 + O <=> CH2O + CH3
  k_f[117] = 16040000;
  // reaction 174: C2H5 + O <=> CH3CHO + H
  k_f[118] = 80200000;
  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  k_f[119] = 20000;
  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  k_f[120] = 300000;
  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  k_f[121] = 300000;
  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f[122] = 24000000;
  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  k_f[123] = 8700 * exp(-(490.133032493797) * invT);
  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  k_f[124] = 120000000;
  // reaction 181: C2H6 + H <=> C2H5 + H2
  k_f[125] = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  // reaction 182: C2H6 + O <=> C2H5 + OH
  k_f[126] = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  k_f[127] = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  k_f[128] = 40000000 * exp(-(-276.769166192596) * invT);
  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  k_f[129] = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  k_f[130] = 20000000 * exp(-(1006.43333160944) * invT);
  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f[131] = 6600000;
  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  k_f[132] = 60000000;
  // reaction 193: C3H6 + O => C2H5 + HCO
  k_f[133] = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  k_f[134] = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  // reaction 199: H + nC3H7 <=> C3H6 + H2
  k_f[135] = 1800000;
  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  k_f[136] = 96000000;
  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  k_f[137] = 24000000;
  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  k_f[138] = 90000;
  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f[139] = 24000000;
  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  k_f[140] = 11000000;
  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  k_f[141] = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA coupling between CH3O  nC3H7  C2H5  CH2CHO  H2CC  C2H3  HCO  CH2*  CH2
  // CH QSSA species 4: CH3O

  amrex::Real CH3O_num = epsilon + 1.0 * qf_co[4] + 1.0 * qf_co[57] +
                         1.0 * qf_co[58] + 1.0 * qr_co[65] + 1.0 * qr_co[66] +
                         1.0 * qr_co[68] + 1.0 * qr_co[69] + 1.0 * qr_co[70];
  amrex::Real CH3O_denom = epsilon - qr_co[4] - qr_co[57] - qr_co[58] -
                           qf_co[65] - qf_co[66] - qf_co[67] - qf_co[68] -
                           qf_co[69] - qf_co[70];
  amrex::Real CH3O_rhs = -CH3O_num / CH3O_denom;

  amrex::Real CH3O_CH2D = (epsilon + 1.0 * qr_co[67]) / CH3O_denom;

  // QSSA species 9: nC3H7

  amrex::Real nC3H7_num = epsilon + 1.0 * qf_co[14] + 1.0 * qf_co[115] +
                          1.0 * qr_co[135] + 1.0 * qr_co[137] +
                          1.0 * qr_co[138] + 1.0 * qr_co[140];
  amrex::Real nC3H7_denom = epsilon - qr_co[14] - qr_co[115] - qf_co[134] -
                            qf_co[135] - qf_co[136] - qf_co[137] - qf_co[138] -
                            qf_co[139] - qf_co[140];
  amrex::Real nC3H7_rhs = -nC3H7_num / nC3H7_denom;

  amrex::Real nC3H7_C2H5 =
    (epsilon + 1.0 * qr_co[134] + 1.0 * qr_co[136] + 1.0 * qr_co[139]) /
    nC3H7_denom;

  // QSSA species 7: C2H5

  amrex::Real C2H5_num =
    epsilon + 1.0 * qf_co[12] + 1.0 * qr_co[13] + 1.0 * qf_co[64] +
    1.0 * qr_co[116] + 1.0 * qr_co[117] + 1.0 * qr_co[118] + 1.0 * qr_co[119] +
    1.0 * qr_co[120] + 1.0 * qr_co[121] + 1.0 * qr_co[122] + 1.0 * qr_co[123] +
    1.0 * qr_co[124] + 1.0 * qf_co[125] + 1.0 * qf_co[126] + 1.0 * qf_co[127] +
    1.0 * qf_co[129] + 1.0 * qr_co[141];
  amrex::Real C2H5_denom =
    epsilon - qr_co[12] - qf_co[13] - qr_co[64] - qr_co[110] - qf_co[116] -
    qf_co[117] - qf_co[118] - qf_co[119] - qf_co[120] - qf_co[121] -
    qf_co[122] - qf_co[123] - qr_co[125] - qr_co[126] - qr_co[127] -
    qr_co[128] - qr_co[129] - qr_co[134] - qr_co[136] - qr_co[139];
  amrex::Real C2H5_rhs = -C2H5_num / C2H5_denom;

  amrex::Real C2H5_nC3H7 =
    (epsilon + 1.0 * qf_co[134] + 1.0 * qf_co[136] + 1.0 * qf_co[139]) /
    C2H5_denom;
  amrex::Real C2H5_HCO = (epsilon + 1.0 * qf_co[110]) / C2H5_denom;
  amrex::Real C2H5_CH2D = (epsilon + 1.0 * qf_co[128]) / C2H5_denom;

  // QSSA species 8: CH2CHO

  amrex::Real CH2CHO_num = epsilon + 1.0 * qf_co[7] + 1.0 * qr_co[10] +
                           1.0 * qr_co[97] + 1.0 * qr_co[99] +
                           1.0 * qr_co[100] + 1.0 * qr_co[101] +
                           1.0 * qr_co[102] + 1.0 * qr_co[103];
  amrex::Real CH2CHO_denom = epsilon - qr_co[7] - qf_co[10] - qr_co[90] -
                             qr_co[92] - qf_co[97] - qf_co[98] - qf_co[99] -
                             qf_co[100] - qf_co[101] - qf_co[102] - qf_co[103];
  amrex::Real CH2CHO_rhs = -CH2CHO_num / CH2CHO_denom;

  amrex::Real CH2CHO_C2H3 =
    (epsilon + 1.0 * qf_co[90] + 1.0 * qf_co[92]) / CH2CHO_denom;
  amrex::Real CH2CHO_HCO = (epsilon + 1.0 * qr_co[98]) / CH2CHO_denom;

  // QSSA species 5: H2CC

  amrex::Real H2CC_num = epsilon + 1.0 * qf_co[11] + 1.0 * qf_co[15] +
                         1.0 * qr_co[79] + 1.0 * qr_co[81] + 1.0 * qf_co[130];
  amrex::Real H2CC_denom = epsilon - qr_co[11] - qr_co[15] - qf_co[79] -
                           qf_co[80] - qf_co[81] - qf_co[82] - qr_co[85] -
                           qr_co[112] - qr_co[130];
  amrex::Real H2CC_rhs = -H2CC_num / H2CC_denom;

  amrex::Real H2CC_C2H3 = (epsilon + 1.0 * qf_co[85]) / H2CC_denom;
  amrex::Real H2CC_CH2D = (epsilon + 1.0 * qf_co[112]) / H2CC_denom;
  amrex::Real H2CC_CH2 =
    (epsilon + 1.0 * qr_co[80] + 1.0 * qr_co[82]) / H2CC_denom;

  // QSSA species 6: C2H3

  amrex::Real C2H3_num =
    epsilon + 1.0 * qr_co[6] + 1.0 * qr_co[8] + 1.0 * qr_co[9] +
    1.0 * qr_co[84] + 1.0 * qr_co[86] + 1.0 * qr_co[87] + 1.0 * qr_co[88] +
    1.0 * qr_co[89] + 1.0 * qr_co[93] + 1.0 * qr_co[94] + 1.0 * qr_co[95] +
    1.0 * qr_co[96] + 1.0 * qf_co[104] + 1.0 * qf_co[105] + 1.0 * qf_co[108] +
    1.0 * qf_co[109] + 1.0 * qf_co[114] + 1.0 * qf_co[131] + 1.0 * qr_co[141];
  amrex::Real C2H3_denom =
    epsilon - qf_co[6] - qf_co[8] - qf_co[9] - qr_co[59] - qr_co[76] -
    qr_co[78] - qf_co[84] - qf_co[85] - qf_co[86] - qf_co[87] - qf_co[88] -
    qf_co[89] - qf_co[90] - qf_co[91] - qf_co[92] - qf_co[93] - qf_co[95] -
    qf_co[96] - qr_co[104] - qr_co[105] - qr_co[108] - qr_co[109] - qr_co[114] -
    qr_co[131];
  amrex::Real C2H3_rhs = -C2H3_num / C2H3_denom;

  amrex::Real C2H3_CH2CHO =
    (epsilon + 1.0 * qr_co[90] + 1.0 * qr_co[92]) / C2H3_denom;
  amrex::Real C2H3_H2CC = (epsilon + 1.0 * qr_co[85]) / C2H3_denom;
  amrex::Real C2H3_HCO =
    (epsilon + 1.0 * qf_co[78] + 1.0 * qr_co[91]) / C2H3_denom;
  amrex::Real C2H3_CH2 = (epsilon + 1.0 * qf_co[76]) / C2H3_denom;
  amrex::Real C2H3_CH = (epsilon + 1.0 * qf_co[59]) / C2H3_denom;

  // QSSA species 3: HCO

  amrex::Real HCO_num =
    epsilon + 1.0 * qr_co[1] + 1.0 * qr_co[5] + 1.0 * qr_co[16] +
    1.0 * qr_co[23] + 1.0 * qr_co[24] + 1.0 * qr_co[25] + 1.0 * qr_co[26] +
    1.0 * qr_co[27] + 1.0 * qf_co[49] + 1.0 * qf_co[50] + 1.0 * qf_co[51] +
    1.0 * qf_co[52] + 1.0 * qf_co[53] + 1.0 * qr_co[60] + 1.0 * qf_co[61] +
    1.0 * qr_co[94] + 1.0 * qf_co[106] + 1.0 * qr_co[124] + 1.0 * qr_co[132];
  amrex::Real HCO_denom =
    epsilon - qf_co[1] - qf_co[5] - qf_co[16] - qr_co[18] - qr_co[21] -
    qr_co[22] - qf_co[23] - qf_co[24] - qf_co[25] - qf_co[26] - qf_co[27] -
    qr_co[29] - qr_co[30] - qr_co[40] - qr_co[49] - qr_co[50] - qr_co[51] -
    qr_co[52] - qr_co[53] - qf_co[60] - qr_co[61] - qf_co[78] - qr_co[91] -
    qr_co[98] - qr_co[106] - qf_co[110] - qf_co[132];
  amrex::Real HCO_rhs = -HCO_num / HCO_denom;

  amrex::Real HCO_C2H5 = (epsilon + 1.0 * qr_co[110]) / HCO_denom;
  amrex::Real HCO_CH2CHO = (epsilon + 1.0 * qf_co[98]) / HCO_denom;
  amrex::Real HCO_C2H3 =
    (epsilon + 1.0 * qr_co[78] + 1.0 * qf_co[91]) / HCO_denom;
  amrex::Real HCO_CH2D = (epsilon + 1.0 * qf_co[40]) / HCO_denom;
  amrex::Real HCO_CH2 =
    (epsilon + 1.0 * qf_co[29] + 1.0 * qf_co[30]) / HCO_denom;
  amrex::Real HCO_CH =
    (epsilon + 1.0 * qf_co[18] + 1.0 * qf_co[21] + 1.0 * qf_co[22]) / HCO_denom;

  // QSSA species 2: CH2*

  amrex::Real CH2D_num = epsilon + 1.0 * qr_co[39] + 1.0 * qr_co[41] +
                         1.0 * qr_co[42] + 1.0 * qr_co[43] + 1.0 * qr_co[44] +
                         1.0 * qr_co[48] + 1.0 * qf_co[56] + 1.0 * qr_co[63] +
                         1.0 * qr_co[73] + 1.0 * qf_co[74] + 1.0 * qr_co[113];
  amrex::Real CH2D_denom =
    epsilon - qf_co[37] - qf_co[38] - qf_co[39] - qf_co[40] - qf_co[41] -
    qf_co[42] - qf_co[43] - qf_co[44] - qf_co[45] - qf_co[46] - qf_co[47] -
    qf_co[48] - qr_co[56] - qf_co[63] - qr_co[67] - qf_co[73] - qr_co[74] -
    qf_co[112] - qf_co[113] - qf_co[128];
  amrex::Real CH2D_rhs = -CH2D_num / CH2D_denom;

  amrex::Real CH2D_CH3O = (epsilon + 1.0 * qf_co[67]) / CH2D_denom;
  amrex::Real CH2D_C2H5 = (epsilon + 1.0 * qr_co[128]) / CH2D_denom;
  amrex::Real CH2D_H2CC = (epsilon + 1.0 * qr_co[112]) / CH2D_denom;
  amrex::Real CH2D_HCO = (epsilon + 1.0 * qr_co[40]) / CH2D_denom;
  amrex::Real CH2D_CH2 = (epsilon + 1.0 * qr_co[37] + 1.0 * qr_co[45] +
                          1.0 * qr_co[46] + 1.0 * qr_co[47]) /
                         CH2D_denom;
  amrex::Real CH2D_CH = (epsilon + 1.0 * qr_co[38]) / CH2D_denom;

  // QSSA species 1: CH2

  amrex::Real CH2_num =
    epsilon + 1.0 * qr_co[2] + 1.0 * qr_co[3] + 1.0 * qr_co[28] +
    1.0 * qr_co[31] + 1.0 * qr_co[32] + 1.0 * qr_co[34] + 1.0 * qr_co[35] +
    2.0 * qr_co[36] + 1.0 * qf_co[55] + 1.0 * qr_co[62] + 1.0 * qr_co[72] +
    1.0 * qf_co[77] + 1.0 * qf_co[83] + 1.0 * qf_co[107] + 1.0 * qr_co[111];
  amrex::Real CH2_denom =
    epsilon - qf_co[2] - qf_co[3] - qr_co[19] - qf_co[28] - qf_co[29] -
    qf_co[30] - qf_co[31] - qf_co[32] - qf_co[33] - qf_co[34] - qf_co[36] -
    qr_co[37] - qr_co[45] - qr_co[46] - qr_co[47] - qr_co[55] - qf_co[62] -
    qf_co[72] - qf_co[76] - qr_co[77] - qr_co[80] - qr_co[82] - qr_co[83] -
    qr_co[107] - qf_co[111];
  amrex::Real CH2_rhs = -CH2_num / CH2_denom;

  amrex::Real CH2_H2CC =
    (epsilon + 1.0 * qf_co[80] + 1.0 * qf_co[82]) / CH2_denom;
  amrex::Real CH2_C2H3 = (epsilon + 1.0 * qr_co[76]) / CH2_denom;
  amrex::Real CH2_HCO =
    (epsilon + 1.0 * qr_co[29] + 1.0 * qr_co[30]) / CH2_denom;
  amrex::Real CH2_CH2D = (epsilon + 1.0 * qf_co[37] + 1.0 * qf_co[45] +
                          1.0 * qf_co[46] + 1.0 * qf_co[47]) /
                         CH2_denom;
  amrex::Real CH2_CH =
    (epsilon + 1.0 * qf_co[19] + 1.0 * qr_co[33]) / CH2_denom;

  // QSSA species 0: CH

  amrex::Real CH_num = epsilon + 1.0 * qr_co[0] + 1.0 * qr_co[17] +
                       1.0 * qr_co[20] + 1.0 * qr_co[35] + 1.0 * qr_co[54] +
                       1.0 * qr_co[71] + 1.0 * qr_co[75];
  amrex::Real CH_denom = epsilon - qf_co[0] - qf_co[17] - qf_co[18] -
                         qf_co[19] - qf_co[20] - qf_co[21] - qf_co[22] -
                         qr_co[33] - qr_co[38] - qf_co[54] - qf_co[59] -
                         qf_co[71] - qf_co[75];
  amrex::Real CH_rhs = -CH_num / CH_denom;

  amrex::Real CH_C2H3 = (epsilon + 1.0 * qr_co[59]) / CH_denom;
  amrex::Real CH_HCO =
    (epsilon + 1.0 * qr_co[18] + 1.0 * qr_co[21] + 1.0 * qr_co[22]) / CH_denom;
  amrex::Real CH_CH2D = (epsilon + 1.0 * qf_co[38]) / CH_denom;
  amrex::Real CH_CH2 = (epsilon + 1.0 * qr_co[19] + 1.0 * qf_co[33]) / CH_denom;

  // Putting it all together
  amrex::Real H_0 = CH2D_CH3O;
  amrex::Real H_1 = C2H5_nC3H7;
  amrex::Real H_2 = HCO_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_3 = CH2D_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_4 = C2H3_CH2CHO;
  amrex::Real H_5 = HCO_CH2CHO;
  amrex::Real H_6 = C2H3_H2CC;
  amrex::Real H_7 = CH2D_H2CC;
  amrex::Real H_8 = CH2_H2CC;
  amrex::Real H_9 = (HCO_C2H3 - CH2CHO_C2H3 * H_5) /
                    ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_10 =
    (CH2_C2H3 - H2CC_C2H3 * H_8) / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_11 = CH_C2H3 / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_12 =
    (CH2D_HCO - C2H5_HCO * H_3) / (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                                   (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_13 = (CH2_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_10) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_14 = (CH_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_11) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_15 =
    ((CH2_CH2D - H2CC_CH2D * H_8) - (HCO_CH2D - C2H5_CH2D * H_2) * H_13) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_16 =
    (CH_CH2D - (HCO_CH2D - C2H5_CH2D * H_2) * H_14) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_17 =
    (((CH_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_11) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_14) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_16) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);
  sc_qss[0] =
    ((((CH_rhs - ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_11) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_14) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_16) -
     ((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) *
       H_17) /
    ((((1 - C2H3_CH * H_11) - (HCO_CH - C2H3_CH * H_9) * H_14) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_16) -
     (((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
       H_17);

  sc_qss[1] =
    (((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) -
     ((((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
       (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
      sc_qss[0])) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);

  sc_qss[2] =
    (((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
       H2CC_rhs * H_7) -
      (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
       ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
        H_12) -
     ((CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * sc_qss[0] +
      ((CH2D_CH2 - H2CC_CH2 * H_7) -
       (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
        sc_qss[1])) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);

  sc_qss[3] =
    ((((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
      ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) -
     ((HCO_CH - C2H3_CH * H_9) * sc_qss[0] +
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * sc_qss[1] +
      (HCO_CH2D - C2H5_CH2D * H_2) * sc_qss[2])) /
    (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
     (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);

  sc_qss[6] = (((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) -
               (C2H3_CH * sc_qss[0] + (C2H3_CH2 - H2CC_CH2 * H_6) * sc_qss[1] +
                (C2H3_HCO - CH2CHO_HCO * H_4) * sc_qss[3])) /
              ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);

  sc_qss[5] = H2CC_rhs - (+H2CC_CH2 * sc_qss[1] + H2CC_CH2D * sc_qss[2] +
                          H2CC_C2H3 * sc_qss[6]);

  sc_qss[8] = CH2CHO_rhs - (+CH2CHO_HCO * sc_qss[3] + CH2CHO_C2H3 * sc_qss[6]);

  sc_qss[7] = ((C2H5_rhs - nC3H7_rhs * H_1) -
               (+C2H5_CH2D * sc_qss[2] + C2H5_HCO * sc_qss[3])) /
              (1 - nC3H7_C2H5 * H_1);

  sc_qss[9] = nC3H7_rhs - (+nC3H7_C2H5 * sc_qss[7]);

  sc_qss[4] = CH3O_rhs - (+CH3O_CH2D * sc_qss[2]);

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 0: 2 OH (+M) <=> H2O2 (+M)
  qf[0] = (sc[4] * sc[4]);
  qr[0] = sc[7];

  // reaction 1: CO + H2 (+M) <=> CH2O (+M)
  qf[1] = sc[0] * sc[10];
  qr[1] = sc[12];

  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  qf[2] = sc[10] * sc_qss[0];
  qr[2] = sc[16];

  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[1] * sc_qss[3];
  qr[3] = sc[12];

  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[1] * sc_qss[1];
  qr[4] = sc[8];

  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  qf[5] = sc[10] * sc_qss[1];
  qr[5] = sc[17];

  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  qf[6] = sc[1] * sc[12];
  qr[6] = sc_qss[4];

  // reaction 7: CH3 + H (+M) <=> CH4 (+M)
  qf[7] = sc[1] * sc[8];
  qr[7] = sc[9];

  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  qf[8] = sc[8] * sc_qss[3];
  qr[8] = sc[18];

  // reaction 9: 2 CH3 (+M) <=> C2H6 (+M)
  qf[9] = (sc[8] * sc[8]);
  qr[9] = sc[15];

  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  qf[10] = sc_qss[6];
  qr[10] = sc[1] * sc[13];

  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  qf[11] = sc[1] * sc[17];
  qr[11] = sc_qss[8];

  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  qf[12] = sc[1] * sc_qss[6];
  qr[12] = sc[14];

  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[13] = sc[8] * sc_qss[6];
  qr[13] = sc[20];

  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  qf[14] = sc[1] * sc_qss[8];
  qr[14] = sc[18];

  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  qf[15] = sc[14];
  qr[15] = sc[0] * sc_qss[5];

  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  qf[16] = sc[1] * sc[14];
  qr[16] = sc_qss[7];

  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  qf[17] = sc[1] * sc_qss[7];
  qr[17] = sc[15];

  // reaction 18: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[18] = sc[1] * sc[19];
  qr[18] = sc[20];

  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[19] = sc[1] * sc[20];
  qr[19] = sc_qss[9];

  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  qf[20] = sc[13];
  qr[20] = sc_qss[5];

  // reaction 21: 2 H + M <=> H2 + M
  qf[21] = (sc[1] * sc[1]);
  qr[21] = sc[0];

  // reaction 22: 2 H + H2 <=> H2 + H2
  qf[22] = sc[0] * (sc[1] * sc[1]);
  qr[22] = (sc[0] * sc[0]);

  // reaction 23: 2 H + H2O <=> H2 + H2O
  qf[23] = (sc[1] * sc[1]) * sc[5];
  qr[23] = sc[0] * sc[5];

  // reaction 24: 2 H + CO2 <=> H2 + CO2
  qf[24] = (sc[1] * sc[1]) * sc[11];
  qr[24] = sc[0] * sc[11];

  // reaction 25: H + OH + M <=> H2O + M
  qf[25] = sc[1] * sc[4];
  qr[25] = sc[5];

  // reaction 26: H + O + M <=> OH + M
  qf[26] = sc[1] * sc[2];
  qr[26] = sc[4];

  // reaction 27: 2 O + M <=> O2 + M
  qf[27] = (sc[2] * sc[2]);
  qr[27] = sc[3];

  // reaction 28: H + O2 + M <=> HO2 + M
  qf[28] = sc[1] * sc[3];
  qr[28] = sc[6];

  // reaction 29: H + O2 + O2 <=> HO2 + O2
  qf[29] = sc[1] * (sc[3] * sc[3]);
  qr[29] = sc[3] * sc[6];

  // reaction 30: H + O2 + H2O <=> HO2 + H2O
  qf[30] = sc[1] * sc[3] * sc[5];
  qr[30] = sc[5] * sc[6];

  // reaction 31: H + O2 + N2 <=> HO2 + N2
  qf[31] = sc[1] * sc[3] * sc[21];
  qr[31] = sc[6] * sc[21];

  // reaction 32: CO + O + M <=> CO2 + M
  qf[32] = sc[2] * sc[10];
  qr[32] = sc[11];

  // reaction 33: HCO + M <=> CO + H + M
  qf[33] = sc_qss[3];
  qr[33] = sc[1] * sc[10];

  // reaction 34: C2H2 + CH3 + M <=> aC3H5 + M
  qf[34] = sc[8] * sc[13];
  qr[34] = sc[19];

  // reaction 35: H + O2 <=> O + OH
  qf[35] = sc[1] * sc[3];
  qr[35] = sc[2] * sc[4];

  // reaction 36: H2 + O <=> H + OH
  qf[36] = sc[0] * sc[2];
  qr[36] = sc[1] * sc[4];

  // reaction 37: H2 + OH <=> H + H2O
  qf[37] = sc[0] * sc[4];
  qr[37] = sc[1] * sc[5];

  // reaction 38: 2 OH <=> H2O + O
  qf[38] = (sc[4] * sc[4]);
  qr[38] = sc[2] * sc[5];

  // reaction 39: H + HO2 <=> H2O + O
  qf[39] = sc[1] * sc[6];
  qr[39] = sc[2] * sc[5];

  // reaction 40: H + HO2 <=> H2 + O2
  qf[40] = sc[1] * sc[6];
  qr[40] = sc[0] * sc[3];

  // reaction 41: H + HO2 <=> 2 OH
  qf[41] = sc[1] * sc[6];
  qr[41] = (sc[4] * sc[4]);

  // reaction 42: HO2 + O <=> O2 + OH
  qf[42] = sc[2] * sc[6];
  qr[42] = sc[3] * sc[4];

  // reaction 43: HO2 + OH <=> H2O + O2
  qf[43] = sc[4] * sc[6];
  qr[43] = sc[3] * sc[5];

  // reaction 44: 2 HO2 <=> H2O2 + O2
  qf[44] = (sc[6] * sc[6]);
  qr[44] = sc[3] * sc[7];

  // reaction 45: 2 HO2 <=> H2O2 + O2
  qf[45] = (sc[6] * sc[6]);
  qr[45] = sc[3] * sc[7];

  // reaction 46: H + H2O2 <=> H2 + HO2
  qf[46] = sc[1] * sc[7];
  qr[46] = sc[0] * sc[6];

  // reaction 47: H + H2O2 <=> H2O + OH
  qf[47] = sc[1] * sc[7];
  qr[47] = sc[4] * sc[5];

  // reaction 48: H2O2 + O <=> HO2 + OH
  qf[48] = sc[2] * sc[7];
  qr[48] = sc[4] * sc[6];

  // reaction 49: H2O2 + OH <=> H2O + HO2
  qf[49] = sc[4] * sc[7];
  qr[49] = sc[5] * sc[6];

  // reaction 50: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[4] * sc[7];
  qr[50] = sc[5] * sc[6];

  // reaction 51: CO + OH <=> CO2 + H
  qf[51] = sc[4] * sc[10];
  qr[51] = sc[1] * sc[11];

  // reaction 52: CO + O2 <=> CO2 + O
  qf[52] = sc[3] * sc[10];
  qr[52] = sc[2] * sc[11];

  // reaction 53: CO + HO2 <=> CO2 + OH
  qf[53] = sc[6] * sc[10];
  qr[53] = sc[4] * sc[11];

  // reaction 54: CH + O <=> CO + H
  qf[54] = sc[2] * sc_qss[0];
  qr[54] = sc[1] * sc[10];

  // reaction 55: CH + OH <=> H + HCO
  qf[55] = sc[4] * sc_qss[0];
  qr[55] = sc[1] * sc_qss[3];

  // reaction 56: CH + H2 <=> CH2 + H
  qf[56] = sc[0] * sc_qss[0];
  qr[56] = sc[1] * sc_qss[1];

  // reaction 57: CH + H2O <=> CH2O + H
  qf[57] = sc[5] * sc_qss[0];
  qr[57] = sc[1] * sc[12];

  // reaction 58: CH + O2 <=> HCO + O
  qf[58] = sc[3] * sc_qss[0];
  qr[58] = sc[2] * sc_qss[3];

  // reaction 59: CH + CO2 <=> CO + HCO
  qf[59] = sc[11] * sc_qss[0];
  qr[59] = sc[10] * sc_qss[3];

  // reaction 60: H + HCO <=> CO + H2
  qf[60] = sc[1] * sc_qss[3];
  qr[60] = sc[0] * sc[10];

  // reaction 61: HCO + O <=> CO + OH
  qf[61] = sc[2] * sc_qss[3];
  qr[61] = sc[4] * sc[10];

  // reaction 62: HCO + O <=> CO2 + H
  qf[62] = sc[2] * sc_qss[3];
  qr[62] = sc[1] * sc[11];

  // reaction 63: HCO + OH <=> CO + H2O
  qf[63] = sc[4] * sc_qss[3];
  qr[63] = sc[5] * sc[10];

  // reaction 64: HCO + O2 <=> CO + HO2
  qf[64] = sc[3] * sc_qss[3];
  qr[64] = sc[6] * sc[10];

  // reaction 65: CH2 + H2 <=> CH3 + H
  qf[65] = sc[0] * sc_qss[1];
  qr[65] = sc[1] * sc[8];

  // reaction 66: CH2 + O <=> H + HCO
  qf[66] = sc[2] * sc_qss[1];
  qr[66] = sc[1] * sc_qss[3];

  // reaction 67: CH2 + O2 <=> HCO + OH
  qf[67] = sc[3] * sc_qss[1];
  qr[67] = sc[4] * sc_qss[3];

  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  qf[68] = sc[3] * sc_qss[1];
  qr[68] = (sc[1] * sc[1]) * sc[11];

  // reaction 69: CH2 + OH <=> CH2O + H
  qf[69] = sc[4] * sc_qss[1];
  qr[69] = sc[1] * sc[12];

  // reaction 70: CH2 + OH <=> CH + H2O
  qf[70] = sc[4] * sc_qss[1];
  qr[70] = sc[5] * sc_qss[0];

  // reaction 71: CH2 + HO2 <=> CH2O + OH
  qf[71] = sc[6] * sc_qss[1];
  qr[71] = sc[4] * sc[12];

  // reaction 72: CH + CH2 <=> C2H2 + H
  qf[72] = sc_qss[0] * sc_qss[1];
  qr[72] = sc[1] * sc[13];

  // reaction 73: 2 CH2 <=> C2H2 + H2
  qf[73] = sc_qss[1] * sc_qss[1];
  qr[73] = sc[0] * sc[13];

  // reaction 74: CH2* + N2 <=> CH2 + N2
  qf[74] = sc[21] * sc_qss[2];
  qr[74] = sc[21] * sc_qss[1];

  // reaction 75: CH2* + H <=> CH + H2
  qf[75] = sc[1] * sc_qss[2];
  qr[75] = sc[0] * sc_qss[0];

  // reaction 76: CH2* + O <=> CO + H2
  qf[76] = sc[2] * sc_qss[2];
  qr[76] = sc[0] * sc[10];

  // reaction 77: CH2* + O <=> H + HCO
  qf[77] = sc[2] * sc_qss[2];
  qr[77] = sc[1] * sc_qss[3];

  // reaction 78: CH2* + OH <=> CH2O + H
  qf[78] = sc[4] * sc_qss[2];
  qr[78] = sc[1] * sc[12];

  // reaction 79: CH2* + H2 <=> CH3 + H
  qf[79] = sc[0] * sc_qss[2];
  qr[79] = sc[1] * sc[8];

  // reaction 80: CH2* + O2 <=> CO + H + OH
  qf[80] = sc[3] * sc_qss[2];
  qr[80] = sc[1] * sc[4] * sc[10];

  // reaction 81: CH2* + O2 <=> CO + H2O
  qf[81] = sc[3] * sc_qss[2];
  qr[81] = sc[5] * sc[10];

  // reaction 82: CH2* + H2O <=> CH2 + H2O
  qf[82] = sc[5] * sc_qss[2];
  qr[82] = sc[5] * sc_qss[1];

  // reaction 83: CH2* + CO <=> CH2 + CO
  qf[83] = sc[10] * sc_qss[2];
  qr[83] = sc[10] * sc_qss[1];

  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  qf[84] = sc[11] * sc_qss[2];
  qr[84] = sc[11] * sc_qss[1];

  // reaction 85: CH2* + CO2 <=> CH2O + CO
  qf[85] = sc[11] * sc_qss[2];
  qr[85] = sc[10] * sc[12];

  // reaction 86: CH2O + H <=> H2 + HCO
  qf[86] = sc[1] * sc[12];
  qr[86] = sc[0] * sc_qss[3];

  // reaction 87: CH2O + O <=> HCO + OH
  qf[87] = sc[2] * sc[12];
  qr[87] = sc[4] * sc_qss[3];

  // reaction 88: CH2O + OH <=> H2O + HCO
  qf[88] = sc[4] * sc[12];
  qr[88] = sc[5] * sc_qss[3];

  // reaction 89: CH2O + O2 <=> HCO + HO2
  qf[89] = sc[3] * sc[12];
  qr[89] = sc[6] * sc_qss[3];

  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  qf[90] = sc[6] * sc[12];
  qr[90] = sc[7] * sc_qss[3];

  // reaction 91: CH + CH2O <=> CH2CO + H
  qf[91] = sc[12] * sc_qss[0];
  qr[91] = sc[1] * sc[17];

  // reaction 92: CH3 + O <=> CH2O + H
  qf[92] = sc[2] * sc[8];
  qr[92] = sc[1] * sc[12];

  // reaction 93: CH3 + OH <=> CH2 + H2O
  qf[93] = sc[4] * sc[8];
  qr[93] = sc[5] * sc_qss[1];

  // reaction 94: CH3 + OH <=> CH2* + H2O
  qf[94] = sc[4] * sc[8];
  qr[94] = sc[5] * sc_qss[2];

  // reaction 95: CH3 + O2 <=> CH3O + O
  qf[95] = sc[3] * sc[8];
  qr[95] = sc[2] * sc_qss[4];

  // reaction 96: CH3 + O2 <=> CH2O + OH
  qf[96] = sc[3] * sc[8];
  qr[96] = sc[4] * sc[12];

  // reaction 97: CH3 + HO2 <=> CH4 + O2
  qf[97] = sc[6] * sc[8];
  qr[97] = sc[3] * sc[9];

  // reaction 98: CH3 + HO2 <=> CH3O + OH
  qf[98] = sc[6] * sc[8];
  qr[98] = sc[4] * sc_qss[4];

  // reaction 99: CH3 + H2O2 <=> CH4 + HO2
  qf[99] = sc[7] * sc[8];
  qr[99] = sc[6] * sc[9];

  // reaction 100: CH + CH3 <=> C2H3 + H
  qf[100] = sc[8] * sc_qss[0];
  qr[100] = sc[1] * sc_qss[6];

  // reaction 101: CH3 + HCO <=> CH4 + CO
  qf[101] = sc[8] * sc_qss[3];
  qr[101] = sc[9] * sc[10];

  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  qf[102] = sc[8] * sc[12];
  qr[102] = sc[9] * sc_qss[3];

  // reaction 103: CH2 + CH3 <=> C2H4 + H
  qf[103] = sc[8] * sc_qss[1];
  qr[103] = sc[1] * sc[14];

  // reaction 104: CH2* + CH3 <=> C2H4 + H
  qf[104] = sc[8] * sc_qss[2];
  qr[104] = sc[1] * sc[14];

  // reaction 105: 2 CH3 <=> C2H5 + H
  qf[105] = (sc[8] * sc[8]);
  qr[105] = sc[1] * sc_qss[7];

  // reaction 106: CH3 + HCCO <=> C2H4 + CO
  qf[106] = sc[8] * sc[16];
  qr[106] = sc[10] * sc[14];

  // reaction 107: CH3O + H <=> CH2O + H2
  qf[107] = sc[1] * sc_qss[4];
  qr[107] = sc[0] * sc[12];

  // reaction 108: CH3O + H <=> CH3 + OH
  qf[108] = sc[1] * sc_qss[4];
  qr[108] = sc[4] * sc[8];

  // reaction 109: CH3O + H <=> CH2* + H2O
  qf[109] = sc[1] * sc_qss[4];
  qr[109] = sc[5] * sc_qss[2];

  // reaction 110: CH3O + O <=> CH2O + OH
  qf[110] = sc[2] * sc_qss[4];
  qr[110] = sc[4] * sc[12];

  // reaction 111: CH3O + OH <=> CH2O + H2O
  qf[111] = sc[4] * sc_qss[4];
  qr[111] = sc[5] * sc[12];

  // reaction 112: CH3O + O2 <=> CH2O + HO2
  qf[112] = sc[3] * sc_qss[4];
  qr[112] = sc[6] * sc[12];

  // reaction 113: CH4 + H <=> CH3 + H2
  qf[113] = sc[1] * sc[9];
  qr[113] = sc[0] * sc[8];

  // reaction 114: CH4 + O <=> CH3 + OH
  qf[114] = sc[2] * sc[9];
  qr[114] = sc[4] * sc[8];

  // reaction 115: CH4 + OH <=> CH3 + H2O
  qf[115] = sc[4] * sc[9];
  qr[115] = sc[5] * sc[8];

  // reaction 116: CH + CH4 <=> C2H4 + H
  qf[116] = sc[9] * sc_qss[0];
  qr[116] = sc[1] * sc[14];

  // reaction 117: CH2 + CH4 <=> 2 CH3
  qf[117] = sc[9] * sc_qss[1];
  qr[117] = (sc[8] * sc[8]);

  // reaction 118: CH2* + CH4 <=> 2 CH3
  qf[118] = sc[9] * sc_qss[2];
  qr[118] = (sc[8] * sc[8]);

  // reaction 119: H + HCCO <=> CH2* + CO
  qf[119] = sc[1] * sc[16];
  qr[119] = sc[10] * sc_qss[2];

  // reaction 120: HCCO + O <=> 2 CO + H
  qf[120] = sc[2] * sc[16];
  qr[120] = sc[1] * (sc[10] * sc[10]);

  // reaction 121: HCCO + O2 <=> 2 CO + OH
  qf[121] = sc[3] * sc[16];
  qr[121] = sc[4] * (sc[10] * sc[10]);

  // reaction 122: CH + HCCO <=> C2H2 + CO
  qf[122] = sc[16] * sc_qss[0];
  qr[122] = sc[10] * sc[13];

  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  qf[123] = sc[16] * sc_qss[1];
  qr[123] = sc[10] * sc_qss[6];

  // reaction 124: 2 HCCO <=> C2H2 + 2 CO
  qf[124] = (sc[16] * sc[16]);
  qr[124] = (sc[10] * sc[10]) * sc[13];

  // reaction 125: C2H2 + O <=> H + HCCO
  qf[125] = sc[2] * sc[13];
  qr[125] = sc[1] * sc[16];

  // reaction 126: C2H2 + O <=> CH2 + CO
  qf[126] = sc[2] * sc[13];
  qr[126] = sc[10] * sc_qss[1];

  // reaction 127: C2H2 + OH <=> CH2CO + H
  qf[127] = sc[4] * sc[13];
  qr[127] = sc[1] * sc[17];

  // reaction 128: C2H2 + OH <=> CH3 + CO
  qf[128] = sc[4] * sc[13];
  qr[128] = sc[8] * sc[10];

  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  qf[129] = sc[13] * sc_qss[3];
  qr[129] = sc[10] * sc_qss[6];

  // reaction 130: H + H2CC <=> C2H2 + H
  qf[130] = sc[1] * sc_qss[5];
  qr[130] = sc[1] * sc[13];

  // reaction 131: H2CC + O <=> CH2 + CO
  qf[131] = sc[2] * sc_qss[5];
  qr[131] = sc[10] * sc_qss[1];

  // reaction 132: H2CC + OH <=> CH2CO + H
  qf[132] = sc[4] * sc_qss[5];
  qr[132] = sc[1] * sc[17];

  // reaction 133: H2CC + O2 <=> CH2 + CO2
  qf[133] = sc[3] * sc_qss[5];
  qr[133] = sc[11] * sc_qss[1];

  // reaction 134: CH2CO + H <=> H2 + HCCO
  qf[134] = sc[1] * sc[17];
  qr[134] = sc[0] * sc[16];

  // reaction 135: CH2CO + H <=> CH3 + CO
  qf[135] = sc[1] * sc[17];
  qr[135] = sc[8] * sc[10];

  // reaction 136: CH2CO + O <=> HCCO + OH
  qf[136] = sc[2] * sc[17];
  qr[136] = sc[4] * sc[16];

  // reaction 137: CH2CO + O <=> CH2 + CO2
  qf[137] = sc[2] * sc[17];
  qr[137] = sc[11] * sc_qss[1];

  // reaction 138: CH2CO + OH <=> H2O + HCCO
  qf[138] = sc[4] * sc[17];
  qr[138] = sc[5] * sc[16];

  // reaction 139: C2H3 + H <=> C2H2 + H2
  qf[139] = sc[1] * sc_qss[6];
  qr[139] = sc[0] * sc[13];

  // reaction 140: C2H3 + H <=> H2 + H2CC
  qf[140] = sc[1] * sc_qss[6];
  qr[140] = sc[0] * sc_qss[5];

  // reaction 141: C2H3 + O <=> CH2CO + H
  qf[141] = sc[2] * sc_qss[6];
  qr[141] = sc[1] * sc[17];

  // reaction 142: C2H3 + O <=> CH3 + CO
  qf[142] = sc[2] * sc_qss[6];
  qr[142] = sc[8] * sc[10];

  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  qf[143] = sc[4] * sc_qss[6];
  qr[143] = sc[5] * sc[13];

  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  qf[144] = sc[3] * sc_qss[6];
  qr[144] = sc[6] * sc[13];

  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  qf[145] = sc[3] * sc_qss[6];
  qr[145] = sc[2] * sc_qss[8];

  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  qf[146] = sc[3] * sc_qss[6];
  qr[146] = sc[12] * sc_qss[3];

  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  qf[147] = sc[6] * sc_qss[6];
  qr[147] = sc[4] * sc_qss[8];

  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  qf[148] = sc[7] * sc_qss[6];
  qr[148] = sc[6] * sc[14];

  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  qf[149] = sc_qss[3] * sc_qss[6];
  qr[149] = sc[10] * sc[14];

  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  qf[150] = sc[8] * sc_qss[6];
  qr[150] = sc[9] * sc[13];

  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  qf[151] = sc[8] * sc_qss[6];
  qr[151] = sc[1] * sc[19];

  // reaction 152: CH2CHO <=> CH3 + CO
  qf[152] = sc_qss[8];
  qr[152] = sc[8] * sc[10];

  // reaction 153: CH2CHO + H <=> CH3 + HCO
  qf[153] = sc[1] * sc_qss[8];
  qr[153] = sc[8] * sc_qss[3];

  // reaction 154: CH2CHO + H <=> CH2CO + H2
  qf[154] = sc[1] * sc_qss[8];
  qr[154] = sc[0] * sc[17];

  // reaction 155: CH2CHO + O <=> CH2CO + OH
  qf[155] = sc[2] * sc_qss[8];
  qr[155] = sc[4] * sc[17];

  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  qf[156] = sc[4] * sc_qss[8];
  qr[156] = sc[5] * sc[17];

  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  qf[157] = sc[3] * sc_qss[8];
  qr[157] = sc[6] * sc[17];

  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  qf[158] = sc[3] * sc_qss[8];
  qr[158] = sc[4] * sc[10] * sc[12];

  // reaction 159: C2H4 + H <=> C2H3 + H2
  qf[159] = sc[1] * sc[14];
  qr[159] = sc[0] * sc_qss[6];

  // reaction 160: C2H4 + O <=> C2H3 + OH
  qf[160] = sc[2] * sc[14];
  qr[160] = sc[4] * sc_qss[6];

  // reaction 161: C2H4 + O <=> CH3 + HCO
  qf[161] = sc[2] * sc[14];
  qr[161] = sc[8] * sc_qss[3];

  // reaction 162: C2H4 + O <=> CH2 + CH2O
  qf[162] = sc[2] * sc[14];
  qr[162] = sc[12] * sc_qss[1];

  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  qf[163] = sc[4] * sc[14];
  qr[163] = sc[5] * sc_qss[6];

  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  qf[164] = sc[3] * sc[14];
  qr[164] = sc[6] * sc_qss[6];

  // reaction 165: C2H4 + HO2 <=> CH3CHO + OH
  qf[165] = sc[6] * sc[14];
  qr[165] = sc[4] * sc[18];

  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  qf[166] = sc[14] * sc_qss[3];
  qr[166] = sc[10] * sc_qss[7];

  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  qf[167] = sc[14] * sc_qss[1];
  qr[167] = sc[1] * sc[19];

  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  qf[168] = sc[14] * sc_qss[2];
  qr[168] = sc[9] * sc_qss[5];

  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  qf[169] = sc[14] * sc_qss[2];
  qr[169] = sc[1] * sc[19];

  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  qf[170] = sc[8] * sc[14];
  qr[170] = sc[9] * sc_qss[6];

  // reaction 171: C2H4 + CH3 <=> nC3H7
  qf[171] = sc[8] * sc[14];
  qr[171] = sc_qss[9];

  // reaction 172: C2H5 + H <=> C2H4 + H2
  qf[172] = sc[1] * sc_qss[7];
  qr[172] = sc[0] * sc[14];

  // reaction 173: C2H5 + O <=> CH2O + CH3
  qf[173] = sc[2] * sc_qss[7];
  qr[173] = sc[8] * sc[12];

  // reaction 174: C2H5 + O <=> CH3CHO + H
  qf[174] = sc[2] * sc_qss[7];
  qr[174] = sc[1] * sc[18];

  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  qf[175] = sc[3] * sc_qss[7];
  qr[175] = sc[6] * sc[14];

  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  qf[176] = sc[6] * sc_qss[7];
  qr[176] = sc[3] * sc[15];

  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  qf[177] = sc[6] * sc_qss[7];
  qr[177] = sc[7] * sc[14];

  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[178] = sc[6] * sc_qss[7];
  qr[178] = sc[4] * sc[8] * sc[12];

  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  qf[179] = sc[7] * sc_qss[7];
  qr[179] = sc[6] * sc[15];

  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  qf[180] = sc_qss[3] * sc_qss[7];
  qr[180] = sc[10] * sc[15];

  // reaction 181: C2H6 + H <=> C2H5 + H2
  qf[181] = sc[1] * sc[15];
  qr[181] = sc[0] * sc_qss[7];

  // reaction 182: C2H6 + O <=> C2H5 + OH
  qf[182] = sc[2] * sc[15];
  qr[182] = sc[4] * sc_qss[7];

  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  qf[183] = sc[4] * sc[15];
  qr[183] = sc[5] * sc_qss[7];

  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  qf[184] = sc[15] * sc_qss[2];
  qr[184] = sc[8] * sc_qss[7];

  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  qf[185] = sc[8] * sc[15];
  qr[185] = sc[9] * sc_qss[7];

  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  qf[186] = sc[1] * sc[19];
  qr[186] = sc[9] * sc_qss[5];

  // reaction 187: HO2 + aC3H5 <=> C3H6 + O2
  qf[187] = sc[6] * sc[19];
  qr[187] = sc[3] * sc[20];

  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[188] = sc[6] * sc[19];
  qr[188] = sc[4] * sc[12] * sc_qss[6];

  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  qf[189] = sc[19] * sc_qss[3];
  qr[189] = sc[10] * sc[20];

  // reaction 190: C3H6 + H <=> C2H4 + CH3
  qf[190] = sc[1] * sc[20];
  qr[190] = sc[8] * sc[14];

  // reaction 191: C3H6 + H <=> H2 + aC3H5
  qf[191] = sc[1] * sc[20];
  qr[191] = sc[0] * sc[19];

  // reaction 192: C3H6 + O <=> CH2CO + CH3 + H
  qf[192] = sc[2] * sc[20];
  qr[192] = sc[1] * sc[8] * sc[17];

  // reaction 193: C3H6 + O => C2H5 + HCO
  qf[193] = sc[2] * sc[20];
  qr[193] = 0.0;

  // reaction 194: C3H6 + O <=> OH + aC3H5
  qf[194] = sc[2] * sc[20];
  qr[194] = sc[4] * sc[19];

  // reaction 195: C3H6 + OH <=> H2O + aC3H5
  qf[195] = sc[4] * sc[20];
  qr[195] = sc[5] * sc[19];

  // reaction 196: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[196] = sc[6] * sc[20];
  qr[196] = sc[7] * sc[19];

  // reaction 197: C3H6 + CH3 <=> CH4 + aC3H5
  qf[197] = sc[8] * sc[20];
  qr[197] = sc[9] * sc[19];

  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  qf[198] = sc[1] * sc_qss[9];
  qr[198] = sc[8] * sc_qss[7];

  // reaction 199: H + nC3H7 <=> C3H6 + H2
  qf[199] = sc[1] * sc_qss[9];
  qr[199] = sc[0] * sc[20];

  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  qf[200] = sc[2] * sc_qss[9];
  qr[200] = sc[12] * sc_qss[7];

  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  qf[201] = sc[4] * sc_qss[9];
  qr[201] = sc[5] * sc[20];

  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  qf[202] = sc[3] * sc_qss[9];
  qr[202] = sc[6] * sc[20];

  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[203] = sc[6] * sc_qss[9];
  qr[203] = sc[4] * sc[12] * sc_qss[7];

  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  qf[204] = sc[8] * sc_qss[9];
  qr[204] = sc[9] * sc[20];

  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[205] = sc_qss[6] * sc_qss[7];
  qr[205] = sc[8] * sc[19];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 10; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  2 OH (+M) <=> H2O2 (+M)
  k_f = 74000000 * exp((-0.37) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2300000 * exp(-0.9 * tc[0] - (-855.468331868023) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-tc[1] * 0.0106382978723404) +
    0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC);
  // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-tc[1] * 0.0050761421319797) +
    0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC);
  // reaction 2:  CH + CO (+M) <=> HCCO (+M)
  k_f = 50000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - (974.227464997937) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4243) * exp(-tc[1] * 0.00421940928270042) +
    0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC);
  // reaction 3:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-tc[1] * 0.003690036900369) +
    0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC);
  // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-tc[1] * 0.0128205128205128) +
    0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC);
  // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
  k_f = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - (3570.32224388449) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4093) * exp(-tc[1] * 0.00363636363636364) +
    0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC);
  // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-tc[1] * 0.0106382978723404) +
    0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC);
  // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-tc[1] * 0.0135135135135135) +
    0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC);
  // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f = 18000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - (2566.40499560407) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.3827) * exp(-tc[1] * 0.0764759865402264) +
    0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC);
  // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-tc[1] * 0.00662251655629139) +
    0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC);
  // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-tc[1] * 0.000185745862510913) +
    1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) * (refCinv);
  // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
  k_f = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - (5988.27832307616) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.663) * exp(-tc[1] * 0.000585823081429408) +
    0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC);
  // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC);
  // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-tc[1] * 0.000745934656124124) +
    0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC);
  // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f = 100000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - (2365.11832928218) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.45) * exp(-tc[1] * 0.000112359550561798) +
    0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC);
  // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
  k_f = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - (50251.2162472593) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2655) * exp(-tc[1] * 0.00555555555555556) +
    0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) * (refCinv);
  // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - (3507.4201606589) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0247000000000001) * exp(-tc[1] * 0.00476190476190476) +
    0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC);
  // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC);
  // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-tc[1] * 0.000911909538573774) +
    0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC);
  // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[15];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC);
  // reaction 20:  C2H2 (+M) <=> H2CC (+M)
  k_f = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - (25009.8682904946) * invT);
  Corr = redP / (1. + redP);
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5]));
  // reaction 21:  2 H + M <=> H2 + M
  k_f = 1000000 * exp((-1) * tc[0]);
  Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] + (-1) * sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 22:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * tc[0]);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 23:  2 H + H2O <=> H2 + H2O
  k_f = 60000000 * exp((-1.25) * tc[0]);
  qf[23] *= k_f;
  qr[23] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 24:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * tc[0]);
  qf[24] *= k_f;
  qr[24] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 25:  H + OH + M <=> H2O + M
  k_f = 22000000000 * exp((-2) * tc[0]);
  Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] + sc[9] + (2) * sc[13] +
         (2) * sc[14] + (2) * sc[15];
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC);
  // reaction 26:  H + O + M <=> OH + M
  k_f = 500000 * exp((-1) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC);
  // reaction 27:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * tc[0]);
  Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] + (0.75) * sc[10] +
         (2.6) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC);
  // reaction 28:  H + O2 + M <=> HO2 + M
  k_f = 2800000 * exp((-0.86) * tc[0]);
  Corr = mixture + (-1) * sc[3] + (-1) * sc[5] + (-0.25) * sc[10] +
         (0.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (0.5) * sc[15] +
         (-1) * sc[21];
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 29:  H + O2 + O2 <=> HO2 + O2
  k_f = 300000000 * exp((-1.72) * tc[0]);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 30:  H + O2 + H2O <=> HO2 + H2O
  k_f = 16520000 * exp((-0.76) * tc[0]);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 31:  H + O2 + N2 <=> HO2 + N2
  k_f = 26000000 * exp((-1.24) * tc[0]);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 32:  CO + O + M <=> CO2 + M
  k_f = 602 * exp(-(1509.64999741416) * invT);
  Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
         (2.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC);
  // reaction 33:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) * (refCinv);
  // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
  k_f = 2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
  Corr = mixture;
  qf[34] *= Corr * k_f;
  qr[34] *= Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC);
  // reaction 35:  H + O2 <=> O + OH
  k_f = 83000000 * exp(-(7252.86180424342) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 36:  H2 + O <=> H + OH
  k_f = 0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4]));
  // reaction 37:  H2 + OH <=> H + H2O
  k_f = 216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5]));
  // reaction 38:  2 OH <=> H2O + O
  k_f = 0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5]));
  // reaction 39:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6]));
  // reaction 40:  H + HO2 <=> H2 + O2
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6]));
  // reaction 41:  H + HO2 <=> 2 OH
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6]));
  // reaction 42:  HO2 + O <=> O2 + OH
  k_f = 20000000;
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6]));
  // reaction 43:  HO2 + OH <=> H2O + O2
  k_f = 46400000 * exp(-(-251.60833290236) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6]));
  // reaction 44:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 45:  2 HO2 <=> H2O2 + O2
  k_f = 420000000 * exp(-(6038.59998965664) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 46:  H + H2O2 <=> H2 + HO2
  k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7]));
  // reaction 47:  H + H2O2 <=> H2O + OH
  k_f = 10000000 * exp(-(1811.57999689699) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]));
  // reaction 48:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 49:  H2O2 + OH <=> H2O + HO2
  k_f = 1750000 * exp(-(161.02933305751) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 50:  H2O2 + OH <=> H2O + HO2
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 51:  CO + OH <=> CO2 + H
  k_f = 47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11]));
  // reaction 52:  CO + O2 <=> CO2 + O
  k_f = 2500000 * exp(-(24053.7566254656) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11]));
  // reaction 53:  CO + HO2 <=> CO2 + OH
  k_f = 150000000 * exp(-(11875.9133129914) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11]));
  // reaction 54:  CH + O <=> CO + H
  k_f = 57000000;
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0]));
  // reaction 55:  CH + OH <=> H + HCO
  k_f = 30000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 56:  CH + H2 <=> CH2 + H
  k_f = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1]));
  // reaction 57:  CH + H2O <=> CH2O + H
  k_f = 5710000 * exp(-(-379.928582682563) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0]));
  // reaction 58:  CH + O2 <=> HCO + O
  k_f = 33000000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 59:  CH + CO2 <=> CO + HCO
  k_f = 3400000 * exp(-(347.219499405257) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 60:  H + HCO <=> CO + H2
  k_f = 73400000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3]));
  // reaction 61:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3]));
  // reaction 62:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3]));
  // reaction 63:  HCO + OH <=> CO + H2O
  k_f = 50000000;
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3]));
  // reaction 64:  HCO + O2 <=> CO + HO2
  k_f = 7600000 * exp(-(201.286666321888) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3]));
  // reaction 65:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1]));
  // reaction 66:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 67:  CH2 + O2 <=> HCO + OH
  k_f = 10560000 * exp(-(754.82499870708) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 68:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f *
            exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
            (refCinv);
  // reaction 69:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1]));
  // reaction 70:  CH2 + OH <=> CH + H2O
  k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 71:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1]));
  // reaction 72:  CH + CH2 <=> C2H2 + H
  k_f = 40000000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1]));
  // reaction 73:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1]));
  // reaction 74:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 75:  CH2* + H <=> CH + H2
  k_f = 30000000;
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2]));
  // reaction 76:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2]));
  // reaction 77:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3]));
  // reaction 78:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2]));
  // reaction 79:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2]));
  // reaction 80:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[80] *= k_f;
  qr[80] *= k_f *
            exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
            (refCinv);
  // reaction 81:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2]));
  // reaction 82:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 83:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 84:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 85:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2]));
  // reaction 86:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3]));
  // reaction 87:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3]));
  // reaction 88:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3]));
  // reaction 89:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3]));
  // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3]));
  // reaction 91:  CH + CH2O <=> CH2CO + H
  k_f = 94600000 * exp(-(-259.156582889431) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0]));
  // reaction 92:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12]));
  // reaction 93:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1]));
  // reaction 94:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2]));
  // reaction 95:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4]));
  // reaction 96:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12]));
  // reaction 97:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9]));
  // reaction 98:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4]));
  // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9]));
  // reaction 100:  CH + CH3 <=> C2H3 + H
  k_f = 30000000;
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6]));
  // reaction 101:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3]));
  // reaction 102:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3]));
  // reaction 103:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1]));
  // reaction 104:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2]));
  // reaction 105:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7]));
  // reaction 106:  CH3 + HCCO <=> C2H4 + CO
  k_f = 50000000;
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16]));
  // reaction 107:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4]));
  // reaction 108:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4]));
  // reaction 109:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4]));
  // reaction 110:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4]));
  // reaction 111:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4]));
  // reaction 112:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4]));
  // reaction 113:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9]));
  // reaction 114:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9]));
  // reaction 115:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9]));
  // reaction 116:  CH + CH4 <=> C2H4 + H
  k_f = 60000000;
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0]));
  // reaction 117:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1]));
  // reaction 118:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2]));
  // reaction 119:  H + HCCO <=> CH2* + CO
  k_f = 100000000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2]));
  // reaction 120:  HCCO + O <=> 2 CO + H
  k_f = 100000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 121:  HCCO + O2 <=> 2 CO + OH
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 122:  CH + HCCO <=> C2H2 + CO
  k_f = 50000000;
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0]));
  // reaction 123:  CH2 + HCCO <=> C2H3 + CO
  k_f = 30000000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6]));
  // reaction 124:  2 HCCO <=> C2H2 + 2 CO
  k_f = 10000000;
  qf[124] *= k_f;
  qr[124] *= k_f *
             exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
             (refCinv);
  // reaction 125:  C2H2 + O <=> H + HCCO
  k_f = 16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16]));
  // reaction 126:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1]));
  // reaction 127:  C2H2 + OH <=> CH2CO + H
  k_f = 2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17]));
  // reaction 128:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13]));
  // reaction 129:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6]));
  // reaction 130:  H + H2CC <=> C2H2 + H
  k_f = 100000000;
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5]));
  // reaction 131:  H2CC + O <=> CH2 + CO
  k_f = 100000000;
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 132:  H2CC + OH <=> CH2CO + H
  k_f = 20000000;
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5]));
  // reaction 133:  H2CC + O2 <=> CH2 + CO2
  k_f = 10000000;
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 134:  CH2CO + H <=> H2 + HCCO
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17]));
  // reaction 135:  CH2CO + H <=> CH3 + CO
  k_f = 1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17]));
  // reaction 136:  CH2CO + O <=> HCCO + OH
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17]));
  // reaction 137:  CH2CO + O <=> CH2 + CO2
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1]));
  // reaction 138:  CH2CO + OH <=> H2O + HCCO
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17]));
  // reaction 139:  C2H3 + H <=> C2H2 + H2
  k_f = 30000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6]));
  // reaction 140:  C2H3 + H <=> H2 + H2CC
  k_f = 60000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6]));
  // reaction 141:  C2H3 + O <=> CH2CO + H
  k_f = 48000000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6]));
  // reaction 142:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6]));
  // reaction 143:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6]));
  // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6]));
  // reaction 145:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 146:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6]));
  // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6]));
  // reaction 149:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6]));
  // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6]));
  // reaction 151:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6]));
  // reaction 152:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv);
  // reaction 153:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8]));
  // reaction 154:  CH2CHO + H <=> CH2CO + H2
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8]));
  // reaction 155:  CH2CHO + O <=> CH2CO + OH
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8]));
  // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8]));
  // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
  k_f = 140000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8]));
  // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[158] *= k_f;
  qr[158] *= k_f *
             exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
             (refCinv);
  // reaction 159:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6]));
  // reaction 160:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6]));
  // reaction 161:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3]));
  // reaction 162:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1]));
  // reaction 163:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6]));
  // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6]));
  // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
  k_f = 2000000 * exp(-(7045.03332126608) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18]));
  // reaction 166:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7]));
  // reaction 167:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1]));
  // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
  k_f = 50000000;
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5]));
  // reaction 169:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2]));
  // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6]));
  // reaction 171:  C2H4 + CH3 <=> nC3H7
  k_f = 330000 * exp(-(3874.76832669634) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC);
  // reaction 172:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7]));
  // reaction 173:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7]));
  // reaction 174:  C2H5 + O <=> CH3CHO + H
  k_f = 80200000;
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7]));
  // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7]));
  // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7]));
  // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7]));
  // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[178] *= k_f;
  qr[178] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
             (refCinv);
  // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7]));
  // reaction 180:  C2H5 + HCO <=> C2H6 + CO
  k_f = 120000000;
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7]));
  // reaction 181:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7]));
  // reaction 182:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7]));
  // reaction 183:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7]));
  // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7]));
  // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7]));
  // reaction 186:  H + aC3H5 <=> CH4 + H2CC
  k_f = 20000000 * exp(-(1006.43333160944) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5]));
  // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20]));
  // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[188] *= k_f;
  qr[188] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
             (refCinv);
  // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3]));
  // reaction 190:  C3H6 + H <=> C2H4 + CH3
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20]));
  // reaction 191:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20]));
  // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
  k_f = 120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
             (refCinv);
  // reaction 193:  C3H6 + O => C2H5 + HCO
  k_f = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(g_RT[2] + g_RT[20] - g_RT_qss[3] - g_RT_qss[7]));
  // reaction 194:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20]));
  // reaction 195:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20]));
  // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20]));
  // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20]));
  // reaction 198:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 199:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9]));
  // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9]));
  // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9]));
  // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[203] *= k_f;
  qr[203] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
             (refCinv);
  // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9]));
  // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7]));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142], qf_qss[142], qr_qss[142];
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * tc[0] - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * tc[0] - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 22; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 22; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[22];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // H2
  kcharge[1] = 0;  // H
  kcharge[2] = 0;  // O
  kcharge[3] = 0;  // O2
  kcharge[4] = 0;  // OH
  kcharge[5] = 0;  // H2O
  kcharge[6] = 0;  // HO2
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // CH3
  kcharge[9] = 0;  // CH4
  kcharge[10] = 0; // CO
  kcharge[11] = 0; // CO2
  kcharge[12] = 0; // CH2O
  kcharge[13] = 0; // C2H2
  kcharge[14] = 0; // C2H4
  kcharge[15] = 0; // C2H6
  kcharge[16] = 0; // HCCO
  kcharge[17] = 0; // CH2CO
  kcharge[18] = 0; // CH3CHO
  kcharge[19] = 0; // aC3H5
  kcharge[20] = 0; // C3H6
  kcharge[21] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[22];
  CKCHRG(kchrg);

  for (int id = 0; id < 22; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 1: H
    species[1] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 2: O
    species[2] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 3: O2
    species[3] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 4: OH
    species[4] = -2.40131752e-03 + 9.23587682e-06 * tc[1] -
                 1.16434000e-08 * tc[2] + 5.45645880e-12 * tc[3];
    // species 5: H2O
    species[5] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 6: HO2
    species[6] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 7: H2O2
    species[7] = -5.42822417e-04 + 3.34671402e-05 * tc[1] -
                 6.47312439e-08 * tc[2] + 3.44981745e-11 * tc[3];
    // species 8: CH3
    species[8] = +2.01095175e-03 + 1.14604371e-05 * tc[1] -
                 2.06135228e-08 * tc[2] + 1.01754294e-11 * tc[3];
    // species 9: CH4
    species[9] = -1.36709788e-02 + 9.83601198e-05 * tc[1] -
                 1.45422908e-07 * tc[2] + 6.66775824e-11 * tc[3];
    // species 10: CO
    species[10] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 11: CO2
    species[11] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 12: CH2O
    species[12] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 13: C2H2
    species[13] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 14: C2H4
    species[14] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 15: C2H6
    species[15] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 16: HCCO
    species[16] = +1.76550210e-02 - 4.74582020e-05 * tc[1] +
                  5.18272770e-08 * tc[2] - 2.02659244e-11 * tc[3];
    // species 17: CH2CO
    species[17] = +1.81188721e-02 - 3.47894948e-05 * tc[1] +
                  2.80319270e-08 * tc[2] - 8.05830460e-12 * tc[3];
    // species 18: CH3CHO
    species[18] = -3.19328580e-03 + 9.50698420e-05 * tc[1] -
                  1.72375833e-07 * tc[2] + 8.77244480e-11 * tc[3];
    // species 19: aC3H5
    species[19] = +1.98138210e-02 + 2.49941200e-05 * tc[1] -
                  1.00066665e-07 * tc[2] + 6.33862840e-11 * tc[3];
    // species 20: C3H6
    species[20] = +2.09251800e-02 + 8.97358800e-06 * tc[1] -
                  5.00673600e-08 * tc[2] + 2.86325840e-11 * tc[3];
    // species 21: N2
    species[21] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                  1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
  } else {
    // species 0: H2
    species[0] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 1: H
    species[1] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 2: O
    species[2] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 3: O2
    species[3] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 4: OH
    species[4] = +5.48429716e-04 + 2.53010456e-07 * tc[1] -
                 2.63838467e-10 * tc[2] + 4.69649504e-14 * tc[3];
    // species 5: H2O
    species[5] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 6: HO2
    species[6] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 7: H2O2
    species[7] = +4.90831694e-03 - 3.80278450e-06 * tc[1] +
                 1.11355796e-09 * tc[2] - 1.15163322e-13 * tc[3];
    // species 8: CH3
    species[8] = +7.23990037e-03 - 5.97428696e-06 * tc[1] +
                 1.78705393e-09 * tc[2] - 1.86861758e-13 * tc[3];
    // species 9: CH4
    species[9] = +1.33909467e-02 - 1.14657162e-05 * tc[1] +
                 3.66877605e-09 * tc[2] - 4.07260920e-13 * tc[3];
    // species 10: CO
    species[10] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 11: CO2
    species[11] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 12: CH2O
    species[12] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 13: C2H2
    species[13] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 14: C2H4
    species[14] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 15: C2H6
    species[15] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 16: HCCO
    species[16] = +4.08534010e-03 - 3.18690940e-06 * tc[1] +
                  8.58781560e-10 * tc[2] - 7.76313280e-14 * tc[3];
    // species 17: CH2CO
    species[17] = +9.00359745e-03 - 8.33879270e-06 * tc[1] +
                  2.77003765e-09 * tc[2] - 3.17935280e-13 * tc[3];
    // species 18: CH3CHO
    species[18] = +1.17230590e-02 - 8.45262740e-06 * tc[1] +
                  2.05117353e-09 * tc[2] - 1.63939452e-13 * tc[3];
    // species 19: aC3H5
    species[19] = +1.43247310e-02 - 1.13563264e-05 * tc[1] +
                  3.32424030e-09 * tc[2] - 3.61455548e-13 * tc[3];
    // species 20: C3H6
    species[20] = +1.49083400e-02 - 9.89979800e-06 * tc[1] +
                  2.16360660e-09 * tc[2] - 1.50648160e-13 * tc[3];
    // species 21: N2
    species[21] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                  3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(amrex::Real* J, amrex::Real* sc, amrex::Real T, const int consP)
{
#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;
  amrex::Real g_RT[22];
  amrex::Real h_RT[22];
  amrex::Real g_RT_qss[10];
  amrex::Real h_RT_qss[10];
  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142];
  amrex::Real T_pert1, pertT;
  amrex::Real wdot_pert1[22], wdot[22];

  // dwdot/dT by finite difference
  pertT = 1e-2;
  T_pert1 = T + pertT;

  tc[0] = log(T_pert1);
  tc[1] = T_pert1;
  tc[2] = T_pert1 * T_pert1;
  tc[3] = T_pert1 * T_pert1 * T_pert1;
  tc[4] = T_pert1 * T_pert1 * T_pert1 * T_pert1;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot_pert1, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[142], tc, invT);
  tc[0] = log(T);
  tc[1] = T;
  tc[2] = T * T;
  tc[3] = T * T * T;
  tc[4] = T * T * T * T;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[142], tc, invT);

  // compute the species enthalpy
  speciesEnthalpy(h_RT, tc);
  for (int i = 0; i < 529; i++) {
    J[i] = 0.0;
  }
  // Species terms
  amrex::Real x1 = kf_qss[85] * sc[1] + 10.0e-13;
  const amrex::Real x2 = refCinv * sc[0];
  amrex::Real x3 = sc[12] + sc[16] + sc[17] + sc[18] + sc[19] + sc[1] + sc[20] +
                   sc[2] + sc[4] + sc[6] + sc[7] + sc[8];
  amrex::Real x4 = 3.0 * sc[13] + 3.0 * sc[14] + x3;
  amrex::Real x5 = 3.0 * sc[15] + 2 * sc[9];
  amrex::Real x9 =
    2 * sc[0] + 1.5 * sc[10] + 2 * sc[11] + sc[21] + sc[3] + 6.0 * sc[5];
  const amrex::Real x10 = x4 + x5 + x9;
  amrex::Real x15 = g_RT[0] - g_RT[14] + g_RT_qss[5];
  amrex::Real x16 = -50251.216247259297 * invT - 9.31 * tc[0];
  amrex::Real x19 = 7.0e+44 * exp(x16);
  amrex::Real x22 = log(
    0.2655 * exp(-0.0055555555555555601 * tc[1]) +
    0.7345 * exp(-0.00096618357487922703 * tc[1]) + exp(-5417.0 * invT));
  amrex::Real x25 = -0.29097730287517898 * x22 +
                    0.43429448190325198 * log(x10 * x19 / kf_qss[11]) - 0.4;
  amrex::Real x31 =
    1.7777777777777777 * ((x25) * (x25)) /
      ((-0.73540532268950665 * x22 - 0.18666666666666668 * x25 + 1) *
       (-0.73540532268950665 * x22 - 0.18666666666666668 * x25 + 1)) +
    1.0;
  amrex::Real x35 = exp(M_LN10 * (0.43429448190325198 * x22 / x31)) /
                    (1.0 + x10 * x19 / kf_qss[11]);
  amrex::Real x36 = x35 * exp(x15 + x16);
  const amrex::Real x42 = exp(-g_RT[14] + g_RT[9] - g_RT_qss[2] + g_RT_qss[5]);
  const amrex::Real x48 = exp(g_RT[0] - g_RT[1] + g_RT_qss[5] - g_RT_qss[6]);
  const amrex::Real x55 = 2.5 * sc[13] + 2.5 * sc[14] + x3 + x5 + x9;
  amrex::Real x56 = -g_RT[13] + g_RT_qss[5];
  amrex::Real x57 = -25009.8682904946 * invT - 0.64 * tc[0];
  amrex::Real x61 = 1.0 + 2450000000.0 * x55 * exp(x57) / kf_qss[15];
  amrex::Real x63 = exp(x56 + x57) / x61;
  amrex::Real x65 =
    -kf_qss[112] * sc[9] * x42 -
    kf_qss[130] * sc[9] * exp(-g_RT[19] - g_RT[1] + g_RT[9] + g_RT_qss[5]) -
    kf_qss[79] * sc[1] - kf_qss[80] * sc[2] - kf_qss[81] * sc[4] -
    kf_qss[82] * sc[3] - kf_qss[85] * sc[0] * x48 - 7.0e+44 * x10 * x2 * x36 -
    2450000000.0 * x55 * x63 + 10.0e-13;
  const amrex::Real x67 = x1 / x65;
  const amrex::Real x74 = exp(g_RT[1] - g_RT[8] - g_RT_qss[0] + g_RT_qss[6]);
  amrex::Real x81 = -18014.512518476698 * invT - 3.4 * tc[0];
  amrex::Real x83 = 2.565e+21 * exp(x81);
  amrex::Real x86 = log(
    exp(0.0795 * invT) + 1.9816 * exp(-0.23292648840026101 * tc[1]) -
    0.9816 * exp(-0.000185745862510913 * tc[1]));
  amrex::Real x89 = -0.29097730287517898 * x86 +
                    0.43429448190325198 * log(x10 * x83 / kf_qss[6]) - 0.4;
  amrex::Real x94 =
    1.7777777777777777 * ((x89) * (x89)) /
      ((-0.73540532268950665 * x86 - 0.18666666666666668 * x89 + 1) *
       (-0.73540532268950665 * x86 - 0.18666666666666668 * x89 + 1)) +
    1.0;
  amrex::Real x97 = exp(M_LN10 * (0.43429448190325198 * x86 / x94)) /
                    (1.0 + x10 * x83 / kf_qss[6]);
  amrex::Real x102 = g_RT[3] - g_RT[6];
  const amrex::Real x105 = refCinv * sc[12];
  const amrex::Real x110 =
    exp(g_RT[12] - g_RT[19] + g_RT[4] - g_RT[6] + g_RT_qss[6]);
  amrex::Real x113 = -1670.67933047167 * invT - 3.86 * tc[0];
  amrex::Real x115 = 1.4e+18 * exp(x113);
  amrex::Real x118 = log(
    0.218 * exp(-0.0048192771084337397 * tc[1]) +
    0.782 * exp(-0.000375516334960571 * tc[1]) + exp(-6095.0 * invT));
  amrex::Real x120 = -0.29097730287517898 * x118 +
                     0.43429448190325198 * log(x10 * x115 / kf_qss[8]) - 0.4;
  amrex::Real x125 =
    1.7777777777777777 * ((x120) * (x120)) /
      ((-0.73540532268950665 * x118 - 0.18666666666666668 * x120 + 1) *
       (-0.73540532268950665 * x118 - 0.18666666666666668 * x120 + 1)) +
    1.0;
  amrex::Real x129 = exp(M_LN10 * (0.43429448190325198 * x118 / x125)) /
                     (1.0 + x10 * x115 / kf_qss[8]);
  amrex::Real x135 = x10 * exp(-4916.3261815789501 * invT - 11.94 * tc[0]);
  amrex::Real x139 = log(
    0.825 * exp(-0.00074593465612412396 * tc[1]) +
    0.175 * exp(-1.6666666666666701e-5 * tc[1]) + exp(-10139.8 * invT));
  amrex::Real x141 = -0.29097730287517898 * x139 +
                     0.43429448190325198 * log(4.27e+46 * x135 / kf_qss[9]) -
                     0.4;
  amrex::Real x143 = -0.55155399201712996 * x139 - 0.14 * x141 + 0.75;
  amrex::Real x146 = ((x141) * (x141)) / ((x143) * (x143)) + 1.0;
  amrex::Real x150 = exp(M_LN10 * (0.43429448190325198 * x139 / x146)) /
                     (1.0 + 4.27e+46 * x135 / kf_qss[9]);
  amrex::Real x154 = g_RT[4] - g_RT[5];
  const amrex::Real x159 = exp(g_RT[10] - g_RT[16] - g_RT_qss[1] + g_RT_qss[6]);
  amrex::Real x163 = -g_RT[10] + g_RT_qss[3];
  amrex::Real x165 = kf_qss[78] * exp(-g_RT[13] + g_RT_qss[6] - x163);
  amrex::Real x167 = g_RT[2] - g_RT[4];
  amrex::Real x170 =
    -kf_qss[104] * sc[0] * exp(g_RT[0] - g_RT[14] - g_RT[1] + g_RT_qss[6]) -
    kf_qss[105] * sc[4] * exp(-g_RT[14] + g_RT_qss[6] - x167) -
    kf_qss[108] * sc[5] * exp(-g_RT[14] + g_RT_qss[6] - x154) -
    kf_qss[109] * sc[6] * exp(-g_RT[14] + g_RT_qss[6] - x102) -
    kf_qss[114] * sc[9] * exp(-g_RT[14] - g_RT[8] + g_RT[9] + g_RT_qss[6]) -
    kf_qss[131] * sc[4] * x105 * x110 - kf_qss[59] * sc[1] * x74 -
    kf_qss[76] * sc[10] * x159 - kf_qss[84] * sc[1] - kf_qss[85] * sc[1] -
    kf_qss[86] * sc[2] - kf_qss[87] * sc[2] - kf_qss[88] * sc[4] -
    kf_qss[89] * sc[3] - kf_qss[90] * sc[3] - kf_qss[91] * sc[3] -
    kf_qss[92] * sc[6] - kf_qss[93] * sc[7] - kf_qss[95] * sc[8] -
    kf_qss[96] * sc[8] - sc[10] * x165 - sc[1] * x10 * x115 * x129 -
    4.27e+46 * sc[8] * x135 * x150 - x10 * x83 * x97 + 10.0e-13;
  amrex::Real x172 = kf_qss[85] * sc[0] * x48 + 10.0e-13;
  amrex::Real x173 = x172 / x170;
  amrex::Real x174 = kf_qss[90] * sc[3] + kf_qss[92] * sc[6] + 10.0e-13;
  amrex::Real x177 = x10 * exp(-2365.1183292821802 * invT - 7.297 * tc[0]);
  amrex::Real x181 = log(
    0.55 * exp(-0.00022988505747126401 * tc[1]) +
    0.45 * exp(-0.000112359550561798 * tc[1]) + exp(-7244.0 * invT));
  amrex::Real x183 = -0.29097730287517898 * x181 +
                     0.43429448190325198 * log(5.2e+27 * x177 / kf_qss[10]) -
                     0.4;
  amrex::Real x185 = -0.55155399201712996 * x181 - 0.14 * x183 + 0.75;
  amrex::Real x188 = ((x183) * (x183)) / ((x185) * (x185)) + 1.0;
  amrex::Real x192 = exp(M_LN10 * (0.43429448190325198 * x181 / x188)) /
                     (1.0 + 5.2e+27 * x177 / kf_qss[10]);
  const amrex::Real x198 = exp(g_RT[4] - g_RT[6] - g_RT_qss[6] + g_RT_qss[8]);
  amrex::Real x203 = -g_RT[17] - g_RT[1] + g_RT_qss[8];
  amrex::Real x204 = -5988.2783230761597 * invT - 7.64 * tc[0];
  amrex::Real x207 = 3.8e+29 * x10 * exp(x204);
  amrex::Real x209 = log(
    0.663 * exp(-0.00058582308142940799 * tc[1]) +
    0.337 * exp(-0.0003125 * tc[1]) + exp(-4131.0 * invT));
  amrex::Real x211 = -0.29097730287517898 * x209 +
                     0.43429448190325198 * log(x207 / kf_qss[7]) - 0.4;
  amrex::Real x216 =
    1.7777777777777777 * ((x211) * (x211)) /
      ((-0.73540532268950665 * x209 - 0.18666666666666668 * x211 + 1) *
       (-0.73540532268950665 * x209 - 0.18666666666666668 * x211 + 1)) +
    1.0;
  amrex::Real x220 = exp(M_LN10 * (0.43429448190325198 * x209 / x216)) /
                     (1.0 + x207 / kf_qss[7]);
  amrex::Real x222 = refC * x220 * exp(x203 + x204);
  amrex::Real x225 = -g_RT[2] + g_RT[3];
  amrex::Real x227 = kf_qss[90] * exp(-g_RT_qss[6] + g_RT_qss[8] - x225);
  amrex::Real x229 =
    -kf_qss[100] * sc[2] - kf_qss[101] * sc[4] - kf_qss[102] * sc[3] -
    kf_qss[103] * sc[3] - kf_qss[92] * sc[4] * x198 - kf_qss[97] -
    kf_qss[98] * sc[1] - kf_qss[99] * sc[1] - 5.2e+27 * sc[1] * x177 * x192 -
    sc[2] * x227 - 3.8e+29 * x10 * x222 + 10.0e-13;
  const amrex::Real x231 = x174 / x229;
  amrex::Real x232 = kf_qss[92] * sc[4] * x198 + sc[2] * x227 + 10.0e-13;
  amrex::Real x233 = x232 / x170;
  amrex::Real x234 = -x173 * x67 - x231 * x233 + 1;
  const amrex::Real x238 = exp(g_RT[11] - g_RT[3] + g_RT_qss[1] - g_RT_qss[5]);
  amrex::Real x244 = g_RT[2] - g_RT_qss[1];
  amrex::Real x250 =
    kf_qss[19] * exp(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[1]);
  amrex::Real x253 = exp(g_RT_qss[1] - g_RT_qss[2]);
  amrex::Real x262 =
    3200000000000000.0 * exp(-618.95649893980499 * invT - 3.14 * tc[0]);
  amrex::Real x265 = log(
    0.32 * exp(-0.012820512820512799 * tc[1]) +
    0.68 * exp(-0.00050125313283207998 * tc[1]) + exp(-5590.0 * invT));
  amrex::Real x267 = -0.29097730287517898 * x265 +
                     0.43429448190325198 * log(x10 * x262 / kf_qss[2]) - 0.4;
  amrex::Real x272 =
    1.7777777777777777 * ((x267) * (x267)) /
      ((-0.73540532268950665 * x265 - 0.18666666666666668 * x267 + 1) *
       (-0.73540532268950665 * x265 - 0.18666666666666668 * x267 + 1)) +
    1.0;
  amrex::Real x276 = exp(M_LN10 * (0.43429448190325198 * x265 / x272)) /
                     (1.0 + x10 * x262 / kf_qss[2]);
  amrex::Real x280 = -3570.32224388449 * invT - 5.11 * tc[0];
  amrex::Real x282 = 2.69e+21 * exp(x280);
  amrex::Real x285 = log(
    0.4093 * exp(-0.0036363636363636398 * tc[1]) +
    0.5907 * exp(-0.000815660685154976 * tc[1]) + exp(-5185.0 * invT));
  amrex::Real x287 = -0.29097730287517898 * x285 +
                     0.43429448190325198 * log(x10 * x282 / kf_qss[3]) - 0.4;
  amrex::Real x292 =
    1.7777777777777777 * ((x287) * (x287)) /
      ((-0.73540532268950665 * x285 - 0.18666666666666668 * x287 + 1) *
       (-0.73540532268950665 * x285 - 0.18666666666666668 * x287 + 1)) +
    1.0;
  amrex::Real x296 = exp(M_LN10 * (0.43429448190325198 * x285 / x292)) /
                     (1.0 + x10 * x282 / kf_qss[3]);
  amrex::Real x311 = kf_qss[80] * exp(g_RT[10] - g_RT_qss[5] - x244);
  amrex::Real x313 =
    -kf_qss[107] * sc[12] * exp(g_RT[12] - g_RT[14] - x244) -
    kf_qss[111] * sc[14] - kf_qss[28] * sc[0] - kf_qss[29] * sc[2] -
    kf_qss[30] * sc[3] - kf_qss[31] * sc[3] - kf_qss[32] * sc[4] -
    kf_qss[33] * sc[4] - kf_qss[34] * sc[6] - kf_qss[37] * sc[21] * x253 -
    kf_qss[45] * sc[5] * x253 - kf_qss[46] * sc[10] * x253 -
    kf_qss[47] * sc[11] * x253 -
    kf_qss[55] * sc[5] * exp(-g_RT[8] + g_RT_qss[1] - x154) -
    kf_qss[62] * sc[8] - kf_qss[72] * sc[9] - kf_qss[76] * sc[16] -
    kf_qss[77] * sc[10] * exp(g_RT[10] - g_RT[13] - x244) -
    kf_qss[82] * sc[11] * x238 -
    kf_qss[83] * sc[11] * exp(g_RT[11] - g_RT[17] - x244) -
    sc[10] * x10 * x282 * x296 - sc[10] * x311 - sc[1] * x10 * x262 * x276 -
    sc[1] * x250 + 10.0e-13;
  amrex::Real x315 = kf_qss[80] * sc[2] + kf_qss[82] * sc[3] + 10.0e-13;
  amrex::Real x316 = x315 / x313;
  amrex::Real x318 =
    -x316 * x67 + (kf_qss[76] * sc[10] * x159 + 10.0e-13) / x313;
  amrex::Real x319 = x318 / x234;
  amrex::Real x321 = kf_qss[59] * sc[8] + 10.0e-13;
  amrex::Real x325 = kf_qss[110] * sc[14] + 10.0e-13;
  const amrex::Real x329 = exp(g_RT[12] - g_RT[2] + g_RT_qss[7] - g_RT_qss[9]);
  const amrex::Real x332 =
    exp(g_RT[12] + g_RT[4] - g_RT[6] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x339 =
    kf_qss[134] * exp(-g_RT[1] + g_RT[8] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x341 = kf_qss[136] * sc[12] * x329 +
                     kf_qss[139] * sc[4] * x105 * x332 + sc[8] * x339 +
                     10.0e-13;
  x9 = sc[13] + sc[14] + x3 + x5 + x9;
  const amrex::Real x346 = -3522.5166606330399 * invT - 6.66 * tc[0];
  amrex::Real x348 = 6.26e+26 * exp(x346);
  amrex::Real x351 =
    log(exp(-0.00076335877862595397 * tc[1]) + exp(-48097.0 * invT));
  amrex::Real x353 = -0.29097730287517898 * x351 +
                     0.43429448190325198 * log(x348 * x9 / kf_qss[14]) - 0.4;
  amrex::Real x358 =
    1.7777777777777777 * ((x353) * (x353)) /
      ((-0.73540532268950665 * x351 - 0.18666666666666668 * x353 + 1) *
       (-0.73540532268950665 * x351 - 0.18666666666666668 * x353 + 1)) +
    1.0;
  amrex::Real x362 = exp(M_LN10 * (0.43429448190325198 * x351 / x358)) /
                     (1.0 + x348 * x9 / kf_qss[14]);
  const amrex::Real x365 = -g_RT[1] - g_RT[20] + g_RT_qss[9];
  amrex::Real x367 = refC * exp(x346 + x365);
  amrex::Real x374 =
    -kf_qss[115] * refC * exp(-g_RT[14] - g_RT[8] + g_RT_qss[9]) -
    kf_qss[134] * sc[1] - kf_qss[135] * sc[1] - kf_qss[136] * sc[2] -
    kf_qss[137] * sc[4] - kf_qss[138] * sc[3] - kf_qss[139] * sc[6] -
    kf_qss[140] * sc[8] - 6.26e+26 * x362 * x367 * x9 + 10.0e-13;
  const amrex::Real x376 = x341 / x374;
  amrex::Real x377 = g_RT[8] - g_RT[9];
  amrex::Real x378 = g_RT[15] - g_RT_qss[7];
  amrex::Real x388 = kf_qss[128] * exp(g_RT[8] - g_RT_qss[2] - x378);
  amrex::Real x397 = kf_qss[110] * exp(-g_RT[14] + g_RT_qss[7] - x163);
  amrex::Real x399 = -g_RT[14] - g_RT[1] + g_RT_qss[7];
  amrex::Real x400 = -3507.4201606588999 * invT - 7.62 * tc[0];
  amrex::Real x402 = 1.2e+30 * exp(x400);
  amrex::Real x405 = log(
    0.0247 * exp(-0.0047619047619047597 * tc[1]) +
    0.9753 * exp(-0.00101626016260163 * tc[1]) + exp(-4374.0 * invT));
  amrex::Real x407 = -0.29097730287517898 * x405 +
                     0.43429448190325198 * log(x10 * x402 / kf_qss[12]) - 0.4;
  amrex::Real x412 =
    1.7777777777777777 * ((x407) * (x407)) /
      ((-0.73540532268950665 * x405 - 0.18666666666666668 * x407 + 1) *
       (-0.73540532268950665 * x405 - 0.18666666666666668 * x407 + 1)) +
    1.0;
  amrex::Real x416 = exp(M_LN10 * (0.43429448190325198 * x405 / x412)) /
                     (1.0 + x10 * x402 / kf_qss[12]);
  amrex::Real x418 = refC * x416 * exp(x399 + x400);
  amrex::Real x421 = -3364.00341090455 * invT - 7.08 * tc[0];
  amrex::Real x423 = 1.99e+29 * exp(x421);
  amrex::Real x426 = log(
    0.1578 * exp(-0.008 * tc[1]) + 0.8422 * exp(-0.000450653447498873 * tc[1]) +
    exp(-6882.0 * invT));
  amrex::Real x428 = -0.29097730287517898 * x426 +
                     0.43429448190325198 * log(x10 * x423 / kf_qss[13]) - 0.4;
  amrex::Real x433 =
    1.7777777777777777 * ((x428) * (x428)) /
      ((-0.73540532268950665 * x426 - 0.18666666666666668 * x428 + 1) *
       (-0.73540532268950665 * x426 - 0.18666666666666668 * x428 + 1)) +
    1.0;
  amrex::Real x437 = exp(M_LN10 * (0.43429448190325198 * x426 / x433)) /
                     (1.0 + x10 * x423 / kf_qss[13]);
  amrex::Real x441 =
    -kf_qss[116] * sc[1] - kf_qss[117] * sc[2] - kf_qss[118] * sc[2] -
    kf_qss[119] * sc[3] - kf_qss[120] * sc[6] - kf_qss[121] * sc[6] -
    kf_qss[122] * sc[6] - kf_qss[123] * sc[7] -
    kf_qss[125] * sc[0] * exp(g_RT[0] - g_RT[1] - x378) -
    kf_qss[126] * sc[4] * exp(-x167 - x378) -
    kf_qss[127] * sc[5] * exp(-x154 - x378) -
    kf_qss[129] * sc[9] * exp(-x377 - x378) - kf_qss[136] * sc[12] * x329 -
    kf_qss[139] * sc[4] * x105 * x332 -
    kf_qss[64] * sc[1] * exp(g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7]) -
    sc[10] * x397 - sc[1] * x10 * x423 * x437 - sc[8] * x339 - sc[8] * x388 -
    1.2e+30 * x10 * x418 + 10.0e-13;
  amrex::Real x443 =
    kf_qss[134] * sc[1] + kf_qss[136] * sc[2] + kf_qss[139] * sc[6] + 10.0e-13;
  amrex::Real x444 = x443 / x441;
  amrex::Real x446 = (1.0 / ((-x376 * x444 + 1)));
  const amrex::Real x448 = x325 * x446 / x441;
  const amrex::Real x450 = exp(-g_RT[8] + g_RT_qss[2] - x154);
  const amrex::Real x453 = exp(g_RT[10] - g_RT[16] - g_RT[1] + g_RT_qss[2]);
  const amrex::Real x457 = exp(-g_RT[1] + g_RT[5] + g_RT_qss[2] - g_RT_qss[4]);
  amrex::Real x465 =
    -kf_qss[112] * sc[14] - kf_qss[113] * sc[14] - kf_qss[128] * sc[15] -
    kf_qss[37] * sc[21] - kf_qss[38] * sc[1] - kf_qss[39] * sc[2] -
    kf_qss[40] * sc[2] - kf_qss[41] * sc[4] - kf_qss[42] * sc[0] -
    kf_qss[43] * sc[3] - kf_qss[44] * sc[3] - kf_qss[45] * sc[5] -
    kf_qss[46] * sc[10] - kf_qss[47] * sc[11] - kf_qss[48] * sc[11] -
    kf_qss[56] * sc[5] * x450 - kf_qss[63] * sc[8] - kf_qss[67] * sc[5] * x457 -
    kf_qss[73] * sc[9] - kf_qss[74] * sc[10] * x453 + 10.0e-13;
  amrex::Real x467 = sc[8] * x388 + 10.0e-13;
  const amrex::Real x472 = exp(g_RT[1] - g_RT[2] - g_RT_qss[2] + g_RT_qss[3]);
  amrex::Real x476 =
    -x448 * x467 / x465 + (kf_qss[40] * sc[1] * x472 + 10.0e-13) / x465;
  const amrex::Real x479 = exp(-g_RT[1] + g_RT[8] + g_RT_qss[3] - g_RT_qss[8]);
  amrex::Real x482 = kf_qss[98] * sc[8] * x479 + 10.0e-13;
  const amrex::Real x483 = x482 / x229;
  amrex::Real x486 =
    kf_qss[91] * exp(g_RT[12] - g_RT[3] + g_RT_qss[3] - g_RT_qss[6]);
  amrex::Real x489 = kf_qss[78] * sc[13] + sc[12] * x486 + 10.0e-13;
  amrex::Real x491 = -x233 * x483 + x489 / x170;
  const amrex::Real x494 = exp(g_RT[1] - g_RT[2] - g_RT_qss[1] + g_RT_qss[3]);
  amrex::Real x497 = g_RT[12] - g_RT_qss[3];
  amrex::Real x502 =
    kf_qss[30] * exp(-g_RT[3] + g_RT[4] - g_RT_qss[1] + g_RT_qss[3]);
  amrex::Real x510 = x10 * exp(-2566.4049956040699 * invT - 9.588 * tc[0]);
  amrex::Real x514 = log(
    0.3827 * exp(-0.076475986540226401 * tc[1]) +
    0.6173 * exp(-0.00048123195380173197 * tc[1]) + exp(-5093.0 * invT));
  amrex::Real x516 = -0.29097730287517898 * x514 +
                     0.43429448190325198 * log(2.2e+36 * x510 / kf_qss[5]) -
                     0.4;
  amrex::Real x521 =
    1.7777777777777777 * ((x516) * (x516)) /
      ((-0.73540532268950665 * x514 - 0.18666666666666668 * x516 + 1) *
       (-0.73540532268950665 * x514 - 0.18666666666666668 * x516 + 1)) +
    1.0;
  amrex::Real x525 = exp(M_LN10 * (0.43429448190325198 * x514 / x521)) /
                     (1.0 + 2.2e+36 * x510 / kf_qss[5]);
  const amrex::Real x530 = exp(g_RT[1] - g_RT[4] - g_RT_qss[0] + g_RT_qss[3]);
  const amrex::Real x540 = exp(-g_RT_qss[0] + g_RT_qss[3] - x225);
  amrex::Real x544 =
    kf_qss[22] * exp(g_RT[10] - g_RT[11] - g_RT_qss[0] + g_RT_qss[3]);
  amrex::Real x546 = -717.08374877172605 * invT - 2.57 * tc[0];
  amrex::Real x548 = 1350000000000.0 * exp(x546);
  amrex::Real x551 = log(
    0.2176 * exp(-0.0036900369003690001 * tc[1]) +
    0.7824 * exp(-0.00036297640653357502 * tc[1]) + exp(-6570.0 * invT));
  amrex::Real x553 = -0.29097730287517898 * x551 +
                     0.43429448190325198 * log(x10 * x548 / kf_qss[1]) - 0.4;
  amrex::Real x558 =
    1.7777777777777777 * ((x553) * (x553)) /
      ((-0.73540532268950665 * x551 - 0.18666666666666668 * x553 + 1) *
       (-0.73540532268950665 * x551 - 0.18666666666666668 * x553 + 1)) +
    1.0;
  amrex::Real x562 = exp(M_LN10 * (0.43429448190325198 * x551 / x558)) /
                     (1.0 + x10 * x548 / kf_qss[1]);
  amrex::Real x569 =
    -kf_qss[106] * sc[8] * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3]) -
    kf_qss[110] * sc[14] - kf_qss[132] * sc[19] - kf_qss[16] * x10 -
    kf_qss[18] * sc[1] * x530 - kf_qss[21] * sc[2] * x540 - kf_qss[23] * sc[1] -
    kf_qss[24] * sc[2] - kf_qss[25] * sc[2] - kf_qss[26] * sc[4] -
    kf_qss[27] * sc[3] - kf_qss[29] * sc[1] * x494 - kf_qss[40] * sc[1] * x472 -
    kf_qss[49] * sc[0] * exp(g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3]) -
    kf_qss[50] * sc[4] * exp(-x167 - x497) -
    kf_qss[51] * sc[5] * exp(-x154 - x497) -
    kf_qss[52] * sc[6] * exp(-x102 - x497) -
    kf_qss[53] * sc[7] * exp(-g_RT[6] + g_RT[7] - x497) - kf_qss[60] * sc[8] -
    kf_qss[61] * sc[9] * exp(-x377 - x497) - kf_qss[78] * sc[13] -
    kf_qss[98] * sc[8] * x479 - sc[10] * x544 - sc[12] * x486 -
    sc[1] * x10 * x548 * x562 - sc[4] * x502 - 2.2e+36 * sc[8] * x510 * x525 +
    10.0e-13;
  amrex::Real x571 = kf_qss[98] * sc[1] + 10.0e-13;
  amrex::Real x572 = x571 / x569;
  amrex::Real x574 =
    -x231 * x572 + (kf_qss[91] * sc[3] + sc[10] * x165 + 10.0e-13) / x569;
  amrex::Real x575 = x574 / x234;
  amrex::Real x576 = sc[10] * x397 + 10.0e-13;
  amrex::Real x578 = -x448 * x576 / x569 - x483 * x572 - x491 * x575 + 1;
  amrex::Real x584 =
    kf_qss[18] * sc[4] + kf_qss[21] * sc[3] + kf_qss[22] * sc[11] + 10.0e-13;
  amrex::Real x586 = x584 / x569 - x321 * x575 / x170;
  amrex::Real x587 = x586 / x578;
  const amrex::Real x590 = exp(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[2]);
  amrex::Real x595 =
    -x476 * x587 + (kf_qss[38] * sc[0] * x590 + 10.0e-13) / x465;
  amrex::Real x596 = kf_qss[128] * sc[15] + 10.0e-13;
  const amrex::Real x597 = x446 * x596 / x441;
  amrex::Real x601 =
    -x576 * x597 / x569 + (kf_qss[40] * sc[2] + 10.0e-13) / x569;
  amrex::Real x602 = x476 / x578;
  amrex::Real x604 = kf_qss[67] * sc[1] + 10.0e-13;
  amrex::Real x606 = -g_RT[12] - g_RT[1] + g_RT_qss[4];
  amrex::Real x607 = -2797.88466187424 * invT - 4.8 * tc[0];
  amrex::Real x609 = 2.2e+18 * exp(x607);
  amrex::Real x613 = log(
    0.242 * exp(-0.010638297872340399 * tc[1]) +
    0.758 * exp(-0.00064308681672025703 * tc[1]) + exp(-4200.0 * invT));
  amrex::Real x615 = -0.29097730287517898 * x613 +
                     0.43429448190325198 * log(x10 * x609 / kf_qss[4]) - 0.4;
  amrex::Real x620 =
    1.7777777777777777 * ((x615) * (x615)) /
      ((-0.73540532268950665 * x613 - 0.18666666666666668 * x615 + 1) *
       (-0.73540532268950665 * x613 - 0.18666666666666668 * x615 + 1)) +
    1.0;
  amrex::Real x624 = exp(M_LN10 * (0.43429448190325198 * x613 / x620)) /
                     (1.0 + x10 * x609 / kf_qss[4]);
  amrex::Real x626 = refC * x624 * exp(x606 + x607);
  const amrex::Real x630 = exp(g_RT[4] - g_RT[6] - g_RT[8] + g_RT_qss[4]);
  amrex::Real x634 = -kf_qss[57] * sc[2] * exp(-g_RT[8] + g_RT_qss[4] - x225) -
                     kf_qss[58] * sc[4] * x630 - kf_qss[65] * sc[1] -
                     kf_qss[66] * sc[1] - kf_qss[67] * sc[1] -
                     kf_qss[68] * sc[2] - kf_qss[69] * sc[4] -
                     kf_qss[70] * sc[3] - 2.2e+18 * x10 * x626 + 10.0e-13;
  const amrex::Real x637 = (kf_qss[67] * sc[5] * x457 + 10.0e-13) / x634;
  amrex::Real x639 = kf_qss[112] * sc[14] + 10.0e-13;
  const amrex::Real x640 = x639 / x65;
  amrex::Real x641 = kf_qss[112] * sc[9] * x42 + 10.0e-13;
  amrex::Real x642 = x641 / x465;
  amrex::Real x643 =
    -x601 * x602 - x640 * x642 + 1 - x467 * x597 / x465 - x604 * x637 / x465;
  amrex::Real x646 =
    -x319 * x491 + (kf_qss[29] * sc[1] * x494 + sc[4] * x502 + 10.0e-13) / x313;
  amrex::Real x647 = x646 / x578;
  amrex::Real x649 = -x316 * x640 - x601 * x647 +
                     (kf_qss[37] * sc[21] + kf_qss[45] * sc[5] +
                      kf_qss[46] * sc[10] + kf_qss[47] * sc[11] + 10.0e-13) /
                       x313;
  amrex::Real x650 = x649 / x643;
  amrex::Real x655 = kf_qss[33] * exp(g_RT_qss[0] - g_RT_qss[1] - x154);
  amrex::Real x659 = kf_qss[82] * sc[11] * x238 + sc[10] * x311 + 10.0e-13;
  const amrex::Real x660 = x659 / x65;
  amrex::Real x662 = kf_qss[76] * sc[16] + 10.0e-13;
  amrex::Real x664 = -x173 * x660 + x662 / x170;
  amrex::Real x668 =
    -x575 * x664 + (kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13) / x569;
  amrex::Real x669 = x668 / x578;
  amrex::Real x671 = kf_qss[37] * sc[21] * x253 + kf_qss[45] * sc[5] * x253 +
                     kf_qss[46] * sc[10] * x253 + kf_qss[47] * sc[11] * x253 +
                     10.0e-13;
  amrex::Real x674 = -x476 * x669 - x642 * x660 + x671 / x465;
  amrex::Real x675 = -x316 * x660 - x319 * x664 - x646 * x669 - x650 * x674 + 1;
  const amrex::Real x677 =
    (x587 * x646 + x595 * x650 -
     (kf_qss[19] * sc[0] + sc[5] * x655 + 10.0e-13) / x313 +
     x319 * x321 / x170) /
    x675;
  const amrex::Real x678 =
    (x476 * x587 - (kf_qss[38] * sc[0] * x590 + 10.0e-13) / x465) / x643;
  const amrex::Real x679 = (x476 * x669 + x642 * x660 - x671 / x465) / x643;
  const amrex::Real x680 = (-x584 / x569 + x321 * x575 / x170) / x578;
  const amrex::Real x681 =
    (x575 * x664 -
     (kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13) / x569) /
    x578;
  const amrex::Real x682 =
    (x576 * x597 / x569 - (kf_qss[40] * sc[2] + 10.0e-13) / x569) / x578;
  const amrex::Real x683 = x321 / (x170 * x234);
  const amrex::Real x684 = (x173 * x660 - x662 / x170) / x234;
  const amrex::Real x685 = (x233 * x483 - x489 / x170) / x234;
  amrex::Real x688 = x640 * x641 / ((x465) * (x465));
  amrex::Real x692 = x55 *
                     exp(-50019.736580989098 * invT - 1.28 * tc[0] + x56) /
                     (kf_qss[15] * ((x61) * (x61)));
  const amrex::Real x693 = 0.43429448190325198 / x10;
  amrex::Real x696 = 2.3703703703703702 * ((x25) * (x25)) /
                     ((-0.73540532269 * x22 - 0.18666666666666668 * x25 + 1) *
                      (-0.73540532269 * x22 - 0.18666666666666668 * x25 + 1) *
                      (-0.73540532269 * x22 - 0.18666666666666668 * x25 + 1));
  x25 = 1.7777777777777777 * x25 /
        ((-0.73540532268950665 * x22 - 0.18666666666666668 * x25 + 1) *
         (-0.73540532268950665 * x22 - 0.18666666666666668 * x25 + 1));
  amrex::Real x701 = 7.0e+44 * x10 * x2 * x22 * x36 / ((x31) * (x31));
  amrex::Real x703 = exp(M_LN10 * (0.43429448190325198 * x22 / x31)) * x10 /
                     (kf_qss[11] * ((1.0 + x10 * x19 / kf_qss[11]) *
                                    (1.0 + x10 * x19 / kf_qss[11])));
  amrex::Real x706 =
    x2 * x703 * exp(-100502.432494519 * invT - 18.62 * tc[0] + x15);
  amrex::Real x707 =
    -1.4e+45 * x2 * x36 - 4900000000.0 * x63 + 1.2005e+19 * x692 +
    x701 * (4.0 * x25 * x693 + 0.56 * x693 * x696) + 9.8e+89 * x706;
  amrex::Real x708 = -kf_qss[85] * x48 - 7.0e+44 * refCinv * x10 * x36 + x707;
  amrex::Real x712 = 2.3703703703703702 * ((x615) * (x615)) /
                     ((-0.73540532269 * x613 - 0.18666666666666668 * x615 + 1) *
                      (-0.73540532269 * x613 - 0.18666666666666668 * x615 + 1) *
                      (-0.73540532269 * x613 - 0.18666666666666668 * x615 + 1));
  x615 = 1.7777777777777777 * x615 /
         ((-0.73540532268950665 * x613 - 0.18666666666666668 * x615 + 1) *
          (-0.73540532268950665 * x613 - 0.18666666666666668 * x615 + 1));
  amrex::Real x716 = 2.2e+18 * x10 * x613 * x626 / ((x620) * (x620));
  amrex::Real x718 = exp(M_LN10 * (0.43429448190325198 * x613 / x620)) * x10 /
                     (kf_qss[4] * ((1.0 + x10 * x609 / kf_qss[4]) *
                                   (1.0 + x10 * x609 / kf_qss[4])));
  amrex::Real x720 = refC * exp(-5595.76932374848 * invT - 9.6 * tc[0] + x606);
  amrex::Real x722 = -4.4e+18 * refC * x624 * exp(x606 + x607) +
                     x716 * (4.0 * x615 * x693 + 0.56 * x693 * x712) +
                     9.68e+36 * x718 * x720;
  amrex::Real x725 = x604 / x465;
  amrex::Real x726 =
    x725 * (kf_qss[67] * sc[5] * x457 + 10.0e-13) / ((x634) * (x634));
  amrex::Real x729 = x604 * x637 / ((x465) * (x465));
  amrex::Real x730 = (kf_qss[40] * sc[1] * x472 + 10.0e-13) / ((x465) * (x465));
  amrex::Real x731 = exp(M_LN10 * (0.43429448190325198 * x426 / x433)) * x10 /
                     (kf_qss[13] * ((1.0 + x10 * x423 / kf_qss[13]) *
                                    (1.0 + x10 * x423 / kf_qss[13])));
  amrex::Real x734 =
    sc[1] * x731 * exp(-6728.0068218091001 * invT - 14.16 * tc[0]);
  amrex::Real x736 = 2.3703703703703702 * ((x407) * (x407)) /
                     ((-0.73540532269 * x405 - 0.18666666666666668 * x407 + 1) *
                      (-0.73540532269 * x405 - 0.18666666666666668 * x407 + 1) *
                      (-0.73540532269 * x405 - 0.18666666666666668 * x407 + 1));
  x407 = 1.7777777777777777 * x407 /
         ((-0.73540532268950665 * x405 - 0.18666666666666668 * x407 + 1) *
          (-0.73540532268950665 * x405 - 0.18666666666666668 * x407 + 1));
  amrex::Real x742 = 1.2e+30 * x10 * x405 * x418 / ((x412) * (x412));
  amrex::Real x743 = exp(M_LN10 * (0.43429448190325198 * x405 / x412)) * x10 /
                     (kf_qss[12] * ((1.0 + x10 * x402 / kf_qss[12]) *
                                    (1.0 + x10 * x402 / kf_qss[12])));
  amrex::Real x746 =
    refC * exp(-7014.8403213177899 * invT - 15.24 * tc[0] + x399);
  amrex::Real x748 = 2.3703703703703702 * ((x428) * (x428)) /
                     ((-0.73540532269 * x426 - 0.18666666666666668 * x428 + 1) *
                      (-0.73540532269 * x426 - 0.18666666666666668 * x428 + 1) *
                      (-0.73540532269 * x426 - 0.18666666666666668 * x428 + 1));
  x428 = 1.7777777777777777 * x428 /
         ((-0.73540532268950665 * x426 - 0.18666666666666668 * x428 + 1) *
          (-0.73540532268950665 * x426 - 0.18666666666666668 * x428 + 1));
  amrex::Real x752 = sc[1] * x10 * x423 * x426 * x437 / ((x433) * (x433));
  amrex::Real x755 =
    -3.98e+29 * sc[1] * x437 * exp(x421) - 2.4e+30 * x418 + 7.9202e+58 * x734 +
    x742 * (4.0 * x407 * x693 + 0.56 * x693 * x736) + 2.88e+60 * x743 * x746 +
    x752 * (4.0 * x428 * x693 + 0.56 * x693 * x748);
  amrex::Real x756 = -kf_qss[125] * exp(g_RT[0] - g_RT[1] - x378) + x755;
  amrex::Real x759 = x376 * x443 / ((x441) * (x441));
  amrex::Real x762 =
    0.77207907893911465 * x353 /
    (x9 * ((-0.73540532268950665 * x351 - 0.18666666666666668 * x353 + 1) *
           (-0.73540532268950665 * x351 - 0.18666666666666668 * x353 + 1)));
  x353 = 1.0294387719188194 * ((x353) * (x353)) /
         (x9 * ((-0.73540532269 * x351 - 0.18666666666666668 * x353 + 1) *
                (-0.73540532269 * x351 - 0.18666666666666668 * x353 + 1) *
                (-0.73540532269 * x351 - 0.18666666666666668 * x353 + 1)));
  amrex::Real x766 = 6.26e+26 * x351 * x362 * x367 * x9 / ((x358) * (x358));
  amrex::Real x767 = exp(M_LN10 * (0.43429448190325198 * x351 / x358)) * x9 /
                     (kf_qss[14] * ((1.0 + x348 * x9 / kf_qss[14]) *
                                    (1.0 + x348 * x9 / kf_qss[14])));
  amrex::Real x773 =
    refC * x767 * exp(-7045.0333212660798 * invT - 13.32 * tc[0] + x365);
  amrex::Real x774 = -1.252e+27 * x362 * x367 +
                     x766 * (0.56 * x353 + 4.0 * x762) + 7.83752e+53 * x773;
  amrex::Real x777 = x341 * x444 / ((x374) * (x374));
  amrex::Real x779 = x756 * x759 + x774 * x777;
  amrex::Real x780 = (1.0 / ((-x376 * x444 + 1) * (-x376 * x444 + 1)));
  amrex::Real x783 = x325 * x467 * x780 / (x441 * x465);
  amrex::Real x784 = x446 * x467 / x465;
  amrex::Real x786 = x325 * x784 / ((x441) * (x441));
  amrex::Real x788 = x448 * x467 / ((x465) * (x465));
  amrex::Real x789 =
    kf_qss[42] * x730 - kf_qss[42] * x788 + x756 * x786 + x779 * x783;
  amrex::Real x790 = x601 / x578;
  amrex::Real x791 = x325 * x576 * x780 / (x441 * x569);
  amrex::Real x792 = x446 * x576 / x569;
  amrex::Real x794 = x325 * x792 / ((x441) * (x441));
  amrex::Real x796 = 2.3703703703703702 * ((x553) * (x553)) /
                     ((-0.73540532269 * x551 - 0.18666666666666668 * x553 + 1) *
                      (-0.73540532269 * x551 - 0.18666666666666668 * x553 + 1) *
                      (-0.73540532269 * x551 - 0.18666666666666668 * x553 + 1));
  x553 = 1.7777777777777777 * x553 /
         ((-0.73540532268950665 * x551 - 0.18666666666666668 * x553 + 1) *
          (-0.73540532268950665 * x551 - 0.18666666666666668 * x553 + 1));
  amrex::Real x800 = sc[1] * x10 * x548 * x551 * x562 / ((x558) * (x558));
  amrex::Real x801 = exp(M_LN10 * (0.43429448190325198 * x551 / x558)) * x10 /
                     (kf_qss[1] * ((1.0 + x10 * x548 / kf_qss[1]) *
                                   (1.0 + x10 * x548 / kf_qss[1])));
  amrex::Real x804 =
    sc[1] * x801 * exp(-1434.1674975434501 * invT - 5.14 * tc[0]);
  amrex::Real x809 = 2.3703703703703702 * ((x516) * (x516)) /
                     ((-0.73540532269 * x514 - 0.18666666666666668 * x516 + 1) *
                      (-0.73540532269 * x514 - 0.18666666666666668 * x516 + 1) *
                      (-0.73540532269 * x514 - 0.18666666666666668 * x516 + 1));
  x516 = 1.7777777777777777 * x516 /
         ((-0.73540532268950665 * x514 - 0.18666666666666668 * x516 + 1) *
          (-0.73540532268950665 * x514 - 0.18666666666666668 * x516 + 1));
  amrex::Real x815 = 2.2e+36 * sc[8] * x510 * x514 * x525 / ((x521) * (x521));
  amrex::Real x818 =
    sc[8] * x10 * exp(-5132.8099912081398 * invT - 19.176 * tc[0]);
  amrex::Real x819 =
    2.066115702479339e-73 * exp(M_LN10 * (0.43429448190325198 * x514 / x521)) /
    (kf_qss[5] * ((4.5454545454545456e-37 + x510 / kf_qss[5]) *
                  (4.5454545454545456e-37 + x510 / kf_qss[5])));
  const amrex::Real x821 =
    sc[8] * exp(-2566.4049956040699 * invT - 9.588 * tc[0]);
  amrex::Real x823 =
    -2 * kf_qss[16] - 2700000000000.0 * sc[1] * x562 * exp(x546) -
    4.4e+36 * x525 * x821 + x800 * (4.0 * x553 * x693 + 0.56 * x693 * x796) +
    3.645e+24 * x804 + x815 * (4.0 * x516 * x693 + 0.56 * x693 * x809) +
    9.68e+72 * x818 * x819;
  amrex::Real x824 =
    -kf_qss[49] * exp(g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3]) + x823;
  amrex::Real x827 = x448 * x576 / ((x569) * (x569));
  amrex::Real x829 = x483 * x571 / ((x569) * (x569));
  amrex::Real x837 =
    0.56 * ((x183) * (x183)) * x693 / ((x185) * (x185) * (x185)) +
    4.0 * x183 * x693 / ((x185) * (x185));
  amrex::Real x839 = 5.2e+27 * sc[1] * x177 * x181 * x192 / ((x188) * (x188));
  amrex::Real x840 =
    exp(M_LN10 * (0.43429448190325198 * x209 / x216)) /
    (kf_qss[7] * ((1.0 + x207 / kf_qss[7]) * (1.0 + x207 / kf_qss[7])));
  const amrex::Real x843 = refC * x10;
  amrex::Real x844 =
    x843 * exp(-11976.556646152299 * invT - 15.28 * tc[0] + x203);
  amrex::Real x846 =
    1.7777777777777777 * x211 /
    ((-0.73540532268950665 * x209 - 0.18666666666666668 * x211 + 1) *
     (-0.73540532268950665 * x209 - 0.18666666666666668 * x211 + 1));
  x211 = 2.3703703703703702 * ((x211) * (x211)) /
         ((-0.73540532269 * x209 - 0.18666666666666668 * x211 + 1) *
          (-0.73540532269 * x209 - 0.18666666666666668 * x211 + 1) *
          (-0.73540532269 * x209 - 0.18666666666666668 * x211 + 1));
  amrex::Real x850 = 3.8e+29 * x10 * x209 * x222 / ((x216) * (x216));
  const amrex::Real x851 =
    sc[1] * exp(-2365.1183292821802 * invT - 7.297 * tc[0]);
  const amrex::Real x854 = sc[1] * x10;
  const amrex::Real x855 =
    x854 * exp(-4730.2366585643604 * invT - 14.594 * tc[0]);
  amrex::Real x856 =
    3.6982248520710058e-56 * exp(M_LN10 * (0.43429448190325198 * x181 / x188)) /
    (kf_qss[10] * ((1.923076923076923e-28 + x177 / kf_qss[10]) *
                   (1.923076923076923e-28 + x177 / kf_qss[10])));
  amrex::Real x858 = -1.04e+28 * x192 * x851 - 7.6e+29 * x222 + x837 * x839 +
                     2.888e+59 * x840 * x844 +
                     x850 * (0.56 * x211 * x693 + 4.0 * x693 * x846) +
                     5.408e+55 * x855 * x856;
  amrex::Real x862 = ((x141) * (x141)) * x693 / ((x143) * (x143) * (x143));
  amrex::Real x864 = x141 * x693 / ((x143) * (x143));
  amrex::Real x867 = 4.27e+46 * sc[8] * x135 * x139 * x150 / ((x146) * (x146));
  amrex::Real x868 = sc[8] * exp(-4916.3261815789501 * invT - 11.94 * tc[0]);
  amrex::Real x871 = 2.3703703703703702 * ((x120) * (x120)) /
                     ((-0.73540532269 * x118 - 0.18666666666666668 * x120 + 1) *
                      (-0.73540532269 * x118 - 0.18666666666666668 * x120 + 1) *
                      (-0.73540532269 * x118 - 0.18666666666666668 * x120 + 1));
  x120 = 1.7777777777777777 * x120 /
         ((-0.73540532268950665 * x118 - 0.18666666666666668 * x120 + 1) *
          (-0.73540532268950665 * x118 - 0.18666666666666668 * x120 + 1));
  amrex::Real x875 = sc[1] * x10 * x115 * x118 * x129 / ((x125) * (x125));
  amrex::Real x877 =
    sc[8] * x10 * exp(-9832.6523631579003 * invT - 23.88 * tc[0]);
  amrex::Real x878 =
    5.4845910414689933e-94 * exp(M_LN10 * (0.43429448190325198 * x139 / x146)) /
    (kf_qss[9] * ((2.3419203747072597e-47 + x135 / kf_qss[9]) *
                  (2.3419203747072597e-47 + x135 / kf_qss[9])));
  amrex::Real x882 = exp(M_LN10 * (0.43429448190325198 * x118 / x125)) * x10 /
                     (kf_qss[8] * ((1.0 + x10 * x115 / kf_qss[8]) *
                                   (1.0 + x10 * x115 / kf_qss[8])));
  amrex::Real x885 =
    sc[1] * x882 * exp(-3341.3586609433401 * invT - 7.72 * tc[0]);
  amrex::Real x887 = 2.3703703703703702 * ((x89) * (x89)) /
                     ((-0.73540532269 * x86 - 0.18666666666666668 * x89 + 1) *
                      (-0.73540532269 * x86 - 0.18666666666666668 * x89 + 1) *
                      (-0.73540532269 * x86 - 0.18666666666666668 * x89 + 1));
  x89 = 1.7777777777777777 * x89 /
        ((-0.73540532268950665 * x86 - 0.18666666666666668 * x89 + 1) *
         (-0.73540532268950665 * x86 - 0.18666666666666668 * x89 + 1));
  amrex::Real x891 = x10 * x83 * x86 * x97 / ((x94) * (x94));
  amrex::Real x894 = exp(M_LN10 * (0.43429448190325198 * x86 / x94)) * x10 /
                     (kf_qss[6] * ((1.0 + x10 * x83 / kf_qss[6]) *
                                   (1.0 + x10 * x83 / kf_qss[6])));
  amrex::Real x895 = x894 * exp(-36029.025036953499 * invT - 6.8 * tc[0]);
  amrex::Real x896 = -2.8e+18 * sc[1] * x129 * exp(x113) -
                     8.54e+46 * x150 * x868 +
                     x867 * (0.56 * x862 + 4.0 * x864) +
                     x875 * (4.0 * x120 * x693 + 0.56 * x693 * x871) +
                     3.64658e+93 * x877 * x878 + 3.92e+36 * x885 +
                     x891 * (0.56 * x693 * x887 + 4.0 * x693 * x89) +
                     1.315845e+43 * x895 - 5.13e+21 * x97 * exp(x81);
  amrex::Real x897 =
    -kf_qss[104] * exp(g_RT[0] - g_RT[14] - g_RT[1] + g_RT_qss[6]) + x896;
  amrex::Real x900 = x231 * x232 / ((x170) * (x170));
  amrex::Real x903 = x174 * x233 / ((x229) * (x229));
  amrex::Real x906 = x172 * x67 / ((x170) * (x170));
  amrex::Real x908 = -kf_qss[85] * x48 * x67 / x170 +
                     x1 * x173 * x708 / ((x65) * (x65)) + x858 * x903 +
                     x897 * x900 + x897 * x906;
  amrex::Real x911 = x491 * x574 / ((x234) * (x234));
  amrex::Real x912 = x232 * x483 / ((x170) * (x170));
  amrex::Real x913 = x489 / ((x170) * (x170));
  amrex::Real x914 = x233 * x482 / ((x229) * (x229));
  amrex::Real x916 = x858 * x914 + x897 * x912 - x897 * x913;
  amrex::Real x917 =
    (kf_qss[91] * sc[3] + sc[10] * x165 + 10.0e-13) / ((x569) * (x569));
  amrex::Real x919 = x231 * x571 / ((x569) * (x569));
  amrex::Real x921 =
    x174 * x572 * x858 / ((x229) * (x229)) - x824 * x917 + x824 * x919;
  amrex::Real x922 = x491 / x234;
  amrex::Real x923 = -x575 * x916 + x756 * x794 + x779 * x791 + x824 * x827 +
                     x824 * x829 + x908 * x911 - x921 * x922 +
                     x482 * x572 * x858 / ((x229) * (x229));
  amrex::Real x926 = x476 * x601 / ((x578) * (x578));
  amrex::Real x927 = (kf_qss[40] * sc[2] + 10.0e-13) / ((x569) * (x569));
  amrex::Real x929 = x576 * x596 * x780 / (x441 * x569);
  amrex::Real x930 = x596 * x792 / ((x441) * (x441));
  amrex::Real x931 = x576 * x597 / ((x569) * (x569));
  amrex::Real x932 = x756 * x930 + x779 * x929 - x824 * x927 + x824 * x931;
  amrex::Real x933 = x467 * x596 * x780 / (x441 * x465);
  amrex::Real x934 = x596 * x784 / ((x441) * (x441));
  amrex::Real x936 = x467 * x597 / ((x465) * (x465));
  amrex::Real x937 = -kf_qss[42] * x688 - kf_qss[42] * x729 -
                     kf_qss[42] * x936 - x602 * x932 +
                     x639 * x642 * x708 / ((x65) * (x65)) + x722 * x726 +
                     x756 * x934 + x779 * x933 - x789 * x790 + x923 * x926;
  const amrex::Real x940 = x10 * exp(-974.22746499793698 * invT - 3.74 * tc[0]);
  amrex::Real x944 = log(
    0.4243 * exp(-0.0042194092827004199 * tc[1]) +
    0.5757 * exp(-0.000605326876513317 * tc[1]) + exp(-5069.0 * invT));
  amrex::Real x946 = -0.29097730287517898 * x944 +
                     0.43429448190325198 * log(2.69e+16 * x940 / kf_qss[0]) -
                     0.4;
  amrex::Real x948 = -0.55155399201712996 * x944 - 0.14 * x946 + 0.75;
  amrex::Real x951 = ((x946) * (x946)) / ((x948) * (x948)) + 1.0;
  amrex::Real x955 = exp(M_LN10 * (0.43429448190325198 * x944 / x951)) /
                     (1.0 + 2.69e+16 * x940 / kf_qss[0]);
  amrex::Real x958 =
    -kf_qss[17] * sc[2] - kf_qss[18] * sc[4] - kf_qss[19] * sc[0] -
    kf_qss[20] * sc[5] - kf_qss[21] * sc[3] - kf_qss[22] * sc[11] -
    kf_qss[38] * sc[0] * x590 - kf_qss[54] * sc[12] - kf_qss[59] * sc[8] -
    kf_qss[71] * sc[9] - kf_qss[75] * sc[16] - 2.69e+16 * sc[10] * x940 * x955 -
    sc[5] * x655 + 10.0e-13;
  amrex::Real x961 = (kf_qss[59] * sc[1] * x74 + 10.0e-13) / x958;
  amrex::Real x963 =
    -x922 * x961 + (kf_qss[18] * sc[1] * x530 + kf_qss[21] * sc[2] * x540 +
                    sc[10] * x544 + 10.0e-13) /
                     x958;
  amrex::Real x965 = -x790 * x963 + (kf_qss[38] * sc[1] + 10.0e-13) / x958;
  amrex::Real x968 = x595 * x965 / ((x643) * (x643));
  amrex::Real x971 = ((x946) * (x946)) / ((x948) * (x948) * (x948));
  amrex::Real x973 = x946 / ((x948) * (x948));
  amrex::Real x976 = 2.69e+16 * sc[10] * x940 * x944 * x955 / ((x951) * (x951));
  const amrex::Real x977 =
    sc[10] * exp(-974.22746499793698 * invT - 3.74 * tc[0]);
  amrex::Real x981 =
    sc[10] * x10 * exp(-1948.4549299958701 * invT - 7.48 * tc[0]);
  amrex::Real x982 = 1.3819598955238318e-33 *
                     exp(M_LN10 * (0.43429448190325198 * x944 / x951)) /
                     (kf_qss[0] * ((3.717472118959108e-17 + x940 / kf_qss[0]) *
                                   (3.717472118959108e-17 + x940 / kf_qss[0])));
  amrex::Real x984 = -5.38e+16 * x955 * x977 +
                     x976 * (0.56 * x693 * x971 + 4.0 * x693 * x973) +
                     1.44722e+33 * x981 * x982;
  amrex::Real x985 = -kf_qss[19] - kf_qss[38] * x590 + x984;
  amrex::Real x987 = (kf_qss[18] * sc[1] * x530 + kf_qss[21] * sc[2] * x540 +
                      sc[10] * x544 + 10.0e-13) /
                     ((x958) * (x958));
  amrex::Real x989 = x491 * x961 / ((x234) * (x234));
  amrex::Real x990 = x961 / x234;
  amrex::Real x991 = (kf_qss[59] * sc[1] * x74 + 10.0e-13) / ((x958) * (x958));
  amrex::Real x992 = x922 * x991;
  amrex::Real x993 = x908 * x989 - x916 * x990 - x985 * x987 + x985 * x992;
  amrex::Real x994 = (kf_qss[38] * sc[1] + 10.0e-13) / ((x958) * (x958));
  amrex::Real x995 = x963 / x578;
  amrex::Real x997 = x601 * x963 / ((x578) * (x578));
  amrex::Real x998 = -x790 * x993 + x923 * x997 - x932 * x995 - x985 * x994;
  amrex::Real x999 = x595 / x643;
  amrex::Real x1000 =
    (kf_qss[38] * sc[0] * x590 + 10.0e-13) / ((x465) * (x465));
  x584 = x584 / ((x569) * (x569));
  amrex::Real x1002 = x321 * x574 / (x170 * ((x234) * (x234)));
  amrex::Real x1004 = x321 * x575 / ((x170) * (x170));
  amrex::Real x1005 = x1002 * x908 + x1004 * x897 - x584 * x824 - x683 * x921;
  amrex::Real x1006 = x476 * x586 / ((x578) * (x578));
  amrex::Real x1007 = kf_qss[38] * x590 / x465 + kf_qss[42] * x1000 -
                      x1005 * x602 + x1006 * x923 - x587 * x789;
  amrex::Real x1008 = x965 / x643;
  amrex::Real x1009 = x586 * x963 / ((x578) * (x578));
  amrex::Real x1010 = x321 * x961 / (x170 * ((x234) * (x234)));
  amrex::Real x1011 = x683 * x991;
  amrex::Real x1013 =
    2.3703703703703702 * ((x287) * (x287)) /
    ((-0.73540532269 * x285 - 0.18666666666666668 * x287 + 1) *
     (-0.73540532269 * x285 - 0.18666666666666668 * x287 + 1) *
     (-0.73540532269 * x285 - 0.18666666666666668 * x287 + 1));
  x287 = 1.7777777777777777 * x287 /
         ((-0.73540532268950665 * x285 - 0.18666666666666668 * x287 + 1) *
          (-0.73540532268950665 * x285 - 0.18666666666666668 * x287 + 1));
  amrex::Real x1017 = sc[10] * x10 * x282 * x285 * x296 / ((x292) * (x292));
  amrex::Real x1018 = exp(M_LN10 * (0.43429448190325198 * x285 / x292)) * x10 /
                      (kf_qss[3] * ((1.0 + x10 * x282 / kf_qss[3]) *
                                    (1.0 + x10 * x282 / kf_qss[3])));
  amrex::Real x1025 =
    2.3703703703703702 * ((x267) * (x267)) /
    ((-0.73540532269 * x265 - 0.18666666666666668 * x267 + 1) *
     (-0.73540532269 * x265 - 0.18666666666666668 * x267 + 1) *
     (-0.73540532269 * x265 - 0.18666666666666668 * x267 + 1));
  x267 = 1.7777777777777777 * x267 /
         ((-0.73540532268950665 * x265 - 0.18666666666666668 * x267 + 1) *
          (-0.73540532268950665 * x265 - 0.18666666666666668 * x267 + 1));
  amrex::Real x1029 = sc[1] * x10 * x262 * x265 * x276 / ((x272) * (x272));
  amrex::Real x1030 = exp(M_LN10 * (0.43429448190325198 * x265 / x272)) * x10 /
                      (kf_qss[2] * ((1.0 + x10 * x262 / kf_qss[2]) *
                                    (1.0 + x10 * x262 / kf_qss[2])));
  amrex::Real x1034 =
    sc[1] * x1030 * exp(-1237.91299787961 * invT - 6.28 * tc[0]);
  amrex::Real x1035 =
    sc[1] * x276 * exp(-618.95649893980499 * invT - 3.14 * tc[0]);
  amrex::Real x1036 = 1.44722e+43 * sc[10] * x1018 *
                        exp(-7140.6444877689701 * invT - 10.22 * tc[0]) -
                      5.38e+21 * sc[10] * x296 * exp(x280) +
                      x1017 * (0.56 * x1013 * x693 + 4.0 * x287 * x693) +
                      x1029 * (0.56 * x1025 * x693 + 4.0 * x267 * x693) +
                      2.048e+31 * x1034 - 6400000000000000.0 * x1035;
  amrex::Real x1037 = -kf_qss[28] + x1036;
  amrex::Real x1039 =
    (kf_qss[19] * sc[0] + sc[5] * x655 + 10.0e-13) / ((x313) * (x313));
  amrex::Real x1041 = x318 * x491 / ((x234) * (x234));
  amrex::Real x1042 =
    (kf_qss[29] * sc[1] * x494 + sc[4] * x502 + 10.0e-13) / ((x313) * (x313));
  amrex::Real x1043 =
    (kf_qss[76] * sc[10] * x159 + 10.0e-13) / ((x313) * (x313));
  amrex::Real x1045 = x315 * x67 / ((x313) * (x313));
  amrex::Real x1047 =
    x1 * x316 * x708 / ((x65) * (x65)) - x1037 * x1043 + x1037 * x1045;
  amrex::Real x1048 =
    -x1037 * x1042 + x1041 * x908 - x1047 * x922 - x319 * x916;
  amrex::Real x1050 = x586 * x646 / ((x578) * (x578));
  amrex::Real x1051 = x315 * x640 / ((x313) * (x313));
  amrex::Real x1052 = (kf_qss[37] * sc[21] + kf_qss[45] * sc[5] +
                       kf_qss[46] * sc[10] + kf_qss[47] * sc[11] + 10.0e-13) /
                      ((x313) * (x313));
  amrex::Real x1053 = x601 * x646 / ((x578) * (x578));
  amrex::Real x1054 = x1037 * x1051 - x1037 * x1052 - x1048 * x790 +
                      x1053 * x923 + x316 * x639 * x708 / ((x65) * (x65)) -
                      x647 * x932;
  amrex::Real x1056 = x595 * x649 / ((x643) * (x643));
  amrex::Real x1057 = x319 * x321 / ((x170) * (x170));
  amrex::Real x1058 = x318 * x321 / (x170 * ((x234) * (x234)));
  amrex::Real x1059 = kf_qss[19] / x313 - x1005 * x647 - x1007 * x650 -
                      x1037 * x1039 - x1047 * x683 - x1048 * x587 +
                      x1050 * x923 - x1054 * x999 + x1056 * x937 +
                      x1057 * x897 + x1058 * x908;
  amrex::Real x1060 = x674 / x643;
  amrex::Real x1062 = x664 / x234;
  amrex::Real x1063 = -x1060 * x965 - x1062 * x961 - x669 * x963 +
                      (kf_qss[33] * sc[4] + sc[1] * x250 + 10.0e-13) / x958;
  amrex::Real x1064 = x1063 / x675;
  amrex::Real x1065 = x664 * x961 / ((x234) * (x234));
  amrex::Real x1066 = x1062 * x991;
  amrex::Real x1067 = x662 / ((x170) * (x170));
  amrex::Real x1068 = x172 * x660 / ((x170) * (x170));
  amrex::Real x1069 = -kf_qss[85] * x48 * x660 / x170 - x1067 * x897 +
                      x1068 * x897 + x173 * x659 * x708 / ((x65) * (x65));
  amrex::Real x1070 =
    (kf_qss[33] * sc[4] + sc[1] * x250 + 10.0e-13) / ((x958) * (x958));
  amrex::Real x1071 = x674 * x965 / ((x643) * (x643));
  amrex::Real x1072 = x574 * x664 / ((x234) * (x234));
  amrex::Real x1073 =
    (kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13) / ((x569) * (x569));
  amrex::Real x1074 =
    -x1062 * x921 - x1069 * x575 + x1072 * x908 - x1073 * x824;
  amrex::Real x1075 = x641 * x660 / ((x465) * (x465));
  x671 = x671 / ((x465) * (x465));
  amrex::Real x1078 = x476 * x668 / ((x578) * (x578));
  amrex::Real x1079 = -kf_qss[42] * x1075 + kf_qss[42] * x671 - x1074 * x602 +
                      x1078 * x923 + x642 * x659 * x708 / ((x65) * (x65)) -
                      x669 * x789;
  amrex::Real x1080 = x668 * x963 / ((x578) * (x578));
  amrex::Real x1081 = -x1008 * x1079 - x1060 * x998 + x1065 * x908 +
                      x1066 * x985 - x1069 * x990 - x1070 * x985 +
                      x1071 * x937 - x1074 * x995 + x1080 * x923 - x669 * x993;
  amrex::Real x1082 = -x587 * x646 - x595 * x650 +
                      (kf_qss[19] * sc[0] + sc[5] * x655 + 10.0e-13) / x313 -
                      x319 * x321 / x170;
  amrex::Real x1083 = x1082 / x675;
  amrex::Real x1084 = x321 * x990 / ((x170) * (x170));
  amrex::Real x1085 = x646 * x668 / ((x578) * (x578));
  amrex::Real x1086 = x315 * x660 / ((x313) * (x313));
  amrex::Real x1087 = x318 * x664 / ((x234) * (x234));
  amrex::Real x1088 = x649 * x674 / ((x643) * (x643));
  amrex::Real x1089 = x1037 * x1086 - x1047 * x1062 - x1048 * x669 -
                      x1054 * x1060 - x1069 * x319 - x1074 * x647 -
                      x1079 * x650 + x1085 * x923 + x1087 * x908 +
                      x1088 * x937 + x316 * x659 * x708 / ((x65) * (x65));
  amrex::Real x1092 = x1063 * x1082 / ((x675) * (x675));
  const amrex::Real x1094 = exp(g_RT[12] + g_RT[4] - g_RT[6] - g_RT_qss[1]);
  const amrex::Real x1097 = exp(g_RT[12] + g_RT[1] - g_RT[4] - g_RT_qss[1]);
  amrex::Real x1101 =
    kf_qss[28] * exp(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[1]);
  amrex::Real x1104 = -g_RT[10] + g_RT[17] - g_RT_qss[1];
  amrex::Real x1105 = x296 * exp(x1104 + x280);
  const amrex::Real x1112 = exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[1]);
  amrex::Real x1118 = refC * exp(
                               -g_RT[1] + g_RT[8] - g_RT_qss[1] -
                               618.95649893980499 * invT - 3.14 * tc[0]);
  const amrex::Real x1124 = -2.0 * g_RT[8] + g_RT[9];
  amrex::Real x1129 = kf_qss[31] * refCinv *
                      exp(g_RT[11] + 2.0 * g_RT[1] - g_RT[3] - g_RT_qss[1]);
  const amrex::Real x1134 = exp(g_RT[0] + g_RT[13] - 2.0 * g_RT_qss[1]);
  amrex::Real x1141 =
    kf_qss[111] * exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[1]);
  amrex::Real x1145 = exp(g_RT[13] + g_RT[1] - g_RT_qss[0] - g_RT_qss[1]);
  amrex::Real x1149 =
    kf_qss[107] * sc[14] * sc[2] + kf_qss[32] * sc[12] * sc[1] * x1097 +
    kf_qss[34] * sc[12] * sc[4] * x1094 + kf_qss[35] * sc[13] * sc[1] * x1145 +
    2.0 * kf_qss[36] * sc[0] * sc[13] * x1134 + kf_qss[55] * sc[4] * sc[8] +
    kf_qss[62] * sc[14] * sc[1] * x1112 +
    kf_qss[72] * ((sc[8]) * (sc[8])) * exp(-g_RT_qss[1] - x1124) +
    kf_qss[77] * sc[13] * sc[2] + kf_qss[83] * sc[17] * sc[2] +
    sc[11] * ((sc[1]) * (sc[1])) * x1129 + 2.69e+21 * sc[17] * x1105 * x843 +
    sc[19] * sc[1] * x1141 + sc[1] * sc[8] * x1101 +
    3200000000000000.0 * sc[8] * x10 * x1118 * x276 + 10.0e-13;
  amrex::Real x1154 = exp(
    g_RT[20] - g_RT[8] - g_RT_qss[6] - 4916.3261815789501 * invT -
    11.94 * tc[0]);
  amrex::Real x1161 =
    kf_qss[141] * exp(g_RT[19] + g_RT[8] - g_RT_qss[6] - g_RT_qss[7]);
  amrex::Real x1167 =
    kf_qss[96] * exp(g_RT[19] + g_RT[1] - g_RT[8] - g_RT_qss[6]);
  const amrex::Real x1170 = exp(g_RT[14] - g_RT_qss[6] - x163);
  const amrex::Real x1174 = exp(g_RT[0] + g_RT[13] - g_RT[1] - g_RT_qss[6]);
  amrex::Real x1178 = refCinv * sc[13] * sc[1];
  amrex::Real x1181 = x97 * exp(g_RT[13] + g_RT[1] - g_RT_qss[6] + x81);
  amrex::Real x1184 = g_RT[14] - g_RT[1] - g_RT_qss[6];
  amrex::Real x1185 = x129 * exp(x113 + x1184);
  const amrex::Real x1191 = exp(g_RT[10] - g_RT[2] + g_RT[8] - g_RT_qss[6]);
  const amrex::Real x1195 = exp(g_RT[13] - g_RT[8] + g_RT[9] - g_RT_qss[6]);
  const amrex::Real x1200 = exp(g_RT[13] - g_RT_qss[6] - x154);
  amrex::Real x1205 = kf_qss[89] * exp(g_RT[13] - g_RT_qss[6] - x102);
  const amrex::Real x1207 = exp(g_RT[17] + g_RT[1] - g_RT[2] - g_RT_qss[6]);
  amrex::Real x1210 = -g_RT[6] + g_RT[7];
  amrex::Real x1212 = kf_qss[93] * exp(g_RT[14] - g_RT_qss[6] - x1210);
  amrex::Real x1215 =
    kf_qss[104] * sc[14] * sc[1] + kf_qss[105] * sc[14] * sc[2] +
    kf_qss[108] * sc[14] * sc[4] + kf_qss[109] * sc[14] * sc[3] +
    kf_qss[114] * sc[14] * sc[8] + kf_qss[131] * sc[19] * sc[6] +
    kf_qss[84] * sc[0] * sc[13] * x1174 + kf_qss[86] * sc[17] * sc[1] * x1207 +
    kf_qss[87] * sc[10] * sc[8] * x1191 + kf_qss[88] * sc[13] * sc[5] * x1200 +
    kf_qss[94] * sc[10] * sc[14] * x1170 + kf_qss[95] * sc[13] * sc[9] * x1195 +
    sc[13] * sc[6] * x1205 + sc[14] * sc[6] * x1212 +
    1.4e+18 * sc[14] * x1185 * x843 + sc[19] * sc[1] * x1167 +
    sc[19] * sc[8] * x1161 + 4.27e+46 * sc[20] * x1154 * x150 * x843 +
    2.565e+21 * x10 * x1178 * x1181 + 10.0e-13;
  const amrex::Real x1217 = exp(g_RT[17] + g_RT[1] - g_RT[4] - g_RT_qss[5]);
  amrex::Real x1221 = sc[13] * exp(x57) / x61;
  const amrex::Real x1223 = exp(g_RT[13] - g_RT_qss[5]);
  amrex::Real x1229 =
    kf_qss[130] * sc[19] * sc[1] + kf_qss[79] * sc[13] * sc[1] * x1223 +
    kf_qss[81] * sc[17] * sc[1] * x1217 + sc[14] * x10 * x19 * x35 +
    2450000000.0 * x1221 * x55 + 10.0e-13;
  const amrex::Real x1230 = x1229 / x65;
  amrex::Real x1233 = kf_qss[100] * exp(g_RT[17] - g_RT_qss[8] - x167);
  const amrex::Real x1235 = exp(g_RT[17] - g_RT_qss[8] - x102);
  const amrex::Real x1238 = refCinv * sc[8];
  amrex::Real x1240 = kf_qss[97] * exp(g_RT[10] + g_RT[8] - g_RT_qss[8]);
  amrex::Real x1243 =
    kf_qss[99] * exp(g_RT[0] + g_RT[17] - g_RT[1] - g_RT_qss[8]);
  const amrex::Real x1248 = refCinv * sc[10];
  const amrex::Real x1249 = sc[4] * x1248;
  const amrex::Real x1251 =
    exp(g_RT[10] + g_RT[12] - g_RT[3] + g_RT[4] - g_RT_qss[8]);
  const amrex::Real x1257 = exp(
    g_RT[18] - g_RT[1] - g_RT_qss[8] - 2365.1183292821802 * invT -
    7.297 * tc[0]);
  const amrex::Real x1259 = refC * sc[18] * x1257;
  amrex::Real x1263 = kf_qss[101] * exp(g_RT[17] - g_RT_qss[8] - x154);
  amrex::Real x1265 = kf_qss[102] * sc[17] * sc[6] * x1235 +
                      kf_qss[103] * sc[12] * x1249 * x1251 +
                      sc[0] * sc[17] * x1243 + sc[10] * x1238 * x1240 +
                      sc[17] * sc[1] * x207 * x220 + sc[17] * sc[4] * x1233 +
                      sc[17] * sc[5] * x1263 + 5.2e+27 * x10 * x1259 * x192 +
                      10.0e-13;
  const amrex::Real x1266 = x1265 / x229;
  amrex::Real x1267 = -x1215 / x170 + x1230 * x173 + x1266 * x233;
  const amrex::Real x1268 = exp(-x163 - x377);
  const amrex::Real x1272 = exp(-x154 - x163);
  const amrex::Real x1275 = exp(-x163 - x167);
  const amrex::Real x1278 = refC * sc[12];
  amrex::Real x1280 = g_RT[12] - g_RT[1] - g_RT_qss[3];
  amrex::Real x1281 = x562 * exp(x1280 + x546);
  amrex::Real x1288 = sc[1] * x1248 * exp(g_RT[1] - x163);
  const amrex::Real x1291 = exp(g_RT[0] - g_RT[1] - x163);
  const amrex::Real x1294 = exp(g_RT[11] + g_RT[1] - g_RT[2] - g_RT_qss[3]);
  const amrex::Real x1298 = exp(
    g_RT[18] - g_RT[8] - g_RT_qss[3] - 2566.4049956040699 * invT -
    9.588 * tc[0]);
  const amrex::Real x1299 = refC * sc[18] * x1298;
  const amrex::Real x1304 = exp(-g_RT[19] + g_RT[20] - x163);
  const amrex::Real x1316 = exp(g_RT[15] - g_RT_qss[7] - x163);
  amrex::Real x1320 =
    kf_qss[106] * sc[14] * sc[2] + kf_qss[124] * sc[10] * sc[15] * x1316 +
    kf_qss[132] * sc[10] * sc[20] * x1304 + kf_qss[16] * x10 * x1288 +
    kf_qss[23] * sc[0] * sc[10] * x1291 + kf_qss[24] * sc[10] * sc[4] * x1275 +
    kf_qss[25] * sc[11] * sc[1] * x1294 + kf_qss[26] * sc[10] * sc[5] * x1272 +
    kf_qss[27] * sc[10] * sc[6] * exp(-x102 - x163) +
    kf_qss[49] * sc[12] * sc[1] + kf_qss[50] * sc[12] * sc[2] +
    kf_qss[51] * sc[12] * sc[4] + kf_qss[52] * sc[12] * sc[3] +
    kf_qss[53] * sc[12] * sc[6] + kf_qss[60] * sc[10] * sc[9] * x1268 +
    kf_qss[61] * sc[12] * sc[8] + kf_qss[94] * sc[10] * sc[14] * x1170 +
    1350000000000.0 * x10 * x1278 * x1281 + 2.2e+36 * x10 * x1299 * x525 +
    10.0e-13;
  const amrex::Real x1323 = exp(g_RT[20] - g_RT_qss[9] - x154);
  const amrex::Real x1326 = exp(g_RT[20] - g_RT_qss[9] - x102);
  amrex::Real x1330 = sc[1] * sc[20] * x362;
  const amrex::Real x1333 = exp(g_RT[20] - g_RT_qss[9] - x377);
  const amrex::Real x1336 = exp(g_RT[0] - g_RT[1] + g_RT[20] - g_RT_qss[9]);
  amrex::Real x1339 =
    kf_qss[115] * sc[14] * sc[8] + kf_qss[135] * sc[0] * sc[20] * x1336 +
    kf_qss[137] * sc[20] * sc[5] * x1323 +
    kf_qss[138] * sc[20] * sc[6] * x1326 +
    kf_qss[140] * sc[20] * sc[9] * x1333 + x1330 * x348 * x9 + 10.0e-13;
  const amrex::Real x1340 = x1339 / x374;
  const amrex::Real x1343 =
    exp(g_RT[12] + g_RT[4] - g_RT[6] + g_RT[8] - g_RT_qss[7]);
  const amrex::Real x1348 = exp(g_RT[14] - g_RT_qss[7] - x102);
  const amrex::Real x1355 = refC * sc[15];
  amrex::Real x1358 = g_RT[15] - g_RT[1] - g_RT_qss[7];
  amrex::Real x1360 = x437 * exp(x1358 + x421);
  const amrex::Real x1363 = exp(g_RT[0] + g_RT[14] - g_RT[1] - g_RT_qss[7]);
  amrex::Real x1367 = -g_RT[3] + g_RT[6];
  const amrex::Real x1368 = exp(g_RT[15] - g_RT_qss[7] - x1367);
  amrex::Real x1372 = kf_qss[123] * exp(g_RT[15] - g_RT_qss[7] - x1210);
  const amrex::Real x1374 = exp(g_RT[12] - g_RT[2] + g_RT[8] - g_RT_qss[7]);
  const amrex::Real x1378 = exp(g_RT[18] + g_RT[1] - g_RT[2] - g_RT_qss[7]);
  const amrex::Real x1381 = exp(g_RT[14] - g_RT[6] + g_RT[7] - g_RT_qss[7]);
  amrex::Real x1385 =
    kf_qss[116] * sc[0] * sc[14] * x1363 +
    kf_qss[117] * sc[12] * sc[8] * x1374 +
    kf_qss[118] * sc[18] * sc[1] * x1378 +
    kf_qss[119] * sc[14] * sc[6] * x1348 +
    kf_qss[120] * sc[15] * sc[3] * x1368 +
    kf_qss[121] * sc[14] * sc[7] * x1381 +
    kf_qss[122] * sc[12] * sc[4] * x1238 * x1343 +
    kf_qss[124] * sc[10] * sc[15] * x1316 + kf_qss[125] * sc[15] * sc[1] +
    kf_qss[126] * sc[15] * sc[2] + kf_qss[127] * sc[15] * sc[4] +
    kf_qss[129] * sc[15] * sc[8] + kf_qss[64] * ((sc[8]) * (sc[8])) +
    sc[14] * sc[1] * x10 * x402 * x416 + sc[15] * sc[6] * x1372 +
    sc[19] * sc[8] * x1161 + 1.99e+29 * x10 * x1355 * x1360 + 10.0e-13;
  amrex::Real x1386 = x1340 * x444 - x1385 / x441;
  amrex::Real x1387 = x1266 * x572 - x1267 * x575 - x1320 / x569 - x1386 * x792;
  const amrex::Real x1393 = exp(-g_RT[1] + g_RT[4] + g_RT[8] - g_RT_qss[4]);
  const amrex::Real x1398 = exp(g_RT[12] - g_RT_qss[4] - x154);
  const amrex::Real x1401 = exp(g_RT[12] - g_RT_qss[4] - x167);
  const amrex::Real x1404 = exp(g_RT[0] + g_RT[12] - g_RT[1] - g_RT_qss[4]);
  amrex::Real x1408 = kf_qss[70] * exp(g_RT[12] - g_RT_qss[4] - x102);
  amrex::Real x1410 =
    kf_qss[57] * sc[3] * sc[8] + kf_qss[58] * sc[6] * sc[8] +
    kf_qss[65] * sc[0] * sc[12] * x1404 + kf_qss[66] * sc[4] * sc[8] * x1393 +
    kf_qss[68] * sc[12] * sc[4] * x1401 + kf_qss[69] * sc[12] * sc[5] * x1398 +
    sc[12] * sc[1] * x10 * x609 * x624 + sc[12] * sc[6] * x1408 + 10.0e-13;
  const amrex::Real x1411 = x1410 / x634;
  const amrex::Real x1412 = exp(g_RT[12] + g_RT[1] - g_RT[4] - g_RT_qss[2]);
  const amrex::Real x1417 = exp(g_RT[10] - g_RT[11] + g_RT[12] - g_RT_qss[2]);
  const amrex::Real x1420 = exp(g_RT[10] - g_RT[3] + g_RT[5] - g_RT_qss[2]);
  const amrex::Real x1423 = exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[2]);
  const amrex::Real x1426 =
    exp(g_RT[10] + g_RT[1] - g_RT[3] + g_RT[4] - g_RT_qss[2]);
  const amrex::Real x1428 = exp(g_RT[0] + g_RT[10] - g_RT[2] - g_RT_qss[2]);
  amrex::Real x1433 =
    kf_qss[63] * exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[2]);
  const amrex::Real x1437 = exp(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[2]);
  amrex::Real x1440 =
    kf_qss[113] * sc[19] * sc[1] * x1423 + kf_qss[39] * sc[0] * sc[10] * x1428 +
    kf_qss[41] * sc[12] * sc[1] * x1412 + kf_qss[42] * sc[1] * sc[8] * x1437 +
    kf_qss[43] * sc[1] * x1249 * x1426 + kf_qss[44] * sc[10] * sc[5] * x1420 +
    kf_qss[48] * sc[10] * sc[12] * x1417 + kf_qss[56] * sc[4] * sc[8] +
    kf_qss[73] * ((sc[8]) * (sc[8])) * exp(-g_RT_qss[2] - x1124) +
    kf_qss[74] * sc[16] * sc[1] + sc[14] * sc[1] * x1433 + 10.0e-13;
  amrex::Real x1441 =
    x1230 * x642 - x1386 * x784 - x1387 * x602 + x1411 * x725 - x1440 / x465;
  amrex::Real x1442 =
    -x1149 / x313 + x1230 * x316 - x1267 * x319 - x1387 * x647 - x1441 * x650;
  amrex::Real x1443 = x1442 / x675;
  amrex::Real x1444 = x1387 / x578;
  amrex::Real x1445 = x1267 / x234;
  const amrex::Real x1446 = exp(g_RT[10] + g_RT[1] - g_RT[2] - g_RT_qss[0]);
  const amrex::Real x1449 = exp(g_RT[14] + g_RT[1] - g_RT[9] - g_RT_qss[0]);
  amrex::Real x1453 =
    kf_qss[20] * exp(g_RT[12] + g_RT[1] - g_RT[5] - g_RT_qss[0]);
  const amrex::Real x1457 = exp(
    -g_RT[10] + g_RT[16] - g_RT_qss[0] - 974.22746499793698 * invT -
    3.74 * tc[0]);
  const amrex::Real x1462 = exp(g_RT[10] + g_RT[13] - g_RT[16] - g_RT_qss[0]);
  amrex::Real x1466 =
    kf_qss[54] * exp(-g_RT[12] + g_RT[17] + g_RT[1] - g_RT_qss[0]);
  amrex::Real x1468 =
    kf_qss[17] * sc[10] * sc[1] * x1446 + kf_qss[35] * sc[13] * sc[1] * x1145 +
    kf_qss[71] * sc[14] * sc[1] * x1449 + kf_qss[75] * sc[10] * sc[13] * x1462 +
    sc[12] * sc[1] * x1453 + 2.69e+16 * sc[16] * x1457 * x843 * x955 +
    sc[17] * sc[1] * x1466 + 10.0e-13;
  amrex::Real x1469 =
    -x1008 * x1441 - x1063 * x1443 - x1444 * x963 - x1445 * x961 - x1468 / x958;
  amrex::Real x1470 =
    -x1008 * x595 - x1064 * x1082 - x587 * x963 - x683 * x961 + 1;
  amrex::Real x1471 = x1469 / ((x1470) * (x1470));
  const amrex::Real x1472 =
    x1471 * (-x1005 * x995 - x1007 * x1008 + x1009 * x923 + x1010 * x908 +
             x1011 * x985 - x1059 * x1064 - x1081 * x1083 + x1084 * x897 +
             x1089 * x1092 - x587 * x993 + x937 * x968 - x998 * x999);
  x1468 = x1468 / ((x958) * (x958));
  x951 = 2.69e+16 * sc[16] * x1457 * x843 * x944 * x955 / ((x951) * (x951));
  const amrex::Real x1478 = sc[16] * x843 *
                            exp(
                              -g_RT[10] + g_RT[16] - g_RT_qss[0] -
                              1948.4549299958701 * invT - 7.48 * tc[0]);
  amrex::Real x1480 =
    -(5.38e+16 * refC * sc[16] * x1457 * x955 - 1.44722e+33 * x1478 * x982 -
      x951 * (0.56 * x693 * x971 + 4.0 * x693 * x973)) /
    x958;
  amrex::Real x1481 = x1441 * x965 / ((x643) * (x643));
  amrex::Real x1482 = x1441 / x643;
  amrex::Real x1483 = x1445 * x991;
  amrex::Real x1484 = x1266 * x232 / ((x170) * (x170));
  amrex::Real x1485 = x1230 * x172 / ((x170) * (x170));
  x125 = 1.4e+18 * sc[14] * x118 * x1185 * x843 / ((x125) * (x125));
  const amrex::Real x1487 = refC * sc[14];
  amrex::Real x1489 =
    x1487 * x882 * exp(-3341.3586609433401 * invT - 7.72 * tc[0] + x1184);
  x94 = 2.565e+21 * x10 * x1178 * x1181 * x86 / ((x94) * (x94));
  x894 = x1178 * x894 *
         exp(
           g_RT[13] + g_RT[1] - g_RT_qss[6] - 36029.025036953499 * invT -
           6.8 * tc[0]);
  x146 = 4.27e+46 * sc[20] * x1154 * x139 * x150 * x843 / ((x146) * (x146));
  const amrex::Real x1495 = sc[20] * x843 *
                            exp(
                              g_RT[20] - g_RT[8] - g_RT_qss[6] -
                              9832.6523631579003 * invT - 23.88 * tc[0]);
  const amrex::Real x1499 = refC * sc[20] * x1154;
  amrex::Real x1501 = 5.13e+21 * x1178 * x1181 + 2.8e+18 * x1185 * x1487 -
                      x125 * (4.0 * x120 * x693 + 0.56 * x693 * x871) -
                      x146 * (0.56 * x862 + 4.0 * x864) - 3.92e+36 * x1489 -
                      3.64658e+93 * x1495 * x878 + 8.54e+46 * x1499 * x150 -
                      1.315845e+43 * x894 -
                      x94 * (0.56 * x693 * x887 + 4.0 * x693 * x89);
  const amrex::Real x1504 = refC * sc[18] * x10 *
                            exp(
                              g_RT[18] - g_RT[1] - g_RT_qss[8] -
                              4730.2366585643604 * invT - 14.594 * tc[0]);
  x216 = sc[17] * sc[1] * x207 * x209 * x220 / ((x216) * (x216));
  amrex::Real x1507 = sc[17] * sc[1] * x220 * exp(x204);
  x188 = 5.2e+27 * x10 * x1259 * x181 * x192 / ((x188) * (x188));
  amrex::Real x1510 =
    sc[17] * sc[1] * x10 * exp(-11976.556646152299 * invT - 15.28 * tc[0]);
  x837 = 1.04e+28 * x1259 * x192 - 5.408e+55 * x1504 * x856 + 7.6e+29 * x1507 -
         2.888e+59 * x1510 * x840 - x188 * x837 -
         x216 * (0.56 * x211 * x693 + 4.0 * x693 * x846);
  x1229 = x1229 / ((x65) * (x65));
  amrex::Real x1515 = x1215 / ((x170) * (x170));
  amrex::Real x1519 =
    sc[14] * x703 * exp(-100502.432494519 * invT - 18.62 * tc[0]);
  x31 = sc[14] * x10 * x19 * x22 * x35 / ((x31) * (x31));
  amrex::Real x1521 = sc[13] * x55 *
                      exp(-50019.736580989098 * invT - 1.28 * tc[0]) /
                      (kf_qss[15] * ((x61) * (x61)));
  amrex::Real x1522 =
    (1.4e+45 * sc[14] * x35 * exp(x16) + 4900000000.0 * x1221 -
     9.8e+89 * x1519 - 1.2005e+19 * x1521 -
     x31 * (4.0 * x25 * x693 + 0.56 * x693 * x696)) /
    x65;
  x1265 = x1265 / ((x229) * (x229));
  amrex::Real x1525 = -x1265 * x233 * x858 + x1522 * x173;
  amrex::Real x1526 = kf_qss[85] * x1230 * x48 / x170 - x1229 * x173 * x708 -
                      x1484 * x897 - x1485 * x897 + x1515 * x897 + x1525 +
                      x233 * (sc[17] * x1243 + x837) / x229 -
                      (kf_qss[84] * sc[13] * x1174 + x1501) / x170;
  x961 = x1267 * x961 / ((x234) * (x234));
  x620 = sc[12] * sc[1] * x10 * x609 * x613 * x624 / ((x620) * (x620));
  amrex::Real x1530 = sc[12] * sc[1] * x624 * exp(x607);
  amrex::Real x1531 =
    sc[12] * sc[1] * exp(-5595.76932374848 * invT - 9.6 * tc[0]);
  amrex::Real x1533 = 4.4e+18 * x1530 - 9.68e+36 * x1531 * x718 -
                      x620 * (4.0 * x615 * x693 + 0.56 * x693 * x712);
  amrex::Real x1535 = x1230 * x641 / ((x465) * (x465));
  amrex::Real x1537 = x1411 * x604 / ((x465) * (x465));
  amrex::Real x1539 = x1386 * x576 * x780 / x569;
  x1385 = x1385 / ((x441) * (x441));
  x433 = 1.99e+29 * x10 * x1355 * x1360 * x426 / ((x433) * (x433));
  amrex::Real x1543 =
    x1355 * x731 * exp(-6728.0068218091001 * invT - 14.16 * tc[0] + x1358);
  x412 = sc[14] * sc[1] * x10 * x402 * x405 * x416 / ((x412) * (x412));
  amrex::Real x1545 = sc[14] * sc[1] * x416 * exp(x400);
  amrex::Real x1547 =
    sc[14] * sc[1] * exp(-7014.8403213177899 * invT - 15.24 * tc[0]);
  amrex::Real x1548 = 3.98e+29 * x1355 * x437 * exp(x1358 + x421) -
                      7.9202e+58 * x1543 + 2.4e+30 * x1545 -
                      2.88e+60 * x1547 * x743 -
                      x412 * (4.0 * x407 * x693 + 0.56 * x693 * x736) -
                      x433 * (4.0 * x428 * x693 + 0.56 * x693 * x748);
  x358 = x1330 * x348 * x351 * x9 / ((x358) * (x358));
  amrex::Real x1552 =
    sc[1] * sc[20] * x767 * exp(-7045.0333212660798 * invT - 13.32 * tc[0]);
  amrex::Real x1554 = 1.252e+27 * x1330 * exp(x346) - 7.83752e+53 * x1552 -
                      x358 * (0.56 * x353 + 4.0 * x762);
  x1339 = x1339 / ((x374) * (x374));
  amrex::Real x1559 = x1340 * x443 / ((x441) * (x441));
  amrex::Real x1560 = -x1339 * x444 * x774 + x1385 * x756 - x1559 * x756 -
                      (kf_qss[116] * sc[14] * x1363 + x1548) / x441 +
                      x444 * (kf_qss[135] * sc[20] * x1336 + x1554) / x374;
  amrex::Real x1563 = x1386 * x446 * x576 / ((x569) * (x569));
  amrex::Real x1564 = x1266 * x571 / ((x569) * (x569));
  x1320 = x1320 / ((x569) * (x569));
  x574 = x1267 * x574 / ((x234) * (x234));
  x521 = 2.2e+36 * x10 * x1299 * x514 * x525 / ((x521) * (x521));
  const amrex::Real x1569 = refC * sc[18] * x10 *
                            exp(
                              g_RT[18] - g_RT[8] - g_RT_qss[3] -
                              5132.8099912081398 * invT - 19.176 * tc[0]);
  amrex::Real x1572 =
    x1278 * x801 * exp(-1434.1674975434501 * invT - 5.14 * tc[0] + x1280);
  x558 = 1350000000000.0 * x10 * x1278 * x1281 * x551 / ((x558) * (x558));
  amrex::Real x1575 = 2 * kf_qss[16] * x1288 + 2700000000000.0 * x1278 * x1281 +
                      4.4e+36 * x1299 * x525 - 9.68e+72 * x1569 * x819 -
                      3.645e+24 * x1572 -
                      x521 * (4.0 * x516 * x693 + 0.56 * x693 * x809) -
                      x558 * (4.0 * x553 * x693 + 0.56 * x693 * x796);
  x824 = -x1265 * x572 * x858 + x1320 * x824 - x1445 * x921 - x1526 * x575 +
         x1539 * x779 - x1560 * x792 + x1563 * x824 - x1564 * x824 +
         x574 * x908 - (kf_qss[23] * sc[10] * x1291 + x1575) / x569 +
         x572 * (sc[17] * x1243 + x837) / x229;
  x921 = x1440 / ((x465) * (x465));
  x1440 = x1386 * x467 * x780 / x465;
  amrex::Real x1580 = x1386 * x446 * x467 / ((x465) * (x465));
  x476 = x1387 * x476 / ((x578) * (x578));
  x1410 = x1410 / ((x634) * (x634));
  amrex::Real x1584 = -x1410 * x722 * x725 + x1522 * x642;
  x789 = -kf_qss[39] * sc[10] * x1428 / x465 + kf_qss[42] * x1535 +
         kf_qss[42] * x1537 - kf_qss[42] * x1580 - kf_qss[42] * x921 -
         x1229 * x642 * x708 + x1440 * x779 - x1444 * x789 - x1560 * x784 +
         x1584 + x476 * x923 - x602 * x824 +
         x725 * (kf_qss[65] * sc[12] * x1404 + x1533) / x634;
  x315 = x1230 * x315 / ((x313) * (x313));
  x646 = x1387 * x646 / ((x578) * (x578));
  x1149 = x1149 / ((x313) * (x313));
  amrex::Real x1590 = x1441 * x649 / ((x643) * (x643));
  x318 = x1267 * x318 / ((x234) * (x234));
  x272 =
    3200000000000000.0 * sc[8] * x10 * x1118 * x265 * x276 / ((x272) * (x272));
  amrex::Real x1594 = refC * sc[8] *
                      exp(
                        -g_RT[1] + g_RT[8] - g_RT_qss[1] -
                        1237.91299787961 * invT - 6.28 * tc[0]);
  x292 = 2.69e+21 * sc[17] * x1105 * x285 * x843 / ((x292) * (x292));
  const amrex::Real x1599 = refC * sc[17];
  amrex::Real x1602 =
    6400000000000000.0 * sc[8] * x1118 * x276 -
    1.44722e+43 * x1018 * x1599 *
      exp(-7140.6444877689701 * invT - 10.22 * tc[0] + x1104) -
    2.048e+31 * x1030 * x1594 + 5.38e+21 * x1105 * x1599 -
    x272 * (0.56 * x1025 * x693 + 4.0 * x267 * x693) -
    x292 * (0.56 * x1013 * x693 + 4.0 * x287 * x693);
  x1037 = x1037 * x1149 - x1037 * x315 - x1047 * x1445 - x1048 * x1444 -
          x1054 * x1482 - x1229 * x316 * x708 + x1522 * x316 - x1526 * x319 +
          x1590 * x937 + x318 * x908 + x646 * x923 - x647 * x824 - x650 * x789 -
          (2.0 * kf_qss[36] * sc[13] * x1134 + x1602) / x313;
  x963 = x1387 * x963 / ((x578) * (x578));
  x1047 = x1063 * x1442 / ((x675) * (x675));
  x985 =
    (-x1008 * x789 - x1037 * x1064 + x1047 * x1089 - x1081 * x1443 -
     x1444 * x993 + x1468 * x985 + x1480 + x1481 * x937 - x1482 * x998 +
     x1483 * x985 - x1526 * x990 - x824 * x995 + x908 * x961 + x923 * x963) /
    x1470;
  x993 = -2.2e+18 * x626 + x716 * (2.0 * x615 * x693 + 0.28 * x693 * x712) +
         4.84e+36 * x718 * x720;
  x998 = -kf_qss[65] - kf_qss[66] - kf_qss[67] + x993;
  x1048 = -sc[1] * x423 * x437 +
          3.9601e+58 * sc[1] * x731 *
            exp(-6728.0068218091001 * invT - 14.16 * tc[0]) -
          1.2e+30 * x418 + x742 * (2.0 * x407 * x693 + 0.28 * x693 * x736) +
          1.44e+60 * x743 * x746 +
          x752 * (2.0 * x428 * x693 + 0.28 * x693 * x748);
  x423 = -kf_qss[116] -
         kf_qss[64] * exp(g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7]) -
         x10 * x423 * x437 + x1048;
  x1054 = -6.26e+26 * x362 * x367 + x766 * (0.28 * x353 + 2.0 * x762) +
          3.91876e+53 * x773;
  x1063 = -kf_qss[134] - kf_qss[135] + x1054;
  x1081 = -kf_qss[134] * x376 / x441 + x1063 * x777 + x423 * x759;
  amrex::Real x1625 = kf_qss[38] * x730 - kf_qss[38] * x788 +
                      kf_qss[40] * x472 / x465 + x1081 * x783 + x423 * x786;
  amrex::Real x1631 =
    -kf_qss[16] - sc[1] * x548 * x562 - 2.2e+36 * x525 * x821 +
    x800 * (2.0 * x553 * x693 + 0.28 * x693 * x796) + 1.8225e+24 * x804 +
    x815 * (2.0 * x516 * x693 + 0.28 * x693 * x809) + 4.84e+72 * x818 * x819;
  x548 = -kf_qss[18] * x530 - kf_qss[23] - kf_qss[29] * x494 -
         kf_qss[40] * x472 - x10 * x548 * x562 + x1631;
  amrex::Real x1633 = x1081 * x929 + x423 * x930 - x548 * x927 + x548 * x931;
  amrex::Real x1636 =
    0.28 * ((x183) * (x183)) * x693 / ((x185) * (x185) * (x185)) +
    2.0 * x183 * x693 / ((x185) * (x185));
  amrex::Real x1638 = x1636 * x839 - 5.2e+27 * x192 * x851 - 3.8e+29 * x222 +
                      1.444e+59 * x840 * x844 +
                      x850 * (0.28 * x211 * x693 + 2.0 * x693 * x846) +
                      2.704e+55 * x855 * x856;
  amrex::Real x1639 = -kf_qss[98] - kf_qss[99] + x1638 - 5.2e+27 * x177 * x192;
  amrex::Real x1640 = x174 * x572 / ((x229) * (x229));
  amrex::Real x1641 =
    -kf_qss[98] * x231 / x569 + x1639 * x1640 - x548 * x917 + x548 * x919;
  x83 = -sc[1] * x115 * x129 - 4.27e+46 * x150 * x868 - x83 * x97 +
        x867 * (0.28 * x862 + 2.0 * x864) +
        x875 * (2.0 * x120 * x693 + 0.28 * x693 * x871) +
        1.82329e+93 * x877 * x878 + 1.96e+36 * x885 +
        x891 * (0.28 * x693 * x887 + 2.0 * x693 * x89) + 6.579225e+42 * x895;
  x115 = -kf_qss[59] * x74 - kf_qss[84] - kf_qss[85] - x10 * x115 * x129 + x83;
  amrex::Real x1649 =
    -7.0e+44 * x2 * x36 - 2450000000.0 * x63 + 6.0025e+18 * x692 +
    x701 * (2.0 * x25 * x693 + 0.28 * x693 * x696) + 4.9e+89 * x706;
  amrex::Real x1650 = -kf_qss[79] + x1649;
  amrex::Real x1652 = x1 * x173 / ((x65) * (x65));
  amrex::Real x1653 = -kf_qss[85] * x173 / x65 + x115 * x900 + x115 * x906 +
                      x1639 * x903 + x1650 * x1652;
  amrex::Real x1654 = x115 * x912 - x115 * x913 + x1639 * x914;
  amrex::Real x1655 = x482 * x572 / ((x229) * (x229));
  amrex::Real x1656 = -kf_qss[98] * x483 / x569 + x1081 * x791 + x1639 * x1655 -
                      x1641 * x922 + x1653 * x911 - x1654 * x575 + x423 * x794 +
                      x548 * x827 + x548 * x829;
  amrex::Real x1658 = x639 * x642 / ((x65) * (x65));
  amrex::Real x1659 = -kf_qss[38] * x688 - kf_qss[38] * x729 -
                      kf_qss[38] * x936 - kf_qss[67] * x637 / x465 +
                      x1081 * x933 - x1625 * x790 - x1633 * x602 +
                      x1650 * x1658 + x1656 * x926 + x423 * x934 + x726 * x998;
  amrex::Real x1663 = -2.69e+16 * x955 * x977 +
                      x976 * (0.28 * x693 * x971 + 2.0 * x693 * x973) +
                      7.2361e+32 * x981 * x982;
  amrex::Real x1664 = -x1663 * x987 + x1663 * x992;
  amrex::Real x1665 = kf_qss[18] * x530 / x958 -
                      kf_qss[59] * x74 * x922 / x958 + x1653 * x989 -
                      x1654 * x990 + x1664;
  amrex::Real x1668 =
    sc[10] * x1018 * exp(-7140.6444877689701 * invT - 10.22 * tc[0]);
  amrex::Real x1670 = -sc[10] * x282 * x296 - sc[1] * x262 * x276 +
                      x1017 * (0.28 * x1013 * x693 + 2.0 * x287 * x693) +
                      x1029 * (0.28 * x1025 * x693 + 2.0 * x267 * x693) +
                      1.024e+31 * x1034 + 7.2361e+42 * x1668;
  x262 = -x10 * x262 * x276 + x1670 - x250;
  amrex::Real x1672 = x1002 * x1653 + x1004 * x115 - x1641 * x683 - x548 * x584;
  amrex::Real x1674 = x1 * x316 / ((x65) * (x65));
  amrex::Real x1675 =
    -kf_qss[85] * x316 / x65 - x1043 * x262 + x1045 * x262 + x1650 * x1674;
  amrex::Real x1676 = kf_qss[29] * x494 / x313 + x1041 * x1653 - x1042 * x262 -
                      x1654 * x319 - x1675 * x922;
  amrex::Real x1677 = x316 * x639 / ((x65) * (x65));
  amrex::Real x1678 = x1051 * x262 - x1052 * x262 + x1053 * x1656 -
                      x1633 * x647 + x1650 * x1677 - x1676 * x790;
  amrex::Real x1679 =
    kf_qss[38] * x1000 + x1006 * x1656 - x1625 * x587 - x1672 * x602;
  amrex::Real x1680 = -x1039 * x262 + x1050 * x1656 + x1056 * x1659 +
                      x1057 * x115 + x1058 * x1653 - x1672 * x647 -
                      x1675 * x683 - x1676 * x587 - x1678 * x999 - x1679 * x650;
  amrex::Real x1682 = kf_qss[38] / x958 - x1633 * x995 + x1656 * x997 -
                      x1663 * x994 - x1665 * x790;
  amrex::Real x1683 = x316 * x659 / ((x65) * (x65));
  amrex::Real x1684 = x173 * x659 / ((x65) * (x65));
  amrex::Real x1685 = -x1067 * x115 + x1068 * x115 + x1650 * x1684;
  amrex::Real x1686 =
    -x1062 * x1641 + x1072 * x1653 - x1073 * x548 - x1685 * x575;
  amrex::Real x1687 = x642 * x659 / ((x65) * (x65));
  amrex::Real x1688 = -kf_qss[38] * x1075 + kf_qss[38] * x671 + x1078 * x1656 -
                      x1625 * x669 + x1650 * x1687 - x1686 * x602;
  amrex::Real x1689 = -x1060 * x1678 - x1062 * x1675 + x1085 * x1656 +
                      x1086 * x262 + x1087 * x1653 + x1088 * x1659 +
                      x1650 * x1683 - x1676 * x669 - x1685 * x319 -
                      x1686 * x647 - x1688 * x650;
  amrex::Real x1690 = x1066 * x1663 - x1070 * x1663;
  x250 = -kf_qss[59] * x1062 * x74 / x958 - x1008 * x1688 - x1060 * x1682 +
         x1065 * x1653 + x1071 * x1659 + x1080 * x1656 - x1665 * x669 -
         x1685 * x990 - x1686 * x995 + x1690 + x250 / x958;
  const amrex::Real x1692 =
    x1471 * (-kf_qss[59] * x683 * x74 / x958 - x1008 * x1679 + x1009 * x1656 +
             x1010 * x1653 + x1011 * x1663 - x1064 * x1680 - x1083 * x250 +
             x1084 * x115 + x1092 * x1689 + x1659 * x968 - x1665 * x587 -
             x1672 * x995 - x1682 * x999);
  amrex::Real x1694 = 2.69e+16 * refC * sc[16] * x1457 * x955 -
                      7.2361e+32 * x1478 * x982 -
                      x951 * (0.28 * x693 * x971 + 2.0 * x693 * x973);
  x1636 = 5.2e+27 * x1259 * x192 - 2.704e+55 * x1504 * x856 + 3.8e+29 * x1507 -
          1.444e+59 * x1510 * x840 - x1636 * x188 -
          x216 * (0.28 * x211 * x693 + 2.0 * x693 * x846);
  amrex::Real x1700 = sc[14] * x19 * x35 + 2450000000.0 * x1221 -
                      4.9e+89 * x1519 - 6.0025e+18 * x1521 -
                      x31 * (2.0 * x25 * x693 + 0.28 * x693 * x696);
  amrex::Real x1701 = (kf_qss[130] * sc[19] + kf_qss[79] * sc[13] * x1223 +
                       kf_qss[81] * sc[17] * x1217 + x1700) /
                      x65;
  amrex::Real x1707 = 2.565e+21 * x1178 * x1181 + 1.4e+18 * x1185 * x1487 -
                      x125 * (2.0 * x120 * x693 + 0.28 * x693 * x871) -
                      x146 * (0.28 * x862 + 2.0 * x864) - 1.96e+36 * x1489 -
                      1.82329e+93 * x1495 * x878 + 4.27e+46 * x1499 * x150 -
                      6.579225e+42 * x894 -
                      x94 * (0.28 * x693 * x887 + 2.0 * x693 * x89);
  amrex::Real x1708 =
    -x115 * x1484 - x115 * x1485 + x115 * x1515 - x1229 * x1650 * x173 -
    x1265 * x1639 * x233 + x1701 * x173 +
    x233 * (sc[17] * x207 * x220 + x1636) / x229 -
    (kf_qss[104] * sc[14] + kf_qss[86] * sc[17] * x1207 +
     2.565e+21 * refCinv * sc[13] * x10 * x1181 + sc[19] * x1167 + x1707) /
      x170;
  x731 = sc[14] * sc[1] * x402 * x416 + 1.99e+29 * x1355 * x1360 -
         3.9601e+58 * x1355 * x731 *
           exp(-6728.0068218091001 * invT - 14.16 * tc[0] + x1358) -
         1.44e+60 * x1547 * x743 -
         x412 * (2.0 * x407 * x693 + 0.28 * x693 * x736) -
         x433 * (2.0 * x428 * x693 + 0.28 * x693 * x748);
  amrex::Real x1716 =
    x1330 * x348 - 3.91876e+53 * x1552 - x358 * (0.28 * x353 + 2.0 * x762);
  amrex::Real x1718 = kf_qss[134] * x1340 / x441 - x1063 * x1339 * x444 +
                      x1385 * x423 - x1559 * x423 -
                      (kf_qss[118] * sc[18] * x1378 + kf_qss[125] * sc[15] +
                       sc[14] * x10 * x402 * x416 + x731) /
                        x441 +
                      x444 * (sc[20] * x348 * x362 * x9 + x1716) / x374;
  amrex::Real x1719 = kf_qss[16] * x1288 + 1350000000000.0 * x1278 * x1281 +
                      2.2e+36 * x1299 * x525 - 4.84e+72 * x1569 * x819 -
                      1.8225e+24 * x1572 -
                      x521 * (2.0 * x516 * x693 + 0.28 * x693 * x809) -
                      x558 * (2.0 * x553 * x693 + 0.28 * x693 * x796);
  x548 = kf_qss[98] * x1266 / x569 + x1081 * x1539 - x1265 * x1639 * x572 +
         x1320 * x548 - x1445 * x1641 + x1563 * x548 - x1564 * x548 +
         x1653 * x574 - x1708 * x575 - x1718 * x792 -
         (kf_qss[16] * x10 * x1248 * exp(g_RT[1] - x163) +
          kf_qss[25] * sc[11] * x1294 + kf_qss[49] * sc[12] + x1719) /
           x569 +
         x572 * (sc[17] * x207 * x220 + x1636) / x229;
  x1641 = sc[12] * sc[1] * x609 * x624 - 4.84e+36 * x1531 * x718 -
          x620 * (2.0 * x615 * x693 + 0.28 * x693 * x712);
  x1625 = kf_qss[38] * x1535 + kf_qss[38] * x1537 - kf_qss[38] * x1580 -
          kf_qss[38] * x921 + kf_qss[67] * x1411 / x465 + x1081 * x1440 -
          x1229 * x1650 * x642 - x1410 * x725 * x998 - x1444 * x1625 +
          x1656 * x476 + x1701 * x642 - x1718 * x784 - x548 * x602 +
          x725 * (sc[12] * x10 * x609 * x624 + x1641) / x634 -
          (kf_qss[113] * sc[19] * x1423 + kf_qss[41] * sc[12] * x1412 +
           kf_qss[42] * sc[8] * x1437 + kf_qss[43] * x1249 * x1426 +
           kf_qss[74] * sc[16] + sc[14] * x1433) /
            x465;
  x1018 =
    x1018 * x1599 * exp(-7140.6444877689701 * invT - 10.22 * tc[0] + x1104);
  amrex::Real x1729 = 3200000000000000.0 * sc[8] * x1118 * x276 -
                      7.2361e+42 * x1018 - 1.024e+31 * x1030 * x1594 +
                      2.69e+21 * x1105 * x1599 -
                      x272 * (0.28 * x1025 * x693 + 2.0 * x267 * x693) -
                      x292 * (0.28 * x1013 * x693 + 2.0 * x287 * x693);
  x262 = x1149 * x262 - x1229 * x1650 * x316 - x1444 * x1676 - x1445 * x1675 -
         x1482 * x1678 + x1590 * x1659 - x1625 * x650 + x1653 * x318 +
         x1656 * x646 + x1701 * x316 - x1708 * x319 - x262 * x315 -
         x548 * x647 -
         (kf_qss[32] * sc[12] * x1097 + kf_qss[35] * sc[13] * x1145 +
          kf_qss[62] * sc[14] * x1112 + 2.0 * sc[11] * ((sc[1])) * x1129 +
          sc[19] * x1141 + sc[8] * x1101 + x1729) /
           x313;
  x1675 = x1468 * x1663 + x1483 * x1663;
  x1665 =
    (-kf_qss[59] * x1445 * x74 / x958 - x1008 * x1625 + x1047 * x1689 -
     x1064 * x262 - x1443 * x250 - x1444 * x1665 + x1481 * x1659 -
     x1482 * x1682 + x1653 * x961 + x1656 * x963 + x1675 - x1708 * x990 -
     x548 * x995 -
     (kf_qss[17] * sc[10] * x1446 + kf_qss[35] * sc[13] * x1145 +
      kf_qss[71] * sc[14] * x1449 + sc[12] * x1453 + sc[17] * x1466 + x1694) /
       x958) /
    x1470;
  x1676 = -kf_qss[39] - kf_qss[40];
  x1678 = -kf_qss[57] * exp(-g_RT[8] + g_RT_qss[4] - x225) - kf_qss[68] + x993;
  x1682 = (-kf_qss[80] + x1649) / ((x65) * (x65));
  x250 = -kf_qss[117] - kf_qss[118] + x1048;
  amrex::Real x1739 =
    -kf_qss[136] * x376 / x441 + x250 * x759 + x777 * (-kf_qss[136] + x1054);
  amrex::Real x1741 = x1676 * x448 * x467 / ((x465) * (x465)) - x1676 * x730 +
                      x1739 * x783 + x250 * x786;
  amrex::Real x1742 = -kf_qss[21] * x540 - kf_qss[24] - kf_qss[25] + x1631;
  amrex::Real x1743 = -kf_qss[100] + x1638 - x227;
  amrex::Real x1745 = -kf_qss[86] - kf_qss[87] + x83;
  amrex::Real x1747 = x1 * x1682 * x173 + x1743 * x903 + x1745 * x900 +
                      x1745 * x906 - x227 * x231 / x170;
  amrex::Real x1748 =
    x1743 * x914 + x1745 * x912 - x1745 * x913 - x227 * x483 / x170;
  amrex::Real x1749 = x1640 * x1743 - x1742 * x917 + x1742 * x919;
  amrex::Real x1750 = x1655 * x1743 + x1739 * x791 + x1742 * x827 +
                      x1742 * x829 + x1747 * x911 - x1748 * x575 -
                      x1749 * x922 + x250 * x794;
  amrex::Real x1751 = kf_qss[40] / x569 + x1739 * x929 - x1742 * x927 +
                      x1742 * x931 + x250 * x930;
  amrex::Real x1752 = x1676 * x688 + x1676 * x729 +
                      x1676 * x467 * x597 / ((x465) * (x465)) + x1678 * x726 +
                      x1682 * x639 * x642 + x1739 * x933 - x1741 * x790 +
                      x1750 * x926 - x1751 * x602 + x250 * x934;
  amrex::Real x1753 = -kf_qss[17] + x1663;
  amrex::Real x1755 = -x1067 * x1745 + x1068 * x1745 + x1682 * x173 * x659;
  amrex::Real x1756 = kf_qss[29] / x569 - x1062 * x1749 + x1072 * x1747 -
                      x1073 * x1742 - x1755 * x575;
  amrex::Real x1757 = x1075 * x1676 + x1078 * x1750 - x1676 * x671 +
                      x1682 * x642 * x659 - x1741 * x669 - x1756 * x602;
  amrex::Real x1758 = kf_qss[21] * x540 / x958 + x1747 * x989 - x1748 * x990 -
                      x1753 * x987 + x1753 * x992;
  amrex::Real x1759 = x1750 * x997 - x1751 * x995 - x1753 * x994 - x1758 * x790;
  amrex::Real x1760 = -x1008 * x1757 - x1060 * x1759 + x1065 * x1747 +
                      x1066 * x1753 - x1070 * x1753 + x1071 * x1752 +
                      x1080 * x1750 - x1755 * x990 - x1756 * x995 -
                      x1758 * x669;
  amrex::Real x1761 = -kf_qss[29] + x1670;
  amrex::Real x1763 = -kf_qss[80] * x67 / x313 + x1 * x1682 * x316 -
                      x1043 * x1761 + x1045 * x1761;
  amrex::Real x1764 =
    x1041 * x1747 - x1042 * x1761 - x1748 * x319 - x1763 * x922;
  amrex::Real x1767 = -kf_qss[80] * x640 / x313 + x1051 * x1761 -
                      x1052 * x1761 + x1053 * x1750 + x1682 * x316 * x639 -
                      x1751 * x647 - x1764 * x790;
  amrex::Real x1768 =
    x1002 * x1747 + x1004 * x1745 - x1742 * x584 - x1749 * x683;
  amrex::Real x1769 =
    -x1000 * x1676 + x1006 * x1750 - x1741 * x587 - x1768 * x602;
  amrex::Real x1770 = -x1039 * x1761 + x1050 * x1750 + x1056 * x1752 +
                      x1057 * x1745 + x1058 * x1747 - x1763 * x683 -
                      x1764 * x587 - x1767 * x999 - x1768 * x647 - x1769 * x650;
  amrex::Real x1772 = -kf_qss[80] * x660 / x313 - x1060 * x1767 -
                      x1062 * x1763 + x1085 * x1750 + x1086 * x1761 +
                      x1087 * x1747 + x1088 * x1752 + x1682 * x316 * x659 -
                      x1755 * x319 - x1756 * x647 - x1757 * x650 - x1764 * x669;
  const amrex::Real x1773 =
    x1471 * (-x1008 * x1769 + x1009 * x1750 + x1010 * x1747 + x1011 * x1753 -
             x1064 * x1770 - x1083 * x1760 + x1084 * x1745 + x1092 * x1772 +
             x1752 * x968 - x1758 * x587 - x1759 * x999 - x1768 * x995);
  amrex::Real x1779 = x1716 * x444 / x374;
  amrex::Real x1780 =
    kf_qss[136] * x1340 / x441 - x1339 * x444 * (-kf_qss[136] + x1054) +
    x1385 * x250 - x1559 * x250 + x1779 - (kf_qss[126] * sc[15] + x731) / x441;
  amrex::Real x1782 = x1700 * x642 / x65;
  amrex::Real x1787 = x1700 * x173 / x65;
  amrex::Real x1788 = x1636 * x233 / x229;
  x227 = -x1229 * x173 * (-kf_qss[80] + x1649) - x1265 * x1743 * x233 +
         x1266 * x227 / x170 - x1484 * x1745 - x1485 * x1745 + x1515 * x1745 +
         x1787 + x1788 - (kf_qss[105] * sc[14] + x1707) / x170;
  x1742 = -x1265 * x1743 * x572 + x1320 * x1742 - x1445 * x1749 +
          x1539 * x1739 + x1563 * x1742 - x1564 * x1742 + x1636 * x572 / x229 +
          x1747 * x574 - x1780 * x792 - x227 * x575 -
          (kf_qss[106] * sc[14] + kf_qss[50] * sc[12] + x1719) / x569;
  x1676 = -x1229 * x642 * (-kf_qss[80] + x1649) - x1410 * x1678 * x725 -
          x1411 * x1676 * x604 / ((x465) * (x465)) + x1440 * x1739 -
          x1444 * x1741 - x1535 * x1676 + x1580 * x1676 + x1641 * x725 / x634 +
          x1676 * x921 - x1742 * x602 + x1750 * x476 - x1780 * x784 + x1782;
  x1741 = -x1694 / x958;
  x1749 =
    kf_qss[80] * x1230 / x313 + x1149 * x1761 -
    x1229 * x316 * (-kf_qss[80] + x1649) - x1444 * x1764 - x1445 * x1763 -
    x1482 * x1767 + x1590 * x1752 - x1676 * x650 + x1700 * x316 / x65 -
    x1742 * x647 + x1747 * x318 + x1750 * x646 - x1761 * x315 - x227 * x319 -
    (kf_qss[107] * sc[14] + kf_qss[77] * sc[13] + kf_qss[83] * sc[17] + x1729) /
      x313;
  x1753 = (-x1008 * x1676 + x1047 * x1772 - x1064 * x1749 - x1443 * x1760 -
           x1444 * x1758 + x1468 * x1753 + x1481 * x1752 - x1482 * x1759 +
           x1483 * x1753 + x1741 - x1742 * x995 + x1747 * x961 + x1750 * x963 -
           x227 * x990) /
          x1470;
  x1758 = -kf_qss[82] + x1649;
  x1759 = -kf_qss[119] + x1048;
  x1760 = x1759 * x759 + x777 * (-kf_qss[138] + x1054);
  x1761 = -kf_qss[27] + x1631;
  x1763 = -kf_qss[102] - kf_qss[103] + x1638;
  x1764 = -kf_qss[90] * x572 / x229 + kf_qss[91] / x569 + x1640 * x1763 -
          x1761 * x917 + x1761 * x919;
  x1767 = -kf_qss[89] - kf_qss[90] - kf_qss[91] + x83;
  amrex::Real x1812 = -kf_qss[90] * x233 / x229 + x1652 * x1758 + x1763 * x903 +
                      x172 * x1767 * x67 / ((x170) * (x170)) +
                      x1767 * x231 * x232 / ((x170) * (x170));
  amrex::Real x1813 =
    x1763 * x914 - x1767 * x913 + x1767 * x232 * x483 / ((x170) * (x170));
  amrex::Real x1814 = x1655 * x1763 + x1759 * x794 + x1760 * x791 +
                      x1761 * x827 + x1761 * x829 - x1764 * x922 +
                      x1812 * x911 - x1813 * x575;
  amrex::Real x1815 = -kf_qss[43] - kf_qss[44];
  amrex::Real x1817 = x1759 * x786 + x1760 * x783 +
                      x1815 * x448 * x467 / ((x465) * (x465)) - x1815 * x730;
  amrex::Real x1818 = x1759 * x930 + x1760 * x929 - x1761 * x927 + x1761 * x931;
  amrex::Real x1819 = x1658 * x1758 + x1759 * x934 + x1760 * x933 +
                      x1814 * x926 + x1815 * x688 + x1815 * x729 +
                      x1815 * x467 * x597 / ((x465) * (x465)) - x1817 * x790 -
                      x1818 * x602 + x726 * (-kf_qss[70] + x993);
  amrex::Real x1821 = kf_qss[21] / x569 + x1002 * x1812 - x1761 * x584 -
                      x1764 * x683 + x1767 * x321 * x575 / ((x170) * (x170));
  amrex::Real x1822 = -kf_qss[30] - kf_qss[31] + x1670;
  amrex::Real x1823 =
    -x1000 * x1815 + x1006 * x1814 - x1817 * x587 - x1821 * x602;
  amrex::Real x1824 =
    -kf_qss[82] * x67 / x313 - x1043 * x1822 + x1045 * x1822 + x1674 * x1758;
  amrex::Real x1825 =
    x1041 * x1812 - x1042 * x1822 - x1813 * x319 - x1824 * x922;
  amrex::Real x1826 = -kf_qss[82] * x640 / x313 + x1051 * x1822 -
                      x1052 * x1822 + x1053 * x1814 + x1677 * x1758 -
                      x1818 * x647 - x1825 * x790;
  amrex::Real x1828 = -x1039 * x1822 + x1050 * x1814 + x1056 * x1819 +
                      x1058 * x1812 - x1821 * x647 - x1823 * x650 -
                      x1824 * x683 - x1825 * x587 - x1826 * x999 +
                      x1767 * x319 * x321 / ((x170) * (x170));
  amrex::Real x1829 = -kf_qss[21] + x1663;
  amrex::Real x1830 = x1812 * x989 - x1813 * x990 - x1829 * x987 + x1829 * x992;
  amrex::Real x1831 = x1814 * x997 - x1818 * x995 - x1829 * x994 - x1830 * x790;
  amrex::Real x1833 =
    -x1067 * x1767 + x1684 * x1758 + x172 * x1767 * x660 / ((x170) * (x170));
  amrex::Real x1834 = kf_qss[30] / x569 - x1062 * x1764 + x1072 * x1812 -
                      x1073 * x1761 - x1833 * x575;
  amrex::Real x1835 = x1075 * x1815 + x1078 * x1814 + x1687 * x1758 -
                      x1815 * x671 - x1817 * x669 - x1834 * x602;
  amrex::Real x1836 = -kf_qss[82] * x660 / x313 - x1060 * x1826 -
                      x1062 * x1824 + x1085 * x1814 + x1086 * x1822 +
                      x1087 * x1812 + x1088 * x1819 + x1683 * x1758 -
                      x1825 * x669 - x1833 * x319 - x1834 * x647 - x1835 * x650;
  amrex::Real x1837 = -x1008 * x1835 - x1060 * x1831 + x1065 * x1812 +
                      x1066 * x1829 - x1070 * x1829 + x1071 * x1819 +
                      x1080 * x1814 - x1830 * x669 - x1833 * x990 -
                      x1834 * x995;
  const amrex::Real x1838 =
    x1471 * (-x1008 * x1823 + x1009 * x1814 + x1010 * x1812 + x1011 * x1829 -
             x1064 * x1828 - x1083 * x1837 + x1092 * x1836 + x1819 * x968 -
             x1821 * x995 - x1830 * x587 - x1831 * x999 +
             x1767 * x321 * x990 / ((x170) * (x170)));
  amrex::Real x1841 =
    -x1229 * x173 * x1758 - x1230 * x172 * x1767 / ((x170) * (x170)) -
    x1265 * x1763 * x233 - x1266 * x1767 * x232 / ((x170) * (x170)) +
    x1515 * x1767 + x1787 + x1788 - (kf_qss[109] * sc[14] + x1707) / x170;
  amrex::Real x1844 = -x1339 * x444 * (-kf_qss[138] + x1054) + x1385 * x1759 -
                      x1559 * x1759 + x1779 -
                      (kf_qss[120] * sc[15] * x1368 + x731) / x441;
  x1761 = -x1265 * x1763 * x572 + x1320 * x1761 - x1445 * x1764 +
          x1539 * x1760 + x1563 * x1761 - x1564 * x1761 + x1636 * x572 / x229 +
          x1812 * x574 - x1841 * x575 - x1844 * x792 -
          (kf_qss[52] * sc[12] + x1719) / x569;
  x1764 =
    -x1229 * x1758 * x642 + x1386 * x1815 * x446 * x467 / ((x465) * (x465)) -
    x1410 * x725 * (-kf_qss[70] + x993) -
    x1411 * x1815 * x604 / ((x465) * (x465)) + x1440 * x1760 - x1444 * x1817 -
    x1535 * x1815 - x1761 * x602 + x1782 + x1814 * x476 + x1815 * x921 -
    x1844 * x784 + x725 * (kf_qss[57] * sc[8] + x1641) / x634;
  x1815 = x1700 * x316 / x65 - x1729 / x313;
  x1817 = kf_qss[82] * x1230 / x313 + x1149 * x1822 - x1229 * x1758 * x316 -
          x1444 * x1825 - x1445 * x1824 - x1482 * x1826 + x1590 * x1819 -
          x1761 * x647 - x1764 * x650 + x1812 * x318 + x1814 * x646 + x1815 -
          x1822 * x315 - x1841 * x319;
  x1822 = (-x1008 * x1764 + x1047 * x1836 - x1064 * x1817 - x1443 * x1837 -
           x1444 * x1830 + x1468 * x1829 + x1481 * x1819 - x1482 * x1831 +
           x1483 * x1829 + x1741 - x1761 * x995 + x1812 * x961 + x1814 * x963 -
           x1841 * x990) /
          x1470;
  x1824 = -kf_qss[18] + x1663;
  x1825 = -kf_qss[105] * exp(-g_RT[14] + g_RT_qss[6] - x167) -
          kf_qss[131] * x105 * x110 - kf_qss[88] + x83;
  x1826 = -kf_qss[101] - kf_qss[92] * x198 + x1638;
  x1829 = -kf_qss[81] + x1649;
  x1830 = -kf_qss[92] * x198 * x231 / x170 + x1652 * x1829 + x1825 * x900 +
          x1825 * x906 + x1826 * x903;
  x1831 = -kf_qss[92] * x198 * x483 / x170 + x1825 * x912 - x1825 * x913 +
          x1826 * x914;
  x1837 = -x1824 * x987 + x1824 * x992 + x1830 * x989 - x1831 * x990;
  amrex::Real x1860 =
    -kf_qss[26] - kf_qss[50] * exp(-x167 - x497) + x1631 - x502;
  amrex::Real x1862 =
    x1640 * x1826 + x1860 * x231 * x571 / ((x569) * (x569)) - x1860 * x917;
  amrex::Real x1863 = kf_qss[18] / x569 + x1002 * x1830 + x1004 * x1825 -
                      x1860 * x584 - x1862 * x683;
  amrex::Real x1865 =
    -kf_qss[126] * exp(-x167 - x378) - kf_qss[139] * x105 * x332 + x1048;
  amrex::Real x1867 = -kf_qss[139] * x105 * x332 * x444 / x374 + x1865 * x759 +
                      x777 * (-kf_qss[137] + x1054);
  amrex::Real x1870 = x1655 * x1826 + x1830 * x911 - x1831 * x575 +
                      x1860 * x448 * x576 / ((x569) * (x569)) +
                      x1860 * x483 * x571 / ((x569) * (x569)) - x1862 * x922 +
                      x1865 * x794 + x1867 * x791;
  amrex::Real x1871 = -kf_qss[58] * x630 - kf_qss[69] + x993;
  amrex::Real x1872 =
    kf_qss[41] * x730 - kf_qss[41] * x788 + x1865 * x786 + x1867 * x783;
  amrex::Real x1873 = -x1860 * x927 + x1860 * x576 * x597 / ((x569) * (x569)) +
                      x1865 * x930 + x1867 * x929;
  amrex::Real x1874 = -kf_qss[41] * x688 - kf_qss[41] * x729 -
                      kf_qss[41] * x936 + x1658 * x1829 + x1865 * x934 +
                      x1867 * x933 + x1870 * x926 + x1871 * x726 -
                      x1872 * x790 - x1873 * x602;
  amrex::Real x1875 =
    -x1824 * x994 - x1837 * x790 + x1870 * x997 - x1873 * x995;
  amrex::Real x1876 =
    kf_qss[41] * x1000 + x1006 * x1870 - x1863 * x602 - x1872 * x587;
  amrex::Real x1877 = -x1067 * x1825 + x1068 * x1825 + x1684 * x1829;
  amrex::Real x1878 =
    -x1062 * x1862 + x1072 * x1830 - x1073 * x1860 - x1877 * x575;
  amrex::Real x1879 = -kf_qss[41] * x1075 + kf_qss[41] * x671 + x1078 * x1870 +
                      x1687 * x1829 - x1872 * x669 - x1878 * x602;
  amrex::Real x1880 = kf_qss[33] / x958 - x1008 * x1879 - x1060 * x1875 +
                      x1065 * x1830 + x1066 * x1824 - x1070 * x1824 +
                      x1071 * x1874 + x1080 * x1870 - x1837 * x669 -
                      x1877 * x990 - x1878 * x995;
  amrex::Real x1881 = -kf_qss[32] - kf_qss[33] + x1670;
  amrex::Real x1882 = -x1043 * x1881 + x1045 * x1881 + x1674 * x1829;
  x502 =
    x1041 * x1830 - x1042 * x1881 - x1831 * x319 - x1882 * x922 + x502 / x313;
  amrex::Real x1884 = x1051 * x1881 - x1052 * x1881 + x1053 * x1870 +
                      x1677 * x1829 - x1873 * x647 - x502 * x790;
  amrex::Real x1885 = -x1039 * x1881 + x1050 * x1870 + x1056 * x1874 +
                      x1057 * x1825 + x1058 * x1830 - x1863 * x647 -
                      x1876 * x650 - x1882 * x683 - x1884 * x999 - x502 * x587;
  amrex::Real x1886 = -x1060 * x1884 - x1062 * x1882 + x1085 * x1870 +
                      x1086 * x1881 + x1087 * x1830 + x1088 * x1874 +
                      x1683 * x1829 - x1877 * x319 - x1878 * x647 -
                      x1879 * x650 - x502 * x669;
  const amrex::Real x1887 =
    x1471 * (-x1008 * x1876 + x1009 * x1870 + x1010 * x1830 + x1011 * x1824 -
             x1064 * x1885 - x1083 * x1880 + x1084 * x1825 + x1092 * x1886 -
             x1837 * x587 - x1863 * x995 + x1874 * x968 - x1875 * x999);
  amrex::Real x1891 =
    -x1339 * x444 * (-kf_qss[137] + x1054) + x1385 * x1865 - x1559 * x1865 +
    x1779 -
    (kf_qss[122] * sc[12] * x1238 * x1343 + kf_qss[127] * sc[15] + x731) / x441;
  amrex::Real x1896 =
    (kf_qss[103] * sc[12] * x1248 * x1251 + sc[17] * x1233 + x1636) / x229;
  amrex::Real x1897 = kf_qss[92] * x1266 * x198 / x170 - x1229 * x173 * x1829 -
                      x1265 * x1826 * x233 - x1484 * x1825 - x1485 * x1825 +
                      x1515 * x1825 + x1787 + x1896 * x233 -
                      (kf_qss[108] * sc[14] + x1707) / x170;
  x1860 = -x1265 * x1826 * x572 - x1266 * x1860 * x571 / ((x569) * (x569)) +
          x1320 * x1860 + x1386 * x1860 * x446 * x576 / ((x569) * (x569)) -
          x1445 * x1862 + x1539 * x1867 + x1830 * x574 - x1891 * x792 +
          x1896 * x572 - x1897 * x575 -
          (kf_qss[24] * sc[10] * x1275 + kf_qss[51] * sc[12] + x1719) / x569;
  x1862 = kf_qss[41] * x1535 + kf_qss[41] * x1537 - kf_qss[41] * x1580 -
          kf_qss[41] * x921 - x1229 * x1829 * x642 - x1410 * x1871 * x725 +
          x1440 * x1867 - x1444 * x1872 + x1782 - x1860 * x602 + x1870 * x476 -
          x1891 * x784 +
          x725 *
            (kf_qss[66] * sc[8] * x1393 + kf_qss[68] * sc[12] * x1401 + x1641) /
            x634 -
          (kf_qss[43] * sc[1] * x1248 * x1426 + kf_qss[56] * sc[8]) / x465;
  x1872 = x1149 * x1881 - x1229 * x1829 * x316 - x1444 * x502 - x1445 * x1882 -
          x1482 * x1884 + x1590 * x1874 + x1700 * x316 / x65 + x1830 * x318 -
          x1860 * x647 - x1862 * x650 + x1870 * x646 - x1881 * x315 -
          x1897 * x319 -
          (kf_qss[34] * sc[12] * x1094 + kf_qss[55] * sc[8] + x1729) / x313;
  x1824 = (-x1008 * x1862 + x1047 * x1886 - x1064 * x1872 - x1443 * x1880 -
           x1444 * x1837 + x1468 * x1824 + x1481 * x1874 - x1482 * x1875 +
           x1483 * x1824 + x1741 + x1830 * x961 - x1860 * x995 + x1870 * x963 -
           x1897 * x990) /
          x1470;
  x1837 = -kf_qss[45] - kf_qss[56] * x450 - kf_qss[67] * x457;
  x1875 = -kf_qss[127] * exp(-x154 - x378) -
          7.2e+30 * refC * x416 * exp(x399 + x400) -
          1.194e+30 * sc[1] * x437 * exp(x421) + 2.37606e+59 * x734 +
          x742 * (12.0 * x407 * x693 + 1.68 * x693 * x736) +
          8.64e+60 * x743 * x746 +
          x752 * (12.0 * x428 * x693 + 1.68 * x693 * x748);
  x1880 = -3.756e+27 * x362 * x367 + x766 * (1.68 * x353 + 12.0 * x762) +
          2.351256e+54 * x773;
  x1881 = x1875 * x759 + x1880 * x777;
  x1882 = -x1837 * x730 + x1837 * x788 + x1875 * x786 + x1881 * x783;
  x502 = -1.32e+19 * x626 + x716 * (12.0 * x615 * x693 + 1.68 * x693 * x712) +
         2.904e+37 * x718 * x720;
  x1884 = -6.0 * kf_qss[16] - kf_qss[51] * exp(-x154 - x497) -
          8100000000000.0 * sc[1] * x562 * exp(x546) - 1.32e+37 * x525 * x821 +
          x800 * (12.0 * x553 * x693 + 1.68 * x693 * x796) + 1.0935e+25 * x804 +
          x815 * (12.0 * x516 * x693 + 1.68 * x693 * x809) +
          2.904e+73 * x818 * x819;
  amrex::Real x1925 = x1875 * x930 + x1881 * x929 - x1884 * x927 + x1884 * x931;
  amrex::Real x1932 = -kf_qss[108] * exp(-g_RT[14] + g_RT_qss[6] - x154) -
                      8.4e+18 * sc[1] * x129 * exp(x113) -
                      2.562e+47 * x150 * x868 +
                      x867 * (1.68 * x862 + 12.0 * x864) +
                      x875 * (12.0 * x120 * x693 + 1.68 * x693 * x871) +
                      1.093974e+94 * x877 * x878 + 1.176e+37 * x885 +
                      x891 * (1.68 * x693 * x887 + 12.0 * x693 * x89) +
                      3.947535e+43 * x895 - 1.539e+22 * x97 * exp(x81);
  amrex::Real x1937 = ((x183) * (x183)) * x693 / ((x185) * (x185) * (x185));
  x183 = x183 * x693 / ((x185) * (x185));
  x185 = -3.12e+28 * x192 * x851 - 2.28e+30 * x222 +
         x839 * (12.0 * x183 + 1.68 * x1937) + 8.664e+59 * x840 * x844 +
         x850 * (1.68 * x211 * x693 + 12.0 * x693 * x846) +
         1.6224e+56 * x855 * x856;
  amrex::Real x1945 =
    -4.2e+45 * x2 * x36 - 14700000000.0 * x63 + 3.6015e+19 * x692 +
    x701 * (12.0 * x25 * x693 + 1.68 * x693 * x696) + 2.94e+90 * x706;
  amrex::Real x1946 = x1652 * x1945 + x174 * x185 * x233 / ((x229) * (x229)) +
                      x1932 * x900 + x1932 * x906;
  amrex::Real x1947 =
    x174 * x185 * x572 / ((x229) * (x229)) - x1884 * x917 + x1884 * x919;
  amrex::Real x1949 =
    x185 * x233 * x482 / ((x229) * (x229)) + x1932 * x912 - x1932 * x913;
  amrex::Real x1950 = x185 * x482 * x572 / ((x229) * (x229)) + x1875 * x794 +
                      x1881 * x791 + x1884 * x827 + x1884 * x829 +
                      x1946 * x911 - x1947 * x922 - x1949 * x575;
  amrex::Real x1951 = -kf_qss[67] * x457 * x725 / x634 + x1658 * x1945 +
                      x1837 * x688 + x1837 * x729 + x1837 * x936 +
                      x1875 * x934 + x1881 * x933 - x1882 * x790 -
                      x1925 * x602 + x1950 * x926 + x502 * x726;
  amrex::Real x1956 =
    -kf_qss[45] * x253 - kf_qss[55] * exp(-g_RT[8] + g_RT_qss[1] - x154) -
    1.614e+22 * sc[10] * x296 * exp(x280) +
    x1017 * (1.68 * x1013 * x693 + 12.0 * x287 * x693) +
    x1029 * (1.68 * x1025 * x693 + 12.0 * x267 * x693) + 6.144e+31 * x1034 -
    1.92e+16 * x1035 + 4.34166e+43 * x1668;
  amrex::Real x1957 = -x1043 * x1956 + x1045 * x1956 + x1674 * x1945;
  amrex::Real x1958 =
    x1041 * x1946 - x1042 * x1956 - x1949 * x319 - x1957 * x922;
  amrex::Real x1959 = kf_qss[45] / x313 + x1051 * x1956 - x1052 * x1956 +
                      x1053 * x1950 + x1677 * x1945 - x1925 * x647 -
                      x1958 * x790;
  amrex::Real x1960 =
    x1002 * x1946 + x1004 * x1932 - x1884 * x584 - x1947 * x683;
  amrex::Real x1961 =
    -x1000 * x1837 + x1006 * x1950 - x1882 * x587 - x1960 * x602;
  amrex::Real x1962 = -x1039 * x1956 + x1050 * x1950 + x1056 * x1951 +
                      x1057 * x1932 + x1058 * x1946 - x1957 * x683 -
                      x1958 * x587 - x1959 * x999 - x1960 * x647 -
                      x1961 * x650 + x655 / x313;
  x655 = -kf_qss[20] - x655 - 1.614e+17 * x955 * x977 +
         x976 * (1.68 * x693 * ((x946) * (x946)) / ((x948) * (x948) * (x948)) +
                 12.0 * x693 * x973) +
         4.34166e+33 * x981 * x982;
  amrex::Real x1966 = x1946 * x989 - x1949 * x990 - x655 * x987 + x655 * x992;
  amrex::Real x1967 = -x1925 * x995 + x1950 * x997 - x1966 * x790 - x655 * x994;
  amrex::Real x1968 = -x1067 * x1932 + x1068 * x1932 + x1684 * x1945;
  amrex::Real x1969 =
    -x1062 * x1947 + x1072 * x1946 - x1073 * x1884 - x1968 * x575;
  amrex::Real x1970 = kf_qss[45] * x253 / x465 + x1075 * x1837 + x1078 * x1950 +
                      x1687 * x1945 - x1837 * x671 - x1882 * x669 -
                      x1969 * x602;
  amrex::Real x1971 = -x1060 * x1959 - x1062 * x1957 + x1085 * x1950 +
                      x1086 * x1956 + x1087 * x1946 + x1088 * x1951 +
                      x1683 * x1945 - x1958 * x669 - x1968 * x319 -
                      x1969 * x647 - x1970 * x650;
  amrex::Real x1972 = -x1008 * x1970 - x1060 * x1967 + x1065 * x1946 +
                      x1066 * x655 - x1070 * x655 + x1071 * x1951 +
                      x1080 * x1950 - x1966 * x669 - x1968 * x990 -
                      x1969 * x995;
  const amrex::Real x1973 =
    x1471 * (-x1008 * x1961 + x1009 * x1950 + x1010 * x1946 + x1011 * x655 -
             x1064 * x1962 - x1083 * x1972 + x1084 * x1932 + x1092 * x1971 +
             x1951 * x968 - x1960 * x995 - x1966 * x587 - x1967 * x999);
  amrex::Real x1977 =
    (kf_qss[137] * sc[20] * x1323 + 3.756e+27 * x1330 * exp(x346) -
     2.351256e+54 * x1552 - x358 * (1.68 * x353 + 12.0 * x762)) /
    x374;
  amrex::Real x1979 = -x1339 * x1880 * x444 + x1385 * x1875 - x1559 * x1875 +
                      x1977 * x444 -
                      (1.194e+30 * x1355 * x1360 - 2.37606e+59 * x1543 +
                       7.2e+30 * x1545 - 8.64e+60 * x1547 * x743 -
                       x412 * (12.0 * x407 * x693 + 1.68 * x693 * x736) -
                       x433 * (12.0 * x428 * x693 + 1.68 * x693 * x748)) /
                        x441;
  amrex::Real x1981 =
    (sc[17] * x1263 + 3.12e+28 * x1259 * x192 - 1.6224e+56 * x1504 * x856 +
     2.28e+30 * x1507 - 8.664e+59 * x1510 * x840 -
     x188 * (12.0 * x183 + 1.68 * x1937) -
     x216 * (1.68 * x211 * x693 + 12.0 * x693 * x846)) /
    x229;
  amrex::Real x1985 =
    (14700000000.0 * sc[13] * exp(x57) / x61 +
     4.2e+45 * sc[14] * x35 * exp(x16) - 2.94e+90 * x1519 - 3.6015e+19 * x1521 -
     x31 * (12.0 * x25 * x693 + 1.68 * x693 * x696)) /
    x65;
  amrex::Real x1987 =
    -x1229 * x173 * x1945 - x1265 * x185 * x233 - x1484 * x1932 -
    x1485 * x1932 + x1515 * x1932 + x173 * x1985 + x1981 * x233 -
    (kf_qss[88] * sc[13] * x1200 + 1.539e+22 * x1178 * x1181 +
     8.4e+18 * x1185 * x1487 -
     x125 * (12.0 * x120 * x693 + 1.68 * x693 * x871) -
     x146 * (1.68 * x862 + 12.0 * x864) - 1.176e+37 * x1489 -
     1.093974e+94 * x1495 * x878 + 2.562e+47 * x1499 * x150 -
     3.947535e+43 * x894 - x94 * (1.68 * x693 * x887 + 12.0 * x693 * x89)) /
      x170;
  x1884 = -x1265 * x185 * x572 + x1320 * x1884 - x1445 * x1947 + x1539 * x1881 +
          x1563 * x1884 - x1564 * x1884 + x1946 * x574 - x1979 * x792 +
          x1981 * x572 - x1987 * x575 -
          (6.0 * kf_qss[16] * x1288 + kf_qss[26] * sc[10] * x1272 +
           8100000000000.0 * x1278 * x1281 + 1.32e+37 * x1299 * x525 -
           2.904e+73 * x1569 * x819 - 1.0935e+25 * x1572 -
           x521 * (12.0 * x516 * x693 + 1.68 * x693 * x809) -
           x558 * (12.0 * x553 * x693 + 1.68 * x693 * x796)) /
            x569;
  x1947 =
    (kf_qss[69] * sc[12] * x1398 + 1.32e+19 * x1530 - 2.904e+37 * x1531 * x718 -
     x620 * (12.0 * x615 * x693 + 1.68 * x693 * x712)) /
    x634;
  x1837 = -kf_qss[44] * sc[10] * x1420 / x465 - x1229 * x1945 * x642 -
          x1410 * x502 * x725 + x1440 * x1881 - x1444 * x1882 - x1535 * x1837 -
          x1537 * x1837 + x1580 * x1837 + x1837 * x921 - x1884 * x602 +
          x1947 * x725 + x1950 * x476 - x1979 * x784 + x1985 * x642;
  x1882 = x1149 * x1956 - x1229 * x1945 * x316 - x1444 * x1958 - x1445 * x1957 -
          x1482 * x1959 + x1590 * x1951 - x1837 * x650 - x1884 * x647 +
          x1946 * x318 + x1950 * x646 - x1956 * x315 + x1985 * x316 -
          x1987 * x319 -
          (1.92e+16 * sc[8] * x1118 * x276 - 4.34166e+43 * x1018 -
           6.144e+31 * x1030 * x1594 + 1.614e+22 * x1105 * x1599 -
           x272 * (1.68 * x1025 * x693 + 12.0 * x267 * x693) -
           x292 * (1.68 * x1013 * x693 + 12.0 * x287 * x693)) /
            x313;
  x1956 =
    (-x1008 * x1837 + x1047 * x1971 - x1064 * x1882 - x1443 * x1972 -
     x1444 * x1966 + x1468 * x655 + x1481 * x1951 - x1482 * x1967 +
     x1483 * x655 - x1884 * x995 + x1946 * x961 + x1950 * x963 - x1987 * x990 -
     (1.614e+17 * refC * sc[16] * x1457 * x955 - 4.34166e+33 * x1478 * x982 -
      x951 * (1.68 * x693 * ((x946) * (x946)) / ((x948) * (x948) * (x948)) +
              12.0 * x693 * x973)) /
       x958) /
    x1470;
  x1957 = -kf_qss[120] - kf_qss[121] - kf_qss[122] + x1048;
  x1958 =
    -kf_qss[139] * x376 / x441 + x1957 * x759 + x777 * (-kf_qss[139] + x1054);
  x1959 = -kf_qss[52] * exp(-x102 - x497) + x1631;
  x655 = x1957 * x930 + x1958 * x929 - x1959 * x927 + x1959 * x931;
  x1966 = -kf_qss[109] * exp(-g_RT[14] + g_RT_qss[6] - x102) - kf_qss[92] + x83;
  x1967 = x1 * x1649 * x173 / ((x65) * (x65)) + x1638 * x903;
  x1972 = -kf_qss[92] * x233 / x229 + x1966 * x900 + x1966 * x906 + x1967;
  amrex::Real x2006 = x1638 * x914 + x1966 * x912 - x1966 * x913;
  amrex::Real x2008 =
    -kf_qss[92] * x572 / x229 + x1638 * x1640 - x1959 * x917 + x1959 * x919;
  amrex::Real x2009 = x1638 * x1655 + x1957 * x794 + x1958 * x791 +
                      x1959 * x827 + x1959 * x829 + x1972 * x911 -
                      x2006 * x575 - x2008 * x922;
  amrex::Real x2010 = x1649 * x639 * x642 / ((x65) * (x65)) + x726 * x993;
  amrex::Real x2011 = x1957 * x934 + x1958 * x933 + x2009 * x926 + x2010 -
                      x602 * x655 - x790 * (x1957 * x786 + x1958 * x783);
  amrex::Real x2012 =
    x1002 * x1972 + x1004 * x1966 - x1959 * x584 - x2008 * x683;
  amrex::Real x2013 =
    x1006 * x2009 - x2012 * x602 - x587 * (x1957 * x786 + x1958 * x783);
  amrex::Real x2014 = x1664 + x1972 * x989 - x2006 * x990;
  amrex::Real x2015 = -x1663 * x994 + x2009 * x997 - x2014 * x790 - x655 * x995;
  amrex::Real x2016 = x1649 * x173 * x659 / ((x65) * (x65));
  amrex::Real x2017 = -x1067 * x1966 + x1068 * x1966 + x2016;
  amrex::Real x2018 = x1649 * x642 * x659 / ((x65) * (x65));
  amrex::Real x2019 =
    -x1062 * x2008 + x1072 * x1972 - x1073 * x1959 - x2017 * x575;
  amrex::Real x2020 =
    x1078 * x2009 + x2018 - x2019 * x602 - x669 * (x1957 * x786 + x1958 * x783);
  amrex::Real x2021 = -x1008 * x2020 - x1060 * x2015 + x1065 * x1972 +
                      x1071 * x2011 + x1080 * x2009 + x1690 - x2014 * x669 -
                      x2017 * x990 - x2019 * x995;
  amrex::Real x2022 = -kf_qss[34] + x1670;
  amrex::Real x2023 = x1 * x1649 * x316 / ((x65) * (x65));
  amrex::Real x2024 = -x1043 * x2022 + x1045 * x2022 + x2023;
  amrex::Real x2025 =
    x1041 * x1972 - x1042 * x2022 - x2006 * x319 - x2024 * x922;
  amrex::Real x2027 = x1649 * x316 * x639 / ((x65) * (x65));
  amrex::Real x2028 = x1051 * x2022 - x1052 * x2022 + x1053 * x2009 -
                      x2025 * x790 + x2027 - x647 * x655;
  amrex::Real x2029 = -x1039 * x2022 + x1050 * x2009 + x1056 * x2011 +
                      x1057 * x1966 + x1058 * x1972 - x2012 * x647 -
                      x2013 * x650 - x2024 * x683 - x2025 * x587 - x2028 * x999;
  amrex::Real x2030 = x1649 * x316 * x659 / ((x65) * (x65));
  amrex::Real x2031 = -x1060 * x2028 - x1062 * x2024 + x1085 * x2009 +
                      x1086 * x2022 + x1087 * x1972 + x1088 * x2011 -
                      x2017 * x319 - x2019 * x647 - x2020 * x650 -
                      x2025 * x669 + x2030;
  const amrex::Real x2032 =
    x1471 * (-x1008 * x2013 + x1009 * x2009 + x1010 * x1972 + x1011 * x1663 -
             x1064 * x2029 - x1083 * x2021 + x1084 * x1966 + x1092 * x2031 +
             x2011 * x968 - x2012 * x995 - x2014 * x587 - x2015 * x999);
  amrex::Real x2036 =
    kf_qss[139] * x1340 / x441 - x1339 * x444 * (-kf_qss[139] + x1054) +
    x1385 * x1957 - x1559 * x1957 -
    (kf_qss[119] * sc[14] * x1348 + sc[15] * x1372 + x731) / x441 +
    x444 * (kf_qss[138] * sc[20] * x1326 + x1716) / x374;
  amrex::Real x2040 = -x1265 * x1638 * x572;
  amrex::Real x2042 = -x1229 * x1649 * x173 - x1265 * x1638 * x233;
  amrex::Real x2044 =
    -x1484 * x1966 - x1485 * x1966 + x1515 * x1966 + x1787 + x2042 +
    x233 * (kf_qss[102] * sc[17] * x1235 + x1636) / x229 -
    (kf_qss[131] * sc[19] + sc[13] * x1205 + sc[14] * x1212 + x1707) / x170;
  x1959 =
    x1320 * x1959 - x1445 * x2008 + x1539 * x1958 + x1563 * x1959 -
    x1564 * x1959 + x1972 * x574 - x2036 * x792 + x2040 - x2044 * x575 -
    (kf_qss[27] * sc[10] * exp(-x102 - x163) + kf_qss[53] * sc[12] + x1719) /
      x569 +
    x572 * (kf_qss[102] * sc[17] * x1235 + x1636) / x229;
  x2008 = -x1229 * x1649 * x642 - x1410 * x725 * x993;
  amrex::Real x2049 =
    x1440 * x1958 - x1444 * (x1957 * x786 + x1958 * x783) + x1782 -
    x1959 * x602 + x2008 + x2009 * x476 - x2036 * x784 +
    x725 * (kf_qss[58] * sc[8] + sc[12] * x1408 + x1641) / x634;
  amrex::Real x2050 = -x1229 * x1649 * x316;
  x2022 = x1149 * x2022 - x1444 * x2025 - x1445 * x2024 - x1482 * x2028 +
          x1590 * x2011 + x1815 - x1959 * x647 + x1972 * x318 + x2009 * x646 -
          x2022 * x315 - x2044 * x319 - x2049 * x650 + x2050;
  x2014 = (-x1008 * x2049 + x1047 * x2031 - x1064 * x2022 - x1443 * x2021 -
           x1444 * x2014 + x1481 * x2011 - x1482 * x2015 + x1675 + x1741 -
           x1959 * x995 + x1972 * x961 + x2009 * x963 - x2044 * x990) /
          x1470;
  x2015 = -kf_qss[123] + x1048;
  x2021 = x1054 * x777 + x2015 * x759;
  x2024 = -kf_qss[53] * exp(-g_RT[6] + g_RT[7] - x497) + x1631;
  x2025 = -kf_qss[93] + x83;
  x2028 = x1967 + x2025 * x900 + x2025 * x906;
  amrex::Real x2063 =
    x1638 * x1640 + x2024 * x231 * x571 / ((x569) * (x569)) - x2024 * x917;
  amrex::Real x2064 =
    x1002 * x2028 + x1004 * x2025 - x2024 * x584 - x2063 * x683;
  amrex::Real x2067 = x1638 * x914 + x2025 * x912 - x2025 * x913;
  amrex::Real x2068 = x1638 * x1655 + x2015 * x794 + x2021 * x791 +
                      x2024 * x448 * x576 / ((x569) * (x569)) +
                      x2024 * x483 * x571 / ((x569) * (x569)) + x2028 * x911 -
                      x2063 * x922 - x2067 * x575;
  amrex::Real x2069 =
    x1006 * x2068 - x2064 * x602 - x587 * (x2015 * x786 + x2021 * x783);
  amrex::Real x2070 = x1664 + x2028 * x989 - x2067 * x990;
  amrex::Real x2071 = x2015 * x930 + x2021 * x929 - x2024 * x927 +
                      x2024 * x576 * x597 / ((x569) * (x569));
  amrex::Real x2072 =
    -x1663 * x994 + x2068 * x997 - x2070 * x790 - x2071 * x995;
  amrex::Real x2073 = -x1043 * x1670 + x1045 * x1670 + x2023;
  amrex::Real x2074 = -x1042 * x1670 - x2073 * x922;
  amrex::Real x2075 = x1041 * x2028 - x2067 * x319 + x2074;
  amrex::Real x2076 = -x1067 * x2025 + x1068 * x2025 + x2016;
  amrex::Real x2077 =
    -x1062 * x2063 + x1072 * x2028 - x1073 * x2024 - x2076 * x575;
  amrex::Real x2078 =
    x1078 * x2068 + x2018 - x2077 * x602 - x669 * (x2015 * x786 + x2021 * x783);
  amrex::Real x2080 = x1051 * x1670 - x1052 * x1670 + x1053 * x2068 + x2027 -
                      x2071 * x647 - x2075 * x790;
  amrex::Real x2081 = x2010 + x2015 * x934 + x2021 * x933 + x2068 * x926 -
                      x2071 * x602 - x790 * (x2015 * x786 + x2021 * x783);
  amrex::Real x2083 = -x1060 * x2080 - x1062 * x2073 + x1085 * x2068 +
                      x1086 * x1670 + x1087 * x2028 + x1088 * x2081 + x2030 -
                      x2075 * x669 - x2076 * x319 - x2077 * x647 - x2078 * x650;
  amrex::Real x2084 = -x1039 * x1670 - x2073 * x683;
  amrex::Real x2085 = x1050 * x2068 + x1056 * x2081 + x1057 * x2025 +
                      x1058 * x2028 - x2064 * x647 - x2069 * x650 -
                      x2075 * x587 - x2080 * x999 + x2084;
  amrex::Real x2086 = -x1008 * x2078 - x1060 * x2072 + x1065 * x2028 +
                      x1071 * x2081 + x1080 * x2068 + x1690 - x2070 * x669 -
                      x2076 * x990 - x2077 * x995;
  const amrex::Real x2087 =
    x1471 * (-x1008 * x2069 + x1009 * x2068 + x1010 * x2028 + x1011 * x1663 -
             x1064 * x2085 - x1083 * x2086 + x1084 * x2025 + x1092 * x2083 -
             x2064 * x995 - x2070 * x587 - x2072 * x999 + x2081 * x968);
  amrex::Real x2091 = -x1054 * x1339 * x444;
  amrex::Real x2093 = x1385 * x2015 - x1559 * x2015 + x1779 + x2091 -
                      (kf_qss[121] * sc[14] * x1381 + x731) / x441;
  amrex::Real x2094 = x1787 + x2042 - x1707 / x170;
  amrex::Real x2095 =
    -x1484 * x2025 - x1485 * x2025 + x1515 * x2025 + x1788 + x2094;
  x571 = -x1266 * x2024 * x571 / ((x569) * (x569)) + x1320 * x2024 +
         x1386 * x2024 * x446 * x576 / ((x569) * (x569)) - x1445 * x2063 +
         x1539 * x2021 + x1636 * x572 / x229 - x1719 / x569 + x2028 * x574 +
         x2040 - x2093 * x792 - x2095 * x575;
  x2024 = x1440 * x2021 - x1444 * (x2015 * x786 + x2021 * x783) +
          x1641 * x725 / x634 + x1782 + x2008 + x2068 * x476 - x2093 * x784 -
          x571 * x602;
  x2063 = x1149 * x1670 - x1444 * x2075 - x1445 * x2073 - x1482 * x2080 +
          x1590 * x2081 - x1670 * x315 + x1815 - x2024 * x650 + x2028 * x318 +
          x2050 + x2068 * x646 - x2095 * x319 - x571 * x647;
  x2070 = (-x1008 * x2024 + x1047 * x2083 - x1064 * x2063 - x1443 * x2086 -
           x1444 * x2070 + x1481 * x2081 - x1482 * x2072 + x1675 + x1741 +
           x2028 * x961 + x2068 * x963 - x2095 * x990 - x571 * x995) /
          x1470;
  x2072 = x1048 - x339 - x388;
  x2075 = x2072 * x376 * x443 / ((x441) * (x441)) - x339 * x444 / x374 +
          x777 * (-kf_qss[140] + x1054);
  x2080 = kf_qss[63] * x730 - kf_qss[63] * x788 +
          x2072 * x325 * x784 / ((x441) * (x441)) + x2075 * x783 -
          x388 * x448 / x465;
  x2086 = (-kf_qss[95] - kf_qss[96] - 4.27e+46 * x135 * x150 + x83) /
          ((x170) * (x170));
  amrex::Real x2117 = x172 * x2086 * x67 + x1967 + x2086 * x231 * x232;
  amrex::Real x2118 =
    -kf_qss[106] * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3]) -
    kf_qss[60] - kf_qss[98] * x479 + x1631 - 2.2e+36 * x510 * x525;
  amrex::Real x2119 = -kf_qss[98] * x233 * x479 / x229 + x1638 * x914 +
                      x2086 * x232 * x483 - x2086 * x489;
  amrex::Real x2120 = x1638 * x1640 - x2118 * x917 + x2118 * x919;
  amrex::Real x2121 = -kf_qss[98] * x479 * x572 / x229 + x1638 * x1655 +
                      x2072 * x325 * x792 / ((x441) * (x441)) + x2075 * x791 +
                      x2117 * x911 + x2118 * x827 + x2118 * x829 -
                      x2119 * x575 - x2120 * x922;
  amrex::Real x2122 = x2072 * x596 * x792 / ((x441) * (x441)) + x2075 * x929 -
                      x2118 * x927 + x2118 * x931;
  amrex::Real x2124 =
    -kf_qss[63] * x688 - kf_qss[63] * x729 - kf_qss[63] * x936 + x2010 +
    x2072 * x596 * x784 / ((x441) * (x441)) + x2075 * x933 - x2080 * x790 +
    x2121 * x926 - x2122 * x602 - x388 * x597 / x465;
  amrex::Real x2125 = -kf_qss[62] + x1670;
  amrex::Real x2126 = -x1043 * x2125 + x1045 * x2125 + x2023;
  amrex::Real x2127 =
    x1041 * x2117 - x1042 * x2125 - x2119 * x319 - x2126 * x922;
  amrex::Real x2128 = x172 * x2086 * x660 + x2016 - x2086 * x662;
  amrex::Real x2129 =
    -x1062 * x2120 + x1072 * x2117 - x1073 * x2118 - x2128 * x575;
  amrex::Real x2130 = x1051 * x2125 - x1052 * x2125 + x1053 * x2121 + x2027 -
                      x2122 * x647 - x2127 * x790;
  amrex::Real x2131 = -kf_qss[63] * x1075 + kf_qss[63] * x671 + x1078 * x2121 +
                      x2018 - x2080 * x669 - x2129 * x602;
  amrex::Real x2132 = -x1060 * x2130 - x1062 * x2126 + x1085 * x2121 +
                      x1086 * x2125 + x1087 * x2117 + x1088 * x2124 + x2030 -
                      x2127 * x669 - x2128 * x319 - x2129 * x647 - x2131 * x650;
  amrex::Real x2133 = -kf_qss[59] + x1663;
  amrex::Real x2134 = x2117 * x989 - x2119 * x990 - x2133 * x987 + x2133 * x992;
  amrex::Real x2135 = x2121 * x997 - x2122 * x995 - x2133 * x994 - x2134 * x790;
  amrex::Real x2137 = -kf_qss[59] * x575 / x170 + x1002 * x2117 +
                      x2086 * x321 * x575 - x2118 * x584 - x2120 * x683;
  amrex::Real x2138 =
    kf_qss[63] * x1000 + x1006 * x2121 - x2080 * x587 - x2137 * x602;
  amrex::Real x2139 = -kf_qss[59] * x319 / x170 - x1039 * x2125 +
                      x1050 * x2121 + x1056 * x2124 + x1058 * x2117 +
                      x2086 * x319 * x321 - x2126 * x683 - x2127 * x587 -
                      x2130 * x999 - x2137 * x647 - x2138 * x650;
  amrex::Real x2140 = -x1008 * x2131 - x1060 * x2135 + x1065 * x2117 +
                      x1066 * x2133 - x1070 * x2133 + x1071 * x2124 +
                      x1080 * x2121 - x2128 * x990 - x2129 * x995 -
                      x2134 * x669;
  const amrex::Real x2141 =
    x1471 * (-kf_qss[59] * x990 / x170 - x1008 * x2138 + x1009 * x2121 +
             x1010 * x2117 + x1011 * x2133 - x1064 * x2139 - x1083 * x2140 +
             x1092 * x2132 + x2086 * x321 * x990 + x2124 * x968 - x2134 * x587 -
             x2135 * x999 - x2137 * x995);
  amrex::Real x2148 =
    -x1339 * x444 * (-kf_qss[140] + x1054) -
    x1340 * x2072 * x443 / ((x441) * (x441)) + x1385 * x2072 -
    (kf_qss[117] * sc[12] * x1374 + kf_qss[122] * sc[4] * x105 * x1343 +
     kf_qss[129] * sc[15] + 2.0 * kf_qss[64] * ((sc[8])) + sc[19] * x1161 +
     x731) /
      x441 +
    x444 * (kf_qss[115] * sc[14] + x1716) / x374;
  amrex::Real x2150 = x1215 * x2086 - x1230 * x172 * x2086 -
                      x1266 * x2086 * x232 + x1787 + x2042 +
                      x233 * (x1240 * x1248 + x1636) / x229 -
                      (kf_qss[114] * sc[14] + kf_qss[87] * sc[10] * x1191 +
                       sc[19] * x1161 + x1707) /
                        x170;
  x2118 = x1320 * x2118 - x1445 * x2120 + x1539 * x2075 + x1563 * x2118 -
          x1564 * x2118 + x2040 + x2117 * x574 - x2148 * x792 - x2150 * x575 -
          (kf_qss[61] * sc[12] + x1719) / x569 +
          x572 * (x1240 * x1248 + x1636) / x229;
  x388 = kf_qss[63] * x1535 + kf_qss[63] * x1537 - kf_qss[63] * x1580 -
         kf_qss[63] * x921 - x1386 * x388 * x446 / x465 + x1440 * x2075 -
         x1444 * x2080 + x1782 + x2008 - x2118 * x602 + x2121 * x476 -
         x2148 * x784 +
         x725 *
           (kf_qss[57] * sc[3] + kf_qss[58] * sc[6] +
            kf_qss[66] * sc[4] * x1393 + x1641) /
           x634 -
         (kf_qss[42] * sc[1] * x1437 + kf_qss[56] * sc[4] +
          2.0 * kf_qss[73] * ((sc[8])) * exp(-g_RT_qss[2] - x1124)) /
           x465;
  x1101 = x1149 * x2125 - x1444 * x2127 - x1445 * x2126 - x1482 * x2130 +
          x1590 * x2124 + x1700 * x316 / x65 + x2050 + x2117 * x318 -
          x2118 * x647 + x2121 * x646 - x2125 * x315 - x2150 * x319 -
          x388 * x650 -
          (kf_qss[55] * sc[4] +
           2.0 * kf_qss[72] * ((sc[8])) * exp(-g_RT_qss[1] - x1124) +
           sc[1] * x1101 + 3200000000000000.0 * x10 * x1118 * x276 + x1729) /
            x313;
  x2080 = (-x1008 * x388 + x1047 * x2132 - x1064 * x1101 - x1443 * x2140 -
           x1444 * x2134 + x1468 * x2133 + x1481 * x2124 - x1482 * x2135 +
           x1483 * x2133 + x1741 + x2117 * x961 - x2118 * x995 + x2121 * x963 -
           x2150 * x990) /
          x1470;
  x2120 = -kf_qss[112] * x42 -
          kf_qss[130] * exp(-g_RT[19] - g_RT[1] + g_RT[9] + g_RT_qss[5]) + x707;
  x2125 = -kf_qss[129] * exp(-x377 - x378) + x755;
  x2126 = x2125 * x759 + x774 * x777;
  x2127 = -kf_qss[73] * x448 * x467 / ((x465) * (x465)) + kf_qss[73] * x730 +
          x2125 * x786 + x2126 * x783;
  x2130 = -kf_qss[61] * exp(-x377 - x497) + x823;
  x2133 = x2125 * x930 + x2126 * x929 - x2130 * x927 + x2130 * x931;
  x2134 =
    -kf_qss[114] * exp(-g_RT[14] - g_RT[8] + g_RT[9] + g_RT_qss[6]) + x896;
  x2135 = x1652 * x2120 + x2134 * x900 + x2134 * x906 + x858 * x903;
  x2140 = x2134 * x912 - x2134 * x913 + x858 * x914;
  amrex::Real x2168 =
    x174 * x572 * x858 / ((x229) * (x229)) - x2130 * x917 + x2130 * x919;
  amrex::Real x2169 = x2125 * x794 + x2126 * x791 + x2130 * x827 +
                      x2130 * x829 + x2135 * x911 - x2140 * x575 -
                      x2168 * x922 + x482 * x572 * x858 / ((x229) * (x229));
  amrex::Real x2170 = -kf_qss[112] * x42 * x640 / x465 -
                      kf_qss[73] * x467 * x597 / ((x465) * (x465)) -
                      kf_qss[73] * x604 * x637 / ((x465) * (x465)) -
                      kf_qss[73] * x640 * x641 / ((x465) * (x465)) +
                      x1658 * x2120 + x2125 * x934 + x2126 * x933 -
                      x2127 * x790 - x2133 * x602 + x2169 * x926 + x722 * x726;
  amrex::Real x2171 = -kf_qss[71] + x984;
  amrex::Real x2172 = x2135 * x989 - x2140 * x990 - x2171 * x987 + x2171 * x992;
  amrex::Real x2173 =
    -x2133 * x995 + x2169 * x997 - x2171 * x994 - x2172 * x790;
  amrex::Real x2174 =
    x1002 * x2135 + x1004 * x2134 - x2130 * x584 - x2168 * x683;
  amrex::Real x2175 =
    kf_qss[73] * x1000 + x1006 * x2169 - x2127 * x587 - x2174 * x602;
  amrex::Real x2176 = -kf_qss[72] + x1036;
  amrex::Real x2177 = -x1043 * x2176 + x1045 * x2176 + x1674 * x2120;
  amrex::Real x2178 =
    x1041 * x2135 - x1042 * x2176 - x2140 * x319 - x2177 * x922;
  amrex::Real x2179 = x1051 * x2176 - x1052 * x2176 + x1053 * x2169 +
                      x1677 * x2120 - x2133 * x647 - x2178 * x790;
  amrex::Real x2180 = -x1039 * x2176 + x1050 * x2169 + x1056 * x2170 +
                      x1057 * x2134 + x1058 * x2135 - x2174 * x647 -
                      x2175 * x650 - x2177 * x683 - x2178 * x587 - x2179 * x999;
  amrex::Real x2181 = -x1067 * x2134 + x1068 * x2134 + x1684 * x2120;
  amrex::Real x2182 =
    -x1062 * x2168 + x1072 * x2135 - x1073 * x2130 - x2181 * x575;
  amrex::Real x2183 = -kf_qss[112] * x42 * x660 / x465 + kf_qss[73] * x671 -
                      kf_qss[73] * x641 * x660 / ((x465) * (x465)) +
                      x1078 * x2169 + x1687 * x2120 - x2127 * x669 -
                      x2182 * x602;
  amrex::Real x2184 = -x1060 * x2179 - x1062 * x2177 + x1085 * x2169 +
                      x1086 * x2176 + x1087 * x2135 + x1088 * x2170 +
                      x1683 * x2120 - x2178 * x669 - x2181 * x319 -
                      x2182 * x647 - x2183 * x650;
  amrex::Real x2185 = -x1008 * x2183 - x1060 * x2173 + x1065 * x2135 +
                      x1066 * x2171 - x1070 * x2171 + x1071 * x2170 +
                      x1080 * x2169 - x2172 * x669 - x2181 * x990 -
                      x2182 * x995;
  const amrex::Real x2186 =
    x1471 * (-x1008 * x2175 + x1009 * x2169 + x1010 * x2135 + x1011 * x2171 -
             x1064 * x2180 - x1083 * x2185 + x1084 * x2134 + x1092 * x2184 +
             x2170 * x968 - x2172 * x587 - x2173 * x999 - x2174 * x995);
  amrex::Real x2191 = -x1339 * x444 * x774 + x1385 * x2125 - x1548 / x441 -
                      x1559 * x2125 +
                      x444 * (kf_qss[140] * sc[20] * x1333 + x1554) / x374;
  amrex::Real x2194 = -x1229 * x173 * x2120 - x1484 * x2134 - x1485 * x2134 +
                      x1515 * x2134 + x1525 + x233 * x837 / x229 -
                      (kf_qss[95] * sc[13] * x1195 + x1501) / x170;
  x2130 = -x1265 * x572 * x858 + x1320 * x2130 - x1445 * x2168 + x1539 * x2126 +
          x1563 * x2130 - x1564 * x2130 + x2135 * x574 - x2191 * x792 -
          x2194 * x575 - (kf_qss[60] * sc[10] * x1268 + x1575) / x569 +
          x572 * x837 / x229;
  x604 = kf_qss[112] * x1230 * x42 / x465 +
         kf_qss[73] * x1230 * x641 / ((x465) * (x465)) -
         kf_qss[73] * x1386 * x446 * x467 / ((x465) * (x465)) +
         kf_qss[73] * x1411 * x604 / ((x465) * (x465)) - kf_qss[73] * x921 -
         x1229 * x2120 * x642 + x1440 * x2126 - x1444 * x2127 +
         x1533 * x725 / x634 + x1584 - x2130 * x602 + x2169 * x476 -
         x2191 * x784;
  x641 = x1149 * x2176 - x1229 * x2120 * x316 +
         x1441 * x2170 * x649 / ((x643) * (x643)) - x1444 * x2178 -
         x1445 * x2177 - x1482 * x2179 + x1522 * x316 - x1602 / x313 -
         x2130 * x647 + x2135 * x318 + x2169 * x646 - x2176 * x315 -
         x2194 * x319 - x604 * x650;
  x649 =
    (-x1008 * x604 + x1047 * x2184 - x1064 * x641 +
     x1441 * x2170 * x965 / ((x643) * (x643)) - x1443 * x2185 - x1444 * x2172 +
     x1468 * x2171 + x1480 - x1482 * x2173 + x1483 * x2171 - x2130 * x995 +
     x2135 * x961 + x2169 * x963 - x2194 * x990) /
    x1470;
  x965 = -kf_qss[46] - kf_qss[74] * x453;
  x2127 =
    -1.05e+45 * x2 * x36 +
    7.35e+89 * x2 * x703 * exp(-100502.432494519 * invT - 18.62 * tc[0] + x15) -
    3675000000.0 * x63 + 9.00375e+18 * x692 +
    x701 * (3.0 * x25 * x693 + 0.42 * x693 * x696);
  x2168 = -3.3e+18 * x626 + x716 * (3.0 * x615 * x693 + 0.42 * x693 * x712) +
          7.26e+36 * x718 * x720;
  x2171 = -1.5 * kf_qss[16] - 2025000000000.0 * sc[1] * x562 * exp(x546) +
          2.73375e+24 * sc[1] * x801 *
            exp(-1434.1674975434501 * invT - 5.14 * tc[0]) -
          3.3e+36 * x525 * x821 - x544 +
          x800 * (3.0 * x553 * x693 + 0.42 * x693 * x796) +
          x815 * (3.0 * x516 * x693 + 0.42 * x693 * x809) +
          7.26e+72 * x818 * x819;
  x222 = -7.8e+27 * x192 * x851 - 5.7e+29 * x222 +
         x839 * (3.0 * x183 + 0.42 * x1937) + 2.166e+59 * x840 * x844 +
         x850 * (0.42 * x211 * x693 + 3.0 * x693 * x846) +
         4.056e+55 * x855 * x856;
  x2172 = -2.985e+29 * sc[1] * x437 * exp(x421) - x397 - 1.8e+30 * x418 +
          5.94015e+58 * x734 + x742 * (3.0 * x407 * x693 + 0.42 * x693 * x736) +
          2.16e+60 * x743 * x746 +
          x752 * (3.0 * x428 * x693 + 0.42 * x693 * x748);
  x2173 = 5.87814e+53 * refC * x767 *
            exp(-7045.0333212660798 * invT - 13.32 * tc[0] + x365) -
          9.39e+26 * x362 * x367 + x766 * (0.42 * x353 + 3.0 * x762);
  x2176 = x2172 * x759 + x2173 * x777;
  x885 = -kf_qss[76] * x159 - 2.1e+18 * sc[1] * x129 * exp(x113) -
         6.405e+46 * x150 * x868 - x165 + x867 * (0.42 * x862 + 3.0 * x864) +
         x875 * (3.0 * x120 * x693 + 0.42 * x693 * x871) +
         2.734935e+93 * x877 * x878 + 2.94e+36 * x885 +
         x891 * (0.42 * x693 * x887 + 3.0 * x693 * x89) +
         9.8688375000000004e+42 * x895 - 3.8475e+21 * x97 * exp(x81);
  x2177 = x1652 * x2127 + x174 * x222 * x233 / ((x229) * (x229)) + x885 * x900 +
          x885 * x906;
  x2178 = x222 * x233 * x482 / ((x229) * (x229)) + x885 * x912 - x885 * x913;
  x165 = x165 / x569 + x174 * x222 * x572 / ((x229) * (x229)) - x2171 * x917 +
         x2171 * x919;
  x2179 = -x165 * x922 + x2171 * x827 + x2171 * x829 + x2172 * x794 +
          x2176 * x791 + x2177 * x911 - x2178 * x575 +
          x222 * x482 * x572 / ((x229) * (x229)) - x397 * x448 / x569;
  x2185 = -x2171 * x927 + x2171 * x931 + x2172 * x930 + x2176 * x929 -
          x397 * x597 / x569;
  amrex::Real x2245 = x2172 * x786 + x2176 * x783 - x730 * x965 + x788 * x965;
  amrex::Real x2246 = x1658 * x2127 + x2168 * x726 + x2172 * x934 +
                      x2176 * x933 + x2179 * x926 - x2185 * x602 -
                      x2245 * x790 + x688 * x965 + x729 * x965 + x936 * x965;
  amrex::Real x2250 =
    -2.69e+16 * x940 * x955 - 4.035e+16 * x955 * x977 +
    x976 * (3.0 * x693 * x946 / ((x948) * (x948)) + 0.42 * x693 * x971) +
    1.085415e+33 * x981 * x982;
  x544 = x2177 * x989 - x2178 * x990 + x2250 * x922 * x991 - x2250 * x987 +
         x544 / x958;
  amrex::Real x2253 = x2179 * x997 - x2185 * x995 - x2250 * x994 - x544 * x790;
  amrex::Real x2256 =
    -x1067 * x885 + x1068 * x885 + x1684 * x2127 - x173 * x311 / x65;
  amrex::Real x2257 =
    -x1062 * x165 + x1072 * x2177 - x1073 * x2171 - x2256 * x575;
  amrex::Real x2258 = kf_qss[46] * x253 / x465 + x1075 * x965 + x1078 * x2179 +
                      x1687 * x2127 - x2245 * x669 - x2257 * x602 -
                      x311 * x642 / x65 - x671 * x965;
  amrex::Real x2259 = -x1008 * x2258 - x1060 * x2253 + x1062 * x2250 * x991 +
                      x1065 * x2177 - x1070 * x2250 + x1071 * x2246 +
                      x1080 * x2179 - x2256 * x990 - x2257 * x995 - x544 * x669;
  amrex::Real x2260 = x1002 * x2177 + x1004 * x885 - x165 * x683 - x2171 * x584;
  amrex::Real x2261 =
    -x1000 * x965 + x1006 * x2179 - x2245 * x587 - x2260 * x602;
  x282 =
    -kf_qss[46] * x253 - kf_qss[77] * exp(g_RT[10] - g_RT[13] - x244) -
    4.035e+21 * sc[10] * x296 * exp(x280) +
    1.536e+31 * sc[1] * x1030 * exp(-1237.91299787961 * invT - 6.28 * tc[0]) -
    x10 * x282 * x296 + x1017 * (0.42 * x1013 * x693 + 3.0 * x287 * x693) +
    x1029 * (0.42 * x1025 * x693 + 3.0 * x267 * x693) -
    4800000000000000.0 * x1035 + 1.085415e+43 * x1668 - x311;
  amrex::Real x2266 =
    kf_qss[76] * x159 / x313 - x1043 * x282 + x1045 * x282 + x1674 * x2127;
  amrex::Real x2267 =
    x1041 * x2177 - x1042 * x282 - x2178 * x319 - x2266 * x922;
  amrex::Real x2268 = kf_qss[46] / x313 + x1051 * x282 - x1052 * x282 +
                      x1053 * x2179 + x1677 * x2127 - x2185 * x647 -
                      x2267 * x790;
  amrex::Real x2269 = -x1060 * x2268 - x1062 * x2266 + x1085 * x2179 +
                      x1086 * x282 + x1087 * x2177 + x1088 * x2246 +
                      x1683 * x2127 - x2256 * x319 - x2257 * x647 -
                      x2258 * x650 - x2267 * x669 - x311 * x316 / x65;
  amrex::Real x2270 = -x1039 * x282 + x1050 * x2179 + x1056 * x2246 +
                      x1057 * x885 + x1058 * x2177 - x2260 * x647 -
                      x2261 * x650 - x2266 * x683 - x2267 * x587 - x2268 * x999;
  const amrex::Real x2271 =
    x1471 * (-x1008 * x2261 + x1009 * x2179 + x1010 * x2177 - x1064 * x2270 -
             x1083 * x2259 + x1084 * x885 + x1092 * x2269 + x2246 * x968 +
             x2250 * x683 * x991 - x2253 * x999 - x2260 * x995 - x544 * x587);
  amrex::Real x2275 = sc[1] * sc[20] * exp(x346);
  x767 = (-5.87814e+53 * sc[1] * sc[20] * x767 *
            exp(-7045.0333212660798 * invT - 13.32 * tc[0]) +
          9.39e+26 * x2275 * x362 - x358 * (0.42 * x353 + 3.0 * x762)) /
         x374;
  amrex::Real x2278 =
    -x1339 * x2173 * x444 + x1385 * x2172 - x1559 * x2172 + x444 * x767 -
    (kf_qss[124] * sc[15] * x1316 + 2.985e+29 * x1355 * x1360 -
     5.94015e+58 * x1543 + 1.8e+30 * x1545 - 2.16e+60 * x1547 * x743 -
     x412 * (3.0 * x407 * x693 + 0.42 * x693 * x736) -
     x433 * (3.0 * x428 * x693 + 0.42 * x693 * x748)) /
      x441;
  const amrex::Real x2279 = refCinv * sc[4];
  x703 =
    (1.05e+45 * sc[14] * x35 * exp(x16) -
     7.35e+89 * sc[14] * x703 * exp(-100502.432494519 * invT - 18.62 * tc[0]) +
     3675000000.0 * x1221 - 9.00375e+18 * x1521 -
     x31 * (3.0 * x25 * x693 + 0.42 * x693 * x696)) /
    x65;
  amrex::Real x2283 = (3.3e+18 * x1530 - 7.26e+36 * x1531 * x718 -
                       x620 * (3.0 * x615 * x693 + 0.42 * x693 * x712)) /
                      x634;
  amrex::Real x2284 =
    (kf_qss[103] * sc[4] * x105 * x1251 + x1238 * x1240 +
     7.8e+27 * x1259 * x192 - 4.056e+55 * x1504 * x856 + 5.7e+29 * x1507 -
     2.166e+59 * x1510 * x840 - x188 * (3.0 * x183 + 0.42 * x1937) -
     x216 * (0.42 * x211 * x693 + 3.0 * x693 * x846)) /
    x229;
  x864 = -x1229 * x173 * x2127 - x1265 * x222 * x233 - x1484 * x885 -
         x1485 * x885 + x1515 * x885 + x173 * x703 + x2284 * x233 -
         (kf_qss[87] * sc[8] * x1191 + kf_qss[94] * sc[14] * x1170 +
          3.8475e+21 * x1178 * x1181 + 2.1e+18 * x1185 * x1487 -
          x125 * (3.0 * x120 * x693 + 0.42 * x693 * x871) -
          x146 * (0.42 * x862 + 3.0 * x864) - 2.94e+36 * x1489 -
          2.734935e+93 * x1495 * x878 + 6.405e+46 * x1499 * x150 -
          9.8688375000000004e+42 * x894 -
          x94 * (0.42 * x693 * x887 + 3.0 * x693 * x89)) /
           x170;
  x397 = -x1265 * x222 * x572 + x1320 * x2171 - x1386 * x397 * x446 / x569 -
         x1445 * x165 + x1539 * x2176 + x1563 * x2171 - x1564 * x2171 +
         x2177 * x574 - x2278 * x792 + x2284 * x572 - x575 * x864 -
         (kf_qss[124] * sc[15] * x1316 + kf_qss[132] * sc[20] * x1304 +
          kf_qss[16] * refCinv * sc[1] * x10 * exp(g_RT[1] - x163) +
          1.5 * kf_qss[16] * x1288 + kf_qss[23] * sc[0] * x1291 +
          kf_qss[24] * sc[4] * x1275 + kf_qss[26] * sc[5] * x1272 +
          kf_qss[27] * sc[6] * exp(-x102 - x163) + kf_qss[60] * sc[9] * x1268 +
          kf_qss[94] * sc[14] * x1170 + 2025000000000.0 * x1278 * x1281 -
          2.73375e+24 * x1278 * x801 *
            exp(-1434.1674975434501 * invT - 5.14 * tc[0] + x1280) +
          3.3e+36 * x1299 * x525 - 7.26e+72 * x1569 * x819 -
          x521 * (3.0 * x516 * x693 + 0.42 * x693 * x809) -
          x558 * (3.0 * x553 * x693 + 0.42 * x693 * x796)) /
           x569;
  x801 = -x1229 * x2127 * x642 - x1410 * x2168 * x725 + x1440 * x2176 -
         x1444 * x2245 - x1535 * x965 - x1537 * x965 + x1580 * x965 +
         x2179 * x476 - x2278 * x784 + x2283 * x725 - x397 * x602 +
         x642 * x703 + x921 * x965 -
         (kf_qss[39] * sc[0] * x1428 + kf_qss[43] * sc[1] * x1426 * x2279 +
          kf_qss[44] * sc[5] * x1420 + kf_qss[48] * sc[12] * x1417) /
           x465;
  x1489 = x1149 * x282 - x1229 * x2127 * x316 - x1444 * x2267 - x1445 * x2266 -
          x1482 * x2268 + x1590 * x2246 + x2177 * x318 + x2179 * x646 -
          x282 * x315 + x316 * x703 - x319 * x864 - x397 * x647 - x650 * x801 -
          (4800000000000000.0 * sc[8] * x1118 * x276 - 1.085415e+43 * x1018 -
           1.536e+31 * x1030 * x1594 + 4.035e+21 * x1105 * x1599 -
           x272 * (0.42 * x1025 * x693 + 3.0 * x267 * x693) -
           x292 * (0.42 * x1013 * x693 + 3.0 * x287 * x693)) /
            x313;
  x946 =
    (-x1008 * x801 + x1047 * x2269 - x1064 * x1489 - x1443 * x2259 -
     x1444 * x544 + x1445 * x2250 * x991 + x1468 * x2250 + x1481 * x2246 -
     x1482 * x2253 + x2177 * x961 + x2179 * x963 - x397 * x995 - x864 * x990 -
     (kf_qss[17] * sc[1] * x1446 + kf_qss[75] * sc[13] * x1462 +
      4.035e+16 * refC * sc[16] * x1457 * x955 - 1.085415e+33 * x1478 * x982 -
      x951 * (3.0 * x693 * x946 / ((x948) * (x948)) + 0.42 * x693 * x971)) /
       x958) /
    x1470;
  x948 = -kf_qss[22] + x984;
  x984 = x1652 * x707 + x858 * x903 + x896 * x900 + x896 * x906;
  x991 = x858 * x914 + x896 * x912 - x896 * x913;
  x965 = -x948 * x987 + x948 * x992 + x984 * x989 - x990 * x991;
  x2171 = x755 * x759 + x774 * x777;
  x165 = x2171 * x929 + x755 * x930 - x823 * x927 + x823 * x931;
  x2245 = x174 * x572 * x858 / ((x229) * (x229)) - x823 * x917 + x823 * x919;
  x2250 = x2171 * x791 - x2245 * x922 - x575 * x991 + x755 * x794 +
          x823 * x827 + x823 * x829 + x911 * x984 +
          x482 * x572 * x858 / ((x229) * (x229));
  x544 = -x165 * x995 + x2250 * x997 - x790 * x965 - x948 * x994;
  x2253 = -kf_qss[47] - kf_qss[48];
  x2259 = x2171 * x783 - x2253 * x730 + x2253 * x788 + x755 * x786;
  x282 = kf_qss[22] / x569 + x1002 * x984 + x1004 * x896 - x2245 * x683 -
         x584 * x823;
  x2266 = -x1000 * x2253 + x1006 * x2250 - x2259 * x587 - x282 * x602;
  x2267 = -x165 * x602 + x2171 * x933 + x2250 * x926 + x2253 * x688 +
          x2253 * x729 + x2253 * x936 - x2259 * x790 +
          x639 * x642 * x707 / ((x65) * (x65)) + x722 * x726 + x755 * x934;
  x1036 = -kf_qss[47] * x253 - kf_qss[82] * x238 -
          kf_qss[83] * exp(g_RT[11] - g_RT[17] - x244) + x1036;
  x2268 = -x1036 * x1043 + x1036 * x1045 + x1674 * x707;
  amrex::Real x2314 =
    -x1036 * x1042 + x1041 * x984 - x2268 * x922 - x319 * x991;
  amrex::Real x2315 = kf_qss[47] / x313 + x1036 * x1051 - x1036 * x1052 +
                      x1053 * x2250 - x165 * x647 - x2314 * x790 +
                      x316 * x639 * x707 / ((x65) * (x65));
  amrex::Real x2316 = -x1036 * x1039 + x1050 * x2250 + x1056 * x2267 +
                      x1057 * x896 + x1058 * x984 - x2266 * x650 -
                      x2268 * x683 - x2314 * x587 - x2315 * x999 - x282 * x647;
  amrex::Real x2317 = -kf_qss[82] * x173 * x238 / x65 - x1067 * x896 +
                      x1068 * x896 + x1684 * x707;
  amrex::Real x2318 =
    -x1062 * x2245 + x1072 * x984 - x1073 * x823 - x2317 * x575;
  x1687 = kf_qss[47] * x253 / x465 - kf_qss[82] * x238 * x642 / x65 +
          x1075 * x2253 + x1078 * x2250 + x1687 * x707 - x2253 * x671 -
          x2259 * x669 - x2318 * x602;
  amrex::Real x2321 = -kf_qss[82] * x238 * x316 / x65 + x1036 * x1086 -
                      x1060 * x2315 - x1062 * x2268 + x1085 * x2250 +
                      x1087 * x984 + x1088 * x2267 + x1683 * x707 -
                      x1687 * x650 - x2314 * x669 - x2317 * x319 - x2318 * x647;
  amrex::Real x2322 = -x1008 * x1687 - x1060 * x544 + x1065 * x984 +
                      x1066 * x948 - x1070 * x948 + x1071 * x2267 +
                      x1080 * x2250 - x2317 * x990 - x2318 * x995 - x669 * x965;
  const amrex::Real x2323 =
    x1471 * (-x1008 * x2266 + x1009 * x2250 + x1010 * x984 + x1011 * x948 -
             x1064 * x2316 - x1083 * x2322 + x1084 * x896 + x1092 * x2321 +
             x2267 * x968 - x282 * x995 - x544 * x999 - x587 * x965);
  x1548 = -x1339 * x444 * x774 + x1385 * x755 - x1548 / x441 +
          x1554 * x444 / x374 - x1559 * x755;
  x1501 = -x1229 * x173 * x707 - x1484 * x896 - x1485 * x896 - x1501 / x170 +
          x1515 * x896 + x1525 + x233 * x837 / x229;
  x823 = -x1265 * x572 * x858 + x1320 * x823 - x1445 * x2245 - x1501 * x575 +
         x1539 * x2171 - x1548 * x792 + x1563 * x823 - x1564 * x823 +
         x574 * x984 - (kf_qss[25] * sc[1] * x1294 + x1575) / x569 +
         x572 * x837 / x229;
  x1525 = -x1229 * x642 * x707 + x1440 * x2171 - x1444 * x2259 +
          x1533 * x725 / x634 - x1535 * x2253 - x1537 * x2253 - x1548 * x784 +
          x1580 * x2253 + x1584 + x2250 * x476 + x2253 * x921 - x602 * x823;
  x1129 = x1036 * x1149 - x1036 * x315 - x1229 * x316 * x707 - x1444 * x2314 -
          x1445 * x2268 - x1482 * x2315 - x1501 * x319 + x1522 * x316 -
          x1525 * x650 + x1590 * x2267 + x2250 * x646 + x318 * x984 -
          x647 * x823 - (((sc[1]) * (sc[1])) * x1129 + x1602) / x313;
  x1480 =
    (-x1008 * x1525 + x1047 * x2321 - x1064 * x1129 - x1443 * x2322 -
     x1444 * x965 + x1468 * x948 + x1480 + x1481 * x2267 - x1482 * x544 +
     x1483 * x948 - x1501 * x990 + x2250 * x963 - x823 * x995 + x961 * x984) /
    x1470;
  x1575 = -kf_qss[136] * x329 - kf_qss[139] * x2279 * x332 + x1048;
  x1584 = x1054 * x777 + x1575 * x759 -
          x444 * (kf_qss[136] * x329 + kf_qss[139] * x2279 * x332) / x374;
  x1602 = x1631 - x486;
  x948 = x1575 * x930 + x1584 * x929 - x1602 * x927 + x1602 * x931;
  x965 = -kf_qss[131] * x110 * x2279 + x83;
  x2245 = x1967 + x900 * x965 + x906 * x965;
  x544 = -x1602 * x917 + x1602 * x919 + x1638 * x1640;
  x486 = x1638 * x914 + x912 * x965 - x913 * x965 + x486 / x170;
  x2253 = x1575 * x794 + x1584 * x791 + x1602 * x827 + x1602 * x829 +
          x1638 * x1655 + x2245 * x911 - x486 * x575 - x544 * x922;
  x2259 = x1575 * x934 + x1584 * x933 + x2010 + x2253 * x926 - x602 * x948 -
          x790 * (x1575 * x786 + x1584 * x783);
  x1036 = -kf_qss[107] * exp(g_RT[12] - g_RT[14] - x244) + x1670;
  x2268 = -x1036 * x1043 + x1036 * x1045 + x2023;
  x2314 = -x1036 * x1042 + x1041 * x2245 - x2268 * x922 - x319 * x486;
  x2315 = x1002 * x2245 + x1004 * x965 - x1602 * x584 - x544 * x683;
  x2322 = x1006 * x2253 - x2315 * x602 - x587 * (x1575 * x786 + x1584 * x783);
  amrex::Real x2350 = x1036 * x1051 - x1036 * x1052 + x1053 * x2253 + x2027 -
                      x2314 * x790 - x647 * x948;
  amrex::Real x2351 = -x1036 * x1039 + x1050 * x2253 + x1056 * x2259 +
                      x1057 * x965 + x1058 * x2245 - x2268 * x683 -
                      x2314 * x587 - x2315 * x647 - x2322 * x650 - x2350 * x999;
  amrex::Real x2352 = -kf_qss[54] + x1663;
  amrex::Real x2353 = x2245 * x989 - x2352 * x987 + x2352 * x992 - x486 * x990;
  amrex::Real x2354 = x2253 * x997 - x2352 * x994 - x2353 * x790 - x948 * x995;
  amrex::Real x2355 = -x1067 * x965 + x1068 * x965 + x2016;
  amrex::Real x2356 =
    -x1062 * x544 + x1072 * x2245 - x1073 * x1602 - x2355 * x575;
  amrex::Real x2357 =
    x1078 * x2253 + x2018 - x2356 * x602 - x669 * (x1575 * x786 + x1584 * x783);
  amrex::Real x2358 = -x1008 * x2357 - x1060 * x2354 + x1065 * x2245 +
                      x1066 * x2352 - x1070 * x2352 + x1071 * x2259 +
                      x1080 * x2253 - x2353 * x669 - x2355 * x990 -
                      x2356 * x995;
  amrex::Real x2359 = x1036 * x1086 - x1060 * x2350 - x1062 * x2268 +
                      x1085 * x2253 + x1087 * x2245 + x1088 * x2259 + x2030 -
                      x2314 * x669 - x2355 * x319 - x2356 * x647 - x2357 * x650;
  const amrex::Real x2360 =
    x1471 * (-x1008 * x2322 + x1009 * x2253 + x1010 * x2245 + x1011 * x2352 -
             x1064 * x2351 - x1083 * x2358 + x1084 * x965 + x1092 * x2359 +
             x2259 * x968 - x2315 * x995 - x2353 * x587 - x2354 * x999);
  amrex::Real x2363 =
    x1385 * x1575 - x1559 * x1575 + x1779 + x2091 -
    (kf_qss[117] * sc[8] * x1374 + kf_qss[122] * sc[4] * x1238 * x1343 + x731) /
      x441;
  amrex::Real x2364 = -x1484 * x965 - x1485 * x965 + x1515 * x965 + x2094 +
                      x233 * (kf_qss[103] * x1249 * x1251 + x1636) / x229;
  x1602 = x1320 * x1602 - x1445 * x544 + x1539 * x1584 + x1563 * x1602 -
          x1564 * x1602 + x2040 + x2245 * x574 - x2363 * x792 - x2364 * x575 -
          (kf_qss[49] * sc[1] + kf_qss[50] * sc[2] + kf_qss[51] * sc[4] +
           kf_qss[52] * sc[3] + kf_qss[53] * sc[6] + kf_qss[61] * sc[8] +
           1350000000000.0 * x1281 * x843 + x1719) /
            x569 +
          x572 * (kf_qss[103] * x1249 * x1251 + x1636) / x229;
  x544 = (kf_qss[65] * sc[0] * x1404 + kf_qss[68] * sc[4] * x1401 +
          kf_qss[69] * sc[5] * x1398 + sc[1] * x10 * x609 * x624 +
          sc[6] * x1408 + x1641) /
         x634;
  amrex::Real x2369 =
    x1440 * x1584 - x1444 * (x1575 * x786 + x1584 * x783) - x1602 * x602 +
    x1782 + x2008 + x2253 * x476 - x2363 * x784 + x544 * x725 -
    (kf_qss[41] * sc[1] * x1412 + kf_qss[48] * sc[10] * x1417) / x465;
  x1036 =
    x1036 * x1149 - x1036 * x315 - x1444 * x2314 - x1445 * x2268 -
    x1482 * x2350 + x1590 * x2259 - x1602 * x647 + x1700 * x316 / x65 + x2050 +
    x2245 * x318 + x2253 * x646 - x2364 * x319 - x2369 * x650 -
    (kf_qss[32] * sc[1] * x1097 + kf_qss[34] * sc[4] * x1094 + x1729) / x313;
  x1453 = (-x1008 * x2369 - x1036 * x1064 + x1047 * x2359 - x1443 * x2358 -
           x1444 * x2353 + x1468 * x2352 + x1481 * x2259 - x1482 * x2354 +
           x1483 * x2352 - x1602 * x995 + x2245 * x961 + x2253 * x963 -
           x2364 * x990 - (sc[1] * x1453 + x1694) / x958) /
          x1470;
  x562 = -3.0 * kf_qss[16] - 4050000000000.0 * sc[1] * x562 * exp(x546) -
         6.6e+36 * x525 * x821 +
         x800 * (6.0 * x553 * x693 + 0.84 * x693 * x796) + 5.4675e+24 * x804 +
         x815 * (6.0 * x516 * x693 + 0.84 * x693 * x809) +
         1.452e+73 * x818 * x819;
  x800 = -kf_qss[78] + x562;
  x418 = -5.97e+29 * sc[1] * x437 * exp(x421) - 3.6e+30 * x418 +
         1.18803e+59 * x734 + x742 * (6.0 * x407 * x693 + 0.84 * x693 * x736) +
         4.32e+60 * x743 * x746 +
         x752 * (6.0 * x428 * x693 + 0.84 * x693 * x748);
  x437 = x1054 * x777 + x418 * x759;
  x734 = x418 * x930 + x437 * x929 - x800 * x927 + x800 * x931;
  x742 = x418 * x786 + x437 * x783;
  x746 = -1.14e+30 * refC * x220 * exp(x203 + x204) - 1.56e+28 * x192 * x851 +
         x839 * (6.0 * x183 + 0.84 * x1937) + 4.332e+59 * x840 * x844 +
         x850 * (0.84 * x211 * x693 + 6.0 * x693 * x846) +
         8.112e+55 * x855 * x856;
  x752 = x1640 * x746 - x800 * x917 + x800 * x919;
  x97 =
    (-4.2e+18 * sc[1] * x129 * exp(x113) +
     5.88e+36 * sc[1] * x882 * exp(-3341.3586609433401 * invT - 7.72 * tc[0]) -
     1.281e+47 * x150 * x868 +
     x867 * (6.0 * x141 * x693 / ((x143) * (x143)) + 0.84 * x862) +
     x875 * (6.0 * x120 * x693 + 0.84 * x693 * x871) +
     5.46987e+93 * x877 * x878 +
     x891 * (0.84 * x693 * x887 + 6.0 * x693 * x89) + 1.9737675e+43 * x895 -
     7.695e+21 * x97 * exp(x81)) /
    ((x170) * (x170));
  x129 = x232 * x483 * x97 - x489 * x97 + x746 * x914;
  x36 = -2.1e+45 * x2 * x36 + x701 * (6.0 * x25 * x693 + 0.84 * x693 * x696) +
        1.47e+90 * x706;
  x489 = x36 - 6125000000.0 * x63 + 1.500625e+19 * x692;
  x701 = x1652 * x489 + x172 * x67 * x97 + x231 * x232 * x97 + x746 * x903;
  x706 = x1655 * x746 + x418 * x794 + x437 * x791 -
         x575 * (kf_qss[78] / x170 + x129) + x701 * x911 - x752 * x922 +
         x800 * x827 + x800 * x829;
  x626 = -6.6e+18 * x626 + x716 * (6.0 * x615 * x693 + 0.84 * x693 * x712) +
         1.452e+37 * x718 * x720;
  x716 = x418 * x934 + x437 * x933 + x489 * x639 * x642 / ((x65) * (x65)) -
         x602 * x734 + x626 * x726 + x706 * x926 - x742 * x790;
  x296 = -8.07e+21 * sc[10] * x296 * exp(x280) +
         x1017 * (0.84 * x1013 * x693 + 6.0 * x287 * x693) +
         x1029 * (0.84 * x1025 * x693 + 6.0 * x267 * x693) + 3.072e+31 * x1034 -
         9600000000000000.0 * x1035 + 2.17083e+43 * x1668;
  x720 = x1002 * x701 + x321 * x575 * x97 - x584 * x800 - x683 * x752;
  x804 = -x1043 * x296 + x1045 * x296 + x1674 * x489;
  x815 = x1041 * x701 - x1042 * x296 - x319 * (kf_qss[78] / x170 + x129) -
         x804 * x922;
  x839 = x1051 * x296 - x1052 * x296 + x1053 * x706 + x1677 * x489 -
         x647 * x734 - x790 * x815;
  x844 = x1006 * x706 - x587 * x742 - x602 * x720;
  x850 = -x1039 * x296 + x1050 * x706 + x1056 * x716 + x1058 * x701 +
         x319 * x321 * x97 - x587 * x815 - x647 * x720 - x650 * x844 -
         x683 * x804 - x839 * x999;
  x867 = -8.07e+16 * x955 * x977 +
         x976 * (0.84 * x693 * x971 + 6.0 * x693 * x973) +
         2.17083e+33 * x981 * x982;
  x875 =
    x701 * x989 - x867 * x987 + x867 * x992 - x990 * (kf_qss[78] / x170 + x129);
  x891 = x706 * x997 - x734 * x995 - x790 * x875 - x867 * x994;
  x895 = x1684 * x489 + x172 * x660 * x97 - x662 * x97;
  x976 = -x1062 * x752 + x1072 * x701 - x1073 * x800 - x575 * x895;
  x1017 = x1078 * x706 + x489 * x642 * x659 / ((x65) * (x65)) - x602 * x976 -
          x669 * x742;
  x1029 = -x1017 * x650 - x1060 * x839 - x1062 * x804 + x1085 * x706 +
          x1086 * x296 + x1087 * x701 + x1088 * x716 + x1683 * x489 -
          x319 * x895 - x647 * x976 - x669 * x815;
  x1034 = -x1008 * x1017 - x1060 * x891 + x1065 * x701 + x1066 * x867 -
          x1070 * x867 + x1071 * x716 + x1080 * x706 - x669 * x875 -
          x895 * x990 - x976 * x995;
  x1035 =
    x1471 * (-x1008 * x844 + x1009 * x706 + x1010 * x701 + x1011 * x867 +
             x1029 * x1092 - x1034 * x1083 - x1064 * x850 + x321 * x97 * x990 -
             x587 * x875 + x716 * x968 - x720 * x995 - x891 * x999);
  x971 = 8.07e+16 * refC * sc[16] * x1457 * x955 - 2.17083e+33 * x1478 * x982 -
         x951 * (0.84 * x693 * x971 + 6.0 * x693 * x973);
  x696 = 2.1e+45 * sc[14] * x35 * exp(x16) - 1.47e+90 * x1519 -
         x31 * (6.0 * x25 * x693 + 0.84 * x693 * x696);
  x61 = (kf_qss[79] * sc[1] * x1223 + 6125000000.0 * x1221 -
         1.500625e+19 * x1521 + 2450000000.0 * x55 * exp(x57) / x61 + x696) /
        x65;
  x25 = 5.97e+29 * x1355 * x1360 - 1.18803e+59 * x1543 + 3.6e+30 * x1545 -
        4.32e+60 * x1547 * x743 -
        x412 * (6.0 * x407 * x693 + 0.84 * x693 * x736) -
        x433 * (6.0 * x428 * x693 + 0.84 * x693 * x748);
  x736 = x1385 * x418 - x1559 * x418 + x1779 + x2091 - x25 / x441;
  x407 = 3.0 * kf_qss[16] * x1288 + 4050000000000.0 * x1278 * x1281 +
         6.6e+36 * x1299 * x525 - 1.452e+73 * x1569 * x819 -
         5.4675e+24 * x1572 - x521 * (6.0 * x516 * x693 + 0.84 * x693 * x809) -
         x558 * (6.0 * x553 * x693 + 0.84 * x693 * x796);
  x141 = 7.695e+21 * x1178 * x1181 + 4.2e+18 * x1185 * x1487 -
         x125 * (6.0 * x120 * x693 + 0.84 * x693 * x871) -
         x146 * (6.0 * x141 * x693 / ((x143) * (x143)) + 0.84 * x862) -
         5.88e+36 * x1487 * x882 *
           exp(-3341.3586609433401 * invT - 7.72 * tc[0] + x1184) -
         5.46987e+93 * x1495 * x878 + 1.281e+47 * x1499 * x150 -
         1.9737675e+43 * x894 - x94 * (0.84 * x693 * x887 + 6.0 * x693 * x89);
  x143 =
    (1.56e+28 * x1259 * x192 - 8.112e+55 * x1504 * x856 + 1.14e+30 * x1507 -
     4.332e+59 * x1510 * x840 - x188 * (6.0 * x183 + 0.84 * x1937) -
     x216 * (0.84 * x211 * x693 + 6.0 * x693 * x846)) /
    x229;
  x743 = x1215 * x97 - x1230 * x172 * x97 - x1265 * x233 * x746 -
         x1266 * x232 * x97 + x143 * x233;
  x748 = -x1229 * x173 * x489 + x173 * x61 + x743 -
         (kf_qss[84] * sc[0] * x1174 + kf_qss[88] * sc[5] * x1200 +
          kf_qss[95] * sc[9] * x1195 +
          2.565e+21 * refCinv * sc[1] * x10 * x1181 + sc[6] * x1205 + x141) /
           x170;
  x428 = -x1265 * x572 * x746 + x143 * x572;
  x796 = x1320 * x800 - x1445 * x752 + x1539 * x437 + x1563 * x800 -
         x1564 * x800 - x407 / x569 + x428 + x574 * x701 - x575 * x748 -
         x736 * x792;
  x712 = (6.6e+18 * x1530 - 1.452e+37 * x1531 * x718 -
          x620 * (6.0 * x615 * x693 + 0.84 * x693 * x712)) /
         x634;
  x615 =
    -x1229 * x489 * x642 - x1410 * x626 * x725 + x1440 * x437 + x712 * x725;
  x718 =
    -x1444 * x742 + x476 * x706 - x602 * x796 + x61 * x642 + x615 - x736 * x784;
  x276 = 9600000000000000.0 * sc[8] * x1118 * x276 - 2.17083e+43 * x1018 -
         3.072e+31 * x1030 * x1594 + 8.07e+21 * x1105 * x1599 -
         x272 * (0.84 * x1025 * x693 + 6.0 * x267 * x693) -
         x292 * (0.84 * x1013 * x693 + 6.0 * x287 * x693);
  x553 = x1149 * x296 - x1229 * x316 * x489 - x1444 * x815 - x1445 * x804 -
         x1482 * x839 + x1590 * x716 - x296 * x315 + x316 * x61 + x318 * x701 -
         x319 * x748 + x646 * x706 - x647 * x796 - x650 * x718 -
         (kf_qss[35] * sc[1] * x1145 + 2.0 * kf_qss[36] * sc[0] * x1134 +
          kf_qss[77] * sc[2] + x276) /
           x313;
  x809 =
    (-x1008 * x718 + x1029 * x1047 - x1034 * x1443 - x1064 * x553 -
     x1444 * x875 + x1468 * x867 + x1481 * x716 - x1482 * x891 + x1483 * x867 +
     x701 * x961 + x706 * x963 - x748 * x990 - x796 * x995 -
     (kf_qss[35] * sc[1] * x1145 + kf_qss[75] * sc[10] * x1462 + x971) / x958) /
    x1470;
  x516 = -kf_qss[112] - kf_qss[113];
  x819 = -kf_qss[110] * x446 * x467 / (x441 * x465) - x516 * x730 +
         x516 * x788 + x742;
  x840 = -kf_qss[110] + x562;
  x846 = x418 * x930 + x437 * x929 - x840 * x927 + x840 * x931;
  x211 = x1640 * x746 - x840 * x917 + x840 * x919;
  x856 = -kf_qss[110] * x446 * x576 / (x441 * x569) - x129 * x575 +
         x1655 * x746 - x211 * x922 + x418 * x794 + x437 * x791 + x701 * x911 +
         x827 * x840 + x829 * x840;
  x862 = -kf_qss[112] * x642 / x65 + x418 * x934 + x437 * x933 +
         x489 * x639 * x642 / ((x65) * (x65)) + x516 * x688 + x516 * x729 +
         x516 * x936 - x602 * x846 + x626 * x726 - x790 * x819 + x856 * x926;
  x871 = -x129 * x990 + x701 * x989 - x867 * x987 + x867 * x992;
  x120 = -x790 * x871 - x846 * x995 + x856 * x997 - x867 * x994;
  x878 = -x1062 * x211 + x1072 * x701 - x1073 * x840 - x575 * x895;
  x882 = x1075 * x516 + x1078 * x856 + x489 * x642 * x659 / ((x65) * (x65)) -
         x516 * x671 - x602 * x878 - x669 * x819;
  x887 = -x1008 * x882 - x1060 * x120 + x1065 * x701 + x1066 * x867 -
         x1070 * x867 + x1071 * x862 + x1080 * x856 - x669 * x871 -
         x878 * x995 - x895 * x990;
  x89 = -kf_qss[111] + x296;
  x973 = -x1043 * x89 + x1045 * x89 + x1674 * x489;
  x982 = x1041 * x701 - x1042 * x89 - x129 * x319 - x922 * x973;
  x1013 = -kf_qss[112] * x316 / x65 + x1051 * x89 - x1052 * x89 + x1053 * x856 +
          x1677 * x489 - x647 * x846 - x790 * x982;
  x287 = -x1013 * x1060 - x1062 * x973 + x1085 * x856 + x1086 * x89 +
         x1087 * x701 + x1088 * x862 + x1683 * x489 - x319 * x895 -
         x647 * x878 - x650 * x882 - x669 * x982;
  x1025 = x1002 * x701 - x211 * x683 + x321 * x575 * x97 - x584 * x840;
  x267 = -x1000 * x516 + x1006 * x856 - x1025 * x602 - x587 * x819;
  x1030 = -x1013 * x999 - x1025 * x647 - x1039 * x89 + x1050 * x856 +
          x1056 * x862 + x1058 * x701 - x267 * x650 + x319 * x321 * x97 -
          x587 * x982 - x683 * x973;
  x1118 = x1471 * (-x1008 * x267 + x1009 * x856 + x1010 * x701 + x1011 * x867 -
                   x1025 * x995 - x1030 * x1064 - x1083 * x887 + x1092 * x287 -
                   x120 * x999 + x321 * x97 * x990 - x587 * x871 + x862 * x968);
  x402 = x1385 * x418 - x1559 * x418 + x2091 -
         (kf_qss[116] * sc[0] * x1363 + kf_qss[119] * sc[6] * x1348 +
          kf_qss[121] * sc[7] * x1381 + sc[1] * x10 * x402 * x416 + x25) /
           x441 +
         x444 * (kf_qss[115] * sc[8] + x1716) / x374;
  x19 = (x10 * x19 * x35 + 6125000000.0 * x1221 - 1.500625e+19 * x1521 + x696) /
        x65;
  x35 =
    -x1229 * x173 * x489 + x173 * x19 + x743 -
    (kf_qss[104] * sc[1] + kf_qss[105] * sc[2] + kf_qss[108] * sc[4] +
     kf_qss[109] * sc[3] + kf_qss[114] * sc[8] + kf_qss[94] * sc[10] * x1170 +
     sc[6] * x1212 + 1.4e+18 * x1185 * x843 + x141) /
      x170;
  x416 = x1320 * x840 - x1445 * x211 + x1539 * x437 + x1563 * x840 -
         x1564 * x840 - x35 * x575 - x402 * x792 + x428 + x574 * x701 -
         (kf_qss[106] * sc[2] + kf_qss[94] * sc[10] * x1170 + x407) / x569;
  x1181 = -sc[1] * x1433 / x465 - x1444 * x819 - x1535 * x516 - x1537 * x516 +
          x1580 * x516 + x19 * x642 - x402 * x784 - x416 * x602 + x476 * x856 +
          x516 * x921 + x615;
  x1185 = -x1013 * x1482 + x1149 * x89 - x1181 * x650 - x1229 * x316 * x489 -
          x1444 * x982 - x1445 * x973 + x1590 * x862 + x19 * x316 - x315 * x89 +
          x318 * x701 - x319 * x35 - x416 * x647 + x646 * x856 -
          (kf_qss[107] * sc[2] + kf_qss[62] * sc[1] * x1112 + x276) / x313;
  x1205 = (-x1008 * x1181 + x1047 * x287 - x1064 * x1185 - x120 * x1482 -
           x1443 * x887 - x1444 * x871 + x1468 * x867 + x1481 * x862 +
           x1483 * x867 - x35 * x990 - x416 * x995 + x701 * x961 + x856 * x963 -
           (kf_qss[71] * sc[1] * x1449 + x971) / x958) /
          x1470;
  x63 = x36 - 7350000000.0 * x63 + 1.80075e+19 * x692;
  x232 = x1652 * x63 + x172 * x67 * x97 + x231 * x232 * x97 + x746 * x903;
  x692 = -x129 * x990 + x232 * x989 - x867 * x987 + x867 * x992;
  x903 = x1640 * x746 - x562 * x917 + x562 * x919;
  x1212 = x1002 * x232 + x321 * x575 * x97 - x562 * x584 - x683 * x903;
  x766 = -1.878e+27 * x362 * x367 + x766 * (0.84 * x353 + 6.0 * x762) +
         1.175628e+54 * x773;
  x759 = x418 * x759 + x766 * x777;
  x773 = -x129 * x575 + x1655 * x746 + x232 * x911 + x418 * x794 + x562 * x827 +
         x562 * x829 + x759 * x791 - x903 * x922;
  x786 = kf_qss[128] * x730 - kf_qss[128] * x788 + x418 * x786 + x759 * x783;
  x794 = kf_qss[128] * x1000 + x1006 * x773 - x1212 * x602 - x587 * x786;
  x930 = -kf_qss[128] * x446 * x576 / (x441 * x569) + x418 * x930 -
         x562 * x927 + x562 * x931 + x759 * x929;
  x726 = -kf_qss[128] * x688 - kf_qss[128] * x729 - kf_qss[128] * x936 -
         kf_qss[128] * x446 * x467 / (x441 * x465) + x1658 * x63 + x418 * x934 -
         x602 * x930 + x626 * x726 + x759 * x933 + x773 * x926 - x786 * x790;
  x934 = -x692 * x790 + x773 * x997 - x867 * x994 - x930 * x995;
  x172 = x1684 * x63 + x172 * x660 * x97 - x662 * x97;
  x662 = -x1062 * x903 + x1072 * x232 - x1073 * x562 - x172 * x575;
  x1215 = -kf_qss[128] * x1075 + kf_qss[128] * x671 + x1078 * x773 -
          x602 * x662 + x63 * x642 * x659 / ((x65) * (x65)) - x669 * x786;
  x1281 = -x1008 * x1215 - x1060 * x934 + x1065 * x232 + x1066 * x867 -
          x1070 * x867 + x1071 * x726 + x1080 * x773 - x172 * x990 -
          x662 * x995 - x669 * x692;
  x1288 = -x1043 * x296 + x1045 * x296 + x1674 * x63;
  x1433 = x1041 * x232 - x1042 * x296 - x1288 * x922 - x129 * x319;
  x951 = x1051 * x296 - x1052 * x296 + x1053 * x773 - x1433 * x790 +
         x1677 * x63 - x647 * x930;
  x125 = -x1060 * x951 - x1062 * x1288 + x1085 * x773 + x1086 * x296 +
         x1087 * x232 + x1088 * x726 - x1215 * x650 - x1433 * x669 -
         x172 * x319 + x316 * x63 * x659 / ((x65) * (x65)) - x647 * x662;
  x94 = -x1039 * x296 + x1050 * x773 + x1056 * x726 + x1058 * x232 -
        x1212 * x647 - x1288 * x683 - x1433 * x587 + x319 * x321 * x97 -
        x650 * x794 - x951 * x999;
  x894 = x1471 * (-x1008 * x794 + x1009 * x773 + x1010 * x232 + x1011 * x867 -
                  x1064 * x94 - x1083 * x1281 + x1092 * x125 - x1212 * x995 +
                  x321 * x97 * x990 - x587 * x692 + x726 * x968 - x934 * x999);
  x1221 = (7350000000.0 * x1221 - 1.80075e+19 * x1521 + x696) / x65;
  x146 = x1221 * x173 - x1229 * x173 * x63 - x141 / x170 + x743;
  x762 = (1.878e+27 * x1330 * exp(x346) - 1.175628e+54 * x1552 -
          x358 * (0.84 * x353 + 6.0 * x762)) /
         x374;
  x353 = -x1339 * x444 * x766 + x1385 * x418 - x1559 * x418 + x444 * x762 -
         (kf_qss[120] * sc[3] * x1368 + kf_qss[124] * sc[10] * x1316 +
          kf_qss[125] * sc[1] + kf_qss[126] * sc[2] + kf_qss[127] * sc[4] +
          kf_qss[129] * sc[8] + sc[6] * x1372 + 1.99e+29 * x1360 * x843 + x25) /
           x441;
  x1330 = x1320 * x562 - x1445 * x903 - x146 * x575 + x1539 * x759 +
          x1563 * x562 - x1564 * x562 + x232 * x574 - x353 * x792 + x428 -
          (kf_qss[124] * sc[10] * x1316 + x407) / x569;
  x1360 = kf_qss[128] * x1535 + kf_qss[128] * x1537 - kf_qss[128] * x1580 -
          kf_qss[128] * x921 + x1221 * x642 - x1229 * x63 * x642 -
          x1330 * x602 - x1410 * x626 * x725 + x1440 * x759 - x1444 * x786 -
          x353 * x784 + x476 * x773 + x712 * x725;
  x1372 = x1149 * x296 + x1221 * x316 - x1229 * x316 * x63 - x1288 * x1445 -
          x1330 * x647 - x1360 * x650 - x1433 * x1444 - x146 * x319 -
          x1482 * x951 + x1590 * x726 + x232 * x318 - x276 / x313 -
          x296 * x315 + x646 * x773;
  x216 =
    (-x1008 * x1360 + x1047 * x125 - x1064 * x1372 - x1281 * x1443 -
     x1330 * x995 - x1444 * x692 - x146 * x990 + x1468 * x867 + x1481 * x726 -
     x1482 * x934 + x1483 * x867 + x232 * x961 + x773 * x963 - x971 / x958) /
    x1470;
  x1507 = -x1631 * x917 + x1631 * x919 + x1638 * x1640;
  x900 = x1967 + x83 * x900 + x83 * x906;
  x906 = x1002 * x900 + x1004 * x83 - x1507 * x683 - x1631 * x584;
  x777 = x1048 * x376 * x443 / ((x441) * (x441)) + x1054 * x777;
  x912 = x1638 * x914 + x83 * x912 - x83 * x913;
  x791 = x1048 * x325 * x792 / ((x441) * (x441)) + x1638 * x1655 - x575 * x912 +
         x777 * x791 + x900 * x911;
  x911 = -x1507 * x922 + x1631 * x827 + x1631 * x829 + x791;
  x913 = -kf_qss[75] + x1663;
  x914 = x900 * x989 - x912 * x990;
  x987 = -x913 * x987 + x913 * x992 + x914;
  x989 = x1048 * x596 * x792 / ((x441) * (x441)) - x1631 * x927 + x1631 * x931 +
         x777 * x929;
  x992 = x911 * x997 - x989 * x995;
  x188 = -x790 * x987 - x913 * x994 + x992;
  x1510 = -kf_qss[76] + x1670;
  x1519 = -x1043 * x1510 + x1045 * x1510 + x2023;
  x1041 = x1041 * x900 - x319 * x912;
  x31 = x1041 - x1042 * x1510 - x1519 * x922;
  x1067 = -x1067 * x83 + x1068 * x83 + x2016;
  x1068 = -x1062 * x1507 + x1072 * x900 - x1073 * x1631 -
          x575 * (kf_qss[76] / x170 + x1067);
  x783 = x1048 * x325 * x784 / ((x441) * (x441)) + x777 * x783;
  x1521 = -x1068 * x602 + x1078 * x911 + x2018 - x669 * x783;
  x620 = x1053 * x911 - x647 * x989;
  x1530 = x1051 * x1510 - x1052 * x1510 + x2027 - x31 * x790 + x620;
  x933 = x1048 * x596 * x784 / ((x441) * (x441)) + x2010 + x777 * x933;
  x1531 = -x602 * x989 - x783 * x790 + x911 * x926 + x933;
  x433 = -x1060 * x1530 - x1062 * x1519 - x1068 * x647 + x1085 * x911 +
         x1086 * x1510 + x1087 * x900 + x1088 * x1531 - x1521 * x650 + x2030 -
         x31 * x669 - x319 * (kf_qss[76] / x170 + x1067);
  x1543 = x1006 * x911 - x587 * x783 - x602 * x906;
  x412 = x1050 * x911 + x1057 * x83 + x1058 * x900 - x647 * x906;
  x1545 = -x1039 * x1510 + x1056 * x1531 - x1519 * x683 - x1530 * x999 -
          x1543 * x650 - x31 * x587 + x412;
  x1066 = -x1008 * x1521 - x1060 * x188 + x1065 * x900 + x1066 * x913 -
          x1068 * x995 - x1070 * x913 + x1071 * x1531 + x1080 * x911 -
          x669 * x987 - x990 * (kf_qss[76] / x170 + x1067);
  x1070 = x1471 * (-x1008 * x1543 + x1009 * x911 + x1010 * x900 + x1011 * x913 -
                   x1064 * x1545 - x1066 * x1083 + x1084 * x83 + x1092 * x433 +
                   x1531 * x968 - x188 * x999 - x587 * x987 - x906 * x995);
  x1484 = -x1484 * x83 - x1485 * x83 + x1515 * x83;
  x1485 = x1539 * x777 + x1636 * x572 / x229 + x2040 + x574 * x900;
  x1515 = x1320 * x1631 - x1445 * x1507 + x1563 * x1631 - x1564 * x1631;
  x1547 =
    -x1048 * x1340 * x443 / ((x441) * (x441)) + x1048 * x1385 + x1779 + x2091;
  x576 = -x1719 / x569 - x446 * x576 * (x1547 - x731 / x441) / x569;
  x358 = x1485 + x1515 - x575 * (x1484 + x1788 + x2094) + x576;
  x467 = -x446 * x467 * (x1547 - x731 / x441) / x465;
  x1552 = x1440 * x777 - x1444 * x783 + x1641 * x725 / x634 + x2008;
  x1559 = -kf_qss[74] * sc[1] / x465 + x1552 + x1782 - x358 * x602 + x467 +
          x476 * x911;
  x521 =
    x1815 + x2050 + x318 * x900 - x319 * (x1484 + x1788 + x2094) - x358 * x647;
  x1572 = x1149 * x1510 - x1444 * x31 - x1445 * x1519 - x1482 * x1530 -
          x1510 * x315 + x1531 * x1590 - x1559 * x650 + x521 + x646 * x911;
  x558 =
    -x358 * x995 + x900 * x961 + x911 * x963 - x990 * (x1484 + x1788 + x2094);
  x955 =
    (-x1008 * x1559 + x1047 * x433 - x1064 * x1572 - x1066 * x1443 -
     x1444 * x987 + x1468 * x913 + x1481 * x1531 - x1482 * x188 + x1483 * x913 +
     x558 - (2.69e+16 * x1457 * x843 * x955 + x1694) / x958) /
    x1470;
  x1468 = x1051 * x1670 - x1052 * x1670 + x2027 - x790 * (x1041 + x2074);
  x1483 = x1056 * x1531 - x1543 * x650 + x2084 + x412 - x587 * (x1041 + x2074) -
          x999 * (x1468 + x620);
  x272 = -x1062 * x1507 - x1067 * x575 + x1072 * x900 - x1073 * x1631;
  x1594 = x1078 * x911 + x2018 - x272 * x602 - x669 * x783;
  x994 = -x1663 * x994 - x790 * (x1664 + x914);
  x1065 = x1065 * x900 - x1067 * x990 + x1690 - x669 * (x1664 + x914);
  x292 = -x1008 * x1594 - x1060 * (x992 + x994) + x1065 + x1071 * x1531 +
         x1080 * x911 - x272 * x995;
  x1652 = -x1062 * x2073 - x1067 * x319 + x1086 * x1670 + x1087 * x900 + x2030 -
          x669 * (x1041 + x2074);
  x1655 = -x1060 * (x1468 + x620) + x1085 * x911 + x1088 * x1531 -
          x1594 * x650 + x1652 - x272 * x647;
  x1658 = x1009 * x911 + x1010 * x900 + x1011 * x1663 + x1084 * x83 -
          x587 * (x1664 + x914) - x906 * x995 - x999 * (x992 + x994);
  x1668 = x1471 * (-x1008 * x1543 - x1064 * x1483 - x1083 * x292 +
                   x1092 * x1655 + x1531 * x968 + x1658);
  x1674 = (kf_qss[81] * sc[1] * x1217 + x1700) / x65;
  x1233 = (kf_qss[102] * sc[6] * x1235 + sc[0] * x1243 + sc[1] * x207 * x220 +
           sc[4] * x1233 + sc[5] * x1263 + x1636) /
          x229;
  x1263 = x1233 * x233 + x1484 + x1674 * x173 + x2042 -
          (kf_qss[86] * sc[1] * x1207 + x1707) / x170;
  x1677 = x1233 * x572 - x1263 * x575 + x1515 + x1539 * x777 + x2040 +
          x574 * x900 + x576;
  x1683 = x1552 + x1674 * x642 - x1677 * x602 + x467 + x476 * x911;
  x318 = x1149 * x1670 - x1444 * (x1041 + x2074) - x1445 * x2073 -
         x1670 * x315 + x2050 + x318 * x900;
  x1684 = -x1482 * (x1468 + x620) + x1531 * x1590 + x318 + x646 * x911;
  x1105 = -x1263 * x319 + x1674 * x316 - x1677 * x647 - x1683 * x650 + x1684 -
          (kf_qss[83] * sc[2] + 2.69e+21 * x1105 * x843 + x1729) / x313;
  x1690 =
    x1047 * x1655 - x1443 * x292 + x1481 * x1531 + x900 * x961 + x911 * x963;
  x958 = (-x1008 * x1683 - x1064 * x1105 - x1263 * x990 -
          x1444 * (x1664 + x914) - x1482 * (x992 + x994) + x1675 -
          x1677 * x995 + x1690 - (sc[1] * x1466 + x1694) / x958) /
         x1470;
  x192 = (5.2e+27 * x1257 * x192 * x843 + x1636) / x229;
  x1466 = x1547 - (kf_qss[118] * sc[1] * x1378 + x731) / x441;
  x525 = -x1466 * x792 + x1515 + x1539 * x777 + x192 * x572 + x2040 +
         x574 * x900 - x575 * (x1484 + x192 * x233 + x2094) -
         (2.2e+36 * x1298 * x525 * x843 + x1719) / x569;
  x572 = -x1466 * x784 + x1552 + x1782 + x476 * x911 - x525 * x602;
  x1539 = x1684 + x1815 - x319 * (x1484 + x192 * x233 + x2094) - x525 * x647 -
          x572 * x650;
  x574 = -x1444 * (x1664 + x914) - x1482 * (x992 + x994) + x1675 + x1741;
  x1694 = (-x1008 * x572 - x1064 * x1539 + x1690 - x525 * x995 + x574 -
           x990 * (x1484 + x192 * x233 + x2094)) /
          x1470;
  x1631 = -kf_qss[132] + x1631;
  x917 = -x1631 * x917 + x1631 * x919 + x1638 * x1640;
  x827 = x1631 * x827 + x1631 * x829 + x791 - x917 * x922;
  x829 = x1048 * x596 * x792 / ((x441) * (x441)) - x1631 * x927 + x1631 * x931 +
         x777 * x929;
  x919 = -x602 * x829 - x783 * x790 + x827 * x926 + x933;
  x927 = x1053 * x827 + x1468 - x647 * x829;
  x929 = x1002 * x900 + x1004 * x83 - x1631 * x584 - x683 * x917;
  x931 = x1006 * x827 - x587 * x783 - x602 * x929;
  x584 = x1050 * x827 + x1056 * x919 + x1057 * x83 + x1058 * x900 + x2084 -
         x587 * (x1041 + x2074) - x647 * x929 - x650 * x931 - x927 * x999;
  x997 = x827 * x997 - x829 * x995 + x994;
  x1002 = -x1062 * x917 - x1067 * x575 + x1072 * x900 - x1073 * x1631;
  x1004 = -x1002 * x602 + x1078 * x827 + x2018 - x669 * x783;
  x1050 = -x1002 * x647 - x1004 * x650 - x1060 * x927 + x1085 * x827 +
          x1088 * x919 + x1652;
  x1053 = -x1002 * x995 - x1004 * x1008 - x1060 * x997 + x1065 + x1071 * x919 +
          x1080 * x827;
  x1009 =
    x1471 * (-x1008 * x931 + x1009 * x827 + x1010 * x900 + x1011 * x1663 +
             x1050 * x1092 - x1053 * x1083 - x1064 * x584 + x1084 * x83 -
             x587 * (x1664 + x914) + x919 * x968 - x929 * x995 - x997 * x999);
  x1010 = x1547 - (sc[8] * x1161 + x731) / x441;
  x173 = x1484 + x173 * (kf_qss[130] * sc[1] + x1700) / x65 + x1788 + x2042 -
         (kf_qss[131] * sc[6] + sc[1] * x1167 + sc[8] * x1161 + x1707) / x170;
  x1011 = -x1010 * x792 + x1320 * x1631 - x1445 * x917 + x1485 + x1563 * x1631 -
          x1564 * x1631 - x1719 / x569 - x173 * x575;
  x642 = -kf_qss[113] * sc[1] * x1423 / x465 - x1010 * x784 - x1011 * x602 +
         x1552 + x476 * x827 + x642 * (kf_qss[130] * sc[1] + x1700) / x65;
  x316 = -x1011 * x647 - x1482 * x927 + x1590 * x919 - x173 * x319 +
         x316 * (kf_qss[130] * sc[1] + x1700) / x65 + x318 - x642 * x650 +
         x646 * x827 - (sc[1] * x1141 + x1729) / x313;
  x1057 = (-x1008 * x642 - x1011 * x995 + x1047 * x1050 - x1053 * x1443 -
           x1064 * x316 - x1444 * (x1664 + x914) + x1481 * x919 - x1482 * x997 +
           x1675 - x173 * x990 + x1741 + x827 * x963 + x900 * x961) /
          x1470;
  x1058 = (kf_qss[135] * sc[0] * x1336 + kf_qss[137] * sc[5] * x1323 +
           kf_qss[138] * sc[6] * x1326 + kf_qss[140] * sc[9] * x1333 +
           sc[1] * x348 * x362 * x9 + x1716) /
          x374;
  x443 = -x1048 * x1340 * x443 / ((x441) * (x441)) + x1048 * x1385 +
         x1058 * x444 + x2091 - x731 / x441;
  x150 = x1484 + x1787 + x1788 + x2042 -
         (4.27e+46 * x1154 * x150 * x843 + x1707) / x170;
  x444 = x1485 - x150 * x575 + x1515 - x443 * x792 -
         (kf_qss[132] * sc[10] * x1304 + x1719) / x569;
  x569 = x1552 + x1782 - x443 * x784 - x444 * x602 + x476 * x911;
  x575 = -x150 * x319 + x1684 + x1815 - x444 * x647 - x569 * x650;
  x784 =
    (-x1008 * x569 - x1064 * x575 - x150 * x990 + x1690 - x444 * x995 + x574) /
    x1470;
  x730 = kf_qss[37] * x730 - kf_qss[37] * x788 + x783;
  x788 = kf_qss[37] * x1000 + x1006 * x911 - x587 * x730 - x602 * x906;
  x792 = -kf_qss[37] * x253 + x1670;
  x990 = -x1043 * x792 + x1045 * x792 + x2023;
  x922 = x1041 - x1042 * x792 - x922 * x990;
  x313 = kf_qss[37] / x313 + x1051 * x792 - x1052 * x792 + x2027 + x620 -
         x790 * x922;
  x688 = -kf_qss[37] * x688 - kf_qss[37] * x729 - kf_qss[37] * x936 -
         x602 * x989 - x730 * x790 + x911 * x926 + x933;
  x587 = -x1039 * x792 + x1056 * x688 - x313 * x999 + x412 - x587 * x922 -
         x650 * x788 - x683 * x990;
  x253 = -kf_qss[37] * x1075 + kf_qss[37] * x253 / x465 + kf_qss[37] * x671 +
         x1078 * x911 + x2018 - x272 * x602 - x669 * x730;
  x465 = -x1008 * x253 - x1060 * (x992 + x994) + x1065 + x1071 * x688 +
         x1080 * x911 - x272 * x995;
  x319 = -x1060 * x313 - x1062 * x990 - x1067 * x319 + x1085 * x911 +
         x1086 * x792 + x1087 * x900 + x1088 * x688 + x2030 - x253 * x650 -
         x272 * x647 - x669 * x922;
  x647 = x1471 * (-x1008 * x788 - x1064 * x587 - x1083 * x465 + x1092 * x319 +
                  x1658 + x688 * x968);
  x602 = kf_qss[37] * x1535 + kf_qss[37] * x1537 - kf_qss[37] * x1580 -
         kf_qss[37] * x921 + x1440 * x777 - x1444 * x730 + x1641 * x725 / x634 +
         x1782 + x2008 - x358 * x602 + x467 + x476 * x911;
  x650 = x1149 * x792 - x1444 * x922 - x1445 * x990 - x1482 * x313 +
         x1590 * x688 - x315 * x792 + x521 - x602 * x650 + x646 * x911;
  x669 = (-x1008 * x602 + x1047 * x319 - x1064 * x650 - x1443 * x465 +
          x1481 * x688 + x558 + x574) /
         x1470;
  x725 = (-sc_qss[0] * x1059 + x1037) / x675;
  x729 = (-sc_qss[0] * x1082 + x1442) / ((x675) * (x675));
  x790 = x1089 * x729;
  x926 = (-sc_qss[0] * x1680 + x262) / x675;
  x936 = x1689 * x729;
  x968 = (-sc_qss[0] * x1770 + x1749) / x675;
  x995 = x1772 * x729;
  x999 = (-sc_qss[0] * x1828 + x1817) / x675;
  x1000 = x1836 * x729;
  x1006 = (-sc_qss[0] * x1885 + x1872) / x675;
  x1008 = x1886 * x729;
  x1039 = (-sc_qss[0] * x1962 + x1882) / x675;
  x1042 = x1971 * x729;
  x1043 = (-sc_qss[0] * x2029 + x2022) / x675;
  x1045 = x2031 * x729;
  x1051 = (-sc_qss[0] * x2085 + x2063) / x675;
  x1052 = x2083 * x729;
  x1056 = (-sc_qss[0] * x2139 + x1101) / x675;
  x1059 = x2132 * x729;
  x1060 = (-sc_qss[0] * x2180 + x641) / x675;
  x1062 = x2184 * x729;
  x1064 = (-sc_qss[0] * x2270 + x1489) / x675;
  x1071 = x2269 * x729;
  x1072 = (-sc_qss[0] * x2316 + x1129) / x675;
  x1073 = x2321 * x729;
  x1075 = (-sc_qss[0] * x2351 + x1036) / x675;
  x671 = x2359 * x729;
  x1078 = (-sc_qss[0] * x850 + x553) / x675;
  x1080 = x1029 * x729;
  x1083 = (-sc_qss[0] * x1030 + x1185) / x675;
  x1084 = x287 * x729;
  x1085 = (-sc_qss[0] * x94 + x1372) / x675;
  x1086 = x125 * x729;
  x1087 = (-sc_qss[0] * x1545 + x1572) / x675;
  x1088 = x433 * x729;
  x1089 = (-sc_qss[0] * x1483 + x1105) / x675;
  x1092 = x1655 * x729;
  x1141 = (-sc_qss[0] * x1483 + x1539) / x675;
  x1161 = (-sc_qss[0] * x584 + x316) / x675;
  x1167 = x1050 * x729;
  x1443 = (-sc_qss[0] * x1483 + x575) / x675;
  x1444 = (-sc_qss[0] * x587 + x650) / x675;
  x1445 = x319 * x729;
  x1007 = (-sc_qss[0] * x1007 - sc_qss[1] * x1079 + x789) / x643;
  x1079 = (-sc_qss[0] * x595 - sc_qss[1] * x674 + x1441) / ((x643) * (x643));
  x937 = x1079 * x937;
  x1471 = (-sc_qss[0] * x1679 - sc_qss[1] * x1688 + x1625) / x643;
  x1481 = x1079 * x1659;
  x1482 = (-sc_qss[0] * x1769 - sc_qss[1] * x1757 + x1676) / x643;
  x961 = x1079 * x1752;
  x1535 = (-sc_qss[0] * x1823 - sc_qss[1] * x1835 + x1764) / x643;
  x1537 = x1079 * x1819;
  x1385 = (-sc_qss[0] * x1876 - sc_qss[1] * x1879 + x1862) / x643;
  x1563 = x1079 * x1874;
  x1564 = (-sc_qss[0] * x1961 - sc_qss[1] * x1970 + x1837) / x643;
  x1320 = x1079 * x1951;
  x921 = (-sc_qss[0] * x2013 - sc_qss[1] * x2020 + x2049) / x643;
  x1440 = x1079 * x2011;
  x1580 = (-sc_qss[0] * x2069 - sc_qss[1] * x2078 + x2024) / x643;
  x476 = x1079 * x2081;
  x789 = (-sc_qss[0] * x2138 - sc_qss[1] * x2131 + x388) / x643;
  x315 = x1079 * x2124;
  x646 = (-sc_qss[0] * x2175 - sc_qss[1] * x2183 + x604) / x643;
  x1149 = x1079 * x2170;
  x1590 = (-sc_qss[0] * x2261 - sc_qss[1] * x2258 + x801) / x643;
  x1037 = x1079 * x2246;
  x963 = (-sc_qss[0] * x2266 - sc_qss[1] * x1687 + x1525) / x643;
  x1047 = x1079 * x2267;
  x1640 = (-sc_qss[0] * x2322 - sc_qss[1] * x2357 + x2369) / x643;
  x1659 = x1079 * x2259;
  x1663 = (-sc_qss[0] * x844 - sc_qss[1] * x1017 + x718) / x643;
  x1664 = x1079 * x716;
  x1670 = (-sc_qss[0] * x267 - sc_qss[1] * x882 + x1181) / x643;
  x1679 = x1079 * x862;
  x1680 = (-sc_qss[0] * x794 - sc_qss[1] * x1215 + x1360) / x643;
  x1688 = x1079 * x726;
  x1689 = (-sc_qss[0] * x1543 - sc_qss[1] * x1521 + x1559) / x643;
  x1707 = x1079 * x1531;
  x1719 = -sc_qss[0] * x1543 - sc_qss[1] * x1594;
  x1625 = (x1683 + x1719) / x643;
  x1018 = (x1719 + x572) / x643;
  x1729 = (-sc_qss[0] * x931 - sc_qss[1] * x1004 + x642) / x643;
  x262 = x1079 * x919;
  x1675 = (x1719 + x569) / x643;
  x1752 = (-sc_qss[0] * x788 - sc_qss[1] * x253 + x602) / x643;
  x1757 = x1079 * x688;
  x1769 = (-sc_qss[0] * x586 - sc_qss[1] * x668 - sc_qss[2] * x601 + x1387) /
          ((x578) * (x578));
  x923 = x1769 * x923;
  x932 =
    (-sc_qss[0] * x1005 - sc_qss[1] * x1074 - sc_qss[2] * x932 + x824) / x578;
  x1005 = x1656 * x1769;
  x1074 =
    (-sc_qss[0] * x1672 - sc_qss[1] * x1686 - sc_qss[2] * x1633 + x548) / x578;
  x824 = x1750 * x1769;
  x1633 =
    (-sc_qss[0] * x1768 - sc_qss[1] * x1756 - sc_qss[2] * x1751 + x1742) / x578;
  x1656 = x1769 * x1814;
  x1672 =
    (-sc_qss[0] * x1821 - sc_qss[1] * x1834 - sc_qss[2] * x1818 + x1761) / x578;
  x1686 = x1769 * x1870;
  x548 =
    (-sc_qss[0] * x1863 - sc_qss[1] * x1878 - sc_qss[2] * x1873 + x1860) / x578;
  x1750 = x1769 * x1950;
  x1751 =
    (-sc_qss[0] * x1960 - sc_qss[1] * x1969 - sc_qss[2] * x1925 + x1884) / x578;
  x1756 = x1769 * x2009;
  x1768 =
    (-sc_qss[0] * x2012 - sc_qss[1] * x2019 - sc_qss[2] * x655 + x1959) / x578;
  x1770 = x1769 * x2068;
  x1772 =
    (-sc_qss[0] * x2064 - sc_qss[1] * x2077 - sc_qss[2] * x2071 + x571) / x578;
  x1779 = x1769 * x2121;
  x1782 =
    (-sc_qss[0] * x2137 - sc_qss[1] * x2129 - sc_qss[2] * x2122 + x2118) / x578;
  x1787 = x1769 * x2169;
  x1742 =
    (-sc_qss[0] * x2174 - sc_qss[1] * x2182 - sc_qss[2] * x2133 + x2130) / x578;
  x1676 = x1769 * x2179;
  x1741 =
    (-sc_qss[0] * x2260 - sc_qss[1] * x2257 - sc_qss[2] * x2185 + x397) / x578;
  x1749 = x1769 * x2250;
  x1814 =
    (-sc_qss[0] * x282 - sc_qss[1] * x2318 - sc_qss[2] * x165 + x823) / x578;
  x1818 = x1769 * x2253;
  x1819 =
    (-sc_qss[0] * x2315 - sc_qss[1] * x2356 - sc_qss[2] * x948 + x1602) / x578;
  x1821 = x1769 * x706;
  x1823 =
    (-sc_qss[0] * x720 - sc_qss[1] * x976 - sc_qss[2] * x734 + x796) / x578;
  x1828 = x1769 * x856;
  x1834 =
    (-sc_qss[0] * x1025 - sc_qss[1] * x878 - sc_qss[2] * x846 + x416) / x578;
  x1835 = x1769 * x773;
  x1836 =
    (-sc_qss[0] * x1212 - sc_qss[1] * x662 - sc_qss[2] * x930 + x1330) / x578;
  x1761 = x1769 * x911;
  x1764 = -sc_qss[0] * x906 - sc_qss[2] * x989;
  x1815 = (-sc_qss[1] * x1068 + x1764 + x358) / x578;
  x1817 = (-sc_qss[1] * x272 + x1677 + x1764) / x578;
  x1863 = (-sc_qss[1] * x272 + x1764 + x525) / x578;
  x1870 = x1769 * x827;
  x1873 =
    (-sc_qss[0] * x929 - sc_qss[1] * x1002 - sc_qss[2] * x829 + x1011) / x578;
  x1874 = (-sc_qss[1] * x272 + x1764 + x444) / x578;
  x1876 = (-sc_qss[1] * x272 + x1764 + x358) / x578;
  x1878 =
    sc_qss[2] * (kf_qss[67] * sc[5] * x457 + 10.0e-13) / ((x634) * (x634));
  x1879 =
    x1410 * x722 + x1878 * x722 - (kf_qss[65] * sc[12] * x1404 + x1533) / x634;
  x609 =
    x1410 * x998 + x1878 * x998 - (sc[12] * x10 * x609 * x624 + x1641) / x634;
  x624 = x1410 * x1678 - x1641 / x634 + x1678 * x1878;
  x998 = x1410 * (-kf_qss[70] + x993) + x1878 * (-kf_qss[70] + x993) -
         (kf_qss[57] * sc[8] + x1641) / x634;
  x1678 =
    x1410 * x1871 + x1871 * x1878 -
    (kf_qss[66] * sc[8] * x1393 + kf_qss[68] * sc[12] * x1401 + x1641) / x634;
  x1871 =
    -kf_qss[67] * sc_qss[2] * x457 / x634 + x1410 * x502 + x1878 * x502 - x1947;
  x1408 = x1410 * x993 + x1878 * x993 -
          (kf_qss[58] * sc[8] + sc[12] * x1408 + x1641) / x634;
  x1885 = x1410 * x993 - x1641 / x634 + x1878 * x993;
  x1641 = x1410 * x993 + x1878 * x993 -
          (kf_qss[57] * sc[3] + kf_qss[58] * sc[6] +
           kf_qss[66] * sc[4] * x1393 + x1641) /
            x634;
  x634 = x1410 * x722 - x1533 / x634 + x1878 * x722;
  x722 = x1410 * x2168 + x1878 * x2168 - x2283;
  x1533 = x1410 * x993 + x1878 * x993 - x544;
  x1410 = x1410 * x626 + x1878 * x626 - x712;
  x993 = sc_qss[0] * x321 / ((x170) * (x170));
  x897 = (-sc_qss[1] * x1069 - sc_qss[3] * x916 + x1526 + x897 * x993) / x234;
  x916 =
    (-sc_qss[0] * x321 / x170 - sc_qss[1] * x664 - sc_qss[3] * x491 + x1267) /
    ((x234) * (x234));
  x908 = x908 * x916;
  x1069 = (-sc_qss[1] * x1685 - sc_qss[3] * x1654 + x115 * x993 + x1708) / x234;
  x1526 = x1653 * x916;
  x115 = (-sc_qss[1] * x1755 - sc_qss[3] * x1748 + x1745 * x993 + x227) / x234;
  x1653 = x1747 * x916;
  x1654 = (sc_qss[0] * x1767 * x321 / ((x170) * (x170)) - sc_qss[1] * x1833 -
           sc_qss[3] * x1813 + x1841) /
          x234;
  x1685 = x1812 * x916;
  x1708 =
    (-sc_qss[1] * x1877 - sc_qss[3] * x1831 + x1825 * x993 + x1897) / x234;
  x1745 = x1830 * x916;
  x1747 =
    (-sc_qss[1] * x1968 - sc_qss[3] * x1949 + x1932 * x993 + x1987) / x234;
  x1748 = x1946 * x916;
  x1755 =
    (-sc_qss[1] * x2017 - sc_qss[3] * x2006 + x1966 * x993 + x2044) / x234;
  x227 = x1972 * x916;
  x1767 =
    (-sc_qss[1] * x2076 - sc_qss[3] * x2067 + x2025 * x993 + x2095) / x234;
  x1812 = x2028 * x916;
  x1813 = (-kf_qss[59] * sc_qss[0] / x170 + sc_qss[0] * x2086 * x321 -
           sc_qss[1] * x2128 - sc_qss[3] * x2119 + x2150) /
          x234;
  x1833 = x2117 * x916;
  x1841 =
    (-sc_qss[1] * x2181 - sc_qss[3] * x2140 + x2134 * x993 + x2194) / x234;
  x1825 = x2135 * x916;
  x1830 = (-sc_qss[1] * x2256 - sc_qss[3] * x2178 + x864 + x885 * x993) / x234;
  x1831 = x2177 * x916;
  x896 = (-sc_qss[1] * x2317 - sc_qss[3] * x991 + x1501 + x896 * x993) / x234;
  x1877 = x916 * x984;
  x1886 = (-sc_qss[1] * x2355 - sc_qss[3] * x486 + x2364 + x965 * x993) / x234;
  x1897 = x2245 * x916;
  x1860 = (sc_qss[0] * x321 * x97 - sc_qss[1] * x895 -
           sc_qss[3] * (kf_qss[78] / x170 + x129) + x748) /
          x234;
  x1862 = x701 * x916;
  x1872 =
    (sc_qss[0] * x321 * x97 - sc_qss[1] * x895 - sc_qss[3] * x129 + x35) / x234;
  x502 = (sc_qss[0] * x321 * x97 - sc_qss[1] * x172 - sc_qss[3] * x129 + x146) /
         x234;
  x1925 = x232 * x916;
  x1932 = (-sc_qss[1] * (kf_qss[76] / x170 + x1067) - sc_qss[3] * x912 + x1484 +
           x1788 + x2094 + x83 * x993) /
          x234;
  x1937 = x900 * x916;
  x83 = -sc_qss[1] * x1067 - sc_qss[3] * x912 + x83 * x993;
  x183 = (x1263 + x83) / x234;
  x233 = (x1484 + x192 * x233 + x2094 + x83) / x234;
  x1946 = (x173 + x83) / x234;
  x1949 = (x150 + x83) / x234;
  x1788 = (x1484 + x1788 + x2094 + x83) / x234;
  x1950 = sc_qss[3] * x325 / ((x441) * (x441));
  x1951 = sc_qss[2] * x596 / ((x441) * (x441));
  x756 = x446 * (x1560 + x1950 * x756 + x1951 * x756);
  x780 = x780 * (-sc_qss[2] * x596 / x441 - sc_qss[3] * x325 / x441 + x1386);
  x779 = x779 * x780;
  x1560 = x446 * (x1718 + x1950 * x423 + x1951 * x423);
  x423 = x1081 * x780;
  x1081 = x446 * (x1780 + x1950 * x250 + x1951 * x250);
  x1718 = x1739 * x780;
  x250 = x446 * (x1759 * x1950 + x1759 * x1951 + x1844);
  x1739 = x1760 * x780;
  x1780 = x446 * (x1865 * x1950 + x1865 * x1951 + x1891);
  x1759 = x1867 * x780;
  x1760 = x446 * (x1875 * x1950 + x1875 * x1951 + x1979);
  x1844 = x1881 * x780;
  x1865 = x446 * (x1950 * x1957 + x1951 * x1957 + x2036);
  x1867 = x1958 * x780;
  x1891 = x446 * (x1950 * x2015 + x1951 * x2015 + x2093);
  x1875 = x2021 * x780;
  x1881 = x446 * (sc_qss[3] * x2072 * x325 / ((x441) * (x441)) + x1951 * x2072 +
                  x2148);
  x1960 = x2075 * x780;
  x1961 = x446 * (x1950 * x2125 + x1951 * x2125 + x2191);
  x1962 = x2126 * x780;
  x1968 = x446 * (x1950 * x2172 + x1951 * x2172 + x2278);
  x1969 = x2176 * x780;
  x755 = x446 * (x1548 + x1950 * x755 + x1951 * x755);
  x1970 = x2171 * x780;
  x1971 = x446 * (x1575 * x1950 + x1575 * x1951 + x2363);
  x1979 = x1584 * x780;
  x1987 = x446 * (x1950 * x418 + x1951 * x418 + x736);
  x1884 = x437 * x780;
  x1947 = x446 * (-kf_qss[110] * sc_qss[3] / x441 + x1950 * x418 +
                  x1951 * x418 + x402);
  x1837 = x446 * (-kf_qss[128] * sc_qss[2] / x441 + x1950 * x418 +
                  x1951 * x418 + x353);
  x1882 = x759 * x780;
  x1048 = sc_qss[2] * x1048 * x596 / ((x441) * (x441)) +
          sc_qss[3] * x1048 * x325 / ((x441) * (x441));
  x731 = x446 * (x1048 + x1547 - x731 / x441);
  x1957 = x777 * x780;
  x1958 = x446 * (x1048 + x1466);
  x655 = x446 * (x1010 + x1048);
  x1966 = x446 * (x1048 + x443);
  x708 = sc_qss[1] * x659 * x708 / ((x65) * (x65)) +
         sc_qss[2] * x639 * x708 / ((x65) * (x65)) +
         sc_qss[6] * x1 * x708 / ((x65) * (x65)) + x1229 * x708 - x1522;
  x1967 = sc_qss[1] * x659 / ((x65) * (x65));
  x1972 = sc_qss[6] * x1 / ((x65) * (x65));
  x2006 = sc_qss[2] * x639 / ((x65) * (x65));
  x1650 = -kf_qss[85] * sc_qss[6] / x65 + x1229 * x1650 + x1650 * x1967 +
          x1650 * x1972 + x1650 * x2006 - x1701;
  x1 = sc_qss[1] * x1682 * x659 + sc_qss[2] * x1682 * x639 +
       sc_qss[6] * x1 * x1682 + x1229 * (-kf_qss[80] + x1649) - x1700 / x65;
  x659 =
    x1229 * x1758 - x1700 / x65 + x1758 * x1967 + x1758 * x1972 + x1758 * x2006;
  x1701 =
    x1229 * x1829 - x1700 / x65 + x1829 * x1967 + x1829 * x1972 + x1829 * x2006;
  x1682 = x1229 * x1945 + x1945 * x1967 + x1945 * x1972 + x1945 * x2006 - x1985;
  x639 = sc_qss[2] * x1649 * x639 / ((x65) * (x65)) + x1229 * x1649 +
         x1649 * x1967 + x1649 * x1972;
  x1649 = -x1700 / x65 + x639;
  x1758 = x1229 * x2120 - x1522 + x1967 * x2120 + x1972 * x2120 + x2006 * x2120;
  x311 = -sc_qss[1] * x311 / x65 + x1229 * x2127 + x1967 * x2127 +
         x1972 * x2127 + x2006 * x2127 - x703;
  x707 = -kf_qss[82] * sc_qss[1] * x238 / x65 + x1229 * x707 - x1522 +
         x1967 * x707 + x1972 * x707 + x2006 * x707;
  x1522 = x1229 * x489 + x1967 * x489 + x1972 * x489 + x2006 * x489 - x61;
  x1829 = -kf_qss[112] * sc_qss[2] / x65 + x1229 * x489 - x19 + x1967 * x489 +
          x1972 * x489 + x2006 * x489;
  x1229 = -x1221 + x1229 * x63 + x1967 * x63 + x1972 * x63 + x2006 * x63;
  x1945 = -x1674 + x639;
  x65 = x639 - (kf_qss[130] * sc[1] + x1700) / x65;
  x1700 = sc_qss[6] * x174 / ((x229) * (x229));
  x1985 = sc_qss[3] * x482 / ((x229) * (x229));
  x1243 =
    x1265 * x858 + x1700 * x858 + x1985 * x858 - (sc[17] * x1243 + x837) / x229;
  x207 = x1265 * x1639 + x1639 * x1700 + x1639 * x1985 -
         (sc[17] * x207 * x220 + x1636) / x229;
  x220 = x1265 * x1743 - x1636 / x229 + x1700 * x1743 + x1743 * x1985;
  x1639 = -kf_qss[90] * sc_qss[6] / x229 + x1265 * x1763 - x1636 / x229 +
          x1700 * x1763 + x1763 * x1985;
  x1743 = x1265 * x1826 + x1700 * x1826 + x1826 * x1985 - x1896;
  x1763 = sc_qss[3] * x185 * x482 / ((x229) * (x229)) +
          sc_qss[6] * x174 * x185 / ((x229) * (x229)) + x1265 * x185 - x1981;
  x1638 = x1265 * x1638 + x1638 * x1700 + x1638 * x1985;
  x1826 = -kf_qss[92] * sc_qss[6] / x229 + x1638 -
          (kf_qss[102] * sc[17] * x1235 + x1636) / x229;
  x1896 = -x1636 / x229 + x1638;
  x1240 = -kf_qss[98] * sc_qss[3] * x479 / x229 + x1638 -
          (x1240 * x1248 + x1636) / x229;
  x858 = x1265 * x858 + x1700 * x858 + x1985 * x858 - x837 / x229;
  x174 = sc_qss[3] * x222 * x482 / ((x229) * (x229)) +
         sc_qss[6] * x174 * x222 / ((x229) * (x229)) + x1265 * x222 - x2284;
  x229 = x1638 - (kf_qss[103] * x1249 * x1251 + x1636) / x229;
  x482 = x1265 * x746 - x143 + x1700 * x746 + x1985 * x746;
  x837 = -x1233 + x1638;
  x1265 = x1638 - x192;
  x341 = sc_qss[7] * x341 / ((x374) * (x374));
  x1636 =
    x1339 * x774 + x341 * x774 - (kf_qss[135] * sc[20] * x1336 + x1554) / x374;
  x362 =
    x1063 * x1339 + x1063 * x341 - (sc[20] * x348 * x362 * x9 + x1716) / x374;
  x1063 = x1339 * (-kf_qss[136] + x1054) - x1716 / x374 +
          x341 * (-kf_qss[136] + x1054);
  x185 = x1339 * (-kf_qss[138] + x1054) - x1716 / x374 +
         x341 * (-kf_qss[138] + x1054);
  x1981 = -kf_qss[139] * sc_qss[7] * x105 * x332 / x374 +
          x1339 * (-kf_qss[137] + x1054) - x1716 / x374 +
          x341 * (-kf_qss[137] + x1054);
  x1880 = x1339 * x1880 + x1880 * x341 - x1977;
  x1977 = x1339 * (-kf_qss[139] + x1054) + x341 * (-kf_qss[139] + x1054) -
          (kf_qss[138] * sc[20] * x1326 + x1716) / x374;
  x2009 = x1054 * x1339 + x1054 * x341 - x1716 / x374;
  x339 = -sc_qss[7] * x339 / x374 + x1339 * (-kf_qss[140] + x1054) +
         x341 * (-kf_qss[140] + x1054) - (kf_qss[115] * sc[14] + x1716) / x374;
  x2010 =
    x1339 * x774 + x341 * x774 - (kf_qss[140] * sc[20] * x1333 + x1554) / x374;
  x2011 = x1339 * x2173 + x2173 * x341 - x767;
  x774 = x1339 * x774 - x1554 / x374 + x341 * x774;
  x1554 =
    -sc_qss[7] * (kf_qss[136] * x329 + kf_qss[139] * x2279 * x332) / x374 +
    x2009;
  x374 = x1054 * x1339 + x1054 * x341 - (kf_qss[115] * sc[8] + x1716) / x374;
  x1716 = x1339 * x766 + x341 * x766 - x762;
  x1339 = x1054 * x1339 + x1054 * x341 - x1058;
  x1054 = 50.7 * exp(
                   g_RT[0] - g_RT[14] - g_RT[1] + g_RT_qss[6] -
                   6516.6558221711202 * invT + 1.93 * tc[0]);
  x2012 = sc[0] * x1054;
  x2013 = 23000.0 * exp(
                      g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3] -
                      1648.03458051046 * invT + 1.05 * tc[0]);
  x2016 = sc[0] * x2013;
  x2017 = 110.7 * exp(
                    -g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[1] -
                    840.37183189388202 * invT + 1.79 * tc[0]);
  x2018 = sc[1] * x2017;
  x2019 = 0.5 * sc[0] * exp(-3638.25649376812 * invT + 2.0 * tc[0]);
  x2020 = -44670.543423485004 * invT + 0.44 * tc[0];
  x16 = 8.75e+31 * x10 * exp(x16 - x2020);
  x2023 = -0.29097730287517898 * x22 + 0.43429448190325198 * log(x16) - 0.4;
  x2027 = -0.14 * x2023 - 0.55155399201712996 * x22 + 0.75;
  x2029 = exp(
    M_LN10 * (0.43429448190325198 * x22 /
              (((x2023) * (x2023)) / ((x2027) * (x2027)) + 1.0)));
  x2030 =
    exp(-94921.759670744301 * invT - 8.87 * tc[0] + x15 - x2020) / (x16 + 1.0);
  x2031 = 7.0e+44 * x10 * x2 * x2029 * x2030;
  x2036 = 60000000.0 * sc[0] * x48;
  x2040 =
    115.0 *
    exp(g_RT[0] - g_RT[1] - 3789.2214935095399 * invT + 1.9 * tc[0] - x378);
  x2042 = sc[0] * x2040;
  x2044 = exp(-2012.8666632188799 * invT);
  x1959 = 20000000.0 * sc[1] * x2044;
  x2008 = 100000000.0 * sc[10] * x453;
  x2049 = -18014.512518476698 * invT - 3.4 * tc[0];
  x81 =
    6645077720207.25 * x10 * exp(18643.2817423997 * invT - 1.62 * tc[0] + x81);
  x2050 = -0.29097730287517898 * x86 + 0.43429448190325198 * log(x81) - 0.4;
  x2022 = 1.7777777777777777 * ((x2050) * (x2050)) /
            ((-0.18666666666666668 * x2050 - 0.73540532268950665 * x86 + 1) *
             (-0.18666666666666668 * x2050 - 0.73540532268950665 * x86 + 1)) +
          1.0;
  x2015 = exp(M_LN10 * (0.43429448190325198 * x86 / x2022));
  x2021 = 2.565e+21 * x10 * x2015 * exp(x2049) / (x81 + 1.0);
  x2025 = 187000000000.0 * x10 * exp(-8554.6833186802305 * invT - tc[0]);
  x2028 = 90000000.0 * sc[8] * x479;
  x2064 = 128000.0 * x10 * exp(-618.95649893980499 * invT - 2.34 * tc[0]);
  x2067 = -0.29097730287517898 * x265 + 0.43429448190325198 * log(x2064) - 0.4;
  x2068 = -0.14 * x2067 - 0.55155399201712996 * x265 + 0.75;
  x2069 = exp(
    M_LN10 * (0.43429448190325198 * x265 /
              (((x2067) * (x2067)) / ((x2068) * (x2068)) + 1.0)));
  x2071 =
    x2069 * exp(-618.95649893980499 * invT - 3.14 * tc[0]) / (x2064 + 1.0);
  x2073 = 3200000000000000.0 * x2071 * x854;
  x2074 = -1670.679330471668 * invT - 3.86 * tc[0];
  x113 = 230263157894.737 * x10 *
         exp(140.90066642532199 * invT - 0.27 * tc[0] + x113);
  x2076 = -0.29097730287517898 * x118 + 0.43429448190325198 * log(x113) - 0.4;
  x2077 = -0.55155399201712996 * x118 - 0.14 * x2076 + 0.75;
  x2078 = exp(
    M_LN10 * (0.43429448190325198 * x118 /
              (((x2076) * (x2076)) / ((x2077) * (x2077)) + 1.0)));
  x2081 = 1.4e+18 * x2078 * x854 * exp(x2074) / (x113 + 1.0);
  x2083 = 15000000.0 * sc[1] * x472;
  x2084 = 30000000.0 * sc[1] * x530;
  x2085 = 16000000.0 * sc[5] * x457;
  x2091 = -717.08374877172594 * invT - 2.57 * tc[0];
  x546 = 1238532.11009174 * x10 *
         exp(-130.83633310922701 * invT - 0.48 * tc[0] + x546);
  x2093 = -0.29097730287517898 * x551 + 0.43429448190325198 * log(x546) - 0.4;
  x2094 = -0.14 * x2093 - 0.55155399201712996 * x551 + 0.75;
  x2095 = exp(
    M_LN10 * (0.43429448190325198 * x551 /
              (((x2093) * (x2093)) / ((x2094) * (x2094)) + 1.0)));
  x571 = 1350000000000.0 * x2095 * x854 * exp(x2091) / (x546 + 1.0);
  x2024 = 5280000.0 * sc[3] * exp(-754.82499870708 * invT);
  x2063 = 80000000.0 * sc[1] * x494;
  x2072 = 20000000.0 * sc[14] * exp(-3019.29999482832 * invT);
  x2075 = 1.5e+18 * exp(-9368.8878839522695 * invT - 2.83 * tc[0]);
  x2086 = sc[8] * x2075;
  x2117 = exp(286.83349950869001 * invT);
  x2119 = 12000000.0 * sc[8] * x2117;
  x2121 =
    20000000.0 *
    exp(-g_RT[19] - g_RT[1] + g_RT[9] + g_RT_qss[5] - 1006.43333160944 * invT);
  x2122 = sc[9] * x2121;
  x2124 = -3507.4201606589004 * invT - 7.62 * tc[0];
  x400 = 1.11111111111111e+24 * x10 *
         exp(915.85433176459003 * invT - 0.454 * tc[0] + x400);
  x2128 = -0.29097730287517898 * x405 + 0.43429448190325198 * log(x400) - 0.4;
  x2129 = -0.14 * x2128 - 0.55155399201712996 * x405 + 0.75;
  x2131 = exp(
            M_LN10 * (0.43429448190325198 * x405 /
                      (((x2128) * (x2128)) / ((x2129) * (x2129)) + 1.0))) /
          (x400 + 1.0);
  x2132 = 1.2e+30 * x2131 * x843 * exp(x2124 + x399);
  x2137 = exp(
    g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7] - 5334.0966575300299 * invT +
    0.1 * tc[0]);
  x2138 = 4990000.0 * sc[1] * x2137;
  x2139 = 3.7e+18 * exp(
                      -g_RT[1] + g_RT[8] + g_RT_qss[7] - g_RT_qss[9] -
                      6292.7244058880196 * invT - 2.92 * tc[0]);
  x2148 = sc[8] * x2139;
  x2150 = -795.08233197145705 * invT - 0.99 * tc[0];
  x421 = 3.8195777351247603e+17 * x10 * exp(-x2150 + x421);
  x2118 = -0.29097730287517898 * x426 + 0.43429448190325198 * log(x421) - 0.4;
  x388 = -0.14 * x2118 - 0.55155399201712996 * x426 + 0.75;
  x1101 = exp(
    M_LN10 * (0.43429448190325198 * x426 /
              (((x2118) * (x2118)) / ((x388) * (x388)) + 1.0)));
  x2120 =
    x1101 * exp(-4159.08574287601 * invT - 8.07 * tc[0] - x2150) / (x421 + 1.0);
  x2125 = 1.99e+29 * x2120 * x854;
  x2126 = -2797.8846618742396 * invT - 4.8 * tc[0];
  x607 = 4074074074074.07 * x10 *
         exp(1308.3633310922701 * invT - 0.454 * tc[0] + x607);
  x2133 = -0.29097730287517898 * x613 + 0.43429448190325198 * log(x607) - 0.4;
  x2134 = -0.14 * x2133 - 0.55155399201712996 * x613 + 0.75;
  x2135 = exp(
            M_LN10 * (0.43429448190325198 * x613 /
                      (((x2133) * (x2133)) / ((x2134) * (x2134)) + 1.0))) /
          (x607 + 1.0);
  x2140 = 2.2e+18 * x2135 * x843 * exp(x2126 + x606);
  x2169 = -0.29097730287517898 * x181 +
          0.43429448190325198 * log(5.2e+19 * x177) - 0.4;
  x2170 = -0.55155399201712996 * x181 - 0.14 * x2169 + 0.75;
  x2174 = exp(
            M_LN10 * (0.43429448190325198 * x181 /
                      (((x2169) * (x2169)) / ((x2170) * (x2170)) + 1.0))) /
          (5.2e+19 * x177 + 1.0);
  x2175 = 5.2e+27 * sc[1] * x177 * x2174;
  x2180 = -5988.2783230761797 * invT - 7.64 * tc[0];
  x204 = 1.1515151515151501e+21 * x10 *
         exp(4277.3416593401198 * invT + 0.06 * tc[0] + x204);
  x2181 = -0.29097730287517898 * x209 + 0.43429448190325198 * log(x204) - 0.4;
  x2182 = -0.55155399201712996 * x209 - 0.14 * x2181 + 0.75;
  x2183 = exp(
            M_LN10 * (0.43429448190325198 * x209 /
                      (((x2181) * (x2181)) / ((x2182) * (x2182)) + 1.0))) /
          (x204 + 1.0);
  x2184 = 3.8e+29 * refC * x10 * x2183 * exp(x203 + x2180);
  x2191 = 3.7e+18 * exp(-6292.7244058880196 * invT - 2.92 * tc[0]);
  x2194 = sc[1] * x2191;
  x2130 =
    4.7067669172932297e+19 * x9 * exp(-1881.67807844359 * invT - 6.66 * tc[0]);
  x604 = -0.29097730287517898 * x351 + 0.43429448190325198 * log(x2130) - 0.4;
  x641 = -0.55155399201712996 * x351 - 0.14 * x604 + 0.75;
  x2127 = exp(
            M_LN10 * (0.43429448190325198 * x351 /
                      (((x604) * (x604)) / ((x641) * (x641)) + 1.0))) /
          (x2130 + 1.0);
  x2168 = 6.26e+26 * x2127 * x367 * x9;
  x222 =
    1750000.0 * exp(g_RT[11] - g_RT[17] - 679.34249883637199 * invT - x244);
  x2172 = sc[11] * x222;
  x2173 =
    4.08 *
    exp(g_RT[10] - g_RT[13] - 956.11166502896697 * invT + 2.0 * tc[0] - x244);
  x2176 = sc[10] * x2173;
  x885 = 39000000.0 * exp(-1781.38699694871 * invT - x167 - x497);
  x2177 = sc[4] * x885;
  x2178 = 100000000.0 * exp(g_RT[10] - g_RT_qss[5] - x244);
  x2179 = sc[10] * x2178;
  x2185 = 300000.0 * exp(-5.5353833238519199 * invT + 0.29 * tc[0]);
  x2246 = sc[3] * x2185;
  x2256 = 33000000.0 * sc[2] * x540;
  x2257 = 15.1 * exp(
                   -g_RT[14] + g_RT_qss[6] - 1882.0303301096501 * invT +
                   1.91 * tc[0] - x167);
  x2258 = sc[4] * x2257;
  x2260 = -110.707666477038 * invT + 1.83 * tc[0];
  x2261 = 19.2 * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3] + x2260);
  x2269 = sc[8] * x2261;
  x244 = 0.384 * exp(g_RT[12] - g_RT[14] + x2260 - x244);
  x2270 = sc[12] * x244;
  x767 = 89.8 * exp(-2863.3028284288498 * invT + 1.92 * tc[0] - x167 - x378);
  x2278 = sc[4] * x767;
  x703 =
    30830000.0 * exp(-g_RT[8] + g_RT_qss[4] - 14492.6399751759 * invT - x225);
  x2283 = sc[2] * x703;
  x2284 = 96000000.0 * sc[12] * x329;
  x864 = 300000.0 * exp(
                      -g_RT_qss[6] + g_RT_qss[8] - 5.5353833238519199 * invT +
                      0.29 * tc[0] - x225);
  x397 = sc[2] * x864;
  x801 = 20000000.0 * sc[2] * x2044;
  x1489 = 46000000000.0 * exp(
                            g_RT[12] - g_RT[3] + g_RT_qss[3] - g_RT_qss[6] -
                            508.24883246276698 * invT - 1.39 * tc[0]);
  x984 = sc[12] * x1489;
  x991 = 46000000000.0 * exp(-508.24883246276698 * invT - 1.39 * tc[0]);
  x2171 = sc[3] * x991;
  x165 = 1.34 * exp(192.93326966953001 * invT + 1.61 * tc[0]);
  x2250 = sc[3] * x165;
  x282 = 13200000.0 * sc[3] * exp(-754.82499870708 * invT);
  x2266 = 7600000.0 * sc[3] * exp(-201.28666632188799 * invT);
  x2267 = 10000000.0 * sc[11] * x238;
  x2316 = 10560000.0 * exp(
                         -g_RT[3] + g_RT[4] - g_RT_qss[1] + g_RT_qss[3] -
                         754.82499870708 * invT);
  x2317 = sc[4] * x2316;
  x2318 = 100000000.0 * exp(-20128.666632188801 * invT - x102 - x497);
  x1687 = sc[6] * x2318;
  x2321 = 42200000.0 *
          exp(-g_RT[14] + g_RT_qss[6] - 30595.573280927001 * invT - x102);
  x1548 = sc[6] * x2321;
  x1501 = 4.28e-19 * exp(1776.3548302906599 * invT + 7.6 * tc[0]);
  x823 = sc[3] * x1501;
  x1525 =
    3.6 *
    exp(-g_RT[14] + g_RT_qss[6] - 1258.0416645118 * invT + 2.0 * tc[0] - x154);
  x1129 = sc[5] * x1525;
  x1575 = 11.3 * sc[4] * exp(-1509.64999741416 * invT + 2.0 * tc[0]);
  x1584 = 10560000.0 * sc[3] * exp(-754.82499870708 * invT);
  x948 = 6600000.0 * sc[4] * x105 * x110;
  x965 = 3430.0 * exp(224.93784961470999 * invT + 1.18 * tc[0] - x154 - x497);
  x2245 = sc[5] * x965;
  x486 = 56.0 * exp(
                  -g_RT[8] + g_RT_qss[1] - 2727.4343286615799 * invT +
                  1.6 * tc[0] - x154);
  x2253 = sc[5] * x486;
  x2259 = 25010000.0 * sc[5] * x450;
  x2268 = 3.54 * exp(-437.79849925010598 * invT + 2.12 * tc[0] - x154 - x378);
  x2314 = sc[5] * x2268;
  x2315 = 13400000.0 * sc[4] * x630;
  x2322 = 24000000.0 * sc[4] * x105 * x332;
  x2350 = 10000000.0 * sc[4] * x198;
  x2351 = exp(-1006.43333160944 * invT);
  x2352 = 10000000.0 * sc[4] * x2351;
  x2353 = 12100.0 * sc[7] * exp(299.91713281961302 * invT);
  x2354 =
    1000000.0 * exp(-g_RT[6] + g_RT[7] - 4025.7333264377598 * invT - x497);
  x2355 = sc[7] * x2354;
  x2356 = 8700.0 * sc[7] * exp(-490.13303249379697 * invT);
  x2357 = 0.227 * exp(
                    -g_RT[14] - g_RT[8] + g_RT[9] + g_RT_qss[6] -
                    4629.5933254034198 * invT + 2.0 * tc[0]);
  x2358 = sc[9] * x2357;
  x497 = 0.00332 * exp(-2948.8496616156599 * invT + 2.81 * tc[0] - x377 - x497);
  x2359 = sc[9] * x497;
  x2363 = -4161.6018262050302 * invT + 2.0 * tc[0];
  x2364 = 4.92 * sc[9] * exp(x2363);
  x1602 = -0.29097730287517898 * x514 +
          0.43429448190325198 * log(1.2222222222222201e+29 * x510) - 0.4;
  x544 = -0.14 * x1602 - 0.55155399201712996 * x514 + 0.75;
  x2369 = exp(
            M_LN10 * (0.43429448190325198 * x514 /
                      (((x1602) * (x1602)) / ((x544) * (x544)) + 1.0))) /
          (1.2222222222222201e+29 * x510 + 1.0);
  x1036 = 2.2e+36 * sc[8] * x2369 * x510;
  x562 = 32000000.0 * sc[9] * x2117;
  x800 = 40000000.0 * sc[15] * exp(276.769166192596 * invT);
  x418 = -0.29097730287517898 * x139 +
         0.43429448190325198 * log(1.708e+39 * x135) - 0.4;
  x437 = -0.55155399201712996 * x139 - 0.14 * x418 + 0.75;
  x734 = exp(
           M_LN10 * (0.43429448190325198 * x139 /
                     (((x418) * (x418)) / ((x437) * (x437)) + 1.0))) /
         (1.708e+39 * x135 + 1.0);
  x742 = 4.27e+46 * sc[8] * x135 * x734;
  x746 = 6.14 * exp(-5258.61415765932 * invT + 1.74 * tc[0] - x377 - x378);
  x752 = sc[9] * x746;
  x378 = exp(g_RT[8] - g_RT_qss[2] + 276.769166192596 * invT - x378);
  x97 = 40000000.0 * sc[8] * x378;
  x129 = 9980000.0 * sc[1] * x2137;
  x36 = 7.8e+41 * exp(-23600.8616262414 * invT - 9.147 * tc[0]);
  x489 =
    330000.0 * exp(-g_RT[14] - g_RT[8] + g_RT_qss[9] - 3874.76832669634 * invT);
  x701 = refC * x489;
  x706 = 2.46 * sc[9] * exp(x2363);
  x626 = 16000000.0 * sc[9] * x2117;
  x716 = 50000000.0 * sc[9] * x42;
  x296 = -3019.29999482832 * invT + 2.0 * tc[0];
  x720 = 10.0 * exp(-g_RT[13] + g_RT_qss[6] - x163 + x296);
  x804 = sc[10] * x720;
  x815 = 10.0 * sc[13] * exp(x296);
  x839 = -3570.32224388449 * invT - 5.11 * tc[0];
  x280 = 3320987654320990.0 * x10 *
         exp(2269.50716277929 * invT - 0.5 * tc[0] + x280);
  x844 = -0.29097730287517898 * x285 + 0.43429448190325198 * log(x280) - 0.4;
  x850 = -0.55155399201712996 * x285 - 0.14 * x844 + 0.75;
  x867 = exp(
           M_LN10 * (0.43429448190325198 * x285 /
                     (((x844) * (x844)) / ((x850) * (x850)) + 1.0))) /
         (x280 + 1.0);
  x875 = 2.69e+21 * sc[10] * x10 * x867 * exp(x839);
  x891 = 30000000.0 * sc[10] * x159;
  x895 = 3400000.0 * exp(
                       g_RT[10] - g_RT[11] - g_RT_qss[0] + g_RT_qss[3] -
                       347.21949940525701 * invT);
  x976 = sc[10] * x895;
  x1017 = -4025.7333264377598 * invT + 2.0 * tc[0];
  x1029 = 10.0 * sc[14] * exp(x1017);
  x1034 = 10.0 * exp(-g_RT[14] + g_RT_qss[7] + x1017 - x163);
  x971 = sc[10] * x1034;
  x696 = 2640000.0 * sc[3] * exp(-754.82499870708 * invT);
  x57 =
    3.0625e-6 * x55 * exp(25538.245789589499 * invT + 0.52 * tc[0] + x57) + 1.0;
  x61 = -25009.868290494604 * invT - 0.64 * tc[0];
  x25 = 2450000000.0 * x55 * exp(x56 + x61) / x57;
  x736 =
    exp(g_RT[0] + g_RT[16] - g_RT[17] - g_RT[1] - 4025.7333264377598 * invT);
  x407 = 0.17 * exp(
                  g_RT[0] + g_RT[19] - g_RT[1] - g_RT[20] -
                  1253.00949785375 * invT + 2.5 * tc[0]);
  x141 = 12.1 * exp(
                  g_RT[0] - g_RT[1] + g_RT[6] - g_RT[7] -
                  2616.7266621845401 * invT + 2.0 * tc[0]);
  x143 = 16600000.0 *
         exp(g_RT[0] - g_RT[1] + g_RT[3] - g_RT[6] - 412.63766595986999 * invT);
  x743 = 0.05 * exp(-3165.23282791169 * invT + 2.67 * tc[0]);
  x748 = 216.0 * sc[4] * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  x170 =
    (-sc_qss[0] * x321 / x170 - sc_qss[1] * x664 - sc_qss[3] * x491 + x1267) /
    x234;
  x234 = 660.0 * exp(
                   g_RT[0] - g_RT[1] + g_RT[8] - g_RT[9] -
                   5454.8686573231598 * invT + 1.62 * tc[0]);
  x321 = g_RT[0] - 2.0 * g_RT[1];
  x491 = refC * exp(-1.25 * tc[0] + x321);
  x595 = (-sc_qss[0] * x595 - sc_qss[1] * x674 + x1441) / x643;
  x643 = sc_qss[1] * x660 + sc_qss[2] * x640 + sc_qss[6] * x67;
  x664 = -x1230 - x643;
  x674 = x1469 / x1470;
  x578 =
    (-sc_qss[0] * x586 - sc_qss[1] * x668 - sc_qss[2] * x601 + x1387) / x578;
  x586 = 110.7 * exp(-840.37183189388202 * invT + 1.79 * tc[0]);
  x601 = sc[0] * x586;
  x668 = refC * exp(-2.0 * tc[0] + x321);
  x1267 = sc[10] + sc[21] + sc[3] + x4 + x5;
  x1387 = refC * exp(-tc[0] + x321);
  x675 = (-sc_qss[0] * x1082 + x1442) / x675;
  x1082 = 30000000.0 * sc[0] * x590;
  x325 = x446 * (-sc_qss[2] * x596 / x441 - sc_qss[3] * x325 / x441 + x1386);
  x441 =
    20000000.0 *
    exp(g_RT[0] + g_RT[17] - g_RT[1] - g_RT_qss[8] - 2012.8666632188799 * invT);
  x446 = ((x2023) * (x2023)) / ((x2027) * (x2027) * (x2027));
  x596 = x2023 / ((x2027) * (x2027));
  x22 = x22 / ((((x2023) * (x2023)) / ((x2027) * (x2027)) + 1.0) *
               (((x2023) * (x2023)) / ((x2027) * (x2027)) + 1.0));
  x1386 = x2 * x2029 * x2030 * x664;
  x1441 = 7.0e+44 * x10 * x1386 * x22;
  x1442 = x10 / ((x16 + 1.0) * (x16 + 1.0));
  x1469 =
    sc[14] * x2029 * exp(-145172.975918004 * invT - 18.18 * tc[0] - 2 * x2020);
  x1470 = exp(-94921.759670744301 * invT - 8.87 * tc[0] - x2020) / (x16 + 1.0);
  x15 = x2 * x2029 * x664 *
        exp(-145172.975918004 * invT - 18.18 * tc[0] + x15 - 2 * x2020);
  x428 = sc[14] * x1470 * x2029;
  x796 = 7.0e+44 * x10 * x22 * x428;
  x712 = 1.4e+45 * sc[14] * x1470 * x2029 - 1.4e+45 * x1386 +
         x1441 * (0.56 * x446 * x693 + 4.0 * x596 * x693) -
         1.225e+77 * x1442 * x1469 + 1.225e+77 * x1442 * x15 -
         x796 * (0.56 * x446 * x693 + 4.0 * x596 * x693);
  x615 = -40056.046598055698 * invT + 1.5 * tc[0];
  x718 = 117906976744186.0 * x10 *
         exp(-42446.325760628097 * invT - 3.42 * tc[0] - x615);
  x276 = log(
    0.068 * exp(-0.0050761421319797002 * tc[1]) +
    0.932 * exp(-0.00064935064935064902 * tc[1]) + exp(-10300.0 * invT));
  x553 = -0.29097730287517898 * x276 + 0.43429448190325198 * log(x718) - 0.4;
  x516 = -0.55155399201712996 * x276 - 0.14 * x553 + 0.75;
  x819 = exp(
    M_LN10 * (0.43429448190325198 * x276 /
              (1.0 + ((x553) * (x553)) / ((x516) * (x516)))));
  x840 =
    x819 * exp(-82502.372358683802 * invT - 1.92 * tc[0] - x615) / (x718 + 1.0);
  x846 = x819 / ((x718 + 1.0) * (x718 + 1.0));
  x211 = x10 * x1278 *
         exp(
           -g_RT[0] - g_RT[10] + g_RT[12] - 124948.698119312 * invT -
           5.34 * tc[0] - 2 * x615);
  x856 = sc[0] * sc[10] * x10 *
         exp(-124948.698119312 * invT - 5.34 * tc[0] - 2 * x615);
  x862 = ((x553) * (x553)) * x693 / ((x516) * (x516) * (x516));
  x871 = 0.56 * x862 + 4.0 * x553 * x693 / ((x516) * (x516));
  x120 = x819 *
         exp(
           -g_RT[0] - g_RT[10] + g_RT[12] - 82502.372358683802 * invT -
           1.92 * tc[0] - x615) /
         (x718 + 1.0);
  x878 = x120 * x1278;
  x882 = 5070000000000000.0 * x10 * x276 * x878 /
         ((1.0 + ((x553) * (x553)) / ((x516) * (x516))) *
          (1.0 + ((x553) * (x553)) / ((x516) * (x516))));
  x887 = sc[0] * sc[10] * x840;
  x89 = 5070000000000000.0 * x10 * x276 * x887 /
        ((1.0 + ((x553) * (x553)) / ((x516) * (x516))) *
         (1.0 + ((x553) * (x553)) / ((x516) * (x516))));
  x973 = -1.19557674418605e+30 * x211 * x846 +
         1.19557674418605e+30 * x846 * x856 - x871 * x882 + x871 * x89 +
         1.014e+16 * x878 - 1.014e+16 * x887;
  x982 = -5070000000000000.0 * sc[10] * x10 * x840 -
         73400000.0 * sc[10] * x1291 - 15000000.0 * sc[10] * x1428 -
         73400000.0 * sc[1] * x923 + 73400000.0 * sc[1] * x932 +
         15000000.0 * sc[2] * x1007 - 15000000.0 * sc[2] * x937 + x973;
  x1013 = exp(-4025.7333264377598 * invT);
  x287 = 0.17 * sc[20] * exp(-1253.00949785375 * invT + 2.5 * tc[0]);
  x1025 = sc_qss[3] * x483 + sc_qss[6] * x231;
  x267 = -x1025 - x1266;
  x1030 = 20000000.0 * x2044 * x267;
  x402 = 12.1 * exp(-2616.7266621845401 * invT + 2.0 * tc[0]);
  x19 = 16600000.0 * exp(-412.63766595986999 * invT);
  x35 = 0.05 *
        exp(-g_RT[0] + g_RT[1] - 3165.23282791169 * invT + 2.67 * tc[0] - x167);
  x416 = 23000.0 * exp(-1648.03458051046 * invT + 1.05 * tc[0]);
  x1181 = 660.0 * sc[9] * exp(-5454.8686573231598 * invT + 1.62 * tc[0]);
  x1185 = 0.5 * exp(
                  -g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[1] -
                  3638.25649376812 * invT + 2.0 * tc[0]);
  x63 = exp(-2.0 * tc[0]);
  x232 = 50.7 * exp(-6516.6558221711202 * invT + 1.93 * tc[0]);
  x692 =
    216.0 *
    exp(-g_RT[0] + g_RT[1] - 1726.0331637101899 * invT + 1.51 * tc[0] - x154);
  x903 = 115.0 * exp(-3789.2214935095399 * invT + 1.9 * tc[0]);
  x1212 = exp(-tc[0]);
  x766 = sc_qss[7] * x376;
  x759 = x553 * x693 / ((x516) * (x516));
  x773 = -5.9778837209302301e+29 * x211 * x846 +
         5.9778837209302301e+29 * x846 * x856 + 5070000000000000.0 * x878 -
         x882 * (2.0 * x759 + 0.28 * x862) - 5070000000000000.0 * x887 +
         x89 * (2.0 * x759 + 0.28 * x862);
  x786 = x22 * (0.28 * x446 * x693 + 2.0 * x596 * x693);
  x794 = -1000000.0 * sc[0] * x1387 + 1000000.0 * ((sc[1]) * (sc[1])) * x1212 +
         7.0e+44 * x10 * x1386 * x786 - 7.0e+44 * x10 * x428 * x786 -
         7.0e+44 * x1386 - 6.125e+76 * x1442 * x1469 + 6.125e+76 * x1442 * x15 +
         7.0e+44 * x428;
  x930 = sc_qss[2] * x637;
  x726 = -73400000.0 * sc[1] * x1005 + 73400000.0 * sc[1] * x1074 +
         15000000.0 * sc[2] * x1471 - 15000000.0 * sc[2] * x1481 +
         73400000.0 * x578;
  x934 =
    15000000.0 * sc[2] * x1482 - 15000000.0 * sc[2] * x961 + 15000000.0 * x595;
  x172 = 216.0 * sc[0] * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  x662 = -73400000.0 * sc[1] * x1750 + 73400000.0 * sc[1] * x1751 -
         15000000.0 * sc[2] * x1320 + 15000000.0 * sc[2] * x1564 -
         3.5867302325581401e+30 * x211 * x846 +
         3.5867302325581401e+30 * x846 * x856 + 3.042e+16 * x878 -
         x882 * (12.0 * x759 + 1.68 * x862) - 3.042e+16 * x887 +
         x89 * (12.0 * x759 + 1.68 * x862);
  x1215 = -x1649 * x2031 - x1649 * x2036 + x794;
  x1281 = 20000000.0 * sc[1] * x1885 + 1800000.0 * sc[1] * x2009 + x1215 +
          x1896 * x1959;
  x1288 = -73400000.0 * sc[1] * x1770 + 73400000.0 * sc[1] * x1772 +
          15000000.0 * sc[2] * x1580 - 15000000.0 * sc[2] * x476 + x773;
  x1433 = 660.0 * sc[1] * exp(-5454.8686573231598 * invT + 1.62 * tc[0]);
  x951 = 73400000.0 * sc[1] * x1742 - 73400000.0 * sc[1] * x1787 -
         15000000.0 * sc[2] * x1149 + 15000000.0 * sc[2] * x646 + x973;
  x125 = -5070000000000000.0 * sc[0] * x10 * x840 - 73400000.0 * sc[0] * x1291 -
         15000000.0 * sc[0] * x1428 - 73400000.0 * sc[1] * x1676 +
         73400000.0 * sc[1] * x1741 - 15000000.0 * sc[2] * x1037 +
         15000000.0 * sc[2] * x1590 - 8.9668255813953501e+29 * x211 * x846 +
         8.9668255813953501e+29 * x846 * x856 + 7605000000000000.0 * x878 -
         x882 * (3.0 * x759 + 0.42 * x862) - 7605000000000000.0 * x887 +
         x89 * (3.0 * x759 + 0.42 * x862);
  x94 = -73400000.0 * sc[1] * x1749 + 73400000.0 * sc[1] * x1814 -
        15000000.0 * sc[2] * x1047 + 15000000.0 * sc[2] * x963 + x973;
  x1221 = -73400000.0 * sc[1] * x1818 + 73400000.0 * sc[1] * x1819 +
          15000000.0 * sc[2] * x1640 - 15000000.0 * sc[2] * x1659 +
          5070000000000000.0 * x120 * x843;
  x146 = -1.79336511627907e+30 * x211 * x846 +
         1.79336511627907e+30 * x846 * x856 + 1.521e+16 * x878 -
         x882 * (6.0 * x759 + 0.84 * x862) - 1.521e+16 * x887 +
         x89 * (6.0 * x759 + 0.84 * x862);
  x762 = -73400000.0 * sc[1] * x1821 + 73400000.0 * sc[1] * x1823 +
         15000000.0 * sc[2] * x1663 - 15000000.0 * sc[2] * x1664 + x146;
  x353 = -3000000.0 * sc[0] * x1387 + 3000000.0 * ((sc[1]) * (sc[1])) * x1212 +
         20000000.0 * sc[1] * x1410 - 2.1e+45 * x1386 +
         x1441 * (0.84 * x446 * x693 + 6.0 * x596 * x693) -
         1.8375e+77 * x1442 * x1469 + 1.8375e+77 * x1442 * x15 + x1959 * x482 +
         2.1e+45 * x428 - x796 * (0.84 * x446 * x693 + 6.0 * x596 * x693);
  x1330 = -73400000.0 * sc[1] * x1828 + 73400000.0 * sc[1] * x1834 +
          15000000.0 * sc[2] * x1670 - 15000000.0 * sc[2] * x1679 + x146;
  x1360 = -73400000.0 * sc[1] * x1835 + 73400000.0 * sc[1] * x1836 +
          15000000.0 * sc[2] * x1680 - 15000000.0 * sc[2] * x1688 + x146;
  x1372 = -2000000.0 * sc[1] * x1957;
  x1507 = -90000000.0 * sc[1] * x1937 + x1937 * x2012 + x1957 * x2042;
  x900 =
    2000000.0 * sc[1] * x731 + x1372 + x1507 + x1761 * x2016 - x2042 * x731;
  x906 = -73400000.0 * sc[1] * x1761 - 15000000.0 * sc[2] * x1707 + x773;
  x777 = 70000000.0 * sc[0] * x1707 - 30000000.0 * sc[1] * x1707 + x906;
  x912 = 20000000.0 * sc[1] * x1885 + 1800000.0 * sc[1] * x2009 +
         x1082 * x1668 - x1092 * x2018 + x1092 * x2019 + x1668 * x601 + x777;
  x791 = 0.17 * sc[1] * exp(-1253.00949785375 * invT + 2.5 * tc[0]);
  x911 = -73400000.0 * sc[1] * x1761 + 73400000.0 * sc[1] * x1876 +
         15000000.0 * sc[2] * x1752 - 15000000.0 * sc[2] * x1757 + x773;
  x913 = 50000000.0 * sc[14] * x1007 - 50000000.0 * sc[14] * x937 +
         x2072 * x725 - x2072 * x790 + x2086 * x897 - x2086 * x908 +
         x2122 * x708;
  x914 = 94600000.0 * sc[12] * exp(259.15658288943098 * invT);
  x987 = x267 * x843 * exp(-7699.2149868121596 * invT - 15.22 * tc[0] + x203);
  x989 = exp(
           M_LN10 * (0.43429448190325198 * x209 /
                     (((x2181) * (x2181)) / ((x2182) * (x2182)) + 1.0))) /
         ((x204 + 1.0) * (x204 + 1.0));
  x992 = ((x2181) * (x2181)) / ((x2182) * (x2182) * (x2182));
  x188 = x2181 / ((x2182) * (x2182));
  x1510 = sc[17] * sc[1] * exp(x2180);
  x209 = 3.8e+29 * x10 * x209 * x2183 /
         ((((x2181) * (x2181)) / ((x2182) * (x2182)) + 1.0) *
          (((x2181) * (x2181)) / ((x2182) * (x2182)) + 1.0));
  x1519 = refC * x267 * exp(x203 + x2180);
  x1041 =
    sc[17] * sc[1] * x10 * exp(-7699.2149868121596 * invT - 15.22 * tc[0]);
  x31 = 8.7515151515151504e+50 * x1041 * x989 +
        x1510 * x209 * (4.0 * x188 * x693 + 0.56 * x693 * x992) -
        7.6e+29 * x1510 * x2183 -
        x1519 * x209 * (4.0 * x188 * x693 + 0.56 * x693 * x992) +
        7.6e+29 * x1519 * x2183 - 8.7515151515151504e+50 * x987 * x989;
  x1067 = 50000000.0 * sc[16] * x736 + 48000000.0 * sc[2] * x897 -
          48000000.0 * sc[2] * x908 + 20000000.0 * sc[4] * x708 +
          x1243 * x2184 - x1472 * x914 + x31 + x914 * x985;
  x1068 = 40000000.0 * sc[8] * x725 - 40000000.0 * sc[8] * x790 -
          60000000.0 * sc[9] * x1472 + 60000000.0 * sc[9] * x985 +
          x1007 * x2119 + x1054 * x170 + x2012 * x897 - x2012 * x908 -
          x2119 * x937 + x2132 * x756 - x2132 * x779;
  x783 = 5710000.0 * sc[5] * exp(379.92858268256299 * invT);
  x1521 = ((x2133) * (x2133)) * x693 / ((x2134) * (x2134) * (x2134));
  x620 = x613 / ((((x2133) * (x2133)) / ((x2134) * (x2134)) + 1.0) *
                 (((x2133) * (x2133)) / ((x2134) * (x2134)) + 1.0));
  x1530 = sc[12] * sc[1] * exp(x2126);
  x933 = 2.2e+18 * x10 * x1530 * x2135 * x620;
  x1531 = sc[12] * x854 * exp(-4287.4059926562095 * invT - 10.054 * tc[0]);
  x613 = exp(
           M_LN10 * (0.43429448190325198 * x613 /
                     (((x2133) * (x2133)) / ((x2134) * (x2134)) + 1.0))) /
         ((x607 + 1.0) * (x607 + 1.0));
  x433 = -x1411 - x930;
  x1543 = x433 * x843 * exp(-4287.4059926562095 * invT - 10.054 * tc[0] + x606);
  x606 = x433 * exp(x2126 + x606);
  x412 = 2.2e+18 * x2135 * x606 * x620 * x843;
  x1545 = 4.4e+18 * refC * x2135 * x606 - 4.4e+18 * x1530 * x2135 +
          1.79259259259259e+31 * x1531 * x613 -
          1.79259259259259e+31 * x1543 * x613 -
          x412 * (0.56 * x1521 + 4.0 * x2133 * x693 / ((x2134) * (x2134))) +
          x933 * (0.56 * x1521 + 4.0 * x2133 * x693 / ((x2134) * (x2134)));
  x1066 = 30000000.0 * sc[4] * x1007 + 20000000.0 * sc[4] * x725 -
          20000000.0 * sc[4] * x790 - 30000000.0 * sc[4] * x937 - x1472 * x783 +
          x1545 + x1879 * x2140 + x2013 * x578 - x2016 * x923 + x2016 * x932 +
          x783 * x985;
  x1484 = refC * exp(-g_RT[1] - 2.0 * tc[0] - x154);
  x1485 = sc[5] * x1484;
  x1515 = sc[1] * sc[4] * x63;
  x1547 = sc[2] * x743 - 30000000.0 * sc[2] * x923 + 30000000.0 * sc[2] * x932 +
          28000000.0 * sc[3] * x1007 - 28000000.0 * sc[3] * x937 +
          16060000000.0 * x1485 - 16060000000.0 * x1515;
  x576 = x578 * exp(-8554.6833186802305 * invT - tc[0]);
  x358 = exp(g_RT[1] - 8554.6833186802305 * invT - tc[0] - x163);
  x467 = sc[1] * x1248 * x358;
  x1552 = -57000000.0 * sc[2] * x1472 + 57000000.0 * sc[2] * x985 -
          x2025 * x923 + x2025 * x932 - 374000000000.0 * x467 +
          374000000000.0 * x576;
  x1559 =
    195039370078.74 * x10 * exp(-1035.1166815603121 * invT - 4.13 * tc[0]);
  x521 = log(
    0.217 * exp(-0.0135135135135135 * tc[1]) +
    0.783 * exp(-0.00034002040122407302 * tc[1]) + exp(-6964.0 * invT));
  x1572 = -0.29097730287517898 * x521 + 0.43429448190325198 * log(x1559) - 0.4;
  x558 = -0.14 * x1572 - 0.55155399201712996 * x521 + 0.75;
  x1468 = exp(
            M_LN10 * (0.43429448190325198 * x521 /
                      (((x1572) * (x1572)) / ((x558) * (x558)) + 1.0))) /
          ((x1559 + 1.0) * (x1559 + 1.0));
  x1483 = sc[1] * sc[8] * x10 * exp(-2262.965346123824 * invT - 8.89 * tc[0]);
  x272 = sc[9] * x843 *
         exp(-g_RT[1] - 2262.965346123824 * invT - 8.89 * tc[0] - x377);
  x1594 = exp(
            M_LN10 * (0.43429448190325198 * x521 /
                      (((x1572) * (x1572)) / ((x558) * (x558)) + 1.0))) /
          (x1559 + 1.0);
  x994 = -1227.8486645635121 * invT - 4.76 * tc[0];
  x1065 = sc[1] * sc[8] * x1594 * exp(x994);
  x292 = exp(-g_RT[1] - x377 + x994);
  x1652 = refC * sc[9] * x1594 * x292;
  x1655 = 2.477e+21 * x10 * x1065;
  x1658 = x1572 / ((x558) * (x558));
  x1674 = ((x1572) * (x1572)) / ((x558) * (x558) * (x558));
  x1233 = x521 / ((((x1572) * (x1572)) / ((x558) * (x558)) + 1.0) *
                  (((x1572) * (x1572)) / ((x558) * (x558)) + 1.0));
  x1263 = x1233 * (4.0 * x1658 * x693 + 0.56 * x1674 * x693);
  x1677 = 2.477e+21 * sc[9] * x1594 * x292 * x843;
  x1683 = -4.954e+21 * x1065 + x1263 * x1655 - x1263 * x1677 +
          9.6622503937007901e+32 * x1468 * x1483 -
          9.6622503937007901e+32 * x1468 * x272 + 4.954e+21 * x1652;
  x318 = 70000000.0 * sc[0] * x1007 - 70000000.0 * sc[0] * x937 + x1683 +
         x2019 * x725 - x2019 * x790 + 70000000.0 * x595 +
         0.5 * x675 * exp(-3638.25649376812 * invT + 2.0 * tc[0]);
  x1684 = x1101 * exp(-4159.08574287601 * invT - 8.07 * tc[0] + x1358 - x2150) /
          (x421 + 1.0);
  x1105 = x2118 / ((x388) * (x388));
  x1690 = ((x2118) * (x2118)) / ((x388) * (x388) * (x388));
  x426 = x426 / ((((x2118) * (x2118)) / ((x388) * (x388)) + 1.0) *
                 (((x2118) * (x2118)) / ((x388) * (x388)) + 1.0));
  x192 = 1.99e+29 * x2120 * x325 * x426 * x854;
  x1466 = x1101 / ((x421 + 1.0) * (x421 + 1.0));
  x525 =
    x325 * x854 * exp(-7523.0891537805601 * invT - 15.15 * tc[0] - 2 * x2150);
  x572 = x2069 *
         exp(
           -g_RT[1] + g_RT[8] - g_RT_qss[1] - 618.95649893980499 * invT -
           3.14 * tc[0]) /
         (x2064 + 1.0);
  x1539 = refC * sc[8] * x572;
  x1358 = x10 * x1355 *
          exp(-7523.0891537805601 * invT - 15.15 * tc[0] + x1358 - 2 * x2150);
  x574 = x2069 / ((x2064 + 1.0) * (x2064 + 1.0));
  x1631 = x675 * x854 * exp(-1237.91299787961 * invT - 5.48 * tc[0]);
  x917 = 1.99e+29 * x10 * x1355 * x1684 * x426;
  x827 = x2078 / ((x113 + 1.0) * (x113 + 1.0));
  x829 = x170 * x854 * exp(-3200.4579945180158 * invT - 7.99 * tc[0]);
  x919 = ((x2076) * (x2076)) / ((x2077) * (x2077) * (x2077));
  x927 = 4.0 * x2076 * x693 / ((x2077) * (x2077)) + 0.56 * x693 * x919;
  x118 = x118 / ((((x2076) * (x2076)) / ((x2077) * (x2077)) + 1.0) *
                 (((x2076) * (x2076)) / ((x2077) * (x2077)) + 1.0));
  x929 = x2078 * exp(x1184 + x2074) / (x113 + 1.0);
  x931 = 1.4e+18 * sc[14] * x118 * x843 * x929;
  x584 = x170 * x2078 * exp(x2074) / (x113 + 1.0);
  x997 = 1.4e+18 * x118 * x584 * x854;
  x1002 = x2095 * x578 * exp(x2091) / (x546 + 1.0);
  x1004 = x2095 / ((x546 + 1.0) * (x546 + 1.0));
  x1050 = x10 * x1278 * exp(-1565.003830652674 * invT - 5.62 * tc[0] + x1280);
  x1280 = x2095 * exp(x1280 + x2091) / (x546 + 1.0);
  x1053 = x1278 * x1280;
  x1010 = x2093 / ((x2094) * (x2094));
  x173 = ((x2093) * (x2093)) / ((x2094) * (x2094) * (x2094));
  x551 = x551 / ((((x2093) * (x2093)) / ((x2094) * (x2094)) + 1.0) *
                 (((x2093) * (x2093)) / ((x2094) * (x2094)) + 1.0));
  x1011 = 1350000000000.0 * x10 * x1053 * x551;
  x1184 =
    sc[14] * x843 * exp(-3200.4579945180158 * invT - 7.99 * tc[0] + x1184);
  x642 = x2067 * x693 / ((x2068) * (x2068));
  x316 = ((x2067) * (x2067)) * x693 / ((x2068) * (x2068) * (x2068));
  x265 = x265 / ((((x2067) * (x2067)) / ((x2068) * (x2068)) + 1.0) *
                 (((x2067) * (x2067)) / ((x2068) * (x2068)) + 1.0));
  x1058 = 3200000000000000.0 * sc[8] * x265 * x572 * x843;
  x443 = sc[1] * x2071 * x675;
  x150 = x578 * x854 * exp(-1565.003830652674 * invT - 5.62 * tc[0]);
  x444 = sc[1] * x2120 * x325;
  x569 = 3.6982248520710056e-40 *
         exp(
           M_LN10 * (0.43429448190325198 * x181 /
                     (((x2169) * (x2169)) / ((x2170) * (x2170)) + 1.0))) /
         ((x177 + 1.923076923076923e-20) * (x177 + 1.923076923076923e-20));
  x575 = sc[8] * x843 *
         exp(
           -g_RT[1] + g_RT[8] - g_RT_qss[1] - 1237.91299787961 * invT -
           5.48 * tc[0]);
  x730 = x2174 * x267 * x851;
  x788 = 3200000000000000.0 * x2071 * x265 * x675 * x854;
  x792 = x1259 * x2174;
  x990 = ((x2169) * (x2169)) / ((x2170) * (x2170) * (x2170));
  x922 = x2169 / ((x2170) * (x2170));
  x181 = x181 / ((((x2169) * (x2169)) / ((x2170) * (x2170)) + 1.0) *
                 (((x2169) * (x2169)) / ((x2170) * (x2170)) + 1.0));
  x177 = 5.2e+27 * x177 * x2174 * x267;
  x313 = sc[1] * x177 * x181;
  x688 = 5.2e+27 * x10 * x181 * x792;
  x587 = 1350000000000.0 * x1002 * x551 * x854;
  x253 = -3003.0964181894101 * invT - 12.0 * tc[0];
  x465 = x10 * exp(x253);
  x319 = log(exp(-0.00091190953857377404 * tc[1]) + exp(-6859.5 * invT));
  x602 = -0.29097730287517898 * x319 +
         0.43429448190325198 * log(6.65e+39 * x465) - 0.4;
  x650 = -0.55155399201712996 * x319 - 0.14 * x602 + 0.75;
  x729 = exp(
           M_LN10 * (0.43429448190325198 * x319 /
                     (((x602) * (x602)) / ((x650) * (x650)) + 1.0))) /
         (6.65e+39 * x465 + 1.0);
  x1079 = x729 * exp(-g_RT[19] - g_RT[1] + g_RT[20] + x253);
  x1719 = refC * sc[20] * x1079;
  x1769 = sc[19] * sc[1] * x729 * exp(x253);
  x1764 = 2.2612923285657754e-80 *
          exp(
            M_LN10 * (0.43429448190325198 * x319 /
                      (((x602) * (x602)) / ((x650) * (x650)) + 1.0))) /
          ((x465 + 1.5037593984962406e-40) * (x465 + 1.5037593984962406e-40));
  x1878 = sc[19] * x854 * exp(-6006.1928363788102 * invT - 24.0 * tc[0]);
  x993 = x602 / ((x650) * (x650));
  x916 = ((x602) * (x602)) / ((x650) * (x650) * (x650));
  x83 = x319 / ((((x602) * (x602)) / ((x650) * (x650)) + 1.0) *
                (((x602) * (x602)) / ((x650) * (x650)) + 1.0));
  x1950 = 1.33e+48 * sc[19] * sc[1] * x465 * x729;
  x1951 = 1.33e+48 * sc[20] * x1079 * x843;
  x780 = sc[20] * x843 *
         exp(
           -g_RT[19] - g_RT[1] + g_RT[20] - 6006.1928363788102 * invT -
           24.0 * tc[0]);
  x1048 = 2.66e+48 * x1719 + 1.7689e+88 * x1764 * x1878 -
          1.7689e+88 * x1764 * x780 - 2.66e+48 * x1769 +
          x1950 * x83 * (0.56 * x693 * x916 + 4.0 * x693 * x993) -
          x1951 * x83 * (0.56 * x693 * x916 + 4.0 * x693 * x993);
  x1967 = refC * exp(-g_RT[1] - tc[0] - x167);
  x1972 = sc[4] * x1967;
  x2006 = sc[1] * sc[2] * x1212;
  x639 = -2700000000000.0 * sc[1] * x1002 - 2.8e+18 * sc[1] * x584 -
         3.3440366972477102e+18 * x1004 * x1050 +
         3.3440366972477102e+18 * x1004 * x150 -
         x1011 * (4.0 * x1010 * x693 + 0.56 * x173 * x693) + x1048 +
         2700000000000.0 * x1053 - x1058 * (0.56 * x316 + 4.0 * x642) -
         6.4473684210526297e+29 * x1184 * x827 + 3.98e+29 * x1355 * x1684 -
         1.5201919385796501e+47 * x1358 * x1466 +
         1.5201919385796501e+47 * x1466 * x525 + 2.8e+18 * x1487 * x929 -
         5.408e+47 * x1504 * x569 + 6400000000000000.0 * x1539 +
         8.192e+20 * x1631 * x574 +
         x192 * (4.0 * x1105 * x693 + 0.56 * x1690 * x693) + 1000000.0 * x1972 -
         1000000.0 * x2006 + 5.408e+47 * x267 * x569 * x855 +
         x313 * (4.0 * x693 * x922 + 0.56 * x693 * x990) -
         6400000000000000.0 * x443 - 3.98e+29 * x444 - 8.192e+20 * x574 * x575 +
         x587 * (4.0 * x1010 * x693 + 0.56 * x173 * x693) -
         x688 * (4.0 * x693 * x922 + 0.56 * x693 * x990) - 1.04e+28 * x730 +
         x788 * (0.56 * x316 + 4.0 * x642) + 1.04e+28 * x792 +
         6.4473684210526297e+29 * x827 * x829 -
         x917 * (4.0 * x1105 * x693 + 0.56 * x1690 * x693) - x927 * x931 +
         x927 * x997;
  x1700 = -x1340 - x766;
  x1985 = exp(
            M_LN10 * (0.43429448190325198 * x351 /
                      (((x604) * (x604)) / ((x641) * (x641)) + 1.0))) *
          x9 / ((x2130 + 1.0) * (x2130 + 1.0));
  x1638 =
    sc[1] * sc[20] * x1985 * exp(-5404.19473907663 * invT - 13.32 * tc[0]);
  x341 =
    0.43429448190325198 * ((x604) * (x604)) / (((x641) * (x641) * (x641)) * x9);
  x2020 = 0.43429448190325198 * x604 / (((x641) * (x641)) * x9);
  x351 = x351 / ((((x604) * (x604)) / ((x641) * (x641)) + 1.0) *
                 (((x604) * (x604)) / ((x641) * (x641)) + 1.0));
  x16 = sc[1] * sc[20] * x2127 * x348 * x351 * x9;
  x2023 = refC * x1700 * exp(-5404.19473907663 * invT - 13.32 * tc[0] + x365);
  x2027 = 6.26e+26 * x1700 * x2127 * x351 * x367 * x9;
  x2064 = x16 * (4.0 * x2020 + 0.56 * x341) + 5.8928721804511299e+46 * x1638 +
          1.252e+27 * x1700 * x2127 * x367 -
          5.8928721804511299e+46 * x1985 * x2023 -
          x2027 * (4.0 * x2020 + 0.56 * x341) - 1.252e+27 * x2127 * x2275;
  x2067 = exp(g_RT[13] + g_RT[1] - g_RT_qss[6] + x2049) / (x81 + 1.0);
  x2068 = x10 / ((x81 + 1.0) * (x81 + 1.0));
  x2069 = -17385.743294553802 * invT - 8.42 * tc[0];
  x2074 = x1178 * x2015 * exp(g_RT[13] + g_RT[1] - g_RT_qss[6] + x2069);
  x113 = 2.3703703703703702 * ((x2050) * (x2050)) * x693 /
         ((-0.18666666666666668 * x2050 - 0.73540532269 * x86 + 1) *
          (-0.18666666666666668 * x2050 - 0.73540532269 * x86 + 1) *
          (-0.18666666666666668 * x2050 - 0.73540532269 * x86 + 1));
  x2050 = 1.7777777777777777 * x2050 * x693 /
          ((-0.18666666666666668 * x2050 - 0.73540532268950665 * x86 + 1) *
           (-0.18666666666666668 * x2050 - 0.73540532268950665 * x86 + 1));
  x2049 = x170 * x2015 * exp(x2049) / (x81 + 1.0);
  x81 = 2.565e+21 * x10 * x2049 * x86 / ((x2022) * (x2022));
  x2078 = x170 * x2015 * x2068 * exp(x2069);
  x86 = 2.565e+21 * x10 * x1178 * x2015 * x2067 * x86 / ((x2022) * (x2022));
  x2022 = -5.13e+21 * x1178 * x2015 * x2067 + 5.13e+21 * x2049 +
          3.4089248704663201e+34 * x2068 * x2074 -
          3.4089248704663201e+34 * x2078 - x81 * (0.56 * x113 + 4.0 * x2050) +
          x86 * (0.56 * x113 + 4.0 * x2050);
  x2091 = sc[1] * sc[3] * exp(-0.86 * tc[0]);
  x546 = -g_RT[1] - g_RT[3] + g_RT[6];
  x2093 = refC * sc[6] * exp(-0.86 * tc[0] + x546);
  x2094 = -2800000.0 * x2091 + 2800000.0 * x2093;
  x2095 = x325 * exp(x2124 + x399);
  x2150 = ((x2128) * (x2128)) / ((x2129) * (x2129) * (x2129));
  x421 = x2128 / ((x2129) * (x2129));
  x2118 = x405 / ((((x2128) * (x2128)) / ((x2129) * (x2129)) + 1.0) *
                  (((x2128) * (x2128)) / ((x2129) * (x2129)) + 1.0));
  x388 = 1.2e+30 * x2095 * x2118 * x2131 * x843;
  x1101 = sc[14] * sc[1] * x2131 * exp(x2124);
  x405 = exp(
           M_LN10 * (0.43429448190325198 * x405 /
                     (((x2128) * (x2128)) / ((x2129) * (x2129)) + 1.0))) /
         ((x400 + 1.0) * (x400 + 1.0));
  x400 =
    sc[14] * sc[1] * x10 * exp(-6098.9859895531999 * invT - 15.694 * tc[0]);
  x399 = x325 * x843 * exp(-6098.9859895531999 * invT - 15.694 * tc[0] + x399);
  x2128 =
    2.4e+30 * refC * x2095 * x2131 -
    2.4e+30 * sc[14] * sc[1] * x2131 * exp(x2124) +
    1.2e+30 * x10 * x1101 * x2118 * (0.56 * x2150 * x693 + 4.0 * x421 * x693) -
    x388 * (0.56 * x2150 * x693 + 4.0 * x421 * x693) -
    2.6666666666666702e+54 * x399 * x405 + 2.6666666666666702e+54 * x400 * x405;
  x2129 = exp(2.0 * g_RT[10] - g_RT[16] + g_RT[1] - g_RT[2]);
  x607 = refCinv * ((sc[10]) * (sc[10]));
  x2169 = refCinv * exp(
                      g_RT[11] + 2.0 * g_RT[1] - g_RT[3] - g_RT_qss[1] -
                      754.82499870708 * invT);
  x2170 = 10000000.0 * exp(-1811.57999689699 * invT);
  x204 = 16.32 * exp(
                   -g_RT[13] + g_RT[16] + g_RT[1] - g_RT[2] -
                   956.11166502896697 * invT + 2.0 * tc[0]);
  x2181 = 47.6 * exp(
                   -g_RT[10] + g_RT[11] + g_RT[1] - g_RT[4] -
                   35.225166606330397 * invT + 1.228 * tc[0]);
  x2182 = -30000000.0 * sc[11] * x1294 - sc[11] * x2181 -
          30000000.0 * sc[2] * x1005 + 30000000.0 * sc[2] * x1074;
  x2130 =
    exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[1] - 3019.29999482832 * invT);
  x604 = 1.5e+18 * exp(
                     g_RT[19] + g_RT[1] - g_RT[8] - g_RT_qss[6] -
                     9368.8878839522695 * invT - 2.83 * tc[0]);
  x641 = 50000000.0 * sc[14] * x1471 - 50000000.0 * sc[14] * x1481 -
         50000000.0 * sc[19] * x1423 - 20000000.0 * sc[19] * x2130 -
         20000000.0 * sc[19] * x2351 - 1.33e+48 * sc[19] * x465 * x729 -
         sc[19] * x604 + x1069 * x2086 - x1526 * x2086 + x1650 * x2122 +
         x2072 * x926 - x2072 * x936;
  x22 = 1.6e+16 * exp(-5625.96232369677 * invT - 2.39 * tc[0]);
  x615 = -sc[20] * x2127 * x348 * x9 - sc[20] * x22 + x2168 * x362 - x287;
  x718 = 94600000.0 * exp(
                        -g_RT[12] + g_RT[17] + g_RT[1] - g_RT_qss[0] +
                        259.15658288943098 * invT);
  x276 = 2.18e-10 * exp(
                      -g_RT[13] + g_RT[17] + g_RT[1] - g_RT[4] +
                      503.21666580471998 * invT + 4.5 * tc[0]);
  x553 = 1500.0 * exp(-1353.6528310147 * invT + 1.43 * tc[0]);
  x516 = exp(
    g_RT[17] + g_RT[1] - g_RT[20] - g_RT[2] + g_RT[8] -
    164.55184971814299 * invT + 1.65 * tc[0]);
  x819 =
    -3.8e+29 * sc[17] * x10 * x2183 * exp(x2180) - 50000000.0 * sc[17] * x1013 -
    48000000.0 * sc[17] * x1207 - 20000000.0 * sc[17] * x1217 -
    120.0 * sc[17] * x1238 * x516 - sc[17] * x276 - sc[17] * x553 -
    sc[17] * x718 + 48000000.0 * sc[2] * x1069 - 48000000.0 * sc[2] * x1526 +
    20000000.0 * sc[4] * x1650 + x1665 * x914 - x1692 * x914 + x207 * x2184;
  x973 = -2.565e+21 * refCinv * sc[13] * x10 * x2015 * x2067 -
         40000000.0 * sc[13] * x1145 + x1069 * x2021 - x1526 * x2021;
  x146 = 3970000.0 * exp(-337.65838275496702 * invT);
  x1559 = -sc[6] * x146 - sc[6] * x19 -
          70800000.0 * sc[6] * exp(-150.96499974141599 * invT);
  x521 = 16520000.0 * exp(-0.76 * tc[0]);
  x1572 = 26000000.0 * exp(-1.24 * tc[0]);
  x558 = 2800000.0 * sc[0] + 2100000.0 * sc[10] + 4200000.0 * sc[11] +
         4200000.0 * sc[15] + 2800000.0 * sc[9] + 2800000.0 * x4;
  x319 = 83000000.0 * exp(-7252.86180424342 * invT);
  x602 = -sc[21] * sc[3] * x1572 -
         300000000.0 * ((sc[3]) * (sc[3])) * exp(-1.72 * tc[0]) -
         sc[3] * sc[5] * x521 - sc[3] * x319 -
         sc[3] * x558 * exp(-0.86 * tc[0]);
  x650 =
    12000000.0 *
    exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[2] + 286.83349950869001 * invT);
  const amrex::Real x5459 =
    -1.2e+30 * sc[14] * x10 * x2131 * exp(x2124) - 40000000.0 * sc[14] * x1112 -
    60000000.0 * sc[14] * x1449 - sc[14] * x232 - sc[14] * x650 +
    40000000.0 * sc[8] * x926 - 40000000.0 * sc[8] * x936 +
    60000000.0 * sc[9] * x1665 - 60000000.0 * sc[9] * x1692 + x1069 * x2012 +
    x1471 * x2119 - x1481 * x2119 - x1526 * x2012 + x1560 * x2132 -
    x2132 * x423;
  const amrex::Real x5464 =
    5710000.0 *
    exp(g_RT[12] + g_RT[1] - g_RT[5] - g_RT_qss[0] + 379.92858268256299 * invT);
  const amrex::Real x5470 =
    84300000.0 * exp(g_RT[12] + g_RT[1] - g_RT[2] - g_RT[8]);
  const amrex::Real x5473 =
    -2.2e+18 * sc[12] * x10 * x2135 * exp(x2126) - 20000000.0 * sc[12] * x1097 -
    30000000.0 * sc[12] * x1412 - sc[12] * x416 - sc[12] * x5464 -
    sc[12] * x5470 + 30000000.0 * sc[4] * x1471 - 30000000.0 * sc[4] * x1481 +
    20000000.0 * sc[4] * x926 - 20000000.0 * sc[4] * x936 - x1005 * x2016 +
    x1074 * x2016 + x1665 * x783 - x1692 * x783 + x2140 * x609;
  const amrex::Real x5477 =
    -57000000.0 * sc[10] * x1446 + 57000000.0 * sc[2] * x1665 -
    57000000.0 * sc[2] * x1692 - 187000000000.0 * x10 * x1248 * x358 -
    x1005 * x2025 + x1074 * x2025;
  const amrex::Real x5478 = 16060000000.0 * sc[0] + 22000000000.0 * sc[11] +
                            80300000000.0 * sc[5] + 22000000000.0 * x1267;
  const amrex::Real x5480 = 28000000.0 * sc[3] * x1471 -
                            28000000.0 * sc[3] * x1481 - sc[4] * x35 -
                            sc[4] * x5478 * x63;
  const amrex::Real x5486 =
    70000000.0 * sc[0] * x1471 - 70000000.0 * sc[0] * x1481 -
    2.477e+21 * sc[8] * x10 * x1594 * exp(x994) - sc[8] * x1185 -
    70000000.0 * sc[8] * x1437 + x2019 * x926 - x2019 * x936;
  const amrex::Real x5489 = 22000000000.0 * x1485 - 22000000000.0 * x1515;
  amrex::Real x5495 = x1233 * (2.0 * x1658 * x693 + 0.28 * x1674 * x693);
  const amrex::Real x5498 = -2.477e+21 * x1065 +
                            4.83112519685039e+32 * x1468 * x1483 -
                            4.83112519685039e+32 * x1468 * x272 +
                            2.477e+21 * x1652 + x1655 * x5495 - x1677 * x5495;
  const amrex::Real x5499 = x2094 + x5489 + x5498;
  const amrex::Real x5502 =
    4.3757575757575802e+50 * x1041 * x989 +
    x1510 * x209 * (2.0 * x188 * x693 + 0.28 * x693 * x992) -
    3.8e+29 * x1510 * x2183 -
    x1519 * x209 * (2.0 * x188 * x693 + 0.28 * x693 * x992) +
    3.8e+29 * x1519 * x2183 - 4.3757575757575802e+50 * x987 * x989;
  amrex::Real x5520 =
    2.0 * x2076 * x693 / ((x2077) * (x2077)) + 0.28 * x693 * x919;
  x551 = x551 * (2.0 * x1010 * x693 + 0.28 * x173 * x693);
  const amrex::Real x5534 = x267 * x569 * x855;
  const amrex::Real x5551 =
    -1.33e+48 * sc[19] * sc[1] * x729 * exp(x253) + 1.33e+48 * x1719 +
    8.8445e+87 * x1764 * x1878 - 8.8445e+87 * x1764 * x780 +
    x1950 * x83 * (0.28 * x693 * x916 + 2.0 * x693 * x993) -
    x1951 * x83 * (0.28 * x693 * x916 + 2.0 * x693 * x993);
  const amrex::Real x5556 =
    2000000.0 * sc[0] * x1387 - 2000000.0 * ((sc[1]) * (sc[1])) * x1212 -
    1350000000000.0 * sc[1] * x1002 - 1.4e+18 * sc[1] * x584 -
    1350000000000.0 * x10 * x1053 * x551 +
    1350000000000.0 * x1002 * x551 * x854 -
    1.67201834862385e+18 * x1004 * x1050 + 1.67201834862385e+18 * x1004 * x150 +
    1350000000000.0 * x1053 - x1058 * (0.28 * x316 + 2.0 * x642) -
    3.2236842105263198e+29 * x1184 * x827 + 1.99e+29 * x1355 * x1684 -
    7.6009596928982695e+46 * x1358 * x1466 +
    7.6009596928982695e+46 * x1466 * x525 + 1.4e+18 * x1487 * x929 -
    2.704e+47 * x1504 * x569 + 3200000000000000.0 * x1539 +
    4.096e+20 * x1631 * x574 +
    x192 * (2.0 * x1105 * x693 + 0.28 * x1690 * x693) + 500000.0 * x1972 -
    500000.0 * x2006 + x313 * (2.0 * x693 * x922 + 0.28 * x693 * x990) -
    3200000000000000.0 * x443 - 1.99e+29 * x444 - x5520 * x931 + x5520 * x997 +
    2.704e+47 * x5534 + x5551 - 4.096e+20 * x574 * x575 -
    x688 * (2.0 * x693 * x922 + 0.28 * x693 * x990) - 5.2e+27 * x730 +
    x788 * (0.28 * x316 + 2.0 * x642) + 5.2e+27 * x792 +
    3.2236842105263198e+29 * x827 * x829 -
    x917 * (2.0 * x1105 * x693 + 0.28 * x1690 * x693);
  x351 =
    sc[1] * sc[20] * x2127 * x348 * x351 * x9 * (2.0 * x2020 + 0.28 * x341) -
    sc[1] * sc[20] * x2127 * x348 + 2.9464360902255599e+46 * x1638 -
    6.26e+26 * x1700 * x2127 * x351 * x367 * x9 * (2.0 * x2020 + 0.28 * x341) +
    6.26e+26 * x1700 * x2127 * x367 - 2.9464360902255599e+46 * x1985 * x2023;
  x2133 = x2133 * x693 / ((x2134) * (x2134));
  x2134 = 2.2e+18 * refC * x2135 * x606 - 2.2e+18 * x1530 * x2135 +
          8.9629629629629601e+30 * x1531 * x613 -
          8.9629629629629601e+30 * x1543 * x613 -
          x412 * (0.28 * x1521 + 2.0 * x2133) +
          x933 * (0.28 * x1521 + 2.0 * x2133);
  const amrex::Real x5566 = -187000000000.0 * x467 + 187000000000.0 * x576;
  const amrex::Real x5568 =
    -2.565e+21 * x1178 * x2015 * x2067 + 2.565e+21 * x2049 +
    1.70446243523316e+34 * x2068 * x2074 - 1.70446243523316e+34 * x2078 -
    x81 * (0.28 * x113 + 2.0 * x2050) + x86 * (0.28 * x113 + 2.0 * x2050);
  const amrex::Real x5572 =
    1.2e+30 * refC * x2095 * x2131 +
    1.2e+30 * x10 * x1101 * x2118 * (0.28 * x2150 * x693 + 2.0 * x421 * x693) -
    1.2e+30 * x1101 - x388 * (0.28 * x2150 * x693 + 2.0 * x421 * x693) -
    1.33333333333333e+54 * x399 * x405 + 1.33333333333333e+54 * x400 * x405;
  const amrex::Real x5574 = x2134 + x351 + x5566 + x5568 + x5572;
  const amrex::Real x5579 =
    3970000.0 *
    exp(-g_RT[1] + g_RT[2] + g_RT[5] - g_RT[6] - 337.65838275496702 * invT);
  const amrex::Real x5582 =
    83000000.0 * exp(-g_RT[1] + g_RT[4] - 7252.86180424342 * invT - x225);
  const amrex::Real x5621 = exp(-956.11166502896697 * invT + 2.0 * tc[0]);
  const amrex::Real x5632 =
    50000000.0 * sc[14] * x1482 - 50000000.0 * sc[14] * x961 + x1 * x2122 +
    x115 * x2086 - x1653 * x2086 + x2072 * x968 - x2072 * x995;
  const amrex::Real x5637 =
    120.0 * exp(-164.55184971814299 * invT + 1.65 * tc[0]);
  const amrex::Real x5639 =
    48000000.0 * sc[2] * x115 - 48000000.0 * sc[2] * x1653 + 48000000.0 * x170;
  const amrex::Real x5641 = sc[20] * x5637 + 20000000.0 * sc[4] * x1 +
                            x1753 * x914 - x1773 * x914 + x2184 * x220 + x5639;
  const amrex::Real x5649 =
    40000000.0 * sc[8] * x968 - 40000000.0 * sc[8] * x995 +
    60000000.0 * sc[9] * x1753 - 60000000.0 * sc[9] * x1773 + x1081 * x2132 +
    x115 * x2012 + x1482 * x2119 - x1653 * x2012 - x1718 * x2132 - x2119 * x961;
  const amrex::Real x5657 =
    30000000.0 * sc[4] * x1482 - 30000000.0 * sc[4] * x961 +
    20000000.0 * sc[4] * x968 - 20000000.0 * sc[4] * x995 + 84300000.0 * sc[8] +
    x1633 * x2016 + x1753 * x783 - x1773 * x783 - x2016 * x824 + x2140 * x624;
  const amrex::Real x5661 =
    30000000.0 * sc[2] * x1633 - 30000000.0 * sc[2] * x824 + 30000000.0 * x578;
  const amrex::Real x5662 = 57000000.0 * sc[2] * x1753 -
                            57000000.0 * sc[2] * x1773 + x1633 * x2025 -
                            x2025 * x824 + x5661 + 57000000.0 * x674;
  const amrex::Real x5710 =
    50000000.0 * sc[14] * x1535 - 50000000.0 * sc[14] * x1537 - x1000 * x2072 +
    x1654 * x2086 - x1685 * x2086 + x2072 * x999 + x2122 * x659;
  const amrex::Real x5715 =
    48000000.0 * sc[2] * x1654 - 48000000.0 * sc[2] * x1685 +
    20000000.0 * sc[4] * x659 + x1639 * x2184 + x1822 * x914 - x1838 * x914;
  const amrex::Real x5724 =
    -40000000.0 * sc[8] * x1000 + 40000000.0 * sc[8] * x999 +
    60000000.0 * sc[9] * x1822 - 60000000.0 * sc[9] * x1838 + x1535 * x2119 -
    x1537 * x2119 + x1654 * x2012 - x1685 * x2012 - x1739 * x2132 +
    x2132 * x250;
  const amrex::Real x5731 =
    -20000000.0 * sc[4] * x1000 + 30000000.0 * sc[4] * x1535 -
    30000000.0 * sc[4] * x1537 + 20000000.0 * sc[4] * x999 - x1656 * x2016 +
    x1672 * x2016 + x1822 * x783 - x1838 * x783 + x2140 * x998;
  const amrex::Real x5736 = 300000000.0 * exp(-1.72 * tc[0] + x546);
  const amrex::Real x5740 = refC * sc[6] * x5736 - sc[1] * sc[21] * x1572 -
                            600000000.0 * sc[1] * sc[3] * exp(-1.72 * tc[0]) -
                            sc[1] * sc[5] * x521 - sc[1] * x319 -
                            sc[1] * x558 * exp(-0.86 * tc[0]);
  const amrex::Real x5741 =
    -30000000.0 * sc[2] * x1656 + 30000000.0 * sc[2] * x1672;
  const amrex::Real x5747 =
    10000000.0 *
    exp(-g_RT[1] + g_RT[4] + g_RT[5] - g_RT[7] - 1811.57999689699 * invT);
  const amrex::Real x5750 =
    47.6 * sc[10] * exp(-35.225166606330397 * invT + 1.228 * tc[0]);
  const amrex::Real x5753 =
    sc[4] * exp(-g_RT[1] + 2.0 * g_RT[4] - g_RT[6] - 150.96499974141599 * invT);
  const amrex::Real x5805 =
    50000000.0 * sc[14] * x1385 - 50000000.0 * sc[14] * x1563 + x1006 * x2072 -
    x1008 * x2072 + x1701 * x2122 + x1708 * x2086 - x1745 * x2086;
  const amrex::Real x5811 =
    2.18e-10 * exp(503.21666580471998 * invT + 4.5 * tc[0]);
  const amrex::Real x5815 =
    sc[13] * x5811 + 48000000.0 * sc[2] * x1708 - 48000000.0 * sc[2] * x1745 +
    20000000.0 * sc[4] * x1701 - 20000000.0 * x1230 + x1743 * x2184 +
    x1824 * x914 - x1887 * x914 - 20000000.0 * x643;
  const amrex::Real x5823 =
    40000000.0 * sc[8] * x1006 - 40000000.0 * sc[8] * x1008 +
    60000000.0 * sc[9] * x1824 - 60000000.0 * sc[9] * x1887 + x1385 * x2119 -
    x1563 * x2119 + x1708 * x2012 - x1745 * x2012 - x1759 * x2132 +
    x1780 * x2132;
  const amrex::Real x5830 =
    20000000.0 * sc[4] * x1006 - 20000000.0 * sc[4] * x1008 +
    30000000.0 * sc[4] * x1385 - 30000000.0 * sc[4] * x1563 + x1678 * x2140 -
    x1686 * x2016 + x1824 * x783 - x1887 * x783 + x2016 * x548 +
    30000000.0 * x595;
  const amrex::Real x5834 =
    -30000000.0 * sc[2] * x1686 + 57000000.0 * sc[2] * x1824 -
    57000000.0 * sc[2] * x1887 + 30000000.0 * sc[2] * x548 - x1686 * x2025 +
    x2025 * x548;
  const amrex::Real x5837 = -sc[1] * x35 - sc[1] * x5478 * x63 +
                            28000000.0 * sc[3] * x1385 -
                            28000000.0 * sc[3] * x1563;
  x426 = x426 * (12.0 * x1105 * x693 + 1.68 * x1690 * x693);
  x265 = x265 * (1.68 * x316 + 12.0 * x642);
  const amrex::Real x5879 =
    12.0 * x2076 * x693 / ((x2077) * (x2077)) + 1.68 * x693 * x919;
  const amrex::Real x5929 =
    -50000000.0 * sc[14] * x1320 + 50000000.0 * sc[14] * x1564 + x1039 * x2072 -
    x1042 * x2072 + x1682 * x2122 + 7.98e+48 * x1719 + x1747 * x2086 -
    x1748 * x2086 + 5.3067e+88 * x1764 * x1878 - 5.3067e+88 * x1764 * x780 -
    7.98e+48 * x1769 + x1950 * x83 * (1.68 * x693 * x916 + 12.0 * x693 * x993) -
    x1951 * x83 * (1.68 * x693 * x916 + 12.0 * x693 * x993);
  const amrex::Real x5937 =
    48000000.0 * sc[2] * x1747 - 48000000.0 * sc[2] * x1748 +
    20000000.0 * sc[4] * x1682 + 2.6254545454545501e+51 * x1041 * x989 +
    x1510 * x209 * (12.0 * x188 * x693 + 1.68 * x693 * x992) -
    2.28e+30 * x1510 * x2183 -
    x1519 * x209 * (12.0 * x188 * x693 + 1.68 * x693 * x992) +
    2.28e+30 * x1519 * x2183 + x1763 * x2184 + x1956 * x914 - x1973 * x914 -
    2.6254545454545501e+51 * x987 * x989;
  const amrex::Real x5940 =
    x16 * (12.0 * x2020 + 1.68 * x341) + 1.7678616541353401e+47 * x1638 +
    3.756e+27 * x1700 * x2127 * x367 + x1880 * x2168 -
    1.7678616541353401e+47 * x1985 * x2023 -
    x2027 * (12.0 * x2020 + 1.68 * x341) - 3.756e+27 * x2127 * x2275;
  x2069 =
    -1.539e+22 * x1178 * x2015 * x2067 -
    1.0226774611399e+35 * x170 * x2015 * x2068 * exp(x2069) + x1747 * x2021 -
    x1748 * x2021 + 1.539e+22 * x2049 + 1.0226774611399e+35 * x2068 * x2074 -
    x81 * (1.68 * x113 + 12.0 * x2050) + x86 * (1.68 * x113 + 12.0 * x2050);
  const amrex::Real x5947 = 16520000.0 * exp(-0.76 * tc[0] + x546);
  const amrex::Real x5960 =
    7.2e+30 * refC * x2095 * x2131 + 40000000.0 * sc[8] * x1039 -
    40000000.0 * sc[8] * x1042 + 60000000.0 * sc[9] * x1956 -
    60000000.0 * sc[9] * x1973 +
    1.2e+30 * x10 * x1101 * x2118 * (1.68 * x2150 * x693 + 12.0 * x421 * x693) -
    7.2e+30 * x1101 - x1320 * x2119 + x1564 * x2119 + x1747 * x2012 -
    x1748 * x2012 + x1760 * x2132 - x1844 * x2132 -
    x388 * (1.68 * x2150 * x693 + 12.0 * x421 * x693) - 8.0e+54 * x399 * x405 +
    8.0e+54 * x400 * x405;
  x620 = 1.32e+19 * refC * x2135 * x606 + 20000000.0 * sc[4] * x1039 -
         20000000.0 * sc[4] * x1042 - 30000000.0 * sc[4] * x1320 +
         30000000.0 * sc[4] * x1564 +
         2.2e+18 * x10 * x1530 * x2135 * x620 * (1.68 * x1521 + 12.0 * x2133) -
         1.32e+19 * x1530 * x2135 + 5.3777777777777801e+31 * x1531 * x613 -
         5.3777777777777801e+31 * x1543 * x613 - x1750 * x2016 + x1751 * x2016 +
         x1871 * x2140 + x1956 * x783 - x1973 * x783 -
         2.2e+18 * x2135 * x606 * x620 * x843 * (1.68 * x1521 + 12.0 * x2133) +
         5710000.0 * x674 * exp(379.92858268256299 * invT);
  const amrex::Real x5975 =
    -30000000.0 * sc[2] * x1750 + 30000000.0 * sc[2] * x1751 +
    57000000.0 * sc[2] * x1956 - 57000000.0 * sc[2] * x1973 - x1750 * x2025 +
    x1751 * x2025 - 1122000000000.0 * x467 + 1122000000000.0 * x576;
  const amrex::Real x5979 = -28000000.0 * sc[3] * x1320 +
                            28000000.0 * sc[3] * x1564 + x1484 * x5478 +
                            80300000000.0 * x1485 - 80300000000.0 * x1515;
  const amrex::Real x5983 = x1233 * (12.0 * x1658 * x693 + 1.68 * x1674 * x693);
  const amrex::Real x5988 =
    1.4862e+22 * refC * sc[9] * x1594 * x292 - 70000000.0 * sc[0] * x1320 +
    70000000.0 * sc[0] * x1564 -
    1.4862e+22 * sc[1] * sc[8] * x1594 * exp(x994) + x1039 * x2019 -
    x1042 * x2019 + 2.8986751181102398e+33 * x1468 * x1483 -
    2.8986751181102398e+33 * x1468 * x272 + x1655 * x5983 - x1677 * x5983;
  const amrex::Real x6032 = -50000000.0 * sc[14] * x1440 +
                            50000000.0 * sc[14] * x921 + x1043 * x2072 -
                            x1045 * x2072 + x1755 * x2086 - x2086 * x227;
  const amrex::Real x6035 =
    48000000.0 * sc[2] * x1755 - 48000000.0 * sc[2] * x227;
  const amrex::Real x6042 = 26000000.0 * exp(-1.24 * tc[0] + x546);
  const amrex::Real x6044 = refC * sc[21] * x6042 + refC * sc[3] * x5736 +
                            refC * sc[5] * x5947 +
                            refC * x558 * exp(-0.86 * tc[0] + x546);
  const amrex::Real x6051 =
    40000000.0 * sc[8] * x1043 - 40000000.0 * sc[8] * x1045 +
    60000000.0 * sc[9] * x2014 - 60000000.0 * sc[9] * x2032 - x1440 * x2119 +
    x1755 * x2012 + x1865 * x2132 - x1867 * x2132 - x2012 * x227 + x2119 * x921;
  const amrex::Real x6053 =
    -sc[1] * x146 - sc[1] * x19 -
    70800000.0 * sc[1] * exp(-150.96499974141599 * invT);
  const amrex::Real x6060 =
    20000000.0 * sc[4] * x1043 - 20000000.0 * sc[4] * x1045 -
    30000000.0 * sc[4] * x1440 + 30000000.0 * sc[4] * x921 + x1408 * x2140 -
    x1756 * x2016 + x1768 * x2016 + x2014 * x783 - x2032 * x783;
  const amrex::Real x6064 =
    -30000000.0 * sc[2] * x1756 + 30000000.0 * sc[2] * x1768 +
    57000000.0 * sc[2] * x2014 - 57000000.0 * sc[2] * x2032 - x1756 * x2025 +
    x1768 * x2025;
  const amrex::Real x6068 = 20000000.0 * sc[4] * x1649 + x5502;
  const amrex::Real x6070 = x1649 * x2036 + x1649 * x2122 + x5556;
  const amrex::Real x6112 = 50000000.0 * sc[14] * x1580 -
                            50000000.0 * sc[14] * x476 + x1051 * x2072 -
                            x1052 * x2072 + x1767 * x2086 - x1812 * x2086;
  const amrex::Real x6115 =
    48000000.0 * sc[2] * x1767 - 48000000.0 * sc[2] * x1812;
  const amrex::Real x6117 = x1896 * x2184 + x6068;
  const amrex::Real x6129 =
    40000000.0 * sc[8] * x1051 - 40000000.0 * sc[8] * x1052 +
    60000000.0 * sc[9] * x2070 - 60000000.0 * sc[9] * x2087 + x1580 * x2119 +
    x1767 * x2012 - x1812 * x2012 - x1875 * x2132 + x1891 * x2132 -
    x2119 * x476;
  const amrex::Real x6136 =
    20000000.0 * sc[4] * x1051 - 20000000.0 * sc[4] * x1052 +
    30000000.0 * sc[4] * x1580 - 30000000.0 * sc[4] * x476 - x1770 * x2016 +
    x1772 * x2016 + x2070 * x783 - x2087 * x783;
  const amrex::Real x6137 =
    -30000000.0 * sc[2] * x1770 + 30000000.0 * sc[2] * x1772;
  const amrex::Real x6151 =
    -1800000.0 * sc[1] * x2009 + x2009 * x2168 - x2009 * x2194 + x351;
  const amrex::Real x6152 = -68000000.0 * sc[1] * x1885 -
                            90000000.0 * sc[1] * x1896 - x1896 * x1959 -
                            x1896 * x2175 + x6070 + x6151;
  const amrex::Real x6153 = x1885 * x2140 + x2134;
  const amrex::Real x6203 = x1056 * x2072 - x1059 * x2072 + x170 * x2075 +
                            x1813 * x2086 - x1833 * x2086;
  amrex::Real x6206 = 1500.0 * exp(
                                 g_RT[10] - g_RT[17] - g_RT[1] + g_RT[8] -
                                 1353.6528310147 * invT + 1.43 * tc[0]);
  const amrex::Real x6208 = 120.0 * refCinv * sc[17] * sc[1] * x516;
  const amrex::Real x6211 = sc[10] * x6206 + 48000000.0 * sc[2] * x1813 -
                            48000000.0 * sc[2] * x1833 + x1240 * x2184 +
                            x2080 * x914 - x2141 * x914 - x6208;
  const amrex::Real x6213 =
    1.6e+16 * exp(
                g_RT[14] - g_RT[1] - g_RT[20] + g_RT[8] -
                5625.96232369677 * invT - 2.39 * tc[0]);
  const amrex::Real x6226 =
    40000000.0 * sc[8] * x1056 - 40000000.0 * sc[8] * x1059 +
    60000000.0 * sc[9] * x2080 - 60000000.0 * sc[9] * x2141 + x1813 * x2012 -
    x1833 * x2012 + x1881 * x2132 - x1960 * x2132 + 12000000.0 * x2117 * x595 -
    x2119 * x315 + x2119 * x789 + 40000000.0 * x675;
  const amrex::Real x6234 =
    84300000.0 * sc[2] + 20000000.0 * sc[4] * x1056 -
    20000000.0 * sc[4] * x1059 - 30000000.0 * sc[4] * x315 +
    30000000.0 * sc[4] * x789 + x1641 * x2140 - x1779 * x2016 + x1782 * x2016 +
    x2080 * x783 - x2141 * x783;
  const amrex::Real x6235 =
    -30000000.0 * sc[2] * x1779 + 30000000.0 * sc[2] * x1782;
  const amrex::Real x6241 =
    -70000000.0 * sc[0] * x315 + 70000000.0 * sc[0] * x789 -
    2.477e+21 * sc[1] * x10 * x1594 * exp(x994) - sc[1] * x1185 -
    70000000.0 * sc[1] * x1437 + x1056 * x2019 - x1059 * x2019;
  const amrex::Real x6287 = x1060 * x2072 - x1062 * x2072 + x1758 * x2122 -
                            x1825 * x2086 + x1841 * x2086 + x2121 * x664;
  const amrex::Real x6293 = -48000000.0 * sc[2] * x1825 +
                            48000000.0 * sc[2] * x1841 +
                            20000000.0 * sc[4] * x1758 + x2184 * x858 -
                            x2186 * x914 + x31 + x649 * x914;
  const amrex::Real x6303 =
    40000000.0 * sc[8] * x1060 - 40000000.0 * sc[8] * x1062 -
    60000000.0 * sc[9] * x2186 + 60000000.0 * sc[9] * x649 - x1149 * x2119 -
    x1825 * x2012 + x1841 * x2012 + x1961 * x2132 - x1962 * x2132 +
    x2119 * x646 + 60000000.0 * x674;
  const amrex::Real x6311 =
    20000000.0 * sc[4] * x1060 - 20000000.0 * sc[4] * x1062 -
    30000000.0 * sc[4] * x1149 + 30000000.0 * sc[4] * x646 + x1545 +
    x1742 * x2016 - x1787 * x2016 + x2140 * x634 - x2186 * x783 + x649 * x783;
  const amrex::Real x6315 =
    30000000.0 * sc[2] * x1742 - 30000000.0 * sc[2] * x1787 -
    28000000.0 * sc[3] * x1149 + 28000000.0 * sc[3] * x646 +
    44000000000.0 * x1485 - 44000000000.0 * x1515;
  const amrex::Real x6318 =
    -57000000.0 * sc[2] * x2186 + 57000000.0 * sc[2] * x649 + x1742 * x2025 -
    x1787 * x2025 - 374000000000.0 * x467 + 374000000000.0 * x576;
  const amrex::Real x6320 =
    -70000000.0 * sc[0] * x1149 + 70000000.0 * sc[0] * x646 + x1060 * x2019 -
    x1062 * x2019 + 2.477e+21 * x1594 * x292 * x843 + x1683;
  const amrex::Real x6323 = -68000000.0 * sc[1] * x634 -
                            90000000.0 * sc[1] * x858 - x1959 * x858 -
                            x2175 * x858 + x639;
  const amrex::Real x6324 =
    47.6 * sc[4] * exp(-35.225166606330397 * invT + 1.228 * tc[0]);
  const amrex::Real x6331 = 3.0 * x1105 * x693 + 0.42 * x1690 * x693;
  x118 = x118 * (3.0 * x2076 * x693 / ((x2077) * (x2077)) + 0.42 * x693 * x919);
  x181 = x181 * (3.0 * x693 * x922 + 0.42 * x693 * x990);
  const amrex::Real x6402 = x83 * (0.42 * x693 * x916 + 3.0 * x693 * x993);
  const amrex::Real x6413 =
    -50000000.0 * sc[14] * x1037 + 50000000.0 * sc[14] * x1590 + x1064 * x2072 -
    x1071 * x2072 + 1.995e+48 * x1719 + 1.326675e+88 * x1764 * x1878 -
    1.326675e+88 * x1764 * x780 - 1.995e+48 * x1769 + x1830 * x2086 -
    x1831 * x2086 + x1950 * x6402 - x1951 * x6402 + x2122 * x311;
  x1638 = x16 * (3.0 * x2020 + 0.42 * x341) + 4.4196541353383503e+46 * x1638 +
          9.39e+26 * x1700 * x2127 * x367 -
          4.4196541353383503e+46 * x1985 * x2023 + x2011 * x2168 -
          x2027 * (3.0 * x2020 + 0.42 * x341) - 9.39e+26 * x2127 * x2275;
  const amrex::Real x6428 =
    48000000.0 * sc[2] * x1830 - 48000000.0 * sc[2] * x1831 +
    20000000.0 * sc[4] * x311 + sc[8] * x6206 +
    6.5636363636363603e+50 * x1041 * x989 +
    x1510 * x209 * (3.0 * x188 * x693 + 0.42 * x693 * x992) -
    5.7e+29 * x1510 * x2183 -
    x1519 * x209 * (3.0 * x188 * x693 + 0.42 * x693 * x992) +
    5.7e+29 * x1519 * x2183 + x174 * x2184 - x2271 * x914 + x914 * x946 -
    6.5636363636363603e+50 * x987 * x989;
  const amrex::Real x6431 =
    -3.8475e+21 * x1178 * x2015 * x2067 + x1830 * x2021 - x1831 * x2021 +
    3.8475e+21 * x2049 + 2.5566936528497398e+34 * x2068 * x2074 -
    2.5566936528497398e+34 * x2078 - x81 * (0.42 * x113 + 3.0 * x2050) +
    x86 * (0.42 * x113 + 3.0 * x2050);
  x388 =
    1.8e+30 * refC * x2095 * x2131 + 40000000.0 * sc[8] * x1064 -
    40000000.0 * sc[8] * x1071 - 60000000.0 * sc[9] * x2271 +
    60000000.0 * sc[9] * x946 +
    1.2e+30 * x10 * x1101 * x2118 * (0.42 * x2150 * x693 + 3.0 * x421 * x693) -
    x1037 * x2119 - 1.8e+30 * x1101 + x1590 * x2119 + x1830 * x2012 -
    x1831 * x2012 + x1968 * x2132 - x1969 * x2132 -
    x388 * (0.42 * x2150 * x693 + 3.0 * x421 * x693) - 2.0e+54 * x399 * x405 +
    2.0e+54 * x400 * x405;
  const amrex::Real x6455 =
    3.3e+18 * refC * x2135 * x606 - 30000000.0 * sc[4] * x1037 +
    20000000.0 * sc[4] * x1064 - 20000000.0 * sc[4] * x1071 +
    30000000.0 * sc[4] * x1590 - 3.3e+18 * x1530 * x2135 +
    1.3444444444444401e+31 * x1531 * x613 -
    1.3444444444444401e+31 * x1543 * x613 - x1676 * x2016 + x1741 * x2016 +
    x2140 * x722 - x2271 * x783 - x412 * (0.42 * x1521 + 3.0 * x2133) +
    x783 * x946 + x933 * (0.42 * x1521 + 3.0 * x2133);
  const amrex::Real x6457 = x1233 * (3.0 * x1658 * x693 + 0.42 * x1674 * x693);
  const amrex::Real x6464 = -70000000.0 * sc[0] * x1037 +
                            70000000.0 * sc[0] * x1590 + x1064 * x2019 -
                            3.7155e+21 * x1065 - x1071 * x2019 +
                            7.2466877952755894e+32 * x1468 * x1483 -
                            7.2466877952755894e+32 * x1468 * x272 +
                            3.7155e+21 * x1652 + x1655 * x6457 - x1677 * x6457;
  x358 = -187000000000.0 * refCinv * sc[1] * x10 * x358 -
         57000000.0 * sc[1] * x1446 - 30000000.0 * sc[2] * x1676 +
         30000000.0 * sc[2] * x1741 - 57000000.0 * sc[2] * x2271 +
         57000000.0 * sc[2] * x946 - x1676 * x2025 + x1741 * x2025 -
         280500000000.0 * x467 + 280500000000.0 * x576;
  const amrex::Real x6512 =
    -50000000.0 * sc[14] * x1047 + 50000000.0 * sc[14] * x963 + x1072 * x2072 -
    x1073 * x2072 - x1877 * x2086 + x2086 * x896 + x2122 * x707;
  x31 = -48000000.0 * sc[2] * x1877 + 48000000.0 * sc[2] * x896 +
        20000000.0 * sc[4] * x707 + x1480 * x914 + x2184 * x858 - x2323 * x914 +
        x31;
  const amrex::Real x6534 =
    40000000.0 * sc[8] * x1072 - 40000000.0 * sc[8] * x1073 +
    60000000.0 * sc[9] * x1480 - 60000000.0 * sc[9] * x2323 - x1047 * x2119 -
    x1877 * x2012 - x1970 * x2132 + x2012 * x896 + x2119 * x963 + x2128 +
    x2132 * x755;
  x1545 = -30000000.0 * sc[4] * x1047 + 20000000.0 * sc[4] * x1072 -
          20000000.0 * sc[4] * x1073 + 30000000.0 * sc[4] * x963 +
          x1480 * x783 + x1545 - x1749 * x2016 + x1814 * x2016 + x2140 * x634 -
          x2323 * x783;
  const amrex::Real x6546 =
    57000000.0 * sc[2] * x1480 - 30000000.0 * sc[2] * x1749 +
    30000000.0 * sc[2] * x1814 - 57000000.0 * sc[2] * x2323 - x1749 * x2025 +
    x1814 * x2025 - 374000000000.0 * x467 + 374000000000.0 * x576;
  x1683 = -70000000.0 * sc[0] * x1047 + 70000000.0 * sc[0] * x963 +
          x1072 * x2019 - x1073 * x2019 + x1683;
  const amrex::Real x6587 =
    -30000000.0 * sc[2] * x1818 + 30000000.0 * sc[2] * x1819;
  const amrex::Real x6593 = 50000000.0 * sc[14] * x1640 -
                            50000000.0 * sc[14] * x1659 + x1075 * x2072 +
                            x1886 * x2086 - x1897 * x2086 - x2072 * x671;
  const amrex::Real x6598 = 48000000.0 * sc[2] * x1886 -
                            48000000.0 * sc[2] * x1897 + x1453 * x914 +
                            x2184 * x229 - x2360 * x914 +
                            94600000.0 * x674 * exp(259.15658288943098 * invT);
  const amrex::Real x6607 =
    40000000.0 * sc[8] * x1075 - 40000000.0 * sc[8] * x671 +
    60000000.0 * sc[9] * x1453 - 60000000.0 * sc[9] * x2360 + x1640 * x2119 -
    x1659 * x2119 + x1886 * x2012 - x1897 * x2012 + x1971 * x2132 -
    x1979 * x2132;
  x2126 =
    -2.2e+18 * sc[1] * x10 * x2135 * exp(x2126) - 20000000.0 * sc[1] * x1097 -
    30000000.0 * sc[1] * x1412 - sc[1] * x416 - sc[1] * x5464 - sc[1] * x5470 +
    20000000.0 * sc[4] * x1075 + 30000000.0 * sc[4] * x1640 -
    30000000.0 * sc[4] * x1659 - 20000000.0 * sc[4] * x671 + x1453 * x783 +
    x1533 * x2140 - x1818 * x2016 + x1819 * x2016 - x2360 * x783;
  const amrex::Real x6658 = 50000000.0 * sc[14] * x1663 -
                            50000000.0 * sc[14] * x1664 + x1078 * x2072 -
                            x1080 * x2072 + x1522 * x2122 + x1860 * x2086;
  const amrex::Real x6665 =
    48000000.0 * sc[2] * x1860 - 48000000.0 * sc[2] * x1862 +
    20000000.0 * sc[4] * x1522 + sc[4] * x5811 - x1035 * x914 + x809 * x914;
  x1145 = -2.565e+21 * refCinv * sc[1] * x10 * x2015 * x2067 -
          40000000.0 * sc[1] * x1145 + x1860 * x2021 - x1862 * x2021;
  x2095 =
    3.6e+30 * refC * x2095 * x2131 +
    1.2e+30 * x10 * x1101 * x2118 * (0.84 * x2150 * x693 + 6.0 * x421 * x693) -
    3.6e+30 * x1101 -
    1.2e+30 * x2095 * x2118 * x2131 * x843 *
      (0.84 * x2150 * x693 + 6.0 * x421 * x693) -
    4.0e+54 * x399 * x405 + 4.0e+54 * x400 * x405;
  x2150 = 40000000.0 * sc[8] * x1078 - 40000000.0 * sc[8] * x1080 -
          60000000.0 * sc[9] * x1035 + 60000000.0 * sc[9] * x809 +
          x1663 * x2119 - x1664 * x2119 + x1860 * x2012 - x1862 * x2012 -
          x1884 * x2132 + x1987 * x2132 + x2095;
  x2135 = 6.6e+18 * refC * x2135 * x606 + x1410 * x2140 -
          6.6e+18 * x1530 * x2135 + 2.6888888888888901e+31 * x1531 * x613 -
          2.6888888888888901e+31 * x1543 * x613 -
          x412 * (0.84 * x1521 + 6.0 * x2133) +
          x933 * (0.84 * x1521 + 6.0 * x2133);
  x1521 = 20000000.0 * sc[4] * x1078 - 20000000.0 * sc[4] * x1080 +
          30000000.0 * sc[4] * x1663 - 30000000.0 * sc[4] * x1664 -
          x1035 * x783 - x1821 * x2016 + x1823 * x2016 + x2135 + x783 * x809;
  x1530 = -30000000.0 * sc[2] * x1821 + 30000000.0 * sc[2] * x1823 +
          28000000.0 * sc[3] * x1663 - 28000000.0 * sc[3] * x1664 +
          66000000000.0 * x1485 - 66000000000.0 * x1515;
  x933 = -57000000.0 * sc[2] * x1035 + 57000000.0 * sc[2] * x809 -
         x1821 * x2025 + x1823 * x2025 - 561000000000.0 * x467 +
         561000000000.0 * x576;
  x1531 = x1233 * (6.0 * x1658 * x693 + 0.84 * x1674 * x693);
  x613 = -7.431e+21 * x1065 + 1.4493375590551199e+33 * x1468 * x1483 -
         1.4493375590551199e+33 * x1468 * x272 + x1531 * x1655 - x1531 * x1677 +
         7.431e+21 * x1652;
  x1543 = 70000000.0 * sc[0] * x1663 - 70000000.0 * sc[0] * x1664 +
          x1078 * x2019 - x1080 * x2019 + x613;
  x2076 = 6.0 * x2076 * x693 / ((x2077) * (x2077)) + 0.84 * x693 * x919;
  x2077 = 6.0 * x1105 * x693 + 0.84 * x1690 * x693;
  x606 = x83 * (0.84 * x693 * x916 + 6.0 * x693 * x993);
  x412 = 3.99e+48 * x1719 + 2.65335e+88 * x1764 * x1878 -
         2.65335e+88 * x1764 * x780 - 3.99e+48 * x1769 + x1950 * x606 -
         x1951 * x606;
  x1178 = -7.695e+21 * x1178 * x2015 * x2067 + 7.695e+21 * x2049 +
          5.1133873056994796e+34 * x2068 * x2074 -
          5.1133873056994796e+34 * x2078 - x81 * (0.84 * x113 + 6.0 * x2050) +
          x86 * (0.84 * x113 + 6.0 * x2050);
  x2015 = 6000000.0 * sc[0] * x1387 - 6000000.0 * ((sc[1]) * (sc[1])) * x1212 -
          4050000000000.0 * sc[1] * x1002 - 68000000.0 * sc[1] * x1410 -
          90000000.0 * sc[1] * x482 - 4.2e+18 * sc[1] * x584 -
          5.0160550458715597e+18 * x1004 * x1050 +
          5.0160550458715597e+18 * x1004 * x150 -
          x1011 * (6.0 * x1010 * x693 + 0.84 * x173 * x693) +
          4050000000000.0 * x1053 - x1058 * (0.84 * x316 + 6.0 * x642) + x1178 -
          9.6710526315789494e+29 * x1184 * x827 + 5.97e+29 * x1355 * x1684 -
          2.2802879078694799e+47 * x1358 * x1466 +
          2.2802879078694799e+47 * x1466 * x525 + 4.2e+18 * x1487 * x929 -
          8.112e+47 * x1504 * x569 + 9600000000000000.0 * x1539 +
          1.2288e+21 * x1631 * x574 + x192 * x2077 - x1959 * x482 +
          1500000.0 * x1972 - 1500000.0 * x2006 - x2076 * x931 + x2076 * x997 -
          x2077 * x917 - x2175 * x482 +
          x313 * (6.0 * x693 * x922 + 0.84 * x693 * x990) + x412 -
          9600000000000000.0 * x443 - 5.97e+29 * x444 + 8.112e+47 * x5534 -
          1.2288e+21 * x574 * x575 +
          x587 * (6.0 * x1010 * x693 + 0.84 * x173 * x693) -
          x688 * (6.0 * x693 * x922 + 0.84 * x693 * x990) - 1.56e+28 * x730 +
          x788 * (0.84 * x316 + 6.0 * x642) + 1.56e+28 * x792 +
          9.6710526315789494e+29 * x827 * x829;
  x203 = 1.14e+30 * refC * x2183 * x267 * exp(x203 + x2180) +
         1.3127272727272701e+51 * x1041 * x989 +
         x1510 * x209 * (6.0 * x188 * x693 + 0.84 * x693 * x992) -
         1.14e+30 * x1510 * x2183 -
         x1519 * x209 * (6.0 * x188 * x693 + 0.84 * x693 * x992) +
         x2184 * x482 - 1.3127272727272701e+51 * x987 * x989;
  x987 = 30000000.0 * sc[1] * x1862 * x74 + 90000000.0 * sc[1] * x1862 +
         2000000.0 * sc[1] * x1884 - 80200000.0 * sc[2] * x1884 +
         x1862 * x2081 - x1862 * x2086 + x1884 * x2125 + x1884 * x2138 -
         x1884 * x2148 + x203 - 8400000.0 * x2091 + 8400000.0 * x2093;
  x989 = 50000000.0 * sc[14] * x1670 - 50000000.0 * sc[14] * x1679 +
         x1083 * x2072 - x1084 * x2072 + x1829 * x2122 + x1872 * x2086 +
         50000000.0 * x595 + 20000000.0 * x675 * exp(-3019.29999482832 * invT);
  x992 = -48000000.0 * sc[2] * x1862 + 48000000.0 * sc[2] * x1872;
  x188 = 20000000.0 * sc[4] * x1083 - 20000000.0 * sc[4] * x1084 +
         30000000.0 * sc[4] * x1670 - 30000000.0 * sc[4] * x1679 -
         x1118 * x783 + x1205 * x783 - x1828 * x2016 + x1834 * x2016 + x2135;
  x1510 = -30000000.0 * sc[2] * x1828 + 30000000.0 * sc[2] * x1834 +
          28000000.0 * sc[3] * x1670 - 28000000.0 * sc[3] * x1679 +
          66000000000.0 * x1485 - 66000000000.0 * x1515;
  x209 = -57000000.0 * sc[2] * x1118 + 57000000.0 * sc[2] * x1205 -
         x1828 * x2025 + x1834 * x2025 - 561000000000.0 * x467 +
         561000000000.0 * x576;
  x2124 = -1.2e+30 * sc[1] * x10 * x2131 * exp(x2124) -
          40000000.0 * sc[1] * x1112 - 60000000.0 * sc[1] * x1449 -
          sc[1] * x232 - sc[1] * x650 + 40000000.0 * sc[8] * x1083 -
          40000000.0 * sc[8] * x1084 - 60000000.0 * sc[9] * x1118 +
          60000000.0 * sc[9] * x1205 + x1670 * x2119 - x1679 * x2119 -
          x1862 * x2012 + x1872 * x2012 - x1884 * x2132 + x1947 * x2132 + x2095;
  x2131 = 50000000.0 * sc[14] * x1680 - 50000000.0 * sc[14] * x1688 +
          x1085 * x2072 - x1086 * x2072 + x1229 * x2122 - x1925 * x2086 +
          x2086 * x502;
  x1519 = -48000000.0 * sc[2] * x1925 + 48000000.0 * sc[2] * x502 +
          20000000.0 * sc[4] * x1229 + x203 + x216 * x914 - x894 * x914;
  x367 = 8.8393082706766904e+46 * sc[1] * sc[20] * x1985 *
           exp(-5404.19473907663 * invT - 13.32 * tc[0]) +
         x16 * (6.0 * x2020 + 0.84 * x341) + 1.878e+27 * x1700 * x2127 * x367 +
         x1716 * x2168 - 8.8393082706766904e+46 * x1985 * x2023 -
         x2027 * (6.0 * x2020 + 0.84 * x341) - 1.878e+27 * x2127 * x2275;
  x2275 = 40000000.0 * sc[8] * x1085 - 40000000.0 * sc[8] * x1086 +
          60000000.0 * sc[9] * x216 - 60000000.0 * sc[9] * x894 +
          x1680 * x2119 - x1688 * x2119 + x1837 * x2132 - x1882 * x2132 -
          x1925 * x2012 + x2012 * x502 + x2095;
  x1041 = 20000000.0 * sc[4] * x1085 - 20000000.0 * sc[4] * x1086 +
          30000000.0 * sc[4] * x1680 - 30000000.0 * sc[4] * x1688 -
          x1835 * x2016 + x1836 * x2016 + x2135 + x216 * x783 - x783 * x894;
  x1658 = -30000000.0 * sc[2] * x1835 + 30000000.0 * sc[2] * x1836 +
          28000000.0 * sc[3] * x1680 - 28000000.0 * sc[3] * x1688 +
          66000000000.0 * x1485 - 66000000000.0 * x1515;
  x576 = 57000000.0 * sc[2] * x216 - 57000000.0 * sc[2] * x894 - x1835 * x2025 +
         x1836 * x2025 - 561000000000.0 * x467 + 561000000000.0 * x576;
  x467 = -x1707 * x2008;
  x1674 = 40000000.0 * sc[8] * x1087 - 40000000.0 * sc[8] * x1088 -
          60000000.0 * sc[9] * x1070 + 60000000.0 * sc[9] * x955 +
          x1689 * x2119 + x1932 * x2012;
  x1233 = 20000000.0 * sc[4] * x1087 - 20000000.0 * sc[4] * x1088 +
          30000000.0 * sc[4] * x1689 - 30000000.0 * sc[4] * x1707 -
          x1070 * x783 - x1761 * x2016 + x1815 * x2016 + x6153 + x783 * x955;
  x919 = -30000000.0 * sc[2] * x1761;
  x1985 = -x1761 * x2025 + x5566;
  x341 = -48000000.0 * sc[2] * x1937;
  x2020 = 30000000.0 * sc[1] * x1937 * x74 + 90000000.0 * sc[1] * x1937 +
          2000000.0 * sc[1] * x1957 + x1937 * x2081 + x1957 * x2125 +
          x1957 * x2138 - x1957 * x2148;
  x16 = 73400000.0 * sc[1] * x1761 - x1761 * x2028 + x1761 * x2063 +
        x1761 * x2083 + x1761 * x2084 + x1761 * x571 - x1937 * x2086 + x2020;
  x2023 = -80200000.0 * sc[2] * x1957;
  x2027 = -x1957 * x2042;
  x2067 = -2000000.0 * sc[1] * x731 + 80200000.0 * sc[2] * x731 + x2023 +
          x2027 + x2042 * x731 - x2125 * x731 - x2138 * x731 + x2148 * x731;
  x2068 = -28000000.0 * sc[3] * x1707;
  x2074 = -x1937 * x2021 + x5568;
  x113 = -x1937 * x2012 - x1957 * x2132 + x5572;
  x2050 = x113 - x1707 * x2119 + x2132 * x731;
  x2049 = -50000000.0 * sc[14] * x1707 + 30000000.0 * sc[1] * x1707 -
          15000000.0 * sc[2] * x1707 - x1707 * x2085;
  x2180 = -3.8e+29 * sc[1] * x10 * x2183 * exp(x2180) -
          50000000.0 * sc[1] * x1013 - 48000000.0 * sc[1] * x1207 -
          20000000.0 * sc[1] * x1217 - 120.0 * sc[1] * x1238 * x516 -
          sc[1] * x276 - sc[1] * x553 - sc[1] * x718 +
          48000000.0 * sc[2] * x183 + 20000000.0 * sc[4] * x1945 +
          x2184 * x837 + x341 + x914 * x958;
  x2183 = -40000000.0 * sc[8] * x1092 - 60000000.0 * sc[9] * x1668;
  x81 = -70000000.0 * sc[0] * x1707 - x1092 * x2019;
  x2078 = -20000000.0 * sc[4] * x1092 - 30000000.0 * sc[4] * x1707 -
          x1668 * x783 - x1761 * x2016 + x6153;
  x86 = -57000000.0 * sc[2] * x1668 + x1985;
  x421 = -80000000.0 * sc[2] * x1092 - 30000000.0 * sc[4] * x1668 -
         30000000.0 * sc[8] * x1668 - x1082 * x1668 + x1092 * x2018 -
         x1092 * x2024 - x1092 * x2072 + x1092 * x2073 + x113 - x1668 * x601 -
         x1668 * x914 - x1707 * x2119 + x2049 + x2183;
  x2118 = -30000000.0 * sc[2] * x1870 + 30000000.0 * sc[2] * x1873;
  x1101 = 48000000.0 * sc[2] * x1946 + 20000000.0 * sc[4] * x65 - x1009 * x914 +
          x1057 * x914 + x1896 * x2184 + x5502;
  x405 = -50000000.0 * sc[1] * x1423 - 20000000.0 * sc[1] * x2130 -
         20000000.0 * sc[1] * x2351 - 1.33e+48 * sc[1] * x465 * x729 -
         sc[1] * x604 + x1161 * x2072 - x1167 * x2072 - x1937 * x2086 +
         x1946 * x2086 + x2122 * x65;
  x400 = 40000000.0 * sc[8] * x1161 - 40000000.0 * sc[8] * x1167 -
         60000000.0 * sc[9] * x1009 + 60000000.0 * sc[9] * x1057 + x113 +
         x1729 * x2119 + x1946 * x2012 - x2119 * x262 + x2132 * x655;
  x399 = 20000000.0 * sc[4] * x1161 - 20000000.0 * sc[4] * x1167 +
         30000000.0 * sc[4] * x1729 - 30000000.0 * sc[4] * x262 - x1009 * x783 +
         x1057 * x783 - x1870 * x2016 + x1873 * x2016;
  x2133 = -57000000.0 * sc[2] * x1009 + 57000000.0 * sc[2] * x1057 -
          x1870 * x2025 + x1873 * x2025 + x341;
  x348 = -sc[1] * x2127 * x348 * x9 - sc[1] * x22 + x1339 * x2168 + x351 - x791;
  x2095 = 50000000.0 * sc[14] * x1752 - 50000000.0 * sc[14] * x1757 +
          x1444 * x2072 - x1445 * x2072 + x1788 * x2086;
  x2135 = 40000000.0 * sc[8] * x1444 - 40000000.0 * sc[8] * x1445 -
          60000000.0 * sc[9] * x647 + 60000000.0 * sc[9] * x669 + x113 +
          x1752 * x2119 - x1757 * x2119 + x1788 * x2012 + x2132 * x731;
  const amrex::Real x7290 =
    20000000.0 * sc[4] * x1444 - 20000000.0 * sc[4] * x1445 +
    30000000.0 * sc[4] * x1752 - 30000000.0 * sc[4] * x1757 - x1761 * x2016 +
    x1876 * x2016 + x6153 - x647 * x783 + x669 * x783;
  const amrex::Real x7295 = 70000000.0 * sc[0] * x1752 -
                            70000000.0 * sc[0] * x1757 + x1444 * x2019 -
                            x1445 * x2019 + x5498;
  const amrex::Real x7298 = ((sc[2]) * (sc[2])) * x1212;
  const amrex::Real x7313 = refC * exp(-2.0 * g_RT[2] + g_RT[3] - tc[0]);
  const amrex::Real x7314 = sc[3] * x7313;
  const amrex::Real x7326 = exp(-1509.64999741416 * invT);
  const amrex::Real x7328 = sc[10] * sc[2] * x7326;
  const amrex::Real x7330 =
    refC * exp(-g_RT[10] + g_RT[11] - g_RT[2] - 1509.64999741416 * invT);
  const amrex::Real x7331 = sc[11] * x7330;
  const amrex::Real x7344 = x2258 * x897 - x2258 * x908 - x2269 * x923 +
                            x2269 * x932 + x2270 * x725 - x2270 * x790;
  const amrex::Real x7376 = 500000.0 * x1972 - 500000.0 * x2006 -
                            240000.0 * x7298 + 240000.0 * x7314 -
                            602.0 * x7328 + 602.0 * x7331;
  const amrex::Real x7386 = -x1005 * x2269 + x1069 * x2258 + x1074 * x2269 -
                            x1526 * x2258 + x2270 * x926 - x2270 * x936;
  const amrex::Real x7388 =
    9.63 * exp(-2012.8666632188799 * invT + 2.0 * tc[0]);
  x225 =
    2500000.0 * exp(-g_RT[10] + g_RT[11] - 24053.756625465601 * invT - x225);
  const amrex::Real x7396 =
    1020.0 * exp(-4327.6633259205901 * invT + 1.5 * tc[0]);
  const amrex::Real x7402 = 1204.0 * sc[0] + 903.0 * sc[10] + 2107.0 * sc[11] +
                            602.0 * sc[21] + 3612.0 * sc[3] + 3612.0 * sc[5] +
                            602.0 * x4 + 602.0 * x5;
  x4 = 2.4 * sc[0] + 1.75 * sc[10] + 3.6 * sc[11] + sc[21] + sc[3] +
       15.4 * sc[5] + x4 + x5;
  x5 = 180000.0 * sc[20] * exp(-2958.91399493175 * invT + 0.7 * tc[0]);
  const amrex::Real x7438 =
    -sc[20] * x5637 -
    35.0 * sc[20] * exp(489.12659916218797 * invT + 1.65 * tc[0]) - x5;
  const amrex::Real x7441 =
    89.8 * exp(-2863.3028284288498 * invT + 1.92 * tc[0]);
  const amrex::Real x7448 = 1750000.0 * exp(-679.34249883637199 * invT);
  const amrex::Real x7450 =
    -10000000.0 * sc[17] * x1013 - sc[17] * x7448 + x2172 * x968 - x2172 * x995;
  const amrex::Real x7452 = exp(
    g_RT[2] - 2.0 * g_RT[4] + g_RT[5] + 1061.78716484796 * invT + 2.4 * tc[0]);
  const amrex::Real x7459 =
    15.1 * exp(-1882.0303301096501 * invT + 1.91 * tc[0]);
  const amrex::Real x7469 = -sc[14] * x7459 - 19.584 * sc[14] * exp(x2260) +
                            x115 * x2258 + x1633 * x2269 - x1653 * x2258 -
                            x2269 * x824 + x2270 * x968 - x2270 * x995;
  const amrex::Real x7471 = 39000000.0 * exp(-1781.38699694871 * invT);
  const amrex::Real x7476 =
    2500000.0 * sc[10] * exp(-24053.756625465601 * invT);
  const amrex::Real x7478 = 20000000.0 * sc[4] * exp(-x1367 - x167);
  const amrex::Real x7496 = 30830000.0 * exp(-14492.6399751759 * invT);
  const amrex::Real x7521 = -x1000 * x2270 + x1654 * x2258 - x1656 * x2269 +
                            x1672 * x2269 - x1685 * x2258 + x2270 * x999;
  const amrex::Real x7522 =
    9.63 * exp(-2012.8666632188799 * invT + 2.0 * tc[0] - x1210 - x167);
  const amrex::Real x7525 =
    1020.0 *
    exp(g_RT[8] - g_RT[9] - 4327.6633259205901 * invT + 1.5 * tc[0] - x167);
  const amrex::Real x7528 =
    180000.0 *
    exp(g_RT[19] - g_RT[20] - 2958.91399493175 * invT + 0.7 * tc[0] - x167);
  const amrex::Real x7530 = 20000000.0 * sc[3] * exp(-x1367 - x167);
  const amrex::Real x7531 = sc[4] * exp(1061.78716484796 * invT + 2.4 * tc[0]);
  const amrex::Real x7548 =
    exp(g_RT[17] - g_RT_qss[8] - 2012.8666632188799 * invT - x167);
  x167 =
    10000000.0 * exp(g_RT[16] - g_RT[17] - 4025.7333264377598 * invT - x167);
  const amrex::Real x7575 = x1006 * x2270 - x1008 * x2270 - x1686 * x2269 +
                            x170 * x2257 + x1708 * x2258 - x1745 * x2258 +
                            x2269 * x548;
  const amrex::Real x7615 = x1039 * x2270 - x1042 * x2270 + x1747 * x2258 -
                            x1748 * x2258 - x1750 * x2269 + x1751 * x2269;
  const amrex::Real x7643 = -100000000.0 * sc[2] * x1649 + x7376;
  const amrex::Real x7653 = x1043 * x2270 - x1045 * x2270 + x1755 * x2258 -
                            x1756 * x2269 + x1768 * x2269 - x2258 * x227;
  const amrex::Real x7685 = -10000000.0 * sc[2] * x1885 -
                            96000000.0 * sc[2] * x2009 - x1885 * x2283 -
                            x1896 * x397 - x1896 * x801 + x7643;
  const amrex::Real x7695 = x1051 * x2270 - x1052 * x2270 + x1767 * x2258 -
                            x1770 * x2269 + x1772 * x2269 - x1812 * x2258;
  const amrex::Real x7737 = x1056 * x2270 - x1059 * x2270 - x1779 * x2269 +
                            x1782 * x2269 + x1813 * x2258 - x1833 * x2258 +
                            x2261 * x578;
  const amrex::Real x7768 =
    -10000000.0 * sc[2] * x634 - x2283 * x634 - x397 * x858 - x801 * x858;
  const amrex::Real x7775 = x1060 * x2270 - x1062 * x2270 + x1742 * x2269 -
                            x1787 * x2269 - x1825 * x2258 + x1841 * x2258;
  const amrex::Real x7776 = 2500000.0 * sc[3] * exp(-24053.756625465601 * invT);
  const amrex::Real x7819 = x1064 * x2270 - x1071 * x2270 - x1676 * x2269 +
                            x1741 * x2269 + x1830 * x2258 - x1831 * x2258;
  const amrex::Real x7857 = x1072 * x2270 - x1073 * x2270 - x1749 * x2269 +
                            x1814 * x2269 - x1877 * x2258 + x2258 * x896;
  const amrex::Real x7896 = x1075 * x2270 - x1818 * x2269 + x1819 * x2269 +
                            x1886 * x2258 - x1897 * x2258 - x2270 * x671 +
                            x244 * x675;
  const amrex::Real x7930 = -10000000.0 * sc[2] * x1410 - x1410 * x2283 +
                            1500000.0 * x1972 - 1500000.0 * x2006 -
                            x397 * x482 - x482 * x801 - 720000.0 * x7298 +
                            720000.0 * x7314 - 1806.0 * x7328 + 1806.0 * x7331;
  const amrex::Real x7931 = 96000000.0 * sc[2] * x1862 +
                            96240000.0 * sc[2] * x1884 - x1862 * x2246 -
                            x1862 * x2258 - x1884 * x2284 + x7930;
  const amrex::Real x7937 = x1078 * x2270 - x1080 * x2270 - x1821 * x2269 +
                            x1823 * x2269 + x1860 * x2258;
  const amrex::Real x7966 = -sc[2] * x7459 - 19.584 * sc[2] * exp(x2260) +
                            x1083 * x2270 - x1084 * x2270 - x1828 * x2269 +
                            x1834 * x2269 + x1872 * x2258;
  const amrex::Real x7998 = x1085 * x2270 - x1086 * x2270 - x1835 * x2269 +
                            x1836 * x2269 - x1925 * x2258 + x2258 * x502;
  const amrex::Real x8017 = -x1957 * x2278;
  amrex::Real x8023 = 60000000.0 * sc[2] * x1761 + 96000000.0 * sc[2] * x1937 +
                      96240000.0 * sc[2] * x1957 - x1761 * x2063 -
                      x1761 * x2083 + x1761 * x2256 - x1937 * x2246 -
                      x1957 * x2284;
  const amrex::Real x8024 =
    -96240000.0 * sc[2] * x731 + x2278 * x731 + x2284 * x731 + x8017 + x8023;
  const amrex::Real x8027 = -x1761 * x2177;
  const amrex::Real x8037 = -x1761 * x2269 - x1937 * x2258;
  const amrex::Real x8059 = -x1092 * x2176;
  const amrex::Real x8060 =
    -10000000.0 * sc[2] * x1885 - 96000000.0 * sc[2] * x2009 - x1885 * x2283;
  const amrex::Real x8063 = -x1092 * x2172;
  const amrex::Real x8065 = -x1092 * x2270 + x8037;
  x8023 = 80000000.0 * sc[2] * x1092 + 57000000.0 * sc[2] * x1668 +
          30000000.0 * sc[2] * x1707 - 33000000.0 * sc[3] * x1668 -
          x1092 * x2179 + x7643 + x8023;
  const amrex::Real x8117 = x1161 * x2270 - x1167 * x2270 - x1870 * x2269 +
                            x1873 * x2269 - x1937 * x2258 + x1946 * x2258;
  const amrex::Real x8129 =
    180000.0 * sc[2] * exp(-2958.91399493175 * invT + 0.7 * tc[0]);
  const amrex::Real x8130 =
    -sc[2] * x5637 -
    35.0 * sc[2] * exp(489.12659916218797 * invT + 1.65 * tc[0]) - x8129;
  const amrex::Real x8180 = 300000.0 * sc[6] * x756 - 300000.0 * sc[6] * x779;
  const amrex::Real x8202 = 120000.0 * x7298 - 120000.0 * x7314;
  const amrex::Real x8209 = 300000.0 * sc[6] * x1560 - 300000.0 * sc[6] * x423;
  const amrex::Real x8236 = 300000.0 * sc[6] * x1081 - 300000.0 * sc[6] * x1718;
  const amrex::Real x8239 = exp(-429.747032597231 * invT);
  const amrex::Real x8243 = 1000000.0 * exp(-x1367 - x377);
  const amrex::Real x8246 = 2660000.0 * exp(-g_RT[19] + g_RT[20] - x1367);
  x1367 = 46400000.0 * exp(251.60833290235999 * invT - x1367 - x154);
  const amrex::Real x8288 =
    exp(g_RT[3] - 2.0 * g_RT[6] + g_RT[7] - 6038.59998965664 * invT);
  const amrex::Real x8291 =
    exp(g_RT[3] - 2.0 * g_RT[6] + g_RT[7] + 820.24316526169298 * invT);
  const amrex::Real x8293 = -300000.0 * sc[6] * x1739 + 300000.0 * sc[6] * x250;
  const amrex::Real x8297 = 42200000.0 * exp(-30595.573280927001 * invT);
  const amrex::Real x8302 = 100000000.0 * exp(-20128.666632188801 * invT);
  const amrex::Real x8306 = 36000.0 * exp(-4498.7569922941902 * invT);
  const amrex::Real x8309 = exp(
    2.0 * g_RT[10] - g_RT[16] - g_RT[3] + g_RT[4] - 429.747032597231 * invT);
  const amrex::Real x8330 = 46400000.0 * exp(251.60833290235999 * invT);
  const amrex::Real x8340 =
    36000.0 *
    exp(g_RT[12] - g_RT[3] + g_RT[4] - g_RT[8] - 4498.7569922941902 * invT);
  const amrex::Real x8345 =
    -300000.0 * sc[6] * x1759 + 300000.0 * sc[6] * x1780;
  const amrex::Real x8375 = 300000.0 * sc[6] * x1760 - 300000.0 * sc[6] * x1844;
  x163 = 7600000.0 * exp(-201.28666632188799 * invT - x102 - x163);
  const amrex::Real x8390 =
    1.34 *
    exp(
      g_RT[13] - g_RT_qss[6] + 192.93326966953001 * invT + 1.61 * tc[0] - x102);
  x102 = 4.28e-19 * exp(
                      g_RT[12] - g_RT_qss[4] + 1776.3548302906599 * invT +
                      7.6 * tc[0] - x102);
  const amrex::Real x8411 =
    300000.0 * sc[6] * x1865 - 300000.0 * sc[6] * x1867 + 300000.0 * x325;
  const amrex::Real x8412 =
    260000.0 * sc[6] * exp(820.24316526169298 * invT) +
    840000000.0 * sc[6] * exp(-6038.59998965664 * invT) + x8411;
  const amrex::Real x8415 = -10000000.0 * sc[3] * x1649 + x2094 + x8202;
  const amrex::Real x8440 =
    -300000.0 * sc[6] * x1875 + 300000.0 * sc[6] * x1891;
  const amrex::Real x8447 = -10000000.0 * sc[3] * x1649 -
                            158000.0 * sc[3] * x1896 - 90000.0 * sc[3] * x2009 +
                            x1885 * x2283 - x1885 * x823 + x1896 * x397 + x8202;
  const amrex::Real x8478 = 300000.0 * sc[6] * x1881 - 300000.0 * sc[6] * x1960;
  const amrex::Real x8507 = 300000.0 * sc[6] * x1961 - 300000.0 * sc[6] * x1962;
  const amrex::Real x8541 = 300000.0 * sc[6] * x1968 - 300000.0 * sc[6] * x1969;
  const amrex::Real x8568 = -300000.0 * sc[6] * x1970 + 300000.0 * sc[6] * x755;
  const amrex::Real x8595 = 300000.0 * sc[6] * x1971 - 300000.0 * sc[6] * x1979;
  const amrex::Real x8623 =
    -300000.0 * sc[6] * x1884 + 300000.0 * sc[6] * x1987;
  const amrex::Real x8629 = -158000.0 * sc[3] * x482 + x1410 * x2283 -
                            x1410 * x823 + x397 * x482 + 360000.0 * x7298 -
                            360000.0 * x7314;
  const amrex::Real x8630 = 20000.0 * sc[3] * x1884 + x1862 * x2171 +
                            x1862 * x2246 + x1862 * x2250 - 8400000.0 * x2091 +
                            8400000.0 * x2093 + x8629;
  const amrex::Real x8647 =
    -300000.0 * sc[6] * x1884 + 300000.0 * sc[6] * x1947;
  const amrex::Real x8673 = 300000.0 * sc[6] * x1837 - 300000.0 * sc[6] * x1882;
  const amrex::Real x8700 = 20000.0 * sc[3] * x1957 - x1761 * x2256 +
                            x1761 * x2266 - x1761 * x2317 - x1761 * x984 +
                            x1937 * x2171 + x1937 * x2246 + x1937 * x2250;
  const amrex::Real x8704 = -x1687 * x1761;
  const amrex::Real x8709 = -x1548 * x1937;
  const amrex::Real x8710 = -300000.0 * sc[6] * x1957;
  const amrex::Real x8711 = 300000.0 * sc[6] * x731 + x8710;
  const amrex::Real x8727 = 33000000.0 * sc[3] * x1668 +
                            40000000.0 * sc[3] * x1707 -
                            90000.0 * sc[3] * x2009 - x1092 * x2267 +
                            x1092 * x282 + x1885 * x2283 - x1885 * x823;
  const amrex::Real x8806 =
    11.3 *
    exp(
      g_RT_qss[0] - g_RT_qss[1] - 1509.64999741416 * invT + 2.0 * tc[0] - x154);
  const amrex::Real x8807 = sc[5] * x8806;
  const amrex::Real x8835 =
    10000000.0 * sc[2] * x1879 + 24000000.0 * sc[6] * x1636 +
    20000000.0 * sc[6] * x725 - 20000000.0 * sc[6] * x790 - x2245 * x923 +
    x2245 * x932 - x2322 * x756 + x2322 * x779 - x897 * x948 + x908 * x948;
  const amrex::Real x8840 = 32000000.0 * sc[1] * x1879 + x1007 * x2259 +
                            x2253 * x725 - x2253 * x790 - x2259 * x937;
  amrex::Real x8845 = log(
    0.2654 * exp(-0.010638297872340399 * tc[1]) +
    0.7346 * exp(-0.000569476082004556 * tc[1]) + exp(-5182.0 * invT));
  amrex::Real x8847 =
    0.0310810810810811 * x10 * exp(855.46833186802303 * invT - 0.53 * tc[0]);
  amrex::Real x8848 =
    -0.29097730287517898 * x8845 + 0.43429448190325198 * log(x8847) - 0.4;
  amrex::Real x8849 = -0.55155399201712996 * x8845 - 0.14 * x8848 + 0.75;
  const amrex::Real x8855 =
    exp(
      M_LN10 * (0.43429448190325198 * x8845 /
                (((x8848) * (x8848)) / ((x8849) * (x8849)) + 1.0))) /
    (x8847 + 1.0);
  const amrex::Real x8856 =
    x8855 *
    exp(-2.0 * g_RT[4] + g_RT[7] + 855.46833186802303 * invT - 0.9 * tc[0]);
  const amrex::Real x8857 = refC * sc[7] * x8856;
  const amrex::Real x8859 = ((x8848) * (x8848)) / ((x8849) * (x8849) * (x8849));
  const amrex::Real x8860 = x8848 / ((x8849) * (x8849));
  const amrex::Real x8863 = x10 * x8845 /
                            ((((x8848) * (x8848)) / ((x8849) * (x8849)) + 1.0) *
                             (((x8848) * (x8848)) / ((x8849) * (x8849)) + 1.0));
  const amrex::Real x8867 =
    ((sc[4]) * (sc[4])) * x8855 * exp(855.46833186802303 * invT - 0.9 * tc[0]);
  x8845 = exp(
            M_LN10 * (0.43429448190325198 * x8845 /
                      (((x8848) * (x8848)) / ((x8849) * (x8849)) + 1.0))) *
          x10 / ((x8847 + 1.0) * (x8847 + 1.0));
  x8847 =
    ((sc[4]) * (sc[4])) * x8845 * exp(1710.9366637360499 * invT - 1.43 * tc[0]);
  x8848 =
    refC * sc[7] *
    exp(-2.0 * g_RT[4] + g_RT[7] + 1710.9366637360499 * invT - 1.43 * tc[0]);
  x8849 =
    -1000000.0 * x1972 + 1000000.0 * x2006 -
    285945.94594594598 * x8845 * x8848 + 285945.94594594598 * x8847 -
    4600000.0 * x8857 * x8863 * (0.56 * x693 * x8859 + 4.0 * x693 * x8860) +
    9200000.0 * x8857 +
    4600000.0 * x8863 * x8867 * (0.56 * x693 * x8859 + 4.0 * x693 * x8860) -
    9200000.0 * x8867;
  const amrex::Real x8912 =
    10000000.0 * sc[2] * x609 + 24000000.0 * sc[6] * x362 +
    20000000.0 * sc[6] * x926 - 20000000.0 * sc[6] * x936 - x1005 * x2245 -
    x1069 * x948 + x1074 * x2245 + x1526 * x948 - x1560 * x2322 + x2322 * x423;
  const amrex::Real x8916 =
    -500000.0 * x1972 + 500000.0 * x2006 - 142972.97297297299 * x8845 * x8848 +
    142972.97297297299 * x8847 -
    4600000.0 * x8857 * x8863 * (0.28 * x693 * x8859 + 2.0 * x693 * x8860) +
    4600000.0 * x8857 +
    4600000.0 * x8863 * x8867 * (0.28 * x693 * x8859 + 2.0 * x693 * x8860) -
    4600000.0 * x8867;
  const amrex::Real x8918 = sc[11] * x2181 - 30000000.0 * sc[2] * x1005 +
                            30000000.0 * sc[2] * x1074 -
                            28000000.0 * x1249 * x1426;
  const amrex::Real x8923 = 32000000.0 * sc[1] * x609 - 32000000.0 * x1411 +
                            x1471 * x2259 - x1481 * x2259 + x2253 * x926 -
                            x2253 * x936 - 32000000.0 * x930;
  const amrex::Real x8959 =
    10000000.0 * sc[2] * x624 + 24000000.0 * sc[6] * x1063 +
    20000000.0 * sc[6] * x968 - 20000000.0 * sc[6] * x995 - x1081 * x2322 -
    x115 * x948 - 10000000.0 * x1411 + x1633 * x2245 + x1653 * x948 +
    x1718 * x2322 - x2245 * x824 - 10000000.0 * x930;
  const amrex::Real x8964 = 32000000.0 * sc[1] * x624 + sc[9] * x7396 +
                            x1482 * x2259 + x2253 * x968 - x2253 * x995 -
                            x2259 * x961;
  const amrex::Real x9001 =
    10000000.0 * sc[2] * x998 - 20000000.0 * sc[6] * x1000 +
    24000000.0 * sc[6] * x185 + 20000000.0 * sc[6] * x999 + sc[8] * x8306 -
    x1654 * x948 - x1656 * x2245 + x1672 * x2245 + x1685 * x948 +
    x1739 * x2322 - x2322 * x250;
  const amrex::Real x9006 = 32000000.0 * sc[1] * x998 - x1000 * x2253 +
                            x1535 * x2259 - x1537 * x2259 + x2253 * x999;
  const amrex::Real x9007 =
    2000000.0 *
    exp(-g_RT[14] + g_RT[18] + g_RT[4] - g_RT[6] - 7045.0333212660798 * invT);
  const amrex::Real x9014 =
    100.0 * sc[9] * exp(-1570.03599731073 * invT + 1.6 * tc[0]);
  const amrex::Real x9017 = 3.1 * exp(149.958566409806 * invT + 2.0 * tc[0]);
  const amrex::Real x9055 = 1750000.0 * exp(-161.02933305751 * invT);
  const amrex::Real x9058 = 580000000.0 * exp(-4810.7513250931197 * invT);
  const amrex::Real x9062 =
    150000000.0 *
    exp(-g_RT[10] + g_RT[11] + g_RT[4] - g_RT[6] - 11875.913312991401 * invT);
  const amrex::Real x9067 =
    3.54 * exp(-437.79849925010598 * invT + 2.12 * tc[0]);
  const amrex::Real x9074 =
    4.83e-10 * exp(1006.43333160944 * invT + 4.0 * tc[0]);
  const amrex::Real x9080 = 3.6 * exp(-1258.0416645118 * invT + 2.0 * tc[0]);
  const amrex::Real x9093 =
    3430.0 * exp(224.93784961470999 * invT + 1.18 * tc[0]);
  const amrex::Real x9103 =
    -20000000.0 * sc[12] * x1094 - 10000000.0 * sc[12] * x1401 -
    sc[12] * x8340 - sc[12] * x9093 + 10000000.0 * sc[2] * x1678 +
    20000000.0 * sc[6] * x1006 - 20000000.0 * sc[6] * x1008 +
    24000000.0 * sc[6] * x1981 - 6600000.0 * x105 * x110 * x170 -
    24000000.0 * x105 * x325 * x332 - x1686 * x2245 - x1708 * x948 +
    x1745 * x948 + x1759 * x2322 - x1780 * x2322 + x2245 * x548;
  const amrex::Real x9104 =
    -30000000.0 * sc[10] * x1275 - 28000000.0 * sc[1] * x1248 * x1426 - x5750;
  const amrex::Real x9108 =
    56.0 * exp(-2727.4343286615799 * invT + 1.6 * tc[0]);
  const amrex::Real x9112 = 32000000.0 * sc[1] * x1678 -
                            32000000.0 * sc[8] * x1393 - sc[8] * x7525 -
                            sc[8] * x9108 - 25010000.0 * sc[8] + x1006 * x2253 -
                            x1008 * x2253 + x1385 * x2259 - x1563 * x2259;
  const amrex::Real x9113 =
    100.0 *
    exp(g_RT[8] - g_RT[9] - 1570.03599731073 * invT + 1.6 * tc[0] - x154);
  const amrex::Real x9115 =
    3.1 *
    exp(g_RT[19] - g_RT[20] + 149.958566409806 * invT + 2.0 * tc[0] - x154);
  const amrex::Real x9144 =
    exp(g_RT[17] - g_RT_qss[8] - 1006.43333160944 * invT - x154);
  const amrex::Real x9147 =
    1750000.0 * exp(-161.02933305751 * invT - x1210 - x154);
  const amrex::Real x9149 =
    580000000.0 * exp(-4810.7513250931197 * invT - x1210 - x154);
  x154 = 7500000.0 * exp(g_RT[16] - g_RT[17] - 1006.43333160944 * invT - x154);
  const amrex::Real x9173 =
    10000000.0 * sc[2] * x1871 + 20000000.0 * sc[6] * x1039 -
    20000000.0 * sc[6] * x1042 + 24000000.0 * sc[6] * x1880 - x1747 * x948 +
    x1748 * x948 - x1750 * x2245 + x1751 * x2245 - x1760 * x2322 +
    x1844 * x2322 + x578 * x965;
  const amrex::Real x9180 = 32000000.0 * sc[1] * x1871 + x1039 * x2253 -
                            x1042 * x2253 - x1320 * x2259 + x1564 * x2259 +
                            25010000.0 * x450 * x595 + x486 * x675;
  const amrex::Real x9181 = 2000000.0 * exp(-7045.0333212660798 * invT);
  const amrex::Real x9203 = 150000000.0 * exp(-11875.913312991401 * invT);
  const amrex::Real x9226 =
    6600000.0 * sc[19] + 10000000.0 * sc[2] * x1408 +
    20000000.0 * sc[6] * x1043 - 20000000.0 * sc[6] * x1045 +
    24000000.0 * sc[6] * x1977 - 24000000.0 * x1340 - x1755 * x948 -
    x1756 * x2245 + x1768 * x2245 - x1865 * x2322 + x1867 * x2322 +
    x227 * x948 - 24000000.0 * x766;
  const amrex::Real x9227 = -20000000.0 * sc[4] * x1649 + x8916;
  const amrex::Real x9233 = 32000000.0 * sc[1] * x1408 + x1043 * x2253 -
                            x1045 * x2253 - x1440 * x2259 + x2259 * x921;
  const amrex::Real x9264 =
    10000000.0 * sc[2] * x1885 + 20000000.0 * sc[6] * x1051 -
    20000000.0 * sc[6] * x1052 - x1767 * x948 - x1770 * x2245 + x1772 * x2245 +
    x1812 * x948 + x1875 * x2322 - x1891 * x2322;
  const amrex::Real x9265 = x1885 * x2315;
  const amrex::Real x9267 = 5000000.0 * sc[4] * x1885;
  const amrex::Real x9275 = 24000000.0 * sc[4] * x2009;
  const amrex::Real x9276 = 24000000.0 * sc[6] * x2009 - x9275;
  const amrex::Real x9277 = -x1896 * x2350 - x1896 * x2352 + x1896 * x801 +
                            x9227 - x9265 - x9267 + x9276;
  const amrex::Real x9278 = 18000.0 * sc[3] * x1896;
  const amrex::Real x9280 = 32000000.0 * sc[1] * x1885 + x5489;
  const amrex::Real x9287 =
    4.83e-10 * exp(
                 g_RT[10] - g_RT[13] - g_RT[4] + g_RT[8] +
                 1006.43333160944 * invT + 4.0 * tc[0]);
  const amrex::Real x9327 =
    10000000.0 * sc[2] * x1641 + sc[3] * x8306 + 20000000.0 * sc[6] * x1056 -
    20000000.0 * sc[6] * x1059 + 24000000.0 * sc[6] * x339 - x1779 * x2245 +
    x1782 * x2245 - x1813 * x948 + x1833 * x948 - x1881 * x2322 + x1960 * x2322;
  const amrex::Real x9334 = 32000000.0 * sc[1] * x1641 -
                            32000000.0 * sc[4] * x1393 - sc[4] * x7525 -
                            sc[4] * x9108 - 25010000.0 * sc[4] + x1056 * x2253 -
                            x1059 * x2253 - x2259 * x315 + x2259 * x789;
  const amrex::Real x9335 =
    100.0 * sc[4] * exp(-1570.03599731073 * invT + 1.6 * tc[0]);
  const amrex::Real x9368 =
    10000000.0 * sc[2] * x634 + 18000.0 * sc[3] * x858 +
    20000000.0 * sc[6] * x1060 - 20000000.0 * sc[6] * x1062 +
    24000000.0 * sc[6] * x2010 + x1742 * x2245 - x1787 * x2245 + x1825 * x948 -
    x1841 * x948 - x1961 * x2322 + x1962 * x2322;
  const amrex::Real x9373 = -5000000.0 * sc[4] * x634 - x2315 * x634 -
                            x2350 * x858 - x2352 * x858 + x801 * x858 + x8849;
  const amrex::Real x9379 = 32000000.0 * sc[1] * x634 + sc[2] * x7396 +
                            x1060 * x2253 - x1062 * x2253 - x1149 * x2259 +
                            x2259 * x646;
  const amrex::Real x9425 =
    10000000.0 * sc[2] * x722 + 20000000.0 * sc[6] * x1064 -
    20000000.0 * sc[6] * x1071 + 24000000.0 * sc[6] * x2011 - x1676 * x2245 +
    x1741 * x2245 - x1830 * x948 + x1831 * x948 - x1968 * x2322 + x1969 * x2322;
  const amrex::Real x9426 =
    -28000000.0 * sc[1] * x1426 * x2279 - 30000000.0 * sc[4] * x1275 - x6324;
  const amrex::Real x9431 = 32000000.0 * sc[1] * x722 - x1037 * x2259 +
                            x1064 * x2253 - x1071 * x2253 + x1590 * x2259;
  const amrex::Real x9463 =
    10000000.0 * sc[2] * x634 + 18000.0 * sc[3] * x858 +
    20000000.0 * sc[6] * x1072 - 20000000.0 * sc[6] * x1073 +
    24000000.0 * sc[6] * x774 - x1749 * x2245 + x1814 * x2245 + x1877 * x948 +
    x1970 * x2322 - x2322 * x755 - x896 * x948;
  const amrex::Real x9468 = 32000000.0 * sc[1] * x634 - x1047 * x2259 +
                            x1072 * x2253 - x1073 * x2253 + x2259 * x963;
  const amrex::Real x9503 =
    32000000.0 * sc[1] * x1533 - 24000000.0 * sc[4] * x1238 * x1343 +
    24000000.0 * sc[6] * x1971 - 24000000.0 * sc[6] * x1979 + x1075 * x2253 +
    x1640 * x2259 - x1659 * x2259 - x2253 * x671;
  const amrex::Real x9517 =
    10000000.0 * sc[2] * x1533 - 20000000.0 * sc[4] * x1094 -
    10000000.0 * sc[4] * x1401 - sc[4] * x8340 - sc[4] * x9093 +
    20000000.0 * sc[6] * x1075 + 24000000.0 * sc[6] * x1554 -
    20000000.0 * sc[6] * x671 - 6600000.0 * x110 * x170 * x2279 -
    x1818 * x2245 + x1819 * x2245 - x1886 * x948 + x1897 * x948 -
    x1971 * x2322 + x1979 * x2322 - 24000000.0 * x2279 * x325 * x332;
  const amrex::Real x9549 =
    10000000.0 * sc[2] * x1410 + 18000.0 * sc[3] * x482 +
    20000000.0 * sc[6] * x1078 - 20000000.0 * sc[6] * x1080 - x1821 * x2245 +
    x1823 * x2245 - x1860 * x948 + x1862 * x948 + x1884 * x2322 - x1987 * x2322;
  const amrex::Real x9562 =
    -5000000.0 * sc[4] * x1410 - x1410 * x2315 - 1500000.0 * x1972 +
    1500000.0 * x2006 - x2350 * x482 - x2352 * x482 + x482 * x801 -
    428918.91891891899 * x8845 * x8848 + 428918.91891891899 * x8847 -
    4600000.0 * x8857 * x8863 * (0.84 * x693 * x8859 + 6.0 * x693 * x8860) +
    13800000.0 * x8857 +
    4600000.0 * x8863 * x8867 * (0.84 * x693 * x8859 + 6.0 * x693 * x8860) -
    13800000.0 * x8867;
  const amrex::Real x9563 =
    30110000.0 * sc[4] * x1862 - 10000000.0 * sc[6] * x1862 -
    24000000.0 * sc[6] * x1884 + x1862 * x2258 + x1884 * x2278 + x9562;
  const amrex::Real x9569 = 32000000.0 * sc[1] * x1410 + x1078 * x2253 -
                            x1080 * x2253 + x1663 * x2259 - x1664 * x2259;
  const amrex::Real x9591 =
    10000000.0 * sc[2] * x1410 + 18000.0 * sc[3] * x482 +
    20000000.0 * sc[6] * x1083 - 20000000.0 * sc[6] * x1084 +
    24000000.0 * sc[6] * x374 - x1828 * x2245 + x1834 * x2245 + x1862 * x948 -
    x1872 * x948 + x1884 * x2322 - x1947 * x2322;
  const amrex::Real x9599 = 32000000.0 * sc[1] * x1410 + x1083 * x2253 -
                            x1084 * x2253 + x1670 * x2259 - x1679 * x2259;
  const amrex::Real x9630 =
    10000000.0 * sc[2] * x1410 + 18000.0 * sc[3] * x482 +
    20000000.0 * sc[6] * x1085 - 20000000.0 * sc[6] * x1086 +
    24000000.0 * sc[6] * x1716 - x1835 * x2245 + x1836 * x2245 - x1837 * x2322 +
    x1882 * x2322 + x1925 * x948 - x502 * x948;
  const amrex::Real x9635 = 32000000.0 * sc[1] * x1410 + x1085 * x2253 -
                            x1086 * x2253 + x1680 * x2259 - x1688 * x2259;
  const amrex::Real x9639 = -x1129 * x1937;
  const amrex::Real x9657 =
    10000000.0 * sc[2] * x1885 - x1761 * x2245 + x1937 * x948 + x1957 * x2322;
  const amrex::Real x9660 = 24000000.0 * sc[6] * x731 - x2322 * x731;
  const amrex::Real x9663 = -x1957 * x2314;
  const amrex::Real x9670 =
    30110000.0 * sc[4] * x1937 - 10000000.0 * sc[6] * x1937 -
    24000000.0 * sc[6] * x1957 + x1937 * x2258 + x1957 * x2278;
  const amrex::Real x9671 = 50000000.0 * sc[4] * x1761 - x1761 * x2084 +
                            x1761 * x2177 + x1761 * x2317 + x9670;
  const amrex::Real x9672 = -x2278 * x731 + x2314 * x731 + x9663 + x9671;
  const amrex::Real x9700 =
    20000000.0 * sc[4] * x1092 + 30000000.0 * sc[4] * x1668 +
    30000000.0 * sc[4] * x1707 + x1092 * x1575 - x1092 * x1584 - x1668 * x8807;
  const amrex::Real x9702 = -20000000.0 * sc[6] * x1092 + x9657;
  const amrex::Real x9707 = -x1092 * x2253 - x1707 * x2259;
  const amrex::Real x9727 = 20000000.0 * sc[6] * x1141 + x1863 * x2245 -
                            x1958 * x2322 - x233 * x948 + x9702;
  const amrex::Real x9753 =
    10000000.0 * sc[2] * x1885 + 20000000.0 * sc[6] * x1161 -
    20000000.0 * sc[6] * x1167 + 6600000.0 * sc[6] - x1870 * x2245 +
    x1873 * x2245 + x1937 * x948 - x1946 * x948 + x1957 * x2322 - x2322 * x655;
  const amrex::Real x9781 = 24000000.0 * sc[6] * x1339 +
                            20000000.0 * sc[6] * x1443 + x1874 * x2245 -
                            x1949 * x948 - x1966 * x2322;
  const amrex::Real x9804 = 32000000.0 * sc[1] * x1885 + x1444 * x2253 -
                            x1445 * x2253 + x1752 * x2259 - x1757 * x2259;
  const amrex::Real x9807 = -22000000000.0 * x1485 + 22000000000.0 * x1515;
  const amrex::Real x9828 =
    -50000000.0 * sc[10] * x1272 - 12000000.0 * sc[10] * x1420 -
    50000000.0 * sc[4] * x1750 + 50000000.0 * sc[4] * x1751;
  const amrex::Real x9844 =
    -50000000.0 * sc[4] * x1676 + 50000000.0 * sc[4] * x1741 -
    50000000.0 * sc[5] * x1272 - 12000000.0 * sc[5] * x1420;
  const amrex::Real x9853 = 16000000.0 * sc[1] * x1410 +
                            5000000.0 * sc[4] * x1410 - 66000000000.0 * x1485 +
                            66000000000.0 * x1515 + x2352 * x482;
  const amrex::Real x9860 = 16000000.0 * sc[1] * x1885 + x1129 * x1937 +
                            x1896 * x2352 + x1957 * x2314 + x9267 + x9275 +
                            x9807;
  const amrex::Real x9863 =
    -12000000.0 * sc[3] * x1707 + x1707 * x2085 + x1707 * x2259;
  const amrex::Real x9864 = -30110000.0 * sc[4] * x1937;
  const amrex::Real x9865 = -50000000.0 * sc[4] * x1761;
  const amrex::Real x9869 = 16000000.0 * sc[1] * x1885 - x1092 * x1575 +
                            x1092 * x2253 + x1129 * x1937 + x1668 * x783 +
                            x1668 * x8807 + x1957 * x2314 + x9267 + x9275 +
                            x9807 + x9863;
  const amrex::Real x9885 = 2800000.0 * x2091 - 2800000.0 * x2093;
  const amrex::Real x9935 = -20000.0 * sc[3] * x1739 + 20000.0 * sc[3] * x250 +
                            x1654 * x2353 - x1685 * x2353 + 20000.0 * x325;
  const amrex::Real x9949 = sc[18] * x9007 - 20000.0 * sc[3] * x1759 +
                            20000.0 * sc[3] * x1780 + x1708 * x2353 -
                            x1745 * x2353;
  x377 = 0.0245 * exp(-2606.66232886845 * invT + 2.47 * tc[0] - x1210 - x377);
  const amrex::Real x9971 =
    0.0096 * sc[20] * exp(-6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x9974 =
    8700.0 * exp(g_RT[15] - g_RT_qss[7] - 490.13303249379697 * invT - x1210);
  x1210 =
    12100.0 * exp(g_RT[14] - g_RT_qss[6] + 299.91713281961302 * invT - x1210);
  const amrex::Real x9983 = -sc[14] * x1210 - 20000.0 * sc[14] * x1348 -
                            sc[14] * x9181 + 20000.0 * sc[3] * x1865 -
                            20000.0 * sc[3] * x1867 + x1755 * x2353 -
                            x227 * x2353;
  const amrex::Real x9985 =
    -sc[10] * x163 - sc[10] * x9203 - x1756 * x2266 + x1768 * x2266;
  const amrex::Real x9989 = -1000000.0 * sc[12] * x1013 - sc[12] * x102 +
                            x1408 * x823 - x1756 * x2355 + x1768 * x2355;
  const amrex::Real x9990 = 0.0096 * exp(
                                       g_RT[19] - g_RT[20] - g_RT[6] + g_RT[7] -
                                       6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x9993 =
    0.0245 * sc[8] * exp(-2606.66232886845 * invT + 2.47 * tc[0]);
  const amrex::Real x10002 =
    90000.0 * sc[3] * x2009 - 24000000.0 * sc[6] * x2009;
  const amrex::Real x10012 = -20000.0 * sc[3] * x1875 +
                             20000.0 * sc[3] * x1891 +
                             12100.0 * x170 * exp(299.91713281961302 * invT) +
                             x1767 * x2353 - x1812 * x2353;
  const amrex::Real x10014 =
    0.0245 * sc[7] * exp(-2606.66232886845 * invT + 2.47 * tc[0]);
  const amrex::Real x10056 =
    -sc[6] * x163 - sc[6] * x9203 - x1676 * x2266 + x1741 * x2266;
  const amrex::Real x10083 = -1000000.0 * sc[6] * x1013 - sc[6] * x102 +
                             x1533 * x823 - x1818 * x2355 + x1819 * x2355;
  const amrex::Real x10098 = -20000.0 * sc[3] * x1884 - x1862 * x2353;
  const amrex::Real x10102 =
    140000.0 * sc[3] * x482 + 10000000.0 * sc[6] * x1862 +
    24600000.0 * sc[6] * x1884 + x1410 * x2315 + x1548 * x1862 - x1884 * x2322 +
    8400000.0 * x2091 - 8400000.0 * x2093 + x2350 * x482;
  const amrex::Real x10114 = 20000.0 * sc[3] * x1947 - sc[6] * x1210 -
                             20000.0 * sc[6] * x1348 - sc[6] * x9181 + x10098 +
                             x1872 * x2353;
  const amrex::Real x10130 =
    140000.0 * sc[3] * x1896 + 10000000.0 * sc[6] * x1937 +
    24600000.0 * sc[6] * x1957 + x10002 + x1548 * x1937 + x1896 * x2350 -
    x1957 * x2322 + x9265;
  const amrex::Real x10133 = -x1957 * x2356;
  const amrex::Real x10135 = -24600000.0 * sc[6] * x731 + x10133 +
                             x1687 * x1761 + x2322 * x731 + x2356 * x731;
  const amrex::Real x10139 = -20000.0 * sc[3] * x1957 - x1937 * x2353;
  const amrex::Real x10140 = 20000.0 * sc[3] * x731 + x10139;
  const amrex::Real x10144 = -x1761 * x2355 + x1885 * x823;
  const amrex::Real x10146 = -x1761 * x2266;
  const amrex::Real x10148 = -x1937 * x948;
  const amrex::Real x10149 = -x1937 * x2250;
  const amrex::Real x10158 = 20000000.0 * sc[6] * x1092 +
                             10000000.0 * sc[6] * x1937 +
                             24600000.0 * sc[6] * x1957 + x10148 + x10149 +
                             x1548 * x1937 - x1957 * x2322 + x9265 + x9885;
  const amrex::Real x10187 =
    0.0096 * sc[6] * exp(-6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x10200 =
    142972.97297297299 * x8845 * x8848 - 142972.97297297299 * x8847 +
    2300000.0 * x8857 * x8863 * (0.56 * x693 * x8859 + 4.0 * x693 * x8860) -
    4600000.0 * x8857 -
    2300000.0 * x8863 * x8867 * (0.56 * x693 * x8859 + 4.0 * x693 * x8860) +
    4600000.0 * x8867;
  const amrex::Real x10202 =
    -71486.486486486494 * ((sc[4]) * (sc[4])) * x8845 *
      exp(1710.9366637360499 * invT - 1.43 * tc[0]) +
    71486.486486486494 * x8845 * x8848 +
    2300000.0 * x8857 * x8863 * (0.28 * x693 * x8859 + 2.0 * x693 * x8860) -
    2300000.0 * x8857 -
    2300000.0 * x8863 * x8867 * (0.28 * x693 * x8859 + 2.0 * x693 * x8860) +
    2300000.0 * x8867;
  const amrex::Real x10207 =
    214459.459459459 * x8845 * x8848 - 214459.459459459 * x8847 +
    2300000.0 * x8857 * x8863 * (0.84 * x693 * x8859 + 6.0 * x693 * x8860) -
    6900000.0 * x8857 -
    2300000.0 * x8863 * x8867 * (0.84 * x693 * x8859 + 6.0 * x693 * x8860) +
    6900000.0 * x8867;
  const amrex::Real x10211 =
    x10202 + x1761 * x2355 + x1937 * x2353 + x1957 * x2356;
  const amrex::Real x10236 =
    16040000.0 * sc[2] * x756 - 16040000.0 * sc[2] * x779 +
    24000000.0 * sc[6] * x756 - 24000000.0 * sc[6] * x779 - x2359 * x923 +
    x2359 * x932;
  const amrex::Real x10238 =
    6.6942148760330811e-59 *
    exp(
      M_LN10 * (0.43429448190325198 * x514 /
                (((x1602) * (x1602)) / ((x544) * (x544)) + 1.0))) /
    ((x510 + 8.181818181818196e-30) * (x510 + 8.181818181818196e-30));
  const amrex::Real x10241 = x1299 * x2369;
  amrex::Real x10243 = ((x418) * (x418)) * x693 / ((x437) * (x437) * (x437));
  amrex::Real x10246 = 0.56 * x10243 + 4.0 * x418 * x693 / ((x437) * (x437));
  amrex::Real x10247 = x139 / ((((x418) * (x418)) / ((x437) * (x437)) + 1.0) *
                               (((x418) * (x418)) / ((x437) * (x437)) + 1.0));
  x1154 = 4.27e+46 * x1154 * x734 * x843;
  const amrex::Real x10251 = sc[20] * x10247 * x1154;
  const amrex::Real x10256 = x170 * x734 * x868;
  amrex::Real x10259 = ((x1602) * (x1602)) / ((x544) * (x544) * (x544));
  amrex::Real x10261 =
    0.56 * x10259 * x693 + 4.0 * x1602 * x693 / ((x544) * (x544));
  x514 = x514 / ((((x1602) * (x1602)) / ((x544) * (x544)) + 1.0) *
                 (((x1602) * (x1602)) / ((x544) * (x544)) + 1.0));
  x510 = 2.2e+36 * x2369 * x510 * x578;
  const amrex::Real x10265 = sc[8] * x510 * x514;
  amrex::Real x10272 = 8.3490566037735897e+27 * x10 *
                       exp(-2818.0133285064344 * invT - 8.7 * tc[0]);
  amrex::Real x10273 = log(
    0.4675 * exp(-0.0066225165562913899 * tc[1]) +
    0.5325 * exp(-0.00096339113680154098 * tc[1]) + exp(-4970.0 * invT));
  amrex::Real x10274 =
    -0.29097730287517898 * x10273 + 0.43429448190325198 * log(x10272) - 0.4;
  amrex::Real x10276 = -0.55155399201712996 * x10273 - 0.14 * x10274 + 0.75;
  amrex::Real x10279 = exp(
    M_LN10 * (0.43429448190325198 * x10273 /
              (((x10274) * (x10274)) / ((x10276) * (x10276)) + 1.0)));
  const amrex::Real x10282 =
    x10279 *
    exp(g_RT[15] - 2.0 * g_RT[8] - 3130.0076613053543 * invT - 9.67 * tc[0]) /
    (x10272 + 1.0);
  const amrex::Real x10283 = x10282 * x1355;
  const amrex::Real x10285 =
    x10279 * exp(-3130.0076613053543 * invT - 9.67 * tc[0]) / (x10272 + 1.0);
  const amrex::Real x10286 = ((sc[8]) * (sc[8])) * x10285;
  const amrex::Real x10288 = x10274 / ((x10276) * (x10276));
  const amrex::Real x10289 =
    ((x10274) * (x10274)) / ((x10276) * (x10276) * (x10276));
  amrex::Real x10290 = 4.0 * x10288 * x693 + 0.56 * x10289 * x693;
  x10273 = x10 * x10273 /
           ((((x10274) * (x10274)) / ((x10276) * (x10276)) + 1.0) *
            (((x10274) * (x10274)) / ((x10276) * (x10276)) + 1.0));
  x10274 = x2369 * x578 * x821;
  x139 = 3.4278694009181206e-79 *
         exp(
           M_LN10 * (0.43429448190325198 * x139 /
                     (((x418) * (x418)) / ((x437) * (x437)) + 1.0))) /
         ((x135 + 5.85480093676815e-40) * (x135 + 5.85480093676815e-40));
  x10272 = x10 * x10279 / ((x10272 + 1.0) * (x10272 + 1.0));
  x10276 = -5948.0209898117882 * invT - 18.37 * tc[0];
  x10279 = x10272 * x1355 * exp(g_RT[15] - 2.0 * g_RT[8] + x10276);
  const amrex::Real x10308 = 2.2e+36 * x10 * x10241 * x514;
  x135 = 4.27e+46 * x135 * x170 * x734;
  const amrex::Real x10312 = sc[8] * x10247 * x135;
  const amrex::Real x10315 = ((sc[8]) * (sc[8])) * x10272 * exp(x10276);
  const amrex::Real x10317 = x139 * x170 * x877;
  const amrex::Real x10320 = x10238 * x578 * x818;
  const amrex::Real x10324 =
    2.2e+43 * sc[8] * exp(-17979.931469202598 * invT - 11.82 * tc[0]);
  const amrex::Real x10326 = 2.2e+43 * refC *
                             exp(
                               -g_RT[13] + g_RT[19] - g_RT[8] -
                               17979.931469202598 * invT - 11.82 * tc[0]);
  const amrex::Real x10328 = -sc[13] * x10324 + sc[19] * x10326;
  const amrex::Real x10329 =
    -5.3777777777777799e+65 * x10238 * x1569 + 4.4e+36 * x10241 -
    x10246 * x10251 + x10246 * x10312 - 8.54e+46 * x10256 + x10261 * x10265 -
    x10261 * x10308 - 3.54e+38 * x10273 * x10283 * x10290 +
    3.54e+38 * x10273 * x10286 * x10290 - 4.4e+36 * x10274 -
    5.9111320754717004e+66 * x10279 + 7.08e+38 * x10283 - 7.08e+38 * x10286 +
    5.9111320754717004e+66 * x10315 + 1.458632e+86 * x10317 +
    5.3777777777777799e+65 * x10320 + x10328 +
    x1058 * (0.56 * x316 + 4.0 * x642) - 1.458632e+86 * x139 * x1495 +
    8.54e+46 * x1499 * x734 - 6400000000000000.0 * x1539 -
    8.192e+20 * x1631 * x574 + 6400000000000000.0 * x443 +
    8.192e+20 * x574 * x575 - x788 * (0.56 * x316 + 4.0 * x642);
  const amrex::Real x10351 =
    16040000.0 * sc[2] * x1560 - 16040000.0 * sc[2] * x423 +
    24000000.0 * sc[6] * x1560 - 24000000.0 * sc[6] * x423 - x1005 * x2359 +
    x1074 * x2359;
  const amrex::Real x10357 =
    0.28 * x10243 + 2.0 * x418 * x693 / ((x437) * (x437));
  amrex::Real x10360 =
    0.28 * x10259 * x693 + 2.0 * x1602 * x693 / ((x544) * (x544));
  amrex::Real x10366 = 2.0 * x10288 * x693 + 0.28 * x10289 * x693;
  const amrex::Real x10372 =
    -2.6888888888888899e+65 * x10238 * x1569 +
    2.6888888888888899e+65 * x10238 * x578 * x818 + 2.2e+36 * x10241 -
    x10251 * x10357 + x10265 * x10360 - 3.54e+38 * x10273 * x10283 * x10366 +
    3.54e+38 * x10273 * x10286 * x10366 - 2.9555660377358502e+66 * x10279 +
    3.54e+38 * x10283 - 3.54e+38 * x10286 - x10308 * x10360 + x10312 * x10357 +
    2.9555660377358502e+66 * x10315 + x1058 * (0.28 * x316 + 2.0 * x642) -
    7.29316e+85 * x139 * x1495 + 7.29316e+85 * x139 * x170 * x877 +
    4.27e+46 * x1499 * x734 - 3200000000000000.0 * x1539 -
    4.096e+20 * x1631 * x574 - 4.27e+46 * x170 * x734 * x868 -
    2.2e+36 * x2369 * x578 * x821 + 3200000000000000.0 * x443 +
    4.096e+20 * x574 * x575 - x788 * (0.28 * x316 + 2.0 * x642);
  const amrex::Real x10373 = x10328 + x10372 + x5498;
  const amrex::Real x10396 =
    16040000.0 * sc[2] * x1081 - 16040000.0 * sc[2] * x1718 +
    24000000.0 * sc[6] * x1081 - 24000000.0 * sc[6] * x1718 + x1633 * x2359 -
    x2359 * x824 + 16040000.0 * x325;
  const amrex::Real x10418 =
    -16040000.0 * sc[2] * x1739 + 16040000.0 * sc[2] * x250 -
    24000000.0 * sc[6] * x1739 + 24000000.0 * sc[6] * x250 - x1656 * x2359 +
    x1672 * x2359;
  const amrex::Real x10441 =
    -24000000.0 * sc[12] * x1238 * x1343 - 16040000.0 * sc[2] * x1759 +
    16040000.0 * sc[2] * x1780 - 24000000.0 * sc[6] * x1759 +
    24000000.0 * sc[6] * x1780 - x1686 * x2359 + x2359 * x548;
  const amrex::Real x10455 =
    1.68 * x10243 + 12.0 * x418 * x693 / ((x437) * (x437));
  const amrex::Real x10464 =
    1.68 * x10259 * x693 + 12.0 * x1602 * x693 / ((x544) * (x544));
  const amrex::Real x10480 =
    16040000.0 * sc[2] * x1760 - 16040000.0 * sc[2] * x1844 +
    24000000.0 * sc[6] * x1760 - 24000000.0 * sc[6] * x1844 - x1750 * x2359 +
    x1751 * x2359;
  const amrex::Real x10503 =
    16040000.0 * sc[2] * x1865 - 16040000.0 * sc[2] * x1867 +
    24000000.0 * sc[6] * x1865 - 24000000.0 * sc[6] * x1867 - x1756 * x2359 +
    x1768 * x2359 + 24000000.0 * x325;
  const amrex::Real x10527 =
    -16040000.0 * sc[2] * x1875 + 16040000.0 * sc[2] * x1891 -
    24000000.0 * sc[6] * x1875 + 24000000.0 * sc[6] * x1891 - x1770 * x2359 +
    x1772 * x2359;
  const amrex::Real x10529 =
    -11000000.0 * sc[8] * x2009 + x10328 + x2009 * x2194;
  const amrex::Real x10533 =
    3.9e+26 * exp(
                g_RT[19] + g_RT[8] - g_RT_qss[6] - g_RT_qss[7] -
                9937.0194996457994 * invT - 5.22 * tc[0]);
  const amrex::Real x10536 =
    2.2e-6 * exp(-2855.7545784417798 * invT + 3.5 * tc[0]);
  x3 = sc[0] + sc[10] + sc[11] + sc[13] + sc[14] + sc[15] + sc[21] + sc[3] +
       sc[5] + sc[9] + x3;
  const amrex::Real x10540 =
    2.2e+43 * sc[13] * x3 * exp(-17979.931469202598 * invT - 11.82 * tc[0]);
  const amrex::Real x10564 =
    6.14 * exp(-5258.61415765932 * invT + 1.74 * tc[0]);
  const amrex::Real x10568 =
    0.227 * exp(-4629.5933254034198 * invT + 2.0 * tc[0]);
  const amrex::Real x10573 = -sc[14] * x10568 - sc[14] * x6213 -
                             330000.0 * sc[14] * exp(-3874.76832669634 * invT) +
                             x1813 * x2358 - x1833 * x2358 + x339 * x701;
  const amrex::Real x10575 =
    0.00332 * exp(-2948.8496616156599 * invT + 2.81 * tc[0]);
  const amrex::Real x10578 =
    -sc[12] * x10575 - 16040000.0 * sc[12] * x1374 +
    16040000.0 * sc[2] * x1881 - 16040000.0 * sc[2] * x1960 -
    24000000.0 * sc[4] * x105 * x1343 + 24000000.0 * sc[6] * x1881 -
    24000000.0 * sc[6] * x1960 - x1779 * x2359 + x1782 * x2359;
  const amrex::Real x10580 = -48000000.0 * sc[10] * x1191 - sc[10] * x6206 -
                             sc[10] * x9287 + x1240 * x36 -
                             7.8e+41 * x1248 *
                               exp(
                                 g_RT[10] + g_RT[8] - g_RT_qss[8] -
                                 23600.8616262414 * invT - 9.147 * tc[0]);
  const amrex::Real x10581 =
    2.2e-6 * exp(
               g_RT[19] - g_RT[20] - g_RT[8] + g_RT[9] -
               2855.7545784417798 * invT + 3.5 * tc[0]);
  const amrex::Real x10613 =
    16040000.0 * sc[2] * x1961 - 16040000.0 * sc[2] * x1962 +
    24000000.0 * sc[6] * x1961 - 24000000.0 * sc[6] * x1962 + x1742 * x2359 -
    x1787 * x2359 + x497 * x578;
  const amrex::Real x10617 =
    50000000.0 * exp(g_RT[10] + g_RT[14] - g_RT[16] - g_RT[8]);
  x514 = x514 * (0.42 * x10259 * x693 + 3.0 * x1602 * x693 / ((x544) * (x544)));
  x10247 = x10247 * (0.42 * x10243 + 3.0 * x418 * x693 / ((x437) * (x437)));
  const amrex::Real x10660 =
    16040000.0 * sc[2] * x1968 - 16040000.0 * sc[2] * x1969 +
    24000000.0 * sc[6] * x1968 - 24000000.0 * sc[6] * x1969 - x1676 * x2359 +
    x1741 * x2359;
  x6206 = 48000000.0 * sc[2] * x1830 - 48000000.0 * sc[2] * x1831 -
          48000000.0 * sc[8] * x1191 - sc[8] * x6206 - sc[8] * x9287 -
          7.8e+41 * x1238 *
            exp(
              g_RT[10] + g_RT[8] - g_RT_qss[8] - 23600.8616262414 * invT -
              9.147 * tc[0]) +
          x174 * x36;
  const amrex::Real x10683 =
    -16040000.0 * sc[2] * x1970 + 16040000.0 * sc[2] * x755 -
    24000000.0 * sc[6] * x1970 + 24000000.0 * sc[6] * x755 - x1749 * x2359 +
    x1814 * x2359;
  const amrex::Real x10708 =
    16040000.0 * sc[2] * x1971 - 16040000.0 * sc[2] * x1979 - sc[8] * x10575 -
    16040000.0 * sc[8] * x1374 - x1818 * x2359 + x1819 * x2359;
  const amrex::Real x10732 =
    -16040000.0 * sc[2] * x1884 + 16040000.0 * sc[2] * x1987 -
    24000000.0 * sc[6] * x1884 + 24000000.0 * sc[6] * x1987 - x1821 * x2359 +
    x1823 * x2359;
  x418 = 0.84 * x10243 + 6.0 * x418 * x693 / ((x437) * (x437));
  x1602 = 0.84 * x10259 * x693 + 6.0 * x1602 * x693 / ((x544) * (x544));
  x544 =
    90000000.0 * sc[1] * x482 - 8.0666666666666698e+65 * x10238 * x1569 +
    6.6e+36 * x10241 - x10251 * x418 + x10265 * x1602 -
    3.54e+38 * x10273 * x10283 * (6.0 * x10288 * x693 + 0.84 * x10289 * x693) +
    3.54e+38 * x10273 * x10286 * (6.0 * x10288 * x693 + 0.84 * x10289 * x693) -
    6.6e+36 * x10274 - 8.8666981132075502e+66 * x10279 + 1.062e+39 * x10283 -
    1.062e+39 * x10286 - x10308 * x1602 + x10312 * x418 +
    8.8666981132075502e+66 * x10315 + 2.187948e+86 * x10317 +
    8.0666666666666698e+65 * x10320 + x1058 * (0.84 * x316 + 6.0 * x642) -
    2.187948e+86 * x139 * x1495 + x1410 * x2283 + x1410 * x2315 +
    1.281e+47 * x1499 * x734 - 9600000000000000.0 * x1539 -
    1.2288e+21 * x1631 * x574 - 1.281e+47 * x170 * x734 * x868 +
    9600000000000000.0 * x443 + 1.2288e+21 * x574 * x575 -
    x788 * (0.84 * x316 + 6.0 * x642);
  x437 = -30000000.0 * sc[1] * x1862 * x74 + 392000.0 * sc[8] * x1862 -
         x129 * x1884 + x1862 * x2086 + x1862 * x742 + x1884 * x2148 +
         x1884 * x97 + x544;
  x10243 = -16040000.0 * sc[2] * x1884 + 16040000.0 * sc[2] * x1947 -
           24000000.0 * sc[6] * x1884 + 24000000.0 * sc[6] * x1947 -
           x1828 * x2359 + x1834 * x2359;
  x10259 = -sc[8] * x10568 - sc[8] * x6213 -
           330000.0 * sc[8] * exp(-3874.76832669634 * invT) - x1862 * x2358 +
           x1872 * x2358 + x374 * x701;
  const amrex::Real x10806 =
    16040000.0 * sc[2] * x1837 - 16040000.0 * sc[2] * x1882 +
    24000000.0 * sc[6] * x1837 - 24000000.0 * sc[6] * x1882 - x1835 * x2359 +
    x1836 * x2359;
  const amrex::Real x10819 = x1896 * x36 + x341;
  const amrex::Real x10826 =
    90000000.0 * sc[1] * x1896 - 30000000.0 * sc[1] * x1937 * x74 +
    392000.0 * sc[8] * x1937 + x10372 + x10529 - x129 * x1957 + x1885 * x2283 +
    x1937 * x2086 + x1937 * x742 + x1957 * x2148 + x1957 * x97 + x9265;
  const amrex::Real x10829 =
    -16040000.0 * sc[2] * x1957 - 24000000.0 * sc[6] * x1957 - x1761 * x2359;
  const amrex::Real x10832 =
    8480000.0 * sc[8] * x1761 + x1036 * x1761 + x1761 * x2028 + x1761 * x2269;
  const amrex::Real x10836 = -x1957 * x752;
  const amrex::Real x10839 = 24000000.0 * sc[6] * x731 + x10836 + x129 * x731 -
                             x2148 * x731 + x731 * x752 - x731 * x97;
  const amrex::Real x10846 = -x1937 * x2358 + x2009 * x701;
  const amrex::Real x10848 = 32000000.0 * sc[1] * x1885 + x10846 +
                             x1707 * x2119 - x1707 * x562 - x1707 * x800 +
                             x5498;
  const amrex::Real x10859 =
    -30000000.0 * sc[1] * x1937 * x74 + 40000000.0 * sc[8] * x1092 +
    30000000.0 * sc[8] * x1668 + 392000.0 * sc[8] * x1937 + x10372 -
    x1092 * x2073 - x1092 * x2364 - x129 * x1957 + x1885 * x2283 +
    x1937 * x2086 + x1937 * x742 + x1957 * x2148 + x1957 * x97 + x9265;
  const amrex::Real x10861 = 32000000.0 * sc[1] * x1885 + x1707 * x2119 -
                             x1707 * x562 - x1707 * x800 + x5498;
  const amrex::Real x10892 =
    -16040000.0 * sc[2] * x1957 + 16040000.0 * sc[2] * x655 -
    24000000.0 * sc[6] * x1957 + 24000000.0 * sc[6] * x655 - x1870 * x2359 +
    x1873 * x2359;
  x1263 = 4.954e+21 * x1065 - x1263 * x1655 + x1263 * x1677 -
          9.6622503937007901e+32 * x1468 * x1483 +
          9.6622503937007901e+32 * x1468 * x272 - 4.954e+21 * x1652;
  x5495 = 2.477e+21 * x1065 - 4.83112519685039e+32 * x1468 * x1483 +
          4.83112519685039e+32 * x1468 * x272 - 2.477e+21 * x1652 -
          x1655 * x5495 + x1677 * x5495;
  const amrex::Real x10941 = -x1649 * x2122 - x1649 * x716 + x5495;
  x1531 = 7.431e+21 * x1065 - 1.4493375590551199e+33 * x1468 * x1483 +
          1.4493375590551199e+33 * x1468 * x272 - x1531 * x1655 +
          x1531 * x1677 - 7.431e+21 * x1652;
  const amrex::Real x10977 = -392000.0 * sc[8] * x1937;
  const amrex::Real x10979 = -8480000.0 * sc[8] * x1761;
  const amrex::Real x10983 = 11000000.0 * sc[8] * x2009 + x10941 +
                             x1761 * x2359 + x1937 * x2358 + x1957 * x752 -
                             x731 * x752;
  const amrex::Real x10987 = -50000000.0 * sc[14] * x1707 +
                             60000000.0 * sc[9] * x1668 + x1092 * x706 +
                             x10977 + x10979 + x1707 * x626 + x1761 * x2359 +
                             x1937 * x2358 + x1957 * x752;
  amrex::Real x10999 = -0.29097730287517898 * x944 +
                       0.43429448190325198 * log(538000000.0 * x940) - 0.4;
  amrex::Real x11001 = -0.14 * x10999 - 0.55155399201712996 * x944 + 0.75;
  const amrex::Real x11006 =
    exp(
      M_LN10 * (0.43429448190325198 * x944 /
                (((x10999) * (x10999)) / ((x11001) * (x11001)) + 1.0))) /
    (538000000.0 * x940 + 1.0);
  const amrex::Real x11007 = 2.69e+16 * sc[10] * x11006 * x940;
  const amrex::Real x11013 =
    3400000.0 * sc[11] * exp(-347.21949940525701 * invT);
  const amrex::Real x11036 = refC * sc[16] * x11006 * x1457;
  const amrex::Real x11038 =
    3.4548997388095799e-18 *
    exp(
      M_LN10 * (0.43429448190325198 * x944 /
                (((x10999) * (x10999)) / ((x11001) * (x11001)) + 1.0))) /
    ((x940 + 1.8587360594795538e-9) * (x940 + 1.8587360594795538e-9));
  const amrex::Real x11040 = x11038 * x674 * x981;
  const amrex::Real x11045 = x867 * exp(x1104 + x839);
  const amrex::Real x11048 = x675 * x867 * exp(x839);
  amrex::Real x11052 = x844 / ((x850) * (x850));
  amrex::Real x11053 = ((x844) * (x844)) / ((x850) * (x850) * (x850));
  const amrex::Real x11054 = 4.0 * x11052 * x693 + 0.56 * x11053 * x693;
  amrex::Real x11055 = x285 / ((((x844) * (x844)) / ((x850) * (x850)) + 1.0) *
                               (((x844) * (x844)) / ((x850) * (x850)) + 1.0));
  const amrex::Real x11057 = 2.69e+21 * sc[10] * x10 * x11048 * x11055;
  amrex::Real x11060 = x10999 / ((x11001) * (x11001));
  amrex::Real x11062 = ((x10999) * (x10999)) / ((x11001) * (x11001) * (x11001));
  x944 = x944 / ((((x10999) * (x10999)) / ((x11001) * (x11001)) + 1.0) *
                 (((x10999) * (x10999)) / ((x11001) * (x11001)) + 1.0));
  const amrex::Real x11067 = 2.69e+16 * sc[16] * x11006 * x1457 * x843 * x944 *
                             (4.0 * x11060 * x693 + 0.56 * x11062 * x693);
  const amrex::Real x11070 = x11006 * x674 * x977;
  x285 = exp(
           M_LN10 * (0.43429448190325198 * x285 /
                     (((x844) * (x844)) / ((x850) * (x850)) + 1.0))) /
         ((x280 + 1.0) * (x280 + 1.0));
  x280 = sc[10] * x10 * x675 * exp(-4871.1373249896797 * invT - 10.72 * tc[0]);
  x844 = 2.69e+16 * sc[10] * x11006 * x674 * x940 * x944 *
         (4.0 * x11060 * x693 + 0.56 * x11062 * x693);
  x1104 =
    sc[17] * x843 * exp(-4871.1373249896797 * invT - 10.72 * tc[0] + x1104);
  x850 = 2.69e+21 * sc[17] * x11045 * x11055 * x843;
  const amrex::Real x11090 =
    -5.38e+21 * sc[10] * x11048 + 5.38e+16 * x11036 -
    2.89444e+25 * x11038 * x1478 - 1.7866913580246899e+37 * x1104 * x285 +
    2.89444e+25 * x11040 + 5.38e+21 * x11045 * x1599 + x11054 * x11057 -
    x11054 * x850 - x11067 - 5.38e+16 * x11070 +
    1.7866913580246899e+37 * x280 * x285 - 1204.0 * x7328 + 1204.0 * x7331 +
    x844;
  const amrex::Real x11121 = 2.69e+16 * sc[16] * x11006 * x1457 * x843 * x944;
  x944 = 2.69e+16 * sc[10] * x11006 * x674 * x940 * x944;
  const amrex::Real x11137 =
    -2.69e+21 * sc[10] * x11048 + 2.69e+16 * x11036 -
    1.44722e+25 * x11038 * x1478 - 8.9334567901234601e+36 * x1104 * x285 +
    1.44722e+25 * x11040 + 2.69e+21 * x11045 * x1599 +
    x11057 * (2.0 * x11052 * x693 + 0.28 * x11053 * x693) - 2.69e+16 * x11070 -
    x11121 * (2.0 * x11060 * x693 + 0.28 * x11062 * x693) +
    8.9334567901234601e+36 * x280 * x285 -
    x850 * (2.0 * x11052 * x693 + 0.28 * x11053 * x693) +
    x944 * (2.0 * x11060 * x693 + 0.28 * x11062 * x693);
  const amrex::Real x11138 = x11137 - 602.0 * x7328 + 602.0 * x7331;
  const amrex::Real x11202 =
    14000000.0 * sc[11] * x1535 - 14000000.0 * sc[11] * x1537 +
    18000.0 * sc[3] * x1639 - 18000.0 * x1025 - 18000.0 * x1266;
  const amrex::Real x11231 =
    14000000.0 * sc[11] * x1385 - 14000000.0 * sc[11] * x1563 -
    18000.0 * sc[12] * x1248 * x1251 + 18000.0 * sc[3] * x1743;
  const amrex::Real x11238 =
    1.68 * ((x10999) * (x10999)) * x693 / ((x11001) * (x11001) * (x11001)) +
    12.0 * x11060 * x693;
  const amrex::Real x11248 = 12.0 * x11052 * x693 + 1.68 * x11053 * x693;
  const amrex::Real x11304 = 100000000.0 * sc[2] * x1649 + x11138;
  const amrex::Real x11399 = exp(2.0 * g_RT[10] + g_RT[13] - 2.0 * g_RT[16]);
  x10999 = 3.0 * x10999 * x693 / ((x11001) * (x11001)) + 0.42 * x11062 * x693;
  x11001 = 3.0 * x11052 * x693 + 0.42 * x11053 * x693;
  const amrex::Real x11458 =
    -14000000.0 * sc[11] * x1037 + 14000000.0 * sc[11] * x1590 -
    14000000.0 * sc[12] * x1417 + 18000.0 * sc[3] * x174 -
    18000.0 * sc[4] * x105 * x1251;
  x11055 = x11055 * (6.0 * x11052 * x693 + 0.84 * x11053 * x693);
  const amrex::Real x11570 =
    2.69e+21 * sc[10] * x10 * x11048 * x11055 - 8.07e+21 * sc[10] * x11048 -
    2.69e+21 * sc[17] * x11045 * x11055 * x843 + 18000.0 * sc[3] * x482 +
    8.07e+16 * x11036 - 4.34166e+25 * x11038 * x1478 +
    4.34166e+25 * x11038 * x674 * x981 - 2.6800370370370399e+37 * x1104 * x285 +
    8.07e+21 * x11045 * x1599 - 8.07e+16 * x11070 -
    x11121 * (6.0 * x11060 * x693 + 0.84 * x11062 * x693) +
    2.6800370370370399e+37 * x280 * x285 - 1806.0 * x7328 + 1806.0 * x7331 +
    x944 * (6.0 * x11060 * x693 + 0.84 * x11062 * x693);
  const amrex::Real x11651 = -14000000.0 * sc[11] * x1707;
  const amrex::Real x11657 = x1937 * x804 + x1937 * x891 + x1957 * x971;
  const amrex::Real x11659 = -60000000.0 * sc[19] * x1761;
  const amrex::Real x11661 =
    -40000000.0 * sc[3] * x1707 + x11659 + x1707 * x2008 + x906;
  const amrex::Real x11691 = -50000000.0 * sc[16] * x1668;
  const amrex::Real x11709 =
    -x1029 * x1761 + x10979 + x11304 + x11657 - x1761 * x815 + x1761 * x976;
  const amrex::Real x11710 = -30000000.0 * sc[16] * x1092 + x1092 * x2176 +
                             x1092 * x2179 + x1092 * x875 + x11007 * x1668 -
                             x11013 * x1668 + x11709;
  const amrex::Real x11776 = 602.0 * x7328 - 602.0 * x7331;
  const amrex::Real x11781 = 10000000.0 * sc[3] * x1649 + x11776 - x1761 * x976;
  const amrex::Real x11783 =
    x1092 * x2172 + x1092 * x2267 - x1092 * x696 + x11013 * x1668;
  x871 = 2700000000000.0 * sc[1] * x1002 +
         3.3440366972477102e+18 * x1004 * x1050 -
         3.3440366972477102e+18 * x1004 * x150 +
         x1011 * (4.0 * x1010 * x693 + 0.56 * x173 * x693) -
         2700000000000.0 * x1053 + 1.19557674418605e+30 * x211 * x846 -
         x587 * (4.0 * x1010 * x693 + 0.56 * x173 * x693) -
         1.19557674418605e+30 * x846 * x856 + x871 * x882 - x871 * x89 -
         1.014e+16 * x878 + 1.014e+16 * x887;
  x551 =
    1350000000000.0 * sc[1] * x1002 + 1350000000000.0 * x10 * x1053 * x551 -
    1350000000000.0 * x1002 * x551 * x854 +
    1.67201834862385e+18 * x1004 * x1050 - 1.67201834862385e+18 * x1004 * x150 -
    1350000000000.0 * x1053 + 5.9778837209302301e+29 * x211 * x846 -
    5.9778837209302301e+29 * x846 * x856 - 5070000000000000.0 * x878 +
    x882 * (2.0 * x759 + 0.28 * x862) + 5070000000000000.0 * x887 -
    x89 * (2.0 * x759 + 0.28 * x862);
  const amrex::Real x11790 = 20000000.0 * sc[1] * x1885 +
                             96000000.0 * sc[2] * x2009 +
                             24000000.0 * sc[6] * x2009 + x551 + x9267;
  const amrex::Real x11793 =
    4050000000000.0 * sc[1] * x1002 + 20000000.0 * sc[1] * x1410 +
    5000000.0 * sc[4] * x1410 + 5.0160550458715597e+18 * x1004 * x1050 -
    5.0160550458715597e+18 * x1004 * x150 +
    x1011 * (6.0 * x1010 * x693 + 0.84 * x173 * x693) -
    4050000000000.0 * x1053 + 1.79336511627907e+30 * x211 * x846 -
    x587 * (6.0 * x1010 * x693 + 0.84 * x173 * x693) -
    1.79336511627907e+30 * x846 * x856 - 1.521e+16 * x878 +
    x882 * (6.0 * x759 + 0.84 * x862) + 1.521e+16 * x887 -
    x89 * (6.0 * x759 + 0.84 * x862);
  const amrex::Real x11801 =
    x11790 - x1761 * x571 + x1761 * x984 - x1937 * x2171 + x1957 * x2284;
  const amrex::Real x11806 = exp(x61) / x57;
  x61 = x664 * exp(x56 + x61) / x57;
  x56 = x664 * exp(-24481.490791399599 * invT - 0.76 * tc[0] + x56);
  x57 = x55 / ((x57) * (x57));
  const amrex::Real x11813 =
    sc[13] * exp(-24481.490791399599 * invT - 0.76 * tc[0]);
  const amrex::Real x11814 = -4900000000.0 * sc[13] * x11806 + x10328 +
                             15006.25 * x11813 * x57 - 15006.25 * x56 * x57 +
                             4900000000.0 * x61;
  const amrex::Real x11819 = -2450000000.0 * sc[13] * x11806 + x10328 +
                             7503.125 * x11813 * x57 - 7503.125 * x56 * x57 +
                             2450000000.0 * x61;
  const amrex::Real x11821 = 100000000.0 * sc[1] * x1649 + x11819 + x1649 * x25;
  const amrex::Real x11825 = -6125000000.0 * sc[13] * x11806 -
                             30000000.0 * sc[1] * x1862 + x10328 + x1178 +
                             18757.8125 * x11813 * x57 - x1862 * x804 -
                             18757.8125 * x56 * x57 + 6125000000.0 * x61;
  const amrex::Real x11827 = -30000000.0 * sc[1] * x1937 - x1937 * x804;
  x927 = -1.4e+45 * sc[14] * x1470 * x2029 + 2.8e+18 * sc[1] * x584 +
         6.4473684210526297e+29 * x1184 * x827 + 1.4e+45 * x1386 -
         x1441 * (0.56 * x446 * x693 + 4.0 * x596 * x693) +
         1.225e+77 * x1442 * x1469 - 1.225e+77 * x1442 * x15 -
         2.8e+18 * x1487 * x929 +
         x796 * (0.56 * x446 * x693 + 4.0 * x596 * x693) -
         6.4473684210526297e+29 * x827 * x829 + x927 * x931 - x927 * x997;
  x786 = 1.4e+18 * sc[1] * x584 - 7.0e+44 * x10 * x1386 * x786 +
         7.0e+44 * x10 * x428 * x786 + 3.2236842105263198e+29 * x1184 * x827 +
         7.0e+44 * x1386 + 6.125e+76 * x1442 * x1469 - 6.125e+76 * x1442 * x15 -
         1.4e+18 * x1487 * x929 - 7.0e+44 * x428 + x5520 * x931 - x5520 * x997 -
         3.2236842105263198e+29 * x827 * x829;
  x5520 = x1649 * x2031 + x1649 * x716 + x786;
  x2076 = 4.2e+18 * sc[1] * x584 + 9.6710526315789494e+29 * x1184 * x827 +
          2.1e+45 * x1386 - x1441 * (0.84 * x446 * x693 + 6.0 * x596 * x693) +
          1.8375e+77 * x1442 * x1469 - 1.8375e+77 * x1442 * x15 -
          4.2e+18 * x1487 * x929 + x2076 * x931 - x2076 * x997 -
          2.1e+45 * x428 + x796 * (0.84 * x446 * x693 + 6.0 * x596 * x693) -
          9.6710526315789494e+29 * x827 * x829;
  const amrex::Real x11841 = -x1937 * x2081 - x1957 * x971;
  x113 = 100000000.0 * sc[14] * x1707 + x10139 + x1029 * x1761 + x113 + x11841 -
         x1707 * x2119 + x5520;
  x10290 = 1.77e+38 * x10273 * x10283 * x10290 -
           1.77e+38 * x10273 * x10286 * x10290 +
           2.9555660377358502e+66 * x10279 - 3.54e+38 * x10283 +
           3.54e+38 * x10286 - 2.9555660377358502e+66 * x10315 -
           3.98e+29 * x1355 * x1684 + 1.5201919385796501e+47 * x1358 * x1466 -
           1.5201919385796501e+47 * x1466 * x525 -
           x192 * (4.0 * x1105 * x693 + 0.56 * x1690 * x693) + 3.98e+29 * x444 +
           x917 * (4.0 * x1105 * x693 + 0.56 * x1690 * x693);
  x1105 = -1.47778301886792e+66 * ((sc[8]) * (sc[8])) * x10272 * exp(x10276) +
          1.47778301886792e+66 * x10272 * x1355 *
            exp(g_RT[15] - 2.0 * g_RT[8] + x10276) +
          1.77e+38 * x10273 * x10283 * x10366 -
          1.77e+38 * x10273 * x10286 * x10366 - 1.77e+38 * x10283 +
          1.77e+38 * x10286 - 1.99e+29 * x1355 * x1684 +
          7.6009596928982695e+46 * x1358 * x1466 -
          7.6009596928982695e+46 * x1466 * x525 -
          x192 * (2.0 * x1105 * x693 + 0.28 * x1690 * x693) + 1.99e+29 * x444 +
          x917 * (2.0 * x1105 * x693 + 0.28 * x1690 * x693);
  x1690 =
    1.77e+38 * x10273 * x10283 * (6.0 * x10288 * x693 + 0.84 * x10289 * x693) -
    1.77e+38 * x10273 * x10286 * (6.0 * x10288 * x693 + 0.84 * x10289 * x693) +
    4.4333490566037699e+66 * x10279 - 5.31e+38 * x10283 + 5.31e+38 * x10286 -
    4.4333490566037699e+66 * x10315 - 5.97e+29 * x1355 * x1684 +
    2.2802879078694799e+47 * x1358 * x1466 -
    2.2802879078694799e+47 * x1466 * x525 - x192 * x2077 + x2077 * x917 +
    5.97e+29 * x444;
  x2077 = x1105 - x1957 * x2125 - x1957 * x97;
  x10272 = x10133 + x10836 + x2027 + x2042 * x731 + x2125 * x731 +
           x2278 * x731 + x2314 * x731 + x2356 * x731 + x731 * x752 +
           x731 * x97 + x8017 + x8711 + x9663;
  x10276 = -5.38e+16 * x11036 + 2.89444e+25 * x11038 * x1478 -
           2.89444e+25 * x11040 + x11067 + 5.38e+16 * x11070 - x844;
  x10366 = -2.69e+16 * x11036 + 1.44722e+25 * x11038 * x1478 -
           1.44722e+25 * x11040 + 2.69e+16 * x11070 +
           x11121 * (2.0 * x11060 * x693 + 0.28 * x11062 * x693) -
           x944 * (2.0 * x11060 * x693 + 0.28 * x11062 * x693);
  x981 = -8.07e+16 * x11036 + 4.34166e+25 * x11038 * x1478 -
         4.34166e+25 * x11038 * x674 * x981 + 8.07e+16 * x11070 +
         x11121 * (6.0 * x11060 * x693 + 0.84 * x11062 * x693) -
         x944 * (6.0 * x11060 * x693 + 0.84 * x11062 * x693);
  x11060 = 30000000.0 * sc[16] * x1092 + 50000000.0 * sc[16] * x1668 + x10366 -
           x11007 * x1668 - x1937 * x891;
  x11062 = 5.38e+21 * sc[10] * x11048 + 1.7866913580246899e+37 * x1104 * x285 -
           5.38e+21 * x11045 * x1599 - x11054 * x11057 + x11054 * x850 -
           1.7866913580246899e+37 * x280 * x285;
  x11052 = 2.69e+21 * sc[10] * x11048 + 8.9334567901234601e+36 * x1104 * x285 -
           2.69e+21 * x11045 * x1599 -
           x11057 * (2.0 * x11052 * x693 + 0.28 * x11053 * x693) -
           8.9334567901234601e+36 * x280 * x285 +
           x850 * (2.0 * x11052 * x693 + 0.28 * x11053 * x693);
  x11053 = 140000.0 * sc[3] * x1896 + x11052 + x1896 * x1959 + x1896 * x2352 +
           x1896 * x801;
  x11055 = -2.69e+21 * sc[10] * x10 * x11048 * x11055 +
           8.07e+21 * sc[10] * x11048 +
           2.69e+21 * sc[17] * x11045 * x11055 * x843 +
           140000.0 * sc[3] * x482 + 2.6800370370370399e+37 * x1104 * x285 -
           8.07e+21 * x11045 * x1599 + x1959 * x482 + x2352 * x482 -
           2.6800370370370399e+37 * x280 * x285 + x482 * x801;
  const amrex::Real x11885 = -x1092 * x875 - x1668 * x914;
  x10261 = 5.3777777777777799e+65 * x10238 * x1569 - 4.4e+36 * x10241 -
           x10261 * x10265 + x10261 * x10308 + 4.4e+36 * x10274 -
           5.3777777777777799e+65 * x10320 + 5.408e+47 * x1504 * x569 -
           5.408e+47 * x267 * x569 * x855 -
           x313 * (4.0 * x693 * x922 + 0.56 * x693 * x990) +
           x688 * (4.0 * x693 * x922 + 0.56 * x693 * x990) + 1.04e+28 * x730 -
           1.04e+28 * x792;
  x818 = 2.6888888888888899e+65 * x10238 * x1569 -
         2.6888888888888899e+65 * x10238 * x578 * x818 - 2.2e+36 * x10241 -
         x10265 * x10360 + x10308 * x10360 + 2.704e+47 * x1504 * x569 +
         2.2e+36 * x2369 * x578 * x821 -
         x313 * (2.0 * x693 * x922 + 0.28 * x693 * x990) - 2.704e+47 * x5534 +
         x688 * (2.0 * x693 * x922 + 0.28 * x693 * x990) + 5.2e+27 * x730 -
         5.2e+27 * x792;
  x10360 = 8.0666666666666698e+65 * x10238 * x1569 - 6.6e+36 * x10241 -
           x10265 * x1602 + 6.6e+36 * x10274 + x10308 * x1602 -
           8.0666666666666698e+65 * x10320 + 8.112e+47 * x1504 * x569 +
           x2175 * x482 - x313 * (6.0 * x693 * x922 + 0.84 * x693 * x990) -
           8.112e+47 * x5534 + x688 * (6.0 * x693 * x922 + 0.84 * x693 * x990) +
           1.56e+28 * x730 - 1.56e+28 * x792;
  x1602 = -x1036 * x1761 + x818;
  const amrex::Real x11896 = sc[13] * x10324 - sc[19] * x10326;
  const amrex::Real x11899 = x11896 + x1649 * x2122 + x5551;
  const amrex::Real x11903 =
    60000000.0 * sc[19] * x1761 + x11899 - x1937 * x2086;
  const amrex::Real x11905 =
    -50000000.0 * sc[14] * x1707 + x10148 - x1092 * x2072;
  x10246 = x10246 * x10251 - x10246 * x10312 + 8.54e+46 * x10256 -
           1.458632e+86 * x10317 + 1.458632e+86 * x139 * x1495 -
           8.54e+46 * x1499 * x734 - 2.66e+48 * x1719 -
           1.7689e+88 * x1764 * x1878 + 1.7689e+88 * x1764 * x780 +
           2.66e+48 * x1769 -
           x1950 * x83 * (0.56 * x693 * x916 + 4.0 * x693 * x993) +
           x1951 * x83 * (0.56 * x693 * x916 + 4.0 * x693 * x993);
  x877 = 1.33e+48 * sc[19] * sc[1] * x729 * exp(x253) + x10251 * x10357 -
         x10312 * x10357 + 7.29316e+85 * x139 * x1495 -
         7.29316e+85 * x139 * x170 * x877 - 4.27e+46 * x1499 * x734 +
         4.27e+46 * x170 * x734 * x868 - 1.33e+48 * x1719 -
         8.8445e+87 * x1764 * x1878 + 8.8445e+87 * x1764 * x780 -
         x1950 * x83 * (0.28 * x693 * x916 + 2.0 * x693 * x993) +
         x1951 * x83 * (0.28 * x693 * x916 + 2.0 * x693 * x993);
  x253 = 1800000.0 * sc[1] * x2009 + 90000.0 * sc[3] * x2009 +
         11000000.0 * sc[8] * x2009 + x2009 * x2168 + x351 + x9275;
  x868 = x10251 * x418 - x10312 * x418 - 2.187948e+86 * x10317 +
         2.187948e+86 * x139 * x1495 - 1.281e+47 * x1499 * x734 +
         1.281e+47 * x170 * x734 * x868 - 3.99e+48 * x1719 -
         2.65335e+88 * x1764 * x1878 + 2.65335e+88 * x1764 * x780 +
         3.99e+48 * x1769 - x1950 * x606 + x1951 * x606;
  x606 = -x1937 * x742 + x877;
  // Write the full Jacobian expression...
  J[0] = -180000.0 * refC * sc[0] * exp(-0.6 * tc[0] + x321) -
         7.0e+44 * refCinv * x10 * x2029 * x2030 * x664 -
         70000000.0 * sc[0] * x1007 - 30000000.0 * sc[0] * x590 * x985 +
         70000000.0 * sc[0] * x937 - 550000000.0 * sc[11] * x668 -
         20000000.0 * sc[12] * x1404 - 32000000.0 * sc[13] * x1134 -
         30000000.0 * sc[13] * x1174 - 2000000.0 * sc[14] * x1363 -
         50000000.0 * sc[16] * x736 - sc[17] * x441 - sc[19] * x407 +
         90000.0 * ((sc[1]) * (sc[1])) * exp(-0.6 * tc[0]) +
         30000000.0 * sc[1] * x1007 + 1800000.0 * sc[1] * x1636 +
         20000000.0 * sc[1] * x1879 + 2000000.0 * sc[1] * x756 -
         2000000.0 * sc[1] * x779 + 90000000.0 * sc[1] * x897 -
         90000000.0 * sc[1] * x908 - 30000000.0 * sc[1] * x937 -
         1800000.0 * sc[20] * x1336 - sc[2] * x743 - sc[3] * x143 -
         60000000.0 * sc[5] * x491 - sc[6] * x141 - sc[8] * x234 -
         x1054 * x170 + x1082 * x1472 + x1243 * x1959 -
         1000000.0 * x1267 * x1387 + x1472 * x601 - x2012 * x897 +
         x2012 * x908 - x2013 * x578 + x2016 * x923 - x2016 * x932 +
         x2018 * x725 - x2018 * x790 - x2019 * x725 + x2019 * x790 -
         x2031 * x708 - x2036 * x708 - x2040 * x325 - x2042 * x756 +
         x2042 * x779 - 60000000.0 * x48 * x664 - x586 * x674 -
         30000000.0 * x590 * x674 - 70000000.0 * x595 - x601 * x985 -
         0.5 * x675 * exp(-3638.25649376812 * invT + 2.0 * tc[0]) + x712 -
         x748 + x982 +
         (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
          73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
          15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 +
          x2018 * x677 - x2019 * x677) *
           (-x1472 + x985) +
         (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
          73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
          15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 +
          x2031 * x660 + x2036 * x660) *
           (x725 - x790 + (x677) * (-x1472 + x985)) +
         (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
           (x897 - x908 + (-x683) * (-x1472 + x985) +
            (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
            (x685) *
              (-x923 + x932 + (x680) * (-x1472 + x985) +
               (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
               (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                         (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
         (-1800000.0 * sc[1] * x376) *
           (x756 - x779 +
            (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
            (-x448) *
              (-x923 + x932 + (x680) * (-x1472 + x985) +
               (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
               (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                         (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
         (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
          73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 +
          x2036 * x640 + x2042 * x597) *
           (x1007 - x937 + (x678) * (-x1472 + x985) +
            (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
         (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
          x2012 * x685 + x2042 * x448) *
           (-x923 + x932 + (x680) * (-x1472 + x985) +
            (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
            (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                      (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[23] = 180000.0 * sc[0] * sc[1] * exp(-0.6 * tc[0]) -
          70000000.0 * sc[0] * x1471 + 70000000.0 * sc[0] * x1481 +
          1100000000.0 * sc[11] * sc[1] * x63 + sc[12] * x416 + sc[14] * x232 +
          sc[15] * x903 + 50000000.0 * sc[17] * x1013 +
          120000000.0 * sc[1] * sc[5] * exp(-1.25 * tc[0]) +
          90000000.0 * sc[1] * x1069 + 2000000.0 * sc[1] * x1212 * x1267 +
          30000000.0 * sc[1] * x1471 - 30000000.0 * sc[1] * x1481 -
          90000000.0 * sc[1] * x1526 + 2000000.0 * sc[1] * x1560 +
          1800000.0 * sc[1] * x362 - 2000000.0 * sc[1] * x423 +
          20000000.0 * sc[1] * x609 + sc[4] * x35 + sc[5] * x692 + sc[6] * x19 +
          sc[7] * x402 + sc[8] * x1185 + 70000000.0 * sc[8] * x1437 +
          x1005 * x2016 + x1030 - x1069 * x2012 - x1074 * x2016 -
          x1082 * x1665 + x1082 * x1692 + x1181 - 1800000.0 * x1340 -
          20000000.0 * x1411 + x1526 * x2012 - x1560 * x2042 - x1650 * x2031 -
          x1650 * x2036 - x1665 * x601 + x1692 * x601 + 90000000.0 * x170 +
          x1959 * x207 + x2017 * x675 + x2018 * x926 - x2018 * x936 -
          x2019 * x926 + x2019 * x936 + x2042 * x423 + x287 + 2000000.0 * x325 +
          30000000.0 * x595 + x726 - 1800000.0 * x766 + x773 + x794 -
          20000000.0 * x930 +
          (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
           73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
           15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 +
           x2018 * x677 - x2019 * x677) *
            (x1665 - x1692) +
          (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
           73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
           15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 +
           x2031 * x660 + x2036 * x660) *
            (x926 - x936 + (x677) * (x1665 - x1692)) +
          (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
            (x1069 - x1526 + (-x683) * (x1665 - x1692) +
             (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x685) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (-1800000.0 * sc[1] * x376) *
            (x1560 - x423 +
             (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                        (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
             (-x448) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
           73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 +
           x2036 * x640 + x2042 * x597) *
            (x1471 - x1481 + (x678) * (x1665 - x1692) +
             (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
          (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 -
           x1959 * x483 - x2012 * x685 + x2042 * x448) *
            (-x1005 + x1074 + (x680) * (x1665 - x1692) +
             (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[46] = -70000000.0 * sc[0] * x1482 - sc[0] * x743 +
          70000000.0 * sc[0] * x961 + 1800000.0 * sc[1] * x1063 +
          2000000.0 * sc[1] * x1081 + 90000000.0 * sc[1] * x115 +
          30000000.0 * sc[1] * x1482 + 73400000.0 * sc[1] * x1633 -
          90000000.0 * sc[1] * x1653 - 2000000.0 * sc[1] * x1718 +
          20000000.0 * sc[1] * x2044 * x220 + 20000000.0 * sc[1] * x624 -
          73400000.0 * sc[1] * x824 - 30000000.0 * sc[1] * x961 - x1 * x2031 -
          x1 * x2036 - x1081 * x2042 - x1082 * x1753 + x1082 * x1773 -
          x115 * x2012 - x1633 * x2016 + x1653 * x2012 + x1718 * x2042 -
          x1753 * x601 + x1773 * x601 + x2016 * x824 + x2018 * x968 -
          x2018 * x995 - x2019 * x968 + x2019 * x995 + x773 + x794 + x934 +
          (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
           73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
           15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 +
           x2018 * x677 - x2019 * x677) *
            (x1753 - x1773) +
          (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
           73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
           15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 +
           x2031 * x660 + x2036 * x660) *
            (x968 - x995 + (x677) * (x1753 - x1773)) +
          (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
            (x115 - x1653 + (-x683) * (x1753 - x1773) +
             (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x685) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (-1800000.0 * sc[1] * x376) *
            (x1081 - x1718 +
             (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                        (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
             (-x448) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
           73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 +
           x2036 * x640 + x2042 * x597) *
            (x1482 - x961 + (x678) * (x1753 - x1773) +
             (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
          (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 -
           x1959 * x483 - x2012 * x685 + x2042 * x448) *
            (x1633 - x824 + (x680) * (x1753 - x1773) +
             (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[69] =
    -sc[0] * x143 - 70000000.0 * sc[0] * x1535 + 70000000.0 * sc[0] * x1537 +
    30000000.0 * sc[1] * x1535 - 30000000.0 * sc[1] * x1537 +
    90000000.0 * sc[1] * x1654 - 73400000.0 * sc[1] * x1656 +
    73400000.0 * sc[1] * x1672 - 90000000.0 * sc[1] * x1685 -
    2000000.0 * sc[1] * x1739 + 1800000.0 * sc[1] * x185 +
    2000000.0 * sc[1] * x250 + 20000000.0 * sc[1] * x998 +
    15000000.0 * sc[2] * x1535 - 15000000.0 * sc[2] * x1537 - x1000 * x2018 +
    x1000 * x2019 - x1082 * x1822 + x1082 * x1838 + x1639 * x1959 -
    x1654 * x2012 + x1656 * x2016 - x1672 * x2016 + x1685 * x2012 +
    x1739 * x2042 - x1822 * x601 + x1838 * x601 + x2018 * x999 - x2019 * x999 -
    x2031 * x659 - x2036 * x659 - x2042 * x250 + x773 + x794 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x1822 - x1838) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[92] =
    -70000000.0 * sc[0] * x1385 + 70000000.0 * sc[0] * x1563 +
    30000000.0 * sc[1] * x1385 - 30000000.0 * sc[1] * x1563 +
    20000000.0 * sc[1] * x1678 - 73400000.0 * sc[1] * x1686 +
    90000000.0 * sc[1] * x1708 - 90000000.0 * sc[1] * x1745 -
    2000000.0 * sc[1] * x1759 + 2000000.0 * sc[1] * x1780 +
    1800000.0 * sc[1] * x1981 + sc[1] * x35 + 73400000.0 * sc[1] * x548 +
    15000000.0 * sc[2] * x1385 - 15000000.0 * sc[2] * x1563 + x1006 * x2018 -
    x1006 * x2019 - x1008 * x2018 + x1008 * x2019 - x1082 * x1824 +
    x1082 * x1887 + x1686 * x2016 - x1701 * x2031 - x1701 * x2036 -
    x1708 * x2012 - x172 + x1743 * x1959 + x1745 * x2012 + x1759 * x2042 -
    x1780 * x2042 - x1824 * x601 + x1887 * x601 - x2016 * x548 + x773 + x794 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x1824 - x1887) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[115] =
    70000000.0 * sc[0] * x1320 - 70000000.0 * sc[0] * x1564 -
    60000000.0 * sc[0] * x491 +
    60000000.0 * ((sc[1]) * (sc[1])) * exp(-1.25 * tc[0]) -
    30000000.0 * sc[1] * x1320 + 30000000.0 * sc[1] * x1564 +
    90000000.0 * sc[1] * x1747 - 90000000.0 * sc[1] * x1748 +
    2000000.0 * sc[1] * x1760 - 2000000.0 * sc[1] * x1844 +
    20000000.0 * sc[1] * x1871 + 1800000.0 * sc[1] * x1880 + sc[1] * x692 +
    x1039 * x2018 - x1039 * x2019 - x1042 * x2018 + x1042 * x2019 -
    x1082 * x1956 + x1082 * x1973 - 4.2e+45 * x1386 +
    x1441 * (1.68 * x446 * x693 + 12.0 * x596 * x693) -
    3.675e+77 * x1442 * x1469 + 3.675e+77 * x1442 * x15 - x1682 * x2031 -
    x1682 * x2036 - x1747 * x2012 + x1748 * x2012 + x1750 * x2016 -
    x1751 * x2016 - x1760 * x2042 + x1763 * x1959 + x1844 * x2042 -
    x1956 * x601 + x1973 * x601 + 4.2e+45 * x428 + x662 -
    x796 * (1.68 * x446 * x693 + 12.0 * x596 * x693) +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x1956 - x1973) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[138] =
    -sc[0] * x141 + 70000000.0 * sc[0] * x1440 -
    30000000.0 * sc[0] * x2014 * x590 - 70000000.0 * sc[0] * x921 +
    20000000.0 * sc[1] * x1408 - 30000000.0 * sc[1] * x1440 +
    90000000.0 * sc[1] * x1755 - 73400000.0 * sc[1] * x1756 +
    73400000.0 * sc[1] * x1768 + 2000000.0 * sc[1] * x1865 -
    2000000.0 * sc[1] * x1867 + sc[1] * x19 + 1800000.0 * sc[1] * x1977 -
    90000000.0 * sc[1] * x227 + 30000000.0 * sc[1] * x921 -
    15000000.0 * sc[2] * x1440 + 15000000.0 * sc[2] * x921 + x1043 * x2018 -
    x1043 * x2019 - x1045 * x2018 + x1045 * x2019 + x1082 * x2032 + x1215 -
    x1755 * x2012 + x1756 * x2016 - x1768 * x2016 + x1826 * x1959 -
    x1865 * x2042 + x1867 * x2042 + x2012 * x227 - x2014 * x601 + x2032 * x601 +
    x773 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x2014 - x2032) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[161] =
    -70000000.0 * sc[0] * x1580 + 70000000.0 * sc[0] * x476 +
    30000000.0 * sc[1] * x1580 + 90000000.0 * sc[1] * x1767 -
    90000000.0 * sc[1] * x1812 - 2000000.0 * sc[1] * x1875 +
    2000000.0 * sc[1] * x1891 + sc[1] * x402 - 30000000.0 * sc[1] * x476 +
    x1051 * x2018 - x1051 * x2019 - x1052 * x2018 + x1052 * x2019 -
    x1082 * x2070 + x1082 * x2087 + x1281 + x1288 - x1767 * x2012 +
    x1770 * x2016 - x1772 * x2016 + x1812 * x2012 + x1875 * x2042 -
    x1891 * x2042 - x2070 * x601 + x2087 * x601 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x2070 - x2087) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[184] =
    -sc[0] * x234 + 70000000.0 * sc[0] * x315 - 70000000.0 * sc[0] * x789 +
    sc[1] * x1185 + 70000000.0 * sc[1] * x1437 + 20000000.0 * sc[1] * x1641 -
    73400000.0 * sc[1] * x1779 + 73400000.0 * sc[1] * x1782 +
    90000000.0 * sc[1] * x1813 - 90000000.0 * sc[1] * x1833 +
    2000000.0 * sc[1] * x1881 - 2000000.0 * sc[1] * x1960 -
    30000000.0 * sc[1] * x315 + 1800000.0 * sc[1] * x339 +
    30000000.0 * sc[1] * x789 - 15000000.0 * sc[2] * x315 +
    15000000.0 * sc[2] * x789 + x1056 * x2018 - x1056 * x2019 - x1059 * x2018 +
    x1059 * x2019 - x1082 * x2080 + x1082 * x2141 + x1215 + x1240 * x1959 +
    x1779 * x2016 - x1782 * x2016 - x1813 * x2012 + x1833 * x2012 -
    x1881 * x2042 + x1960 * x2042 - x2080 * x601 + x2141 * x601 + x773 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x2080 - x2141) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[207] =
    70000000.0 * sc[0] * x1149 - 2000000.0 * sc[0] * x1387 -
    70000000.0 * sc[0] * x646 + 2000000.0 * ((sc[1]) * (sc[1])) * x1212 -
    30000000.0 * sc[1] * x1149 - 90000000.0 * sc[1] * x1825 +
    90000000.0 * sc[1] * x1841 + 2000000.0 * sc[1] * x1961 -
    2000000.0 * sc[1] * x1962 + 1800000.0 * sc[1] * x2010 +
    20000000.0 * sc[1] * x634 + 30000000.0 * sc[1] * x646 + x1060 * x2018 -
    x1060 * x2019 - x1062 * x2018 + x1062 * x2019 + x1082 * x2186 -
    x1082 * x649 + x1433 - x1742 * x2016 - x1758 * x2031 - x1758 * x2036 +
    x1787 * x2016 + x1825 * x2012 - x1841 * x2012 + x1959 * x858 -
    x1961 * x2042 + x1962 * x2042 + x2186 * x601 - x601 * x649 + x712 + x951 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x2186 + x649) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[230] =
    70000000.0 * sc[0] * x1037 - 1000000.0 * sc[0] * x1387 -
    70000000.0 * sc[0] * x1590 + 1000000.0 * ((sc[1]) * (sc[1])) * x1212 -
    30000000.0 * sc[1] * x1037 + 30000000.0 * sc[1] * x1590 +
    90000000.0 * sc[1] * x1830 - 90000000.0 * sc[1] * x1831 +
    2000000.0 * sc[1] * x1968 - 2000000.0 * sc[1] * x1969 +
    1800000.0 * sc[1] * x2011 + 20000000.0 * sc[1] * x722 + x1064 * x2018 -
    x1064 * x2019 - x1071 * x2018 + x1071 * x2019 + x1082 * x2271 -
    x1082 * x946 + x125 + x1441 * (0.42 * x446 * x693 + 3.0 * x596 * x693) -
    9.1875e+76 * x1442 * x1469 + 9.1875e+76 * x1442 * x15 + x1676 * x2016 +
    x174 * x1959 - x1741 * x2016 - x1830 * x2012 + x1831 * x2012 -
    x1968 * x2042 + x1969 * x2042 - 1.05e+45 * x2 * x2029 * x2030 * x664 -
    x2031 * x311 - x2036 * x311 + x2271 * x601 + 1.05e+45 * x428 - x601 * x946 -
    x796 * (0.42 * x446 * x693 + 3.0 * x596 * x693) +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x2271 + x946) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[253] =
    70000000.0 * sc[0] * x1047 - 550000000.0 * sc[0] * x668 -
    70000000.0 * sc[0] * x963 + 550000000.0 * ((sc[1]) * (sc[1])) * x63 -
    30000000.0 * sc[1] * x1047 - 90000000.0 * sc[1] * x1877 -
    2000000.0 * sc[1] * x1970 + 20000000.0 * sc[1] * x634 +
    2000000.0 * sc[1] * x755 + 1800000.0 * sc[1] * x774 +
    90000000.0 * sc[1] * x896 + 30000000.0 * sc[1] * x963 + x1072 * x2018 -
    x1072 * x2019 - x1073 * x2018 + x1073 * x2019 - x1082 * x1480 +
    x1082 * x2323 - x1480 * x601 + x1749 * x2016 - x1814 * x2016 +
    x1877 * x2012 + x1959 * x858 + x1970 * x2042 - x2012 * x896 - x2031 * x707 -
    x2036 * x707 - x2042 * x755 + x2323 * x601 + x712 + x94 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x1480 - x2323) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[276] =
    -20000000.0 * sc[0] * x1404 - 70000000.0 * sc[0] * x1640 +
    70000000.0 * sc[0] * x1659 + 20000000.0 * sc[1] * x1533 +
    1800000.0 * sc[1] * x1554 + 30000000.0 * sc[1] * x1640 -
    30000000.0 * sc[1] * x1659 + 90000000.0 * sc[1] * x1886 -
    90000000.0 * sc[1] * x1897 + 2000000.0 * sc[1] * x1971 -
    2000000.0 * sc[1] * x1979 + sc[1] * x416 + x1075 * x2018 - x1075 * x2019 -
    x1082 * x1453 + x1082 * x2360 + x1215 + x1221 - x1453 * x601 +
    x1818 * x2016 - x1819 * x2016 - x1886 * x2012 + x1897 * x2012 +
    x1959 * x229 - x1971 * x2042 + x1979 * x2042 - x2018 * x671 + x2019 * x671 +
    x2360 * x601 + x773 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x1453 - x2360) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[299] =
    -32000000.0 * sc[0] * x1134 - 30000000.0 * sc[0] * x1174 -
    70000000.0 * sc[0] * x1663 + 70000000.0 * sc[0] * x1664 +
    30000000.0 * sc[1] * x1663 - 30000000.0 * sc[1] * x1664 +
    90000000.0 * sc[1] * x1860 - 90000000.0 * sc[1] * x1862 -
    2000000.0 * sc[1] * x1884 + 2000000.0 * sc[1] * x1987 +
    1800000.0 * sc[1] * x2009 + x1035 * x1082 + x1035 * x601 + x1078 * x2018 -
    x1078 * x2019 - x1080 * x2018 + x1080 * x2019 - x1082 * x809 -
    x1522 * x2031 - x1522 * x2036 + x1821 * x2016 - x1823 * x2016 -
    x1860 * x2012 + x1862 * x2012 + x1884 * x2042 - x1987 * x2042 + x353 -
    x601 * x809 + x762 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1035 + x809) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[322] =
    -2000000.0 * sc[0] * x1363 - 70000000.0 * sc[0] * x1670 +
    70000000.0 * sc[0] * x1679 + 30000000.0 * sc[1] * x1670 -
    30000000.0 * sc[1] * x1679 - 90000000.0 * sc[1] * x1862 +
    90000000.0 * sc[1] * x1872 - 2000000.0 * sc[1] * x1884 +
    2000000.0 * sc[1] * x1947 + sc[1] * x232 + 1800000.0 * sc[1] * x374 +
    7.0e+44 * x10 * x1470 * x2029 + x1082 * x1118 - x1082 * x1205 +
    x1083 * x2018 - x1083 * x2019 - x1084 * x2018 + x1084 * x2019 +
    x1118 * x601 - x1205 * x601 + x1330 + x1828 * x2016 - x1829 * x2031 -
    x1829 * x2036 - x1834 * x2016 + x1862 * x2012 - x1872 * x2012 +
    x1884 * x2042 - x1947 * x2042 + x353 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1118 + x1205) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[345] =
    -70000000.0 * sc[0] * x1680 + 70000000.0 * sc[0] * x1688 +
    30000000.0 * sc[1] * x1680 - 30000000.0 * sc[1] * x1688 +
    1800000.0 * sc[1] * x1716 + 2000000.0 * sc[1] * x1837 -
    2000000.0 * sc[1] * x1882 - 90000000.0 * sc[1] * x1925 +
    90000000.0 * sc[1] * x502 + sc[1] * x903 - x1082 * x216 + x1082 * x894 +
    x1085 * x2018 - x1085 * x2019 - x1086 * x2018 + x1086 * x2019 -
    x1229 * x2031 - x1229 * x2036 + x1360 + x1835 * x2016 - x1836 * x2016 -
    x1837 * x2042 + x1882 * x2042 + x1925 * x2012 - x2012 * x502 - x216 * x601 +
    x353 + x601 * x894 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (x216 - x894) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-1800000.0 * sc[1] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[368] =
    -70000000.0 * sc[0] * x1689 - 50000000.0 * sc[0] * x736 +
    30000000.0 * sc[1] * x1689 + 73400000.0 * sc[1] * x1815 +
    90000000.0 * sc[1] * x1932 + 15000000.0 * sc[2] * x1689 + x1070 * x1082 +
    x1070 * x601 - x1082 * x955 + x1087 * x2018 - x1087 * x2019 -
    x1088 * x2018 + x1088 * x2019 + x1281 - x1815 * x2016 - x1932 * x2012 -
    x601 * x955 + x777 + x900 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1070 + x955) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[391] =
    -70000000.0 * sc[0] * x1625 - sc[0] * x441 + 50000000.0 * sc[1] * x1013 +
    30000000.0 * sc[1] * x1625 + 73400000.0 * sc[1] * x1817 +
    90000000.0 * sc[1] * x183 + 15000000.0 * sc[2] * x1625 - x1082 * x958 +
    x1089 * x2018 - x1089 * x2019 - x1817 * x2016 - x183 * x2012 -
    x1945 * x2031 - x1945 * x2036 + x1959 * x837 - x601 * x958 + x794 + x900 +
    x912 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1668 + x958) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[414] =
    -70000000.0 * sc[0] * x1018 + 30000000.0 * sc[1] * x1018 +
    20000000.0 * sc[1] * x1265 * x2044 + 73400000.0 * sc[1] * x1863 +
    2000000.0 * sc[1] * x1958 + 90000000.0 * sc[1] * x233 +
    15000000.0 * sc[2] * x1018 - x1082 * x1694 + x1141 * x2018 - x1141 * x2019 +
    x1215 + x1372 + x1507 - x1694 * x601 + x1761 * x2016 - x1863 * x2016 -
    x1958 * x2042 - x2012 * x233 + x912 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1668 + x1694) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[437] =
    -70000000.0 * sc[0] * x1729 + 70000000.0 * sc[0] * x262 - sc[0] * x407 +
    30000000.0 * sc[1] * x1729 - 73400000.0 * sc[1] * x1870 +
    73400000.0 * sc[1] * x1873 + 20000000.0 * sc[1] * x1885 +
    90000000.0 * sc[1] * x1946 + 1800000.0 * sc[1] * x2009 -
    30000000.0 * sc[1] * x262 + 2000000.0 * sc[1] * x655 +
    15000000.0 * sc[2] * x1729 - 15000000.0 * sc[2] * x262 + x1009 * x1082 +
    x1009 * x601 - x1057 * x1082 - x1057 * x601 + x1161 * x2018 -
    x1161 * x2019 - x1167 * x2018 + x1167 * x2019 + x1372 + x1507 +
    x1870 * x2016 - x1873 * x2016 + x1896 * x1959 - x1946 * x2012 -
    x2031 * x65 - x2036 * x65 - x2042 * x655 + x773 + x794 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1009 + x1057) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[460] =
    -1800000.0 * sc[0] * x1336 - 70000000.0 * sc[0] * x1675 +
    1800000.0 * sc[1] * x1339 + 30000000.0 * sc[1] * x1675 +
    73400000.0 * sc[1] * x1874 + 20000000.0 * sc[1] * x1885 +
    90000000.0 * sc[1] * x1949 + 2000000.0 * sc[1] * x1966 +
    15000000.0 * sc[2] * x1675 + x1082 * x1668 - x1082 * x784 - x1092 * x2018 +
    x1092 * x2019 + x1215 + x1372 + x1443 * x2018 - x1443 * x2019 + x1507 +
    x1668 * x601 + x1761 * x2016 - x1874 * x2016 + x1896 * x1959 -
    x1949 * x2012 - x1966 * x2042 - x601 * x784 + x777 + x791 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x1668 + x784) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[483] =
    -70000000.0 * sc[0] * x1752 + 70000000.0 * sc[0] * x1757 +
    30000000.0 * sc[1] * x1752 - 30000000.0 * sc[1] * x1757 +
    90000000.0 * sc[1] * x1788 + x1082 * x647 - x1082 * x669 + x1281 +
    x1444 * x2018 - x1444 * x2019 - x1445 * x2018 + x1445 * x2019 -
    x1788 * x2012 - x1876 * x2016 + x601 * x647 - x601 * x669 + x900 + x911 +
    (-70000000.0 * sc[0] * x678 + 30000000.0 * sc[1] * x678 +
     73400000.0 * sc[1] * x680 - 90000000.0 * sc[1] * x683 +
     15000000.0 * sc[2] * x678 + x2012 * x683 - x2016 * x680 + x2018 * x677 -
     x2019 * x677) *
      (-x647 + x669) +
    (-70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x679 +
     73400000.0 * sc[1] * x681 + 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 - x2012 * x684 - x2016 * x681 + x2031 * x660 +
     x2036 * x660) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-x1959 * x231 + x2031 * x67 + x2036 * x67) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-1800000.0 * sc[1] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-2000000.0 * sc[1] * x597 - 20000000.0 * sc[1] * x637 +
     73400000.0 * sc[1] * x682 - x2016 * x682 + x2031 * x640 + x2036 * x640 +
     x2042 * x597) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x685 - x1959 * x483 -
     x2012 * x685 + x2042 * x448) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[1] =
    360000.0 * refC * sc[0] * exp(-0.6 * tc[0] + x321) +
    30000000.0 * sc[0] * x590 * x985 + 73400000.0 * sc[10] * x1291 +
    1100000000.0 * sc[11] * x668 + 20000000.0 * sc[12] * x1404 +
    30000000.0 * sc[13] * x1174 + 2000000.0 * sc[14] * x1363 + sc[17] * x441 +
    sc[19] * x407 - 180000.0 * ((sc[1]) * (sc[1])) * exp(-0.6 * tc[0]) -
    30000000.0 * sc[1] * x1007 - 90000000.0 * sc[1] * x1243 -
    1800000.0 * sc[1] * x1636 - 68000000.0 * sc[1] * x1879 -
    30000000.0 * sc[1] * x74 * x897 + 30000000.0 * sc[1] * x74 * x908 -
    2000000.0 * sc[1] * x756 + 2000000.0 * sc[1] * x779 -
    90000000.0 * sc[1] * x897 + 90000000.0 * sc[1] * x908 +
    73400000.0 * sc[1] * x923 - 73400000.0 * sc[1] * x932 +
    30000000.0 * sc[1] * x937 + 1800000.0 * sc[20] * x1336 +
    15000000.0 * sc[2] * x1007 + 80000000.0 * sc[2] * x725 +
    80200000.0 * sc[2] * x756 - 80200000.0 * sc[2] * x779 -
    80000000.0 * sc[2] * x790 - 15000000.0 * sc[2] * x937 + sc[3] * x143 -
    30000000.0 * sc[4] * x1472 + 30000000.0 * sc[4] * x985 +
    120000000.0 * sc[5] * x491 + sc[6] * x141 - 30000000.0 * sc[8] * x1472 +
    sc[8] * x234 + 30000000.0 * sc[8] * x985 + x1007 * x2008 + x1007 * x2085 +
    x1066 + x1067 + x1068 - x1082 * x1472 - x1243 * x1959 - x1243 * x2175 +
    2000000.0 * x1267 * x1387 - x1472 * x601 + x1547 + x1552 + x1636 * x2168 -
    x1636 * x2194 - x2008 * x937 - x2018 * x725 + x2018 * x790 + x2021 * x897 -
    x2021 * x908 + x2022 + x2024 * x725 - x2024 * x790 - x2028 * x923 +
    x2028 * x932 + x2036 * x708 + x2040 * x325 + x2042 * x756 - x2042 * x779 +
    x2063 * x923 - x2063 * x932 + x2064 - x2073 * x725 + x2073 * x790 -
    x2081 * x897 + x2081 * x908 + x2083 * x923 - x2083 * x932 + x2084 * x923 -
    x2084 * x932 - x2085 * x937 + x2094 - x2125 * x756 + x2125 * x779 + x2128 -
    x2138 * x756 + x2138 * x779 + x2148 * x756 - x2148 * x779 + x318 +
    60000000.0 * x48 * x664 + x571 * x923 - x571 * x932 + x586 * x674 +
    30000000.0 * x590 * x674 + x601 * x985 + x639 + x748 + x913 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1472 + x985) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[24] =
    -360000.0 * sc[0] * sc[1] * exp(-0.6 * tc[0]) -
    10560000.0 * sc[11] * sc[1] * x2169 - 2200000000.0 * sc[11] * sc[1] * x63 -
    sc[15] * x903 - sc[16] * x204 - 100000000.0 * sc[16] -
    80200000.0 * sc[18] * x1378 -
    240000000.0 * sc[1] * sc[5] * exp(-1.25 * tc[0]) +
    73400000.0 * sc[1] * x1005 - 30000000.0 * sc[1] * x1069 * x74 -
    90000000.0 * sc[1] * x1069 - 73400000.0 * sc[1] * x1074 -
    4000000.0 * sc[1] * x1212 * x1267 - 30000000.0 * sc[1] * x1471 +
    30000000.0 * sc[1] * x1481 + 30000000.0 * sc[1] * x1526 * x74 +
    90000000.0 * sc[1] * x1526 - 2000000.0 * sc[1] * x1560 -
    90000000.0 * sc[1] * x207 - 1800000.0 * sc[1] * x362 +
    2000000.0 * sc[1] * x423 - 68000000.0 * sc[1] * x609 -
    500000.0 * sc[2] * x10 * x1212 + 15000000.0 * sc[2] * x1471 -
    15000000.0 * sc[2] * x1481 + 80200000.0 * sc[2] * x1560 -
    80200000.0 * sc[2] * x423 + 80000000.0 * sc[2] * x926 -
    80000000.0 * sc[2] * x936 + 30000000.0 * sc[4] * x1665 -
    30000000.0 * sc[4] * x1692 - sc[5] * x692 - sc[7] * x2170 - sc[7] * x402 +
    30000000.0 * sc[8] * x1665 - 30000000.0 * sc[8] * x1692 -
    1350000000000.0 * x10 * x1002 - 3200000000000000.0 * x10 * x2071 * x675 -
    1.99e+29 * x10 * x2120 * x325 - 1.4e+18 * x10 * x584 - x1005 * x2028 +
    x1005 * x2063 + x1005 * x2083 + x1005 * x2084 + x1005 * x571 +
    90000000.0 * x1025 - x1030 - x1069 * x2081 + x1074 * x2028 - x1074 * x2063 -
    x1074 * x2083 - x1074 * x2084 - x1074 * x571 + x1082 * x1665 -
    x1082 * x1692 - x1181 - 28000000.0 * x1249 * x1426 + 90000000.0 * x1266 +
    1800000.0 * x1340 + 68000000.0 * x1411 + x1471 * x2008 + x1471 * x2085 -
    x1481 * x2008 - x1481 * x2085 + x1526 * x2081 + x1559 + x1560 * x2042 -
    x1560 * x2125 - x1560 * x2138 + x1560 * x2148 + x1650 * x2036 +
    x1665 * x601 - x1692 * x601 - 30000000.0 * x170 * x74 - 90000000.0 * x170 -
    x1700 * x2191 - x177 - x1959 * x207 - x2017 * x675 - x2018 * x926 +
    x2018 * x936 + x2024 * x926 - x2024 * x936 - x2042 * x423 - x207 * x2175 -
    x2073 * x926 + x2073 * x936 + x2125 * x423 - 100000000.0 * x2129 * x607 -
    4990000.0 * x2137 * x325 + x2138 * x423 - x2148 * x423 + x2182 -
    x2194 * x362 - 2000000.0 * x325 - 15000000.0 * x472 * x578 -
    80000000.0 * x494 * x578 - 30000000.0 * x530 * x578 + x5459 + x5473 +
    x5477 + x5480 + x5486 + x5499 + x5502 + x5556 + x5574 - 73400000.0 * x578 -
    30000000.0 * x595 + x602 + x615 + x641 + 1800000.0 * x766 + x819 +
    68000000.0 * x930 + x973 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1665 - x1692) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[47] =
    70000000.0 * sc[0] * x1482 + sc[0] * x743 - 70000000.0 * sc[0] * x961 +
    16.32 * sc[13] * x5621 + 100000000.0 * sc[16] -
    500000.0 * sc[1] * x10 * x1212 - 1800000.0 * sc[1] * x1063 -
    2000000.0 * sc[1] * x1081 - 30000000.0 * sc[1] * x115 * x74 -
    90000000.0 * sc[1] * x115 - 30000000.0 * sc[1] * x1482 -
    73400000.0 * sc[1] * x1633 + 30000000.0 * sc[1] * x1653 * x74 +
    90000000.0 * sc[1] * x1653 + 2000000.0 * sc[1] * x1718 -
    20000000.0 * sc[1] * x2044 * x220 - 90000000.0 * sc[1] * x220 -
    68000000.0 * sc[1] * x624 + 73400000.0 * sc[1] * x824 +
    30000000.0 * sc[1] * x961 + 80200000.0 * sc[2] * x1081 -
    80200000.0 * sc[2] * x1718 + 80000000.0 * sc[2] * x968 -
    80000000.0 * sc[2] * x995 + 28000000.0 * sc[3] * x1482 -
    28000000.0 * sc[3] * x961 + 30000000.0 * sc[4] * x1753 -
    30000000.0 * sc[4] * x1773 + sc[4] * x5582 + sc[5] * x5579 +
    30000000.0 * sc[8] * x1753 - 30000000.0 * sc[8] * x1773 + x1 * x2036 +
    x1063 * x2168 - x1063 * x2194 + x1081 * x2042 - x1081 * x2125 -
    x1081 * x2138 + x1081 * x2148 + x1082 * x1753 - x1082 * x1773 +
    x115 * x2021 - x115 * x2081 + x1482 * x2008 + x1482 * x2085 +
    x1633 * x2028 - x1633 * x2063 - x1633 * x2083 - x1633 * x2084 -
    x1633 * x571 - x1653 * x2021 + x1653 * x2081 - x1718 * x2042 +
    x1718 * x2125 + x1718 * x2138 - x1718 * x2148 + x1753 * x601 -
    x1773 * x601 - x2008 * x961 - x2018 * x968 + x2018 * x995 + x2019 * x968 -
    x2019 * x995 + x2024 * x968 - x2024 * x995 - x2028 * x824 + x2063 * x824 -
    x2073 * x968 + x2073 * x995 + x2083 * x824 + x2084 * x824 - x2085 * x961 -
    x2175 * x220 + 80200000.0 * x325 + x5499 + x5502 + x5556 + x5574 + x5632 +
    x5641 + x5649 + x5657 + x5662 + x571 * x824 + 80000000.0 * x675 + x934 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1753 - x1773) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[70] =
    sc[0] * x143 + 70000000.0 * sc[0] * x1535 - 70000000.0 * sc[0] * x1537 -
    30000000.0 * sc[1] * x1535 + 30000000.0 * sc[1] * x1537 -
    90000000.0 * sc[1] * x1639 - 30000000.0 * sc[1] * x1654 * x74 -
    90000000.0 * sc[1] * x1654 + 73400000.0 * sc[1] * x1656 -
    73400000.0 * sc[1] * x1672 + 30000000.0 * sc[1] * x1685 * x74 +
    90000000.0 * sc[1] * x1685 + 2000000.0 * sc[1] * x1739 -
    1800000.0 * sc[1] * x185 - 2000000.0 * sc[1] * x250 -
    68000000.0 * sc[1] * x998 - 80000000.0 * sc[2] * x1000 +
    15000000.0 * sc[2] * x1535 - 15000000.0 * sc[2] * x1537 -
    80200000.0 * sc[2] * x1739 + 57000000.0 * sc[2] * x1822 -
    57000000.0 * sc[2] * x1838 + 80200000.0 * sc[2] * x250 +
    80000000.0 * sc[2] * x999 + 28000000.0 * sc[3] * x1535 -
    28000000.0 * sc[3] * x1537 + 30000000.0 * sc[4] * x1822 -
    30000000.0 * sc[4] * x1838 + 30000000.0 * sc[8] * x1822 -
    30000000.0 * sc[8] * x1838 + x1000 * x2018 - x1000 * x2019 - x1000 * x2024 +
    x1000 * x2073 + x1082 * x1822 - x1082 * x1838 + x1535 * x2008 +
    x1535 * x2085 - x1537 * x2008 - x1537 * x2085 - x1639 * x1959 -
    x1639 * x2175 + x1654 * x2021 - x1654 * x2081 - x1656 * x2025 -
    x1656 * x2028 + x1656 * x2063 + x1656 * x2083 + x1656 * x2084 +
    x1656 * x571 + x1672 * x2025 + x1672 * x2028 - x1672 * x2063 -
    x1672 * x2083 - x1672 * x2084 - x1672 * x571 - x1685 * x2021 +
    x1685 * x2081 - x1739 * x2042 + x1739 * x2125 + x1739 * x2138 -
    x1739 * x2148 + x1822 * x601 - x1838 * x601 + x185 * x2168 - x185 * x2194 -
    x2018 * x999 + x2019 * x999 + x2024 * x999 + x2036 * x659 + x2042 * x250 -
    x2073 * x999 - x2125 * x250 - x2138 * x250 + x2148 * x250 + x5489 + x5498 +
    x5502 + x5556 + x5574 + x5710 + x5715 + x5724 + x5731 + x5740 + x5741 +
    28000000.0 * x595 + 5280000.0 * x675 * exp(-754.82499870708 * invT) +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1822 - x1838) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[93] =
    70000000.0 * sc[0] * x1385 - 70000000.0 * sc[0] * x1563 -
    28000000.0 * sc[1] * x1248 * x1426 - 30000000.0 * sc[1] * x1385 +
    30000000.0 * sc[1] * x1563 - 68000000.0 * sc[1] * x1678 +
    73400000.0 * sc[1] * x1686 - 30000000.0 * sc[1] * x1708 * x74 -
    90000000.0 * sc[1] * x1708 - 90000000.0 * sc[1] * x1743 +
    30000000.0 * sc[1] * x1745 * x74 + 90000000.0 * sc[1] * x1745 +
    2000000.0 * sc[1] * x1759 - 2000000.0 * sc[1] * x1780 -
    1800000.0 * sc[1] * x1981 - 73400000.0 * sc[1] * x548 +
    80000000.0 * sc[2] * x1006 - 80000000.0 * sc[2] * x1008 +
    15000000.0 * sc[2] * x1385 - 15000000.0 * sc[2] * x1563 -
    80200000.0 * sc[2] * x1759 + 80200000.0 * sc[2] * x1780 + sc[2] * x5582 +
    30000000.0 * sc[4] * x1824 - 30000000.0 * sc[4] * x1887 + sc[5] * x5747 +
    32000000.0 * sc[8] * x1393 + 30000000.0 * sc[8] * x1824 -
    30000000.0 * sc[8] * x1887 + 500000.0 * x10 * x1967 - x1006 * x2018 +
    x1006 * x2019 + x1006 * x2024 - x1006 * x2073 + x1008 * x2018 -
    x1008 * x2019 - x1008 * x2024 + x1008 * x2073 + x1082 * x1824 -
    x1082 * x1887 + x1385 * x2008 + x1385 * x2085 - x1563 * x2008 -
    x1563 * x2085 - x1686 * x2028 + x1686 * x2063 + x1686 * x2083 +
    x1686 * x2084 + x1686 * x571 + x1701 * x2036 + x1708 * x2021 -
    x1708 * x2081 + x172 - x1743 * x1959 - x1743 * x2175 - x1745 * x2021 +
    x1745 * x2081 - x1759 * x2042 + x1759 * x2125 + x1759 * x2138 -
    x1759 * x2148 + x1780 * x2042 - x1780 * x2125 - x1780 * x2138 +
    x1780 * x2148 + x1824 * x601 - x1887 * x601 + x1981 * x2168 -
    x1981 * x2194 + x2028 * x548 - x2063 * x548 - x2083 * x548 - x2084 * x548 -
    x548 * x571 + x5499 + x5502 + x5556 + x5574 + x5750 + 141600000.0 * x5753 +
    x5805 + x5815 + x5823 + x5830 + x5834 + x5837 + 30000000.0 * x674 +
    20000000.0 * x675 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1824 - x1887) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[116] =
    refC * sc[6] * x5947 + 120000000.0 * sc[0] * x491 -
    120000000.0 * ((sc[1]) * (sc[1])) * exp(-1.25 * tc[0]) -
    sc[1] * sc[3] * x521 - 8100000000000.0 * sc[1] * x1002 +
    30000000.0 * sc[1] * x1320 - 30000000.0 * sc[1] * x1564 -
    30000000.0 * sc[1] * x1747 * x74 - 90000000.0 * sc[1] * x1747 +
    30000000.0 * sc[1] * x1748 * x74 + 90000000.0 * sc[1] * x1748 +
    73400000.0 * sc[1] * x1750 - 73400000.0 * sc[1] * x1751 -
    2000000.0 * sc[1] * x1760 - 90000000.0 * sc[1] * x1763 +
    2000000.0 * sc[1] * x1844 - 68000000.0 * sc[1] * x1871 -
    1800000.0 * sc[1] * x1880 - 8.4e+18 * sc[1] * x584 - sc[1] * x692 +
    80000000.0 * sc[2] * x1039 - 80000000.0 * sc[2] * x1042 -
    15000000.0 * sc[2] * x1320 + 15000000.0 * sc[2] * x1564 +
    80200000.0 * sc[2] * x1760 - 80200000.0 * sc[2] * x1844 + sc[2] * x5579 +
    30000000.0 * sc[4] * x1956 - 30000000.0 * sc[4] * x1973 + sc[4] * x5747 +
    30000000.0 * sc[8] * x1956 - 30000000.0 * sc[8] * x1973 -
    3200000000000000.0 * sc[8] * x265 * x572 * x843 -
    1.99e+29 * x10 * x1355 * x1684 * x426 -
    1.0032110091743101e+19 * x1004 * x1050 +
    1.0032110091743101e+19 * x1004 * x150 -
    x1011 * (12.0 * x1010 * x693 + 1.68 * x173 * x693) - x1039 * x2018 +
    x1039 * x2024 - x1039 * x2073 + x1042 * x2018 - x1042 * x2024 +
    x1042 * x2073 + 8100000000000.0 * x1053 + x1082 * x1956 - x1082 * x1973 -
    1.9342105263157899e+30 * x1184 * x827 - x1320 * x2008 - x1320 * x2085 +
    1.194e+30 * x1355 * x1684 - 4.5605758157389599e+47 * x1358 * x1466 +
    4.5605758157389599e+47 * x1466 * x525 + 8.4e+18 * x1487 * x929 -
    1.6224e+48 * x1504 * x569 + 1.92e+16 * x1539 + x1564 * x2008 +
    x1564 * x2085 + 2.4576e+21 * x1631 * x574 + x1682 * x2036 - x1747 * x2081 +
    x1748 * x2081 - x1750 * x2028 + x1750 * x2063 + x1750 * x2083 +
    x1750 * x2084 + x1750 * x571 + x1751 * x2028 - x1751 * x2063 -
    x1751 * x2083 - x1751 * x2084 - x1751 * x571 + x1760 * x2042 -
    x1760 * x2125 - x1760 * x2138 + x1760 * x2148 - x1763 * x1959 -
    x1763 * x2175 - x1844 * x2042 + x1844 * x2125 + x1844 * x2138 -
    x1844 * x2148 - x1880 * x2194 + x1956 * x601 + 3000000.0 * x1972 -
    x1973 * x601 - 3000000.0 * x2006 + x2069 +
    3200000000000000.0 * x2071 * x265 * x675 * x854 +
    1.99e+29 * x2120 * x325 * x426 * x854 + 1.6224e+48 * x267 * x569 * x855 +
    x313 * (12.0 * x693 * x922 + 1.68 * x693 * x990) - 1.92e+16 * x443 -
    1.194e+30 * x444 + 16000000.0 * x457 * x595 - 2.4576e+21 * x574 * x575 +
    x587 * (12.0 * x1010 * x693 + 1.68 * x173 * x693) - x5879 * x931 +
    x5879 * x997 + x5929 + x5937 + x5940 + x5960 + x5975 + x5979 + x5988 +
    x620 - x688 * (12.0 * x693 * x922 + 1.68 * x693 * x990) - 3.12e+28 * x730 +
    3.12e+28 * x792 + 1.9342105263157899e+30 * x827 * x829 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1956 - x1973) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[139] =
    sc[0] * x141 - 70000000.0 * sc[0] * x1440 +
    30000000.0 * sc[0] * x2014 * x590 + 70000000.0 * sc[0] * x921 -
    68000000.0 * sc[1] * x1408 + 30000000.0 * sc[1] * x1440 -
    30000000.0 * sc[1] * x1755 * x74 - 90000000.0 * sc[1] * x1755 +
    73400000.0 * sc[1] * x1756 - 73400000.0 * sc[1] * x1768 -
    90000000.0 * sc[1] * x1826 - 2000000.0 * sc[1] * x1865 +
    2000000.0 * sc[1] * x1867 - 1800000.0 * sc[1] * x1977 +
    30000000.0 * sc[1] * x227 * x74 + 90000000.0 * sc[1] * x227 -
    30000000.0 * sc[1] * x921 + 80000000.0 * sc[2] * x1043 -
    80000000.0 * sc[2] * x1045 - 15000000.0 * sc[2] * x1440 +
    80200000.0 * sc[2] * x1865 - 80200000.0 * sc[2] * x1867 +
    15000000.0 * sc[2] * x921 - 28000000.0 * sc[3] * x1440 +
    28000000.0 * sc[3] * x921 + 30000000.0 * sc[4] * x2014 -
    30000000.0 * sc[4] * x2032 + 30000000.0 * sc[8] * x2014 -
    30000000.0 * sc[8] * x2032 - x1043 * x2018 + x1043 * x2019 + x1043 * x2024 -
    x1043 * x2073 + x1045 * x2018 - x1045 * x2019 - x1045 * x2024 +
    x1045 * x2073 - x1082 * x2032 - x1440 * x2008 - x1440 * x2085 +
    x1755 * x2021 - x1755 * x2081 - x1756 * x2028 + x1756 * x2063 +
    x1756 * x2083 + x1756 * x2084 + x1756 * x571 + x1768 * x2028 -
    x1768 * x2063 - x1768 * x2083 - x1768 * x2084 - x1768 * x571 -
    x1826 * x1959 - x1826 * x2175 + x1826 * x2184 + x1865 * x2042 -
    x1865 * x2125 - x1865 * x2138 + x1865 * x2148 - x1867 * x2042 +
    x1867 * x2125 + x1867 * x2138 - x1867 * x2148 + x1977 * x2168 -
    x1977 * x2194 + x2008 * x921 + x2014 * x601 + x2014 * x914 - x2021 * x227 -
    x2032 * x601 - x2032 * x914 + x2081 * x227 + x2085 * x921 + x5499 + x5574 +
    x6032 + x6035 + x6044 + x6051 + x6053 + x6060 + x6064 + x6068 + x6070 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x2014 - x2032) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[162] =
    70000000.0 * sc[0] * x1580 - 70000000.0 * sc[0] * x476 -
    30000000.0 * sc[1] * x1580 - 30000000.0 * sc[1] * x1767 * x74 -
    90000000.0 * sc[1] * x1767 + 73400000.0 * sc[1] * x1770 -
    73400000.0 * sc[1] * x1772 + 30000000.0 * sc[1] * x1812 * x74 +
    90000000.0 * sc[1] * x1812 + 2000000.0 * sc[1] * x1875 -
    2000000.0 * sc[1] * x1891 - sc[1] * x2170 - sc[1] * x402 +
    30000000.0 * sc[1] * x476 + 80000000.0 * sc[2] * x1051 -
    80000000.0 * sc[2] * x1052 + 15000000.0 * sc[2] * x1580 -
    80200000.0 * sc[2] * x1875 + 80200000.0 * sc[2] * x1891 +
    57000000.0 * sc[2] * x2070 - 57000000.0 * sc[2] * x2087 -
    15000000.0 * sc[2] * x476 + 28000000.0 * sc[3] * x1580 -
    28000000.0 * sc[3] * x476 + 30000000.0 * sc[4] * x2070 -
    30000000.0 * sc[4] * x2087 + 30000000.0 * sc[8] * x2070 -
    30000000.0 * sc[8] * x2087 - x1051 * x2018 + x1051 * x2019 + x1051 * x2024 -
    x1051 * x2073 + x1052 * x2018 - x1052 * x2019 - x1052 * x2024 +
    x1052 * x2073 + x1082 * x2070 - x1082 * x2087 + x1580 * x2008 +
    x1580 * x2085 + x1767 * x2021 - x1767 * x2081 - x1770 * x2025 -
    x1770 * x2028 + x1770 * x2063 + x1770 * x2083 + x1770 * x2084 +
    x1770 * x571 + x1772 * x2025 + x1772 * x2028 - x1772 * x2063 -
    x1772 * x2083 - x1772 * x2084 - x1772 * x571 - x1812 * x2021 +
    x1812 * x2081 - x1875 * x2042 + x1875 * x2125 + x1875 * x2138 -
    x1875 * x2148 + x1891 * x2042 - x1891 * x2125 - x1891 * x2138 +
    x1891 * x2148 - x2008 * x476 + x2070 * x601 + x2070 * x914 - x2085 * x476 -
    x2087 * x601 - x2087 * x914 + x5499 + x5566 + x5568 + x5572 + x6112 +
    x6115 + x6117 + x6129 + x6136 + x6137 + x6152 + x6153 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x2070 - x2087) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[185] =
    sc[0] * x234 - 50000000.0 * sc[14] * x315 + sc[14] * x6213 +
    50000000.0 * sc[14] * x789 - 90000000.0 * sc[1] * x1240 -
    68000000.0 * sc[1] * x1641 + 73400000.0 * sc[1] * x1779 -
    73400000.0 * sc[1] * x1782 - 30000000.0 * sc[1] * x1813 * x74 -
    90000000.0 * sc[1] * x1813 + 30000000.0 * sc[1] * x1833 * x74 +
    90000000.0 * sc[1] * x1833 - 2000000.0 * sc[1] * x1881 +
    2000000.0 * sc[1] * x1960 + 30000000.0 * sc[1] * x315 -
    1800000.0 * sc[1] * x339 - 30000000.0 * sc[1] * x789 +
    80000000.0 * sc[2] * x1056 - 80000000.0 * sc[2] * x1059 +
    80200000.0 * sc[2] * x1881 - 80200000.0 * sc[2] * x1960 +
    57000000.0 * sc[2] * x2080 - 57000000.0 * sc[2] * x2141 -
    15000000.0 * sc[2] * x315 + 15000000.0 * sc[2] * x789 -
    28000000.0 * sc[3] * x315 + 28000000.0 * sc[3] * x789 +
    32000000.0 * sc[4] * x1393 + 30000000.0 * sc[4] * x2080 -
    30000000.0 * sc[4] * x2141 + 30000000.0 * sc[8] * x2080 -
    30000000.0 * sc[8] * x2141 +
    9980000.0 * sc[8] * exp(-5334.0966575300299 * invT + 0.1 * tc[0]) -
    x1056 * x2018 + x1056 * x2024 - x1056 * x2073 + x1059 * x2018 -
    x1059 * x2024 + x1059 * x2073 + x1082 * x2080 - x1082 * x2141 -
    x1240 * x1959 - x1240 * x2175 - x1779 * x2025 - x1779 * x2028 +
    x1779 * x2063 + x1779 * x2083 + x1779 * x2084 + x1779 * x571 +
    x1782 * x2025 + x1782 * x2028 - x1782 * x2063 - x1782 * x2083 -
    x1782 * x2084 - x1782 * x571 + x1813 * x2021 - x1813 * x2081 -
    x1833 * x2021 + x1833 * x2081 + x1881 * x2042 - x1881 * x2125 -
    x1881 * x2138 + x1881 * x2148 - x1960 * x2042 + x1960 * x2125 +
    x1960 * x2138 - x1960 * x2148 - x2008 * x315 + x2008 * x789 + x2080 * x601 -
    x2085 * x315 + x2085 * x789 + x2139 * x325 - x2141 * x601 + x2168 * x339 -
    x2194 * x339 + 90000000.0 * x479 * x578 + x5499 + x5574 +
    3200000000000000.0 * x572 * x843 + x6068 + x6070 + x6203 + x6211 + x6226 +
    x6234 + x6235 + x6241 + 30000000.0 * x674 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x2080 - x2141) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[208] =
    4000000.0 * sc[0] * x1387 - 50000000.0 * sc[14] * x1149 +
    50000000.0 * sc[14] * x646 - 4000000.0 * ((sc[1]) * (sc[1])) * x1212 +
    30000000.0 * sc[1] * x1149 - 73400000.0 * sc[1] * x1742 +
    73400000.0 * sc[1] * x1787 + 30000000.0 * sc[1] * x1825 * x74 +
    90000000.0 * sc[1] * x1825 - 30000000.0 * sc[1] * x1841 * x74 -
    90000000.0 * sc[1] * x1841 - 2000000.0 * sc[1] * x1961 +
    2000000.0 * sc[1] * x1962 - 1800000.0 * sc[1] * x2010 -
    30000000.0 * sc[1] * x646 + 80000000.0 * sc[2] * x1060 -
    80000000.0 * sc[2] * x1062 - 15000000.0 * sc[2] * x1149 +
    80200000.0 * sc[2] * x1961 - 80200000.0 * sc[2] * x1962 +
    15000000.0 * sc[2] * x646 - 30000000.0 * sc[4] * x2186 +
    30000000.0 * sc[4] * x649 - 30000000.0 * sc[8] * x2186 +
    30000000.0 * sc[8] * x649 - x1060 * x2018 + x1060 * x2024 - x1060 * x2073 +
    x1062 * x2018 - x1062 * x2024 + x1062 * x2073 - x1082 * x2186 +
    x1082 * x649 - x1149 * x2008 - x1149 * x2085 - x1433 + x1742 * x2028 -
    x1742 * x2063 - x1742 * x2083 - x1742 * x2084 - x1742 * x571 +
    x1758 * x2036 - x1787 * x2028 + x1787 * x2063 + x1787 * x2083 +
    x1787 * x2084 + x1787 * x571 - x1825 * x2021 + x1825 * x2081 +
    x1841 * x2021 - x1841 * x2081 + x1961 * x2042 - x1961 * x2125 -
    x1961 * x2138 + x1961 * x2148 - x1962 * x2042 + x1962 * x2125 +
    x1962 * x2138 - x1962 * x2148 + x2008 * x646 + x2010 * x2168 -
    x2010 * x2194 + x2022 + x2064 + x2085 * x646 + x2094 + x2128 -
    x2186 * x601 + x601 * x649 + x6287 + x6293 + x6303 + x6311 + x6315 + x6318 +
    x6320 + x6323 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x2186 + x649) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[231] =
    73400000.0 * sc[0] * x1291 + 2000000.0 * sc[0] * x1387 -
    1.4e+18 * sc[14] * x118 * x843 * x929 -
    2000000.0 * ((sc[1]) * (sc[1])) * x1212 - 2025000000000.0 * sc[1] * x1002 +
    30000000.0 * sc[1] * x1037 - 200000000.0 * sc[1] * x1248 * x2129 -
    28000000.0 * sc[1] * x1426 * x2279 - 30000000.0 * sc[1] * x1590 +
    73400000.0 * sc[1] * x1676 - 90000000.0 * sc[1] * x174 -
    73400000.0 * sc[1] * x1741 + sc[1] * x177 * x181 -
    30000000.0 * sc[1] * x1830 * x74 - 90000000.0 * sc[1] * x1830 +
    30000000.0 * sc[1] * x1831 * x74 + 90000000.0 * sc[1] * x1831 -
    2000000.0 * sc[1] * x1968 + 2000000.0 * sc[1] * x1969 -
    1800000.0 * sc[1] * x2011 - 2.1e+18 * sc[1] * x584 -
    68000000.0 * sc[1] * x722 - 15000000.0 * sc[2] * x1037 +
    80000000.0 * sc[2] * x1064 - 80000000.0 * sc[2] * x1071 +
    15000000.0 * sc[2] * x1590 + 80200000.0 * sc[2] * x1968 -
    80200000.0 * sc[2] * x1969 - 28000000.0 * sc[3] * x1037 +
    28000000.0 * sc[3] * x1590 - 30000000.0 * sc[4] * x2271 +
    30000000.0 * sc[4] * x946 - 30000000.0 * sc[8] * x2271 +
    30000000.0 * sc[8] * x946 - 5.2e+27 * x10 * x181 * x792 -
    2.5080275229357798e+18 * x1004 * x1050 +
    2.5080275229357798e+18 * x1004 * x150 -
    x1011 * (3.0 * x1010 * x693 + 0.42 * x173 * x693) - x1037 * x2008 -
    x1037 * x2085 - x1058 * (0.42 * x316 + 3.0 * x642) - x1064 * x2018 +
    x1064 * x2024 - x1064 * x2073 + x1071 * x2018 - x1071 * x2024 +
    x1071 * x2073 - x1082 * x2271 + x1082 * x946 +
    1.4e+18 * x118 * x584 * x854 - 4.83552631579e+29 * x1184 * x827 +
    7.8e+27 * x1259 * x2174 + 2025000000000.0 * x1278 * x1280 +
    2.985e+29 * x1355 * x1684 - 1.14014395393474e+47 * x1358 * x1466 +
    1.14014395393474e+47 * x1466 * x525 + 2.1e+18 * x1487 * x929 -
    4.056e+47 * x1504 * x569 + 4800000000000000.0 * x1539 + x1590 * x2008 +
    x1590 * x2085 + 6.144e+20 * x1631 * x574 + x1638 - x1676 * x2028 +
    x1676 * x2063 + x1676 * x2083 + x1676 * x2084 + x1676 * x571 -
    x174 * x1959 - x174 * x2175 + x1741 * x2028 - x1741 * x2063 -
    x1741 * x2083 - x1741 * x2084 - x1741 * x571 - x1830 * x2081 +
    x1831 * x2081 + x192 * x6331 + x1968 * x2042 - x1968 * x2125 -
    x1968 * x2138 + x1968 * x2148 - x1969 * x2042 + x1969 * x2125 +
    x1969 * x2138 - x1969 * x2148 + 750000.0 * x1972 - 750000.0 * x2006 -
    x2011 * x2194 + x2036 * x311 - 2100000.0 * x2091 + 2100000.0 * x2093 -
    7.8e+27 * x2174 * x267 * x851 - x2271 * x601 + x358 + x388 -
    4800000000000000.0 * x443 - 2.985e+29 * x444 + 100000000.0 * x453 * x595 +
    x5489 + 4.056e+47 * x5534 - 6.144e+20 * x574 * x575 +
    x587 * (3.0 * x1010 * x693 + 0.42 * x173 * x693) + x601 * x946 + x6324 -
    x6331 * x917 + x6413 + x6428 + x6431 + x6455 + x6464 +
    x788 * (0.42 * x316 + 3.0 * x642) + 4.83552631579e+29 * x827 * x829 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x2271 + x946) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[254] =
    6.26e+26 * refC * x2127 * x774 * x9 * exp(x346 + x365) +
    1100000000.0 * sc[0] * x668 - 5280000.0 * ((sc[1]) * (sc[1])) * x2169 -
    1100000000.0 * ((sc[1]) * (sc[1])) * x63 + 30000000.0 * sc[1] * x1047 -
    30000000.0 * sc[1] * x1294 + 73400000.0 * sc[1] * x1749 -
    73400000.0 * sc[1] * x1814 + 30000000.0 * sc[1] * x1877 * x74 +
    90000000.0 * sc[1] * x1877 + 2000000.0 * sc[1] * x1970 - sc[1] * x2181 -
    30000000.0 * sc[1] * x74 * x896 - 2000000.0 * sc[1] * x755 -
    1800000.0 * sc[1] * x774 - 90000000.0 * sc[1] * x896 -
    30000000.0 * sc[1] * x963 - 15000000.0 * sc[2] * x1047 +
    80000000.0 * sc[2] * x1072 - 80000000.0 * sc[2] * x1073 -
    80200000.0 * sc[2] * x1970 + 80200000.0 * sc[2] * x755 +
    15000000.0 * sc[2] * x963 - 28000000.0 * sc[3] * x1047 +
    28000000.0 * sc[3] * x963 + 30000000.0 * sc[4] * x1480 -
    30000000.0 * sc[4] * x2323 + 30000000.0 * sc[8] * x1480 -
    30000000.0 * sc[8] * x2323 - x1047 * x2008 - x1047 * x2085 - x1072 * x2018 +
    x1072 * x2024 - x1072 * x2073 + x1073 * x2018 - x1073 * x2024 +
    x1073 * x2073 + x1082 * x1480 - x1082 * x2323 + x1480 * x601 + x1545 +
    x1683 - x1749 * x2028 + x1749 * x2063 + x1749 * x2083 + x1749 * x2084 +
    x1749 * x571 + x1814 * x2028 - x1814 * x2063 - x1814 * x2083 -
    x1814 * x2084 - x1814 * x571 - x1877 * x2021 + x1877 * x2081 -
    x1970 * x2042 + x1970 * x2125 + x1970 * x2138 - x1970 * x2148 +
    x2008 * x963 + x2021 * x896 + x2022 + x2036 * x707 + x2042 * x755 + x2064 -
    x2081 * x896 + x2085 * x963 - 4200000.0 * x2091 + 4200000.0 * x2093 -
    x2125 * x755 - x2138 * x755 + x2148 * x755 - x2194 * x774 - x2323 * x601 +
    x31 + x5489 + x6323 + x6512 + x6534 + x6546 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1480 - x2323) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[277] =
    20000000.0 * sc[0] * x1404 + 70000000.0 * sc[0] * x1640 -
    70000000.0 * sc[0] * x1659 - 68000000.0 * sc[1] * x1533 -
    1800000.0 * sc[1] * x1554 - 30000000.0 * sc[1] * x1640 +
    30000000.0 * sc[1] * x1659 + 73400000.0 * sc[1] * x1818 -
    73400000.0 * sc[1] * x1819 - 30000000.0 * sc[1] * x1886 * x74 -
    90000000.0 * sc[1] * x1886 + 30000000.0 * sc[1] * x1897 * x74 +
    90000000.0 * sc[1] * x1897 - 2000000.0 * sc[1] * x1971 +
    2000000.0 * sc[1] * x1979 - 90000000.0 * sc[1] * x229 +
    80000000.0 * sc[2] * x1075 + 57000000.0 * sc[2] * x1453 +
    15000000.0 * sc[2] * x1640 - 15000000.0 * sc[2] * x1659 +
    80200000.0 * sc[2] * x1971 - 80200000.0 * sc[2] * x1979 -
    57000000.0 * sc[2] * x2360 - 80000000.0 * sc[2] * x671 +
    28000000.0 * sc[3] * x1640 - 28000000.0 * sc[3] * x1659 +
    30000000.0 * sc[4] * x1453 - 30000000.0 * sc[4] * x2360 +
    30000000.0 * sc[8] * x1453 - 30000000.0 * sc[8] * x2360 - x1075 * x2018 +
    x1075 * x2019 + x1075 * x2024 - x1075 * x2073 + x1082 * x1453 -
    x1082 * x2360 + 1350000000000.0 * x1280 * x843 + x1453 * x601 +
    x1554 * x2168 - x1554 * x2194 + x1640 * x2008 + x1640 * x2085 -
    x1659 * x2008 - x1659 * x2085 - x1818 * x2025 - x1818 * x2028 +
    x1818 * x2063 + x1818 * x2083 + x1818 * x2084 + x1818 * x571 +
    x1819 * x2025 + x1819 * x2028 - x1819 * x2063 - x1819 * x2083 -
    x1819 * x2084 - x1819 * x571 + x1886 * x2021 - x1886 * x2081 -
    x1897 * x2021 + x1897 * x2081 - x1959 * x229 + x1971 * x2042 -
    x1971 * x2125 - x1971 * x2138 + x1971 * x2148 - x1979 * x2042 +
    x1979 * x2125 + x1979 * x2138 - x1979 * x2148 + x2018 * x671 -
    x2019 * x671 - x2024 * x671 + x2073 * x671 + x2126 - x2175 * x229 -
    x2360 * x601 + x5499 + x5574 + x6068 + x6070 + x6587 + x6593 + x6598 +
    x6607 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x1453 - x2360) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[300] =
    30000000.0 * sc[0] * x1174 - 30000000.0 * sc[1] * x1663 +
    30000000.0 * sc[1] * x1664 + 73400000.0 * sc[1] * x1821 -
    73400000.0 * sc[1] * x1823 - 30000000.0 * sc[1] * x1860 * x74 -
    90000000.0 * sc[1] * x1860 - 2000000.0 * sc[1] * x1987 +
    80000000.0 * sc[2] * x1078 - 80000000.0 * sc[2] * x1080 +
    15000000.0 * sc[2] * x1663 - 15000000.0 * sc[2] * x1664 +
    80200000.0 * sc[2] * x1987 + 16.32 * sc[2] * x5621 -
    30000000.0 * sc[4] * x1035 + 30000000.0 * sc[4] * x809 -
    30000000.0 * sc[8] * x1035 + 30000000.0 * sc[8] * x809 - x1035 * x1082 -
    x1035 * x601 - x1078 * x2018 + x1078 * x2024 - x1078 * x2073 +
    x1080 * x2018 - x1080 * x2024 + x1080 * x2073 + x1082 * x809 + x1145 +
    x1521 + x1522 * x2036 + x1530 + x1543 + x1663 * x2008 + x1663 * x2085 -
    x1664 * x2008 - x1664 * x2085 - x1821 * x2028 + x1821 * x2063 +
    x1821 * x2083 + x1821 * x2084 + x1821 * x571 + x1823 * x2028 -
    x1823 * x2063 - x1823 * x2083 - x1823 * x2084 - x1823 * x571 -
    x1860 * x2081 - x1884 * x2042 + x1987 * x2042 - x1987 * x2125 -
    x1987 * x2138 + x1987 * x2148 + x2015 + x2150 + x601 * x809 + x6151 +
    x6658 + x6665 + x933 + x987 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1035 + x809) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[323] =
    2000000.0 * sc[0] * x1363 + 70000000.0 * sc[0] * x1670 -
    70000000.0 * sc[0] * x1679 - 30000000.0 * sc[1] * x1670 +
    30000000.0 * sc[1] * x1679 + 73400000.0 * sc[1] * x1828 -
    73400000.0 * sc[1] * x1834 - 30000000.0 * sc[1] * x1872 * x74 -
    90000000.0 * sc[1] * x1872 - 2000000.0 * sc[1] * x1947 -
    1800000.0 * sc[1] * x374 + 80000000.0 * sc[2] * x1083 -
    80000000.0 * sc[2] * x1084 + 15000000.0 * sc[2] * x1670 -
    15000000.0 * sc[2] * x1679 + 80200000.0 * sc[2] * x1947 -
    30000000.0 * sc[4] * x1118 + 30000000.0 * sc[4] * x1205 +
    20000000.0 * sc[4] * x1829 - 30000000.0 * sc[8] * x1118 +
    30000000.0 * sc[8] * x1205 + sc[8] * x6213 - x1082 * x1118 + x1082 * x1205 -
    x1083 * x2018 + x1083 * x2019 + x1083 * x2024 - x1083 * x2073 +
    x1084 * x2018 - x1084 * x2019 - x1084 * x2024 + x1084 * x2073 -
    x1118 * x601 - x1118 * x914 + x1205 * x601 + x1205 * x914 + x1510 +
    x1670 * x2008 + x1670 * x2085 - x1679 * x2008 - x1679 * x2085 -
    x1828 * x2028 + x1828 * x2063 + x1828 * x2083 + x1828 * x2084 +
    x1828 * x571 + x1829 * x2036 + x1834 * x2028 - x1834 * x2063 -
    x1834 * x2083 - x1834 * x2084 - x1834 * x571 - x1862 * x2021 +
    x1872 * x2021 - x1872 * x2081 + x188 - x1884 * x2042 + x1947 * x2042 -
    x1947 * x2125 - x1947 * x2138 + x1947 * x2148 + x2015 + x209 + x2124 +
    x2168 * x374 - x2194 * x374 + x351 + x613 + 1.4e+18 * x843 * x929 + x987 +
    x989 + x992 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1118 + x1205) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[346] =
    70000000.0 * sc[0] * x1680 - 70000000.0 * sc[0] * x1688 -
    30000000.0 * sc[1] * x1680 + 30000000.0 * sc[1] * x1688 -
    1800000.0 * sc[1] * x1716 + 73400000.0 * sc[1] * x1835 -
    73400000.0 * sc[1] * x1836 - 2000000.0 * sc[1] * x1837 +
    2000000.0 * sc[1] * x1882 + 30000000.0 * sc[1] * x1925 * x74 +
    90000000.0 * sc[1] * x1925 - 30000000.0 * sc[1] * x502 * x74 -
    90000000.0 * sc[1] * x502 - sc[1] * x903 + 80000000.0 * sc[2] * x1085 -
    80000000.0 * sc[2] * x1086 + 15000000.0 * sc[2] * x1680 -
    15000000.0 * sc[2] * x1688 + 80200000.0 * sc[2] * x1837 -
    80200000.0 * sc[2] * x1882 + 30000000.0 * sc[4] * x216 -
    30000000.0 * sc[4] * x894 + 30000000.0 * sc[8] * x216 -
    30000000.0 * sc[8] * x894 + x1041 + x1082 * x216 - x1082 * x894 -
    x1085 * x2018 + x1085 * x2019 + x1085 * x2024 - x1085 * x2073 +
    x1086 * x2018 - x1086 * x2019 - x1086 * x2024 + x1086 * x2073 +
    x1229 * x2036 + x1519 + x1658 + x1680 * x2008 + x1680 * x2085 +
    1.99e+29 * x1684 * x843 - x1688 * x2008 - x1688 * x2085 - x1716 * x2194 -
    x1835 * x2028 + x1835 * x2063 + x1835 * x2083 + x1835 * x2084 +
    x1835 * x571 + x1836 * x2028 - x1836 * x2063 - x1836 * x2083 -
    x1836 * x2084 - x1836 * x571 + x1837 * x2042 - x1837 * x2125 -
    x1837 * x2138 + x1837 * x2148 - x1882 * x2042 + x1882 * x2125 +
    x1882 * x2138 - x1882 * x2148 - x1925 * x2021 + x1925 * x2081 + x2015 +
    x2021 * x502 - x2081 * x502 - 4200000.0 * x2091 + 4200000.0 * x2093 +
    x2131 + x216 * x601 + x2275 + x367 + x576 - x601 * x894 + x613 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (x216 - x894) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[369] =
    70000000.0 * sc[0] * x1689 - 70000000.0 * sc[0] * x1707 +
    50000000.0 * sc[0] * x736 + 50000000.0 * sc[14] * x1689 -
    30000000.0 * sc[1] * x1689 - 73400000.0 * sc[1] * x1815 -
    30000000.0 * sc[1] * x1932 * x74 - 90000000.0 * sc[1] * x1932 -
    sc[1] * x204 - 100000000.0 * sc[1] - 57000000.0 * sc[2] * x1070 +
    80000000.0 * sc[2] * x1087 - 80000000.0 * sc[2] * x1088 +
    15000000.0 * sc[2] * x1689 + 30000000.0 * sc[2] * x1815 +
    48000000.0 * sc[2] * x1932 + 57000000.0 * sc[2] * x955 +
    100000000.0 * sc[2] + 28000000.0 * sc[3] * x1689 -
    30000000.0 * sc[4] * x1070 + 30000000.0 * sc[4] * x955 -
    30000000.0 * sc[8] * x1070 + 30000000.0 * sc[8] * x955 - x1070 * x1082 -
    x1070 * x601 - x1070 * x914 + x1082 * x955 - x1087 * x2018 + x1087 * x2019 +
    x1087 * x2024 + x1087 * x2072 - x1087 * x2073 + x1088 * x2018 -
    x1088 * x2019 - x1088 * x2024 - x1088 * x2072 + x1088 * x2073 + x1233 +
    x16 + x1674 + x1689 * x2008 + x1689 * x2085 + x1815 * x2025 +
    x1815 * x2028 - x1815 * x2063 - x1815 * x2083 - x1815 * x2084 -
    x1815 * x571 + x1932 * x2021 - x1932 * x2081 + x1932 * x2086 + x1985 +
    x2049 + x2050 + x2067 + x2068 + x2074 + x341 + x467 + x5499 + x601 * x955 +
    x6117 + x6152 + x914 * x955 + x919 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1070 + x955) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[392] =
    70000000.0 * sc[0] * x1625 + sc[0] * x441 + 50000000.0 * sc[14] * x1625 -
    30000000.0 * sc[1] * x1625 - 73400000.0 * sc[1] * x1817 -
    30000000.0 * sc[1] * x183 * x74 - 90000000.0 * sc[1] * x183 -
    68000000.0 * sc[1] * x1885 - 90000000.0 * sc[1] * x837 +
    80000000.0 * sc[2] * x1089 - 80000000.0 * sc[2] * x1092 +
    15000000.0 * sc[2] * x1625 + 30000000.0 * sc[2] * x1817 +
    57000000.0 * sc[2] * x958 + 28000000.0 * sc[3] * x1625 +
    20000000.0 * sc[4] * x1089 + 30000000.0 * sc[4] * x1625 -
    30000000.0 * sc[4] * x1668 + 30000000.0 * sc[4] * x958 +
    40000000.0 * sc[8] * x1089 - 30000000.0 * sc[8] * x1668 +
    30000000.0 * sc[8] * x958 + 60000000.0 * sc[9] * x958 - x1082 * x1668 +
    x1082 * x958 - x1089 * x2018 + x1089 * x2019 + x1089 * x2024 +
    x1089 * x2072 - x1089 * x2073 + x1092 * x2018 - x1092 * x2024 -
    x1092 * x2072 + x1092 * x2073 + x16 + x1625 * x2008 + x1625 * x2085 +
    x1625 * x2119 - x1668 * x601 - x1668 * x914 + x1817 * x2016 +
    x1817 * x2025 + x1817 * x2028 - x1817 * x2063 - x1817 * x2083 -
    x1817 * x2084 - x1817 * x571 + x183 * x2012 + x183 * x2021 - x183 * x2081 +
    x183 * x2086 + x1945 * x2036 + x1945 * x2122 - x1959 * x837 + x2049 +
    x2050 + x2067 + x2068 + x2074 + x2078 - x2175 * x837 + x2180 + x2183 +
    x467 + x5499 + x5502 + x5556 + x601 * x958 + x6151 + x783 * x958 + x81 +
    x86 + x919 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1668 + x958) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[415] =
    70000000.0 * sc[0] * x1018 + 50000000.0 * sc[14] * x1018 -
    30000000.0 * sc[1] * x1018 - 20000000.0 * sc[1] * x1265 * x2044 -
    90000000.0 * sc[1] * x1265 - 80200000.0 * sc[1] * x1378 -
    73400000.0 * sc[1] * x1863 - 68000000.0 * sc[1] * x1885 -
    2000000.0 * sc[1] * x1958 - 30000000.0 * sc[1] * x233 * x74 -
    90000000.0 * sc[1] * x233 + 15000000.0 * sc[2] * x1018 +
    80000000.0 * sc[2] * x1141 + 57000000.0 * sc[2] * x1694 +
    30000000.0 * sc[2] * x1863 + 80200000.0 * sc[2] * x1958 +
    48000000.0 * sc[2] * x233 + 28000000.0 * sc[3] * x1018 +
    30000000.0 * sc[4] * x1018 + 20000000.0 * sc[4] * x1141 +
    30000000.0 * sc[4] * x1694 + 40000000.0 * sc[8] * x1141 +
    30000000.0 * sc[8] * x1694 + 60000000.0 * sc[9] * x1694 + x1018 * x2008 +
    x1018 * x2085 + x1018 * x2119 + x1082 * x1694 - x1141 * x2018 +
    x1141 * x2019 + x1141 * x2024 + x1141 * x2072 - x1141 * x2073 +
    5.2e+27 * x1257 * x2174 * x843 - x1265 * x2175 + x1265 * x2184 + x16 +
    x1694 * x601 + x1694 * x783 + x1694 * x914 + x1863 * x2016 + x1863 * x2025 +
    x1863 * x2028 - x1863 * x2063 - x1863 * x2083 - x1863 * x2084 -
    x1863 * x571 + x1958 * x2042 - x1958 * x2125 + x1958 * x2132 -
    x1958 * x2138 + x1958 * x2148 + x2012 * x233 + x2021 * x233 + x2023 +
    x2027 + x2068 + x2074 + x2078 - x2081 * x233 + x2086 * x233 + x341 + x421 +
    x467 + x5499 + x6068 + x6070 + x6151 + x81 + x86 + x919 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1668 + x1694) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[438] =
    70000000.0 * sc[0] * x1729 - 70000000.0 * sc[0] * x262 + sc[0] * x407 +
    50000000.0 * sc[14] * x1729 - 50000000.0 * sc[14] * x262 -
    30000000.0 * sc[1] * x1729 + 73400000.0 * sc[1] * x1870 -
    73400000.0 * sc[1] * x1873 - 68000000.0 * sc[1] * x1885 -
    90000000.0 * sc[1] * x1896 - 30000000.0 * sc[1] * x1946 * x74 -
    90000000.0 * sc[1] * x1946 + 30000000.0 * sc[1] * x262 -
    2000000.0 * sc[1] * x655 + 80000000.0 * sc[2] * x1161 -
    80000000.0 * sc[2] * x1167 + 15000000.0 * sc[2] * x1729 -
    15000000.0 * sc[2] * x262 + 80200000.0 * sc[2] * x655 +
    28000000.0 * sc[3] * x1729 - 28000000.0 * sc[3] * x262 -
    30000000.0 * sc[4] * x1009 + 30000000.0 * sc[4] * x1057 -
    30000000.0 * sc[8] * x1009 + 30000000.0 * sc[8] * x1057 - x1009 * x1082 -
    x1009 * x601 + x1057 * x1082 + x1057 * x601 + x1101 - x1161 * x2018 +
    x1161 * x2019 + x1161 * x2024 - x1161 * x2073 + x1167 * x2018 -
    x1167 * x2019 - x1167 * x2024 + x1167 * x2073 + x1729 * x2008 +
    x1729 * x2085 - x1870 * x2028 + x1870 * x2063 + x1870 * x2083 +
    x1870 * x2084 + x1870 * x571 + x1873 * x2028 - x1873 * x2063 -
    x1873 * x2083 - x1873 * x2084 - x1873 * x571 - x1896 * x1959 -
    x1896 * x2175 + x1946 * x2021 - x1946 * x2081 - x2008 * x262 + x2020 +
    x2023 + x2027 + x2036 * x65 + x2042 * x655 + x2074 - x2085 * x262 + x2118 -
    x2125 * x655 + x2133 - x2138 * x655 + x2148 * x655 + x399 + x400 + x405 +
    x5499 + x5556 + x5566 + x6151 + x6153 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1009 + x1057) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[461] =
    1800000.0 * sc[0] * x1336 + 70000000.0 * sc[0] * x1675 +
    50000000.0 * sc[14] * x1675 - 1800000.0 * sc[1] * x1339 -
    30000000.0 * sc[1] * x1675 - 73400000.0 * sc[1] * x1874 -
    68000000.0 * sc[1] * x1885 - 90000000.0 * sc[1] * x1896 -
    30000000.0 * sc[1] * x1949 * x74 - 90000000.0 * sc[1] * x1949 -
    2000000.0 * sc[1] * x1966 + 80000000.0 * sc[2] * x1443 +
    15000000.0 * sc[2] * x1675 + 30000000.0 * sc[2] * x1874 +
    48000000.0 * sc[2] * x1949 + 80200000.0 * sc[2] * x1966 + sc[2] * x5637 +
    57000000.0 * sc[2] * x784 + 28000000.0 * sc[3] * x1675 +
    20000000.0 * sc[4] * x1443 + 30000000.0 * sc[4] * x1675 +
    30000000.0 * sc[4] * x784 + 40000000.0 * sc[8] * x1443 +
    30000000.0 * sc[8] * x784 + 60000000.0 * sc[9] * x784 +
    1.33e+48 * x1079 * x843 + x1082 * x784 - x1339 * x2194 - x1443 * x2018 +
    x1443 * x2019 + x1443 * x2024 + x1443 * x2072 - x1443 * x2073 + x16 +
    x1675 * x2008 + x1675 * x2085 + x1675 * x2119 + x1874 * x2016 +
    x1874 * x2025 + x1874 * x2028 - x1874 * x2063 - x1874 * x2083 -
    x1874 * x2084 - x1874 * x571 - x1896 * x1959 - x1896 * x2175 +
    x1949 * x2012 + x1949 * x2021 - x1949 * x2081 + x1949 * x2086 +
    x1966 * x2042 - x1966 * x2125 + x1966 * x2132 - x1966 * x2138 +
    x1966 * x2148 + x2023 + x2027 + x2068 + x2074 + x2078 + x341 + x348 + x421 +
    x467 + x5499 + x601 * x784 + x6070 + x6117 + x783 * x784 + x784 * x914 +
    x81 + x86 + x919 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x1668 + x784) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[484] =
    refC * sc[6] * x6042 - sc[1] * sc[3] * x1572 - 30000000.0 * sc[1] * x1752 +
    30000000.0 * sc[1] * x1757 - 30000000.0 * sc[1] * x1788 * x74 -
    90000000.0 * sc[1] * x1788 - 73400000.0 * sc[1] * x1876 +
    80000000.0 * sc[2] * x1444 - 80000000.0 * sc[2] * x1445 +
    15000000.0 * sc[2] * x1752 - 15000000.0 * sc[2] * x1757 +
    48000000.0 * sc[2] * x1788 + 30000000.0 * sc[2] * x1876 -
    57000000.0 * sc[2] * x647 + 57000000.0 * sc[2] * x669 +
    28000000.0 * sc[3] * x1752 - 28000000.0 * sc[3] * x1757 -
    30000000.0 * sc[4] * x647 + 30000000.0 * sc[4] * x669 -
    30000000.0 * sc[8] * x647 + 30000000.0 * sc[8] * x669 - x1082 * x647 +
    x1082 * x669 - x1444 * x2018 + x1444 * x2024 - x1444 * x2073 +
    x1445 * x2018 - x1445 * x2024 + x1445 * x2073 + x16 + x1752 * x2008 +
    x1752 * x2085 - x1757 * x2008 - x1757 * x2085 + x1788 * x2021 -
    x1788 * x2081 + x1876 * x2025 + x1876 * x2028 - x1876 * x2063 -
    x1876 * x2083 - x1876 * x2084 - x1876 * x571 + x1985 + x2067 + x2074 +
    x2095 + x2135 + x341 + x5489 - x601 * x647 + x601 * x669 + x6117 + x6152 -
    x647 * x914 + x669 * x914 + x7290 + x7295 + x919 +
    (70000000.0 * sc[0] * x678 + 50000000.0 * sc[14] * x678 -
     30000000.0 * sc[1] * x678 - 73400000.0 * sc[1] * x680 +
     30000000.0 * sc[1] * x683 * x74 + 90000000.0 * sc[1] * x683 +
     80000000.0 * sc[2] * x677 + 15000000.0 * sc[2] * x678 +
     30000000.0 * sc[2] * x680 - 48000000.0 * sc[2] * x683 +
     28000000.0 * sc[3] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 40000000.0 * sc[8] * x677 + x2008 * x678 -
     x2012 * x683 + x2016 * x680 - x2018 * x677 + x2019 * x677 - x2021 * x683 +
     x2024 * x677 + x2025 * x680 + x2028 * x680 - x2063 * x680 + x2072 * x677 -
     x2073 * x677 + x2081 * x683 - x2083 * x680 - x2084 * x680 + x2085 * x678 -
     x2086 * x683 + x2119 * x678 - x571 * x680) *
      (-x647 + x669) +
    (70000000.0 * sc[0] * x679 + 50000000.0 * sc[14] * x679 -
     30000000.0 * sc[1] * x679 - 73400000.0 * sc[1] * x681 -
     30000000.0 * sc[1] * x684 * x74 - 90000000.0 * sc[1] * x684 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 28000000.0 * sc[3] * x679 -
     20000000.0 * sc[4] * x660 + 30000000.0 * sc[4] * x679 + x2008 * x679 +
     x2012 * x684 + x2016 * x681 + x2021 * x684 + x2025 * x681 + x2028 * x681 -
     x2036 * x660 - x2063 * x681 - x2081 * x684 - x2083 * x681 - x2084 * x681 +
     x2085 * x679 + x2086 * x684 + x2119 * x679 - x2122 * x660 - x571 * x681) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (90000000.0 * sc[1] * x231 - 20000000.0 * sc[4] * x67 + x1959 * x231 -
     x2036 * x67 - x2122 * x67 + x2175 * x231 - x2184 * x231) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (1800000.0 * sc[1] * x376 - x2168 * x376 + x2194 * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (2000000.0 * sc[1] * x597 + 68000000.0 * sc[1] * x637 -
     73400000.0 * sc[1] * x682 - 80200000.0 * sc[2] * x597 +
     30000000.0 * sc[2] * x682 - 20000000.0 * sc[4] * x640 + x2016 * x682 +
     x2025 * x682 + x2028 * x682 - x2036 * x640 - x2042 * x597 - x2063 * x682 -
     x2083 * x682 - x2084 * x682 - x2122 * x640 + x2125 * x597 - x2132 * x597 +
     x2138 * x597 - x2140 * x637 - x2148 * x597 - x571 * x682) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (2000000.0 * sc[1] * x448 + 90000000.0 * sc[1] * x483 -
     30000000.0 * sc[1] * x685 * x74 - 90000000.0 * sc[1] * x685 -
     80200000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 + x1959 * x483 +
     x2012 * x685 + x2021 * x685 - x2042 * x448 - x2081 * x685 + x2086 * x685 +
     x2125 * x448 - x2132 * x448 + x2138 * x448 - x2148 * x448 + x2175 * x483 -
     x2184 * x483) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[2] =
    15000000.0 * sc[10] * x1428 - 30000000.0 * sc[2] * x1007 +
    57000000.0 * sc[2] * x1472 - 96000000.0 * sc[2] * x1636 -
    10000000.0 * sc[2] * x1879 - 100000000.0 * sc[2] * x708 -
    80000000.0 * sc[2] * x725 - sc[2] * x743 - 96240000.0 * sc[2] * x756 +
    96240000.0 * sc[2] * x779 + 80000000.0 * sc[2] * x790 -
    96000000.0 * sc[2] * x897 + 96000000.0 * sc[2] * x908 +
    60000000.0 * sc[2] * x923 - 60000000.0 * sc[2] * x932 +
    30000000.0 * sc[2] * x937 - 57000000.0 * sc[2] * x985 -
    33000000.0 * sc[3] * x1472 + 33000000.0 * sc[3] * x985 - x1243 * x397 -
    x1243 * x801 - x1879 * x2283 + 1000000.0 * x1972 - 1000000.0 * x2006 -
    x2063 * x923 + x2063 * x932 - x2083 * x923 + x2083 * x932 + x2172 * x725 -
    x2172 * x790 + x2176 * x725 - x2176 * x790 - x2177 * x923 + x2177 * x932 +
    x2179 * x725 - x2179 * x790 + x2246 * x897 - x2246 * x908 + x2256 * x923 -
    x2256 * x932 + x2278 * x756 - x2278 * x779 + x2284 * x756 - x2284 * x779 -
    576000.0 * x7298 + 576000.0 * x7314 - 1204.0 * x7328 + 1204.0 * x7331 +
    x7344 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1472 + x985) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (96000000.0 * sc[2] * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[25] =
    57000000.0 * sc[10] * x1446 + 30000000.0 * sc[11] * x1294 + sc[12] * x5470 +
    sc[16] * x204 + 48000000.0 * sc[17] * x1207 +
    120.0 * sc[17] * x1238 * x516 + 80200000.0 * sc[18] * x1378 -
    500000.0 * sc[2] * x10 * x1212 + 60000000.0 * sc[2] * x1005 -
    96000000.0 * sc[2] * x1069 - 60000000.0 * sc[2] * x1074 -
    30000000.0 * sc[2] * x1471 + 30000000.0 * sc[2] * x1481 +
    96000000.0 * sc[2] * x1526 - 96240000.0 * sc[2] * x1560 -
    100000000.0 * sc[2] * x1650 - 57000000.0 * sc[2] * x1665 +
    57000000.0 * sc[2] * x1692 - 96000000.0 * sc[2] * x362 +
    96240000.0 * sc[2] * x423 - 10000000.0 * sc[2] * x609 -
    80000000.0 * sc[2] * x926 + 80000000.0 * sc[2] * x936 +
    33000000.0 * sc[3] * x1665 - 33000000.0 * sc[3] * x1692 + sc[3] * x319 +
    sc[4] * x35 + sc[6] * x146 - x1005 * x2063 - x1005 * x2083 - x1005 * x2177 +
    x1005 * x2256 + x1069 * x2246 + x1074 * x2063 + x1074 * x2083 +
    x1074 * x2177 - x1074 * x2256 - x1526 * x2246 + x1560 * x2278 +
    x1560 * x2284 - x207 * x397 - x207 * x801 + 100000000.0 * x2129 * x607 +
    x2172 * x926 - x2172 * x936 + x2176 * x926 - x2176 * x936 + x2179 * x926 -
    x2179 * x936 - x2278 * x423 - x2283 * x609 - x2284 * x423 +
    15000000.0 * x472 * x578 + 80000000.0 * x494 * x578 + x7376 + x7386 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1665 - x1692) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (96000000.0 * sc[2] * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[48] =
    -sc[0] * x743 - sc[10] * x7326 * x7402 - sc[11] * x225 - sc[12] * x7471 -
    20.4 * sc[13] * x5621 - sc[15] * x7441 - 100000000.0 * sc[16] -
    500000.0 * sc[1] * x10 * x1212 - 100000000.0 * sc[2] * x1 -
    96000000.0 * sc[2] * x1063 - 96240000.0 * sc[2] * x1081 -
    96000000.0 * sc[2] * x115 - 480000.0 * sc[2] * x1212 * x4 -
    30000000.0 * sc[2] * x1482 - 60000000.0 * sc[2] * x1633 +
    96000000.0 * sc[2] * x1653 + 96240000.0 * sc[2] * x1718 -
    57000000.0 * sc[2] * x1753 + 57000000.0 * sc[2] * x1773 -
    20000000.0 * sc[2] * x2044 * x220 - 10000000.0 * sc[2] * x624 +
    60000000.0 * sc[2] * x824 + 30000000.0 * sc[2] * x961 -
    80000000.0 * sc[2] * x968 + 80000000.0 * sc[2] * x995 +
    33000000.0 * sc[3] * x1753 - 33000000.0 * sc[3] * x1773 - sc[4] * x5582 -
    sc[5] * x5579 - 0.0357 * sc[5] * x7452 - 20000000.0 * sc[6] -
    sc[7] * x7388 - 84300000.0 * sc[8] - sc[9] * x7396 - x1030 + x1081 * x2278 +
    x1081 * x2284 + x115 * x2246 + 100000000.0 * x1230 + 96000000.0 * x1340 +
    10000000.0 * x1411 + x1633 * x2063 + x1633 * x2083 + x1633 * x2177 -
    x1633 * x2256 - x1653 * x2246 - 96000000.0 * x170 - x1718 * x2278 -
    x1718 * x2284 - x2063 * x824 - x2083 * x824 + x2176 * x968 - x2176 * x995 -
    x2177 * x824 + x2179 * x968 - x2179 * x995 - x220 * x397 + x2256 * x824 -
    x2283 * x624 - x267 * x864 - 96240000.0 * x325 - x433 * x703 -
    33000000.0 * x540 * x578 - 60000000.0 * x578 - 30000000.0 * x595 +
    100000000.0 * x643 - 57000000.0 * x674 - 80000000.0 * x675 + x7376 + x7438 +
    x7450 + x7469 + 96000000.0 * x766 + 10000000.0 * x930 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1753 - x1773) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (96000000.0 * sc[2] * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[71] =
    sc[1] * x319 + 80000000.0 * sc[2] * x1000 - 30000000.0 * sc[2] * x1535 +
    30000000.0 * sc[2] * x1537 - 96000000.0 * sc[2] * x1654 +
    60000000.0 * sc[2] * x1656 - 60000000.0 * sc[2] * x1672 +
    96000000.0 * sc[2] * x1685 + 96240000.0 * sc[2] * x1739 -
    57000000.0 * sc[2] * x1822 + 57000000.0 * sc[2] * x1838 -
    96000000.0 * sc[2] * x185 - 96240000.0 * sc[2] * x250 -
    100000000.0 * sc[2] * x659 - 10000000.0 * sc[2] * x998 -
    80000000.0 * sc[2] * x999 + 33000000.0 * sc[3] * x1822 -
    33000000.0 * sc[3] * x1838 + sc[8] * x7496 - x1000 * x2172 - x1000 * x2176 -
    x1000 * x2179 - x1639 * x397 - x1639 * x801 + x1654 * x2246 -
    x1656 * x2063 - x1656 * x2083 - x1656 * x2177 + x1656 * x2256 +
    x1672 * x2063 + x1672 * x2083 + x1672 * x2177 - x1672 * x2256 -
    x1685 * x2246 + x170 * x2185 - x1739 * x2278 - x1739 * x2284 +
    500000.0 * x1972 - 500000.0 * x2006 + x2172 * x999 + x2176 * x999 +
    x2179 * x999 + x2278 * x250 - x2283 * x998 + x2284 * x250 +
    240000.0 * x4 * x7313 + 33000000.0 * x674 - 240000.0 * x7298 +
    240000.0 * x7314 - 3612.0 * x7328 + 3612.0 * x7331 + x7476 + x7478 + x7521 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1822 - x1838) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[94] =
    30000000.0 * sc[10] * x1275 + 10000000.0 * sc[12] * x1401 + sc[16] * x167 +
    20000000.0 * sc[17] * x7548 + sc[19] * x7528 + sc[1] * x35 -
    80000000.0 * sc[2] * x1006 + 80000000.0 * sc[2] * x1008 -
    30000000.0 * sc[2] * x1385 + 30000000.0 * sc[2] * x1563 -
    10000000.0 * sc[2] * x1678 + 60000000.0 * sc[2] * x1686 -
    100000000.0 * sc[2] * x1701 - 96000000.0 * sc[2] * x1708 +
    96000000.0 * sc[2] * x1745 + 96240000.0 * sc[2] * x1759 -
    96240000.0 * sc[2] * x1780 - 57000000.0 * sc[2] * x1824 +
    57000000.0 * sc[2] * x1887 - 96000000.0 * sc[2] * x1981 -
    60000000.0 * sc[2] * x548 - sc[2] * x5582 + 33000000.0 * sc[3] * x1824 -
    33000000.0 * sc[3] * x1887 + sc[6] * x7522 + sc[8] * x7525 +
    500000.0 * x10 * x1967 + x1006 * x2172 + x1006 * x2176 + x1006 * x2179 -
    x1008 * x2172 - x1008 * x2176 - x1008 * x2179 - x1678 * x2283 -
    x1686 * x2063 - x1686 * x2083 - x1686 * x2177 + x1686 * x2256 +
    x1708 * x2246 - x1743 * x397 - x1743 * x801 - x1745 * x2246 -
    x1759 * x2278 - x1759 * x2284 + x1780 * x2278 + x1780 * x2284 +
    x2063 * x548 + x2083 * x548 + x2177 * x548 - x2256 * x548 + x325 * x767 +
    x578 * x885 + x7376 + x7530 + 0.0714 * x7531 + x7575 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1824 - x1887) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[117] =
    -80000000.0 * sc[2] * x1039 + 80000000.0 * sc[2] * x1042 +
    30000000.0 * sc[2] * x1320 - 30000000.0 * sc[2] * x1564 -
    100000000.0 * sc[2] * x1682 - 96000000.0 * sc[2] * x1747 +
    96000000.0 * sc[2] * x1748 + 60000000.0 * sc[2] * x1750 -
    60000000.0 * sc[2] * x1751 - 96240000.0 * sc[2] * x1760 +
    96240000.0 * sc[2] * x1844 - 10000000.0 * sc[2] * x1871 -
    96000000.0 * sc[2] * x1880 - 57000000.0 * sc[2] * x1956 +
    57000000.0 * sc[2] * x1973 - sc[2] * x5579 - 0.0357 * sc[2] * x7452 +
    33000000.0 * sc[3] * x1956 - 33000000.0 * sc[3] * x1973 + x1039 * x2172 +
    x1039 * x2176 + x1039 * x2179 - x1042 * x2172 - x1042 * x2176 -
    x1042 * x2179 + x1747 * x2246 - x1748 * x2246 - x1750 * x2063 -
    x1750 * x2083 - x1750 * x2177 + x1750 * x2256 + x1751 * x2063 +
    x1751 * x2083 + x1751 * x2177 - x1751 * x2256 + x1760 * x2278 +
    x1760 * x2284 - x1763 * x397 - x1763 * x801 - x1844 * x2278 -
    x1844 * x2284 - x1871 * x2283 + 3000000.0 * x1972 - 3000000.0 * x2006 -
    3696000.0 * x7298 + 3696000.0 * x7314 - 3612.0 * x7328 + 3612.0 * x7331 +
    x7615 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1956 - x1973) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (96000000.0 * sc[2] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[140] =
    sc[1] * x146 - 80000000.0 * sc[2] * x1043 + 80000000.0 * sc[2] * x1045 -
    10000000.0 * sc[2] * x1408 + 30000000.0 * sc[2] * x1440 -
    96000000.0 * sc[2] * x1755 + 60000000.0 * sc[2] * x1756 -
    60000000.0 * sc[2] * x1768 - 96240000.0 * sc[2] * x1865 +
    96240000.0 * sc[2] * x1867 - 96000000.0 * sc[2] * x1977 -
    57000000.0 * sc[2] * x2014 + 57000000.0 * sc[2] * x2032 +
    96000000.0 * sc[2] * x227 - 30000000.0 * sc[2] * x921 - 20000000.0 * sc[2] +
    33000000.0 * sc[3] * x2014 - 33000000.0 * sc[3] * x2032 + sc[4] * x7522 +
    x1043 * x2172 + x1043 * x2176 + x1043 * x2179 - x1045 * x2172 -
    x1045 * x2176 - x1045 * x2179 - x1408 * x2283 + x1755 * x2246 -
    x1756 * x2063 - x1756 * x2083 - x1756 * x2177 + x1756 * x2256 +
    x1768 * x2063 + x1768 * x2083 + x1768 * x2177 - x1768 * x2256 -
    x1826 * x397 - x1826 * x801 + x1865 * x2278 + x1865 * x2284 -
    x1867 * x2278 - x1867 * x2284 - x2246 * x227 + x7643 + x7653 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x2014 - x2032) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (96000000.0 * sc[2] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[163] =
    -80000000.0 * sc[2] * x1051 + 80000000.0 * sc[2] * x1052 -
    30000000.0 * sc[2] * x1580 - 96000000.0 * sc[2] * x1767 +
    60000000.0 * sc[2] * x1770 - 60000000.0 * sc[2] * x1772 +
    96000000.0 * sc[2] * x1812 + 96240000.0 * sc[2] * x1875 -
    96240000.0 * sc[2] * x1891 - 57000000.0 * sc[2] * x2070 +
    57000000.0 * sc[2] * x2087 + 30000000.0 * sc[2] * x476 - sc[2] * x7388 +
    33000000.0 * sc[3] * x2070 - 33000000.0 * sc[3] * x2087 + x1051 * x2172 +
    x1051 * x2176 + x1051 * x2179 - x1052 * x2172 - x1052 * x2176 -
    x1052 * x2179 + x1767 * x2246 - x1770 * x2063 - x1770 * x2083 -
    x1770 * x2177 + x1770 * x2256 + x1772 * x2063 + x1772 * x2083 +
    x1772 * x2177 - x1772 * x2256 - x1812 * x2246 - x1875 * x2278 -
    x1875 * x2284 + x1891 * x2278 + x1891 * x2284 + x7685 + x7695 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x2070 - x2087) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[186] =
    sc[10] * x1056 * x2173 + sc[10] * x1056 * x2178 +
    48000000.0 * sc[10] * x1191 + 16040000.0 * sc[12] * x1374 -
    80000000.0 * sc[2] * x1056 + 80000000.0 * sc[2] * x1059 -
    10000000.0 * sc[2] * x1641 + 60000000.0 * sc[2] * x1779 -
    60000000.0 * sc[2] * x1782 - 96000000.0 * sc[2] * x1813 +
    96000000.0 * sc[2] * x1833 - 96240000.0 * sc[2] * x1881 +
    96240000.0 * sc[2] * x1960 - 57000000.0 * sc[2] * x2080 +
    57000000.0 * sc[2] * x2141 + 30000000.0 * sc[2] * x315 -
    96000000.0 * sc[2] * x339 - 30000000.0 * sc[2] * x789 - 84300000.0 * sc[2] +
    33000000.0 * sc[3] * x2080 - 33000000.0 * sc[3] * x2141 + sc[3] * x7496 +
    sc[4] * x7525 + x1056 * x2172 - x1059 * x2172 - x1059 * x2176 -
    x1059 * x2179 - x1240 * x397 - x1240 * x801 - x1641 * x2283 -
    x1779 * x2063 - x1779 * x2083 - x1779 * x2177 + x1779 * x2256 +
    x1782 * x2063 + x1782 * x2083 + x1782 * x2177 - x1782 * x2256 +
    x1813 * x2246 - x1833 * x2246 + x1881 * x2278 + x1881 * x2284 -
    x1960 * x2278 - x1960 * x2284 + x6208 + x7643 + x7737 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x2080 - x2141) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (96000000.0 * sc[2] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[209] =
    -80000000.0 * sc[2] * x1060 + 80000000.0 * sc[2] * x1062 +
    30000000.0 * sc[2] * x1149 - 60000000.0 * sc[2] * x1742 -
    100000000.0 * sc[2] * x1758 + 60000000.0 * sc[2] * x1787 +
    96000000.0 * sc[2] * x1825 - 96000000.0 * sc[2] * x1841 -
    96240000.0 * sc[2] * x1961 + 96240000.0 * sc[2] * x1962 -
    96000000.0 * sc[2] * x2010 + 57000000.0 * sc[2] * x2186 -
    30000000.0 * sc[2] * x646 - 57000000.0 * sc[2] * x649 - sc[2] * x7396 -
    33000000.0 * sc[3] * x2186 + 33000000.0 * sc[3] * x649 + x1060 * x2172 +
    x1060 * x2176 + x1060 * x2179 - x1062 * x2172 - x1062 * x2176 -
    x1062 * x2179 + x1742 * x2063 + x1742 * x2083 + x1742 * x2177 -
    x1742 * x2256 - x1787 * x2063 - x1787 * x2083 - x1787 * x2177 +
    x1787 * x2256 - x1825 * x2246 + x1841 * x2246 + x1961 * x2278 +
    x1961 * x2284 - x1962 * x2278 - x1962 * x2284 + 1000000.0 * x1972 -
    1000000.0 * x2006 - 480000.0 * x7298 + 480000.0 * x7314 - 1204.0 * x7328 +
    1204.0 * x7331 + x7768 + x7775 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x2186 + x649) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (96000000.0 * sc[2] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[232] =
    15000000.0 * sc[0] * x1428 + 200000000.0 * sc[1] * x1248 * x2129 +
    57000000.0 * sc[1] * x1446 + 30000000.0 * sc[2] * x1037 -
    80000000.0 * sc[2] * x1064 + 80000000.0 * sc[2] * x1071 -
    30000000.0 * sc[2] * x1590 + 60000000.0 * sc[2] * x1676 -
    60000000.0 * sc[2] * x1741 - 96000000.0 * sc[2] * x1830 +
    96000000.0 * sc[2] * x1831 - 96240000.0 * sc[2] * x1968 +
    96240000.0 * sc[2] * x1969 - 96000000.0 * sc[2] * x2011 +
    57000000.0 * sc[2] * x2271 - 100000000.0 * sc[2] * x311 -
    10000000.0 * sc[2] * x722 - sc[2] * x7326 * x7402 -
    57000000.0 * sc[2] * x946 - 33000000.0 * sc[3] * x2271 +
    33000000.0 * sc[3] * x946 + 30000000.0 * sc[4] * x1275 +
    48000000.0 * sc[8] * x1191 + x1064 * x2172 + x1064 * x2176 + x1064 * x2179 -
    x1071 * x2172 - x1071 * x2176 - x1071 * x2179 - x1676 * x2063 -
    x1676 * x2083 - x1676 * x2177 + x1676 * x2256 - x174 * x397 - x174 * x801 +
    x1741 * x2063 + x1741 * x2083 + x1741 * x2177 - x1741 * x2256 +
    x1830 * x2246 - x1831 * x2246 + x1968 * x2278 + x1968 * x2284 -
    x1969 * x2278 - x1969 * x2284 + 750000.0 * x1972 - 750000.0 * x2006 +
    x2173 * x675 + x2178 * x675 - x2283 * x722 - 420000.0 * x7298 +
    420000.0 * x7314 - 903.0 * x7328 + 903.0 * x7331 + x7776 + x7819 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x2271 + x946) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (96000000.0 * sc[2] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[255] =
    30000000.0 * sc[1] * x1294 + 30000000.0 * sc[2] * x1047 -
    80000000.0 * sc[2] * x1072 + 80000000.0 * sc[2] * x1073 -
    57000000.0 * sc[2] * x1480 + 60000000.0 * sc[2] * x1749 -
    60000000.0 * sc[2] * x1814 + 96000000.0 * sc[2] * x1877 +
    96240000.0 * sc[2] * x1970 - sc[2] * x225 + 57000000.0 * sc[2] * x2323 -
    100000000.0 * sc[2] * x707 - 96240000.0 * sc[2] * x755 -
    96000000.0 * sc[2] * x774 - 96000000.0 * sc[2] * x896 -
    30000000.0 * sc[2] * x963 + 33000000.0 * sc[3] * x1480 -
    33000000.0 * sc[3] * x2323 + x1072 * x2172 + x1072 * x2176 + x1072 * x2179 -
    x1073 * x2172 - x1073 * x2176 - x1073 * x2179 - x1749 * x2063 -
    x1749 * x2083 - x1749 * x2177 + x1749 * x2256 + x1814 * x2063 +
    x1814 * x2083 + x1814 * x2177 - x1814 * x2256 - x1877 * x2246 -
    x1970 * x2278 - x1970 * x2284 + 1000000.0 * x1972 - 1000000.0 * x2006 +
    x222 * x675 + x2246 * x896 + x2278 * x755 + x2284 * x755 -
    864000.0 * x7298 + 864000.0 * x7314 - 2107.0 * x7328 + x7330 * x7402 +
    2107.0 * x7331 + x7768 + x7857 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1480 - x2323) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[278] =
    sc[1] * x5470 - 80000000.0 * sc[2] * x1075 - 57000000.0 * sc[2] * x1453 -
    10000000.0 * sc[2] * x1533 - 96000000.0 * sc[2] * x1554 -
    30000000.0 * sc[2] * x1640 + 30000000.0 * sc[2] * x1659 +
    60000000.0 * sc[2] * x1818 - 60000000.0 * sc[2] * x1819 -
    96000000.0 * sc[2] * x1886 + 96000000.0 * sc[2] * x1897 -
    96240000.0 * sc[2] * x1971 + 96240000.0 * sc[2] * x1979 +
    57000000.0 * sc[2] * x2360 + 80000000.0 * sc[2] * x671 - sc[2] * x7471 +
    33000000.0 * sc[3] * x1453 - 33000000.0 * sc[3] * x2360 +
    10000000.0 * sc[4] * x1401 + 16040000.0 * sc[8] * x1374 + x1075 * x2172 +
    x1075 * x2176 + x1075 * x2179 - x1533 * x2283 - x1818 * x2063 -
    x1818 * x2083 - x1818 * x2177 + x1818 * x2256 + x1819 * x2063 +
    x1819 * x2083 + x1819 * x2177 - x1819 * x2256 + x1886 * x2246 -
    x1897 * x2246 + x1971 * x2278 + x1971 * x2284 - x1979 * x2278 -
    x1979 * x2284 - x2172 * x671 - x2176 * x671 - x2179 * x671 - x229 * x397 -
    x229 * x801 + 96000000.0 * x325 * x329 + x7643 + x7896 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x1453 - x2360) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (96000000.0 * sc[2] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[301] =
    57000000.0 * sc[2] * x1035 - 80000000.0 * sc[2] * x1078 +
    80000000.0 * sc[2] * x1080 - 100000000.0 * sc[2] * x1522 -
    30000000.0 * sc[2] * x1663 + 30000000.0 * sc[2] * x1664 +
    60000000.0 * sc[2] * x1821 - 60000000.0 * sc[2] * x1823 -
    96000000.0 * sc[2] * x1860 - 96240000.0 * sc[2] * x1987 -
    96000000.0 * sc[2] * x2009 - 20.4 * sc[2] * x5621 -
    57000000.0 * sc[2] * x809 - 33000000.0 * sc[3] * x1035 +
    33000000.0 * sc[3] * x809 + x1078 * x2172 + x1078 * x2176 + x1078 * x2179 -
    x1080 * x2172 - x1080 * x2176 - x1080 * x2179 - x1821 * x2063 -
    x1821 * x2083 - x1821 * x2177 + x1821 * x2256 + x1823 * x2063 +
    x1823 * x2083 + x1823 * x2177 - x1823 * x2256 + x1860 * x2246 -
    x1884 * x2278 + x1987 * x2278 + x1987 * x2284 + x7931 + x7937 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1035 + x809) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[324] =
    -80000000.0 * sc[2] * x1083 + 80000000.0 * sc[2] * x1084 +
    57000000.0 * sc[2] * x1118 - 57000000.0 * sc[2] * x1205 -
    30000000.0 * sc[2] * x1670 + 30000000.0 * sc[2] * x1679 +
    60000000.0 * sc[2] * x1828 - 100000000.0 * sc[2] * x1829 -
    60000000.0 * sc[2] * x1834 - 96000000.0 * sc[2] * x1872 -
    96240000.0 * sc[2] * x1947 - 96000000.0 * sc[2] * x374 -
    33000000.0 * sc[3] * x1118 + 33000000.0 * sc[3] * x1205 + x1083 * x2172 +
    x1083 * x2176 + x1083 * x2179 - x1084 * x2172 - x1084 * x2176 -
    x1084 * x2179 - x1828 * x2063 - x1828 * x2083 - x1828 * x2177 +
    x1828 * x2256 + x1834 * x2063 + x1834 * x2083 + x1834 * x2177 -
    x1834 * x2256 + x1872 * x2246 - x1884 * x2278 + x1947 * x2278 +
    x1947 * x2284 + x7931 + x7966 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1118 + x1205) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[347] =
    -80000000.0 * sc[2] * x1085 + 80000000.0 * sc[2] * x1086 -
    100000000.0 * sc[2] * x1229 - 30000000.0 * sc[2] * x1680 +
    30000000.0 * sc[2] * x1688 - 96000000.0 * sc[2] * x1716 +
    60000000.0 * sc[2] * x1835 - 60000000.0 * sc[2] * x1836 -
    96240000.0 * sc[2] * x1837 + 96240000.0 * sc[2] * x1882 +
    96000000.0 * sc[2] * x1925 - 57000000.0 * sc[2] * x216 -
    96000000.0 * sc[2] * x502 - sc[2] * x7441 + 57000000.0 * sc[2] * x894 +
    33000000.0 * sc[3] * x216 - 33000000.0 * sc[3] * x894 + x1085 * x2172 +
    x1085 * x2176 + x1085 * x2179 - x1086 * x2172 - x1086 * x2176 -
    x1086 * x2179 - x1835 * x2063 - x1835 * x2083 - x1835 * x2177 +
    x1835 * x2256 + x1836 * x2063 + x1836 * x2083 + x1836 * x2177 -
    x1836 * x2256 + x1837 * x2278 + x1837 * x2284 - x1882 * x2278 -
    x1882 * x2284 - x1925 * x2246 + x2246 * x502 + x7930 + x7998 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (x216 - x894) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (96000000.0 * sc[2] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[370] =
    sc[1] * x204 + 57000000.0 * sc[2] * x1070 - 80000000.0 * sc[2] * x1087 +
    80000000.0 * sc[2] * x1088 - 30000000.0 * sc[2] * x1689 +
    30000000.0 * sc[2] * x1707 - 60000000.0 * sc[2] * x1815 -
    96000000.0 * sc[2] * x1932 - 57000000.0 * sc[2] * x955 -
    100000000.0 * sc[2] - 33000000.0 * sc[3] * x1070 +
    33000000.0 * sc[3] * x955 + sc[4] * x167 + x1087 * x2172 + x1087 * x2176 +
    x1087 * x2179 + x1087 * x2270 - x1088 * x2172 - x1088 * x2176 -
    x1088 * x2179 - x1088 * x2270 + x1815 * x2063 + x1815 * x2083 +
    x1815 * x2177 - x1815 * x2256 + x1815 * x2269 + x1932 * x2246 +
    x1932 * x2258 + x7685 + x8024 + x8027 + x8037 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1070 + x955) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[393] =
    sc[11] * x1089 * x222 + 48000000.0 * sc[1] * x1207 +
    120.0 * sc[1] * x1238 * x516 - 10000000.0 * sc[2] * x1013 -
    80000000.0 * sc[2] * x1089 + 80000000.0 * sc[2] * x1092 -
    30000000.0 * sc[2] * x1625 + 57000000.0 * sc[2] * x1668 +
    30000000.0 * sc[2] * x1707 - 60000000.0 * sc[2] * x1817 -
    96000000.0 * sc[2] * x183 - 100000000.0 * sc[2] * x1945 - sc[2] * x7448 -
    57000000.0 * sc[2] * x958 - 33000000.0 * sc[3] * x1668 +
    33000000.0 * sc[3] * x958 + 20000000.0 * sc[4] * x7548 + x1089 * x2176 +
    x1089 * x2179 + x1089 * x2270 - x1092 * x2179 + x1817 * x2063 +
    x1817 * x2083 + x1817 * x2177 - x1817 * x2256 + x1817 * x2269 +
    x183 * x2246 + x183 * x2258 - x397 * x837 + x7376 - x801 * x837 + x8024 +
    x8027 + x8059 + x8060 + x8063 + x8065 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1668 + x958) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[416] =
    80200000.0 * sc[1] * x1378 - 30000000.0 * sc[2] * x1018 -
    80000000.0 * sc[2] * x1141 - 20000000.0 * sc[2] * x1265 * x2044 -
    57000000.0 * sc[2] * x1694 - 60000000.0 * sc[2] * x1863 -
    96240000.0 * sc[2] * x1958 - 96000000.0 * sc[2] * x233 +
    33000000.0 * sc[3] * x1694 + x1141 * x2172 + x1141 * x2176 + x1141 * x2179 +
    x1141 * x2270 - x1265 * x397 + x1863 * x2063 + x1863 * x2083 +
    x1863 * x2177 - x1863 * x2256 + x1863 * x2269 + x1958 * x2278 +
    x1958 * x2284 + x2246 * x233 + x2258 * x233 + x8017 + x8023 + x8027 +
    x8059 + x8060 + x8063 + x8065 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1668 + x1694) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[439] =
    57000000.0 * sc[2] * x1009 - 57000000.0 * sc[2] * x1057 -
    80000000.0 * sc[2] * x1161 + 80000000.0 * sc[2] * x1167 -
    30000000.0 * sc[2] * x1729 + 60000000.0 * sc[2] * x1870 -
    60000000.0 * sc[2] * x1873 + 96000000.0 * sc[2] * x1937 -
    96000000.0 * sc[2] * x1946 + 96240000.0 * sc[2] * x1957 +
    30000000.0 * sc[2] * x262 - 100000000.0 * sc[2] * x65 -
    96240000.0 * sc[2] * x655 - 33000000.0 * sc[3] * x1009 +
    33000000.0 * sc[3] * x1057 + sc[4] * x7528 + x1161 * x2172 + x1161 * x2176 +
    x1161 * x2179 - x1167 * x2172 - x1167 * x2176 - x1167 * x2179 -
    x1870 * x2063 - x1870 * x2083 - x1870 * x2177 + x1870 * x2256 +
    x1873 * x2063 + x1873 * x2083 + x1873 * x2177 - x1873 * x2256 -
    x1896 * x397 - x1896 * x801 - x1937 * x2246 + x1946 * x2246 -
    x1957 * x2284 + x2278 * x655 + x2284 * x655 + x7376 + x8017 + x8060 +
    x8117 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1009 + x1057) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[462] =
    -96000000.0 * sc[2] * x1339 - 80000000.0 * sc[2] * x1443 -
    30000000.0 * sc[2] * x1675 - 60000000.0 * sc[2] * x1874 -
    10000000.0 * sc[2] * x1885 - 96000000.0 * sc[2] * x1949 -
    96240000.0 * sc[2] * x1966 - 57000000.0 * sc[2] * x784 +
    33000000.0 * sc[3] * x784 + x1443 * x2172 + x1443 * x2176 + x1443 * x2179 +
    x1443 * x2270 + x1874 * x2063 + x1874 * x2083 + x1874 * x2177 -
    x1874 * x2256 + x1874 * x2269 - x1885 * x2283 - x1896 * x397 -
    x1896 * x801 + x1949 * x2246 + x1949 * x2258 + x1966 * x2278 +
    x1966 * x2284 + x8017 + x8023 + x8027 + x8059 + x8063 + x8065 + x8130 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x1668 + x784) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[485] =
    -80000000.0 * sc[2] * x1444 + 80000000.0 * sc[2] * x1445 -
    30000000.0 * sc[2] * x1752 + 30000000.0 * sc[2] * x1757 -
    96000000.0 * sc[2] * x1788 - 60000000.0 * sc[2] * x1876 +
    57000000.0 * sc[2] * x647 - 57000000.0 * sc[2] * x669 -
    33000000.0 * sc[3] * x647 + 33000000.0 * sc[3] * x669 + x1444 * x2172 +
    x1444 * x2176 + x1444 * x2179 + x1444 * x2270 - x1445 * x2172 -
    x1445 * x2176 - x1445 * x2179 - x1445 * x2270 + x1788 * x2246 +
    x1788 * x2258 + x1876 * x2063 + x1876 * x2083 + x1876 * x2177 -
    x1876 * x2256 + x1876 * x2269 + x7685 + x8024 + x8027 + x8037 +
    (-80000000.0 * sc[2] * x677 - 30000000.0 * sc[2] * x678 -
     60000000.0 * sc[2] * x680 + 96000000.0 * sc[2] * x683 + x2063 * x680 +
     x2083 * x680 + x2172 * x677 + x2176 * x677 + x2177 * x680 + x2179 * x677 -
     x2246 * x683 - x2256 * x680 - x2258 * x683 + x2269 * x680 + x2270 * x677) *
      (-x647 + x669) +
    (100000000.0 * sc[2] * x660 - 30000000.0 * sc[2] * x679 -
     60000000.0 * sc[2] * x681 - 96000000.0 * sc[2] * x684 + x2063 * x681 +
     x2083 * x681 + x2177 * x681 + x2246 * x684 - x2256 * x681 + x2258 * x684 +
     x2269 * x681) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (100000000.0 * sc[2] * x67 + x231 * x397 + x231 * x801) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (96000000.0 * sc[2] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (96240000.0 * sc[2] * x597 + 10000000.0 * sc[2] * x637 +
     100000000.0 * sc[2] * x640 - 60000000.0 * sc[2] * x682 + x2063 * x682 +
     x2083 * x682 + x2177 * x682 - x2256 * x682 + x2269 * x682 - x2278 * x597 +
     x2283 * x637 - x2284 * x597) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (96240000.0 * sc[2] * x448 - 96000000.0 * sc[2] * x685 + x2246 * x685 +
     x2258 * x685 - x2278 * x448 - x2284 * x448 + x397 * x483 + x483 * x801) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[3] =
    -40000000.0 * sc[3] * x1007 - 158000.0 * sc[3] * x1243 - sc[3] * x143 +
    33000000.0 * sc[3] * x1472 - 90000.0 * sc[3] * x1636 -
    10000000.0 * sc[3] * x708 - 20000.0 * sc[3] * x756 +
    20000.0 * sc[3] * x779 + 40000000.0 * sc[3] * x937 -
    33000000.0 * sc[3] * x985 + x1243 * x397 + x1548 * x897 - x1548 * x908 -
    x1687 * x923 + x1687 * x932 + x1879 * x2283 - x1879 * x823 + x2094 -
    x2171 * x897 + x2171 * x908 - x2246 * x897 + x2246 * x908 - x2250 * x897 +
    x2250 * x908 - x2256 * x923 + x2256 * x932 + x2266 * x923 - x2266 * x932 +
    x2267 * x725 - x2267 * x790 - x2317 * x923 + x2317 * x932 - x282 * x725 +
    x282 * x790 + 288000.0 * x7298 - 288000.0 * x7314 + x8180 - x923 * x984 +
    x932 * x984 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1472 + x985) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (90000.0 * sc[3] * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[26] =
    5280000.0 * sc[11] * sc[1] * x2169 - 40000000.0 * sc[3] * x1471 +
    40000000.0 * sc[3] * x1481 - 20000.0 * sc[3] * x1560 -
    10000000.0 * sc[3] * x1650 - 33000000.0 * sc[3] * x1665 +
    33000000.0 * sc[3] * x1692 - 158000.0 * sc[3] * x207 -
    90000.0 * sc[3] * x362 + 20000.0 * sc[3] * x423 + sc[6] * x19 -
    x1005 * x1687 - x1005 * x2256 + x1005 * x2266 - x1005 * x2317 -
    x1005 * x984 + x1069 * x1548 - x1069 * x2171 - x1069 * x2246 -
    x1069 * x2250 + x1074 * x1687 + x1074 * x2256 - x1074 * x2266 +
    x1074 * x2317 + x1074 * x984 + 28000000.0 * x1249 * x1426 - x1526 * x1548 +
    x1526 * x2171 + x1526 * x2246 + x1526 * x2250 + x207 * x397 + x2094 +
    x2267 * x926 - x2267 * x936 + x2283 * x609 - x282 * x926 + x282 * x936 +
    x602 - x609 * x823 + x8202 + x8209 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1665 - x1692) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (90000.0 * sc[3] * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[49] =
    sc[11] * x225 + 240000.0 * sc[2] * x1212 * x4 - 10000000.0 * sc[3] * x1 -
    90000.0 * sc[3] * x1063 - 20000.0 * sc[3] * x1081 -
    40000000.0 * sc[3] * x1482 + 20000.0 * sc[3] * x1718 -
    33000000.0 * sc[3] * x1753 + 33000000.0 * sc[3] * x1773 -
    158000.0 * sc[3] * x220 + 40000000.0 * sc[3] * x961 + sc[4] * x5582 +
    20000000.0 * sc[6] + x115 * x1548 - x115 * x2171 - x115 * x2246 -
    x115 * x2250 - x1548 * x1653 + x1633 * x1687 + x1633 * x2256 -
    x1633 * x2266 + x1633 * x2317 + x1633 * x984 + x1653 * x2171 +
    x1653 * x2246 + x1653 * x2250 - x1687 * x824 + x2094 + x220 * x397 -
    x2256 * x824 + x2266 * x824 + x2267 * x968 - x2267 * x995 + x2283 * x624 -
    x2317 * x824 + x267 * x864 - x282 * x968 + x282 * x995 + x433 * x703 +
    33000000.0 * x540 * x578 - x624 * x823 + x8202 + x8236 - x824 * x984 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1753 - x1773) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (90000.0 * sc[3] * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[72] =
    -sc[0] * x143 - sc[12] * x8302 - sc[14] * x8297 -
    300000.0 * sc[15] * x1368 - 1600000.0 * sc[16] * x8239 - sc[20] * x8246 -
    40000000.0 * sc[3] * x1535 + 40000000.0 * sc[3] * x1537 -
    158000.0 * sc[3] * x1639 + 20000.0 * sc[3] * x1739 -
    33000000.0 * sc[3] * x1822 + 33000000.0 * sc[3] * x1838 -
    90000.0 * sc[3] * x185 - 20000.0 * sc[3] * x250 -
    10000000.0 * sc[3] * x659 - sc[5] * x1367 - 420000000.0 * sc[7] * x8288 -
    130000.0 * sc[7] * x8291 - sc[8] * x7496 - sc[8] * x8306 - sc[9] * x8243 -
    x1000 * x2267 + x1000 * x282 + 158000.0 * x1025 + 10000000.0 * x1230 +
    158000.0 * x1266 + 90000.0 * x1340 - x1501 * x433 + x1548 * x1654 -
    x1548 * x1685 + x1639 * x397 - x165 * x170 - x1654 * x2171 - x1654 * x2246 -
    x1654 * x2250 - x1656 * x1687 - x1656 * x2256 + x1656 * x2266 -
    x1656 * x2317 - x1656 * x984 + x1672 * x1687 + x1672 * x2256 -
    x1672 * x2266 + x1672 * x2317 + x1672 * x984 + x1685 * x2171 +
    x1685 * x2246 + x1685 * x2250 - x170 * x2185 - x170 * x991 + x2267 * x999 +
    x2283 * x998 - x282 * x999 - 20000.0 * x325 - 120000.0 * x4 * x7313 +
    x5740 - 7600000.0 * x578 * exp(-201.28666632188799 * invT) -
    40000000.0 * x595 + 10000000.0 * x643 - 33000000.0 * x674 -
    13200000.0 * x675 * exp(-754.82499870708 * invT) - x7476 - x7478 +
    90000.0 * x766 + x8202 - x823 * x998 + x8293 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1822 - x1838) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (90000.0 * sc[3] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[95] =
    18000.0 * sc[12] * x1248 * x1251 + sc[12] * x8340 +
    28000000.0 * sc[1] * x1248 * x1426 + sc[2] * x5582 -
    40000000.0 * sc[3] * x1385 + 40000000.0 * sc[3] * x1563 -
    10000000.0 * sc[3] * x1701 - 158000.0 * sc[3] * x1743 +
    20000.0 * sc[3] * x1759 - 20000.0 * sc[3] * x1780 -
    33000000.0 * sc[3] * x1824 + 33000000.0 * sc[3] * x1887 -
    90000.0 * sc[3] * x1981 + sc[6] * x8330 + x1006 * x2267 - x1006 * x282 -
    x1008 * x2267 + x1008 * x282 + x1548 * x1708 - x1548 * x1745 +
    x1678 * x2283 - x1678 * x823 - x1686 * x1687 - x1686 * x2256 +
    x1686 * x2266 - x1686 * x2317 - x1686 * x984 + x1687 * x548 -
    x1708 * x2171 - x1708 * x2246 - x1708 * x2250 + x1743 * x397 +
    x1745 * x2171 + x1745 * x2246 + x1745 * x2250 + x2094 + x2256 * x548 -
    x2266 * x548 + x2316 * x578 + x2317 * x548 + x548 * x984 +
    1600000.0 * x607 * x8309 - x7530 + x8202 + x8345 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1824 - x1887) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (90000.0 * sc[3] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[118] =
    refC * sc[6] * x5947 + 12000000.0 * sc[10] * x1420 - sc[1] * sc[3] * x521 +
    40000000.0 * sc[3] * x1320 - sc[3] * x1367 - 40000000.0 * sc[3] * x1564 -
    10000000.0 * sc[3] * x1682 - 20000.0 * sc[3] * x1760 -
    158000.0 * sc[3] * x1763 + 20000.0 * sc[3] * x1844 -
    90000.0 * sc[3] * x1880 - 33000000.0 * sc[3] * x1956 +
    33000000.0 * sc[3] * x1973 + x1039 * x2267 - x1039 * x282 - x1042 * x2267 +
    x1042 * x282 + x1548 * x1747 - x1548 * x1748 - x1687 * x1750 +
    x1687 * x1751 - x1747 * x2171 - x1747 * x2246 - x1747 * x2250 +
    x1748 * x2171 + x1748 * x2246 + x1748 * x2250 - x1750 * x2256 +
    x1750 * x2266 - x1750 * x2317 - x1750 * x984 + x1751 * x2256 -
    x1751 * x2266 + x1751 * x2317 + x1751 * x984 + x1763 * x397 +
    x1871 * x2283 - x1871 * x823 + 1848000.0 * x7298 - 1848000.0 * x7314 +
    x8375 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1956 - x1973) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (90000.0 * sc[3] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[141] =
    sc[10] * x163 + sc[12] * x102 + sc[13] * x8390 + 20000.0 * sc[14] * x1348 +
    140000.0 * sc[17] * x1235 + 2660000.0 * sc[19] + sc[1] * x19 +
    90000.0 * sc[20] * x1326 + 20000000.0 * sc[2] + 40000000.0 * sc[3] * x1440 -
    158000.0 * sc[3] * x1826 - 20000.0 * sc[3] * x1865 +
    20000.0 * sc[3] * x1867 - 90000.0 * sc[3] * x1977 -
    33000000.0 * sc[3] * x2014 + 33000000.0 * sc[3] * x2032 -
    40000000.0 * sc[3] * x921 + sc[4] * x8330 + 1000000.0 * sc[8] +
    x1043 * x2267 - x1043 * x282 - x1045 * x2267 + x1045 * x282 +
    x1408 * x2283 - x1408 * x823 + x1548 * x1755 - x1548 * x227 -
    x1687 * x1756 + x1687 * x1768 + x170 * x2321 - x1755 * x2171 -
    x1755 * x2246 - x1755 * x2250 - x1756 * x2256 + x1756 * x2266 -
    x1756 * x2317 - x1756 * x984 + x1768 * x2256 - x1768 * x2266 +
    x1768 * x2317 + x1768 * x984 + x1826 * x397 + x2171 * x227 + x2246 * x227 +
    x2250 * x227 + x2318 * x578 + x6044 + x8412 + x8415 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x2014 - x2032) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (90000.0 * sc[3] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[164] =
    -40000000.0 * sc[3] * x1580 + 20000.0 * sc[3] * x1875 -
    20000.0 * sc[3] * x1891 - 33000000.0 * sc[3] * x2070 +
    33000000.0 * sc[3] * x2087 + 40000000.0 * sc[3] * x476 -
    420000000.0 * sc[3] * x8288 - 130000.0 * sc[3] * x8291 + x1051 * x2267 -
    x1051 * x282 - x1052 * x2267 + x1052 * x282 + x1548 * x1767 -
    x1548 * x1812 - x1687 * x1770 + x1687 * x1772 - x1767 * x2171 -
    x1767 * x2246 - x1767 * x2250 - x1770 * x2256 + x1770 * x2266 -
    x1770 * x2317 - x1770 * x984 + x1772 * x2256 - x1772 * x2266 +
    x1772 * x2317 + x1772 * x984 + x1812 * x2171 + x1812 * x2246 +
    x1812 * x2250 + x2094 + x8440 + x8447 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x2070 - x2087) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (90000.0 * sc[3] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[187] =
    -158000.0 * sc[3] * x1240 - 20000.0 * sc[3] * x1881 +
    20000.0 * sc[3] * x1960 - 33000000.0 * sc[3] * x2080 +
    33000000.0 * sc[3] * x2141 + 40000000.0 * sc[3] * x315 -
    90000.0 * sc[3] * x339 - sc[3] * x7496 - 40000000.0 * sc[3] * x789 -
    sc[3] * x8306 + 1000000.0 * sc[6] + x1056 * x2267 - x1056 * x282 -
    x1059 * x2267 + x1059 * x282 + x1240 * x397 + x1548 * x1813 -
    x1548 * x1833 + x1641 * x2283 - x1641 * x823 - x1687 * x1779 +
    x1687 * x1782 - x1779 * x2256 + x1779 * x2266 - x1779 * x2317 -
    x1779 * x984 + x1782 * x2256 - x1782 * x2266 + x1782 * x2317 +
    x1782 * x984 - x1813 * x2171 - x1813 * x2246 - x1813 * x2250 +
    x1833 * x2171 + x1833 * x2246 + x1833 * x2250 + x8415 + x8478 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x2080 - x2141) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (90000.0 * sc[3] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[210] =
    40000000.0 * sc[3] * x1149 - 10000000.0 * sc[3] * x1758 -
    20000.0 * sc[3] * x1961 + 20000.0 * sc[3] * x1962 -
    90000.0 * sc[3] * x2010 + 33000000.0 * sc[3] * x2186 -
    40000000.0 * sc[3] * x646 - 33000000.0 * sc[3] * x649 - sc[3] * x8243 -
    158000.0 * sc[3] * x858 + x1060 * x2267 - x1060 * x282 - x1062 * x2267 +
    x1062 * x282 - x1548 * x1825 + x1548 * x1841 + x1687 * x1742 -
    x1687 * x1787 + x1742 * x2256 - x1742 * x2266 + x1742 * x2317 +
    x1742 * x984 - x1787 * x2256 + x1787 * x2266 - x1787 * x2317 -
    x1787 * x984 + x1825 * x2171 + x1825 * x2246 + x1825 * x2250 -
    x1841 * x2171 - x1841 * x2246 - x1841 * x2250 + x2094 + x2283 * x634 +
    x397 * x858 - x634 * x823 + 240000.0 * x7298 - 240000.0 * x7314 + x8507 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x2186 + x649) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (90000.0 * sc[3] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[233] =
    28000000.0 * sc[1] * x1426 * x2279 + 40000000.0 * sc[3] * x1037 -
    40000000.0 * sc[3] * x1590 - 158000.0 * sc[3] * x174 -
    20000.0 * sc[3] * x1968 + 20000.0 * sc[3] * x1969 -
    90000.0 * sc[3] * x2011 + 33000000.0 * sc[3] * x2271 -
    10000000.0 * sc[3] * x311 - 33000000.0 * sc[3] * x946 +
    18000.0 * sc[4] * x105 * x1251 + 12000000.0 * sc[5] * x1420 + sc[6] * x163 +
    x1064 * x2267 - x1064 * x282 - x1071 * x2267 + x1071 * x282 +
    3200000.0 * x1249 * x8309 + x1548 * x1830 - x1548 * x1831 - x1676 * x1687 -
    x1676 * x2256 + x1676 * x2266 - x1676 * x2317 - x1676 * x984 +
    x1687 * x1741 + x174 * x397 + x1741 * x2256 - x1741 * x2266 +
    x1741 * x2317 + x1741 * x984 - x1830 * x2171 - x1830 * x2246 -
    x1830 * x2250 + x1831 * x2171 + x1831 * x2246 + x1831 * x2250 -
    2100000.0 * x2091 + 2100000.0 * x2093 + x2283 * x722 - x722 * x823 +
    210000.0 * x7298 - 210000.0 * x7314 - x7776 + x8541 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x2271 + x946) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (90000.0 * sc[3] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[256] =
    2640000.0 * ((sc[1]) * (sc[1])) * x2169 + sc[2] * x225 +
    40000000.0 * sc[3] * x1047 - 33000000.0 * sc[3] * x1480 +
    20000.0 * sc[3] * x1970 + 33000000.0 * sc[3] * x2323 -
    10000000.0 * sc[3] * x707 - 20000.0 * sc[3] * x755 -
    90000.0 * sc[3] * x774 - 158000.0 * sc[3] * x858 -
    40000000.0 * sc[3] * x963 + x1072 * x2267 - x1072 * x282 - x1073 * x2267 +
    x1073 * x282 - x1548 * x1877 + x1548 * x896 - x1687 * x1749 +
    x1687 * x1814 - x1749 * x2256 + x1749 * x2266 - x1749 * x2317 -
    x1749 * x984 + x1814 * x2256 - x1814 * x2266 + x1814 * x2317 +
    x1814 * x984 + x1877 * x2171 + x1877 * x2246 + x1877 * x2250 -
    4200000.0 * x2091 + 4200000.0 * x2093 - x2171 * x896 - x2246 * x896 -
    x2250 * x896 + x2283 * x634 + 10000000.0 * x238 * x675 + x397 * x858 -
    x634 * x823 + 432000.0 * x7298 - 432000.0 * x7314 + x8568 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1480 - x2323) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (90000.0 * sc[3] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[279] =
    -33000000.0 * sc[3] * x1453 - 90000.0 * sc[3] * x1554 -
    40000000.0 * sc[3] * x1640 + 40000000.0 * sc[3] * x1659 -
    20000.0 * sc[3] * x1971 + 20000.0 * sc[3] * x1979 -
    158000.0 * sc[3] * x229 + 33000000.0 * sc[3] * x2360 - sc[3] * x8302 +
    sc[4] * x8340 + sc[6] * x102 + x1075 * x2267 - x1075 * x282 +
    18000.0 * x1249 * x1251 + x1489 * x578 + x1533 * x2283 - x1533 * x823 +
    x1548 * x1886 - x1548 * x1897 - x1687 * x1818 + x1687 * x1819 -
    x1818 * x2256 + x1818 * x2266 - x1818 * x2317 - x1818 * x984 +
    x1819 * x2256 - x1819 * x2266 + x1819 * x2317 + x1819 * x984 -
    x1886 * x2171 - x1886 * x2246 - x1886 * x2250 + x1897 * x2171 +
    x1897 * x2246 + x1897 * x2250 - x2267 * x671 + x229 * x397 + x282 * x671 +
    x8415 + x8595 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x1453 - x2360) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (90000.0 * sc[3] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[302] =
    33000000.0 * sc[3] * x1035 - 10000000.0 * sc[3] * x1522 -
    40000000.0 * sc[3] * x1663 + 40000000.0 * sc[3] * x1664 -
    20000.0 * sc[3] * x1987 - 90000.0 * sc[3] * x2009 -
    33000000.0 * sc[3] * x809 + sc[6] * x8390 + x1078 * x2267 - x1078 * x282 -
    x1080 * x2267 + x1080 * x282 + x1548 * x1860 - x1548 * x1862 -
    x1687 * x1821 + x1687 * x1823 - x1821 * x2256 + x1821 * x2266 -
    x1821 * x2317 - x1821 * x984 + x1823 * x2256 - x1823 * x2266 +
    x1823 * x2317 + x1823 * x984 - x1860 * x2171 - x1860 * x2246 -
    x1860 * x2250 + x8623 + x8630 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1035 + x809) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (90000.0 * sc[3] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[325] =
    33000000.0 * sc[3] * x1118 - 33000000.0 * sc[3] * x1205 -
    40000000.0 * sc[3] * x1670 + 40000000.0 * sc[3] * x1679 -
    10000000.0 * sc[3] * x1829 - 20000.0 * sc[3] * x1947 -
    90000.0 * sc[3] * x374 - sc[3] * x8297 + 20000.0 * sc[6] * x1348 +
    x1083 * x2267 - x1083 * x282 - x1084 * x2267 + x1084 * x282 -
    x1548 * x1862 + x1548 * x1872 - x1687 * x1828 + x1687 * x1834 -
    x1828 * x2256 + x1828 * x2266 - x1828 * x2317 - x1828 * x984 +
    x1834 * x2256 - x1834 * x2266 + x1834 * x2317 + x1834 * x984 -
    x1872 * x2171 - x1872 * x2246 - x1872 * x2250 + x8630 + x8647 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1118 + x1205) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (90000.0 * sc[3] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[348] =
    -10000000.0 * sc[3] * x1229 - 300000.0 * sc[3] * x1368 -
    40000000.0 * sc[3] * x1680 + 40000000.0 * sc[3] * x1688 -
    90000.0 * sc[3] * x1716 - 20000.0 * sc[3] * x1837 +
    20000.0 * sc[3] * x1882 - 33000000.0 * sc[3] * x216 +
    33000000.0 * sc[3] * x894 + x1085 * x2267 - x1085 * x282 - x1086 * x2267 +
    x1086 * x282 - x1548 * x1925 + x1548 * x502 - x1687 * x1835 +
    x1687 * x1836 - x1835 * x2256 + x1835 * x2266 - x1835 * x2317 -
    x1835 * x984 + x1836 * x2256 - x1836 * x2266 + x1836 * x2317 +
    x1836 * x984 + x1925 * x2171 + x1925 * x2246 + x1925 * x2250 -
    4200000.0 * x2091 + 4200000.0 * x2093 - x2171 * x502 - x2246 * x502 -
    x2250 * x502 + x8629 + x8673 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (x216 - x894) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (90000.0 * sc[3] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[371] =
    33000000.0 * sc[3] * x1070 - 40000000.0 * sc[3] * x1689 +
    40000000.0 * sc[3] * x1707 - 20000.0 * sc[3] * x731 -
    1600000.0 * sc[3] * x8239 - 33000000.0 * sc[3] * x955 + x1087 * x2267 -
    x1087 * x282 - x1088 * x2267 + x1088 * x282 + x1548 * x1932 +
    x1687 * x1815 + x1815 * x2256 - x1815 * x2266 + x1815 * x2317 +
    x1815 * x984 - x1932 * x2171 - x1932 * x2246 - x1932 * x2250 + x2094 +
    x8447 + x8700 + x8704 + x8709 + x8711 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1070 + x955) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (90000.0 * sc[3] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[394] =
    10000000.0 * sc[11] * x1089 * x238 - 40000000.0 * sc[3] * x1625 -
    10000000.0 * sc[3] * x1945 - 20000.0 * sc[3] * x731 -
    158000.0 * sc[3] * x837 - 33000000.0 * sc[3] * x958 +
    140000.0 * sc[6] * x1235 - x1089 * x282 + x1548 * x183 + x1687 * x1817 +
    x1817 * x2256 - x1817 * x2266 + x1817 * x2317 + x1817 * x984 -
    x183 * x2171 - x183 * x2246 - x183 * x2250 + x2094 + x397 * x837 + x8202 +
    x8700 + x8704 + x8709 + x8711 + x8727 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1668 + x958) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (90000.0 * sc[3] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[417] =
    -40000000.0 * sc[3] * x1018 - 158000.0 * sc[3] * x1265 -
    33000000.0 * sc[3] * x1694 - 20000.0 * sc[3] * x1958 +
    300000.0 * sc[6] * x1958 + x1141 * x2267 - x1141 * x282 + x1265 * x397 +
    x1548 * x233 + x1687 * x1863 + x1863 * x2256 - x1863 * x2266 +
    x1863 * x2317 + x1863 * x984 - x2171 * x233 - x2246 * x233 - x2250 * x233 +
    x8415 + x8700 + x8704 + x8709 + x8710 + x8727 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1668 + x1694) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (90000.0 * sc[3] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[440] =
    33000000.0 * sc[3] * x1009 - 33000000.0 * sc[3] * x1057 -
    40000000.0 * sc[3] * x1729 - 158000.0 * sc[3] * x1896 +
    20000.0 * sc[3] * x1957 - 90000.0 * sc[3] * x2009 +
    40000000.0 * sc[3] * x262 - 10000000.0 * sc[3] * x65 -
    20000.0 * sc[3] * x655 + 300000.0 * sc[6] * x655 + 2660000.0 * sc[6] +
    x1161 * x2267 - x1161 * x282 - x1167 * x2267 + x1167 * x282 +
    x1548 * x1946 - x1687 * x1870 + x1687 * x1873 - x1870 * x2256 +
    x1870 * x2266 - x1870 * x2317 - x1870 * x984 + x1873 * x2256 -
    x1873 * x2266 + x1873 * x2317 + x1873 * x984 + x1885 * x2283 -
    x1885 * x823 + x1896 * x397 + x1937 * x2171 + x1937 * x2246 +
    x1937 * x2250 - x1946 * x2171 - x1946 * x2246 - x1946 * x2250 + x2094 +
    x8202 + x8709 + x8710 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1009 + x1057) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (90000.0 * sc[3] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[463] =
    -90000.0 * sc[3] * x1339 + 33000000.0 * sc[3] * x1668 -
    40000000.0 * sc[3] * x1675 + 40000000.0 * sc[3] * x1707 -
    158000.0 * sc[3] * x1896 - 20000.0 * sc[3] * x1966 -
    33000000.0 * sc[3] * x784 - sc[3] * x8246 + 90000.0 * sc[6] * x1326 +
    300000.0 * sc[6] * x1966 - x1092 * x2267 + x1092 * x282 + x1443 * x2267 -
    x1443 * x282 + x1548 * x1949 + x1687 * x1874 + x1874 * x2256 -
    x1874 * x2266 + x1874 * x2317 + x1874 * x984 + x1885 * x2283 -
    x1885 * x823 + x1896 * x397 - x1949 * x2171 - x1949 * x2246 -
    x1949 * x2250 + x8415 + x8700 + x8704 + x8709 + x8710 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x1668 + x784) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (90000.0 * sc[3] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[486] =
    refC * sc[6] * x6042 - sc[1] * sc[3] * x1572 - 40000000.0 * sc[3] * x1752 +
    40000000.0 * sc[3] * x1757 + 33000000.0 * sc[3] * x647 -
    33000000.0 * sc[3] * x669 - 20000.0 * sc[3] * x731 + x1444 * x2267 -
    x1444 * x282 - x1445 * x2267 + x1445 * x282 + x1548 * x1788 +
    x1687 * x1876 - x1788 * x2171 - x1788 * x2246 - x1788 * x2250 +
    x1876 * x2256 - x1876 * x2266 + x1876 * x2317 + x1876 * x984 + x8447 +
    x8700 + x8704 + x8709 + x8711 +
    (-40000000.0 * sc[3] * x678 - x1548 * x683 + x1687 * x680 + x2171 * x683 +
     x2246 * x683 + x2250 * x683 + x2256 * x680 - x2266 * x680 + x2267 * x677 +
     x2317 * x680 - x282 * x677 + x680 * x984) *
      (-x647 + x669) +
    (10000000.0 * sc[3] * x660 - 40000000.0 * sc[3] * x679 + x1548 * x684 +
     x1687 * x681 - x2171 * x684 - x2246 * x684 - x2250 * x684 + x2256 * x681 -
     x2266 * x681 + x2317 * x681 + x681 * x984) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (158000.0 * sc[3] * x231 + 10000000.0 * sc[3] * x67 - x231 * x397) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (90000.0 * sc[3] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (20000.0 * sc[3] * x597 + 10000000.0 * sc[3] * x640 -
     300000.0 * sc[6] * x597 + x1687 * x682 + x2256 * x682 - x2266 * x682 -
     x2283 * x637 + x2317 * x682 + x637 * x823 + x682 * x984) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (20000.0 * sc[3] * x448 + 158000.0 * sc[3] * x483 -
     300000.0 * sc[6] * x448 + x1548 * x685 - x2171 * x685 - x2246 * x685 -
     x2250 * x685 - x397 * x483) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[4] =
    18000.0 * sc[3] * x1243 - 30000000.0 * sc[4] * x1007 +
    30000000.0 * sc[4] * x1472 - 24000000.0 * sc[4] * x1636 -
    5000000.0 * sc[4] * x1879 - 20000000.0 * sc[4] * x708 -
    20000000.0 * sc[4] * x725 + 20000000.0 * sc[4] * x790 -
    30110000.0 * sc[4] * x897 + 30110000.0 * sc[4] * x908 +
    50000000.0 * sc[4] * x923 - 50000000.0 * sc[4] * x932 +
    30000000.0 * sc[4] * x937 - 30000000.0 * sc[4] * x985 +
    24000000.0 * sc[6] * x756 - 24000000.0 * sc[6] * x779 +
    10000000.0 * sc[6] * x897 - 10000000.0 * sc[6] * x908 + x1129 * x897 -
    x1129 * x908 - x1243 * x2350 - x1243 * x2352 + x1243 * x801 -
    x1472 * x8807 + x1547 - x1575 * x725 + x1575 * x790 + x1584 * x725 -
    x1584 * x790 - x1879 * x2315 - x2084 * x923 + x2084 * x932 + x2177 * x923 -
    x2177 * x932 - x2258 * x897 + x2258 * x908 - x2278 * x756 + x2278 * x779 +
    x2314 * x756 - x2314 * x779 + x2317 * x923 - x2317 * x932 - x748 +
    x8807 * x985 + x8835 + x8840 + x8849 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1472 + x985) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[27] =
    20000000.0 * sc[12] * x1097 + 30000000.0 * sc[12] * x1412 +
    20000000.0 * sc[17] * x1217 + sc[17] * x276 +
    500000.0 * sc[2] * x10 * x1212 + 18000.0 * sc[3] * x207 + sc[3] * x319 +
    50000000.0 * sc[4] * x1005 - 30110000.0 * sc[4] * x1069 -
    50000000.0 * sc[4] * x1074 - 30000000.0 * sc[4] * x1471 +
    30000000.0 * sc[4] * x1481 + 30110000.0 * sc[4] * x1526 -
    20000000.0 * sc[4] * x1650 - 30000000.0 * sc[4] * x1665 +
    30000000.0 * sc[4] * x1692 - 24000000.0 * sc[4] * x362 -
    5000000.0 * sc[4] * x609 - 20000000.0 * sc[4] * x926 +
    20000000.0 * sc[4] * x936 + sc[5] * x692 + 10000000.0 * sc[6] * x1069 -
    10000000.0 * sc[6] * x1526 + 24000000.0 * sc[6] * x1560 -
    24000000.0 * sc[6] * x423 +
    141600000.0 * sc[6] * exp(-150.96499974141599 * invT) + sc[7] * x2170 -
    x1005 * x2084 + x1005 * x2177 + x1005 * x2317 + x1069 * x1129 -
    x1069 * x2258 + x1074 * x2084 - x1074 * x2177 - x1074 * x2317 -
    x1129 * x1526 + x1526 * x2258 - x1560 * x2278 + x1560 * x2314 -
    x1575 * x926 + x1575 * x936 + x1584 * x926 - x1584 * x936 + x1665 * x8807 -
    x1692 * x8807 - x207 * x2350 - x207 * x2352 + x207 * x801 + x2278 * x423 -
    x2314 * x423 - x2315 * x609 + 30000000.0 * x530 * x578 + x5480 + x5489 +
    x8912 + x8916 + x8918 + x8923 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1665 - x1692) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[50] =
    sc[0] * x743 + sc[12] * x7471 + sc[14] * x7459 + sc[15] * x7441 +
    10000000.0 * sc[17] * x1013 + 500000.0 * sc[1] * x10 * x1212 +
    20000000.0 * sc[2] * x2044 * x220 + 28000000.0 * sc[3] * x1482 +
    18000.0 * sc[3] * x220 - 28000000.0 * sc[3] * x961 -
    20000000.0 * sc[4] * x1 - 24000000.0 * sc[4] * x1063 -
    30110000.0 * sc[4] * x115 - 30000000.0 * sc[4] * x1482 -
    50000000.0 * sc[4] * x1633 + 30110000.0 * sc[4] * x1653 -
    30000000.0 * sc[4] * x1753 + 30000000.0 * sc[4] * x1773 - sc[4] * x5582 -
    5000000.0 * sc[4] * x624 + 50000000.0 * sc[4] * x824 +
    30000000.0 * sc[4] * x961 - 20000000.0 * sc[4] * x968 +
    20000000.0 * sc[4] * x995 + 0.0714 * sc[5] * x7452 +
    24000000.0 * sc[6] * x1081 + 10000000.0 * sc[6] * x115 -
    10000000.0 * sc[6] * x1653 - 24000000.0 * sc[6] * x1718 +
    20000000.0 * sc[6] + sc[7] * x7388 + x1030 - x1081 * x2278 + x1081 * x2314 +
    x1129 * x115 - x1129 * x1653 - x115 * x2258 - x1575 * x968 + x1575 * x995 +
    x1584 * x968 - x1584 * x995 + x1633 * x2084 - x1633 * x2177 -
    x1633 * x2317 + x1653 * x2258 + x1718 * x2278 - x1718 * x2314 +
    x1753 * x8807 - x1773 * x8807 - x2084 * x824 + x2177 * x824 - x220 * x2350 -
    x220 * x2352 - x2315 * x624 + x2317 * x824 + x5 + x5489 + x5661 + x8916 +
    x8959 + x8964 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1753 - x1773) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[73] =
    1600000.0 * sc[16] * x8239 + sc[1] * x319 + 28000000.0 * sc[3] * x1535 -
    28000000.0 * sc[3] * x1537 + 18000.0 * sc[3] * x1639 +
    20000000.0 * sc[4] * x1000 - 30000000.0 * sc[4] * x1535 +
    30000000.0 * sc[4] * x1537 - 30110000.0 * sc[4] * x1654 +
    50000000.0 * sc[4] * x1656 - 50000000.0 * sc[4] * x1672 +
    30110000.0 * sc[4] * x1685 - 30000000.0 * sc[4] * x1822 +
    30000000.0 * sc[4] * x1838 - 24000000.0 * sc[4] * x185 -
    20000000.0 * sc[4] * x659 - 5000000.0 * sc[4] * x998 -
    20000000.0 * sc[4] * x999 + sc[5] * x1367 + 10000000.0 * sc[6] * x1654 -
    10000000.0 * sc[6] * x1685 - 24000000.0 * sc[6] * x1739 +
    24000000.0 * sc[6] * x250 + x1000 * x1575 - x1000 * x1584 -
    18000.0 * x1025 + x1129 * x1654 - x1129 * x1685 - 18000.0 * x1266 -
    x1575 * x999 + x1584 * x999 - x1639 * x2350 - x1639 * x2352 + x1639 * x801 -
    x1654 * x2258 - x1656 * x2084 + x1656 * x2177 + x1656 * x2317 +
    x1672 * x2084 - x1672 * x2177 - x1672 * x2317 + x1685 * x2258 +
    x1739 * x2278 - x1739 * x2314 + x1822 * x8807 - x1838 * x8807 -
    x2278 * x250 + x2314 * x250 - x2315 * x998 + x5489 + x5741 +
    28000000.0 * x595 + 10560000.0 * x675 * exp(-754.82499870708 * invT) -
    x7478 + x8916 + x9001 + x9006 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1822 - x1838) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[96] =
    -sc[11] * x9062 - 24000000.0 * sc[12] * x1238 * x1343 -
    18000.0 * sc[12] * x1248 * x1251 - sc[13] * x5811 - sc[13] * x9074 -
    sc[14] * x9080 - sc[15] * x9067 - sc[16] * x167 -
    7500000.0 * sc[17] * x2351 - 20000000.0 * sc[17] * x7548 - sc[18] * x9007 -
    sc[19] * x7528 - sc[20] * x9017 - 30000000.0 * sc[2] * x1686 +
    30000000.0 * sc[2] * x548 - sc[2] * x5582 + 18000.0 * sc[3] * x1743 -
    9200000.0 * sc[4] * x10 * x8855 *
      exp(855.46833186802303 * invT - 0.9 * tc[0]) -
    20000000.0 * sc[4] * x1006 + 20000000.0 * sc[4] * x1008 -
    30000000.0 * sc[4] * x1385 + 30000000.0 * sc[4] * x1563 -
    5000000.0 * sc[4] * x1678 + 50000000.0 * sc[4] * x1686 -
    20000000.0 * sc[4] * x1701 - 30110000.0 * sc[4] * x1708 +
    30110000.0 * sc[4] * x1745 - 30000000.0 * sc[4] * x1824 +
    30000000.0 * sc[4] * x1887 - 24000000.0 * sc[4] * x1981 -
    50000000.0 * sc[4] * x548 - sc[5] * x5747 + 10000000.0 * sc[6] * x1708 -
    10000000.0 * sc[6] * x1745 - 24000000.0 * sc[6] * x1759 +
    24000000.0 * sc[6] * x1780 - sc[6] * x7522 - sc[6] * x8330 - sc[7] * x9055 -
    sc[7] * x9058 - 500000.0 * x10 * x1967 - x1006 * x1575 + x1006 * x1584 +
    x1008 * x1575 - x1008 * x1584 + x1129 * x1708 - x1129 * x1745 +
    20000000.0 * x1230 + 24000000.0 * x1340 + 5000000.0 * x1411 -
    x1678 * x2315 - x1686 * x2084 + x1686 * x2177 + x1686 * x2317 -
    x170 * x2257 - 30110000.0 * x170 - x1708 * x2258 - x172 - x1743 * x2350 -
    x1743 * x2352 + x1743 * x801 + x1745 * x2258 + x1759 * x2278 -
    x1759 * x2314 - x1780 * x2278 + x1780 * x2314 + x1824 * x8807 -
    x1887 * x8807 - 10000000.0 * x198 * x267 + x2084 * x548 - x2177 * x548 -
    x2316 * x578 - x2317 * x548 - 10000000.0 * x2351 * x267 - x325 * x767 -
    13400000.0 * x433 * x630 + x5489 - 283200000.0 * x5753 - x578 * x885 -
    50000000.0 * x578 + x5837 - 30000000.0 * x595 - 1600000.0 * x607 * x8309 +
    20000000.0 * x643 - 30000000.0 * x674 -
    11.3 * x675 * exp(-1509.64999741416 * invT + 2.0 * tc[0]) -
    20000000.0 * x675 - x7530 - 0.1428 * x7531 + 24000000.0 * x766 + x8916 -
    x9014 + x9103 + x9104 + x9112 + 5000000.0 * x930 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1824 - x1887) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[119] =
    50000000.0 * sc[10] * x1272 + 5000000.0 * sc[12] * x1398 +
    30110000.0 * sc[13] * x1200 + sc[16] * x154 + 10000000.0 * sc[17] * x9144 +
    sc[19] * x9115 + sc[1] * x692 + 24000000.0 * sc[20] * x1323 -
    30000000.0 * sc[2] * x1750 + 30000000.0 * sc[2] * x1751 +
    0.0714 * sc[2] * x7452 + sc[3] * x1367 + 18000.0 * sc[3] * x1763 -
    20000000.0 * sc[4] * x1039 + 20000000.0 * sc[4] * x1042 +
    30000000.0 * sc[4] * x1320 - 30000000.0 * sc[4] * x1564 -
    20000000.0 * sc[4] * x1682 - 30110000.0 * sc[4] * x1747 +
    30110000.0 * sc[4] * x1748 + 50000000.0 * sc[4] * x1750 -
    50000000.0 * sc[4] * x1751 - 5000000.0 * sc[4] * x1871 -
    24000000.0 * sc[4] * x1880 - 30000000.0 * sc[4] * x1956 +
    30000000.0 * sc[4] * x1973 - sc[4] * x5747 + 10000000.0 * sc[6] * x1747 -
    10000000.0 * sc[6] * x1748 + 24000000.0 * sc[6] * x1760 -
    24000000.0 * sc[6] * x1844 + sc[6] * x9147 + sc[6] * x9149 + sc[8] * x9113 -
    x1039 * x1575 + x1039 * x1584 + x1042 * x1575 - x1042 * x1584 +
    x1129 * x1747 - x1129 * x1748 + x1525 * x170 - x1747 * x2258 +
    x1748 * x2258 - x1750 * x2084 + x1750 * x2177 + x1750 * x2317 +
    x1751 * x2084 - x1751 * x2177 - x1751 * x2317 - x1760 * x2278 +
    x1760 * x2314 - x1763 * x2350 - x1763 * x2352 + x1763 * x801 +
    x1844 * x2278 - x1844 * x2314 - x1871 * x2315 + x1956 * x8807 -
    3000000.0 * x1972 - x1973 * x8807 + 3000000.0 * x2006 + x2268 * x325 +
    x5979 + x674 * x8806 - 857837.83783783799 * x8845 * x8848 +
    857837.83783783799 * x8847 -
    4600000.0 * x8857 * x8863 * (1.68 * x693 * x8859 + 12.0 * x693 * x8860) +
    27600000.0 * x8857 +
    4600000.0 * x8863 * x8867 * (1.68 * x693 * x8859 + 12.0 * x693 * x8860) -
    27600000.0 * x8867 + x9173 + x9180 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1956 - x1973) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[142] =
    sc[10] * x9203 + sc[14] * x9181 +
    141600000.0 * sc[1] * exp(-150.96499974141599 * invT) -
    30000000.0 * sc[2] * x1756 + 30000000.0 * sc[2] * x1768 +
    20000000.0 * sc[2] - 28000000.0 * sc[3] * x1440 + 18000.0 * sc[3] * x1826 +
    28000000.0 * sc[3] * x921 - 20000000.0 * sc[4] * x1043 +
    20000000.0 * sc[4] * x1045 - 5000000.0 * sc[4] * x1408 +
    30000000.0 * sc[4] * x1440 - 30110000.0 * sc[4] * x1755 +
    50000000.0 * sc[4] * x1756 - 50000000.0 * sc[4] * x1768 -
    24000000.0 * sc[4] * x1977 - 30000000.0 * sc[4] * x2014 +
    30000000.0 * sc[4] * x2032 + 30110000.0 * sc[4] * x227 - sc[4] * x7522 -
    sc[4] * x8330 - 30000000.0 * sc[4] * x921 + sc[5] * x9147 + sc[5] * x9149 +
    10000000.0 * sc[6] * x1755 + 24000000.0 * sc[6] * x1865 -
    24000000.0 * sc[6] * x1867 - 10000000.0 * sc[6] * x227 +
    13400000.0 * sc[8] - x1043 * x1575 + x1043 * x1584 + x1045 * x1575 -
    x1045 * x1584 + x1129 * x1755 - x1129 * x227 - x1408 * x2315 +
    10000000.0 * x170 - x1755 * x2258 - x1756 * x2084 + x1756 * x2177 +
    x1756 * x2317 + x1768 * x2084 - x1768 * x2177 - x1768 * x2317 -
    x1826 * x2350 - x1826 * x2352 + x1826 * x801 - x1865 * x2278 +
    x1865 * x2314 + x1867 * x2278 - x1867 * x2314 + x2014 * x8807 -
    x2032 * x8807 + x2258 * x227 + 24000000.0 * x325 + x5489 +
    20000000.0 * x675 + x9226 + x9227 + x9233 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x2014 - x2032) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[165] =
    sc[1] * x2170 + sc[2] * x7388 + 28000000.0 * sc[3] * x1580 -
    28000000.0 * sc[3] * x476 - 20000000.0 * sc[4] * x1051 +
    20000000.0 * sc[4] * x1052 - 30000000.0 * sc[4] * x1580 -
    30110000.0 * sc[4] * x1767 + 50000000.0 * sc[4] * x1770 -
    50000000.0 * sc[4] * x1772 + 30110000.0 * sc[4] * x1812 -
    30000000.0 * sc[4] * x2070 + 30000000.0 * sc[4] * x2087 +
    30000000.0 * sc[4] * x476 - sc[4] * x9055 - sc[4] * x9058 +
    10000000.0 * sc[6] * x1767 - 10000000.0 * sc[6] * x1812 -
    24000000.0 * sc[6] * x1875 + 24000000.0 * sc[6] * x1891 - x1051 * x1575 +
    x1051 * x1584 + x1051 * x2253 + x1052 * x1575 - x1052 * x1584 -
    x1052 * x2253 + x1129 * x1767 - x1129 * x1812 + x1580 * x2259 -
    x1767 * x2258 - x1770 * x2084 + x1770 * x2177 + x1770 * x2317 +
    x1772 * x2084 - x1772 * x2177 - x1772 * x2317 + x1812 * x2258 +
    x1875 * x2278 - x1875 * x2314 - x1891 * x2278 + x1891 * x2314 +
    x2070 * x8807 - x2087 * x8807 - x2259 * x476 + x6137 +
    4600000.0 * x843 * x8856 + x9264 + x9277 + x9278 + x9280 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x2070 - x2087) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[188] =
    sc[10] * x9287 + 18000.0 * sc[3] * x1240 - 28000000.0 * sc[3] * x315 +
    28000000.0 * sc[3] * x789 - 24000000.0 * sc[4] * x105 * x1343 -
    20000000.0 * sc[4] * x1056 + 20000000.0 * sc[4] * x1059 -
    5000000.0 * sc[4] * x1641 + 50000000.0 * sc[4] * x1779 -
    50000000.0 * sc[4] * x1782 - 30110000.0 * sc[4] * x1813 +
    30110000.0 * sc[4] * x1833 - 30000000.0 * sc[4] * x2080 +
    30000000.0 * sc[4] * x2141 + 30000000.0 * sc[4] * x315 -
    24000000.0 * sc[4] * x339 - 30000000.0 * sc[4] * x789 + sc[5] * x9113 +
    10000000.0 * sc[6] * x1813 - 10000000.0 * sc[6] * x1833 +
    24000000.0 * sc[6] * x1881 - 24000000.0 * sc[6] * x1960 +
    13400000.0 * sc[6] - x1056 * x1575 + x1056 * x1584 + x1059 * x1575 -
    x1059 * x1584 + x1129 * x1813 - x1129 * x1833 - x1240 * x2350 -
    x1240 * x2352 + x1240 * x801 - x1641 * x2315 - x1779 * x2084 +
    x1779 * x2177 + x1779 * x2317 + x1782 * x2084 - x1782 * x2177 -
    x1782 * x2317 - x1813 * x2258 + x1833 * x2258 - x1881 * x2278 +
    x1881 * x2314 + x1960 * x2278 - x1960 * x2314 + x2080 * x8807 -
    x2141 * x8807 + x5489 + x6235 + x9227 + x9327 + x9334 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x2080 - x2141) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[211] =
    -20000000.0 * sc[4] * x1060 + 20000000.0 * sc[4] * x1062 +
    30000000.0 * sc[4] * x1149 - 50000000.0 * sc[4] * x1742 -
    20000000.0 * sc[4] * x1758 + 50000000.0 * sc[4] * x1787 +
    30110000.0 * sc[4] * x1825 - 30110000.0 * sc[4] * x1841 -
    24000000.0 * sc[4] * x2010 + 30000000.0 * sc[4] * x2186 -
    30000000.0 * sc[4] * x646 - 30000000.0 * sc[4] * x649 -
    10000000.0 * sc[6] * x1825 + 10000000.0 * sc[6] * x1841 +
    24000000.0 * sc[6] * x1961 - 24000000.0 * sc[6] * x1962 - x1060 * x1575 +
    x1060 * x1584 + x1062 * x1575 - x1062 * x1584 - x1129 * x1825 +
    x1129 * x1841 + x1742 * x2084 - x1742 * x2177 - x1742 * x2317 -
    x1787 * x2084 + x1787 * x2177 + x1787 * x2317 + x1825 * x2258 -
    x1841 * x2258 - x1961 * x2278 + x1961 * x2314 + x1962 * x2278 -
    x1962 * x2314 - x2186 * x8807 + x6315 + x649 * x8807 - x9335 + x9368 +
    x9373 + x9379 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x2186 + x649) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[234] =
    -30000000.0 * sc[2] * x1676 + 30000000.0 * sc[2] * x1741 -
    28000000.0 * sc[3] * x1037 + 28000000.0 * sc[3] * x1590 +
    18000.0 * sc[3] * x174 + 30000000.0 * sc[4] * x1037 -
    18000.0 * sc[4] * x105 * x1251 - 20000000.0 * sc[4] * x1064 +
    20000000.0 * sc[4] * x1071 - 30000000.0 * sc[4] * x1590 +
    50000000.0 * sc[4] * x1676 - 50000000.0 * sc[4] * x1741 -
    30110000.0 * sc[4] * x1830 + 30110000.0 * sc[4] * x1831 -
    24000000.0 * sc[4] * x2011 + 30000000.0 * sc[4] * x2271 -
    20000000.0 * sc[4] * x311 - 5000000.0 * sc[4] * x722 -
    30000000.0 * sc[4] * x946 + 50000000.0 * sc[5] * x1272 +
    10000000.0 * sc[6] * x1830 - 10000000.0 * sc[6] * x1831 +
    24000000.0 * sc[6] * x1968 - 24000000.0 * sc[6] * x1969 + sc[6] * x9203 +
    sc[8] * x9287 - x1064 * x1575 + x1064 * x1584 + x1071 * x1575 -
    x1071 * x1584 + x1129 * x1830 - x1129 * x1831 - 3200000.0 * x1249 * x8309 -
    x1676 * x2084 + x1676 * x2177 + x1676 * x2317 - x174 * x2350 -
    x174 * x2352 + x174 * x801 + x1741 * x2084 - x1741 * x2177 - x1741 * x2317 -
    x1830 * x2258 + x1831 * x2258 - x1968 * x2278 + x1968 * x2314 +
    x1969 * x2278 - x1969 * x2314 - 750000.0 * x1972 + 750000.0 * x2006 -
    x2271 * x8807 - x2315 * x722 + x5489 + x8807 * x946 -
    214459.459459459 * x8845 * x8848 + 214459.459459459 * x8847 -
    4600000.0 * x8857 * x8863 * (0.42 * x693 * x8859 + 3.0 * x693 * x8860) +
    6900000.0 * x8857 +
    4600000.0 * x8863 * x8867 * (0.42 * x693 * x8859 + 3.0 * x693 * x8860) -
    6900000.0 * x8867 + x9425 + x9426 + x9431 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x2271 + x946) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[257] =
    sc[1] * x2181 - 30000000.0 * sc[2] * x1749 + 30000000.0 * sc[2] * x1814 -
    28000000.0 * sc[3] * x1047 + 28000000.0 * sc[3] * x963 +
    30000000.0 * sc[4] * x1047 - 20000000.0 * sc[4] * x1072 +
    20000000.0 * sc[4] * x1073 - 30000000.0 * sc[4] * x1480 +
    50000000.0 * sc[4] * x1749 - 50000000.0 * sc[4] * x1814 +
    30110000.0 * sc[4] * x1877 + 30000000.0 * sc[4] * x2323 -
    20000000.0 * sc[4] * x707 - 24000000.0 * sc[4] * x774 -
    30110000.0 * sc[4] * x896 - sc[4] * x9062 - 30000000.0 * sc[4] * x963 -
    10000000.0 * sc[6] * x1877 - 24000000.0 * sc[6] * x1970 +
    24000000.0 * sc[6] * x755 + 10000000.0 * sc[6] * x896 - x1072 * x1575 +
    x1072 * x1584 + x1073 * x1575 - x1073 * x1584 - x1129 * x1877 +
    x1129 * x896 + x1480 * x8807 - x1749 * x2084 + x1749 * x2177 +
    x1749 * x2317 + x1814 * x2084 - x1814 * x2177 - x1814 * x2317 +
    x1877 * x2258 + x1970 * x2278 - x1970 * x2314 - x2258 * x896 -
    x2278 * x755 + x2314 * x755 - x2323 * x8807 + x5489 + x9373 + x9463 +
    x9468 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1480 - x2323) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[280] =
    20000000.0 * sc[1] * x1097 + 30000000.0 * sc[1] * x1412 + sc[2] * x7471 +
    28000000.0 * sc[3] * x1640 - 28000000.0 * sc[3] * x1659 +
    18000.0 * sc[3] * x229 - 20000000.0 * sc[4] * x1075 -
    30000000.0 * sc[4] * x1453 - 5000000.0 * sc[4] * x1533 -
    24000000.0 * sc[4] * x1554 - 30000000.0 * sc[4] * x1640 +
    30000000.0 * sc[4] * x1659 + 50000000.0 * sc[4] * x1818 -
    50000000.0 * sc[4] * x1819 - 30110000.0 * sc[4] * x1886 +
    30110000.0 * sc[4] * x1897 + 30000000.0 * sc[4] * x2360 +
    20000000.0 * sc[4] * x671 + 5000000.0 * sc[5] * x1398 +
    10000000.0 * sc[6] * x1886 - 10000000.0 * sc[6] * x1897 - x1075 * x1575 +
    x1075 * x1584 + x1129 * x1886 - x1129 * x1897 - 18000.0 * x1249 * x1251 +
    x1453 * x8807 - x1533 * x2315 + x1575 * x671 - x1584 * x671 -
    x1818 * x2084 + x1818 * x2177 + x1818 * x2317 + x1819 * x2084 -
    x1819 * x2177 - x1819 * x2317 - x1886 * x2258 + x1897 * x2258 -
    x1971 * x2278 + x1971 * x2314 + x1979 * x2278 - x1979 * x2314 -
    x229 * x2350 - x229 * x2352 + x229 * x801 - x2360 * x8807 + x5489 + x6587 +
    x9227 + x9503 + x9517 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x1453 - x2360) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[303] =
    30000000.0 * sc[4] * x1035 - 20000000.0 * sc[4] * x1078 +
    20000000.0 * sc[4] * x1080 - 20000000.0 * sc[4] * x1522 -
    30000000.0 * sc[4] * x1663 + 30000000.0 * sc[4] * x1664 +
    50000000.0 * sc[4] * x1821 - 50000000.0 * sc[4] * x1823 -
    30110000.0 * sc[4] * x1860 - sc[4] * x5811 - 30000000.0 * sc[4] * x809 -
    sc[4] * x9074 + 30110000.0 * sc[5] * x1200 + 10000000.0 * sc[6] * x1860 +
    24000000.0 * sc[6] * x1987 - x1035 * x8807 - x1078 * x1575 + x1078 * x1584 +
    x1080 * x1575 - x1080 * x1584 + x1129 * x1860 - x1129 * x1862 + x1530 -
    x1821 * x2084 + x1821 * x2177 + x1821 * x2317 + x1823 * x2084 -
    x1823 * x2177 - x1823 * x2317 - x1860 * x2258 - x1884 * x2314 -
    x1987 * x2278 + x1987 * x2314 + x809 * x8807 + x9276 + x9549 + x9563 +
    x9569 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1035 + x809) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[326] =
    sc[2] * x7459 - 20000000.0 * sc[4] * x1083 + 20000000.0 * sc[4] * x1084 +
    30000000.0 * sc[4] * x1118 - 30000000.0 * sc[4] * x1205 -
    30000000.0 * sc[4] * x1670 + 30000000.0 * sc[4] * x1679 +
    50000000.0 * sc[4] * x1828 - 20000000.0 * sc[4] * x1829 -
    50000000.0 * sc[4] * x1834 - 30110000.0 * sc[4] * x1872 -
    24000000.0 * sc[4] * x374 - sc[4] * x9080 + 10000000.0 * sc[6] * x1872 +
    24000000.0 * sc[6] * x1947 + sc[6] * x9181 - x1083 * x1575 + x1083 * x1584 +
    x1084 * x1575 - x1084 * x1584 - x1118 * x8807 - x1129 * x1862 +
    x1129 * x1872 + x1205 * x8807 + x1510 - x1828 * x2084 + x1828 * x2177 +
    x1828 * x2317 + x1834 * x2084 - x1834 * x2177 - x1834 * x2317 -
    x1872 * x2258 - x1884 * x2314 - x1947 * x2278 + x1947 * x2314 + x9563 +
    x9591 + x9599 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1118 + x1205) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[349] =
    sc[2] * x7441 - 20000000.0 * sc[4] * x1085 + 20000000.0 * sc[4] * x1086 -
    20000000.0 * sc[4] * x1229 - 30000000.0 * sc[4] * x1680 +
    30000000.0 * sc[4] * x1688 - 24000000.0 * sc[4] * x1716 +
    50000000.0 * sc[4] * x1835 - 50000000.0 * sc[4] * x1836 +
    30110000.0 * sc[4] * x1925 - 30000000.0 * sc[4] * x216 -
    30110000.0 * sc[4] * x502 + 30000000.0 * sc[4] * x894 - sc[4] * x9067 +
    24000000.0 * sc[6] * x1837 - 24000000.0 * sc[6] * x1882 -
    10000000.0 * sc[6] * x1925 + 10000000.0 * sc[6] * x502 - x1085 * x1575 +
    x1085 * x1584 + x1086 * x1575 - x1086 * x1584 - x1129 * x1925 +
    x1129 * x502 + x1658 - x1835 * x2084 + x1835 * x2177 + x1835 * x2317 +
    x1836 * x2084 - x1836 * x2177 - x1836 * x2317 - x1837 * x2278 +
    x1837 * x2314 + x1882 * x2278 - x1882 * x2314 + x1925 * x2258 +
    x216 * x8807 - x2258 * x502 - x8807 * x894 + x9562 + x9630 + x9635 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (x216 - x894) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[372] =
    30000000.0 * sc[2] * x1815 + 28000000.0 * sc[3] * x1689 +
    1600000.0 * sc[3] * x8239 + 30000000.0 * sc[4] * x1070 -
    20000000.0 * sc[4] * x1087 + 20000000.0 * sc[4] * x1088 - sc[4] * x167 -
    30000000.0 * sc[4] * x1689 + 30000000.0 * sc[4] * x1707 -
    50000000.0 * sc[4] * x1815 - 30110000.0 * sc[4] * x1932 -
    30000000.0 * sc[4] * x955 + sc[5] * x154 + 20000000.0 * sc[6] * x1087 -
    20000000.0 * sc[6] * x1088 + 10000000.0 * sc[6] * x1932 - x1070 * x8807 -
    x1087 * x1575 + x1087 * x1584 + x1087 * x2253 + x1088 * x1575 -
    x1088 * x1584 - x1088 * x2253 + x1129 * x1932 + x1689 * x2259 -
    x1707 * x2259 + x1815 * x2084 - x1815 * x2177 + x1815 * x2245 -
    x1815 * x2317 - x1932 * x2258 - x1932 * x948 + x2068 + x8807 * x955 + x919 +
    x9277 + x9278 + x9280 + x9639 + x9657 + x9660 + x9672 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1070 + x955) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[395] =
    20000000.0 * sc[1] * x1217 + sc[1] * x276 + 10000000.0 * sc[2] * x1013 +
    30000000.0 * sc[2] * x1817 + 28000000.0 * sc[3] * x1625 +
    18000.0 * sc[3] * x837 - 20000000.0 * sc[4] * x1089 -
    30000000.0 * sc[4] * x1625 - 50000000.0 * sc[4] * x1817 -
    30110000.0 * sc[4] * x183 - 20000000.0 * sc[4] * x1945 -
    7500000.0 * sc[4] * x2351 - 20000000.0 * sc[4] * x7548 -
    30000000.0 * sc[4] * x958 + 10000000.0 * sc[5] * x9144 +
    20000000.0 * sc[6] * x1089 + 10000000.0 * sc[6] * x183 - x1089 * x1575 +
    x1089 * x1584 + x1089 * x2253 + x1129 * x183 + x1625 * x2259 +
    x1817 * x2084 - x1817 * x2177 + x1817 * x2245 - x1817 * x2317 -
    x183 * x2258 - x183 * x948 + x2068 - x2350 * x837 - x2352 * x837 +
    x801 * x837 + x8807 * x958 + x8916 + x919 - x9265 - x9267 + x9276 + x9280 +
    x9639 + x9660 + x9672 + x9700 + x9702 + x9707 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1668 + x958) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[418] =
    20000000.0 * sc[2] * x1265 * x2044 + 30000000.0 * sc[2] * x1863 +
    28000000.0 * sc[3] * x1018 + 18000.0 * sc[3] * x1265 -
    30000000.0 * sc[4] * x1018 - 20000000.0 * sc[4] * x1141 -
    30000000.0 * sc[4] * x1694 - 50000000.0 * sc[4] * x1863 -
    30110000.0 * sc[4] * x233 - sc[4] * x9007 + 24000000.0 * sc[6] * x1958 +
    10000000.0 * sc[6] * x233 + x1018 * x2259 + x1129 * x233 - x1141 * x1575 +
    x1141 * x1584 + x1141 * x2253 - x1265 * x2350 - x1265 * x2352 +
    x1694 * x8807 + x1863 * x2084 - x1863 * x2177 - x1863 * x2317 -
    x1958 * x2278 + x1958 * x2314 + x2068 - x2258 * x233 + x919 + x9227 -
    x9265 - x9267 + x9276 + x9280 + x9639 + x9663 + x9671 + x9700 + x9707 +
    x9727 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1668 + x1694) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[441] =
    28000000.0 * sc[3] * x1729 - 28000000.0 * sc[3] * x262 +
    30000000.0 * sc[4] * x1009 - 30000000.0 * sc[4] * x1057 -
    20000000.0 * sc[4] * x1161 + 20000000.0 * sc[4] * x1167 -
    30000000.0 * sc[4] * x1729 + 50000000.0 * sc[4] * x1870 -
    50000000.0 * sc[4] * x1873 - 30110000.0 * sc[4] * x1946 +
    30000000.0 * sc[4] * x262 - 20000000.0 * sc[4] * x65 - sc[4] * x7528 +
    sc[5] * x9115 + 10000000.0 * sc[6] * x1946 + 24000000.0 * sc[6] * x655 -
    x1009 * x8807 + x1057 * x8807 + x1129 * x1946 - x1161 * x1575 +
    x1161 * x1584 + x1161 * x2253 + x1167 * x1575 - x1167 * x1584 -
    x1167 * x2253 + x1729 * x2259 - x1870 * x2084 + x1870 * x2177 +
    x1870 * x2317 + x1873 * x2084 - x1873 * x2177 - x1873 * x2317 -
    x1896 * x2350 - x1896 * x2352 + x1896 * x801 - x1946 * x2258 + x2118 -
    x2259 * x262 - x2278 * x655 + x2314 * x655 + x8916 - x9265 - x9267 + x9276 +
    x9278 + x9280 + x9639 + x9663 + x9670 + x9753 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1009 + x1057) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[464] =
    30000000.0 * sc[2] * x1874 + 28000000.0 * sc[3] * x1675 -
    24000000.0 * sc[4] * x1339 - 20000000.0 * sc[4] * x1443 -
    30000000.0 * sc[4] * x1675 - 50000000.0 * sc[4] * x1874 -
    30110000.0 * sc[4] * x1949 - 30000000.0 * sc[4] * x784 - sc[4] * x9017 +
    24000000.0 * sc[5] * x1323 + 10000000.0 * sc[6] * x1949 +
    24000000.0 * sc[6] * x1966 + x1129 * x1949 - x1443 * x1575 + x1443 * x1584 +
    x1443 * x2253 + x1675 * x2259 + x1874 * x2084 - x1874 * x2177 -
    x1874 * x2317 - x1896 * x2350 - x1896 * x2352 + x1896 * x801 -
    x1949 * x2258 - x1966 * x2278 + x1966 * x2314 + x2068 + x784 * x8807 +
    x8129 + x919 + x9227 - x9265 - x9267 + x9278 + x9280 + x9639 + x9663 +
    x9671 + x9700 + x9702 + x9707 + x9781 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x1668 + x784) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[487] =
    30000000.0 * sc[2] * x1876 + 28000000.0 * sc[3] * x1752 -
    28000000.0 * sc[3] * x1757 - 20000000.0 * sc[4] * x1444 +
    20000000.0 * sc[4] * x1445 - 30000000.0 * sc[4] * x1752 +
    30000000.0 * sc[4] * x1757 - 30110000.0 * sc[4] * x1788 -
    50000000.0 * sc[4] * x1876 + 30000000.0 * sc[4] * x647 -
    30000000.0 * sc[4] * x669 + 20000000.0 * sc[6] * x1444 -
    20000000.0 * sc[6] * x1445 + 10000000.0 * sc[6] * x1788 + x1129 * x1788 -
    x1444 * x1575 + x1444 * x1584 + x1445 * x1575 - x1445 * x1584 -
    x1788 * x2258 - x1788 * x948 + x1876 * x2084 - x1876 * x2177 +
    x1876 * x2245 - x1876 * x2317 + x5489 - x647 * x8807 + x669 * x8807 + x919 +
    x9277 + x9278 + x9639 + x9657 + x9660 + x9672 + x9804 +
    (30000000.0 * sc[2] * x680 + 28000000.0 * sc[3] * x678 -
     20000000.0 * sc[4] * x677 - 30000000.0 * sc[4] * x678 -
     50000000.0 * sc[4] * x680 + 30110000.0 * sc[4] * x683 +
     20000000.0 * sc[6] * x677 - 10000000.0 * sc[6] * x683 - x1129 * x683 -
     x1575 * x677 + x1584 * x677 + x2084 * x680 - x2177 * x680 + x2245 * x680 +
     x2253 * x677 + x2258 * x683 + x2259 * x678 - x2317 * x680 + x683 * x948) *
      (-x647 + x669) +
    (30000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x679 +
     20000000.0 * sc[4] * x660 - 30000000.0 * sc[4] * x679 -
     50000000.0 * sc[4] * x681 - 30110000.0 * sc[4] * x684 +
     10000000.0 * sc[6] * x684 + x1129 * x684 + x2084 * x681 - x2177 * x681 +
     x2245 * x681 - x2258 * x684 + x2259 * x679 - x2317 * x681 - x684 * x948) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-18000.0 * sc[3] * x231 + 20000000.0 * sc[4] * x67 + x231 * x2350 +
     x231 * x2352 - x231 * x801) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (24000000.0 * sc[4] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-32000000.0 * sc[1] * x637 - 10000000.0 * sc[2] * x637 +
     30000000.0 * sc[2] * x682 + 5000000.0 * sc[4] * x637 +
     20000000.0 * sc[4] * x640 - 50000000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x597 + x2084 * x682 - x2177 * x682 + x2245 * x682 +
     x2278 * x597 - x2314 * x597 + x2315 * x637 - x2317 * x682 + x2322 * x597) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-18000.0 * sc[3] * x483 - 30110000.0 * sc[4] * x685 -
     24000000.0 * sc[6] * x448 + 10000000.0 * sc[6] * x685 + x1129 * x685 -
     x2258 * x685 + x2278 * x448 - x2314 * x448 + x2322 * x448 + x2350 * x483 +
     x2352 * x483 - x483 * x801 - x685 * x948) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[5] =
    16000000.0 * sc[1] * x1879 + 12000000.0 * sc[3] * x1007 -
    12000000.0 * sc[3] * x937 + 24000000.0 * sc[4] * x1636 +
    5000000.0 * sc[4] * x1879 + 30110000.0 * sc[4] * x897 -
    30110000.0 * sc[4] * x908 - 50000000.0 * sc[4] * x923 +
    50000000.0 * sc[4] * x932 - x1007 * x2085 - x1007 * x2259 - x1129 * x897 +
    x1129 * x908 + x1243 * x2352 + x1472 * x783 + x1472 * x8807 -
    16060000000.0 * x1485 + 16060000000.0 * x1515 + x1575 * x725 -
    x1575 * x790 + x2085 * x937 + x2245 * x923 - x2245 * x932 - x2253 * x725 +
    x2253 * x790 + x2259 * x937 - x2314 * x756 + x2314 * x779 + x748 -
    x783 * x985 - x8807 * x985 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1472 + x985) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-x231 * x2352) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-24000000.0 * sc[4] * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[28] =
    sc[12] * x5464 + 16000000.0 * sc[1] * x609 + 12000000.0 * sc[3] * x1471 -
    12000000.0 * sc[3] * x1481 - 50000000.0 * sc[4] * x1005 +
    30110000.0 * sc[4] * x1069 + 50000000.0 * sc[4] * x1074 -
    30110000.0 * sc[4] * x1526 + 24000000.0 * sc[4] * x362 +
    sc[4] * x5478 * x63 + 5000000.0 * sc[4] * x609 - sc[5] * x692 +
    sc[6] * x146 + sc[7] * x2170 + x1005 * x2245 - x1069 * x1129 -
    x1074 * x2245 + x1129 * x1526 - 16000000.0 * x1411 - x1471 * x2085 -
    x1471 * x2259 + x1481 * x2085 + x1481 * x2259 - x1560 * x2314 +
    x1575 * x926 - x1575 * x936 - x1665 * x783 - x1665 * x8807 + x1692 * x783 +
    x1692 * x8807 + x207 * x2352 - x2253 * x926 + x2253 * x936 + x2314 * x423 -
    16000000.0 * x930 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1665 - x1692) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-x231 * x2352) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[51] =
    16000000.0 * sc[1] * x624 + 12000000.0 * sc[3] * x1482 -
    12000000.0 * sc[3] * x961 + 24000000.0 * sc[4] * x1063 +
    30110000.0 * sc[4] * x115 + 50000000.0 * sc[4] * x1633 -
    30110000.0 * sc[4] * x1653 + 5000000.0 * sc[4] * x624 -
    50000000.0 * sc[4] * x824 - sc[5] * x5579 - 0.0357 * sc[5] * x7452 -
    x1081 * x2314 - x1129 * x115 + x1129 * x1653 - x1482 * x2085 -
    x1482 * x2259 + x1575 * x968 - x1575 * x995 - x1633 * x2245 +
    x1718 * x2314 - x1753 * x783 - x1753 * x8807 + x1773 * x783 +
    x1773 * x8807 + x2085 * x961 + x220 * x2352 + x2245 * x824 - x2253 * x968 +
    x2253 * x995 + x2259 * x961 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1753 - x1773) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-x231 * x2352) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[74] =
    16000000.0 * sc[1] * x998 + 12000000.0 * sc[3] * x1535 -
    12000000.0 * sc[3] * x1537 + 30110000.0 * sc[4] * x1654 -
    50000000.0 * sc[4] * x1656 + 50000000.0 * sc[4] * x1672 -
    30110000.0 * sc[4] * x1685 + 24000000.0 * sc[4] * x185 +
    5000000.0 * sc[4] * x998 - sc[5] * x1367 - x1000 * x1575 + x1000 * x2253 -
    x1129 * x1654 + x1129 * x1685 - x1535 * x2085 - x1535 * x2259 +
    x1537 * x2085 + x1537 * x2259 + x1575 * x999 + x1639 * x2352 +
    x1656 * x2245 - x1672 * x2245 + x1739 * x2314 - x1822 * x783 -
    x1822 * x8807 + x1838 * x783 + x1838 * x8807 - x2253 * x999 - x2314 * x250 +
    12000000.0 * x595 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1822 - x1838) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-x231 * x2352) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[97] =
    sc[12] * x9093 + sc[14] * x9080 + sc[15] * x9067 +
    7500000.0 * sc[17] * x2351 + 16000000.0 * sc[1] * x1678 +
    sc[1] * x5478 * x63 + sc[20] * x9017 + 12000000.0 * sc[3] * x1385 -
    12000000.0 * sc[3] * x1563 + 5000000.0 * sc[4] * x1678 -
    50000000.0 * sc[4] * x1686 + 30110000.0 * sc[4] * x1708 -
    30110000.0 * sc[4] * x1745 + 24000000.0 * sc[4] * x1981 +
    50000000.0 * sc[4] * x548 - sc[5] * x5747 + sc[6] * x8330 + sc[7] * x9055 +
    sc[7] * x9058 + sc[8] * x9108 + 25010000.0 * sc[8] + x1006 * x1575 -
    x1006 * x2253 - x1008 * x1575 + x1008 * x2253 - x1129 * x1708 +
    x1129 * x1745 - 24000000.0 * x1340 - x1385 * x2085 - x1385 * x2259 -
    5000000.0 * x1411 + x1563 * x2085 + x1563 * x2259 + x1686 * x2245 +
    30110000.0 * x170 + x172 + x1743 * x2352 + x1759 * x2314 - x1780 * x2314 -
    x1824 * x783 - x1824 * x8807 + x1887 * x783 + x1887 * x8807 - x2245 * x548 +
    10000000.0 * x2351 * x267 + 50000000.0 * x578 +
    11.3 * x675 * exp(-1509.64999741416 * invT + 2.0 * tc[0]) + 0.0714 * x7531 -
    24000000.0 * x766 + x9014 - 5000000.0 * x930 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1824 - x1887) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-x231 * x2352) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[120] =
    -5000000.0 * sc[12] * x1398 - 30110000.0 * sc[13] * x1200 - sc[16] * x154 -
    10000000.0 * sc[17] * x9144 - sc[19] * x9115 + 16000000.0 * sc[1] * x1871 -
    sc[1] * x692 - 24000000.0 * sc[20] * x1323 - sc[2] * x5579 -
    0.0357 * sc[2] * x7452 - 12000000.0 * sc[3] * x1320 - sc[3] * x1367 +
    12000000.0 * sc[3] * x1564 + 30110000.0 * sc[4] * x1747 -
    30110000.0 * sc[4] * x1748 + 5000000.0 * sc[4] * x1871 +
    24000000.0 * sc[4] * x1880 - sc[4] * x5747 - sc[6] * x9147 - sc[6] * x9149 -
    sc[8] * x9113 + x1039 * x1575 - x1039 * x2253 - x1042 * x1575 +
    x1042 * x2253 - x1129 * x1747 + x1129 * x1748 + x1320 * x2085 +
    x1320 * x2259 - x1484 * x5478 - 80300000000.0 * x1485 +
    80300000000.0 * x1515 - x1525 * x170 - x1564 * x2085 - x1564 * x2259 +
    x1750 * x2245 - x1751 * x2245 - x1760 * x2314 + x1763 * x2352 +
    x1844 * x2314 - x1956 * x783 - x1956 * x8807 + x1973 * x783 +
    x1973 * x8807 - x2268 * x325 - 25010000.0 * x450 * x595 -
    16000000.0 * x457 * x595 - x486 * x675 - x578 * x965 - x674 * x8806 -
    5710000.0 * x674 * exp(379.92858268256299 * invT) + x9828 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1956 - x1973) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-x231 * x2352) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[143] =
    16000000.0 * sc[1] * x1408 + sc[1] * x146 - 12000000.0 * sc[3] * x1440 +
    12000000.0 * sc[3] * x921 + 5000000.0 * sc[4] * x1408 +
    30110000.0 * sc[4] * x1755 - 50000000.0 * sc[4] * x1756 +
    50000000.0 * sc[4] * x1768 + 24000000.0 * sc[4] * x1977 -
    30110000.0 * sc[4] * x227 + sc[4] * x8330 - sc[5] * x9147 - sc[5] * x9149 +
    x1043 * x1575 - x1043 * x2253 - x1045 * x1575 + x1045 * x2253 -
    x1129 * x1755 + x1129 * x227 + x1440 * x2085 + x1440 * x2259 +
    x1756 * x2245 - x1768 * x2245 + x1826 * x2352 - x1865 * x2314 +
    x1867 * x2314 - x2014 * x783 - x2014 * x8807 + x2032 * x783 +
    x2032 * x8807 - x2085 * x921 - x2259 * x921 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x2014 - x2032) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-x231 * x2352) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[166] =
    16000000.0 * sc[1] * x1885 + sc[1] * x2170 + 12000000.0 * sc[3] * x1580 -
    12000000.0 * sc[3] * x476 + 30110000.0 * sc[4] * x1767 -
    50000000.0 * sc[4] * x1770 + 50000000.0 * sc[4] * x1772 -
    30110000.0 * sc[4] * x1812 + sc[4] * x9055 + sc[4] * x9058 + x1051 * x1575 -
    x1051 * x2253 - x1052 * x1575 + x1052 * x2253 - x1129 * x1767 +
    x1129 * x1812 - x1580 * x2085 - x1580 * x2259 + x1770 * x2245 -
    x1772 * x2245 + x1875 * x2314 - x1891 * x2314 + x1896 * x2352 -
    x2070 * x783 - x2070 * x8807 + x2085 * x476 + x2087 * x783 + x2087 * x8807 +
    x2259 * x476 + x9267 + x9275 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x2070 - x2087) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-x231 * x2352) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[189] =
    16000000.0 * sc[1] * x1641 - 12000000.0 * sc[3] * x315 +
    12000000.0 * sc[3] * x789 + 5000000.0 * sc[4] * x1641 -
    50000000.0 * sc[4] * x1779 + 50000000.0 * sc[4] * x1782 +
    30110000.0 * sc[4] * x1813 - 30110000.0 * sc[4] * x1833 +
    24000000.0 * sc[4] * x339 + sc[4] * x9108 + 25010000.0 * sc[4] -
    sc[5] * x9113 + x1056 * x1575 - x1056 * x2253 - x1059 * x1575 +
    x1059 * x2253 - x1129 * x1813 + x1129 * x1833 + x1240 * x2352 +
    x1779 * x2245 - x1782 * x2245 - x1881 * x2314 + x1960 * x2314 -
    x2080 * x783 - x2080 * x8807 + x2085 * x315 - x2085 * x789 + x2141 * x783 +
    x2141 * x8807 + x2259 * x315 - x2259 * x789 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x2080 - x2141) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-x231 * x2352) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[212] =
    16000000.0 * sc[1] * x634 - 12000000.0 * sc[3] * x1149 +
    12000000.0 * sc[3] * x646 + 50000000.0 * sc[4] * x1742 -
    50000000.0 * sc[4] * x1787 - 30110000.0 * sc[4] * x1825 +
    30110000.0 * sc[4] * x1841 + 24000000.0 * sc[4] * x2010 +
    5000000.0 * sc[4] * x634 + x1060 * x1575 - x1060 * x2253 - x1062 * x1575 +
    x1062 * x2253 + x1129 * x1825 - x1129 * x1841 + x1149 * x2085 +
    x1149 * x2259 - 44000000000.0 * x1485 + 44000000000.0 * x1515 -
    x1742 * x2245 + x1787 * x2245 - x1961 * x2314 + x1962 * x2314 -
    x2085 * x646 + x2186 * x783 + x2186 * x8807 - x2259 * x646 + x2352 * x858 -
    x649 * x783 - x649 * x8807 + x9335 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x2186 + x649) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-x231 * x2352) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[235] =
    16000000.0 * sc[1] * x722 - 12000000.0 * sc[3] * x1037 +
    12000000.0 * sc[3] * x1590 + 30110000.0 * sc[4] * x1830 -
    30110000.0 * sc[4] * x1831 + 24000000.0 * sc[4] * x2011 +
    5000000.0 * sc[4] * x722 + x1037 * x2085 + x1037 * x2259 + x1064 * x1575 -
    x1064 * x2253 - x1071 * x1575 + x1071 * x2253 - x1129 * x1830 +
    x1129 * x1831 - x1590 * x2085 - x1590 * x2259 + x1676 * x2245 +
    x174 * x2352 - x1741 * x2245 - x1968 * x2314 + x1969 * x2314 +
    x2271 * x783 + x2271 * x8807 - x783 * x946 - x8807 * x946 + x9807 + x9844 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x2271 + x946) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-x231 * x2352) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[258] =
    16000000.0 * sc[1] * x634 - 12000000.0 * sc[3] * x1047 +
    12000000.0 * sc[3] * x963 - 50000000.0 * sc[4] * x1749 +
    50000000.0 * sc[4] * x1814 - 30110000.0 * sc[4] * x1877 +
    5000000.0 * sc[4] * x634 + 24000000.0 * sc[4] * x774 +
    30110000.0 * sc[4] * x896 + x1047 * x2085 + x1047 * x2259 + x1072 * x1575 -
    x1072 * x2253 - x1073 * x1575 + x1073 * x2253 + x1129 * x1877 -
    x1129 * x896 - x1480 * x783 - x1480 * x8807 + x1749 * x2245 -
    x1814 * x2245 + x1970 * x2314 - x2085 * x963 - x2259 * x963 - x2314 * x755 +
    x2323 * x783 + x2323 * x8807 + x2352 * x858 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1480 - x2323) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-x231 * x2352) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[281] =
    16000000.0 * sc[1] * x1533 + sc[1] * x5464 + 12000000.0 * sc[3] * x1640 -
    12000000.0 * sc[3] * x1659 + 5000000.0 * sc[4] * x1533 +
    24000000.0 * sc[4] * x1554 - 50000000.0 * sc[4] * x1818 +
    50000000.0 * sc[4] * x1819 + 30110000.0 * sc[4] * x1886 -
    30110000.0 * sc[4] * x1897 + sc[4] * x9093 - 5000000.0 * sc[5] * x1398 +
    x1075 * x1575 - x1075 * x2253 - x1129 * x1886 + x1129 * x1897 -
    x1453 * x783 - x1453 * x8807 - x1575 * x671 - x1640 * x2085 -
    x1640 * x2259 + x1659 * x2085 + x1659 * x2259 + x1818 * x2245 -
    x1819 * x2245 - x1971 * x2314 + x1979 * x2314 + x2253 * x671 +
    x229 * x2352 + x2360 * x783 + x2360 * x8807 + x9807 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x1453 - x2360) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-x231 * x2352) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[304] =
    12000000.0 * sc[3] * x1663 - 12000000.0 * sc[3] * x1664 -
    50000000.0 * sc[4] * x1821 + 50000000.0 * sc[4] * x1823 +
    30110000.0 * sc[4] * x1860 - 30110000.0 * sc[4] * x1862 -
    30110000.0 * sc[5] * x1200 + x1035 * x783 + x1035 * x8807 + x1078 * x1575 -
    x1078 * x2253 - x1080 * x1575 + x1080 * x2253 - x1129 * x1860 +
    x1129 * x1862 - x1663 * x2085 - x1663 * x2259 + x1664 * x2085 +
    x1664 * x2259 + x1821 * x2245 - x1823 * x2245 + x1884 * x2314 -
    x1987 * x2314 - x783 * x809 - x809 * x8807 + x9275 + x9853 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1035 + x809) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-x231 * x2352) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[327] =
    12000000.0 * sc[3] * x1670 - 12000000.0 * sc[3] * x1679 -
    50000000.0 * sc[4] * x1828 + 50000000.0 * sc[4] * x1834 -
    30110000.0 * sc[4] * x1862 + 30110000.0 * sc[4] * x1872 +
    24000000.0 * sc[4] * x374 + sc[4] * x9080 + x1083 * x1575 - x1083 * x2253 -
    x1084 * x1575 + x1084 * x2253 + x1118 * x783 + x1118 * x8807 +
    x1129 * x1862 - x1129 * x1872 - x1205 * x783 - x1205 * x8807 -
    x1670 * x2085 - x1670 * x2259 + x1679 * x2085 + x1679 * x2259 +
    x1828 * x2245 - x1834 * x2245 + x1884 * x2314 - x1947 * x2314 + x9853 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1118 + x1205) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-x231 * x2352) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[350] =
    12000000.0 * sc[3] * x1680 - 12000000.0 * sc[3] * x1688 +
    24000000.0 * sc[4] * x1716 - 50000000.0 * sc[4] * x1835 +
    50000000.0 * sc[4] * x1836 - 30110000.0 * sc[4] * x1925 +
    30110000.0 * sc[4] * x502 + sc[4] * x9067 + x1085 * x1575 - x1085 * x2253 -
    x1086 * x1575 + x1086 * x2253 + x1129 * x1925 - x1129 * x502 -
    x1680 * x2085 - x1680 * x2259 + x1688 * x2085 + x1688 * x2259 +
    x1835 * x2245 - x1836 * x2245 - x1837 * x2314 + x1882 * x2314 -
    x216 * x783 - x216 * x8807 + x783 * x894 + x8807 * x894 + x9853 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (x216 - x894) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-x231 * x2352) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-24000000.0 * sc[4] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[373] =
    12000000.0 * sc[3] * x1689 + 50000000.0 * sc[4] * x1815 +
    30110000.0 * sc[4] * x1932 - sc[5] * x154 + x1070 * x783 + x1070 * x8807 +
    x1087 * x1575 - x1087 * x2253 - x1088 * x1575 + x1088 * x2253 -
    x1129 * x1932 - x1689 * x2085 - x1689 * x2259 + x1761 * x2245 -
    x1815 * x2245 - x2314 * x731 - x783 * x955 - x8807 * x955 + x9860 + x9863 +
    x9864 + x9865 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1070 + x955) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-x231 * x2352) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[396] =
    12000000.0 * sc[3] * x1625 + 50000000.0 * sc[4] * x1817 +
    30110000.0 * sc[4] * x183 + 7500000.0 * sc[4] * x2351 -
    10000000.0 * sc[5] * x9144 + x1089 * x1575 - x1089 * x2253 - x1129 * x183 -
    x1625 * x2085 - x1625 * x2259 + x1761 * x2245 - x1817 * x2245 -
    x2314 * x731 + x2352 * x837 - x783 * x958 - x8807 * x958 + x9864 + x9865 +
    x9869 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1668 + x958) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-x231 * x2352) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[419] =
    12000000.0 * sc[3] * x1018 + 50000000.0 * sc[4] * x1863 +
    30110000.0 * sc[4] * x233 - x1018 * x2085 - x1018 * x2259 - x1129 * x233 +
    x1141 * x1575 - x1141 * x2253 + x1265 * x2352 - x1694 * x783 -
    x1694 * x8807 + x1761 * x2245 - x1863 * x2245 - x1958 * x2314 + x9864 +
    x9865 + x9869 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1668 + x1694) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-x231 * x2352) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[442] =
    12000000.0 * sc[3] * x1729 - 12000000.0 * sc[3] * x262 -
    50000000.0 * sc[4] * x1870 + 50000000.0 * sc[4] * x1873 +
    30110000.0 * sc[4] * x1946 - sc[5] * x9115 + x1009 * x783 + x1009 * x8807 -
    x1057 * x783 - x1057 * x8807 - x1129 * x1946 + x1161 * x1575 -
    x1161 * x2253 - x1167 * x1575 + x1167 * x2253 - x1729 * x2085 -
    x1729 * x2259 + x1870 * x2245 - x1873 * x2245 + x2085 * x262 +
    x2259 * x262 - x2314 * x655 + x9860 + x9864 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1009 + x1057) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-x231 * x2352) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[465] =
    16000000.0 * sc[1] * x1885 + 12000000.0 * sc[3] * x1675 +
    24000000.0 * sc[4] * x1339 + 50000000.0 * sc[4] * x1874 +
    30110000.0 * sc[4] * x1949 + sc[4] * x9017 - 24000000.0 * sc[5] * x1323 -
    x1092 * x1575 + x1092 * x2253 + x1129 * x1937 - x1129 * x1949 +
    x1443 * x1575 - x1443 * x2253 + x1668 * x783 + x1668 * x8807 -
    x1675 * x2085 - x1675 * x2259 + x1761 * x2245 - x1874 * x2245 +
    x1896 * x2352 + x1957 * x2314 - x1966 * x2314 - x783 * x784 - x784 * x8807 +
    x9267 + x9807 + x9863 + x9864 + x9865 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x1668 + x784) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-x231 * x2352) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[488] =
    12000000.0 * sc[3] * x1752 - 12000000.0 * sc[3] * x1757 +
    30110000.0 * sc[4] * x1788 + 50000000.0 * sc[4] * x1876 - x1129 * x1788 +
    x1444 * x1575 - x1444 * x2253 - x1445 * x1575 + x1445 * x2253 -
    x1752 * x2085 - x1752 * x2259 + x1757 * x2085 + x1757 * x2259 +
    x1761 * x2245 - x1876 * x2245 - x2314 * x731 + x647 * x783 + x647 * x8807 -
    x669 * x783 - x669 * x8807 + x9860 + x9864 + x9865 +
    (12000000.0 * sc[3] * x678 + 50000000.0 * sc[4] * x680 -
     30110000.0 * sc[4] * x683 + x1129 * x683 + x1575 * x677 - x2085 * x678 -
     x2245 * x680 - x2253 * x677 - x2259 * x678) *
      (-x647 + x669) +
    (12000000.0 * sc[3] * x679 + 50000000.0 * sc[4] * x681 +
     30110000.0 * sc[4] * x684 - x1129 * x684 - x2085 * x679 - x2245 * x681 -
     x2259 * x679) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-x231 * x2352) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-24000000.0 * sc[4] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-16000000.0 * sc[1] * x637 - 5000000.0 * sc[4] * x637 +
     50000000.0 * sc[4] * x682 - x2245 * x682 + x2314 * x597) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (30110000.0 * sc[4] * x685 - x1129 * x685 + x2314 * x448 - x2352 * x483) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[6] =
    140000.0 * sc[3] * x1243 + sc[3] * x143 + 90000.0 * sc[3] * x1636 +
    20000.0 * sc[3] * x756 - 20000.0 * sc[3] * x779 - sc[6] * x141 -
    24000000.0 * sc[6] * x1636 - 20000000.0 * sc[6] * x725 -
    24600000.0 * sc[6] * x756 + 24600000.0 * sc[6] * x779 +
    20000000.0 * sc[6] * x790 - 10000000.0 * sc[6] * x897 +
    10000000.0 * sc[6] * x908 + x1243 * x2350 - x1548 * x897 + x1548 * x908 +
    x1687 * x923 - x1687 * x932 + x1879 * x2315 + x1879 * x823 + x2250 * x897 -
    x2250 * x908 - x2266 * x923 + x2266 * x932 + x2322 * x756 - x2322 * x779 +
    x2353 * x897 - x2353 * x908 - x2355 * x923 + x2355 * x932 + x2356 * x756 -
    x2356 * x779 + x897 * x948 - x908 * x948 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1472 + x985) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[29] =
    sc[21] * sc[3] * x1572 +
    300000000.0 * ((sc[3]) * (sc[3])) * exp(-1.72 * tc[0]) +
    sc[3] * sc[5] * x521 + 20000.0 * sc[3] * x1560 + 140000.0 * sc[3] * x207 +
    90000.0 * sc[3] * x362 - 20000.0 * sc[3] * x423 +
    sc[3] * x558 * exp(-0.86 * tc[0]) - 10000000.0 * sc[6] * x1069 +
    10000000.0 * sc[6] * x1526 - 24600000.0 * sc[6] * x1560 -
    24000000.0 * sc[6] * x362 + 24600000.0 * sc[6] * x423 -
    20000000.0 * sc[6] * x926 + 20000000.0 * sc[6] * x936 + sc[7] * x402 +
    x1005 * x1687 - x1005 * x2266 - x1005 * x2355 - x1069 * x1548 +
    x1069 * x2250 + x1069 * x2353 + x1069 * x948 - x1074 * x1687 +
    x1074 * x2266 + x1074 * x2355 + x1526 * x1548 - x1526 * x2250 -
    x1526 * x2353 - x1526 * x948 + x1559 + x1560 * x2322 + x1560 * x2356 +
    x207 * x2350 + x2315 * x609 - x2322 * x423 - x2356 * x423 + x609 * x823 +
    x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1665 - x1692) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[52] =
    90000.0 * sc[3] * x1063 + 20000.0 * sc[3] * x1081 -
    20000.0 * sc[3] * x1718 + 140000.0 * sc[3] * x220 + sc[5] * x5579 -
    24000000.0 * sc[6] * x1063 - 24600000.0 * sc[6] * x1081 -
    10000000.0 * sc[6] * x115 + 10000000.0 * sc[6] * x1653 +
    24600000.0 * sc[6] * x1718 - 20000000.0 * sc[6] * x968 +
    20000000.0 * sc[6] * x995 - 20000000.0 * sc[6] + sc[7] * x7388 +
    x1081 * x2322 + x1081 * x2356 - x115 * x1548 + x115 * x2250 + x115 * x2353 +
    x115 * x948 + x1548 * x1653 - x1633 * x1687 + x1633 * x2266 +
    x1633 * x2355 - x1653 * x2250 - x1653 * x2353 - x1653 * x948 +
    x1687 * x824 - x1718 * x2322 - x1718 * x2356 + x220 * x2350 - x2266 * x824 +
    x2315 * x624 - x2355 * x824 + x624 * x823 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1753 - x1773) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[75] =
    -refC * sc[6] * x5736 + sc[0] * x143 + sc[12] * x8302 + sc[14] * x8297 +
    300000.0 * sc[15] * x1368 + sc[1] * sc[21] * x1572 +
    600000000.0 * sc[1] * sc[3] * exp(-1.72 * tc[0]) + sc[1] * sc[5] * x521 +
    sc[1] * x558 * exp(-0.86 * tc[0]) + sc[20] * x8246 +
    140000.0 * sc[3] * x1639 + 90000.0 * sc[3] * x185 + sc[5] * x1367 +
    20000000.0 * sc[6] * x1000 - 10000000.0 * sc[6] * x1654 +
    10000000.0 * sc[6] * x1685 + 24600000.0 * sc[6] * x1739 -
    24000000.0 * sc[6] * x185 - 24600000.0 * sc[6] * x250 -
    20000000.0 * sc[6] * x999 + 840000000.0 * sc[7] * x8288 +
    260000.0 * sc[7] * x8291 + sc[9] * x8243 - 140000.0 * x1025 -
    140000.0 * x1266 - 90000.0 * x1340 + x1501 * x433 - x1548 * x1654 +
    x1548 * x1685 + x1639 * x2350 + x165 * x170 + x1654 * x2250 + x1654 * x948 +
    x1656 * x1687 - x1656 * x2266 - x1656 * x2355 - x1672 * x1687 +
    x1672 * x2266 + x1672 * x2355 - x1685 * x2250 - x1685 * x948 -
    x1739 * x2322 - x1739 * x2356 + x2315 * x998 + x2322 * x250 + x2356 * x250 +
    7600000.0 * x578 * exp(-201.28666632188799 * invT) + x7478 -
    90000.0 * x766 + x823 * x998 + x9935 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1822 - x1838) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[98] =
    sc[11] * x9062 + 20000000.0 * sc[12] * x1094 +
    24000000.0 * sc[12] * x1238 * x1343 + 140000.0 * sc[3] * x1743 +
    90000.0 * sc[3] * x1981 - 20000000.0 * sc[6] * x1006 +
    20000000.0 * sc[6] * x1008 - 10000000.0 * sc[6] * x1708 +
    10000000.0 * sc[6] * x1745 + 24600000.0 * sc[6] * x1759 -
    24600000.0 * sc[6] * x1780 - 24000000.0 * sc[6] * x1981 - sc[6] * x7522 -
    sc[6] * x8330 + sc[7] * x9055 + sc[7] * x9058 +
    6600000.0 * x105 * x110 * x170 + 24000000.0 * x105 * x325 * x332 -
    x1548 * x1708 + x1548 * x1745 + x1678 * x2315 + x1678 * x823 +
    x1686 * x1687 - x1686 * x2266 - x1686 * x2355 - x1687 * x548 +
    x1708 * x2250 + x1708 * x948 + x1743 * x2350 - x1745 * x2250 -
    x1745 * x948 - x1759 * x2322 - x1759 * x2356 + x1780 * x2322 +
    x1780 * x2356 + 10000000.0 * x198 * x267 + x2266 * x548 + x2355 * x548 +
    13400000.0 * x433 * x630 + 141600000.0 * x5753 + x7530 + x9885 + x9949 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1824 - x1887) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[121] =
    -refC * sc[6] * x5947 + sc[1] * sc[3] * x521 + sc[2] * x5579 +
    sc[3] * x1367 + 20000.0 * sc[3] * x1760 + 140000.0 * sc[3] * x1763 -
    20000.0 * sc[3] * x1844 + 90000.0 * sc[3] * x1880 -
    20000000.0 * sc[6] * x1039 + 20000000.0 * sc[6] * x1042 -
    10000000.0 * sc[6] * x1747 + 10000000.0 * sc[6] * x1748 -
    24600000.0 * sc[6] * x1760 + 24600000.0 * sc[6] * x1844 -
    24000000.0 * sc[6] * x1880 - sc[6] * x9147 - sc[6] * x9149 - x1548 * x1747 +
    x1548 * x1748 + x1687 * x1750 - x1687 * x1751 + x1747 * x2250 +
    x1747 * x2353 + x1747 * x948 - x1748 * x2250 - x1748 * x2353 -
    x1748 * x948 - x1750 * x2266 - x1750 * x2355 + x1751 * x2266 +
    x1751 * x2355 + x1760 * x2322 + x1760 * x2356 + x1763 * x2350 -
    x1844 * x2322 - x1844 * x2356 + x1871 * x2315 + x1871 * x823 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1956 - x1973) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[144] =
    -refC * sc[21] * x6042 - refC * sc[3] * x5736 - refC * sc[5] * x5947 -
    refC * x558 * exp(-0.86 * tc[0] + x546) - sc[0] * x141 - sc[13] * x8390 -
    sc[15] * x9974 - 140000.0 * sc[17] * x1235 - 9260000.0 * sc[19] -
    90000.0 * sc[20] * x1326 - 20000000.0 * sc[2] + 140000.0 * sc[3] * x1826 +
    90000.0 * sc[3] * x1977 - sc[4] * x7522 - sc[4] * x8330 - sc[5] * x9147 -
    sc[5] * x9149 - 20000000.0 * sc[6] * x1043 + 20000000.0 * sc[6] * x1045 -
    10000000.0 * sc[6] * x1755 - 24600000.0 * sc[6] * x1865 +
    24600000.0 * sc[6] * x1867 - 24000000.0 * sc[6] * x1977 +
    10000000.0 * sc[6] * x227 -
    520000.0 * sc[6] * exp(820.24316526169298 * invT) -
    1680000000.0 * sc[6] * exp(-6038.59998965664 * invT) - 14400000.0 * sc[8] -
    sc[9] * x377 + 24000000.0 * x1340 + x1408 * x2315 - x1548 * x1755 +
    x1548 * x227 + x1687 * x1756 - x1687 * x1768 - x170 * x2321 -
    10000000.0 * x170 + x1755 * x2250 + x1755 * x948 + x1826 * x2350 +
    x1865 * x2322 + x1865 * x2356 - x1867 * x2322 - x1867 * x2356 -
    x2250 * x227 - x227 * x948 - x2318 * x578 - 24600000.0 * x325 + x6053 -
    20000000.0 * x675 + 24000000.0 * x766 + x9885 - x9971 + x9983 + x9985 +
    x9989 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x2014 - x2032) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[167] =
    300000.0 * sc[14] * x1381 + sc[19] * x9990 + sc[1] * x402 + sc[2] * x7388 +
    140000.0 * sc[3] * x1896 + 840000000.0 * sc[3] * x8288 +
    260000.0 * sc[3] * x8291 + sc[4] * x9055 + sc[4] * x9058 -
    20000000.0 * sc[6] * x1051 + 20000000.0 * sc[6] * x1052 -
    10000000.0 * sc[6] * x1767 + 10000000.0 * sc[6] * x1812 +
    24600000.0 * sc[6] * x1875 - 24600000.0 * sc[6] * x1891 + x10002 + x10012 -
    x1548 * x1767 + x1548 * x1812 + x1687 * x1770 - x1687 * x1772 +
    x1767 * x2250 + x1767 * x948 - x1770 * x2266 - x1770 * x2355 +
    x1772 * x2266 + x1772 * x2355 - x1812 * x2250 - x1812 * x948 -
    x1875 * x2322 - x1875 * x2356 + x1885 * x823 + x1891 * x2322 +
    x1891 * x2356 + x1896 * x2350 + x2354 * x578 +
    8700.0 * x325 * exp(-490.13303249379697 * invT) + x9265 + x9885 + x9993 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x2070 - x2087) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[190] =
    140000.0 * sc[3] * x1240 + 20000.0 * sc[3] * x1881 -
    20000.0 * sc[3] * x1960 + 90000.0 * sc[3] * x339 +
    24000000.0 * sc[4] * x105 * x1343 - 20000000.0 * sc[6] * x1056 +
    20000000.0 * sc[6] * x1059 - 10000000.0 * sc[6] * x1813 +
    10000000.0 * sc[6] * x1833 - 24600000.0 * sc[6] * x1881 +
    24600000.0 * sc[6] * x1960 - 24000000.0 * sc[6] * x339 -
    14400000.0 * sc[6] + x10014 + x1240 * x2350 - x1548 * x1813 +
    x1548 * x1833 + x1641 * x2315 + x1641 * x823 + x1687 * x1779 -
    x1687 * x1782 - x1779 * x2266 - x1779 * x2355 + x1782 * x2266 +
    x1782 * x2355 + x1813 * x2250 + x1813 * x2353 + x1813 * x948 -
    x1833 * x2250 - x1833 * x2353 - x1833 * x948 + x1881 * x2322 +
    x1881 * x2356 - x1960 * x2322 - x1960 * x2356 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x2080 - x2141) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[213] =
    20000.0 * sc[3] * x1961 - 20000.0 * sc[3] * x1962 +
    90000.0 * sc[3] * x2010 + sc[3] * x8243 + 140000.0 * sc[3] * x858 -
    20000000.0 * sc[6] * x1060 + 20000000.0 * sc[6] * x1062 +
    10000000.0 * sc[6] * x1825 - 10000000.0 * sc[6] * x1841 -
    24600000.0 * sc[6] * x1961 + 24600000.0 * sc[6] * x1962 -
    24000000.0 * sc[6] * x2010 - sc[6] * x377 + x1548 * x1825 - x1548 * x1841 -
    x1687 * x1742 + x1687 * x1787 + x1742 * x2266 + x1742 * x2355 -
    x1787 * x2266 - x1787 * x2355 - x1825 * x2250 - x1825 * x2353 -
    x1825 * x948 + x1841 * x2250 + x1841 * x2353 + x1841 * x948 +
    x1961 * x2322 + x1961 * x2356 - x1962 * x2322 - x1962 * x2356 +
    x2315 * x634 + x2350 * x858 + x634 * x823 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x2186 + x649) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[236] =
    140000.0 * sc[3] * x174 + 20000.0 * sc[3] * x1968 -
    20000.0 * sc[3] * x1969 + 90000.0 * sc[3] * x2011 -
    20000000.0 * sc[6] * x1064 + 20000000.0 * sc[6] * x1071 -
    10000000.0 * sc[6] * x1830 + 10000000.0 * sc[6] * x1831 -
    24600000.0 * sc[6] * x1968 + 24600000.0 * sc[6] * x1969 -
    24000000.0 * sc[6] * x2011 + x10056 - x1548 * x1830 + x1548 * x1831 +
    x1676 * x1687 - x1676 * x2355 - x1687 * x1741 + x174 * x2350 +
    x1741 * x2355 + x1830 * x2250 + x1830 * x2353 + x1830 * x948 -
    x1831 * x2250 - x1831 * x2353 - x1831 * x948 + x1968 * x2322 +
    x1968 * x2356 - x1969 * x2322 - x1969 * x2356 + 2100000.0 * x2091 -
    2100000.0 * x2093 + x2315 * x722 + x722 * x823 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x2271 + x946) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[259] =
    -20000.0 * sc[3] * x1970 + 20000.0 * sc[3] * x755 + 90000.0 * sc[3] * x774 +
    140000.0 * sc[3] * x858 + sc[4] * x9062 - 20000000.0 * sc[6] * x1072 +
    20000000.0 * sc[6] * x1073 + 10000000.0 * sc[6] * x1877 +
    24600000.0 * sc[6] * x1970 - 24600000.0 * sc[6] * x755 -
    24000000.0 * sc[6] * x774 - 10000000.0 * sc[6] * x896 + x1548 * x1877 -
    x1548 * x896 + x1687 * x1749 - x1687 * x1814 - x1749 * x2266 -
    x1749 * x2355 + x1814 * x2266 + x1814 * x2355 - x1877 * x2250 -
    x1877 * x2353 - x1877 * x948 - x1970 * x2322 - x1970 * x2356 +
    4200000.0 * x2091 - 4200000.0 * x2093 + x2250 * x896 + x2315 * x634 +
    x2322 * x755 + x2350 * x858 + x2353 * x896 + x2356 * x755 + x634 * x823 +
    x896 * x948 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1480 - x2323) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[282] =
    90000.0 * sc[3] * x1554 + 20000.0 * sc[3] * x1971 -
    20000.0 * sc[3] * x1979 + 140000.0 * sc[3] * x229 + sc[3] * x8302 +
    20000000.0 * sc[4] * x1094 + 24000000.0 * sc[4] * x1238 * x1343 -
    20000000.0 * sc[6] * x1075 - 24000000.0 * sc[6] * x1554 -
    10000000.0 * sc[6] * x1886 + 10000000.0 * sc[6] * x1897 -
    24600000.0 * sc[6] * x1971 + 24600000.0 * sc[6] * x1979 +
    20000000.0 * sc[6] * x671 + x10083 + 6600000.0 * x110 * x170 * x2279 +
    x1533 * x2315 - x1548 * x1886 + x1548 * x1897 + x1687 * x1818 -
    x1687 * x1819 - x1818 * x2266 + x1819 * x2266 + x1886 * x2250 +
    x1886 * x2353 + x1886 * x948 - x1897 * x2250 - x1897 * x2353 -
    x1897 * x948 + x1971 * x2322 + x1971 * x2356 - x1979 * x2322 -
    x1979 * x2356 + 24000000.0 * x2279 * x325 * x332 + x229 * x2350 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x1453 - x2360) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[305] =
    20000.0 * sc[3] * x1987 - 20000000.0 * sc[6] * x1078 +
    20000000.0 * sc[6] * x1080 - 10000000.0 * sc[6] * x1860 -
    24600000.0 * sc[6] * x1987 - sc[6] * x8390 + x10002 + x10098 + x10102 +
    x1410 * x823 - x1548 * x1860 + x1687 * x1821 - x1687 * x1823 -
    x1821 * x2266 - x1821 * x2355 + x1823 * x2266 + x1823 * x2355 +
    x1860 * x2250 + x1860 * x2353 + x1860 * x948 - x1862 * x2250 -
    x1862 * x948 - x1884 * x2356 + x1987 * x2322 + x1987 * x2356 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1035 + x809) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[328] =
    90000.0 * sc[3] * x374 + sc[3] * x8297 - 20000000.0 * sc[6] * x1083 +
    20000000.0 * sc[6] * x1084 - 10000000.0 * sc[6] * x1872 -
    24600000.0 * sc[6] * x1947 - 24000000.0 * sc[6] * x374 +
    300000.0 * sc[7] * x1381 + x10102 + x10114 + x1410 * x823 - x1548 * x1872 +
    x1687 * x1828 - x1687 * x1834 - x1828 * x2266 - x1828 * x2355 +
    x1834 * x2266 + x1834 * x2355 - x1862 * x2250 - x1862 * x948 +
    x1872 * x2250 + x1872 * x948 - x1884 * x2356 + x1947 * x2322 +
    x1947 * x2356 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1118 + x1205) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[351] =
    300000.0 * sc[3] * x1368 + 90000.0 * sc[3] * x1716 +
    20000.0 * sc[3] * x1837 - 20000.0 * sc[3] * x1882 +
    140000.0 * sc[3] * x482 - 20000000.0 * sc[6] * x1085 +
    20000000.0 * sc[6] * x1086 - 24000000.0 * sc[6] * x1716 -
    24600000.0 * sc[6] * x1837 + 24600000.0 * sc[6] * x1882 +
    10000000.0 * sc[6] * x1925 - 10000000.0 * sc[6] * x502 - sc[6] * x9974 +
    x1410 * x2315 + x1410 * x823 + x1548 * x1925 - x1548 * x502 +
    x1687 * x1835 - x1687 * x1836 - x1835 * x2266 - x1835 * x2355 +
    x1836 * x2266 + x1836 * x2355 + x1837 * x2322 + x1837 * x2356 -
    x1882 * x2322 - x1882 * x2356 - x1925 * x2250 - x1925 * x2353 -
    x1925 * x948 + 4200000.0 * x2091 - 4200000.0 * x2093 + x2250 * x502 +
    x2350 * x482 + x2353 * x502 + x502 * x948 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (x216 - x894) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[374] =
    -20000000.0 * sc[6] * x1087 + 20000000.0 * sc[6] * x1088 -
    10000000.0 * sc[6] * x1932 + x10130 + x10135 + x10140 + x10144 + x10146 +
    x10148 + x10149 - x1548 * x1932 - x1687 * x1815 + x1815 * x2266 +
    x1815 * x2355 + x1932 * x2250 + x1932 * x2353 + x1932 * x948 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1070 + x955) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[397] =
    140000.0 * sc[3] * x837 - 20000000.0 * sc[6] * x1089 -
    140000.0 * sc[6] * x1235 - 10000000.0 * sc[6] * x183 + x10002 + x10135 +
    x10140 + x10144 + x10146 + x10158 - x1548 * x183 - x1687 * x1817 +
    x1817 * x2266 + x1817 * x2355 + x183 * x2250 + x183 * x2353 + x183 * x948 +
    x2350 * x837 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1668 + x958) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[420] =
    140000.0 * sc[3] * x1265 + 20000.0 * sc[3] * x1958 + sc[4] * x9007 -
    20000000.0 * sc[6] * x1141 - 24600000.0 * sc[6] * x1958 -
    10000000.0 * sc[6] * x233 + x10002 + x10133 + x10139 + x10144 + x10146 +
    x10158 + x1265 * x2350 - x1548 * x233 + x1687 * x1761 - x1687 * x1863 +
    x1863 * x2266 + x1863 * x2355 + x1958 * x2322 + x1958 * x2356 +
    x2250 * x233 + x233 * x2353 + x233 * x948 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1668 + x1694) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[443] =
    20000.0 * sc[3] * x655 - 20000000.0 * sc[6] * x1161 +
    20000000.0 * sc[6] * x1167 - 10000000.0 * sc[6] * x1946 -
    24600000.0 * sc[6] * x655 - 9260000.0 * sc[6] + sc[7] * x9990 + x10130 +
    x10133 + x10139 + x10148 + x10149 - x1548 * x1946 + x1687 * x1870 -
    x1687 * x1873 - x1870 * x2266 - x1870 * x2355 + x1873 * x2266 +
    x1873 * x2355 + x1885 * x823 + x1946 * x2250 + x1946 * x2353 +
    x1946 * x948 + x2322 * x655 + x2356 * x655 + x9885 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1009 + x1057) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[466] =
    90000.0 * sc[3] * x1339 + 140000.0 * sc[3] * x1896 +
    20000.0 * sc[3] * x1966 + sc[3] * x8246 - 90000.0 * sc[6] * x1326 -
    24000000.0 * sc[6] * x1339 - 20000000.0 * sc[6] * x1443 -
    10000000.0 * sc[6] * x1949 - 24600000.0 * sc[6] * x1966 + x10133 + x10139 +
    x10144 + x10146 + x10158 - x10187 - x1548 * x1949 + x1687 * x1761 -
    x1687 * x1874 + x1874 * x2266 + x1874 * x2355 + x1896 * x2350 +
    x1949 * x2250 + x1949 * x2353 + x1949 * x948 + x1966 * x2322 +
    x1966 * x2356 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x1668 + x784) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[489] =
    -refC * sc[6] * x6042 + sc[1] * sc[3] * x1572 - 20000000.0 * sc[6] * x1444 +
    20000000.0 * sc[6] * x1445 - 10000000.0 * sc[6] * x1788 + x10130 + x10135 +
    x10140 + x10144 + x10146 + x10148 + x10149 - x1548 * x1788 - x1687 * x1876 +
    x1788 * x2250 + x1788 * x2353 + x1788 * x948 + x1876 * x2266 +
    x1876 * x2355 +
    (-20000000.0 * sc[6] * x677 + 10000000.0 * sc[6] * x683 + x1548 * x683 -
     x1687 * x680 - x2250 * x683 + x2266 * x680 - x2353 * x683 + x2355 * x680 -
     x683 * x948) *
      (-x647 + x669) +
    (-10000000.0 * sc[6] * x684 - x1548 * x684 - x1687 * x681 + x2250 * x684 +
     x2266 * x681 + x2353 * x684 + x2355 * x681 + x684 * x948) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-140000.0 * sc[3] * x231 - x231 * x2350) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-90000.0 * sc[3] * x376 + 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-20000.0 * sc[3] * x597 + 24600000.0 * sc[6] * x597 - x1687 * x682 +
     x2266 * x682 - x2315 * x637 - x2322 * x597 + x2355 * x682 - x2356 * x597 -
     x637 * x823) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-20000.0 * sc[3] * x448 - 140000.0 * sc[3] * x483 +
     24600000.0 * sc[6] * x448 - 10000000.0 * sc[6] * x685 - x1548 * x685 +
     x2250 * x685 - x2322 * x448 - x2350 * x483 + x2353 * x685 - x2356 * x448 +
     x685 * x948) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[7] =
    sc[6] * x141 + x10200 - x2353 * x897 + x2353 * x908 + x2355 * x923 -
    x2355 * x932 - x2356 * x756 + x2356 * x779 + x8180 +
    (x2353 * x683 - x2355 * x680) * (-x1472 + x985) +
    (-x2353 * x684 - x2355 * x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[30] =
    -sc[7] * x2170 - sc[7] * x402 + x1005 * x2355 + x10202 - x1069 * x2353 -
    x1074 * x2355 + x1526 * x2353 - x1560 * x2356 + x2356 * x423 + x8209 +
    (x2353 * x683 - x2355 * x680) * (x1665 - x1692) +
    (-x2353 * x684 - x2355 * x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[53] =
    -sc[7] * x7388 + x10202 - x1081 * x2356 - x115 * x2353 - x1633 * x2355 +
    x1653 * x2353 + x1718 * x2356 + x2355 * x824 + x8236 +
    (x2353 * x683 - x2355 * x680) * (x1753 - x1773) +
    (-x2353 * x684 - x2355 * x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[76] = -420000000.0 * sc[7] * x8288 - 130000.0 * sc[7] * x8291 + x10202 -
          x1654 * x2353 + x1656 * x2355 - x1672 * x2355 + x1685 * x2353 +
          x1739 * x2356 - x2356 * x250 + x8293 +
          (x2353 * x683 - x2355 * x680) * (x1822 - x1838) +
          (-x2353 * x684 - x2355 * x681) *
            (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
            (x1535 - x1537 + (x678) * (x1822 - x1838) +
             (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
          (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
            (-x1656 + x1672 + (x680) * (x1822 - x1838) +
             (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
             (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[99] = 4600000.0 * sc[4] * x10 * x8855 *
            exp(855.46833186802303 * invT - 0.9 * tc[0]) +
          sc[5] * x5747 + sc[6] * x7522 - sc[7] * x9055 - sc[7] * x9058 +
          x10202 + x1686 * x2355 - x1708 * x2353 + x1745 * x2353 +
          x1759 * x2356 - x1780 * x2356 - x2355 * x548 + x8345 +
          (x2353 * x683 - x2355 * x680) * (x1824 - x1887) +
          (-x2353 * x684 - x2355 * x681) *
            (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
            (x1385 - x1563 + (x678) * (x1824 - x1887) +
             (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
          (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
            (-x1686 + x548 + (x680) * (x1824 - x1887) +
             (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
             (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[122] =
    sc[4] * x5747 + sc[6] * x9147 + sc[6] * x9149 - x1747 * x2353 +
    x1748 * x2353 + x1750 * x2355 - x1751 * x2355 - x1760 * x2356 +
    x1844 * x2356 + x8375 + 428918.91891891899 * x8845 * x8848 -
    428918.91891891899 * x8847 +
    2300000.0 * x8857 * x8863 * (1.68 * x693 * x8859 + 12.0 * x693 * x8860) -
    13800000.0 * x8857 -
    2300000.0 * x8863 * x8867 * (1.68 * x693 * x8859 + 12.0 * x693 * x8860) +
    13800000.0 * x8867 + (x2353 * x683 - x2355 * x680) * (x1956 - x1973) +
    (-x2353 * x684 - x2355 * x681) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[145] = sc[0] * x141 + 1000000.0 * sc[12] * x1013 + sc[14] * x1210 +
           sc[15] * x9974 + sc[4] * x7522 + sc[5] * x9147 + sc[5] * x9149 +
           sc[9] * x377 + x10202 - x1755 * x2353 + x1756 * x2355 -
           x1768 * x2355 - x1865 * x2356 + x1867 * x2356 + x227 * x2353 +
           x8412 + x9971 + (x2353 * x683 - x2355 * x680) * (x2014 - x2032) +
           (-x2353 * x684 - x2355 * x681) *
             (x1043 - x1045 + (x677) * (x2014 - x2032)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (-x1440 + x921 + (x678) * (x2014 - x2032) +
              (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1756 + x1768 + (x680) * (x2014 - x2032) +
              (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
              (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                        (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[168] = -300000.0 * sc[14] * x1381 - sc[19] * x9990 - sc[1] * x2170 -
           sc[1] * x402 - sc[2] * x7388 - 420000000.0 * sc[3] * x8288 -
           130000.0 * sc[3] * x8291 - sc[4] * x9055 - sc[4] * x9058 + x10202 -
           12100.0 * x170 * exp(299.91713281961302 * invT) - x1767 * x2353 +
           x1770 * x2355 - x1772 * x2355 + x1812 * x2353 + x1875 * x2356 -
           x1891 * x2356 - x2354 * x578 -
           8700.0 * x325 * exp(-490.13303249379697 * invT) -
           2300000.0 * x843 * x8856 + x8440 - x9993 +
           (x2353 * x683 - x2355 * x680) * (x2070 - x2087) +
           (-x2353 * x684 - x2355 * x681) *
             (x1051 - x1052 + (x677) * (x2070 - x2087)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1580 - x476 + (x678) * (x2070 - x2087) +
              (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1770 + x1772 + (x680) * (x2070 - x2087) +
              (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
              (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                        (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[191] = -x10014 + x10202 + x1779 * x2355 - x1782 * x2355 - x1813 * x2353 +
           x1833 * x2353 - x1881 * x2356 + x1960 * x2356 + x8478 +
           (x2353 * x683 - x2355 * x680) * (x2080 - x2141) +
           (-x2353 * x684 - x2355 * x681) *
             (x1056 - x1059 + (x677) * (x2080 - x2141)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (-x315 + x789 + (x678) * (x2080 - x2141) +
              (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1779 + x1782 + (x680) * (x2080 - x2141) +
              (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
              (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                        (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[214] = sc[6] * x377 + x10200 - x1742 * x2355 + x1787 * x2355 +
           x1825 * x2353 - x1841 * x2353 - x1961 * x2356 + x1962 * x2356 +
           x8507 + (x2353 * x683 - x2355 * x680) * (-x2186 + x649) +
           (-x2353 * x684 - x2355 * x681) *
             (x1060 - x1062 + (x677) * (-x2186 + x649)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (-x1149 + x646 + (x678) * (-x2186 + x649) +
              (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (x1742 - x1787 + (x680) * (-x2186 + x649) +
              (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
              (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                        (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[237] =
    x1676 * x2355 - x1741 * x2355 - x1830 * x2353 + x1831 * x2353 -
    x1968 * x2356 + x1969 * x2356 + x8541 + 107229.72972973 * x8845 * x8848 -
    107229.72972973 * x8847 +
    2300000.0 * x8857 * x8863 * (0.42 * x693 * x8859 + 3.0 * x693 * x8860) -
    3450000.0 * x8857 -
    2300000.0 * x8863 * x8867 * (0.42 * x693 * x8859 + 3.0 * x693 * x8860) +
    3450000.0 * x8867 + (x2353 * x683 - x2355 * x680) * (-x2271 + x946) +
    (-x2353 * x684 - x2355 * x681) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[260] = x10200 + x1749 * x2355 - x1814 * x2355 + x1877 * x2353 +
           x1970 * x2356 - x2353 * x896 - x2356 * x755 + x8568 +
           (x2353 * x683 - x2355 * x680) * (x1480 - x2323) +
           (-x2353 * x684 - x2355 * x681) *
             (x1072 - x1073 + (x677) * (x1480 - x2323)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (-x1047 + x963 + (x678) * (x1480 - x2323) +
              (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1749 + x1814 + (x680) * (x1480 - x2323) +
              (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
              (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                        (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[283] =
    1000000.0 * sc[6] * x1013 + x10202 + x1818 * x2355 - x1819 * x2355 -
    x1886 * x2353 + x1897 * x2353 - x1971 * x2356 + x1979 * x2356 + x8595 +
    (x2353 * x683 - x2355 * x680) * (x1453 - x2360) +
    (-x2353 * x684 - x2355 * x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[306] = x10207 + x1821 * x2355 - x1823 * x2355 - x1860 * x2353 +
           x1862 * x2353 + x1884 * x2356 - x1987 * x2356 + x8623 +
           (x2353 * x683 - x2355 * x680) * (-x1035 + x809) +
           (-x2353 * x684 - x2355 * x681) *
             (x1078 - x1080 + (x677) * (-x1035 + x809)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1663 - x1664 + (x678) * (-x1035 + x809) +
              (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1821 + x1823 + (x680) * (-x1035 + x809) +
              (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
              (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                        (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[329] = sc[6] * x1210 - 300000.0 * sc[7] * x1381 + x10207 + x1828 * x2355 -
           x1834 * x2355 + x1862 * x2353 - x1872 * x2353 + x1884 * x2356 -
           x1947 * x2356 + x8647 +
           (x2353 * x683 - x2355 * x680) * (-x1118 + x1205) +
           (-x2353 * x684 - x2355 * x681) *
             (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1670 - x1679 + (x678) * (-x1118 + x1205) +
              (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
              (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
              (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                        (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[352] =
    sc[6] * x9974 + x10207 + x1835 * x2355 - x1836 * x2355 - x1837 * x2356 +
    x1882 * x2356 + x1925 * x2353 - x2353 * x502 + x8673 +
    (x2353 * x683 - x2355 * x680) * (x216 - x894) +
    (-x2353 * x684 - x2355 * x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[375] = x10211 - x1815 * x2355 - x1932 * x2353 - x2356 * x731 + x8711 +
           (x2353 * x683 - x2355 * x680) * (-x1070 + x955) +
           (-x2353 * x684 - x2355 * x681) *
             (x1087 - x1088 + (x677) * (-x1070 + x955)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1689 - x1707 + (x678) * (-x1070 + x955) +
              (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1761 + x1815 + (x680) * (-x1070 + x955) +
              (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
              (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                        (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[398] = x10211 - x1817 * x2355 - x183 * x2353 - x2356 * x731 + x8711 +
           (x2353 * x683 - x2355 * x680) * (-x1668 + x958) +
           (-x2353 * x684 - x2355 * x681) *
             (x1089 - x1092 + (x677) * (-x1668 + x958)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1625 - x1707 + (x678) * (-x1668 + x958) +
              (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1761 + x1817 + (x680) * (-x1668 + x958) +
              (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
              (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                        (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[421] = 300000.0 * sc[6] * x1958 + x10211 - x1863 * x2355 - x1958 * x2356 -
           x233 * x2353 + x8710 +
           (x2353 * x683 - x2355 * x680) * (-x1668 + x1694) +
           (-x2353 * x684 - x2355 * x681) *
             (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1018 - x1707 + (x678) * (-x1668 + x1694) +
              (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
              (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
              (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                        (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[444] = 300000.0 * sc[6] * x655 - sc[7] * x9990 + x10202 + x1870 * x2355 -
           x1873 * x2355 + x1937 * x2353 - x1946 * x2353 + x1957 * x2356 -
           x2356 * x655 + x8710 +
           (x2353 * x683 - x2355 * x680) * (-x1009 + x1057) +
           (-x2353 * x684 - x2355 * x681) *
             (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1729 - x262 + (x678) * (-x1009 + x1057) +
              (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
              (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
              (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                        (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[467] = 300000.0 * sc[6] * x1966 + x10187 + x10211 - x1874 * x2355 -
           x1949 * x2353 - x1966 * x2356 + x8710 +
           (x2353 * x683 - x2355 * x680) * (-x1668 + x784) +
           (-x2353 * x684 - x2355 * x681) *
             (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
           (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
             (x1675 - x1707 + (x678) * (-x1668 + x784) +
              (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
           (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
             (-x1761 + x1874 + (x680) * (-x1668 + x784) +
              (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
              (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                        (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[490] =
    x10211 - x1788 * x2353 - x1876 * x2355 - x2356 * x731 + x8711 +
    (x2353 * x683 - x2355 * x680) * (-x647 + x669) +
    (-x2353 * x684 - x2355 * x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-300000.0 * sc[6] * x597 - x2355 * x682 + x2356 * x597) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-300000.0 * sc[6] * x448 - x2353 * x685 + x2356 * x448) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[8] =
    90000000.0 * sc[1] * x1243 + 30000000.0 * sc[1] * x74 * x897 -
    30000000.0 * sc[1] * x74 * x908 + 48000000.0 * sc[2] * x897 -
    48000000.0 * sc[2] * x908 + 30000000.0 * sc[8] * x1472 -
    11000000.0 * sc[8] * x1636 - sc[8] * x234 - 40000000.0 * sc[8] * x725 +
    40000000.0 * sc[8] * x790 - 392000.0 * sc[8] * x897 +
    392000.0 * sc[8] * x908 + 8480000.0 * sc[8] * x923 -
    8480000.0 * sc[8] * x932 - 30000000.0 * sc[8] * x985 - x1007 * x2119 +
    x1007 * x562 + x1007 * x800 + x10236 + x10329 + x1036 * x923 -
    x1036 * x932 + x1243 * x36 + x129 * x756 - x129 * x779 + x1636 * x2194 +
    x1636 * x701 + x1879 * x2283 + x1879 * x2315 + x2028 * x923 - x2028 * x932 +
    x2073 * x725 - x2073 * x790 - x2086 * x897 + x2086 * x908 + x2119 * x937 -
    x2148 * x756 + x2148 * x779 + x2269 * x923 - x2269 * x932 + x2358 * x897 -
    x2358 * x908 + x2364 * x725 - x2364 * x790 + x318 - x562 * x937 -
    x742 * x897 + x742 * x908 + x752 * x756 - x752 * x779 - x756 * x97 +
    x779 * x97 - x800 * x937 + x8840 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1472 + x985) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[31] =
    sc[12] * x5470 + 40000000.0 * sc[14] * x1112 + sc[14] * x650 -
    120.0 * sc[17] * x1238 * x516 + sc[17] * x553 + sc[19] * x604 +
    30000000.0 * sc[1] * x1069 * x74 - 30000000.0 * sc[1] * x1526 * x74 +
    90000000.0 * sc[1] * x207 + sc[20] * x22 + 48000000.0 * sc[2] * x1069 -
    48000000.0 * sc[2] * x1526 + 8480000.0 * sc[8] * x1005 -
    392000.0 * sc[8] * x1069 - 8480000.0 * sc[8] * x1074 +
    392000.0 * sc[8] * x1526 - 30000000.0 * sc[8] * x1665 +
    30000000.0 * sc[8] * x1692 - 11000000.0 * sc[8] * x362 -
    40000000.0 * sc[8] * x926 + 40000000.0 * sc[8] * x936 +
    3200000000000000.0 * x10 * x2071 * x675 + x1005 * x1036 + x1005 * x2028 +
    x1005 * x2269 - 90000000.0 * x1025 + x10351 - x1036 * x1074 + x10373 -
    x1069 * x2086 + x1069 * x2358 - x1069 * x742 - x1074 * x2028 -
    x1074 * x2269 + x1181 - 90000000.0 * x1266 + x129 * x1560 - x129 * x423 -
    x1471 * x2119 + x1471 * x562 + x1471 * x800 + x1481 * x2119 - x1481 * x562 -
    x1481 * x800 + x1526 * x2086 - x1526 * x2358 + x1526 * x742 -
    x1560 * x2148 + x1560 * x752 - x1560 * x97 + 30000000.0 * x170 * x74 +
    x1700 * x2191 + x207 * x36 + x2073 * x926 - x2073 * x936 +
    9980000.0 * x2137 * x325 + x2148 * x423 + x2194 * x362 + x2283 * x609 +
    x2315 * x609 + x2364 * x926 - x2364 * x936 + x362 * x701 - x423 * x752 +
    x423 * x97 + x5486 + x8923 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1665 - x1692) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[54] =
    70000000.0 * sc[0] * x1482 - 70000000.0 * sc[0] * x961 +
    19.2 * sc[14] * exp(x2260) + 30000000.0 * sc[1] * x115 * x74 -
    30000000.0 * sc[1] * x1653 * x74 + 90000000.0 * sc[1] * x220 +
    sc[20] * x5637 - 11000000.0 * sc[8] * x1063 - 392000.0 * sc[8] * x115 -
    8480000.0 * sc[8] * x1633 + 392000.0 * sc[8] * x1653 -
    30000000.0 * sc[8] * x1753 + 30000000.0 * sc[8] * x1773 +
    8480000.0 * sc[8] * x824 - 40000000.0 * sc[8] * x968 +
    40000000.0 * sc[8] * x995 - 84300000.0 * sc[8] - x1036 * x1633 +
    x1036 * x824 + x10373 + x10396 + x1063 * x2194 + x1063 * x701 +
    x1081 * x129 - x1081 * x2148 + x1081 * x752 - x1081 * x97 - x115 * x2086 +
    x115 * x2358 - x115 * x742 - x129 * x1718 - x1482 * x2119 + x1482 * x562 +
    x1482 * x800 - x1633 * x2028 - x1633 * x2269 + x1653 * x2086 -
    x1653 * x2358 + x1653 * x742 + x1718 * x2148 - x1718 * x752 + x1718 * x97 +
    x2019 * x968 - x2019 * x995 + x2028 * x824 + x2073 * x968 - x2073 * x995 +
    x2119 * x961 + x220 * x36 + x2269 * x824 + x2283 * x624 + x2315 * x624 +
    x2364 * x968 - x2364 * x995 + x433 * x703 - x562 * x961 + x5639 -
    x800 * x961 + x8964 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1753 - x1773) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[77] =
    70000000.0 * sc[0] * x1535 - 70000000.0 * sc[0] * x1537 +
    90000000.0 * sc[1] * x1639 + 30000000.0 * sc[1] * x1654 * x74 -
    30000000.0 * sc[1] * x1685 * x74 + 48000000.0 * sc[2] * x1654 -
    48000000.0 * sc[2] * x1685 + 40000000.0 * sc[8] * x1000 -
    392000.0 * sc[8] * x1654 + 8480000.0 * sc[8] * x1656 -
    8480000.0 * sc[8] * x1672 + 392000.0 * sc[8] * x1685 -
    30000000.0 * sc[8] * x1822 + 30000000.0 * sc[8] * x1838 -
    11000000.0 * sc[8] * x185 - sc[8] * x7496 - sc[8] * x8306 -
    40000000.0 * sc[8] * x999 + sc[9] * x8243 - x1000 * x2019 - x1000 * x2073 -
    x1000 * x2364 + x1036 * x1656 - x1036 * x1672 + x10373 + x10418 -
    x129 * x1739 + x129 * x250 - x1535 * x2119 + x1535 * x562 + x1535 * x800 +
    x1537 * x2119 - x1537 * x562 - x1537 * x800 + x1639 * x36 - x1654 * x2086 +
    x1654 * x2358 - x1654 * x742 + x1656 * x2028 + x1656 * x2269 -
    x1672 * x2028 - x1672 * x2269 + x1685 * x2086 - x1685 * x2358 +
    x1685 * x742 + x1739 * x2148 - x1739 * x752 + x1739 * x97 + x185 * x2194 +
    x185 * x701 + x2019 * x999 + x2073 * x999 - x2148 * x250 + x2283 * x998 +
    x2315 * x998 + x2364 * x999 + x250 * x752 - x250 * x97 + x9006 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1822 - x1838) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[100] =
    70000000.0 * sc[0] * x1385 - 70000000.0 * sc[0] * x1563 + sc[12] * x8340 +
    sc[13] * x9074 + 30000000.0 * sc[1] * x1708 * x74 +
    90000000.0 * sc[1] * x1743 - 30000000.0 * sc[1] * x1745 * x74 +
    48000000.0 * sc[2] * x1708 - 48000000.0 * sc[2] * x1745 -
    40000000.0 * sc[8] * x1006 + 40000000.0 * sc[8] * x1008 +
    8480000.0 * sc[8] * x1686 - 392000.0 * sc[8] * x1708 +
    392000.0 * sc[8] * x1745 - 30000000.0 * sc[8] * x1824 +
    30000000.0 * sc[8] * x1887 - 11000000.0 * sc[8] * x1981 -
    8480000.0 * sc[8] * x548 + x1006 * x2019 + x1006 * x2073 + x1006 * x2364 -
    x1008 * x2019 - x1008 * x2073 - x1008 * x2364 + x1036 * x1686 -
    x1036 * x548 + x10373 + x10441 - x129 * x1759 + x129 * x1780 -
    x1385 * x2119 + x1385 * x562 + x1385 * x800 + x1563 * x2119 - x1563 * x562 -
    x1563 * x800 + x1678 * x2283 + x1678 * x2315 + x1686 * x2028 +
    x1686 * x2269 - x1708 * x2086 + x1708 * x2358 - x1708 * x742 + x1743 * x36 +
    x1745 * x2086 - x1745 * x2358 + x1745 * x742 + x1759 * x2148 -
    x1759 * x752 + x1759 * x97 - x1780 * x2148 + x1780 * x752 - x1780 * x97 +
    x1981 * x2194 + x1981 * x701 - x2028 * x548 - x2269 * x548 +
    13400000.0 * x433 * x630 + x9014 + x9112 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1824 - x1887) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[123] =
    30000000.0 * sc[1] * x1747 * x74 - 30000000.0 * sc[1] * x1748 * x74 +
    90000000.0 * sc[1] * x1763 + 48000000.0 * sc[2] * x1747 -
    48000000.0 * sc[2] * x1748 - 40000000.0 * sc[8] * x1039 +
    40000000.0 * sc[8] * x1042 - 392000.0 * sc[8] * x1747 +
    392000.0 * sc[8] * x1748 + 8480000.0 * sc[8] * x1750 -
    8480000.0 * sc[8] * x1751 - 11000000.0 * sc[8] * x1880 -
    30000000.0 * sc[8] * x1956 + 30000000.0 * sc[8] * x1973 +
    3200000000000000.0 * sc[8] * x265 * x572 * x843 - sc[8] * x9113 -
    1.61333333333333e+66 * x10238 * x1569 - x10251 * x10455 -
    2.562e+47 * x10256 + x10265 * x10464 -
    3.54e+38 * x10273 * x10283 * (12.0 * x10288 * x693 + 1.68 * x10289 * x693) +
    3.54e+38 * x10273 * x10286 * (12.0 * x10288 * x693 + 1.68 * x10289 * x693) -
    1.77333962264151e+67 * x10279 + 2.124e+39 * x10283 - 2.124e+39 * x10286 -
    x10308 * x10464 + x10312 * x10455 + 1.77333962264151e+67 * x10315 +
    4.375896e+86 * x10317 + 1.61333333333333e+66 * x10320 + x10328 +
    x1036 * x1750 - x1036 * x1751 + x1039 * x2073 + x1039 * x2364 -
    x1042 * x2073 - x1042 * x2364 + x10480 + x129 * x1760 - x129 * x1844 +
    1.32e+37 * x1299 * x2369 + x1320 * x2119 - x1320 * x562 - x1320 * x800 -
    4.375896e+86 * x139 * x1495 + 2.562e+47 * x1499 * x734 - 1.92e+16 * x1539 -
    x1564 * x2119 + x1564 * x562 + x1564 * x800 - 2.4576e+21 * x1631 * x574 -
    x1747 * x2086 + x1747 * x2358 - x1747 * x742 + x1748 * x2086 -
    x1748 * x2358 + x1748 * x742 + x1750 * x2028 + x1750 * x2269 -
    x1751 * x2028 - x1751 * x2269 - x1760 * x2148 + x1760 * x752 - x1760 * x97 +
    x1763 * x36 + x1844 * x2148 - x1844 * x752 + x1844 * x97 + x1871 * x2283 +
    x1871 * x2315 + x1880 * x2194 + x1880 * x701 -
    3200000000000000.0 * x2071 * x265 * x675 * x854 -
    1.32e+37 * x2369 * x578 * x821 + 1.92e+16 * x443 +
    2.4576e+21 * x574 * x575 + x5988 + x9180 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1956 - x1973) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[146] =
    -70000000.0 * sc[0] * x1440 + 70000000.0 * sc[0] * x921 +
    30000000.0 * sc[1] * x1755 * x74 + 90000000.0 * sc[1] * x1826 -
    30000000.0 * sc[1] * x227 * x74 - 40000000.0 * sc[8] * x1043 +
    40000000.0 * sc[8] * x1045 - 392000.0 * sc[8] * x1755 +
    8480000.0 * sc[8] * x1756 - 8480000.0 * sc[8] * x1768 -
    11000000.0 * sc[8] * x1977 - 30000000.0 * sc[8] * x2014 +
    30000000.0 * sc[8] * x2032 + 392000.0 * sc[8] * x227 - 14400000.0 * sc[8] +
    sc[9] * x377 + x1036 * x1756 - x1036 * x1768 + x10373 + x1043 * x2019 +
    x1043 * x2073 + x1043 * x2364 - x1045 * x2019 - x1045 * x2073 -
    x1045 * x2364 + x10503 + x129 * x1865 - x129 * x1867 + x1408 * x2283 +
    x1408 * x2315 + x1440 * x2119 - x1440 * x562 - x1440 * x800 -
    x1755 * x2086 + x1755 * x2358 - x1755 * x742 + x1756 * x2028 +
    x1756 * x2269 - x1768 * x2028 - x1768 * x2269 + x1826 * x36 -
    x1865 * x2148 + x1865 * x752 - x1865 * x97 + x1867 * x2148 - x1867 * x752 +
    x1867 * x97 + x1977 * x2194 + x1977 * x701 + x2086 * x227 - x2119 * x921 -
    x227 * x2358 + x227 * x742 + x562 * x921 + x6035 + x800 * x921 + x9233 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x2014 - x2032) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[169] =
    70000000.0 * sc[0] * x1580 - 70000000.0 * sc[0] * x476 +
    30000000.0 * sc[1] * x1767 * x74 - 30000000.0 * sc[1] * x1812 * x74 +
    32000000.0 * sc[1] * x1885 + 90000000.0 * sc[1] * x1896 -
    40000000.0 * sc[8] * x1051 + 40000000.0 * sc[8] * x1052 -
    392000.0 * sc[8] * x1767 + 8480000.0 * sc[8] * x1770 -
    8480000.0 * sc[8] * x1772 + 392000.0 * sc[8] * x1812 -
    30000000.0 * sc[8] * x2070 + 30000000.0 * sc[8] * x2087 + x1036 * x1770 -
    x1036 * x1772 + x10372 + x1051 * x2019 + x1051 * x2073 + x1051 * x2253 +
    x1051 * x2364 - x1052 * x2019 - x1052 * x2073 - x1052 * x2253 -
    x1052 * x2364 + x10527 + x10529 - x129 * x1875 + x129 * x1891 -
    x1580 * x2119 + x1580 * x2259 + x1580 * x562 + x1580 * x800 -
    x1767 * x2086 + x1767 * x2358 - x1767 * x742 + x1770 * x2028 +
    x1770 * x2269 - x1772 * x2028 - x1772 * x2269 + x1812 * x2086 -
    x1812 * x2358 + x1812 * x742 + x1875 * x2148 - x1875 * x752 + x1875 * x97 +
    x1885 * x2283 - x1891 * x2148 + x1891 * x752 - x1891 * x97 + x1896 * x36 +
    x2009 * x701 + x2119 * x476 - x2259 * x476 - x476 * x562 - x476 * x800 +
    x5498 + x6115 + x9265 - x9993 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x2070 - x2087) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[192] =
    -sc[0] * x234 - sc[15] * x10564 - 50000000.0 * sc[16] - sc[19] * x10533 +
    90000000.0 * sc[1] * x1240 + 30000000.0 * sc[1] * x1813 * x74 -
    30000000.0 * sc[1] * x1833 * x74 - sc[20] * x10536 +
    48000000.0 * sc[2] * x1813 - 48000000.0 * sc[2] * x1833 -
    84300000.0 * sc[2] - sc[3] * x7496 - sc[3] * x8306 - sc[5] * x9113 -
    14400000.0 * sc[6] - 7.08e+38 * sc[8] * x10 * x10285 -
    40000000.0 * sc[8] * x1056 + 40000000.0 * sc[8] * x1059 +
    8480000.0 * sc[8] * x1779 - 8480000.0 * sc[8] * x1782 -
    392000.0 * sc[8] * x1813 + 392000.0 * sc[8] * x1833 -
    30000000.0 * sc[8] * x2080 + 30000000.0 * sc[8] * x2141 -
    11000000.0 * sc[8] * x339 -
    19960000.0 * sc[8] * exp(-5334.0966575300299 * invT + 0.1 * tc[0]) -
    9.84 * sc[8] * exp(-g_RT_qss[1] - x1124 + x2363) -
    64000000.0 * sc[8] * exp(-g_RT_qss[2] + 286.83349950869001 * invT - x1124) -
    x10014 + x1036 * x1779 - x1036 * x1782 + x10373 - x10540 + x1056 * x2073 +
    x1056 * x2364 + x10573 + x10578 + x10580 - x1059 * x2073 - x1059 * x2364 +
    x129 * x1881 - x129 * x1960 + 11000000.0 * x1340 - x135 + x1641 * x2283 +
    x1641 * x2315 - x170 * x2075 - 392000.0 * x170 + x1779 * x2028 +
    x1779 * x2269 - x1782 * x2028 - x1782 * x2269 - x1813 * x2086 -
    x1813 * x742 + x1833 * x2086 + x1833 * x742 - x1881 * x2148 + x1881 * x752 -
    x1881 * x97 + x1960 * x2148 - x1960 * x752 + x1960 * x97 -
    12000000.0 * x2117 * x595 + x2119 * x315 - x2119 * x789 - x2139 * x325 +
    x2194 * x339 - x2261 * x578 - x315 * x562 - x315 * x800 -
    40000000.0 * x325 * x378 - 90000000.0 * x479 * x578 - x510 + x562 * x789 -
    3200000000000000.0 * x572 * x843 - 8480000.0 * x578 - x6208 + x6241 -
    30000000.0 * x674 - 40000000.0 * x675 + 11000000.0 * x766 + x789 * x800 +
    x9334 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x2080 - x2141) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[215] =
    8480000.0 * sc[10] * x1268 + 392000.0 * sc[13] * x1195 + sc[19] * x10581 -
    30000000.0 * sc[1] * x1825 * x74 + 30000000.0 * sc[1] * x1841 * x74 +
    90000000.0 * sc[1] * x858 + 11000000.0 * sc[20] * x1333 -
    48000000.0 * sc[2] * x1825 + 48000000.0 * sc[2] * x1841 + sc[3] * x8243 +
    sc[6] * x377 - 40000000.0 * sc[8] * x1060 + 40000000.0 * sc[8] * x1062 -
    8480000.0 * sc[8] * x1742 + 8480000.0 * sc[8] * x1787 +
    392000.0 * sc[8] * x1825 - 392000.0 * sc[8] * x1841 -
    11000000.0 * sc[8] * x2010 + 30000000.0 * sc[8] * x2186 -
    30000000.0 * sc[8] * x649 + x10329 - x1036 * x1742 + x1036 * x1787 +
    x1060 * x2073 + x1060 * x2364 + x10613 - x1062 * x2073 - x1062 * x2364 +
    x1149 * x2119 - x1149 * x562 - x1149 * x800 + x129 * x1961 - x129 * x1962 +
    x1433 + x170 * x2357 - x1742 * x2028 - x1742 * x2269 + x1787 * x2028 +
    x1787 * x2269 + x1825 * x2086 - x1825 * x2358 + x1825 * x742 -
    x1841 * x2086 + x1841 * x2358 - x1841 * x742 - x1961 * x2148 +
    x1961 * x752 - x1961 * x97 + x1962 * x2148 - x1962 * x752 + x1962 * x97 +
    x2010 * x2194 + x2010 * x701 + 32000000.0 * x2117 * x595 - x2119 * x646 +
    x2283 * x634 + x2315 * x634 + x325 * x746 + x36 * x858 + x562 * x646 +
    x6320 + x646 * x800 + 4.92 * x675 * exp(x2363) + x9335 + x9379 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x2186 + x649) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[238] =
    sc[14] * x10617 + 90000000.0 * sc[1] * x174 +
    30000000.0 * sc[1] * x1830 * x74 - 30000000.0 * sc[1] * x1831 * x74 -
    sc[20] * x10247 * x1154 + sc[8] * x10247 * x135 -
    40000000.0 * sc[8] * x1064 + 40000000.0 * sc[8] * x1071 +
    8480000.0 * sc[8] * x1676 - 8480000.0 * sc[8] * x1741 -
    392000.0 * sc[8] * x1830 + 392000.0 * sc[8] * x1831 -
    11000000.0 * sc[8] * x2011 + 30000000.0 * sc[8] * x2271 +
    sc[8] * x510 * x514 - 30000000.0 * sc[8] * x946 +
    8480000.0 * sc[9] * x1268 - 2.2e+36 * x10 * x10241 * x514 -
    4.0333333333333298e+65 * x10238 * x1569 + 3.3e+36 * x10241 -
    6.405e+46 * x10256 -
    3.54e+38 * x10273 * x10283 * (3.0 * x10288 * x693 + 0.42 * x10289 * x693) +
    3.54e+38 * x10273 * x10286 * (3.0 * x10288 * x693 + 0.42 * x10289 * x693) -
    3.3e+36 * x10274 - 4.4333490566037699e+66 * x10279 + 5.31e+38 * x10283 -
    5.31e+38 * x10286 + 4.4333490566037699e+66 * x10315 +
    1.093974e+86 * x10317 + 4.0333333333333298e+65 * x10320 + x10328 +
    x1036 * x1676 - x1036 * x1741 + x1037 * x2119 - x1037 * x562 -
    x1037 * x800 + x1058 * (0.42 * x316 + 3.0 * x642) + x1064 * x2073 +
    x1064 * x2364 + x10660 - x1071 * x2073 - x1071 * x2364 + x129 * x1968 -
    x129 * x1969 - 1.093974e+86 * x139 * x1495 + 6.405e+46 * x1499 * x734 -
    4800000000000000.0 * x1539 - x1590 * x2119 + x1590 * x562 + x1590 * x800 -
    6.144e+20 * x1631 * x574 + x1676 * x2028 + x1676 * x2269 - x1741 * x2028 -
    x1741 * x2269 - x1830 * x2086 + x1830 * x2358 - x1830 * x742 +
    x1831 * x2086 - x1831 * x2358 + x1831 * x742 - x1968 * x2148 +
    x1968 * x752 - x1968 * x97 + x1969 * x2148 - x1969 * x752 + x1969 * x97 +
    x2011 * x2194 + x2011 * x701 + x2283 * x722 + x2315 * x722 +
    4800000000000000.0 * x443 + 6.144e+20 * x574 * x575 + x6206 + x6464 -
    x788 * (0.42 * x316 + 3.0 * x642) + x9431 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x2271 + x946) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[261] =
    refC * x489 * x774 - 30000000.0 * sc[1] * x1877 * x74 +
    30000000.0 * sc[1] * x74 * x896 + 90000000.0 * sc[1] * x858 -
    48000000.0 * sc[2] * x1877 + 48000000.0 * sc[2] * x896 -
    40000000.0 * sc[8] * x1072 + 40000000.0 * sc[8] * x1073 -
    30000000.0 * sc[8] * x1480 + 8480000.0 * sc[8] * x1749 -
    8480000.0 * sc[8] * x1814 + 392000.0 * sc[8] * x1877 +
    30000000.0 * sc[8] * x2323 - 11000000.0 * sc[8] * x774 -
    392000.0 * sc[8] * x896 + x10329 + x1036 * x1749 - x1036 * x1814 +
    x1047 * x2119 - x1047 * x562 - x1047 * x800 + x10683 + x1072 * x2073 +
    x1072 * x2364 - x1073 * x2073 - x1073 * x2364 - x129 * x1970 + x129 * x755 +
    x1683 + x1749 * x2028 + x1749 * x2269 - x1814 * x2028 - x1814 * x2269 +
    x1877 * x2086 - x1877 * x2358 + x1877 * x742 + x1970 * x2148 -
    x1970 * x752 + x1970 * x97 - x2086 * x896 - x2119 * x963 - x2148 * x755 +
    x2194 * x774 + x2283 * x634 + x2315 * x634 + x2358 * x896 + x36 * x858 +
    x562 * x963 - x742 * x896 + x752 * x755 - x755 * x97 + x800 * x963 + x9468 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1480 - x2323) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[284] =
    70000000.0 * sc[0] * x1640 - 70000000.0 * sc[0] * x1659 +
    30000000.0 * sc[1] * x1886 * x74 - 30000000.0 * sc[1] * x1897 * x74 +
    90000000.0 * sc[1] * x229 + sc[1] * x5470 + 48000000.0 * sc[2] * x1886 -
    48000000.0 * sc[2] * x1897 + sc[4] * x8340 - 40000000.0 * sc[8] * x1075 -
    30000000.0 * sc[8] * x1453 - 11000000.0 * sc[8] * x1554 +
    8480000.0 * sc[8] * x1818 - 8480000.0 * sc[8] * x1819 -
    392000.0 * sc[8] * x1886 + 392000.0 * sc[8] * x1897 +
    30000000.0 * sc[8] * x2360 + 40000000.0 * sc[8] * x671 + x1036 * x1818 -
    x1036 * x1819 + x10373 + x10708 + x1075 * x2019 + x1075 * x2073 +
    x1075 * x2364 + x129 * x1971 - x129 * x1979 + x1533 * x2283 +
    x1533 * x2315 + x1554 * x2194 + x1554 * x701 - x1640 * x2119 +
    x1640 * x562 + x1640 * x800 + x1659 * x2119 - x1659 * x562 - x1659 * x800 +
    x1818 * x2028 + x1818 * x2269 - x1819 * x2028 - x1819 * x2269 -
    x1886 * x2086 + x1886 * x2358 - x1886 * x742 + x1897 * x2086 -
    x1897 * x2358 + x1897 * x742 - x1971 * x2148 + x1971 * x752 - x1971 * x97 +
    x1979 * x2148 - x1979 * x752 + x1979 * x97 - x2019 * x671 - x2073 * x671 +
    x229 * x36 - x2364 * x671 + x9503 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x1453 - x2360) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[307] =
    30000000.0 * sc[1] * x1860 * x74 + 48000000.0 * sc[2] * x1860 -
    48000000.0 * sc[2] * x1862 + sc[4] * x9074 + 30000000.0 * sc[8] * x1035 -
    40000000.0 * sc[8] * x1078 + 40000000.0 * sc[8] * x1080 +
    8480000.0 * sc[8] * x1821 - 8480000.0 * sc[8] * x1823 -
    392000.0 * sc[8] * x1860 - 30000000.0 * sc[8] * x809 +
    392000.0 * sc[9] * x1195 - x10324 * x3 + x1036 * x1821 - x1036 * x1823 +
    x10529 + x10732 + x1078 * x2073 + x1078 * x2364 - x1080 * x2073 -
    x1080 * x2364 + x129 * x1987 + x1543 - x1663 * x2119 + x1663 * x562 +
    x1663 * x800 + x1664 * x2119 - x1664 * x562 - x1664 * x800 + x1821 * x2028 +
    x1821 * x2269 - x1823 * x2028 - x1823 * x2269 - x1860 * x2086 +
    x1860 * x2358 - x1860 * x742 - x1862 * x2358 - x1884 * x752 -
    x1987 * x2148 + x1987 * x752 - x1987 * x97 + x2009 * x701 + x36 * x482 +
    x437 + x9569 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1035 + x809) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[330] =
    70000000.0 * sc[0] * x1670 - 70000000.0 * sc[0] * x1679 + sc[10] * x10617 +
    40000000.0 * sc[1] * x1112 + 30000000.0 * sc[1] * x1872 * x74 +
    sc[1] * x650 + 19.2 * sc[2] * exp(x2260) - 40000000.0 * sc[8] * x1083 +
    40000000.0 * sc[8] * x1084 + 30000000.0 * sc[8] * x1118 -
    30000000.0 * sc[8] * x1205 + 8480000.0 * sc[8] * x1828 -
    8480000.0 * sc[8] * x1834 - 392000.0 * sc[8] * x1872 -
    11000000.0 * sc[8] * x374 + x10243 + x10259 + x10328 + x1036 * x1828 -
    x1036 * x1834 + x1083 * x2019 + x1083 * x2073 + x1083 * x2364 -
    x1084 * x2019 - x1084 * x2073 - x1084 * x2364 + x129 * x1947 -
    x1670 * x2119 + x1670 * x562 + x1670 * x800 + x1679 * x2119 - x1679 * x562 -
    x1679 * x800 + x1828 * x2028 + x1828 * x2269 - x1834 * x2028 -
    x1834 * x2269 - x1872 * x2086 - x1872 * x742 - x1884 * x752 -
    x1947 * x2148 + x1947 * x752 - x1947 * x97 + x2194 * x374 + x36 * x482 +
    x437 + x613 + x9599 + x992 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1118 + x1205) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[353] =
    70000000.0 * sc[0] * x1680 - 70000000.0 * sc[0] * x1688 -
    30000000.0 * sc[1] * x1925 * x74 + 30000000.0 * sc[1] * x502 * x74 -
    48000000.0 * sc[2] * x1925 + 48000000.0 * sc[2] * x502 - sc[8] * x10564 -
    40000000.0 * sc[8] * x1085 + 40000000.0 * sc[8] * x1086 -
    11000000.0 * sc[8] * x1716 + 8480000.0 * sc[8] * x1835 -
    8480000.0 * sc[8] * x1836 + 392000.0 * sc[8] * x1925 -
    30000000.0 * sc[8] * x216 - 392000.0 * sc[8] * x502 +
    30000000.0 * sc[8] * x894 + 4.92 * sc[9] * x1085 * exp(x2363) +
    3.54e+38 * x10282 * x843 + x10328 + x1036 * x1835 - x1036 * x1836 + x10806 +
    x1085 * x2019 + x1085 * x2073 - x1086 * x2019 - x1086 * x2073 -
    x1086 * x2364 + x129 * x1837 - x129 * x1882 - x1680 * x2119 + x1680 * x562 +
    x1680 * x800 + x1688 * x2119 - x1688 * x562 - x1688 * x800 + x1716 * x2194 +
    x1716 * x701 + x1835 * x2028 + x1835 * x2269 - x1836 * x2028 -
    x1836 * x2269 - x1837 * x2148 + x1837 * x752 - x1837 * x97 + x1882 * x2148 -
    x1882 * x752 + x1882 * x97 + x1925 * x2086 - x1925 * x2358 + x1925 * x742 -
    x2086 * x502 + x2358 * x502 + x36 * x482 - x502 * x742 + x544 +
    40000000.0 * x595 * exp(276.769166192596 * invT) + x613 + x9635 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (x216 - x894) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[376] =
    70000000.0 * sc[0] * x1689 - 70000000.0 * sc[0] * x1707 +
    30000000.0 * sc[1] * x1932 * x74 + 48000000.0 * sc[2] * x1932 +
    16040000.0 * sc[2] * x731 + 30000000.0 * sc[8] * x1070 -
    40000000.0 * sc[8] * x1087 + 40000000.0 * sc[8] * x1088 -
    8480000.0 * sc[8] * x1815 - 392000.0 * sc[8] * x1932 -
    30000000.0 * sc[8] * x955 - 50000000.0 * sc[8] - x1036 * x1815 + x10819 +
    x10826 + x10829 + x10832 + x10839 + x10848 + x1087 * x2019 + x1087 * x2073 +
    x1087 * x2253 + x1087 * x2364 - x1088 * x2019 - x1088 * x2073 -
    x1088 * x2253 - x1088 * x2364 - x1689 * x2119 + x1689 * x2259 +
    x1689 * x562 + x1689 * x800 - x1707 * x2259 - x1815 * x2028 -
    x1815 * x2269 + x1815 * x2359 - x1932 * x2086 + x1932 * x2358 -
    x1932 * x742 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1070 + x955) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[399] =
    70000000.0 * sc[0] * x1625 - 120.0 * sc[1] * x1238 * x516 +
    30000000.0 * sc[1] * x183 * x74 + sc[1] * x553 + 90000000.0 * sc[1] * x837 +
    48000000.0 * sc[2] * x183 + 16040000.0 * sc[2] * x731 -
    40000000.0 * sc[8] * x1089 - 8480000.0 * sc[8] * x1817 -
    392000.0 * sc[8] * x183 - 30000000.0 * sc[8] * x958 - x1036 * x1817 +
    x10529 + x10829 + x10832 + x10839 + x10846 + x10859 + x10861 +
    x1089 * x2019 + x1089 * x2073 + x1089 * x2253 + x1089 * x2364 -
    x1625 * x2119 + x1625 * x2259 + x1625 * x562 + x1625 * x800 -
    x1817 * x2028 - x1817 * x2269 + x1817 * x2359 - x183 * x2086 +
    x183 * x2358 - x183 * x742 + x341 + x36 * x837 + x81 + x9707 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1668 + x958) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[422] =
    70000000.0 * sc[0] * x1018 + 90000000.0 * sc[1] * x1265 +
    30000000.0 * sc[1] * x233 * x74 + 16040000.0 * sc[2] * x1958 +
    48000000.0 * sc[2] * x233 + 24000000.0 * sc[6] * x1958 -
    40000000.0 * sc[8] * x1141 - 30000000.0 * sc[8] * x1694 -
    8480000.0 * sc[8] * x1863 - 392000.0 * sc[8] * x233 - x1018 * x2119 +
    x1018 * x2259 + x1018 * x562 + x1018 * x800 - x1036 * x1863 + x10529 +
    x10829 + x10832 + x10836 + x10848 + x10859 + x1141 * x2019 + x1141 * x2073 +
    x1141 * x2253 + x1141 * x2364 + x1265 * x36 + x129 * x1958 +
    2.2e+36 * x1298 * x2369 * x843 - x1863 * x2028 - x1863 * x2269 +
    x1863 * x2359 - x1958 * x2148 + x1958 * x752 - x1958 * x97 - x2086 * x233 +
    x233 * x2358 - x233 * x742 + x341 + x81 + x9707 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1668 + x1694) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[445] =
    70000000.0 * sc[0] * x1729 - 70000000.0 * sc[0] * x262 +
    32000000.0 * sc[1] * x1885 + 30000000.0 * sc[1] * x1946 * x74 +
    sc[1] * x604 + 48000000.0 * sc[2] * x1946 + 30000000.0 * sc[8] * x1009 -
    sc[8] * x10533 - 30000000.0 * sc[8] * x1057 - 40000000.0 * sc[8] * x1161 +
    40000000.0 * sc[8] * x1167 + 8480000.0 * sc[8] * x1870 -
    8480000.0 * sc[8] * x1873 - 392000.0 * sc[8] * x1946 + sc[9] * x10581 +
    x10326 * x3 + x1036 * x1870 - x1036 * x1873 + x10819 + x10826 + x10836 +
    x10846 + x10892 + x1161 * x2019 + x1161 * x2073 + x1161 * x2253 +
    x1161 * x2364 - x1167 * x2019 - x1167 * x2073 - x1167 * x2253 -
    x1167 * x2364 + x129 * x655 - x1729 * x2119 + x1729 * x2259 + x1729 * x562 +
    x1729 * x800 + x1870 * x2028 + x1870 * x2269 - x1873 * x2028 -
    x1873 * x2269 - x1946 * x2086 + x1946 * x2358 - x1946 * x742 +
    x2119 * x262 - x2148 * x655 - x2259 * x262 - x262 * x562 - x262 * x800 +
    x5498 + x655 * x752 - x655 * x97 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1009 + x1057) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[468] =
    70000000.0 * sc[0] * x1675 + 90000000.0 * sc[1] * x1896 +
    30000000.0 * sc[1] * x1949 * x74 + sc[1] * x22 +
    48000000.0 * sc[2] * x1949 + 16040000.0 * sc[2] * x1966 + sc[2] * x5637 +
    24000000.0 * sc[6] * x1966 - sc[8] * x10536 - 11000000.0 * sc[8] * x1339 -
    40000000.0 * sc[8] * x1443 - 8480000.0 * sc[8] * x1874 -
    392000.0 * sc[8] * x1949 - 30000000.0 * sc[8] * x784 +
    11000000.0 * sc[9] * x1333 + x10328 - x1036 * x1874 + x10819 + x10829 +
    x10832 + x10836 + x10859 + x10861 + x1154 + x129 * x1966 + x1339 * x2194 +
    x1339 * x701 + x1443 * x2019 + x1443 * x2073 + x1443 * x2253 +
    x1443 * x2364 - x1675 * x2119 + x1675 * x2259 + x1675 * x562 +
    x1675 * x800 - x1874 * x2028 - x1874 * x2269 + x1874 * x2359 -
    x1937 * x2358 - x1949 * x2086 + x1949 * x2358 - x1949 * x742 -
    x1966 * x2148 + x1966 * x752 - x1966 * x97 + x81 + x9707 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x1668 + x784) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[491] =
    30000000.0 * sc[1] * x1788 * x74 + 48000000.0 * sc[2] * x1788 +
    16040000.0 * sc[2] * x731 - 40000000.0 * sc[8] * x1444 +
    40000000.0 * sc[8] * x1445 - 392000.0 * sc[8] * x1788 -
    8480000.0 * sc[8] * x1876 + 30000000.0 * sc[8] * x647 -
    30000000.0 * sc[8] * x669 - x1036 * x1876 + x10819 + x10826 + x10829 +
    x10832 + x10839 + x10846 + x1444 * x2073 + x1444 * x2364 - x1445 * x2073 -
    x1445 * x2364 - x1752 * x2119 + x1752 * x562 + x1752 * x800 +
    x1757 * x2119 - x1757 * x562 - x1757 * x800 - x1788 * x2086 +
    x1788 * x2358 - x1788 * x742 - x1876 * x2028 - x1876 * x2269 +
    x1876 * x2359 + x7295 + x9804 +
    (70000000.0 * sc[0] * x678 - 30000000.0 * sc[1] * x683 * x74 -
     48000000.0 * sc[2] * x683 - 40000000.0 * sc[8] * x677 -
     8480000.0 * sc[8] * x680 + 392000.0 * sc[8] * x683 - x1036 * x680 +
     x2019 * x677 - x2028 * x680 + x2073 * x677 + x2086 * x683 - x2119 * x678 +
     x2253 * x677 + x2259 * x678 - x2269 * x680 - x2358 * x683 + x2359 * x680 +
     x2364 * x677 + x562 * x678 + x678 * x800 + x683 * x742) *
      (-x647 + x669) +
    (70000000.0 * sc[0] * x679 + 30000000.0 * sc[1] * x684 * x74 +
     48000000.0 * sc[2] * x684 - 8480000.0 * sc[8] * x681 -
     392000.0 * sc[8] * x684 - x1036 * x681 - x2028 * x681 - x2086 * x684 -
     x2119 * x679 + x2259 * x679 - x2269 * x681 + x2358 * x684 + x2359 * x681 +
     x562 * x679 + x679 * x800 - x684 * x742) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-90000000.0 * sc[1] * x231 - x231 * x36) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (11000000.0 * sc[8] * x376 - x2194 * x376 - x376 * x701) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-32000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     24000000.0 * sc[6] * x597 - 8480000.0 * sc[8] * x682 - x1036 * x682 -
     x129 * x597 - x2028 * x682 + x2148 * x597 - x2269 * x682 - x2283 * x637 -
     x2315 * x637 + x2359 * x682 - x597 * x752 + x597 * x97) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-90000000.0 * sc[1] * x483 + 30000000.0 * sc[1] * x685 * x74 -
     16040000.0 * sc[2] * x448 + 48000000.0 * sc[2] * x685 -
     24000000.0 * sc[6] * x448 - 392000.0 * sc[8] * x685 - x129 * x448 -
     x2086 * x685 + x2148 * x448 + x2358 * x685 - x36 * x483 - x448 * x752 +
     x448 * x97 - x685 * x742) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[9] = 50000000.0 * sc[14] * x1007 - 50000000.0 * sc[14] * x937 +
         11000000.0 * sc[8] * x1636 + sc[8] * x234 + 392000.0 * sc[8] * x897 -
         392000.0 * sc[8] * x908 - 8480000.0 * sc[8] * x923 +
         8480000.0 * sc[8] * x932 + 60000000.0 * sc[9] * x1472 -
         60000000.0 * sc[9] * x985 - x1007 * x626 + x1263 - x2122 * x708 -
         x2358 * x897 + x2358 * x908 + x2359 * x923 - x2359 * x932 +
         x626 * x937 - x706 * x725 + x706 * x790 - x708 * x716 - x752 * x756 +
         x752 * x779 +
         (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
          392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
          x677 * x706) *
           (-x1472 + x985) +
         (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
          392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
          x626 * x679 + x660 * x716) *
           (x725 - x790 + (x677) * (-x1472 + x985)) +
         (x2122 * x67 + x67 * x716) *
           (x897 - x908 + (-x683) * (-x1472 + x985) +
            (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
            (x685) *
              (-x923 + x932 + (x680) * (-x1472 + x985) +
               (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
               (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                         (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
         (-11000000.0 * sc[8] * x376) *
           (x756 - x779 +
            (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
            (-x448) *
              (-x923 + x932 + (x680) * (-x1472 + x985) +
               (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
               (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                         (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
         (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
          x640 * x716) *
           (x1007 - x937 + (x678) * (-x1472 + x985) +
            (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
         (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
           (-x923 + x932 + (x680) * (-x1472 + x985) +
            (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
            (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                      (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[32] = 60000000.0 * sc[14] * x1449 + 50000000.0 * sc[14] * x1471 -
          50000000.0 * sc[14] * x1481 + 20000000.0 * sc[19] * x2351 +
          2.477e+21 * sc[8] * x10 * x1594 * exp(x994) -
          8480000.0 * sc[8] * x1005 + 392000.0 * sc[8] * x1069 +
          8480000.0 * sc[8] * x1074 - 392000.0 * sc[8] * x1526 +
          11000000.0 * sc[8] * x362 - 60000000.0 * sc[9] * x1665 +
          60000000.0 * sc[9] * x1692 + x1005 * x2359 - x1069 * x2358 -
          x1074 * x2359 - x1181 - x1471 * x626 + x1481 * x626 + x1526 * x2358 -
          x1560 * x752 - x1650 * x2122 - x1650 * x716 + x423 * x752 + x5495 -
          x706 * x926 + x706 * x936 +
          (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
           392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
           x677 * x706) *
            (x1665 - x1692) +
          (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
           392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 -
           x2359 * x681 - x626 * x679 + x660 * x716) *
            (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x2122 * x67 + x67 * x716) *
            (x1069 - x1526 + (-x683) * (x1665 - x1692) +
             (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x685) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (-11000000.0 * sc[8] * x376) *
            (x1560 - x423 +
             (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                        (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
             (-x448) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 +
           x597 * x752 + x640 * x716) *
            (x1471 - x1481 + (x678) * (x1665 - x1692) +
             (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
          (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
            (-x1005 + x1074 + (x680) * (x1665 - x1692) +
             (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[55] = 50000000.0 * sc[14] * x1482 - 50000000.0 * sc[14] * x961 +
          11000000.0 * sc[8] * x1063 + 392000.0 * sc[8] * x115 +
          8480000.0 * sc[8] * x1633 - 392000.0 * sc[8] * x1653 -
          8480000.0 * sc[8] * x824 - 60000000.0 * sc[9] * x1753 +
          60000000.0 * sc[9] * x1773 - sc[9] * x7396 - x1 * x2122 - x1 * x716 -
          x1081 * x752 - x115 * x2358 - x1482 * x626 - x1633 * x2359 +
          x1653 * x2358 + x1718 * x752 + x2359 * x824 + x5495 + x626 * x961 -
          x706 * x968 + x706 * x995 +
          (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
           392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
           x677 * x706) *
            (x1753 - x1773) +
          (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
           392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 -
           x2359 * x681 - x626 * x679 + x660 * x716) *
            (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x2122 * x67 + x67 * x716) *
            (x115 - x1653 + (-x683) * (x1753 - x1773) +
             (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x685) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (-11000000.0 * sc[8] * x376) *
            (x1081 - x1718 +
             (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                        (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
             (-x448) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 +
           x597 * x752 + x640 * x716) *
            (x1482 - x961 + (x678) * (x1753 - x1773) +
             (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
          (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
            (x1633 - x824 + (x680) * (x1753 - x1773) +
             (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[78] =
    50000000.0 * sc[14] * x1535 - 50000000.0 * sc[14] * x1537 +
    392000.0 * sc[8] * x1654 - 8480000.0 * sc[8] * x1656 +
    8480000.0 * sc[8] * x1672 - 392000.0 * sc[8] * x1685 +
    11000000.0 * sc[8] * x185 - 60000000.0 * sc[9] * x1822 +
    60000000.0 * sc[9] * x1838 - sc[9] * x8243 + x1000 * x706 - x1535 * x626 +
    x1537 * x626 - x1654 * x2358 + x1656 * x2359 - x1672 * x2359 +
    x1685 * x2358 + x1739 * x752 - x2122 * x659 - x250 * x752 + x5495 -
    x659 * x716 - x706 * x999 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x1822 - x1838) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (x2122 * x67 + x67 * x716) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[101] =
    50000000.0 * sc[14] * x1385 - 50000000.0 * sc[14] * x1563 -
    8480000.0 * sc[8] * x1686 + 392000.0 * sc[8] * x1708 -
    392000.0 * sc[8] * x1745 + 11000000.0 * sc[8] * x1981 +
    8480000.0 * sc[8] * x548 + sc[8] * x7525 - 60000000.0 * sc[9] * x1824 +
    60000000.0 * sc[9] * x1887 - x1006 * x706 + x1008 * x706 - x1385 * x626 +
    x1563 * x626 + x1686 * x2359 - x1701 * x2122 - x1701 * x716 -
    x1708 * x2358 + x1745 * x2358 + x1759 * x752 - x1780 * x752 - x2359 * x548 +
    x5495 - x9014 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x1824 - x1887) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (x2122 * x67 + x67 * x716) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[124] =
    -1.4862e+22 * refC * sc[9] * x1594 * x292 - 50000000.0 * sc[14] * x1320 +
    50000000.0 * sc[14] * x1564 +
    1.4862e+22 * sc[1] * sc[8] * x1594 * exp(x994) + 392000.0 * sc[8] * x1747 -
    392000.0 * sc[8] * x1748 - 8480000.0 * sc[8] * x1750 +
    8480000.0 * sc[8] * x1751 + 11000000.0 * sc[8] * x1880 + sc[8] * x9113 -
    60000000.0 * sc[9] * x1956 + 60000000.0 * sc[9] * x1973 - x1039 * x706 +
    x1042 * x706 + x1320 * x626 - 2.8986751181102398e+33 * x1468 * x1483 +
    2.8986751181102398e+33 * x1468 * x272 - x1564 * x626 - x1655 * x5983 +
    x1677 * x5983 - x1682 * x2122 - x1682 * x716 - x1747 * x2358 +
    x1748 * x2358 + x1750 * x2359 - x1751 * x2359 - x1760 * x752 +
    x1844 * x752 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x1956 - x1973) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (x2122 * x67 + x67 * x716) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[147] =
    -50000000.0 * sc[14] * x1440 + 50000000.0 * sc[14] * x921 +
    392000.0 * sc[8] * x1755 - 8480000.0 * sc[8] * x1756 +
    8480000.0 * sc[8] * x1768 + 11000000.0 * sc[8] * x1977 -
    392000.0 * sc[8] * x227 + 1000000.0 * sc[8] - 60000000.0 * sc[9] * x2014 +
    60000000.0 * sc[9] * x2032 - sc[9] * x377 - x1043 * x706 + x1045 * x706 +
    x10941 + x1440 * x626 - x1755 * x2358 + x1756 * x2359 - x1768 * x2359 -
    x1865 * x752 + x1867 * x752 + x227 * x2358 - x626 * x921 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x2014 - x2032) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (x2122 * x67 + x67 * x716) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[170] =
    50000000.0 * sc[14] * x1580 - 50000000.0 * sc[14] * x476 +
    392000.0 * sc[8] * x1767 - 8480000.0 * sc[8] * x1770 +
    8480000.0 * sc[8] * x1772 - 392000.0 * sc[8] * x1812 +
    11000000.0 * sc[8] * x2009 - 60000000.0 * sc[9] * x2070 +
    60000000.0 * sc[9] * x2087 - x1051 * x706 + x1052 * x706 + x10941 -
    x1580 * x626 - x1767 * x2358 + x1770 * x2359 - x1772 * x2359 +
    x1812 * x2358 + x1875 * x752 - x1891 * x752 + x476 * x626 + x9993 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x2070 - x2087) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (x2122 * x67 + x67 * x716) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[193] =
    sc[0] * x234 + sc[12] * x10575 + sc[14] * x10568 -
    50000000.0 * sc[14] * x315 + 50000000.0 * sc[14] * x789 + sc[15] * x10564 +
    2.477e+21 * sc[1] * x10 * x1594 * exp(x994) + sc[20] * x10536 +
    sc[4] * x7525 + sc[5] * x9113 + 1000000.0 * sc[6] -
    8480000.0 * sc[8] * x1779 + 8480000.0 * sc[8] * x1782 +
    392000.0 * sc[8] * x1813 - 392000.0 * sc[8] * x1833 +
    11000000.0 * sc[8] * x339 +
    4.92 * sc[8] * exp(-g_RT_qss[1] - x1124 + x2363) +
    32000000.0 * sc[8] * exp(-g_RT_qss[2] + 286.83349950869001 * invT - x1124) -
    60000000.0 * sc[9] * x2080 + 60000000.0 * sc[9] * x2141 + x10014 -
    x1056 * x706 + x1059 * x706 + x10941 - 11000000.0 * x1340 +
    392000.0 * x170 + x1779 * x2359 - x1782 * x2359 - x1813 * x2358 +
    x1833 * x2358 - x1881 * x752 + x1960 * x752 + x315 * x626 +
    8480000.0 * x578 - x626 * x789 - 11000000.0 * x766 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x2080 - x2141) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (x2122 * x67 + x67 * x716) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[216] =
    -8480000.0 * sc[10] * x1268 - 392000.0 * sc[13] * x1195 -
    50000000.0 * sc[14] * x1149 + 50000000.0 * sc[14] * x646 - sc[19] * x10581 -
    11000000.0 * sc[20] * x1333 - sc[2] * x7396 - sc[3] * x8243 - sc[6] * x377 +
    8480000.0 * sc[8] * x1742 - 8480000.0 * sc[8] * x1787 -
    392000.0 * sc[8] * x1825 + 392000.0 * sc[8] * x1841 +
    11000000.0 * sc[8] * x2010 + 60000000.0 * sc[9] * x2186 -
    60000000.0 * sc[9] * x649 - x1060 * x706 + x1062 * x706 + x1149 * x626 +
    x1263 - x1433 - 2.477e+21 * x1594 * x292 * x843 - x170 * x2357 -
    x1742 * x2359 - x1758 * x2122 - x1758 * x716 + x1787 * x2359 +
    x1825 * x2358 - x1841 * x2358 - x1961 * x752 + x1962 * x752 -
    16000000.0 * x2117 * x595 - x2121 * x664 - x325 * x746 -
    50000000.0 * x42 * x664 - x497 * x578 - x626 * x646 - 60000000.0 * x674 -
    2.46 * x675 * exp(x2363) - x9335 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x2186 + x649) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (x2122 * x67 + x67 * x716) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[239] =
    -50000000.0 * sc[14] * x1037 + 50000000.0 * sc[14] * x1590 -
    8480000.0 * sc[8] * x1676 + 8480000.0 * sc[8] * x1741 +
    392000.0 * sc[8] * x1830 - 392000.0 * sc[8] * x1831 +
    11000000.0 * sc[8] * x2011 - 8480000.0 * sc[9] * x1268 +
    60000000.0 * sc[9] * x2271 - 60000000.0 * sc[9] * x946 + x1037 * x626 -
    x1064 * x706 + 3.7155e+21 * x1065 + x1071 * x706 -
    7.2466877952755894e+32 * x1468 * x1483 +
    7.2466877952755894e+32 * x1468 * x272 - x1590 * x626 - 3.7155e+21 * x1652 -
    x1655 * x6457 + x1676 * x2359 + x1677 * x6457 - x1741 * x2359 -
    x1830 * x2358 + x1831 * x2358 - x1968 * x752 + x1969 * x752 - x2122 * x311 -
    x311 * x716 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x2271 + x946) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (x2122 * x67 + x67 * x716) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[262] =
    -50000000.0 * sc[14] * x1047 + 50000000.0 * sc[14] * x963 -
    8480000.0 * sc[8] * x1749 + 8480000.0 * sc[8] * x1814 -
    392000.0 * sc[8] * x1877 + 11000000.0 * sc[8] * x774 +
    392000.0 * sc[8] * x896 - 60000000.0 * sc[9] * x1480 +
    60000000.0 * sc[9] * x2323 + x1047 * x626 - x1072 * x706 + x1073 * x706 +
    x1263 + x1749 * x2359 - x1814 * x2359 + x1877 * x2358 + x1970 * x752 -
    x2122 * x707 - x2358 * x896 - x626 * x963 - x707 * x716 - x752 * x755 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x1480 - x2323) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (x2122 * x67 + x67 * x716) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[285] =
    50000000.0 * sc[14] * x1640 - 50000000.0 * sc[14] * x1659 + sc[8] * x10575 +
    11000000.0 * sc[8] * x1554 - 8480000.0 * sc[8] * x1818 +
    8480000.0 * sc[8] * x1819 + 392000.0 * sc[8] * x1886 -
    392000.0 * sc[8] * x1897 - 60000000.0 * sc[9] * x1453 +
    60000000.0 * sc[9] * x2360 - x1075 * x706 + x10941 - x1640 * x626 +
    x1659 * x626 + x1818 * x2359 - x1819 * x2359 - x1886 * x2358 +
    x1897 * x2358 - x1971 * x752 + x1979 * x752 + x671 * x706 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x1453 - x2360) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (x2122 * x67 + x67 * x716) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[308] =
    50000000.0 * sc[14] * x1663 - 50000000.0 * sc[14] * x1664 -
    8480000.0 * sc[8] * x1821 + 8480000.0 * sc[8] * x1823 +
    392000.0 * sc[8] * x1860 - 392000.0 * sc[8] * x1862 +
    11000000.0 * sc[8] * x2009 + 60000000.0 * sc[9] * x1035 -
    392000.0 * sc[9] * x1195 - 60000000.0 * sc[9] * x809 - x1078 * x706 +
    x1080 * x706 - x1522 * x2122 - x1522 * x716 + x1531 - x1663 * x626 +
    x1664 * x626 + x1821 * x2359 - x1823 * x2359 - x1860 * x2358 +
    x1862 * x2358 + x1884 * x752 - x1987 * x752 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1035 + x809) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (x2122 * x67 + x67 * x716) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[331] =
    50000000.0 * sc[14] * x1670 - 50000000.0 * sc[14] * x1679 +
    60000000.0 * sc[1] * x1449 + sc[8] * x10568 - 8480000.0 * sc[8] * x1828 +
    8480000.0 * sc[8] * x1834 - 392000.0 * sc[8] * x1862 +
    392000.0 * sc[8] * x1872 + 11000000.0 * sc[8] * x374 +
    60000000.0 * sc[9] * x1118 - 60000000.0 * sc[9] * x1205 - x1083 * x706 +
    x1084 * x706 + x1531 - x1670 * x626 + x1679 * x626 + x1828 * x2359 -
    x1829 * x2122 - x1829 * x716 - x1834 * x2359 + x1862 * x2358 -
    x1872 * x2358 + x1884 * x752 - x1947 * x752 + 50000000.0 * x595 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1118 + x1205) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (x2122 * x67 + x67 * x716) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[354] =
    50000000.0 * sc[14] * x1680 - 50000000.0 * sc[14] * x1688 + sc[8] * x10564 +
    11000000.0 * sc[8] * x1716 - 8480000.0 * sc[8] * x1835 +
    8480000.0 * sc[8] * x1836 - 392000.0 * sc[8] * x1925 +
    392000.0 * sc[8] * x502 - 2.46 * sc[9] * x1085 * exp(x2363) -
    60000000.0 * sc[9] * x216 + 60000000.0 * sc[9] * x894 + x1086 * x706 -
    x1229 * x2122 - x1229 * x716 + x1531 - x1680 * x626 + x1688 * x626 +
    x1835 * x2359 - x1836 * x2359 - x1837 * x752 + x1882 * x752 +
    x1925 * x2358 - x2358 * x502 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (x216 - x894) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (x2122 * x67 + x67 * x716) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-11000000.0 * sc[8] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[377] =
    50000000.0 * sc[14] * x1689 - 50000000.0 * sc[14] * x1707 +
    8480000.0 * sc[8] * x1815 + 392000.0 * sc[8] * x1932 +
    60000000.0 * sc[9] * x1070 - 60000000.0 * sc[9] * x955 - x1087 * x706 +
    x1088 * x706 + x10977 + x10979 + x10983 - x1689 * x626 + x1707 * x626 -
    x1815 * x2359 - x1932 * x2358 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1070 + x955) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (x2122 * x67 + x67 * x716) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[400] =
    50000000.0 * sc[14] * x1625 + 8480000.0 * sc[8] * x1817 +
    392000.0 * sc[8] * x183 + 11000000.0 * sc[8] * x2009 -
    60000000.0 * sc[9] * x958 - x1089 * x706 + x10987 - x1625 * x626 -
    x1817 * x2359 - x183 * x2358 - x1945 * x2122 - x1945 * x716 + x5495 -
    x731 * x752 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1668 + x958) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (x2122 * x67 + x67 * x716) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[423] =
    50000000.0 * sc[14] * x1018 + 8480000.0 * sc[8] * x1863 +
    11000000.0 * sc[8] * x2009 + 392000.0 * sc[8] * x233 -
    60000000.0 * sc[9] * x1694 - x1018 * x626 + x10941 + x10987 - x1141 * x706 -
    x1863 * x2359 - x1958 * x752 - x233 * x2358 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1668 + x1694) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (x2122 * x67 + x67 * x716) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[446] =
    50000000.0 * sc[14] * x1729 - 50000000.0 * sc[14] * x262 +
    20000000.0 * sc[1] * x2351 - 8480000.0 * sc[8] * x1870 +
    8480000.0 * sc[8] * x1873 + 392000.0 * sc[8] * x1946 +
    11000000.0 * sc[8] * x2009 + 60000000.0 * sc[9] * x1009 -
    60000000.0 * sc[9] * x1057 - sc[9] * x10581 + x10977 - x1161 * x706 +
    x1167 * x706 - x1729 * x626 + x1870 * x2359 - x1873 * x2359 +
    x1937 * x2358 - x1946 * x2358 + x1957 * x752 - x2122 * x65 + x262 * x626 +
    x5495 - x65 * x716 - x655 * x752 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1009 + x1057) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (x2122 * x67 + x67 * x716) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[469] =
    50000000.0 * sc[14] * x1675 + sc[8] * x10536 + 11000000.0 * sc[8] * x1339 +
    8480000.0 * sc[8] * x1874 + 392000.0 * sc[8] * x1949 -
    11000000.0 * sc[9] * x1333 - 60000000.0 * sc[9] * x784 + x10941 + x10987 -
    x1443 * x706 - x1675 * x626 - x1874 * x2359 - x1949 * x2358 - x1966 * x752 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x1668 + x784) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (x2122 * x67 + x67 * x716) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[492] =
    50000000.0 * sc[14] * x1752 - 50000000.0 * sc[14] * x1757 +
    392000.0 * sc[8] * x1788 + 8480000.0 * sc[8] * x1876 +
    60000000.0 * sc[9] * x647 - 60000000.0 * sc[9] * x669 + x10977 + x10979 +
    x10983 - x1444 * x706 + x1445 * x706 - x1752 * x626 + x1757 * x626 -
    x1788 * x2358 - x1876 * x2359 +
    (50000000.0 * sc[14] * x678 + 8480000.0 * sc[8] * x680 -
     392000.0 * sc[8] * x683 + x2358 * x683 - x2359 * x680 - x626 * x678 -
     x677 * x706) *
      (-x647 + x669) +
    (50000000.0 * sc[14] * x679 + 8480000.0 * sc[8] * x681 +
     392000.0 * sc[8] * x684 + x2122 * x660 - x2358 * x684 - x2359 * x681 -
     x626 * x679 + x660 * x716) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (x2122 * x67 + x67 * x716) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-11000000.0 * sc[8] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (8480000.0 * sc[8] * x682 + x2122 * x640 - x2359 * x682 + x597 * x752 +
     x640 * x716) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (392000.0 * sc[8] * x685 - x2358 * x685 + x448 * x752) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[10] =
    14000000.0 * sc[11] * x1007 - 14000000.0 * sc[11] * x937 -
    50000000.0 * sc[16] * x1472 + 30000000.0 * sc[16] * x725 -
    30000000.0 * sc[16] * x790 + 50000000.0 * sc[16] * x985 -
    60000000.0 * sc[19] * x923 + 60000000.0 * sc[19] * x932 +
    100000000.0 * sc[2] * x708 + 48000000.0 * sc[2] * x897 -
    48000000.0 * sc[2] * x908 - 30000000.0 * sc[2] * x923 +
    30000000.0 * sc[2] * x932 + 40000000.0 * sc[3] * x1007 +
    18000.0 * sc[3] * x1243 - 40000000.0 * sc[3] * x937 -
    50000000.0 * sc[4] * x923 + 50000000.0 * sc[4] * x932 -
    8480000.0 * sc[8] * x923 + 8480000.0 * sc[8] * x932 - x1007 * x2008 -
    x1029 * x923 + x1029 * x932 + x11007 * x1472 - x11007 * x985 -
    x11013 * x1472 + x11013 * x985 + x11090 + x1243 * x36 + x1552 +
    x2008 * x937 - x2176 * x725 + x2176 * x790 - x2179 * x725 + x2179 * x790 -
    x2266 * x923 + x2266 * x932 - x725 * x875 - x756 * x971 + x779 * x971 +
    x790 * x875 - x804 * x897 + x804 * x908 - x815 * x923 + x815 * x932 -
    x891 * x897 + x891 * x908 + x923 * x976 - x932 * x976 + x982 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1472 + x985) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[33] =
    14000000.0 * sc[11] * x1471 - 14000000.0 * sc[11] * x1481 +
    50000000.0 * sc[16] * x1665 - 50000000.0 * sc[16] * x1692 +
    30000000.0 * sc[16] * x926 - 30000000.0 * sc[16] * x936 +
    100000000.0 * sc[16] + sc[17] * x553 - 60000000.0 * sc[19] * x1005 +
    60000000.0 * sc[19] * x1074 + 48000000.0 * sc[2] * x1069 -
    48000000.0 * sc[2] * x1526 + 100000000.0 * sc[2] * x1650 +
    40000000.0 * sc[3] * x1471 - 40000000.0 * sc[3] * x1481 +
    18000.0 * sc[3] * x207 - 50000000.0 * sc[4] * x1005 +
    50000000.0 * sc[4] * x1074 - 8480000.0 * sc[8] * x1005 +
    8480000.0 * sc[8] * x1074 - x1005 * x1029 - x1005 * x2266 - x1005 * x815 +
    x1005 * x976 + x1029 * x1074 - x1069 * x804 - x1069 * x891 + x1074 * x2266 +
    x1074 * x815 - x1074 * x976 - x11007 * x1665 + x11007 * x1692 +
    x11013 * x1665 - x11013 * x1692 + x11138 - x1471 * x2008 + x1481 * x2008 +
    x1526 * x804 + x1526 * x891 - x1560 * x971 + x207 * x36 -
    200000000.0 * x2129 * x607 - x2176 * x926 + x2176 * x936 - x2179 * x926 +
    x2179 * x936 + x423 * x971 + x5477 + x5566 + x726 + x773 - x875 * x926 +
    x875 * x936 + x8918 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1665 - x1692) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[56] =
    -sc[10] * x7326 * x7402 + 14000000.0 * sc[11] * x1482 + sc[11] * x225 -
    14000000.0 * sc[11] * x961 + 4.08 * sc[13] * x5621 +
    50000000.0 * sc[16] * x1753 - 50000000.0 * sc[16] * x1773 +
    30000000.0 * sc[16] * x968 - 30000000.0 * sc[16] * x995 +
    200000000.0 * sc[16] + 60000000.0 * sc[19] * x1633 -
    60000000.0 * sc[19] * x824 + 73400000.0 * sc[1] * x1633 -
    73400000.0 * sc[1] * x824 + 100000000.0 * sc[2] * x1 +
    40000000.0 * sc[3] * x1482 + 18000.0 * sc[3] * x220 -
    40000000.0 * sc[3] * x961 + 50000000.0 * sc[4] * x1633 -
    50000000.0 * sc[4] * x824 + 8480000.0 * sc[8] * x1633 -
    8480000.0 * sc[8] * x824 + x1029 * x1633 - x1029 * x824 - x1081 * x971 -
    x11007 * x1753 + x11007 * x1773 + x11013 * x1753 - x11013 * x1773 + x11138 -
    x115 * x804 - x115 * x891 - 100000000.0 * x1230 - x1482 * x2008 +
    x1633 * x2266 + x1633 * x815 - x1633 * x976 + x1653 * x804 + x1653 * x891 +
    x1718 * x971 + x2008 * x961 - x2176 * x968 + x2176 * x995 - x2179 * x968 +
    x2179 * x995 + x220 * x36 - x2266 * x824 + x5566 + x5639 + x5662 -
    100000000.0 * x643 + x773 - x815 * x824 + x824 * x976 - x875 * x968 +
    x875 * x995 + x934 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1753 - x1773) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[79] =
    10.0 * sc[13] * x1672 * exp(x296) + 10.0 * sc[14] * x1672 * exp(x1017) -
    30000000.0 * sc[16] * x1000 + 50000000.0 * sc[16] * x1822 -
    50000000.0 * sc[16] * x1838 + 3200000.0 * sc[16] * x8239 +
    30000000.0 * sc[16] * x999 - 60000000.0 * sc[19] * x1656 +
    60000000.0 * sc[19] * x1672 - 73400000.0 * sc[1] * x1656 +
    73400000.0 * sc[1] * x1672 + 15000000.0 * sc[2] * x1535 -
    15000000.0 * sc[2] * x1537 + 48000000.0 * sc[2] * x1654 -
    48000000.0 * sc[2] * x1685 + 57000000.0 * sc[2] * x1822 -
    57000000.0 * sc[2] * x1838 + 100000000.0 * sc[2] * x659 +
    40000000.0 * sc[3] * x1535 - 40000000.0 * sc[3] * x1537 -
    50000000.0 * sc[4] * x1656 + 50000000.0 * sc[4] * x1672 -
    8480000.0 * sc[8] * x1656 + 8480000.0 * sc[8] * x1672 + x1000 * x2176 +
    x1000 * x2179 + x1000 * x875 - x1029 * x1656 - x11007 * x1822 +
    x11007 * x1838 + x11013 * x1822 - x11013 * x1838 + x11137 + x11202 -
    x1535 * x2008 + x1537 * x2008 + x1639 * x36 - x1654 * x804 - x1654 * x891 -
    x1656 * x2025 - x1656 * x2266 - x1656 * x815 + x1656 * x976 +
    x1672 * x2025 + x1672 * x2266 - x1672 * x976 + x1685 * x804 + x1685 * x891 +
    x1739 * x971 - x2176 * x999 - x2179 * x999 - x250 * x971 + x5566 + x5741 +
    7600000.0 * x578 * exp(-201.28666632188799 * invT) + 40000000.0 * x595 -
    3612.0 * x7328 + 3612.0 * x7331 - x7476 + x773 - x875 * x999 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1822 - x1838) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[102] =
    sc[11] * x9062 + sc[13] * x9074 + 30000000.0 * sc[16] * x1006 -
    30000000.0 * sc[16] * x1008 + 50000000.0 * sc[16] * x1824 -
    50000000.0 * sc[16] * x1887 - 60000000.0 * sc[19] * x1686 +
    60000000.0 * sc[19] * x548 - 73400000.0 * sc[1] * x1686 +
    73400000.0 * sc[1] * x548 + 15000000.0 * sc[2] * x1385 -
    15000000.0 * sc[2] * x1563 + 100000000.0 * sc[2] * x1701 +
    48000000.0 * sc[2] * x1708 - 48000000.0 * sc[2] * x1745 +
    40000000.0 * sc[3] * x1385 - 40000000.0 * sc[3] * x1563 -
    50000000.0 * sc[4] * x1686 + 50000000.0 * sc[4] * x548 -
    8480000.0 * sc[8] * x1686 + 8480000.0 * sc[8] * x548 - x1006 * x2176 -
    x1006 * x2179 - x1006 * x875 + x1008 * x2176 + x1008 * x2179 +
    x1008 * x875 - x1029 * x1686 + x1029 * x548 - x11007 * x1824 +
    x11007 * x1887 + x11013 * x1824 - x11013 * x1887 + x11138 + x11231 -
    x1385 * x2008 + x1563 * x2008 - x1686 * x2266 - x1686 * x815 +
    x1686 * x976 - x1708 * x804 - x1708 * x891 + x1743 * x36 + x1745 * x804 +
    x1745 * x891 + x1759 * x971 - x1780 * x971 + x2266 * x548 + x548 * x815 -
    x548 * x976 + x5566 + 50000000.0 * x578 + x5834 - 3200000.0 * x607 * x8309 +
    x773 + x9104 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1824 - x1887) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[125] =
    -1.614e+22 * sc[10] * x11048 - 14000000.0 * sc[11] * x1320 +
    14000000.0 * sc[11] * x1564 + 30000000.0 * sc[16] * x1039 -
    30000000.0 * sc[16] * x1042 + 50000000.0 * sc[16] * x1956 -
    50000000.0 * sc[16] * x1973 - 60000000.0 * sc[19] * x1750 +
    60000000.0 * sc[19] * x1751 + 100000000.0 * sc[2] * x1682 +
    48000000.0 * sc[2] * x1747 - 48000000.0 * sc[2] * x1748 -
    40000000.0 * sc[3] * x1320 + 40000000.0 * sc[3] * x1564 +
    18000.0 * sc[3] * x1763 - 8480000.0 * sc[8] * x1750 +
    8480000.0 * sc[8] * x1751 - x1029 * x1750 + x1029 * x1751 - x1039 * x2176 -
    x1039 * x2179 - x1039 * x875 + x1042 * x2176 + x1042 * x2179 +
    x1042 * x875 - x11007 * x1956 + x11007 * x1973 + x11013 * x1956 -
    x11013 * x1973 + 1.614e+17 * x11036 - 8.68332e+25 * x11038 * x1478 -
    5.3600740740740798e+37 * x1104 * x285 + 8.68332e+25 * x11040 +
    1.614e+22 * x11045 * x1599 + x11057 * x11248 - 1.614e+17 * x11070 -
    x11121 * x11238 + x11238 * x944 - x11248 * x850 + x1320 * x2008 -
    x1564 * x2008 - x1747 * x804 - x1747 * x891 + x1748 * x804 + x1748 * x891 -
    x1750 * x2266 - x1750 * x815 + x1750 * x976 + x1751 * x2266 + x1751 * x815 -
    x1751 * x976 - x1760 * x971 + x1763 * x36 + x1844 * x971 +
    5.3600740740740798e+37 * x280 * x285 + x5975 + x662 - 3612.0 * x7328 +
    3612.0 * x7331 + x9828 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1956 - x1973) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[148] =
    -14000000.0 * sc[11] * x1440 + 14000000.0 * sc[11] * x921 +
    30000000.0 * sc[16] * x1043 - 30000000.0 * sc[16] * x1045 +
    50000000.0 * sc[16] * x2014 - 50000000.0 * sc[16] * x2032 -
    60000000.0 * sc[19] * x1756 + 60000000.0 * sc[19] * x1768 -
    73400000.0 * sc[1] * x1756 + 73400000.0 * sc[1] * x1768 -
    15000000.0 * sc[2] * x1440 + 15000000.0 * sc[2] * x921 -
    40000000.0 * sc[3] * x1440 + 18000.0 * sc[3] * x1826 +
    40000000.0 * sc[3] * x921 - 50000000.0 * sc[4] * x1756 +
    50000000.0 * sc[4] * x1768 - 8480000.0 * sc[8] * x1756 +
    8480000.0 * sc[8] * x1768 - x1029 * x1756 + x1029 * x1768 - x1043 * x2176 -
    x1043 * x2179 - x1043 * x875 + x1045 * x2176 + x1045 * x2179 +
    x1045 * x875 - x11007 * x2014 + x11007 * x2032 + x11013 * x2014 -
    x11013 * x2032 + x11304 + x1440 * x2008 - x1755 * x804 - x1755 * x891 -
    x1756 * x815 + x1756 * x976 + x1768 * x815 - x1768 * x976 + x1826 * x36 -
    x1865 * x971 + x1867 * x971 - x2008 * x921 + x227 * x804 + x227 * x891 +
    x5566 + x6035 + x6064 + x773 + x9985 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x2014 - x2032) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[171] =
    14000000.0 * sc[11] * x1580 - 14000000.0 * sc[11] * x476 +
    30000000.0 * sc[16] * x1051 - 30000000.0 * sc[16] * x1052 +
    50000000.0 * sc[16] * x2070 - 50000000.0 * sc[16] * x2087 -
    60000000.0 * sc[19] * x1770 + 60000000.0 * sc[19] * x1772 +
    57000000.0 * sc[2] * x2070 - 57000000.0 * sc[2] * x2087 +
    40000000.0 * sc[3] * x1580 - 40000000.0 * sc[3] * x476 -
    50000000.0 * sc[4] * x1770 + 50000000.0 * sc[4] * x1772 -
    8480000.0 * sc[8] * x1770 + 8480000.0 * sc[8] * x1772 - x1029 * x1770 +
    x1029 * x1772 - x1051 * x2176 - x1051 * x2179 - x1051 * x875 +
    x1052 * x2176 + x1052 * x2179 + x1052 * x875 - x11007 * x2070 +
    x11007 * x2087 + x11013 * x2070 - x11013 * x2087 + x11304 + x1288 -
    x1580 * x2008 - x1767 * x804 - x1767 * x891 - x1770 * x2025 -
    x1770 * x2266 - x1770 * x815 + x1770 * x976 + x1772 * x2025 +
    x1772 * x2266 + x1772 * x815 - x1772 * x976 + x1812 * x804 + x1812 * x891 +
    x1875 * x971 - x1891 * x971 + x1896 * x36 + x2008 * x476 + x5566 + x6115 +
    x6137 + x9278 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x2070 - x2087) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[194] =
    -2.69e+21 * sc[10] * x10 * x1056 * x867 * exp(x839) -
    sc[10] * x1056 * x2173 - sc[10] * x1056 * x2178 -
    14000000.0 * sc[11] * x315 + 14000000.0 * sc[11] * x789 +
    30000000.0 * sc[16] * x1056 - 30000000.0 * sc[16] * x1059 +
    50000000.0 * sc[16] * x2080 - 50000000.0 * sc[16] * x2141 +
    50000000.0 * sc[16] - 60000000.0 * sc[19] * x1779 +
    60000000.0 * sc[19] * x1782 - 73400000.0 * sc[1] * x1779 +
    73400000.0 * sc[1] * x1782 + 48000000.0 * sc[2] * x1813 -
    48000000.0 * sc[2] * x1833 + 57000000.0 * sc[2] * x2080 -
    57000000.0 * sc[2] * x2141 - 15000000.0 * sc[2] * x315 +
    15000000.0 * sc[2] * x789 + 18000.0 * sc[3] * x1240 -
    40000000.0 * sc[3] * x315 + 40000000.0 * sc[3] * x789 -
    50000000.0 * sc[4] * x1779 + 50000000.0 * sc[4] * x1782 -
    8480000.0 * sc[8] * x1779 + 8480000.0 * sc[8] * x1782 - x1029 * x1779 +
    x1029 * x1782 + x10580 + x1059 * x2176 + x1059 * x2179 + x1059 * x875 -
    x11007 * x2080 + x11007 * x2141 + x11013 * x2080 - x11013 * x2141 + x11304 -
    x1779 * x2025 - x1779 * x2266 - x1779 * x815 + x1779 * x976 +
    x1782 * x2025 + x1782 * x2266 + x1782 * x815 - x1782 * x976 - x1813 * x804 -
    x1813 * x891 + x1833 * x804 + x1833 * x891 - x1881 * x971 + x1960 * x971 +
    x2008 * x315 - x2008 * x789 + x5566 + 8480000.0 * x578 + x6235 + x773 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x2080 - x2141) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[217] =
    -8480000.0 * sc[10] * x1268 - 14000000.0 * sc[11] * x1149 +
    14000000.0 * sc[11] * x646 + 30000000.0 * sc[16] * x1060 -
    30000000.0 * sc[16] * x1062 - 50000000.0 * sc[16] * x2186 +
    50000000.0 * sc[16] * x649 + 60000000.0 * sc[19] * x1742 -
    60000000.0 * sc[19] * x1787 + 30000000.0 * sc[2] * x1742 +
    100000000.0 * sc[2] * x1758 - 30000000.0 * sc[2] * x1787 -
    48000000.0 * sc[2] * x1825 + 48000000.0 * sc[2] * x1841 -
    40000000.0 * sc[3] * x1149 + 40000000.0 * sc[3] * x646 +
    18000.0 * sc[3] * x858 + 50000000.0 * sc[4] * x1742 -
    50000000.0 * sc[4] * x1787 + 8480000.0 * sc[8] * x1742 -
    8480000.0 * sc[8] * x1787 + x1029 * x1742 - x1029 * x1787 - x1060 * x2176 -
    x1060 * x2179 - x1060 * x875 + x1062 * x2176 + x1062 * x2179 +
    x1062 * x875 + x11007 * x2186 - x11007 * x649 - x11013 * x2186 +
    x11013 * x649 + x11090 + x1149 * x2008 + x1742 * x2266 + x1742 * x815 -
    x1742 * x976 - x1787 * x2266 - x1787 * x815 + x1787 * x976 + x1825 * x804 +
    x1825 * x891 - x1841 * x804 - x1841 * x891 - x1961 * x971 + x1962 * x971 -
    x2008 * x646 + x36 * x858 + x6318 + x951 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x2186 + x649) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[240] =
    4.035e+16 * refC * sc[16] * x11006 * x1457 - 4.035e+21 * sc[10] * x11048 -
    40000000.0 * sc[13] * x11399 * x1248 - 50000000.0 * sc[13] * x1462 -
    sc[14] * x10617 - 90330000.0 * sc[14] * x1170 -
    120000000.0 * sc[15] * x1316 + 30000000.0 * sc[16] * x1064 -
    30000000.0 * sc[16] * x1071 - 50000000.0 * sc[16] * x2271 +
    50000000.0 * sc[16] * x946 - 60000000.0 * sc[19] * x1676 +
    60000000.0 * sc[19] * x1741 - 400000000.0 * sc[1] * x1248 * x2129 -
    60000000.0 * sc[20] * x1304 + 100000000.0 * sc[2] * x311 -
    sc[2] * x7326 * x7402 - 40000000.0 * sc[3] * x1037 +
    40000000.0 * sc[3] * x1590 - 8480000.0 * sc[8] * x1676 +
    8480000.0 * sc[8] * x1741 - 8480000.0 * sc[9] * x1268 -
    2.69e+21 * x10 * x11048 + x10056 - x1029 * x1676 + x1029 * x1741 -
    x1034 * x325 + x1037 * x2008 - x1064 * x2176 - x1064 * x2179 -
    x1064 * x875 + x1071 * x2176 + x1071 * x2179 + x1071 * x875 -
    x10999 * x11121 + x10999 * x944 + x11001 * x11057 - x11001 * x850 -
    2.69e+16 * x11006 * x674 * x940 - 4.035e+16 * x11006 * x674 * x977 +
    x11007 * x2271 - x11007 * x946 - x11013 * x2271 + x11013 * x946 -
    2.17083e+25 * x11038 * x1478 - 1.34001851851852e+37 * x1104 * x285 +
    2.17083e+25 * x11040 + 4.035e+21 * x11045 * x1599 + x11458 -
    6400000.0 * x1249 * x8309 + x125 - 30000000.0 * x159 * x170 -
    x1590 * x2008 - x1676 * x815 + x1676 * x976 - x170 * x720 + x1741 * x815 -
    x1741 * x976 - x1830 * x804 - x1830 * x891 + x1831 * x804 + x1831 * x891 -
    x1968 * x971 + x1969 * x971 - x2173 * x675 - x2178 * x675 +
    1.34001851851852e+37 * x280 * x285 + x358 - 100000000.0 * x453 * x595 -
    x578 * x895 + x6206 - 903.0 * x7328 + 903.0 * x7331 - x7776 + x9426 +
    x9844 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x2271 + x946) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[263] =
    -5.38e+21 * sc[10] * x11048 - 14000000.0 * sc[11] * x1047 +
    14000000.0 * sc[11] * x963 + 30000000.0 * sc[16] * x1072 -
    30000000.0 * sc[16] * x1073 + 50000000.0 * sc[16] * x1480 -
    50000000.0 * sc[16] * x2323 - 60000000.0 * sc[19] * x1749 +
    60000000.0 * sc[19] * x1814 + sc[1] * x2181 - 48000000.0 * sc[2] * x1877 +
    sc[2] * x225 + 100000000.0 * sc[2] * x707 + 48000000.0 * sc[2] * x896 -
    40000000.0 * sc[3] * x1047 + 18000.0 * sc[3] * x858 +
    40000000.0 * sc[3] * x963 - 50000000.0 * sc[4] * x1749 +
    50000000.0 * sc[4] * x1814 + sc[4] * x9062 - 8480000.0 * sc[8] * x1749 +
    8480000.0 * sc[8] * x1814 - x1029 * x1749 + x1029 * x1814 + x1047 * x2008 -
    x1072 * x2176 - x1072 * x2179 - x1072 * x875 + x1073 * x2176 +
    x1073 * x2179 + x1073 * x875 - x11007 * x1480 + x11007 * x2323 +
    x11013 * x1480 - x11013 * x2323 + 5.38e+16 * x11036 -
    2.89444e+25 * x11038 * x1478 - 1.7866913580246899e+37 * x1104 * x285 +
    2.89444e+25 * x11040 + 5.38e+21 * x11045 * x1599 + x11054 * x11057 -
    x11054 * x850 - x11067 - 5.38e+16 * x11070 - x1749 * x2266 - x1749 * x815 +
    x1749 * x976 + x1814 * x2266 + x1814 * x815 - x1814 * x976 + x1877 * x804 +
    x1877 * x891 + x1970 * x971 - x2008 * x963 +
    1.7866913580246899e+37 * x280 * x285 + x36 * x858 + 14000000.0 * x595 +
    x6546 + 3400000.0 * x674 * exp(-347.21949940525701 * invT) -
    2107.0 * x7328 + x7330 * x7402 + 2107.0 * x7331 - x755 * x971 -
    x804 * x896 + x844 - x891 * x896 + x94 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1480 - x2323) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[286] =
    -14000000.0 * sc[10] * x1417 + 14000000.0 * sc[11] * x1640 -
    14000000.0 * sc[11] * x1659 + 30000000.0 * sc[16] * x1075 +
    50000000.0 * sc[16] * x1453 - 50000000.0 * sc[16] * x2360 -
    30000000.0 * sc[16] * x671 - 60000000.0 * sc[19] * x1818 +
    60000000.0 * sc[19] * x1819 + 57000000.0 * sc[2] * x1453 +
    48000000.0 * sc[2] * x1886 - 48000000.0 * sc[2] * x1897 -
    57000000.0 * sc[2] * x2360 + 40000000.0 * sc[3] * x1640 -
    40000000.0 * sc[3] * x1659 + 18000.0 * sc[3] * x229 -
    50000000.0 * sc[4] * x1818 + 50000000.0 * sc[4] * x1819 -
    8480000.0 * sc[8] * x1818 + 8480000.0 * sc[8] * x1819 - x1029 * x1818 +
    x1029 * x1819 - x1075 * x2176 - x1075 * x2179 - x1075 * x875 -
    x11007 * x1453 + x11007 * x2360 + x11013 * x1453 - x11013 * x2360 + x11304 +
    x1221 - 18000.0 * x1249 * x1251 - x1640 * x2008 + x1659 * x2008 -
    x1818 * x2025 - x1818 * x2266 - x1818 * x815 + x1818 * x976 +
    x1819 * x2025 + x1819 * x2266 + x1819 * x815 - x1819 * x976 - x1886 * x804 -
    x1886 * x891 + x1897 * x804 + x1897 * x891 - x1971 * x971 + x1979 * x971 +
    x2176 * x671 + x2179 * x671 + x229 * x36 + x5566 + x6587 + x671 * x875 +
    x773 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x1453 - x2360) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[309] =
    -50000000.0 * sc[10] * x1462 - 30000000.0 * sc[10] * x159 * x1860 -
    sc[10] * x1860 * x720 + 14000000.0 * sc[11] * x1663 -
    14000000.0 * sc[11] * x1664 - 50000000.0 * sc[16] * x1035 +
    30000000.0 * sc[16] * x1078 - 30000000.0 * sc[16] * x1080 +
    50000000.0 * sc[16] * x809 - 60000000.0 * sc[19] * x1821 +
    60000000.0 * sc[19] * x1823 + 100000000.0 * sc[2] * x1522 -
    30000000.0 * sc[2] * x1821 + 30000000.0 * sc[2] * x1823 +
    48000000.0 * sc[2] * x1860 - 48000000.0 * sc[2] * x1862 +
    4.08 * sc[2] * x5621 + 40000000.0 * sc[3] * x1663 -
    40000000.0 * sc[3] * x1664 - 50000000.0 * sc[4] * x1821 +
    50000000.0 * sc[4] * x1823 + sc[4] * x9074 - 8480000.0 * sc[8] * x1821 +
    8480000.0 * sc[8] * x1823 - x1029 * x1821 + x1029 * x1823 + x1035 * x11007 -
    x1035 * x11013 - x1078 * x2176 - x1078 * x2179 - x1078 * x875 +
    x1080 * x2176 + x1080 * x2179 + x1080 * x875 - x11007 * x809 +
    x11013 * x809 - 20000000.0 * x11399 * x607 + x11570 - x1663 * x2008 +
    x1664 * x2008 - x1821 * x2266 - x1821 * x815 + x1821 * x976 +
    x1823 * x2266 + x1823 * x815 - x1823 * x976 + x1862 * x804 + x1862 * x891 +
    x1884 * x971 - x1987 * x971 + x36 * x482 + 10.0 * x578 * exp(x296) + x762 +
    x933 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1035 + x809) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[332] =
    -sc[10] * x10617 - 90330000.0 * sc[10] * x1170 +
    14000000.0 * sc[11] * x1670 - 14000000.0 * sc[11] * x1679 +
    30000000.0 * sc[16] * x1083 - 30000000.0 * sc[16] * x1084 -
    50000000.0 * sc[16] * x1118 + 50000000.0 * sc[16] * x1205 -
    60000000.0 * sc[19] * x1828 + 60000000.0 * sc[19] * x1834 -
    30000000.0 * sc[2] * x1828 + 100000000.0 * sc[2] * x1829 +
    30000000.0 * sc[2] * x1834 + 40000000.0 * sc[3] * x1670 -
    40000000.0 * sc[3] * x1679 - 50000000.0 * sc[4] * x1828 +
    50000000.0 * sc[4] * x1834 - 8480000.0 * sc[8] * x1828 +
    8480000.0 * sc[8] * x1834 - x1029 * x1828 + x1029 * x1834 - x1083 * x2176 -
    x1083 * x2179 - x1083 * x875 + x1084 * x2176 + x1084 * x2179 +
    x1084 * x875 + x11007 * x1118 - x11007 * x1205 - x11013 * x1118 +
    x11013 * x1205 + x11570 + x1330 - x1670 * x2008 + x1679 * x2008 -
    x1828 * x2266 - x1828 * x815 + x1828 * x976 + x1834 * x2266 + x1834 * x815 -
    x1834 * x976 + x1862 * x804 + x1862 * x891 - x1872 * x804 - x1872 * x891 +
    x1884 * x971 - x1947 * x971 + x209 + x36 * x482 + 10.0 * x578 * exp(x1017) +
    x992 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1118 + x1205) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[355] =
    -120000000.0 * sc[10] * x1316 + 14000000.0 * sc[11] * x1680 -
    14000000.0 * sc[11] * x1688 + 30000000.0 * sc[16] * x1085 -
    30000000.0 * sc[16] * x1086 + 50000000.0 * sc[16] * x216 -
    50000000.0 * sc[16] * x894 - 60000000.0 * sc[19] * x1835 +
    60000000.0 * sc[19] * x1836 + 100000000.0 * sc[2] * x1229 -
    30000000.0 * sc[2] * x1835 + 30000000.0 * sc[2] * x1836 -
    48000000.0 * sc[2] * x1925 + 48000000.0 * sc[2] * x502 +
    40000000.0 * sc[3] * x1680 - 40000000.0 * sc[3] * x1688 -
    50000000.0 * sc[4] * x1835 + 50000000.0 * sc[4] * x1836 -
    8480000.0 * sc[8] * x1835 + 8480000.0 * sc[8] * x1836 - x1029 * x1835 +
    x1029 * x1836 - x1085 * x2176 - x1085 * x2179 - x1085 * x875 +
    x1086 * x2176 + x1086 * x2179 + x1086 * x875 - x11007 * x216 +
    x11007 * x894 + x11013 * x216 - x11013 * x894 + x11570 + x1360 -
    x1680 * x2008 + x1688 * x2008 - x1835 * x2266 - x1835 * x815 +
    x1835 * x976 + x1836 * x2266 + x1836 * x815 - x1836 * x976 - x1837 * x971 +
    x1882 * x971 + x1925 * x804 + x1925 * x891 + x36 * x482 - x502 * x804 -
    x502 * x891 + x576 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (x216 - x894) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[378] =
    14000000.0 * sc[11] * x1689 - 50000000.0 * sc[16] * x1070 +
    30000000.0 * sc[16] * x1087 - 30000000.0 * sc[16] * x1088 +
    50000000.0 * sc[16] * x955 + 40000000.0 * sc[16] +
    60000000.0 * sc[19] * x1815 + 73400000.0 * sc[1] * x1815 +
    100000000.0 * sc[1] - 57000000.0 * sc[2] * x1070 +
    15000000.0 * sc[2] * x1689 + 30000000.0 * sc[2] * x1815 +
    48000000.0 * sc[2] * x1932 + 57000000.0 * sc[2] * x955 +
    200000000.0 * sc[2] + 40000000.0 * sc[3] * x1689 +
    3200000.0 * sc[3] * x8239 + 50000000.0 * sc[4] * x1815 +
    8480000.0 * sc[8] * x1815 + 50000000.0 * sc[8] + x10146 - x1029 * x1761 +
    x1029 * x1815 + x1070 * x11007 - x1070 * x11013 + x10819 - x1087 * x2176 -
    x1087 * x2179 - x1087 * x875 + x1088 * x2176 + x1088 * x2179 +
    x1088 * x875 + x10979 + 2.69e+16 * x11006 * x1457 * x843 - x11007 * x955 +
    x11013 * x955 + x11304 + x11651 + x11657 + x11661 - x1689 * x2008 -
    x1761 * x815 + x1761 * x976 + x1815 * x2025 + x1815 * x2266 + x1815 * x815 -
    x1815 * x976 - x1932 * x804 - x1932 * x891 + x1985 + 50000000.0 * x674 +
    30000000.0 * x675 - x731 * x971 + x919 + x9278 + x9865 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1070 + x955) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[401] =
    14000000.0 * sc[11] * x1625 + 30000000.0 * sc[16] * x1089 -
    30000000.0 * sc[16] * x1092 + 50000000.0 * sc[16] * x958 +
    60000000.0 * sc[19] * x1817 + 73400000.0 * sc[1] * x1817 + sc[1] * x553 +
    15000000.0 * sc[2] * x1625 + 30000000.0 * sc[2] * x1817 +
    48000000.0 * sc[2] * x183 + 100000000.0 * sc[2] * x1945 +
    57000000.0 * sc[2] * x958 + 40000000.0 * sc[3] * x1625 +
    18000.0 * sc[3] * x837 + 50000000.0 * sc[4] * x1817 +
    8480000.0 * sc[8] * x1817 + x10146 - x1029 * x1761 + x1029 * x1817 -
    x1089 * x2176 - x1089 * x2179 - x1089 * x875 + x1092 * x2176 +
    x1092 * x2179 + x1092 * x875 + x10979 + x11007 * x1668 - x11007 * x958 -
    x11013 * x1668 + x11013 * x958 + 2.69e+21 * x11045 * x843 + x11138 +
    x11651 + x11657 + x11661 + x11691 - x1625 * x2008 - x1761 * x815 +
    x1761 * x976 + x1817 * x2025 + x1817 * x2266 + x1817 * x815 - x1817 * x976 -
    x183 * x804 - x183 * x891 + x341 + x36 * x837 - x731 * x971 + x86 + x919 +
    x9865 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1668 + x958) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[424] =
    14000000.0 * sc[11] * x1018 + 30000000.0 * sc[16] * x1141 +
    50000000.0 * sc[16] * x1694 + 60000000.0 * sc[19] * x1863 +
    73400000.0 * sc[1] * x1863 + 15000000.0 * sc[2] * x1018 +
    57000000.0 * sc[2] * x1694 + 30000000.0 * sc[2] * x1863 +
    48000000.0 * sc[2] * x233 + 40000000.0 * sc[3] * x1018 +
    18000.0 * sc[3] * x1265 + 50000000.0 * sc[4] * x1863 +
    8480000.0 * sc[8] * x1863 + x10146 - x1018 * x2008 + x1029 * x1863 -
    x11007 * x1694 + x11013 * x1694 - x1141 * x2176 - x1141 * x2179 -
    x1141 * x875 + x11651 + x11661 + x11691 + x11710 + x1265 * x36 +
    x1863 * x2025 + x1863 * x2266 + x1863 * x815 - x1863 * x976 - x1958 * x971 -
    x233 * x804 - x233 * x891 + x341 + x86 + x919 + x9865 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1668 + x1694) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[447] =
    14000000.0 * sc[11] * x1729 - 14000000.0 * sc[11] * x262 -
    50000000.0 * sc[16] * x1009 + 50000000.0 * sc[16] * x1057 +
    30000000.0 * sc[16] * x1161 - 30000000.0 * sc[16] * x1167 -
    60000000.0 * sc[19] * x1870 + 60000000.0 * sc[19] * x1873 -
    73400000.0 * sc[1] * x1870 + 73400000.0 * sc[1] * x1873 +
    15000000.0 * sc[2] * x1729 + 48000000.0 * sc[2] * x1946 -
    15000000.0 * sc[2] * x262 + 100000000.0 * sc[2] * x65 +
    40000000.0 * sc[3] * x1729 - 40000000.0 * sc[3] * x262 -
    50000000.0 * sc[4] * x1870 + 50000000.0 * sc[4] * x1873 -
    8480000.0 * sc[8] * x1870 + 8480000.0 * sc[8] * x1873 + x1009 * x11007 -
    x1009 * x11013 - x1029 * x1870 + x1029 * x1873 - x1057 * x11007 +
    x1057 * x11013 + x11138 - x1161 * x2176 - x1161 * x2179 - x1161 * x875 +
    x11657 + x1167 * x2176 + x1167 * x2179 + x1167 * x875 - x1729 * x2008 -
    x1870 * x2266 - x1870 * x815 + x1870 * x976 + x1873 * x2266 + x1873 * x815 -
    x1873 * x976 + x1896 * x36 - x1946 * x804 - x1946 * x891 + x2008 * x262 +
    x2118 + x2133 + x5566 + 60000000.0 * x578 - x655 * x971 + x773 + x9278 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1009 + x1057) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[470] =
    -60000000.0 * sc[10] * x1304 + 14000000.0 * sc[11] * x1675 +
    30000000.0 * sc[16] * x1443 + 50000000.0 * sc[16] * x784 +
    60000000.0 * sc[19] * x1874 + 73400000.0 * sc[1] * x1874 +
    15000000.0 * sc[2] * x1675 + 30000000.0 * sc[2] * x1874 +
    48000000.0 * sc[2] * x1949 + 57000000.0 * sc[2] * x784 +
    40000000.0 * sc[3] * x1675 - 40000000.0 * sc[3] * x1707 +
    50000000.0 * sc[4] * x1874 + 8480000.0 * sc[8] * x1874 + x10146 +
    x1029 * x1874 + x10819 - x11007 * x784 + x11013 * x784 + x11651 + x11659 +
    x11691 + x11710 - x1443 * x2176 - x1443 * x2179 - x1443 * x875 -
    x1675 * x2008 + x1707 * x2008 + x1874 * x2025 + x1874 * x2266 +
    x1874 * x815 - x1874 * x976 - x1949 * x804 - x1949 * x891 - x1966 * x971 +
    x86 + x906 + x919 + x9278 + x9865 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x1668 + x784) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[493] =
    14000000.0 * sc[11] * x1752 - 14000000.0 * sc[11] * x1757 +
    30000000.0 * sc[16] * x1444 - 30000000.0 * sc[16] * x1445 -
    50000000.0 * sc[16] * x647 + 50000000.0 * sc[16] * x669 +
    60000000.0 * sc[19] * x1876 + 48000000.0 * sc[2] * x1788 +
    30000000.0 * sc[2] * x1876 - 57000000.0 * sc[2] * x647 +
    57000000.0 * sc[2] * x669 + 40000000.0 * sc[3] * x1752 -
    40000000.0 * sc[3] * x1757 + 50000000.0 * sc[4] * x1876 +
    8480000.0 * sc[8] * x1876 + x10146 + x1029 * x1876 + x10819 +
    x11007 * x647 - x11007 * x669 - x11013 * x647 + x11013 * x669 + x11659 +
    x11709 - x1444 * x2176 - x1444 * x2179 - x1444 * x875 + x1445 * x2176 +
    x1445 * x2179 + x1445 * x875 - x1752 * x2008 + x1757 * x2008 -
    x1788 * x804 - x1788 * x891 + x1876 * x2025 + x1876 * x2266 + x1876 * x815 -
    x1876 * x976 + x1985 - x731 * x971 + x911 + x919 + x9278 + x9865 +
    (14000000.0 * sc[11] * x678 + 30000000.0 * sc[16] * x677 +
     60000000.0 * sc[19] * x680 + 73400000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x678 + 30000000.0 * sc[2] * x680 -
     48000000.0 * sc[2] * x683 + 40000000.0 * sc[3] * x678 +
     50000000.0 * sc[4] * x680 + 8480000.0 * sc[8] * x680 + x1029 * x680 -
     x2008 * x678 + x2025 * x680 - x2176 * x677 - x2179 * x677 + x2266 * x680 -
     x677 * x875 + x680 * x815 - x680 * x976 + x683 * x804 + x683 * x891) *
      (-x647 + x669) +
    (14000000.0 * sc[11] * x679 + 60000000.0 * sc[19] * x681 +
     73400000.0 * sc[1] * x681 - 100000000.0 * sc[2] * x660 +
     15000000.0 * sc[2] * x679 + 30000000.0 * sc[2] * x681 +
     48000000.0 * sc[2] * x684 + 40000000.0 * sc[3] * x679 +
     50000000.0 * sc[4] * x681 + 8480000.0 * sc[8] * x681 + x1029 * x681 -
     x2008 * x679 + x2025 * x681 + x2266 * x681 + x681 * x815 - x681 * x976 -
     x684 * x804 - x684 * x891) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-100000000.0 * sc[2] * x67 - 18000.0 * sc[3] * x231 - x231 * x36) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (60000000.0 * sc[19] * x682 + 73400000.0 * sc[1] * x682 -
     100000000.0 * sc[2] * x640 + 30000000.0 * sc[2] * x682 +
     50000000.0 * sc[4] * x682 + 8480000.0 * sc[8] * x682 + x1029 * x682 +
     x2025 * x682 + x2266 * x682 + x597 * x971 + x682 * x815 - x682 * x976) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (48000000.0 * sc[2] * x685 - 18000.0 * sc[3] * x483 - x36 * x483 +
     x448 * x971 - x685 * x804 - x685 * x891) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[11] =
    -14000000.0 * sc[11] * x1007 + 14000000.0 * sc[11] * x937 -
    30000000.0 * sc[2] * x923 + 30000000.0 * sc[2] * x932 +
    10000000.0 * sc[3] * x708 + x11013 * x1472 - x11013 * x985 - x2172 * x725 +
    x2172 * x790 - x2267 * x725 + x2267 * x790 + x696 * x725 - x696 * x790 +
    1204.0 * x7328 - 1204.0 * x7331 - x923 * x976 + x932 * x976 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1472 + x985) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-10000000.0 * sc[3] * x67) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985)));
  J[34] =
    -5280000.0 * sc[11] * sc[1] * x2169 - 14000000.0 * sc[11] * x1471 +
    14000000.0 * sc[11] * x1481 + 10000000.0 * sc[3] * x1650 - x1005 * x976 +
    x1074 * x976 - x11013 * x1665 + x11013 * x1692 + x11776 - x2172 * x926 +
    x2172 * x936 + x2182 - x2267 * x926 + x2267 * x936 + x696 * x926 -
    x696 * x936 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1665 - x1692) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-10000000.0 * sc[3] * x67) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692)));
  J[57] =
    sc[10] * x7326 * x7402 - 14000000.0 * sc[11] * x1482 - sc[11] * x225 +
    14000000.0 * sc[11] * x961 + sc[17] * x7448 + 10000000.0 * sc[3] * x1 -
    x11013 * x1753 + x11013 * x1773 + x11776 + x1633 * x976 - x2172 * x968 +
    x2172 * x995 - x2267 * x968 + x2267 * x995 + x5661 + x696 * x968 -
    x696 * x995 - x824 * x976 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1753 - x1773) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-10000000.0 * sc[3] * x67) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773)));
  J[80] =
    -14000000.0 * sc[11] * x1535 + 14000000.0 * sc[11] * x1537 +
    10000000.0 * sc[3] * x659 + x1000 * x2172 + x1000 * x2267 - x1000 * x696 -
    x11013 * x1822 + x11013 * x1838 - 10000000.0 * x1230 - x1656 * x976 +
    x1672 * x976 - x2172 * x999 - x2267 * x999 + x5741 - 10000000.0 * x643 +
    2640000.0 * x675 * exp(-754.82499870708 * invT) + x696 * x999 +
    3612.0 * x7328 - 3612.0 * x7331 + x7476 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1822 - x1838) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-10000000.0 * sc[3] * x67) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838)));
  J[103] =
    -14000000.0 * sc[11] * x1385 + 14000000.0 * sc[11] * x1563 -
    sc[11] * x9062 - 30000000.0 * sc[2] * x1686 + 30000000.0 * sc[2] * x548 +
    10000000.0 * sc[3] * x1701 - x1006 * x2172 - x1006 * x2267 + x1006 * x696 +
    x1008 * x2172 + x1008 * x2267 - x1008 * x696 - x11013 * x1824 +
    x11013 * x1887 + x11776 - x1686 * x976 + x548 * x976 + x5750 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1824 - x1887) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-10000000.0 * sc[3] * x67) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887)));
  J[126] =
    14000000.0 * sc[11] * x1320 - 14000000.0 * sc[11] * x1564 -
    30000000.0 * sc[2] * x1750 + 30000000.0 * sc[2] * x1751 +
    10000000.0 * sc[3] * x1682 - x1039 * x2172 - x1039 * x2267 + x1039 * x696 +
    x1042 * x2172 + x1042 * x2267 - x1042 * x696 - x11013 * x1956 +
    x11013 * x1973 - x1750 * x976 + x1751 * x976 + 3612.0 * x7328 -
    3612.0 * x7331 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1956 - x1973) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-10000000.0 * sc[3] * x67) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973)));
  J[149] =
    sc[10] * x9203 + 14000000.0 * sc[11] * x1440 - 14000000.0 * sc[11] * x921 -
    30000000.0 * sc[2] * x1756 + 30000000.0 * sc[2] * x1768 +
    10000000.0 * sc[3] * x1649 - x1043 * x2172 - x1043 * x2267 + x1043 * x696 +
    x1045 * x2172 + x1045 * x2267 - x1045 * x696 - x11013 * x2014 +
    x11013 * x2032 + x11776 - x1756 * x976 + x1768 * x976 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x2014 - x2032) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-10000000.0 * sc[3] * x67) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032)));
  J[172] =
    -14000000.0 * sc[11] * x1580 + 14000000.0 * sc[11] * x476 +
    10000000.0 * sc[3] * x1649 - x1051 * x2172 - x1051 * x2267 + x1051 * x696 +
    x1052 * x2172 + x1052 * x2267 - x1052 * x696 - x11013 * x2070 +
    x11013 * x2087 + x11776 - x1770 * x976 + x1772 * x976 + x6137 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x2070 - x2087) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-10000000.0 * sc[3] * x67) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087)));
  J[195] =
    14000000.0 * sc[11] * x315 - 14000000.0 * sc[11] * x789 +
    10000000.0 * sc[3] * x1649 - x1056 * x2172 - x1056 * x2267 + x1056 * x696 +
    x1059 * x2172 + x1059 * x2267 - x1059 * x696 - x11013 * x2080 +
    x11013 * x2141 + x11776 - x1779 * x976 + x1782 * x976 + x6235 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x2080 - x2141) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-10000000.0 * sc[3] * x67) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141)));
  J[218] =
    14000000.0 * sc[11] * x1149 - 14000000.0 * sc[11] * x646 +
    30000000.0 * sc[2] * x1742 - 30000000.0 * sc[2] * x1787 +
    10000000.0 * sc[3] * x1758 - x1060 * x2172 - x1060 * x2267 + x1060 * x696 +
    x1062 * x2172 + x1062 * x2267 - x1062 * x696 + x11013 * x2186 -
    x11013 * x649 + x1742 * x976 - x1787 * x976 + 1204.0 * x7328 -
    1204.0 * x7331 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x2186 + x649) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649)));
  J[241] =
    14000000.0 * sc[11] * x1037 - 14000000.0 * sc[11] * x1590 +
    14000000.0 * sc[12] * x1417 - 30000000.0 * sc[2] * x1676 +
    30000000.0 * sc[2] * x1741 + sc[2] * x7326 * x7402 +
    10000000.0 * sc[3] * x311 + sc[6] * x9203 - x1064 * x2172 - x1064 * x2267 +
    x1064 * x696 + x1071 * x2172 + x1071 * x2267 - x1071 * x696 +
    x11013 * x2271 - x11013 * x946 - x1676 * x976 + x1741 * x976 + x578 * x895 +
    x6324 + 903.0 * x7328 - 903.0 * x7331 + x7776 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x2271 + x946) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-10000000.0 * sc[3] * x67) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946)));
  J[264] =
    14000000.0 * sc[11] * x1047 - 14000000.0 * sc[11] * x963 -
    2640000.0 * ((sc[1]) * (sc[1])) * x2169 - 30000000.0 * sc[1] * x1294 -
    sc[1] * x2181 - 30000000.0 * sc[2] * x1749 + 30000000.0 * sc[2] * x1814 -
    sc[2] * x225 + 10000000.0 * sc[3] * x707 - sc[4] * x9062 - x1072 * x2172 -
    x1072 * x2267 + x1072 * x696 + x1073 * x2172 + x1073 * x2267 -
    x1073 * x696 - x11013 * x1480 + x11013 * x2323 - x1749 * x976 +
    x1814 * x976 - x222 * x675 - 10000000.0 * x238 * x675 - 14000000.0 * x595 -
    3400000.0 * x674 * exp(-347.21949940525701 * invT) + 2107.0 * x7328 -
    x7330 * x7402 - 2107.0 * x7331 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1480 - x2323) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323)));
  J[287] =
    14000000.0 * sc[10] * x1417 - 14000000.0 * sc[11] * x1640 +
    14000000.0 * sc[11] * x1659 + 10000000.0 * sc[3] * x1649 - x1075 * x2172 -
    x1075 * x2267 + x1075 * x696 - x11013 * x1453 + x11013 * x2360 + x11776 -
    x1818 * x976 + x1819 * x976 + x2172 * x671 + x2267 * x671 + x6587 -
    x671 * x696 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x1453 - x2360) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-10000000.0 * sc[3] * x67) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360)));
  J[310] =
    -14000000.0 * sc[11] * x1663 + 14000000.0 * sc[11] * x1664 -
    30000000.0 * sc[2] * x1821 + 30000000.0 * sc[2] * x1823 +
    10000000.0 * sc[3] * x1522 + x1035 * x11013 - x1078 * x2172 -
    x1078 * x2267 + x1078 * x696 + x1080 * x2172 + x1080 * x2267 -
    x1080 * x696 - x11013 * x809 - x1821 * x976 + x1823 * x976 +
    1806.0 * x7328 - 1806.0 * x7331 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1035 + x809) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-10000000.0 * sc[3] * x67) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809)));
  J[333] =
    -14000000.0 * sc[11] * x1670 + 14000000.0 * sc[11] * x1679 -
    30000000.0 * sc[2] * x1828 + 30000000.0 * sc[2] * x1834 +
    10000000.0 * sc[3] * x1829 - x1083 * x2172 - x1083 * x2267 + x1083 * x696 +
    x1084 * x2172 + x1084 * x2267 - x1084 * x696 + x11013 * x1118 -
    x11013 * x1205 - x1828 * x976 + x1834 * x976 + 1806.0 * x7328 -
    1806.0 * x7331 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1118 + x1205) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205)));
  J[356] =
    -14000000.0 * sc[11] * x1680 + 14000000.0 * sc[11] * x1688 -
    30000000.0 * sc[2] * x1835 + 30000000.0 * sc[2] * x1836 +
    10000000.0 * sc[3] * x1229 - x1085 * x2172 - x1085 * x2267 + x1085 * x696 +
    x1086 * x2172 + x1086 * x2267 - x1086 * x696 - x11013 * x216 +
    x11013 * x894 - x1835 * x976 + x1836 * x976 + 1806.0 * x7328 -
    1806.0 * x7331 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (x216 - x894) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894)));
  J[379] =
    -14000000.0 * sc[11] * x1689 + 14000000.0 * sc[11] * x1707 +
    30000000.0 * sc[2] * x1815 + x1070 * x11013 - x1087 * x2172 -
    x1087 * x2267 + x1087 * x696 + x1088 * x2172 + x1088 * x2267 -
    x1088 * x696 - x11013 * x955 + x11781 + x1815 * x976 + x919 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1070 + x955) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-10000000.0 * sc[3] * x67) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955)));
  J[402] =
    -sc[11] * x1089 * x222 - 10000000.0 * sc[11] * x1089 * x238 -
    14000000.0 * sc[11] * x1625 + 14000000.0 * sc[11] * x1707 +
    30000000.0 * sc[2] * x1817 + sc[2] * x7448 + 10000000.0 * sc[3] * x1945 +
    x1089 * x696 - x11013 * x958 + x11776 + x11783 - x1761 * x976 +
    x1817 * x976 + x919 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1668 + x958) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-10000000.0 * sc[3] * x67) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958)));
  J[425] =
    -14000000.0 * sc[11] * x1018 + 14000000.0 * sc[11] * x1707 +
    30000000.0 * sc[2] * x1863 - x11013 * x1694 - x1141 * x2172 -
    x1141 * x2267 + x1141 * x696 + x11781 + x11783 + x1863 * x976 + x919 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1668 + x1694) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)));
  J[448] =
    -14000000.0 * sc[11] * x1729 + 14000000.0 * sc[11] * x262 +
    10000000.0 * sc[3] * x65 + x1009 * x11013 - x1057 * x11013 - x1161 * x2172 -
    x1161 * x2267 + x1161 * x696 + x1167 * x2172 + x1167 * x2267 -
    x1167 * x696 + x11776 - x1870 * x976 + x1873 * x976 + x2118 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1009 + x1057) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057)));
  J[471] =
    -14000000.0 * sc[11] * x1675 + 14000000.0 * sc[11] * x1707 +
    30000000.0 * sc[2] * x1874 - x11013 * x784 + x11781 + x11783 -
    x1443 * x2172 - x1443 * x2267 + x1443 * x696 + x1874 * x976 + x919 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x1668 + x784) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-10000000.0 * sc[3] * x67) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784)));
  J[494] =
    -14000000.0 * sc[11] * x1752 + 14000000.0 * sc[11] * x1757 +
    30000000.0 * sc[2] * x1876 + x11013 * x647 - x11013 * x669 + x11781 -
    x1444 * x2172 - x1444 * x2267 + x1444 * x696 + x1445 * x2172 +
    x1445 * x2267 - x1445 * x696 + x1876 * x976 + x919 +
    (-14000000.0 * sc[11] * x678 + 30000000.0 * sc[2] * x680 - x2172 * x677 -
     x2267 * x677 + x677 * x696 + x680 * x976) *
      (-x647 + x669) +
    (-14000000.0 * sc[11] * x679 + 30000000.0 * sc[2] * x681 -
     10000000.0 * sc[3] * x660 + x681 * x976) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-10000000.0 * sc[3] * x67) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (30000000.0 * sc[2] * x682 - 10000000.0 * sc[3] * x640 + x682 * x976) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669)));
  J[12] =
    5070000000000000.0 * sc[10] * x10 * x840 + 14000000.0 * sc[11] * x1007 -
    14000000.0 * sc[11] * x937 - 20000000.0 * sc[12] * x1404 +
    20000000.0 * sc[1] * x1879 + 96000000.0 * sc[2] * x1636 +
    18000.0 * sc[3] * x1243 + 5000000.0 * sc[4] * x1879 + x10236 + x1066 +
    x1472 * x914 - x1687 * x923 + x1687 * x932 + x1879 * x823 + x2171 * x897 -
    x2171 * x908 - x2177 * x923 + x2177 * x932 - x2270 * x725 + x2270 * x790 -
    x2284 * x756 + x2284 * x779 - x2355 * x923 + x2355 * x932 - x571 * x923 +
    x571 * x932 + x871 + x8835 - x914 * x985 + x923 * x984 - x932 * x984 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1472 + x985) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-18000.0 * sc[3] * x231) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[35] =
    14000000.0 * sc[11] * x1471 - 14000000.0 * sc[11] * x1481 + sc[17] * x718 +
    20000000.0 * sc[1] * x609 + 96000000.0 * sc[2] * x362 +
    18000.0 * sc[3] * x207 + 5000000.0 * sc[4] * x609 +
    1350000000000.0 * x10 * x1002 - x1005 * x1687 - x1005 * x2177 -
    x1005 * x2355 - x1005 * x571 + x1005 * x984 + x10351 + x1069 * x2171 +
    x1074 * x1687 + x1074 * x2177 + x1074 * x2355 + x1074 * x571 -
    x1074 * x984 - 20000000.0 * x1411 - x1526 * x2171 - x1560 * x2284 -
    x1665 * x914 + x1692 * x914 + x2134 - x2270 * x926 + x2270 * x936 +
    x2284 * x423 + x5473 + x551 + x609 * x823 + x8912 - 20000000.0 * x930 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1665 - x1692) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-18000.0 * sc[3] * x231) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[58] =
    14000000.0 * sc[11] * x1482 - 14000000.0 * sc[11] * x961 - sc[12] * x7471 +
    0.384 * sc[14] * exp(x2260) + 20000000.0 * sc[1] * x624 +
    96000000.0 * sc[2] * x1063 + 18000.0 * sc[3] * x220 +
    5000000.0 * sc[4] * x624 + x10396 - x1081 * x2284 + x115 * x2171 -
    96000000.0 * x1340 + x1633 * x1687 + x1633 * x2177 + x1633 * x2355 +
    x1633 * x571 - x1633 * x984 - x1653 * x2171 - x1687 * x824 + x1718 * x2284 -
    x1753 * x914 + x1773 * x914 + x2134 - x2177 * x824 - x2270 * x968 +
    x2270 * x995 - x2355 * x824 + x551 + x5657 - x571 * x824 + x624 * x823 -
    96000000.0 * x766 + x824 * x984 + x8959 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1753 - x1773) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-18000.0 * sc[3] * x231) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[81] =
    -sc[12] * x8302 + 20000000.0 * sc[1] * x998 + 96000000.0 * sc[2] * x185 +
    5000000.0 * sc[4] * x998 + x1000 * x2270 + x10418 + x11202 + x1501 * x433 +
    x1654 * x2171 - x1656 * x1687 - x1656 * x2177 - x1656 * x2355 -
    x1656 * x571 + x1656 * x984 + x1672 * x1687 + x1672 * x2177 +
    x1672 * x2355 + x1672 * x571 - x1672 * x984 - x1685 * x2171 + x170 * x991 +
    x1739 * x2284 - x1822 * x914 + x1838 * x914 + x2134 - x2270 * x999 -
    x2284 * x250 + x551 + x5731 + x823 * x998 + x9001 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1822 - x1838) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-18000.0 * sc[3] * x231) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[104] =
    20000000.0 * sc[1] * x1678 + 96000000.0 * sc[2] * x1981 +
    5000000.0 * sc[4] * x1678 - x1006 * x2270 + x1008 * x2270 + x10441 +
    x11231 - 5000000.0 * x1411 + x1678 * x823 - x1686 * x1687 - x1686 * x2177 -
    x1686 * x2355 - x1686 * x571 + x1686 * x984 + x1687 * x548 + x1708 * x2171 -
    x1745 * x2171 + x1759 * x2284 - x1780 * x2284 - x1824 * x914 +
    x1887 * x914 + x2134 + x2177 * x548 + x2355 * x548 + x548 * x571 -
    x548 * x984 + x551 + x578 * x885 + x5830 + 20000000.0 * x675 + x9103 -
    5000000.0 * x930 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1824 - x1887) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-18000.0 * sc[3] * x231) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[127] =
    -14000000.0 * sc[11] * x1320 + 14000000.0 * sc[11] * x1564 -
    5000000.0 * sc[12] * x1398 + 8100000000000.0 * sc[1] * x1002 +
    20000000.0 * sc[1] * x1871 + 96000000.0 * sc[2] * x1880 +
    18000.0 * sc[3] * x1763 + 5000000.0 * sc[4] * x1871 +
    1.0032110091743101e+19 * x1004 * x1050 -
    1.0032110091743101e+19 * x1004 * x150 +
    x1011 * (12.0 * x1010 * x693 + 1.68 * x173 * x693) - x1039 * x2270 +
    x1042 * x2270 + x10480 - 8100000000000.0 * x1053 - x1687 * x1750 +
    x1687 * x1751 + x1747 * x2171 - x1748 * x2171 - x1750 * x2177 -
    x1750 * x2355 - x1750 * x571 + x1750 * x984 + x1751 * x2177 +
    x1751 * x2355 + x1751 * x571 - x1751 * x984 - x1760 * x2284 +
    x1844 * x2284 + x1871 * x823 - x1956 * x914 + x1973 * x914 +
    3.5867302325581401e+30 * x211 * x846 -
    x587 * (12.0 * x1010 * x693 + 1.68 * x173 * x693) + x620 -
    3.5867302325581401e+30 * x846 * x856 - 3.042e+16 * x878 +
    x882 * (12.0 * x759 + 1.68 * x862) + 3.042e+16 * x887 -
    x89 * (12.0 * x759 + 1.68 * x862) + x9173 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1956 - x1973) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-18000.0 * sc[3] * x231) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[150] =
    -14000000.0 * sc[11] * x1440 + 14000000.0 * sc[11] * x921 +
    20000000.0 * sc[1] * x1408 + 96000000.0 * sc[2] * x1977 +
    18000.0 * sc[3] * x1826 + 5000000.0 * sc[4] * x1408 - x1043 * x2270 +
    x1045 * x2270 + x10503 - x1687 * x1756 + x1687 * x1768 + x1755 * x2171 -
    x1756 * x2177 - x1756 * x571 + x1756 * x984 + x1768 * x2177 + x1768 * x571 -
    x1768 * x984 - x1865 * x2284 + x1867 * x2284 - x2014 * x914 + x2032 * x914 +
    x2134 - x2171 * x227 + x2318 * x578 + x551 + x6060 + 20000000.0 * x675 +
    x9226 + x9989 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x2014 - x2032) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-18000.0 * sc[3] * x231) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[173] =
    14000000.0 * sc[11] * x1580 - 14000000.0 * sc[11] * x476 - x1051 * x2270 +
    x1052 * x2270 + x10527 + x11790 - x1687 * x1770 + x1687 * x1772 +
    x1767 * x2171 - x1770 * x2177 - x1770 * x2355 - x1770 * x571 +
    x1770 * x984 + x1772 * x2177 + x1772 * x2355 + x1772 * x571 - x1772 * x984 -
    x1812 * x2171 + x1875 * x2284 + x1885 * x823 - x1891 * x2284 -
    x2070 * x914 + x2087 * x914 + x2354 * x578 + x6136 + x6153 + x9264 + x9278 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x2070 - x2087) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-18000.0 * sc[3] * x231) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[196] =
    -14000000.0 * sc[11] * x315 + 14000000.0 * sc[11] * x789 +
    20000000.0 * sc[1] * x1641 + 96000000.0 * sc[2] * x339 +
    18000.0 * sc[3] * x1240 + 5000000.0 * sc[4] * x1641 - x1056 * x2270 +
    x10578 + x1059 * x2270 + x1641 * x823 - x1687 * x1779 + x1687 * x1782 -
    x1779 * x2177 - x1779 * x2355 - x1779 * x571 + x1779 * x984 +
    x1782 * x2177 + x1782 * x2355 + x1782 * x571 - x1782 * x984 +
    x1813 * x2171 - x1833 * x2171 - x1881 * x2284 + x1960 * x2284 -
    x2080 * x914 + x2134 + x2141 * x914 + x551 + x6234 + x9327 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x2080 - x2141) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-18000.0 * sc[3] * x231) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[219] =
    -14000000.0 * sc[11] * x1149 + 14000000.0 * sc[11] * x646 +
    20000000.0 * sc[1] * x634 + 96000000.0 * sc[2] * x2010 +
    5000000.0 * sc[4] * x634 - x1060 * x2270 + x10613 + x1062 * x2270 +
    x1687 * x1742 - x1687 * x1787 + x1742 * x2177 + x1742 * x2355 +
    x1742 * x571 - x1742 * x984 - x1787 * x2177 - x1787 * x2355 - x1787 * x571 +
    x1787 * x984 - x1825 * x2171 + x1841 * x2171 - x1961 * x2284 +
    x1962 * x2284 + x2186 * x914 + x6311 + x634 * x823 - x649 * x914 + x871 +
    x9368 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x2186 + x649) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-18000.0 * sc[3] * x231) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[242] =
    5070000000000000.0 * sc[0] * x10 * x840 + 2025000000000.0 * sc[1] * x1002 +
    20000000.0 * sc[1] * x722 + 96000000.0 * sc[2] * x2011 +
    5000000.0 * sc[4] * x722 + 2.5080275229357798e+18 * x1004 * x1050 -
    2.5080275229357798e+18 * x1004 * x150 +
    x1011 * (3.0 * x1010 * x693 + 0.42 * x173 * x693) - x1064 * x2270 + x10660 +
    x1071 * x2270 + x11458 - 2025000000000.0 * x1278 * x1280 - x1676 * x1687 -
    x1676 * x2177 - x1676 * x2355 - x1676 * x571 + x1676 * x984 +
    x1687 * x1741 + x1741 * x2177 + x1741 * x2355 + x1741 * x571 -
    x1741 * x984 + x1830 * x2171 - x1831 * x2171 - x1968 * x2284 +
    x1969 * x2284 + 8.9668255813953501e+29 * x211 * x846 + x2271 * x914 -
    x587 * (3.0 * x1010 * x693 + 0.42 * x173 * x693) + x6455 + x722 * x823 -
    8.9668255813953501e+29 * x846 * x856 - 7605000000000000.0 * x878 +
    x882 * (3.0 * x759 + 0.42 * x862) + 7605000000000000.0 * x887 -
    x89 * (3.0 * x759 + 0.42 * x862) - x914 * x946 + x9425 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x2271 + x946) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-18000.0 * sc[3] * x231) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[265] =
    -14000000.0 * sc[11] * x1047 + 14000000.0 * sc[11] * x963 +
    20000000.0 * sc[1] * x634 + 96000000.0 * sc[2] * x774 +
    5000000.0 * sc[4] * x634 + x10683 - x1072 * x2270 + x1073 * x2270 -
    x1480 * x914 + x1545 - x1687 * x1749 + x1687 * x1814 - x1749 * x2177 -
    x1749 * x2355 - x1749 * x571 + x1749 * x984 + x1814 * x2177 +
    x1814 * x2355 + x1814 * x571 - x1814 * x984 - x1877 * x2171 +
    x1970 * x2284 + x2171 * x896 - x2284 * x755 + x2323 * x914 +
    14000000.0 * x595 + x634 * x823 + x871 + x9463 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1480 - x2323) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-18000.0 * sc[3] * x231) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[288] =
    -20000000.0 * sc[0] * x1404 - 14000000.0 * sc[10] * x1417 +
    14000000.0 * sc[11] * x1640 - 14000000.0 * sc[11] * x1659 +
    20000000.0 * sc[1] * x1533 + 96000000.0 * sc[2] * x1554 - sc[2] * x7471 +
    18000.0 * sc[3] * x229 - sc[3] * x8302 -
    24000000.0 * sc[4] * x1238 * x1343 + 5000000.0 * sc[4] * x1533 -
    5000000.0 * sc[5] * x1398 + 24000000.0 * sc[6] * x1971 -
    24000000.0 * sc[6] * x1979 + x10083 + x10708 - x1075 * x2270 -
    5070000000000000.0 * x120 * x843 - 18000.0 * x1249 * x1251 -
    1350000000000.0 * x1280 * x843 - x1453 * x914 - x1489 * x578 -
    x1687 * x1818 + x1687 * x1819 - x1818 * x2177 - x1818 * x571 +
    x1818 * x984 + x1819 * x2177 + x1819 * x571 - x1819 * x984 + x1886 * x2171 -
    x1897 * x2171 - x1971 * x2284 + x1979 * x2284 + x2126 + x2134 +
    x2270 * x671 + x2360 * x914 - x244 * x675 - 96000000.0 * x325 * x329 +
    x551 - 94600000.0 * x674 * exp(259.15658288943098 * invT) + x9517 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x1453 - x2360) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-18000.0 * sc[3] * x231) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[311] =
    14000000.0 * sc[11] * x1663 - 14000000.0 * sc[11] * x1664 +
    96000000.0 * sc[2] * x2009 + 24000000.0 * sc[6] * x2009 + x1035 * x914 +
    x10732 - x1078 * x2270 + x1080 * x2270 + x11793 + x1410 * x823 + x1521 -
    x1687 * x1821 + x1687 * x1823 - x1821 * x2177 - x1821 * x2355 -
    x1821 * x571 + x1821 * x984 + x1823 * x2177 + x1823 * x2355 + x1823 * x571 -
    x1823 * x984 + x1860 * x2171 - x1862 * x2171 + x1884 * x2284 -
    x1987 * x2284 - x809 * x914 + x9549 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1035 + x809) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-18000.0 * sc[3] * x231) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[334] =
    14000000.0 * sc[11] * x1670 - 14000000.0 * sc[11] * x1679 +
    96000000.0 * sc[2] * x374 + 0.384 * sc[2] * exp(x2260) + x10243 -
    x1083 * x2270 + x1084 * x2270 + x1118 * x914 + x11793 - x1205 * x914 +
    x1410 * x823 - x1687 * x1828 + x1687 * x1834 - x1828 * x2177 -
    x1828 * x2355 - x1828 * x571 + x1828 * x984 + x1834 * x2177 +
    x1834 * x2355 + x1834 * x571 - x1834 * x984 - x1862 * x2171 +
    x1872 * x2171 + x188 + x1884 * x2284 - x1947 * x2284 + x9591 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1118 + x1205) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-18000.0 * sc[3] * x231) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[357] =
    14000000.0 * sc[11] * x1680 - 14000000.0 * sc[11] * x1688 +
    96000000.0 * sc[2] * x1716 + x1041 + x10806 - x1085 * x2270 +
    x1086 * x2270 + x11793 + x1410 * x823 - x1687 * x1835 + x1687 * x1836 -
    x1835 * x2177 - x1835 * x2355 - x1835 * x571 + x1835 * x984 +
    x1836 * x2177 + x1836 * x2355 + x1836 * x571 - x1836 * x984 -
    x1837 * x2284 + x1882 * x2284 - x1925 * x2171 - x216 * x914 + x2171 * x502 +
    x894 * x914 + x9630 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (x216 - x894) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-18000.0 * sc[3] * x231) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[380] =
    14000000.0 * sc[11] * x1689 + 16040000.0 * sc[2] * x731 +
    20000000.0 * sc[6] * x1087 - 20000000.0 * sc[6] * x1088 + x10144 +
    x1070 * x914 + x10829 - x1087 * x2270 + x1088 * x2270 + x11651 + x11801 +
    x1233 + x1687 * x1815 + x1815 * x2177 + x1815 * x2245 + x1815 * x2355 +
    x1815 * x2359 + x1815 * x571 - x1815 * x984 + x1932 * x2171 - x1932 * x948 -
    x2284 * x731 + x8027 + x8704 - x914 * x955 + x9278 + x9657 + x9660 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1070 + x955) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-18000.0 * sc[3] * x231) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[403] =
    14000000.0 * sc[11] * x1625 + sc[1] * x718 + 16040000.0 * sc[2] * x731 +
    18000.0 * sc[3] * x837 + 20000000.0 * sc[4] * x1089 +
    30000000.0 * sc[4] * x1625 + 20000000.0 * sc[6] * x1089 + x10144 + x10829 -
    x1089 * x2270 + x1092 * x2270 + x11651 + x11801 + x1668 * x914 +
    x1687 * x1817 + x1817 * x2016 + x1817 * x2177 + x1817 * x2245 +
    x1817 * x2355 + x1817 * x2359 + x1817 * x571 - x1817 * x984 + x183 * x2171 -
    x183 * x948 + x2078 - x2284 * x731 + x783 * x958 + x8027 + x8704 -
    x914 * x958 + x9660 + x9702 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1668 + x958) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-18000.0 * sc[3] * x231) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[426] =
    14000000.0 * sc[11] * x1018 + 16040000.0 * sc[2] * x1958 +
    18000.0 * sc[3] * x1265 + 30000000.0 * sc[4] * x1018 +
    20000000.0 * sc[4] * x1141 + 24000000.0 * sc[6] * x1958 + x10144 + x10829 +
    x1092 * x2270 - x1141 * x2270 + x11651 + x11801 + x1668 * x914 +
    x1687 * x1863 + x1694 * x783 - x1694 * x914 + x1863 * x2016 +
    x1863 * x2177 + x1863 * x2355 + x1863 * x2359 + x1863 * x571 -
    x1863 * x984 - x1958 * x2284 + x2078 + x2171 * x233 + x8027 + x8704 +
    x9727 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1668 + x1694) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-18000.0 * sc[3] * x231) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[449] =
    14000000.0 * sc[11] * x1729 - 14000000.0 * sc[11] * x262 + x1009 * x914 -
    x1057 * x914 + x10892 - x1161 * x2270 + x1167 * x2270 + x11790 -
    x1687 * x1870 + x1687 * x1873 - x1870 * x2177 - x1870 * x2355 -
    x1870 * x571 + x1870 * x984 + x1873 * x2177 + x1873 * x2355 + x1873 * x571 -
    x1873 * x984 + x1885 * x823 - x1937 * x2171 + x1946 * x2171 +
    x1957 * x2284 - x2284 * x655 + x399 + x6153 + x9278 + x9753 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1009 + x1057) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-18000.0 * sc[3] * x231) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[472] =
    14000000.0 * sc[11] * x1675 + 20000000.0 * sc[1] * x1885 +
    96000000.0 * sc[2] * x1339 + 16040000.0 * sc[2] * x1966 +
    20000000.0 * sc[4] * x1443 + 30000000.0 * sc[4] * x1675 +
    24000000.0 * sc[6] * x1966 + x10144 + x10829 + x1092 * x2270 + x11651 -
    x1443 * x2270 + x1668 * x914 + x1687 * x1874 - x1761 * x571 + x1761 * x984 +
    x1874 * x2016 + x1874 * x2177 + x1874 * x2355 + x1874 * x2359 +
    x1874 * x571 - x1874 * x984 - x1937 * x2171 + x1949 * x2171 +
    x1957 * x2284 - x1966 * x2284 + x2078 + x551 + x783 * x784 - x784 * x914 +
    x8027 + x8704 + x9267 + x9278 + x9702 + x9781 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x1668 + x784) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-18000.0 * sc[3] * x231) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[495] =
    14000000.0 * sc[11] * x1752 - 14000000.0 * sc[11] * x1757 +
    16040000.0 * sc[2] * x731 + 20000000.0 * sc[6] * x1444 -
    20000000.0 * sc[6] * x1445 + x10144 + x10829 + x11801 - x1444 * x2270 +
    x1445 * x2270 + x1687 * x1876 + x1788 * x2171 - x1788 * x948 +
    x1876 * x2177 + x1876 * x2245 + x1876 * x2355 + x1876 * x2359 +
    x1876 * x571 - x1876 * x984 - x2284 * x731 + x647 * x914 - x669 * x914 +
    x7290 + x8027 + x8704 + x9278 + x9657 + x9660 +
    (14000000.0 * sc[11] * x678 + 20000000.0 * sc[4] * x677 +
     30000000.0 * sc[4] * x678 + 20000000.0 * sc[6] * x677 + x1687 * x680 +
     x2016 * x680 - x2171 * x683 + x2177 * x680 + x2245 * x680 - x2270 * x677 +
     x2355 * x680 + x2359 * x680 + x571 * x680 - x680 * x984 + x683 * x948) *
      (-x647 + x669) +
    (14000000.0 * sc[11] * x679 + 30000000.0 * sc[4] * x679 + x1687 * x681 +
     x2016 * x681 + x2171 * x684 + x2177 * x681 + x2245 * x681 + x2355 * x681 +
     x2359 * x681 + x571 * x681 - x681 * x984 - x684 * x948) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-18000.0 * sc[3] * x231) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-96000000.0 * sc[2] * x376 - 24000000.0 * sc[6] * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-20000000.0 * sc[1] * x637 - 16040000.0 * sc[2] * x597 -
     10000000.0 * sc[2] * x637 - 5000000.0 * sc[4] * x637 -
     24000000.0 * sc[6] * x597 + x1687 * x682 + x2016 * x682 - x2140 * x637 +
     x2177 * x682 + x2245 * x682 + x2284 * x597 + x2322 * x597 + x2355 * x682 +
     x2359 * x682 + x571 * x682 - x637 * x823 - x682 * x984) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-16040000.0 * sc[2] * x448 - 18000.0 * sc[3] * x483 -
     24000000.0 * sc[6] * x448 + x2171 * x685 + x2284 * x448 + x2322 * x448 -
     x685 * x948) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[13] =
    -32000000.0 * sc[13] * x1134 - 30000000.0 * sc[13] * x1174 -
    50000000.0 * sc[16] * x1472 + 50000000.0 * sc[16] * x985 +
    100000000.0 * sc[1] * x708 + 30000000.0 * sc[1] * x897 -
    30000000.0 * sc[1] * x908 + 30110000.0 * sc[4] * x897 -
    30110000.0 * sc[4] * x908 + 392000.0 * sc[8] * x897 -
    392000.0 * sc[8] * x908 + x11814 + x2021 * x897 - x2021 * x908 + x2022 +
    x2176 * x725 - x2176 * x790 + x2250 * x897 - x2250 * x908 + x25 * x708 +
    x804 * x897 - x804 * x908 + x815 * x923 - x815 * x932 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1472 + x985) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[36] =
    -100000000.0 * sc[13] * x1223 + 50000000.0 * sc[16] * x1665 -
    50000000.0 * sc[16] * x1692 + sc[16] * x204 + sc[17] * x276 +
    30000000.0 * sc[1] * x1069 - 30000000.0 * sc[1] * x1526 +
    100000000.0 * sc[1] * x1650 + 30110000.0 * sc[4] * x1069 -
    30110000.0 * sc[4] * x1526 + 392000.0 * sc[8] * x1069 -
    392000.0 * sc[8] * x1526 + x1005 * x815 + x1069 * x2250 + x1069 * x804 -
    x1074 * x815 + x11819 - 100000000.0 * x1230 - x1526 * x2250 - x1526 * x804 +
    x1650 * x25 + 30000000.0 * x170 + x2176 * x926 - x2176 * x936 + x5568 -
    100000000.0 * x643 + x973 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1665 - x1692) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[59] =
    -20.4 * sc[13] * x5621 + 50000000.0 * sc[16] * x1753 -
    50000000.0 * sc[16] * x1773 + 100000000.0 * sc[1] * x1 +
    30000000.0 * sc[1] * x115 - 30000000.0 * sc[1] * x1653 +
    30110000.0 * sc[4] * x115 - 30110000.0 * sc[4] * x1653 +
    392000.0 * sc[8] * x115 - 392000.0 * sc[8] * x1653 + x1 * x25 +
    x115 * x2021 + x115 * x2250 + x115 * x804 + x11819 - x1633 * x815 -
    x1653 * x2021 - x1653 * x2250 - x1653 * x804 + x2176 * x968 - x2176 * x995 +
    x5568 + x815 * x824 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1753 - x1773) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[82] =
    -10.0 * sc[13] * x1672 * exp(x296) + 50000000.0 * sc[16] * x1822 -
    50000000.0 * sc[16] * x1838 + 30000000.0 * sc[1] * x1654 -
    30000000.0 * sc[1] * x1685 + 100000000.0 * sc[1] * x659 +
    30110000.0 * sc[4] * x1654 - 30110000.0 * sc[4] * x1685 +
    392000.0 * sc[8] * x1654 - 392000.0 * sc[8] * x1685 - x1000 * x2176 +
    x11819 + x165 * x170 + x1654 * x2021 + x1654 * x2250 + x1654 * x804 +
    x1656 * x815 - x1685 * x2021 - x1685 * x2250 - x1685 * x804 + x2176 * x999 +
    x25 * x659 + x5568 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1822 - x1838) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[105] =
    -sc[13] * x5811 - sc[13] * x9074 + 50000000.0 * sc[16] * x1824 -
    50000000.0 * sc[16] * x1887 + 100000000.0 * sc[1] * x1701 +
    30000000.0 * sc[1] * x1708 - 30000000.0 * sc[1] * x1745 +
    30110000.0 * sc[4] * x1708 - 30110000.0 * sc[4] * x1745 +
    392000.0 * sc[8] * x1708 - 392000.0 * sc[8] * x1745 + x1006 * x2176 -
    x1008 * x2176 + x11819 + x1686 * x815 + 30110000.0 * x170 + x1701 * x25 +
    x1708 * x2021 + x1708 * x2250 + x1708 * x804 - x1745 * x2021 -
    x1745 * x2250 - x1745 * x804 - x548 * x815 + x5568 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1824 - x1887) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[128] =
    -14700000000.0 * sc[13] * x11806 - 30110000.0 * sc[13] * x1200 +
    50000000.0 * sc[16] * x1956 - 50000000.0 * sc[16] * x1973 +
    100000000.0 * sc[1] * x1682 + 30000000.0 * sc[1] * x1747 -
    30000000.0 * sc[1] * x1748 + 30110000.0 * sc[4] * x1747 -
    30110000.0 * sc[4] * x1748 + 392000.0 * sc[8] * x1747 -
    392000.0 * sc[8] * x1748 + x10328 + x1039 * x2176 - x1042 * x2176 +
    45018.75 * x11813 * x57 + x1682 * x25 + x1747 * x2250 + x1747 * x804 -
    x1748 * x2250 - x1748 * x804 + x1750 * x815 - x1751 * x815 + x2069 -
    45018.75 * x56 * x57 + 14700000000.0 * x61 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1956 - x1973) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[151] =
    -sc[13] * x8390 + 50000000.0 * sc[16] * x2014 -
    50000000.0 * sc[16] * x2032 + 30000000.0 * sc[1] * x1755 -
    30000000.0 * sc[1] * x227 + 30110000.0 * sc[4] * x1755 -
    30110000.0 * sc[4] * x227 + 392000.0 * sc[8] * x1755 -
    392000.0 * sc[8] * x227 + x1043 * x2176 - x1045 * x2176 + x11821 +
    x1755 * x2021 + x1755 * x2250 + x1755 * x804 + x1756 * x815 - x1768 * x815 -
    x2021 * x227 - x2250 * x227 - x227 * x804 + x5568 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x2014 - x2032) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[174] =
    50000000.0 * sc[16] * x2070 - 50000000.0 * sc[16] * x2087 +
    30000000.0 * sc[1] * x1767 - 30000000.0 * sc[1] * x1812 +
    30110000.0 * sc[4] * x1767 - 30110000.0 * sc[4] * x1812 +
    392000.0 * sc[8] * x1767 - 392000.0 * sc[8] * x1812 + x1051 * x2176 -
    x1052 * x2176 + x11821 + x1767 * x2021 + x1767 * x2250 + x1767 * x804 +
    x1770 * x815 - x1772 * x815 - x1812 * x2021 - x1812 * x2250 - x1812 * x804 +
    x5568 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x2070 - x2087) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[197] =
    sc[10] * x1056 * x2173 + sc[10] * x9287 + 50000000.0 * sc[16] * x2080 -
    50000000.0 * sc[16] * x2141 + 30000000.0 * sc[1] * x1813 -
    30000000.0 * sc[1] * x1833 + 30110000.0 * sc[4] * x1813 -
    30110000.0 * sc[4] * x1833 + 392000.0 * sc[8] * x1813 -
    392000.0 * sc[8] * x1833 - x10540 - x1059 * x2176 + x11821 +
    392000.0 * x170 + x1779 * x815 - x1782 * x815 + x1813 * x2021 +
    x1813 * x2250 + x1813 * x804 - x1833 * x2021 - x1833 * x2250 -
    x1833 * x804 + x5568 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x2080 - x2141) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[220] =
    -392000.0 * sc[13] * x1195 - 50000000.0 * sc[16] * x2186 +
    50000000.0 * sc[16] * x649 + 100000000.0 * sc[1] * x1758 -
    30000000.0 * sc[1] * x1825 + 30000000.0 * sc[1] * x1841 -
    30110000.0 * sc[4] * x1825 + 30110000.0 * sc[4] * x1841 -
    392000.0 * sc[8] * x1825 + 392000.0 * sc[8] * x1841 + x1060 * x2176 -
    x1062 * x2176 + x11814 - x1742 * x815 + x1758 * x25 + x1787 * x815 -
    x1825 * x2021 - x1825 * x2250 - x1825 * x804 + x1841 * x2021 +
    x1841 * x2250 + x1841 * x804 + x2022 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x2186 + x649) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[243] =
    -20000000.0 * sc[13] * x11399 * x1248 - 3675000000.0 * sc[13] * x11806 -
    50000000.0 * sc[13] * x1462 - 50000000.0 * sc[16] * x2271 +
    50000000.0 * sc[16] * x946 + 30000000.0 * sc[1] * x1830 -
    30000000.0 * sc[1] * x1831 + 100000000.0 * sc[1] * x311 +
    30110000.0 * sc[4] * x1830 - 30110000.0 * sc[4] * x1831 +
    392000.0 * sc[8] * x1830 - 392000.0 * sc[8] * x1831 + sc[8] * x9287 +
    x10328 + x1064 * x2176 - x1071 * x2176 + 11254.6875 * x11813 * x57 +
    x1676 * x815 + x170 * x720 - x1741 * x815 + x1830 * x2250 + x1830 * x804 -
    x1831 * x2250 - x1831 * x804 + x2173 * x675 + x25 * x311 -
    11254.6875 * x56 * x57 + 3675000000.0 * x61 + x6431 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x2271 + x946) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[266] =
    50000000.0 * sc[16] * x1480 - 50000000.0 * sc[16] * x2323 -
    30000000.0 * sc[1] * x1877 + 100000000.0 * sc[1] * x707 +
    30000000.0 * sc[1] * x896 - 30110000.0 * sc[4] * x1877 +
    30110000.0 * sc[4] * x896 - 392000.0 * sc[8] * x1877 +
    392000.0 * sc[8] * x896 + x1072 * x2176 - x1073 * x2176 + x11814 +
    x1749 * x815 - x1814 * x815 - x1877 * x2021 - x1877 * x2250 - x1877 * x804 +
    x2021 * x896 + x2022 + x2250 * x896 + x25 * x707 + x804 * x896 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1480 - x2323) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[289] =
    50000000.0 * sc[16] * x1453 - 50000000.0 * sc[16] * x2360 +
    30000000.0 * sc[1] * x1886 - 30000000.0 * sc[1] * x1897 +
    30110000.0 * sc[4] * x1886 - 30110000.0 * sc[4] * x1897 +
    392000.0 * sc[8] * x1886 - 392000.0 * sc[8] * x1897 + x1075 * x2176 +
    x11821 + x1818 * x815 - x1819 * x815 + x1886 * x2021 + x1886 * x2250 +
    x1886 * x804 - x1897 * x2021 - x1897 * x2250 - x1897 * x804 - x2176 * x671 +
    x5568 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x1453 - x2360) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[312] =
    -32000000.0 * sc[0] * x1134 - 30000000.0 * sc[0] * x1174 -
    50000000.0 * sc[10] * x1462 + sc[10] * x1860 * x720 -
    50000000.0 * sc[16] * x1035 + 50000000.0 * sc[16] * x809 -
    100000000.0 * sc[1] * x1223 + 100000000.0 * sc[1] * x1522 +
    30000000.0 * sc[1] * x1860 - 20.4 * sc[2] * x5621 +
    30110000.0 * sc[4] * x1860 - 30110000.0 * sc[4] * x1862 - sc[4] * x5811 -
    sc[4] * x9074 - 30110000.0 * sc[5] * x1200 - sc[6] * x8390 +
    392000.0 * sc[8] * x1860 - 392000.0 * sc[8] * x1862 -
    392000.0 * sc[9] * x1195 - x10324 * x3 + x1078 * x2176 - x1080 * x2176 -
    10000000.0 * x11399 * x607 + x1145 - 2450000000.0 * x11806 * x55 + x11825 +
    x1522 * x25 + x1821 * x815 - x1823 * x815 + x1860 * x2250 - x1862 * x2250 -
    10.0 * x578 * exp(x296) +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1035 + x809) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[335] =
    -50000000.0 * sc[16] * x1118 + 50000000.0 * sc[16] * x1205 +
    100000000.0 * sc[1] * x1829 + 30000000.0 * sc[1] * x1872 -
    30110000.0 * sc[4] * x1862 + 30110000.0 * sc[4] * x1872 -
    392000.0 * sc[8] * x1862 + 392000.0 * sc[8] * x1872 + x1083 * x2176 -
    x1084 * x2176 + x11825 + x1828 * x815 + x1829 * x25 - x1834 * x815 -
    x1862 * x2021 - x1862 * x2250 + x1872 * x2021 + x1872 * x2250 +
    x1872 * x804 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1118 + x1205) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[358] =
    -7350000000.0 * sc[13] * x11806 + 50000000.0 * sc[16] * x216 -
    50000000.0 * sc[16] * x894 + 100000000.0 * sc[1] * x1229 -
    30000000.0 * sc[1] * x1925 + 30000000.0 * sc[1] * x502 -
    30110000.0 * sc[4] * x1925 + 30110000.0 * sc[4] * x502 -
    392000.0 * sc[8] * x1925 + 392000.0 * sc[8] * x502 + x10328 +
    x1085 * x2176 - x1086 * x2176 + x1178 + 22509.375 * x11813 * x57 +
    x1229 * x25 + x1835 * x815 - x1836 * x815 - x1925 * x2021 - x1925 * x2250 -
    x1925 * x804 + x2021 * x502 + x2250 * x502 + x502 * x804 -
    22509.375 * x56 * x57 + 7350000000.0 * x61 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (x216 - x894) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[381] =
    -50000000.0 * sc[16] * x1070 + 50000000.0 * sc[16] * x955 +
    20000000.0 * sc[16] + 30000000.0 * sc[1] * x1932 + sc[1] * x204 +
    30110000.0 * sc[4] * x1932 + 392000.0 * sc[8] * x1932 + x10149 +
    x1087 * x2176 - x1088 * x2176 + x10977 + x11821 + x11827 + x1761 * x815 -
    x1815 * x815 + x1932 * x2021 + x1932 * x2250 + x1932 * x804 + x2074 +
    50000000.0 * x674 + x9864 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1070 + x955) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[404] =
    50000000.0 * sc[16] * x958 + 30000000.0 * sc[1] * x183 +
    100000000.0 * sc[1] * x1945 + sc[1] * x276 + 30110000.0 * sc[4] * x183 +
    392000.0 * sc[8] * x183 + x10149 + x1089 * x2176 + x10977 + x11691 +
    x11819 + x11827 + x1761 * x815 - x1817 * x815 + x183 * x2021 +
    x183 * x2250 + x183 * x804 + x1945 * x25 + x2074 + x8059 + x9864 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1668 + x958) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[427] =
    50000000.0 * sc[16] * x1694 + 30000000.0 * sc[1] * x233 +
    30110000.0 * sc[4] * x233 + 392000.0 * sc[8] * x233 + x10149 + x10977 +
    x1141 * x2176 + x11691 + x11821 + x11827 + x1761 * x815 - x1863 * x815 +
    x2021 * x233 + x2074 + x2250 * x233 + x233 * x804 + x8059 + x9864 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1668 + x1694) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[450] =
    -50000000.0 * sc[16] * x1009 + 50000000.0 * sc[16] * x1057 +
    30000000.0 * sc[1] * x1946 + 100000000.0 * sc[1] * x65 +
    30110000.0 * sc[4] * x1946 + 392000.0 * sc[8] * x1946 + x10149 +
    x10326 * x3 + x10977 + x1161 * x2176 - x1167 * x2176 + x11819 + x11827 +
    x1870 * x815 - x1873 * x815 + x1946 * x2021 + x1946 * x2250 + x1946 * x804 +
    x2074 + x25 * x65 + x9864 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1009 + x1057) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[473] =
    50000000.0 * sc[16] * x784 + 30000000.0 * sc[1] * x1949 +
    30110000.0 * sc[4] * x1949 + 392000.0 * sc[8] * x1949 + x10149 + x10977 +
    x11691 + x11821 + x11827 + x1443 * x2176 + x1761 * x815 - x1874 * x815 +
    x1949 * x2021 + x1949 * x2250 + x1949 * x804 + x2074 + x8059 + x9864 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x1668 + x784) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[496] =
    -50000000.0 * sc[16] * x647 + 50000000.0 * sc[16] * x669 +
    30000000.0 * sc[1] * x1788 + 30110000.0 * sc[4] * x1788 +
    392000.0 * sc[8] * x1788 + x10149 + x10977 + x11821 + x11827 +
    x1444 * x2176 - x1445 * x2176 + x1761 * x815 + x1788 * x2021 +
    x1788 * x2250 + x1788 * x804 - x1876 * x815 + x2074 + x9864 +
    (-30000000.0 * sc[1] * x683 - 30110000.0 * sc[4] * x683 -
     392000.0 * sc[8] * x683 - x2021 * x683 + x2176 * x677 - x2250 * x683 -
     x680 * x815 - x683 * x804) *
      (-x647 + x669) +
    (-100000000.0 * sc[1] * x660 + 30000000.0 * sc[1] * x684 +
     30110000.0 * sc[4] * x684 + 392000.0 * sc[8] * x684 + x2021 * x684 +
     x2250 * x684 - x25 * x660 - x681 * x815 + x684 * x804) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-100000000.0 * sc[1] * x67 - x25 * x67) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-100000000.0 * sc[1] * x640 - x25 * x640 - x682 * x815) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (30000000.0 * sc[1] * x685 + 30110000.0 * sc[4] * x685 +
     392000.0 * sc[8] * x685 + x2021 * x685 + x2250 * x685 + x685 * x804) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[14] =
    7.0e+44 * refCinv * x10 * x2029 * x2030 * x664 -
    100000000.0 * sc[14] * x1007 - 2000000.0 * sc[14] * x1363 +
    100000000.0 * sc[14] * x937 + 2000000.0 * sc[1] * x756 -
    2000000.0 * sc[1] * x779 + 20000.0 * sc[3] * x756 - 20000.0 * sc[3] * x779 +
    x1029 * x923 - x1029 * x932 + x1068 + x1129 * x897 - x1129 * x908 +
    x1548 * x897 - x1548 * x908 + x1636 * x701 + x2031 * x708 - x2072 * x725 +
    x2072 * x790 + x2081 * x897 - x2081 * x908 + x2128 + x2353 * x897 -
    x2353 * x908 + x2358 * x897 - x2358 * x908 + x708 * x716 + x7344 +
    x756 * x971 - x779 * x971 + x8180 + x927 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1472 + x985) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-x2031 * x67 - x67 * x716) *
      (x897 - x908 + (-x683) * (-x1472 + x985) +
       (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x685) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-x376 * x701) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[37] =
    -100000000.0 * sc[14] * x1471 + 100000000.0 * sc[14] * x1481 +
    50000000.0 * sc[19] * x1423 + 20000000.0 * sc[19] * x2130 +
    2000000.0 * sc[1] * x1560 - 2000000.0 * sc[1] * x423 + sc[20] * x22 +
    20000.0 * sc[3] * x1560 - 20000.0 * sc[3] * x423 + 1.4e+18 * x10 * x584 +
    x1005 * x1029 - x1029 * x1074 + x1069 * x1129 + x1069 * x1548 +
    x1069 * x2081 + x1069 * x2353 + x1069 * x2358 - x1129 * x1526 -
    x1526 * x1548 - x1526 * x2081 - x1526 * x2353 - x1526 * x2358 +
    x1560 * x971 + x1650 * x2031 + x1650 * x716 - x2072 * x926 + x2072 * x936 +
    2000000.0 * x325 + x362 * x701 - x423 * x971 + x5459 + x5572 + x7386 +
    x786 + x8209 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1665 - x1692) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-x2031 * x67 - x67 * x716) *
      (x1069 - x1526 + (-x683) * (x1665 - x1692) +
       (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x685) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-x376 * x701) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[60] =
    -100000000.0 * sc[14] * x1482 + 100000000.0 * sc[14] * x961 +
    2000000.0 * sc[1] * x1081 - 2000000.0 * sc[1] * x1718 +
    20000.0 * sc[3] * x1081 - 20000.0 * sc[3] * x1718 + x1 * x2031 + x1 * x716 -
    x1029 * x1633 + x1029 * x824 + x1063 * x701 + x1081 * x971 + x1129 * x115 -
    x1129 * x1653 + x115 * x1548 + x115 * x2081 + x115 * x2353 + x115 * x2358 -
    x1548 * x1653 - x1653 * x2081 - x1653 * x2353 - x1653 * x2358 -
    x1718 * x971 - x2072 * x968 + x2072 * x995 + x5572 + x5649 + x7469 + x786 +
    x8236 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1753 - x1773) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-x2031 * x67 - x67 * x716) *
      (x115 - x1653 + (-x683) * (x1753 - x1773) +
       (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x685) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-x376 * x701) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[83] =
    -100000000.0 * sc[14] * x1535 + 100000000.0 * sc[14] * x1537 -
    10.0 * sc[14] * x1672 * exp(x1017) - sc[14] * x8297 -
    2000000.0 * sc[1] * x1739 + 2000000.0 * sc[1] * x250 + x1000 * x2072 +
    x1029 * x1656 + x1129 * x1654 - x1129 * x1685 + x1548 * x1654 -
    x1548 * x1685 + x1654 * x2081 + x1654 * x2358 - x1685 * x2081 -
    x1685 * x2358 - x1739 * x971 + x185 * x701 + x2031 * x659 - x2072 * x999 +
    x250 * x971 + x5572 + x5724 + x659 * x716 + x7521 + x786 + x8293 + x9935 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1822 - x1838) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-x2031 * x67 - x67 * x716) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-x376 * x701) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[106] =
    -100000000.0 * sc[14] * x1385 + 100000000.0 * sc[14] * x1563 -
    sc[14] * x9080 - 2000000.0 * sc[1] * x1759 + 2000000.0 * sc[1] * x1780 -
    x1006 * x2072 + x1008 * x2072 + x1029 * x1686 - x1029 * x548 +
    x1129 * x1708 - x1129 * x1745 + x1548 * x1708 - x1548 * x1745 +
    x1701 * x2031 + x1701 * x716 + x1708 * x2081 + x1708 * x2358 -
    x1745 * x2081 - x1745 * x2358 - x1759 * x971 + x1780 * x971 + x1981 * x701 +
    x5572 + x5823 + x7575 + x786 + x8345 + x9949 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1824 - x1887) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-x2031 * x67 - x67 * x716) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-x376 * x701) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[129] =
    100000000.0 * sc[14] * x1320 - 100000000.0 * sc[14] * x1564 +
    2000000.0 * sc[1] * x1760 - 2000000.0 * sc[1] * x1844 +
    8.4e+18 * sc[1] * x584 + 20000.0 * sc[3] * x1760 - 20000.0 * sc[3] * x1844 +
    x1029 * x1750 - x1029 * x1751 - x1039 * x2072 + x1042 * x2072 +
    x1129 * x1747 - x1129 * x1748 + 1.9342105263157899e+30 * x1184 * x827 +
    4.2e+45 * x1386 - x1441 * (1.68 * x446 * x693 + 12.0 * x596 * x693) +
    3.675e+77 * x1442 * x1469 - 3.675e+77 * x1442 * x15 -
    8.4e+18 * x1487 * x929 + x1525 * x170 + x1548 * x1747 - x1548 * x1748 +
    x1682 * x2031 + x1682 * x716 + x1747 * x2081 + x1747 * x2353 +
    x1747 * x2358 - x1748 * x2081 - x1748 * x2353 - x1748 * x2358 +
    x1760 * x971 - x1844 * x971 + x1880 * x701 - 4.2e+45 * x428 + x5879 * x931 -
    x5879 * x997 + x5960 + x7615 +
    x796 * (1.68 * x446 * x693 + 12.0 * x596 * x693) -
    1.9342105263157899e+30 * x827 * x829 + x8375 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1956 - x1973) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-x2031 * x67 - x67 * x716) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-x376 * x701) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[152] =
    100000000.0 * sc[14] * x1440 - 100000000.0 * sc[14] * x921 +
    2000000.0 * sc[1] * x1865 - 2000000.0 * sc[1] * x1867 + x1029 * x1756 -
    x1029 * x1768 - x1043 * x2072 + x1045 * x2072 + x1129 * x1755 -
    x1129 * x227 + x1548 * x1755 - x1548 * x227 + x170 * x2321 + x1755 * x2081 +
    x1755 * x2358 + x1865 * x971 - x1867 * x971 + x1977 * x701 - x2081 * x227 -
    x227 * x2358 + x5520 + x5572 + x6051 + x7653 + x8411 + x9983 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x2014 - x2032) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-x2031 * x67 - x67 * x716) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-x376 * x701) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[175] =
    -300000.0 * sc[14] * x1381 - 100000000.0 * sc[14] * x1580 +
    100000000.0 * sc[14] * x476 - 2000000.0 * sc[1] * x1875 +
    2000000.0 * sc[1] * x1891 + x10012 + x1029 * x1770 - x1029 * x1772 -
    x1051 * x2072 + x1052 * x2072 + x1129 * x1767 - x1129 * x1812 +
    x1548 * x1767 - x1548 * x1812 + x1767 * x2081 + x1767 * x2358 -
    x1812 * x2081 - x1812 * x2358 - x1875 * x971 + x1891 * x971 + x2009 * x701 +
    x5520 + x5572 + x6129 + x7695 + x8440 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x2070 - x2087) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-x2031 * x67 - x67 * x716) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-x376 * x701) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[198] =
    100000000.0 * sc[14] * x315 - 100000000.0 * sc[14] * x789 +
    50000000.0 * sc[16] + 2000000.0 * sc[1] * x1881 -
    2000000.0 * sc[1] * x1960 + 20000.0 * sc[3] * x1881 -
    20000.0 * sc[3] * x1960 + x1029 * x1779 - x1029 * x1782 - x1056 * x2072 +
    x10573 + x1059 * x2072 + x1129 * x1813 - x1129 * x1833 + x1548 * x1813 -
    x1548 * x1833 + x1813 * x2081 + x1813 * x2353 - x1833 * x2081 -
    x1833 * x2353 + x1881 * x971 - x1960 * x971 + x5520 + x5572 + x6226 +
    x7737 + x8478 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x2080 - x2141) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-x2031 * x67 - x67 * x716) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-x376 * x701) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[221] =
    100000000.0 * sc[14] * x1149 - 100000000.0 * sc[14] * x646 +
    2000000.0 * sc[1] * x1961 - 2000000.0 * sc[1] * x1962 +
    20000.0 * sc[3] * x1961 - 20000.0 * sc[3] * x1962 - x1029 * x1742 +
    x1029 * x1787 - x1060 * x2072 + x1062 * x2072 - x1129 * x1825 +
    x1129 * x1841 - x1548 * x1825 + x1548 * x1841 + x170 * x2357 +
    x1758 * x2031 + x1758 * x716 - x1825 * x2081 - x1825 * x2353 -
    x1825 * x2358 + x1841 * x2081 + x1841 * x2353 + x1841 * x2358 +
    x1961 * x971 - x1962 * x971 + x2010 * x701 + x2128 +
    50000000.0 * x42 * x664 + x6303 + x7775 + x8507 + x927 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x2186 + x649) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-x376 * x701) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[244] =
    100000000.0 * sc[14] * x1037 - sc[14] * x10617 -
    90330000.0 * sc[14] * x1170 + 1.4e+18 * sc[14] * x118 * x843 * x929 -
    100000000.0 * sc[14] * x1590 + 2000000.0 * sc[1] * x1968 -
    2000000.0 * sc[1] * x1969 + 2.1e+18 * sc[1] * x584 +
    20000.0 * sc[3] * x1968 - 20000.0 * sc[3] * x1969 + x1029 * x1676 -
    x1029 * x1741 + x1034 * x325 - x1064 * x2072 + x1071 * x2072 +
    x1129 * x1830 - x1129 * x1831 - 1.4e+18 * x118 * x584 * x854 +
    4.8355263157894698e+29 * x1184 * x827 -
    x1441 * (0.42 * x446 * x693 + 3.0 * x596 * x693) +
    9.1875e+76 * x1442 * x1469 - 9.1875e+76 * x1442 * x15 -
    2.1e+18 * x1487 * x929 + x1548 * x1830 - x1548 * x1831 + x1830 * x2081 +
    x1830 * x2353 + x1830 * x2358 - x1831 * x2081 - x1831 * x2353 -
    x1831 * x2358 + x1968 * x971 - x1969 * x971 +
    1.05e+45 * x2 * x2029 * x2030 * x664 + x2011 * x701 + x2031 * x311 +
    x311 * x716 + x388 - 1.05e+45 * x428 + x7819 +
    x796 * (0.42 * x446 * x693 + 3.0 * x596 * x693) -
    4.8355263157894698e+29 * x827 * x829 + x8541 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x2271 + x946) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-x2031 * x67 - x67 * x716) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-x376 * x701) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[267] =
    refC * x489 * x774 + 100000000.0 * sc[14] * x1047 -
    100000000.0 * sc[14] * x963 - 2000000.0 * sc[1] * x1970 +
    2000000.0 * sc[1] * x755 - 20000.0 * sc[3] * x1970 +
    20000.0 * sc[3] * x755 + x1029 * x1749 - x1029 * x1814 - x1072 * x2072 +
    x1073 * x2072 - x1129 * x1877 + x1129 * x896 - x1548 * x1877 +
    x1548 * x896 - x1877 * x2081 - x1877 * x2353 - x1877 * x2358 -
    x1970 * x971 + x2031 * x707 + x2081 * x896 + x2353 * x896 + x2358 * x896 +
    x6534 + x707 * x716 + x755 * x971 + x7857 + x8568 + x927 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1480 - x2323) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-x376 * x701) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[290] =
    -100000000.0 * sc[14] * x1640 + 100000000.0 * sc[14] * x1659 +
    2000000.0 * sc[1] * x1971 - 2000000.0 * sc[1] * x1979 +
    20000.0 * sc[3] * x1971 - 20000.0 * sc[3] * x1979 + x1029 * x1818 -
    x1029 * x1819 - x1075 * x2072 + x1129 * x1886 - x1129 * x1897 +
    x1548 * x1886 - x1548 * x1897 + x1554 * x701 + x1886 * x2081 +
    x1886 * x2353 + x1886 * x2358 - x1897 * x2081 - x1897 * x2353 -
    x1897 * x2358 + x1971 * x971 - x1979 * x971 + x2072 * x671 + x5520 + x5572 +
    x6607 + x7896 + x8595 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x1453 - x2360) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-x2031 * x67 - x67 * x716) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-x376 * x701) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[313] =
    -100000000.0 * sc[14] * x1663 + 100000000.0 * sc[14] * x1664 -
    2000000.0 * sc[1] * x1884 + 2000000.0 * sc[1] * x1987 +
    20000.0 * sc[3] * x1987 + x10098 + x1029 * x1821 - x1029 * x1823 -
    x1078 * x2072 + x1080 * x2072 + x1129 * x1860 - x1129 * x1862 +
    x1522 * x2031 + x1522 * x716 + x1548 * x1860 - x1548 * x1862 +
    x1860 * x2081 + x1860 * x2353 + x1860 * x2358 - x1862 * x2081 -
    x1862 * x2258 - x1862 * x2358 - x1884 * x971 + x1987 * x971 + x2009 * x701 +
    x2076 + x2150 + x7937 + x8623 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1035 + x809) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-x2031 * x67 - x67 * x716) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-x376 * x701) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[336] =
    -2000000.0 * sc[0] * x1363 - sc[10] * x10617 - 90330000.0 * sc[10] * x1170 -
    100000000.0 * sc[14] * x1670 + 100000000.0 * sc[14] * x1679 -
    2000000.0 * sc[1] * x1884 + 2000000.0 * sc[1] * x1947 - sc[3] * x8297 -
    sc[4] * x9080 - 300000.0 * sc[7] * x1381 - 7.0e+44 * x10 * x1470 * x2029 +
    x10114 + x10259 + x1029 * x1828 - x1029 * x1834 - x1083 * x2072 +
    x1084 * x2072 - x1129 * x1862 + x1129 * x1872 - x1548 * x1862 +
    x1548 * x1872 + x1829 * x2031 + x1829 * x716 - x1862 * x2081 -
    x1862 * x2258 + x1872 * x2081 - x1884 * x971 + x1947 * x971 + x2076 +
    x2124 - 10.0 * x578 * exp(x1017) - 100000000.0 * x595 -
    20000000.0 * x675 * exp(-3019.29999482832 * invT) + x7966 -
    1.4e+18 * x843 * x929 + x8647 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1118 + x1205) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-x376 * x701) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[359] =
    -100000000.0 * sc[14] * x1680 + 100000000.0 * sc[14] * x1688 +
    2000000.0 * sc[1] * x1837 - 2000000.0 * sc[1] * x1882 +
    20000.0 * sc[3] * x1837 - 20000.0 * sc[3] * x1882 + x1029 * x1835 -
    x1029 * x1836 - x1085 * x2072 + x1086 * x2072 - x1129 * x1925 +
    x1129 * x502 + x1229 * x2031 + x1229 * x716 - x1548 * x1925 + x1548 * x502 +
    x1716 * x701 + x1837 * x971 - x1882 * x971 - x1925 * x2081 - x1925 * x2353 -
    x1925 * x2358 + x2076 + x2081 * x502 + x2275 + x2353 * x502 + x2358 * x502 +
    x7998 + x8673 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (x216 - x894) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-x376 * x701) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[382] =
    -100000000.0 * sc[14] * x1689 + 100000000.0 * sc[14] * x1707 +
    2000000.0 * sc[1] * x731 + 50000000.0 * sc[8] + x10140 + x1029 * x1761 -
    x1029 * x1815 + x10846 - x1087 * x2072 + x1087 * x2270 + x1088 * x2072 -
    x1088 * x2270 + x1129 * x1932 + x11841 + x1372 + x1548 * x1932 + x1674 +
    x1815 * x2269 + x1932 * x2081 + x1932 * x2258 + x1932 * x2353 +
    x1932 * x2358 + x2050 + x5520 + x731 * x971 + x8037 + x8709 + x8711 +
    x9639 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1070 + x955) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-x2031 * x67 - x67 * x716) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-x376 * x701) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[405] =
    -100000000.0 * sc[14] * x1625 + 100000000.0 * sc[14] * x1707 +
    2000000.0 * sc[1] * x731 + 40000000.0 * sc[8] * x1089 +
    60000000.0 * sc[9] * x958 + x10140 + x1029 * x1761 - x1029 * x1817 +
    x10846 - x1089 * x2072 + x1089 * x2270 + x1092 * x2072 + x1129 * x183 +
    x11841 + x1372 + x1548 * x183 + x1625 * x2119 + x1817 * x2269 +
    x183 * x2012 + x183 * x2081 + x183 * x2258 + x183 * x2353 + x183 * x2358 +
    x1945 * x2031 + x1945 * x716 + x2050 + x2183 + x731 * x971 + x786 + x8065 +
    x8709 + x8711 + x9639 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1668 + x958) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-x2031 * x67 - x67 * x716) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-x376 * x701) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[428] =
    -100000000.0 * sc[14] * x1018 + 2000000.0 * sc[1] * x1958 +
    20000.0 * sc[3] * x1958 + sc[4] * x9007 + 300000.0 * sc[6] * x1958 +
    40000000.0 * sc[8] * x1141 + 60000000.0 * sc[9] * x1694 + x1018 * x2119 -
    x1029 * x1863 + x10846 + x1092 * x2072 + x1129 * x233 + x113 -
    x1141 * x2072 + x1141 * x2270 + x1372 + x1548 * x233 + x1863 * x2269 +
    x1958 * x2132 + x1958 * x971 + x2012 * x233 + x2081 * x233 + x2183 +
    x2258 * x233 + x233 * x2353 + x233 * x2358 + x8065 + x8709 + x8710 + x9639 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1668 + x1694) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-x376 * x701) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[451] =
    -100000000.0 * sc[14] * x1729 + 100000000.0 * sc[14] * x262 +
    50000000.0 * sc[1] * x1423 + 20000000.0 * sc[1] * x2130 +
    2000000.0 * sc[1] * x655 + 20000.0 * sc[3] * x655 +
    300000.0 * sc[6] * x655 + x10139 + x1029 * x1870 - x1029 * x1873 + x10846 +
    x1129 * x1946 - x1161 * x2072 + x1167 * x2072 + x11841 + x1372 +
    x1548 * x1946 + x1946 * x2081 + x1946 * x2353 + x1946 * x2358 +
    x2031 * x65 + x400 + x65 * x716 + x655 * x971 + x786 + x8117 + x8709 +
    x8710 + x9639 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1009 + x1057) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-x376 * x701) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[474] =
    -100000000.0 * sc[14] * x1675 + 2000000.0 * sc[1] * x1966 + sc[1] * x22 +
    20000.0 * sc[3] * x1966 + 300000.0 * sc[6] * x1966 +
    40000000.0 * sc[8] * x1443 + 60000000.0 * sc[9] * x784 - x1029 * x1874 +
    x1092 * x2072 + x1129 * x1949 + x113 + x1339 * x701 + x1372 -
    x1443 * x2072 + x1443 * x2270 + x1548 * x1949 + x1675 * x2119 +
    x1874 * x2269 - x1937 * x2358 + x1949 * x2012 + x1949 * x2081 +
    x1949 * x2258 + x1949 * x2353 + x1949 * x2358 + x1966 * x2132 +
    x1966 * x971 + x2183 + x8065 + x8709 + x8710 + x9639 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x1668 + x784) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-x2031 * x67 - x67 * x716) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-x376 * x701) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[497] =
    -100000000.0 * sc[14] * x1752 + 100000000.0 * sc[14] * x1757 +
    2000000.0 * sc[1] * x731 + x10140 + x1029 * x1761 - x1029 * x1876 + x10846 +
    x1129 * x1788 + x11841 + x1372 - x1444 * x2072 + x1444 * x2270 +
    x1445 * x2072 - x1445 * x2270 + x1548 * x1788 + x1788 * x2081 +
    x1788 * x2258 + x1788 * x2353 + x1788 * x2358 + x1876 * x2269 + x2135 +
    x5520 + x731 * x971 + x8037 + x8709 + x8711 + x9639 +
    (-100000000.0 * sc[14] * x678 + 40000000.0 * sc[8] * x677 - x1029 * x680 -
     x1129 * x683 - x1548 * x683 - x2012 * x683 - x2072 * x677 - x2081 * x683 +
     x2119 * x678 - x2258 * x683 + x2269 * x680 + x2270 * x677 - x2353 * x683 -
     x2358 * x683) *
      (-x647 + x669) +
    (-100000000.0 * sc[14] * x679 - x1029 * x681 + x1129 * x684 + x1548 * x684 +
     x2012 * x684 - x2031 * x660 + x2081 * x684 + x2119 * x679 + x2258 * x684 +
     x2269 * x681 + x2353 * x684 + x2358 * x684 - x660 * x716) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-x2031 * x67 - x67 * x716) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-x376 * x701) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-2000000.0 * sc[1] * x597 - 20000.0 * sc[3] * x597 -
     300000.0 * sc[6] * x597 - x1029 * x682 - x2031 * x640 - x2132 * x597 +
     x2269 * x682 - x597 * x971 - x640 * x716) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-2000000.0 * sc[1] * x448 - 20000.0 * sc[3] * x448 -
     300000.0 * sc[6] * x448 + x1129 * x685 + x1548 * x685 + x2012 * x685 +
     x2081 * x685 - x2132 * x448 + x2258 * x685 + x2353 * x685 + x2358 * x685 -
     x448 * x971) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[15] =
    -x1007 * x800 + x10290 + x2040 * x325 + x2042 * x756 - x2042 * x779 +
    x2125 * x756 - x2125 * x779 + x2278 * x756 - x2278 * x779 + x2314 * x756 -
    x2314 * x779 + x2356 * x756 - x2356 * x779 + x752 * x756 - x752 * x779 +
    x756 * x97 - x779 * x97 + x800 * x937 + x8180 +
    (-x678 * x800) * (-x1472 + x985) +
    (-x679 * x800) * (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[38] =
    -sc[15] * x903 + 1.99e+29 * x10 * x2120 * x325 + x1105 - x1471 * x800 +
    x1481 * x800 + x1560 * x2042 + x1560 * x2125 + x1560 * x2278 +
    x1560 * x2314 + x1560 * x2356 + x1560 * x752 + x1560 * x97 - x2042 * x423 -
    x2125 * x423 - x2278 * x423 - x2314 * x423 - x2356 * x423 - x423 * x752 -
    x423 * x97 + x8209 + (-x678 * x800) * (x1665 - x1692) +
    (-x679 * x800) * (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[61] =
    -sc[15] * x7441 + x1081 * x2042 + x1081 * x2125 + x1081 * x2278 +
    x1081 * x2314 + x1081 * x2356 + x1081 * x752 + x1081 * x97 + x1105 -
    x1482 * x800 - x1718 * x2042 - x1718 * x2125 - x1718 * x2278 -
    x1718 * x2314 - x1718 * x2356 - x1718 * x752 - x1718 * x97 + x800 * x961 +
    x8236 + (-x678 * x800) * (x1753 - x1773) +
    (-x679 * x800) * (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[84] =
    -300000.0 * sc[15] * x1368 + x1105 - x1535 * x800 + x1537 * x800 -
    x1739 * x2042 - x1739 * x2125 - x1739 * x2278 - x1739 * x2314 -
    x1739 * x2356 - x1739 * x752 - x1739 * x97 + x2042 * x250 + x2125 * x250 +
    x2278 * x250 + x2314 * x250 + x2356 * x250 + x250 * x752 + x250 * x97 +
    x8293 + (-x678 * x800) * (x1822 - x1838) +
    (-x679 * x800) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[107] =
    -sc[15] * x9067 + x1105 - x1385 * x800 + x1563 * x800 - x1759 * x2042 -
    x1759 * x2125 - x1759 * x2278 - x1759 * x2314 - x1759 * x2356 -
    x1759 * x752 - x1759 * x97 + x1780 * x2042 + x1780 * x2125 + x1780 * x2278 +
    x1780 * x2314 + x1780 * x2356 + x1780 * x752 + x1780 * x97 + x325 * x767 +
    x8345 + (-x678 * x800) * (x1824 - x1887) +
    (-x679 * x800) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[130] =
    1.99e+29 * x10 * x1355 * x1684 * x426 +
    1.77e+38 * x10273 * x10283 * (12.0 * x10288 * x693 + 1.68 * x10289 * x693) -
    1.77e+38 * x10273 * x10286 * (12.0 * x10288 * x693 + 1.68 * x10289 * x693) +
    8.8666981132075502e+66 * x10279 - 1.062e+39 * x10283 + 1.062e+39 * x10286 -
    8.8666981132075502e+66 * x10315 + x1320 * x800 - 1.194e+30 * x1355 * x1684 +
    4.5605758157389599e+47 * x1358 * x1466 -
    4.5605758157389599e+47 * x1466 * x525 - x1564 * x800 + x1760 * x2042 +
    x1760 * x2125 + x1760 * x2278 + x1760 * x2314 + x1760 * x2356 +
    x1760 * x752 + x1760 * x97 - x1844 * x2042 - x1844 * x2125 - x1844 * x2278 -
    x1844 * x2314 - x1844 * x2356 - x1844 * x752 - x1844 * x97 -
    1.99e+29 * x2120 * x325 * x426 * x854 + x2268 * x325 + 1.194e+30 * x444 +
    x8375 + (-x678 * x800) * (x1956 - x1973) +
    (-x679 * x800) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[153] =
    -sc[15] * x9974 + x1105 + x1440 * x800 + x1865 * x2042 + x1865 * x2125 +
    x1865 * x2278 + x1865 * x2314 + x1865 * x2356 + x1865 * x752 + x1865 * x97 -
    x1867 * x2042 - x1867 * x2125 - x1867 * x2278 - x1867 * x2314 -
    x1867 * x2356 - x1867 * x752 - x1867 * x97 - x800 * x921 + x8411 +
    (-x678 * x800) * (x2014 - x2032) +
    (-x679 * x800) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[176] =
    x1105 - x1580 * x800 - x1875 * x2042 - x1875 * x2125 - x1875 * x2278 -
    x1875 * x2314 - x1875 * x2356 - x1875 * x752 - x1875 * x97 + x1891 * x2042 +
    x1891 * x2125 + x1891 * x2278 + x1891 * x2314 + x1891 * x2356 +
    x1891 * x752 + x1891 * x97 +
    8700.0 * x325 * exp(-490.13303249379697 * invT) + x476 * x800 + x8440 +
    (-x678 * x800) * (x2070 - x2087) +
    (-x679 * x800) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[199] =
    -sc[15] * x10564 + 3.54e+38 * sc[8] * x10 * x10285 + x1105 + x1881 * x2042 +
    x1881 * x2125 + x1881 * x2278 + x1881 * x2314 + x1881 * x2356 +
    x1881 * x752 + x1881 * x97 - x1960 * x2042 - x1960 * x2125 - x1960 * x2278 -
    x1960 * x2314 - x1960 * x2356 - x1960 * x752 - x1960 * x97 + x315 * x800 +
    40000000.0 * x325 * x378 - x789 * x800 + x8478 +
    (-x678 * x800) * (x2080 - x2141) +
    (-x679 * x800) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[222] =
    x10290 + x1149 * x800 + x1961 * x2042 + x1961 * x2125 + x1961 * x2278 +
    x1961 * x2314 + x1961 * x2356 + x1961 * x752 + x1961 * x97 - x1962 * x2042 -
    x1962 * x2125 - x1962 * x2278 - x1962 * x2314 - x1962 * x2356 -
    x1962 * x752 - x1962 * x97 + x325 * x746 - x646 * x800 + x8507 +
    (-x678 * x800) * (-x2186 + x649) +
    (-x679 * x800) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[245] =
    -120000000.0 * sc[15] * x1316 +
    1.77e+38 * x10273 * x10283 * (3.0 * x10288 * x693 + 0.42 * x10289 * x693) -
    1.77e+38 * x10273 * x10286 * (3.0 * x10288 * x693 + 0.42 * x10289 * x693) +
    2.2166745283018902e+66 * x10279 - 2.655e+38 * x10283 + 2.655e+38 * x10286 -
    2.2166745283018902e+66 * x10315 + x1037 * x800 - 2.985e+29 * x1355 * x1684 +
    1.14014395393474e+47 * x1358 * x1466 - 1.14014395393474e+47 * x1466 * x525 -
    x1590 * x800 - x192 * x6331 + x1968 * x2042 + x1968 * x2125 +
    x1968 * x2278 + x1968 * x2314 + x1968 * x2356 + x1968 * x752 + x1968 * x97 -
    x1969 * x2042 - x1969 * x2125 - x1969 * x2278 - x1969 * x2314 -
    x1969 * x2356 - x1969 * x752 - x1969 * x97 + 2.985e+29 * x444 +
    x6331 * x917 + x8541 + (-x678 * x800) * (-x2271 + x946) +
    (-x679 * x800) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[268] =
    x10290 + x1047 * x800 - x1970 * x2042 - x1970 * x2125 - x1970 * x2278 -
    x1970 * x2314 - x1970 * x2356 - x1970 * x752 - x1970 * x97 + x2042 * x755 +
    x2125 * x755 + x2278 * x755 + x2314 * x755 + x2356 * x755 + x752 * x755 +
    x755 * x97 - x800 * x963 + x8568 + (-x678 * x800) * (x1480 - x2323) +
    (-x679 * x800) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[291] =
    x1105 - x1640 * x800 + x1659 * x800 + x1971 * x2042 + x1971 * x2125 +
    x1971 * x2278 + x1971 * x2314 + x1971 * x2356 + x1971 * x752 + x1971 * x97 -
    x1979 * x2042 - x1979 * x2125 - x1979 * x2278 - x1979 * x2314 -
    x1979 * x2356 - x1979 * x752 - x1979 * x97 + x8595 +
    (-x678 * x800) * (x1453 - x2360) +
    (-x679 * x800) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[314] =
    -x1663 * x800 + x1664 * x800 + x1690 - x1884 * x2042 - x1884 * x2125 -
    x1884 * x2278 - x1884 * x2314 - x1884 * x2356 - x1884 * x752 - x1884 * x97 +
    x1987 * x2042 + x1987 * x2125 + x1987 * x2278 + x1987 * x2314 +
    x1987 * x2356 + x1987 * x752 + x1987 * x97 + x8623 +
    (-x678 * x800) * (-x1035 + x809) +
    (-x679 * x800) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[337] =
    -x1670 * x800 + x1679 * x800 + x1690 - x1884 * x2042 - x1884 * x2125 -
    x1884 * x2278 - x1884 * x2314 - x1884 * x2356 - x1884 * x752 - x1884 * x97 +
    x1947 * x2042 + x1947 * x2125 + x1947 * x2278 + x1947 * x2314 +
    x1947 * x2356 + x1947 * x752 + x1947 * x97 + x8647 +
    (-x678 * x800) * (-x1118 + x1205) +
    (-x679 * x800) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[360] =
    -120000000.0 * sc[10] * x1316 - sc[1] * x903 - sc[2] * x7441 -
    300000.0 * sc[3] * x1368 - sc[4] * x9067 - sc[6] * x9974 - sc[8] * x10564 -
    1.77e+38 * x10282 * x843 - x1680 * x800 - 1.99e+29 * x1684 * x843 +
    x1688 * x800 + x1690 + x1837 * x2042 + x1837 * x2125 + x1837 * x2278 +
    x1837 * x2314 + x1837 * x2356 + x1837 * x752 + x1837 * x97 - x1882 * x2042 -
    x1882 * x2125 - x1882 * x2278 - x1882 * x2314 - x1882 * x2356 -
    x1882 * x752 - x1882 * x97 -
    40000000.0 * x595 * exp(276.769166192596 * invT) + x8673 +
    (-x678 * x800) * (x216 - x894) +
    (-x679 * x800) * (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[383] =
    x10272 - x1689 * x800 + x1707 * x800 + x2077 +
    (-x678 * x800) * (-x1070 + x955) +
    (-x679 * x800) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[406] =
    x10272 - x1625 * x800 + x1707 * x800 + x2077 +
    (-x678 * x800) * (-x1668 + x958) +
    (-x679 * x800) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[429] =
    300000.0 * sc[6] * x1958 + x10133 - x1018 * x800 + x10836 + x1707 * x800 +
    x1958 * x2042 + x1958 * x2125 + x1958 * x2278 + x1958 * x2314 +
    x1958 * x2356 + x1958 * x752 + x1958 * x97 + x2027 + x2077 + x8017 + x8710 +
    x9663 + (-x678 * x800) * (-x1668 + x1694) +
    (-x679 * x800) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[452] =
    300000.0 * sc[6] * x655 + x10133 + x10836 - x1729 * x800 + x2027 +
    x2042 * x655 + x2077 + x2125 * x655 + x2278 * x655 + x2314 * x655 +
    x2356 * x655 + x262 * x800 + x655 * x752 + x655 * x97 + x8017 + x8710 +
    x9663 + (-x678 * x800) * (-x1009 + x1057) +
    (-x679 * x800) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[475] =
    300000.0 * sc[6] * x1966 + x10133 + x10836 - x1675 * x800 + x1707 * x800 +
    x1966 * x2042 + x1966 * x2125 + x1966 * x2278 + x1966 * x2314 +
    x1966 * x2356 + x1966 * x752 + x1966 * x97 + x2027 + x2077 + x8017 + x8710 +
    x9663 + (-x678 * x800) * (-x1668 + x784) +
    (-x679 * x800) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[498] =
    x10272 - x1752 * x800 + x1757 * x800 + x2077 +
    (-x678 * x800) * (-x647 + x669) +
    (-x679 * x800) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-300000.0 * sc[6] * x597 - x2042 * x597 - x2125 * x597 - x2278 * x597 -
     x2314 * x597 - x2356 * x597 - x597 * x752 - x597 * x97) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-300000.0 * sc[6] * x448 - x2042 * x448 - x2125 * x448 - x2278 * x448 -
     x2314 * x448 - x2356 * x448 - x448 * x752 - x448 * x97) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[16] =
    50000000.0 * sc[16] * x1472 - 30000000.0 * sc[16] * x725 -
    50000000.0 * sc[16] * x736 + 30000000.0 * sc[16] * x790 -
    50000000.0 * sc[16] * x985 + x1007 * x2008 + x10276 - x11007 * x1472 +
    x11007 * x985 - x2008 * x937 + x891 * x897 - x891 * x908 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1472 + x985) +
    (x2008 * x679 + x684 * x891) * (x725 - x790 + (x677) * (-x1472 + x985)) +
    (x685 * x891) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[39] =
    -50000000.0 * sc[16] * x1665 + 50000000.0 * sc[16] * x1692 - sc[16] * x204 -
    30000000.0 * sc[16] * x926 + 30000000.0 * sc[16] * x936 -
    100000000.0 * sc[16] + 50000000.0 * sc[17] * x1013 + x10366 + x1069 * x891 +
    x11007 * x1665 - x11007 * x1692 + x1471 * x2008 - x1481 * x2008 -
    x1526 * x891 + 100000000.0 * x2129 * x607 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1665 - x1692) +
    (x2008 * x679 + x684 * x891) * (x926 - x936 + (x677) * (x1665 - x1692)) +
    (x685 * x891) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[62] =
    16.32 * sc[13] * x5621 - 50000000.0 * sc[16] * x1753 +
    50000000.0 * sc[16] * x1773 - 30000000.0 * sc[16] * x968 +
    30000000.0 * sc[16] * x995 - 100000000.0 * sc[16] +
    10000000.0 * sc[17] * x1013 + x10366 + x11007 * x1753 - x11007 * x1773 +
    x115 * x891 + x1482 * x2008 - x1653 * x891 - x2008 * x961 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1753 - x1773) +
    (x2008 * x679 + x684 * x891) * (x968 - x995 + (x677) * (x1753 - x1773)) +
    (x685 * x891) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[85] =
    30000000.0 * sc[16] * x1000 - 50000000.0 * sc[16] * x1822 +
    50000000.0 * sc[16] * x1838 - 1600000.0 * sc[16] * x8239 -
    30000000.0 * sc[16] * x999 + x10366 + x11007 * x1822 - x11007 * x1838 +
    x1535 * x2008 - x1537 * x2008 + x1654 * x891 - x1685 * x891 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1822 - x1838) +
    (x2008 * x679 + x684 * x891) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (x685 * x891) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[108] =
    -30000000.0 * sc[16] * x1006 + 30000000.0 * sc[16] * x1008 - sc[16] * x167 -
    50000000.0 * sc[16] * x1824 + 50000000.0 * sc[16] * x1887 +
    7500000.0 * sc[17] * x2351 + x10366 + x11007 * x1824 - x11007 * x1887 +
    x1385 * x2008 - x1563 * x2008 + x1708 * x891 - x1745 * x891 +
    1600000.0 * x607 * x8309 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1824 - x1887) +
    (x2008 * x679 + x684 * x891) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (x685 * x891) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[131] =
    -30000000.0 * sc[16] * x1039 + 30000000.0 * sc[16] * x1042 - sc[16] * x154 -
    50000000.0 * sc[16] * x1956 + 50000000.0 * sc[16] * x1973 + x11007 * x1956 -
    x11007 * x1973 - 1.614e+17 * x11036 + 8.68332e+25 * x11038 * x1478 -
    8.68332e+25 * x11040 + 1.614e+17 * x11070 + x11121 * x11238 -
    x11238 * x944 - x1320 * x2008 + x1564 * x2008 + x1747 * x891 -
    x1748 * x891 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1956 - x1973) +
    (x2008 * x679 + x684 * x891) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (x685 * x891) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[154] =
    -30000000.0 * sc[16] * x1043 + 30000000.0 * sc[16] * x1045 -
    50000000.0 * sc[16] * x2014 + 50000000.0 * sc[16] * x2032 + x10366 +
    x11007 * x2014 - x11007 * x2032 - x1440 * x2008 + x1755 * x891 +
    x2008 * x921 - x227 * x891 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x2014 - x2032) +
    (x2008 * x679 + x684 * x891) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (x685 * x891) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[177] =
    -30000000.0 * sc[16] * x1051 + 30000000.0 * sc[16] * x1052 -
    50000000.0 * sc[16] * x2070 + 50000000.0 * sc[16] * x2087 + x10366 +
    x11007 * x2070 - x11007 * x2087 + x1580 * x2008 + x1767 * x891 -
    x1812 * x891 - x2008 * x476 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x2070 - x2087) +
    (x2008 * x679 + x684 * x891) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (x685 * x891) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[200] =
    -30000000.0 * sc[16] * x1056 + 30000000.0 * sc[16] * x1059 -
    50000000.0 * sc[16] * x2080 + 50000000.0 * sc[16] * x2141 -
    50000000.0 * sc[16] + x10366 + x11007 * x2080 - x11007 * x2141 +
    x1813 * x891 - x1833 * x891 - x2008 * x315 + x2008 * x789 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x2080 - x2141) +
    (x2008 * x679 + x684 * x891) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (x685 * x891) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[223] =
    -30000000.0 * sc[16] * x1060 + 30000000.0 * sc[16] * x1062 +
    50000000.0 * sc[16] * x2186 - 50000000.0 * sc[16] * x649 + x10276 -
    x11007 * x2186 + x11007 * x649 - x1149 * x2008 - x1825 * x891 +
    x1841 * x891 + x2008 * x646 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x2186 + x649) +
    (x2008 * x679 + x684 * x891) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (x685 * x891) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[246] =
    -4.035e+16 * refC * sc[16] * x11006 * x1457 +
    40000000.0 * sc[13] * x11399 * x1248 + 50000000.0 * sc[13] * x1462 +
    sc[14] * x10617 - 30000000.0 * sc[16] * x1064 +
    30000000.0 * sc[16] * x1071 + 50000000.0 * sc[16] * x2271 -
    50000000.0 * sc[16] * x946 + 200000000.0 * sc[1] * x1248 * x2129 -
    x1037 * x2008 + x10999 * x11121 - x10999 * x944 +
    2.69e+16 * x11006 * x674 * x940 + 4.035e+16 * x11006 * x674 * x977 -
    x11007 * x2271 + x11007 * x946 + 2.17083e+25 * x11038 * x1478 -
    2.17083e+25 * x11040 + 3200000.0 * x1249 * x8309 +
    30000000.0 * x159 * x170 + x1590 * x2008 + x1830 * x891 - x1831 * x891 +
    100000000.0 * x453 * x595 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x2271 + x946) +
    (x2008 * x679 + x684 * x891) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (x685 * x891) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[269] =
    -30000000.0 * sc[16] * x1072 + 30000000.0 * sc[16] * x1073 -
    50000000.0 * sc[16] * x1480 + 50000000.0 * sc[16] * x2323 + x10276 -
    x1047 * x2008 + x11007 * x1480 - x11007 * x2323 - x1877 * x891 +
    x2008 * x963 + x891 * x896 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1480 - x2323) +
    (x2008 * x679 + x684 * x891) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (x685 * x891) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[292] =
    -30000000.0 * sc[16] * x1075 - 50000000.0 * sc[16] * x1453 +
    50000000.0 * sc[16] * x2360 + 30000000.0 * sc[16] * x671 + x10366 +
    x11007 * x1453 - x11007 * x2360 + x1640 * x2008 - x1659 * x2008 +
    x1886 * x891 - x1897 * x891 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (x1453 - x2360) +
    (x2008 * x679 + x684 * x891) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (x685 * x891) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[315] =
    50000000.0 * sc[10] * x1462 + 30000000.0 * sc[10] * x159 * x1860 +
    50000000.0 * sc[16] * x1035 - 30000000.0 * sc[16] * x1078 +
    30000000.0 * sc[16] * x1080 - 50000000.0 * sc[16] * x809 +
    16.32 * sc[2] * x5621 - x1035 * x11007 + x11007 * x809 +
    20000000.0 * x11399 * x607 + x1663 * x2008 - x1664 * x2008 - x1862 * x891 +
    x981 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1035 + x809) +
    (x2008 * x679 + x684 * x891) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (x685 * x891) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[338] =
    sc[10] * x10617 - 30000000.0 * sc[16] * x1083 +
    30000000.0 * sc[16] * x1084 + 50000000.0 * sc[16] * x1118 -
    50000000.0 * sc[16] * x1205 - x11007 * x1118 + x11007 * x1205 +
    x1670 * x2008 - x1679 * x2008 - x1862 * x891 + x1872 * x891 + x981 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1118 + x1205) +
    (x2008 * x679 + x684 * x891) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (x685 * x891) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[361] =
    -30000000.0 * sc[16] * x1085 + 30000000.0 * sc[16] * x1086 -
    50000000.0 * sc[16] * x216 + 50000000.0 * sc[16] * x894 + x11007 * x216 -
    x11007 * x894 + x1680 * x2008 - x1688 * x2008 - x1925 * x891 + x502 * x891 +
    x981 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) * (x216 - x894) +
    (x2008 * x679 + x684 * x891) * (x1085 - x1086 + (x677) * (x216 - x894)) +
    (x685 * x891) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[384] =
    -50000000.0 * sc[0] * x736 + 50000000.0 * sc[16] * x1070 -
    30000000.0 * sc[16] * x1087 + 30000000.0 * sc[16] * x1088 -
    50000000.0 * sc[16] * x955 - 40000000.0 * sc[16] - sc[1] * x204 -
    100000000.0 * sc[1] - 100000000.0 * sc[2] - 1600000.0 * sc[3] * x8239 -
    sc[4] * x167 - sc[5] * x154 - 50000000.0 * sc[8] + x10366 - x1070 * x11007 -
    2.69e+16 * x11006 * x1457 * x843 + x11007 * x955 + x1689 * x2008 +
    x1932 * x891 - x1937 * x891 + x467 - 50000000.0 * x674 - 30000000.0 * x675 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1070 + x955) +
    (x2008 * x679 + x684 * x891) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (x685 * x891) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[407] =
    -30000000.0 * sc[16] * x1089 - 50000000.0 * sc[16] * x958 +
    50000000.0 * sc[1] * x1013 + 10000000.0 * sc[2] * x1013 +
    7500000.0 * sc[4] * x2351 + x11007 * x958 + x11060 + x1625 * x2008 +
    x183 * x891 + x467 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1668 + x958) +
    (x2008 * x679 + x684 * x891) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (x685 * x891) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[430] = -30000000.0 * sc[16] * x1141 - 50000000.0 * sc[16] * x1694 +
           x1018 * x2008 + x11007 * x1694 + x11060 + x233 * x891 + x467 +
           (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
             (-x1668 + x1694) +
           (x2008 * x679 + x684 * x891) *
             (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
           (x685 * x891) *
             (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
              (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
              (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                        (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[453] =
    50000000.0 * sc[16] * x1009 - 50000000.0 * sc[16] * x1057 -
    30000000.0 * sc[16] * x1161 + 30000000.0 * sc[16] * x1167 - x1009 * x11007 +
    x10366 + x1057 * x11007 + x1729 * x2008 - x1937 * x891 + x1946 * x891 -
    x2008 * x262 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1009 + x1057) +
    (x2008 * x679 + x684 * x891) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (x685 * x891) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[476] =
    -30000000.0 * sc[16] * x1443 - 50000000.0 * sc[16] * x784 + x11007 * x784 +
    x11060 + x1675 * x2008 + x1949 * x891 + x467 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x1668 + x784) +
    (x2008 * x679 + x684 * x891) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (x685 * x891) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[499] =
    -30000000.0 * sc[16] * x1444 + 30000000.0 * sc[16] * x1445 +
    50000000.0 * sc[16] * x647 - 50000000.0 * sc[16] * x669 + x10366 -
    x11007 * x647 + x11007 * x669 + x1752 * x2008 - x1757 * x2008 +
    x1788 * x891 - x1937 * x891 +
    (-30000000.0 * sc[16] * x677 + x2008 * x678 - x683 * x891) *
      (-x647 + x669) +
    (x2008 * x679 + x684 * x891) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (x685 * x891) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[17] = -sc[17] * x441 + 140000.0 * sc[3] * x1243 + x1067 + x11062 +
          x1243 * x1959 + x1243 * x2352 + x1243 * x801 + x2172 * x725 -
          x2172 * x790 + x725 * x875 - x790 * x875 +
          (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
            (-x1472 + x985) +
          (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
            (x725 - x790 + (x677) * (-x1472 + x985)) +
          (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
           x2184 * x231 - x231 * x2352 - x231 * x801) *
            (x897 - x908 + (-x683) * (-x1472 + x985) +
             (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
             (x685) *
               (-x923 + x932 + (x680) * (-x1472 + x985) +
                (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
                (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                          (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
          (-20000000.0 * sc[4] * x640) *
            (x1007 - x937 + (x678) * (-x1472 + x985) +
             (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
          (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
           x2184 * x483 - x2352 * x483 - x483 * x801) *
            (-x923 + x932 + (x680) * (-x1472 + x985) +
             (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
             (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[40] = 140000.0 * sc[3] * x207 + x1030 + x11052 + x1959 * x207 +
          x207 * x2352 + x207 * x801 + x2172 * x926 - x2172 * x936 + x5502 +
          x819 + x875 * x926 - x875 * x936 +
          (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
            (x1665 - x1692) +
          (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
            (x926 - x936 + (x677) * (x1665 - x1692)) +
          (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
           x2184 * x231 - x231 * x2352 - x231 * x801) *
            (x1069 - x1526 + (-x683) * (x1665 - x1692) +
             (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x685) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (-20000000.0 * sc[4] * x640) *
            (x1471 - x1481 + (x678) * (x1665 - x1692) +
             (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
          (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
           x2184 * x483 - x2352 * x483 - x483 * x801) *
            (-x1005 + x1074 + (x680) * (x1665 - x1692) +
             (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[63] = 20000000.0 * sc[1] * x2044 * x220 +
          20000000.0 * sc[2] * x2044 * x220 + 140000.0 * sc[3] * x220 + x1030 +
          x11052 + x220 * x2352 + x5502 + x5641 + x7450 + x875 * x968 -
          x875 * x995 +
          (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
            (x1753 - x1773) +
          (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
            (x968 - x995 + (x677) * (x1753 - x1773)) +
          (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
           x2184 * x231 - x231 * x2352 - x231 * x801) *
            (x115 - x1653 + (-x683) * (x1753 - x1773) +
             (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x685) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (-20000000.0 * sc[4] * x640) *
            (x1482 - x961 + (x678) * (x1753 - x1773) +
             (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
          (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
           x2184 * x483 - x2352 * x483 - x483 * x801) *
            (x1633 - x824 + (x680) * (x1753 - x1773) +
             (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[86] =
    140000.0 * sc[3] * x1639 - x1000 * x2172 - x1000 * x875 - 140000.0 * x1025 +
    x11052 - 140000.0 * x1266 + x1639 * x1959 + x1639 * x2352 + x1639 * x801 +
    x2172 * x999 + x5502 + x5715 + x875 * x999 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x1822 - x1838) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[109] =
    sc[16] * x167 - 7500000.0 * sc[17] * x2351 - 20000000.0 * sc[17] * x7548 +
    140000.0 * sc[3] * x1743 + x1006 * x2172 + x1006 * x875 - x1008 * x2172 -
    x1008 * x875 + x11052 + x1743 * x1959 + x1743 * x2352 + x1743 * x801 +
    10000000.0 * x2351 * x267 + x5502 + x5815 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x1824 - x1887) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[132] =
    1.614e+22 * sc[10] * x11048 + sc[16] * x154 - 10000000.0 * sc[17] * x9144 +
    140000.0 * sc[3] * x1763 + x1039 * x2172 + x1039 * x875 - x1042 * x2172 -
    x1042 * x875 + 5.3600740740740798e+37 * x1104 * x285 -
    1.614e+22 * x11045 * x1599 - x11057 * x11248 + x11248 * x850 +
    x1763 * x1959 + x1763 * x2352 + x1763 * x801 -
    5.3600740740740798e+37 * x280 * x285 + x5937 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x1956 - x1973) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-20000000.0 * sc[4] * x640) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[155] =
    -140000.0 * sc[17] * x1235 + 140000.0 * sc[3] * x1826 + x1043 * x2172 +
    x1043 * x875 - x1045 * x2172 - x1045 * x875 + x11052 + x1826 * x1959 +
    x1826 * x2184 + x1826 * x2352 + x1826 * x801 + x2014 * x914 - x2032 * x914 +
    x6035 + x6068 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x2014 - x2032) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-20000000.0 * sc[4] * x640) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[178] =
    x1051 * x2172 + x1051 * x875 - x1052 * x2172 - x1052 * x875 + x11053 +
    x2070 * x914 - x2087 * x914 + x6115 + x6117 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x2070 - x2087) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[201] =
    2.69e+21 * sc[10] * x10 * x1056 * x867 * exp(x839) +
    140000.0 * sc[3] * x1240 + x1056 * x2172 - x1059 * x2172 - x1059 * x875 +
    x11052 + x1240 * x1959 + x1240 * x2352 + x1240 * x801 + x6068 + x6211 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x2080 - x2141) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-20000000.0 * sc[4] * x640) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[224] =
    140000.0 * sc[3] * x858 + x1060 * x2172 + x1060 * x875 - x1062 * x2172 -
    x1062 * x875 + x11062 + x1959 * x858 + x2352 * x858 + x6293 + x801 * x858 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x2186 + x649) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-20000000.0 * sc[4] * x640) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[247] =
    4.035e+21 * sc[10] * x11048 + 140000.0 * sc[3] * x174 +
    2.69e+21 * x10 * x11048 + x1064 * x2172 + x1064 * x875 - x1071 * x2172 -
    x1071 * x875 - x11001 * x11057 + x11001 * x850 +
    1.34001851851852e+37 * x1104 * x285 - 4.035e+21 * x11045 * x1599 +
    x174 * x1959 + x174 * x2352 + x174 * x801 -
    1.34001851851852e+37 * x280 * x285 + x6428 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x2271 + x946) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-20000000.0 * sc[4] * x640) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[270] =
    140000.0 * sc[3] * x858 + x1072 * x2172 + x1072 * x875 - x1073 * x2172 -
    x1073 * x875 + x11062 + x1959 * x858 + x222 * x675 + x2352 * x858 + x31 +
    x801 * x858 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x1480 - x2323) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-20000000.0 * sc[4] * x640) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[293] =
    140000.0 * sc[3] * x229 + x1075 * x2172 + x1075 * x875 + x11052 +
    x1959 * x229 - x2172 * x671 + x229 * x2352 + x229 * x801 + x6068 + x6598 -
    x671 * x875 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (x1453 - x2360) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[316] =
    x1078 * x2172 + x1078 * x875 - x1080 * x2172 - x1080 * x875 + x11055 +
    x203 + x6665 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1035 + x809) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[339] =
    20000000.0 * sc[4] * x1829 + x1083 * x2172 + x1083 * x875 - x1084 * x2172 -
    x1084 * x875 + x11055 - x1118 * x914 + x1205 * x914 + x203 + x992 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1118 + x1205) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[362] =
    x1085 * x2172 + x1085 * x875 - x1086 * x2172 - x1086 * x875 + x11055 +
    x1519 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) * (x216 - x894) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[385] =
    50000000.0 * sc[0] * x736 + 48000000.0 * sc[2] * x1932 + sc[4] * x167 +
    sc[5] * x154 - x1070 * x914 + x1087 * x2172 + x1087 * x875 - x1088 * x2172 -
    x1088 * x875 + x11053 + x341 + x6117 + x914 * x955 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1070 + x955) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[408] =
    -sc[0] * x441 + sc[11] * x1089 * x222 - 10000000.0 * sc[2] * x1013 -
    sc[2] * x7448 + 140000.0 * sc[3] * x837 - 7500000.0 * sc[4] * x2351 -
    20000000.0 * sc[4] * x7548 - 10000000.0 * sc[5] * x9144 -
    140000.0 * sc[6] * x1235 + x1089 * x875 - 2.69e+21 * x11045 * x843 +
    x11052 + x11885 + x1959 * x837 + x2180 + x2352 * x837 + x5502 +
    x801 * x837 + x8063 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1668 + x958) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[431] =
    20000000.0 * sc[1] * x1265 * x2044 + 20000000.0 * sc[2] * x1265 * x2044 +
    48000000.0 * sc[2] * x233 + 140000.0 * sc[3] * x1265 + x11052 +
    x1141 * x2172 + x1141 * x875 + x11885 + x1265 * x2184 + x1265 * x2352 +
    x1694 * x914 + x341 + x6068 + x8063 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1668 + x1694) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[454] =
    x1101 + x11053 + x1161 * x2172 + x1161 * x875 - x1167 * x2172 -
    x1167 * x875 + x341 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1009 + x1057) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[477] =
    48000000.0 * sc[2] * x1949 + sc[2] * x5637 + x11053 + x11885 +
    x1443 * x2172 + x1443 * x875 + x341 + x6117 + x784 * x914 + x8063 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) *
      (-x1668 + x784) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[500] =
    48000000.0 * sc[2] * x1788 + x11053 + x1444 * x2172 + x1444 * x875 -
    x1445 * x2172 - x1445 * x875 + x341 + x6117 - x647 * x914 + x669 * x914 +
    (-48000000.0 * sc[2] * x683 + x2172 * x677 + x677 * x875) * (-x647 + x669) +
    (48000000.0 * sc[2] * x684 - 20000000.0 * sc[4] * x660) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-140000.0 * sc[3] * x231 - 20000000.0 * sc[4] * x67 - x1959 * x231 -
     x2184 * x231 - x231 * x2352 - x231 * x801) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-20000000.0 * sc[4] * x640) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (48000000.0 * sc[2] * x685 - 140000.0 * sc[3] * x483 - x1959 * x483 -
     x2184 * x483 - x2352 * x483 - x483 * x801) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[18] = 80200000.0 * sc[2] * x756 - 80200000.0 * sc[2] * x779 + x10261 -
          x1036 * x923 + x1036 * x932 + x1243 * x2175 +
          (x1036 * x680) * (-x1472 + x985) +
          (x1036 * x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (-x2175 * x231) *
            (x897 - x908 + (-x683) * (-x1472 + x985) +
             (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
             (x685) *
               (-x923 + x932 + (x680) * (-x1472 + x985) +
                (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
                (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                          (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
          (-80200000.0 * sc[2] * x597 + x1036 * x682) *
            (x1007 - x937 + (x678) * (-x1472 + x985) +
             (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
          (-80200000.0 * sc[2] * x448 - x2175 * x483) *
            (-x923 + x932 + (x680) * (-x1472 + x985) +
             (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
             (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[41] = -80200000.0 * sc[18] * x1378 + 80200000.0 * sc[2] * x1560 -
          80200000.0 * sc[2] * x423 - x1005 * x1036 + x1036 * x1074 + x177 +
          x207 * x2175 + x818 + (x1036 * x680) * (x1665 - x1692) +
          (x1036 * x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (-x2175 * x231) *
            (x1069 - x1526 + (-x683) * (x1665 - x1692) +
             (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x685) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (-80200000.0 * sc[2] * x597 + x1036 * x682) *
            (x1471 - x1481 + (x678) * (x1665 - x1692) +
             (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
          (-80200000.0 * sc[2] * x448 - x2175 * x483) *
            (-x1005 + x1074 + (x680) * (x1665 - x1692) +
             (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[64] = 80200000.0 * sc[2] * x1081 - 80200000.0 * sc[2] * x1718 +
          x1036 * x1633 - x1036 * x824 + x2175 * x220 + 80200000.0 * x325 +
          x818 + (x1036 * x680) * (x1753 - x1773) +
          (x1036 * x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (-x2175 * x231) *
            (x115 - x1653 + (-x683) * (x1753 - x1773) +
             (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x685) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (-80200000.0 * sc[2] * x597 + x1036 * x682) *
            (x1482 - x961 + (x678) * (x1753 - x1773) +
             (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
          (-80200000.0 * sc[2] * x448 - x2175 * x483) *
            (x1633 - x824 + (x680) * (x1753 - x1773) +
             (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[87] =
    -80200000.0 * sc[2] * x1739 + 80200000.0 * sc[2] * x250 - x1036 * x1656 +
    x1036 * x1672 + x1639 * x2175 + x818 + (x1036 * x680) * (x1822 - x1838) +
    (x1036 * x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-x2175 * x231) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[110] =
    -sc[18] * x9007 - 80200000.0 * sc[2] * x1759 + 80200000.0 * sc[2] * x1780 -
    x1036 * x1686 + x1036 * x548 + x1743 * x2175 + x818 +
    (x1036 * x680) * (x1824 - x1887) +
    (x1036 * x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-x2175 * x231) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[133] =
    80200000.0 * sc[2] * x1760 - 80200000.0 * sc[2] * x1844 +
    1.61333333333333e+66 * x10238 * x1569 - x10265 * x10464 + x10308 * x10464 -
    1.61333333333333e+66 * x10320 - x1036 * x1750 + x1036 * x1751 -
    1.32e+37 * x1299 * x2369 + 1.6224e+48 * x1504 * x569 + x1763 * x2175 +
    1.32e+37 * x2369 * x578 * x821 - 1.6224e+48 * x267 * x569 * x855 -
    x313 * (12.0 * x693 * x922 + 1.68 * x693 * x990) +
    x688 * (12.0 * x693 * x922 + 1.68 * x693 * x990) + 3.12e+28 * x730 -
    3.12e+28 * x792 + (x1036 * x680) * (x1956 - x1973) +
    (x1036 * x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-x2175 * x231) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[156] =
    sc[14] * x9181 + 80200000.0 * sc[2] * x1865 - 80200000.0 * sc[2] * x1867 -
    x1036 * x1756 + x1036 * x1768 + x1826 * x2175 + x818 +
    (x1036 * x680) * (x2014 - x2032) +
    (x1036 * x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-x2175 * x231) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[179] =
    -80200000.0 * sc[2] * x1875 + 80200000.0 * sc[2] * x1891 - x1036 * x1770 +
    x1036 * x1772 + x1896 * x2175 + x818 + (x1036 * x680) * (x2070 - x2087) +
    (x1036 * x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-x2175 * x231) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[202] =
    80200000.0 * sc[2] * x1881 - 80200000.0 * sc[2] * x1960 - x1036 * x1779 +
    x1036 * x1782 + x1240 * x2175 + x510 + x818 +
    (x1036 * x680) * (x2080 - x2141) +
    (x1036 * x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-x2175 * x231) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[225] =
    80200000.0 * sc[2] * x1961 - 80200000.0 * sc[2] * x1962 + x10261 +
    x1036 * x1742 - x1036 * x1787 + x2175 * x858 +
    (x1036 * x680) * (-x2186 + x649) +
    (x1036 * x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-x2175 * x231) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[248] =
    -sc[1] * x177 * x181 + 80200000.0 * sc[2] * x1968 -
    80200000.0 * sc[2] * x1969 - sc[8] * x510 * x514 +
    2.2e+36 * x10 * x10241 * x514 + 5.2e+27 * x10 * x181 * x792 +
    4.0333333333333298e+65 * x10238 * x1569 - 3.3e+36 * x10241 +
    3.3e+36 * x10274 - 4.0333333333333298e+65 * x10320 - x1036 * x1676 +
    x1036 * x1741 - 7.8e+27 * x1259 * x2174 + 4.056e+47 * x1504 * x569 +
    x174 * x2175 + 7.8e+27 * x2174 * x267 * x851 - 4.056e+47 * x5534 +
    (x1036 * x680) * (-x2271 + x946) +
    (x1036 * x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-x2175 * x231) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[271] =
    -80200000.0 * sc[2] * x1970 + 80200000.0 * sc[2] * x755 + x10261 -
    x1036 * x1749 + x1036 * x1814 + x2175 * x858 +
    (x1036 * x680) * (x1480 - x2323) +
    (x1036 * x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-x2175 * x231) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[294] =
    80200000.0 * sc[2] * x1971 - 80200000.0 * sc[2] * x1979 - x1036 * x1818 +
    x1036 * x1819 + x2175 * x229 + x818 + (x1036 * x680) * (x1453 - x2360) +
    (x1036 * x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-x2175 * x231) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[317] =
    -80200000.0 * sc[2] * x1884 + 80200000.0 * sc[2] * x1987 - x1036 * x1821 +
    x1036 * x1823 + x10360 + (x1036 * x680) * (-x1035 + x809) +
    (x1036 * x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-x2175 * x231) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[340] =
    -80200000.0 * sc[2] * x1884 + 80200000.0 * sc[2] * x1947 + sc[6] * x9181 -
    x1036 * x1828 + x1036 * x1834 + x10360 + (x1036 * x680) * (-x1118 + x1205) +
    (x1036 * x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-x2175 * x231) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[363] =
    80200000.0 * sc[2] * x1837 - 80200000.0 * sc[2] * x1882 - x1036 * x1835 +
    x1036 * x1836 + x10360 + (x1036 * x680) * (x216 - x894) +
    (x1036 * x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-x2175 * x231) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[386] =
    80200000.0 * sc[2] * x731 + x1036 * x1815 + x1602 + x1896 * x2175 + x2023 +
    (x1036 * x680) * (-x1070 + x955) +
    (x1036 * x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-x2175 * x231) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[409] =
    80200000.0 * sc[2] * x731 + x1036 * x1817 + x1602 + x2023 + x2175 * x837 +
    (x1036 * x680) * (-x1668 + x958) +
    (x1036 * x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-x2175 * x231) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[432] =
    -80200000.0 * sc[1] * x1378 + 80200000.0 * sc[2] * x1958 - sc[4] * x9007 +
    x1036 * x1863 - 5.2e+27 * x1257 * x2174 * x843 + x1265 * x2175 -
    2.2e+36 * x1298 * x2369 * x843 + x1602 + x2023 +
    (x1036 * x680) * (-x1668 + x1694) +
    (x1036 * x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-x2175 * x231) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[455] =
    80200000.0 * sc[2] * x655 - x1036 * x1870 + x1036 * x1873 + x1896 * x2175 +
    x2023 + x818 + (x1036 * x680) * (-x1009 + x1057) +
    (x1036 * x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-x2175 * x231) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[478] =
    80200000.0 * sc[2] * x1966 + x1036 * x1874 + x1602 + x1896 * x2175 + x2023 +
    (x1036 * x680) * (-x1668 + x784) +
    (x1036 * x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-x2175 * x231) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[501] =
    80200000.0 * sc[2] * x731 + x1036 * x1876 + x1602 + x1896 * x2175 + x2023 +
    (x1036 * x680) * (-x647 + x669) +
    (x1036 * x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-x2175 * x231) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-80200000.0 * sc[2] * x597 + x1036 * x682) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (-80200000.0 * sc[2] * x448 - x2175 * x483) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[19] = -sc[19] * x407 + 60000000.0 * sc[19] * x923 -
          60000000.0 * sc[19] * x932 + x1048 + x11896 + x897 * x948 -
          x908 * x948 + x913 +
          (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 +
           x2072 * x677 - x2086 * x683 - x683 * x948) *
            (-x1472 + x985) +
          (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 +
           x2086 * x684 - x2122 * x660 + x684 * x948) *
            (x725 - x790 + (x677) * (-x1472 + x985)) +
          (-x2122 * x67) *
            (x897 - x908 + (-x683) * (-x1472 + x985) +
             (x684) * (x725 - x790 + (x677) * (-x1472 + x985)) +
             (x685) *
               (-x923 + x932 + (x680) * (-x1472 + x985) +
                (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
                (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                          (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
          (-60000000.0 * sc[19] * x682 - x2122 * x640) *
            (x1007 - x937 + (x678) * (-x1472 + x985) +
             (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
          (x2086 * x685 + x685 * x948) *
            (-x923 + x932 + (x680) * (-x1472 + x985) +
             (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
             (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[42] = 60000000.0 * sc[19] * x1005 - 60000000.0 * sc[19] * x1074 +
          x1069 * x948 + x11896 - x1526 * x948 + x287 + x5551 + x641 +
          (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 +
           x2072 * x677 - x2086 * x683 - x683 * x948) *
            (x1665 - x1692) +
          (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 +
           x2086 * x684 - x2122 * x660 + x684 * x948) *
            (x926 - x936 + (x677) * (x1665 - x1692)) +
          (-x2122 * x67) *
            (x1069 - x1526 + (-x683) * (x1665 - x1692) +
             (x684) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x685) *
               (-x1005 + x1074 + (x680) * (x1665 - x1692) +
                (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
                (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                          (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
          (-60000000.0 * sc[19] * x682 - x2122 * x640) *
            (x1471 - x1481 + (x678) * (x1665 - x1692) +
             (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
          (x2086 * x685 + x685 * x948) *
            (-x1005 + x1074 + (x680) * (x1665 - x1692) +
             (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
             (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[65] = -60000000.0 * sc[19] * x1633 + 60000000.0 * sc[19] * x824 +
          x115 * x948 + x11896 - x1653 * x948 + x5 + x5551 + x5632 +
          (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 +
           x2072 * x677 - x2086 * x683 - x683 * x948) *
            (x1753 - x1773) +
          (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 +
           x2086 * x684 - x2122 * x660 + x684 * x948) *
            (x968 - x995 + (x677) * (x1753 - x1773)) +
          (-x2122 * x67) *
            (x115 - x1653 + (-x683) * (x1753 - x1773) +
             (x684) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x685) *
               (x1633 - x824 + (x680) * (x1753 - x1773) +
                (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
                (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                          (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
          (-60000000.0 * sc[19] * x682 - x2122 * x640) *
            (x1482 - x961 + (x678) * (x1753 - x1773) +
             (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
          (x2086 * x685 + x685 * x948) *
            (x1633 - x824 + (x680) * (x1753 - x1773) +
             (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
             (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[88] =
    60000000.0 * sc[19] * x1656 - 60000000.0 * sc[19] * x1672 + sc[20] * x8246 +
    x11896 + x1654 * x948 - x1685 * x948 + x5551 + x5710 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x1822 - x1838) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-x2122 * x67) *
      (x1654 - x1685 + (-x683) * (x1822 - x1838) +
       (x684) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x685) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (x2086 * x685 + x685 * x948) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[111] =
    60000000.0 * sc[19] * x1686 - 60000000.0 * sc[19] * x548 - sc[19] * x7528 +
    sc[20] * x9017 + 6600000.0 * x105 * x110 * x170 + x11896 + x1708 * x948 -
    x1745 * x948 + x5551 + x5805 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x1824 - x1887) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-x2122 * x67) *
      (x1708 - x1745 + (-x683) * (x1824 - x1887) +
       (x684) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x685) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (x2086 * x685 + x685 * x948) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[134] =
    60000000.0 * sc[19] * x1750 - 60000000.0 * sc[19] * x1751 - sc[19] * x9115 +
    x11896 + x1747 * x948 - x1748 * x948 + x5929 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x1956 - x1973) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-x2122 * x67) *
      (x1747 - x1748 + (-x683) * (x1956 - x1973) +
       (x684) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x685) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (x2086 * x685 + x685 * x948) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[157] =
    60000000.0 * sc[19] * x1756 - 60000000.0 * sc[19] * x1768 -
    9260000.0 * sc[19] + x11899 + x1755 * x948 - x227 * x948 + x6032 + x9971 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x2014 - x2032) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-x2122 * x67) *
      (x1755 - x227 + (-x683) * (x2014 - x2032) +
       (x684) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x685) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (x2086 * x685 + x685 * x948) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[180] =
    60000000.0 * sc[19] * x1770 - 60000000.0 * sc[19] * x1772 - sc[19] * x9990 +
    x11899 + x1767 * x948 - x1812 * x948 + x6112 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x2070 - x2087) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-x2122 * x67) *
      (x1767 - x1812 + (-x683) * (x2070 - x2087) +
       (x684) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x685) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (x2086 * x685 + x685 * x948) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[203] =
    -50000000.0 * sc[14] * x315 + 50000000.0 * sc[14] * x789 - sc[19] * x10533 +
    60000000.0 * sc[19] * x1779 - 60000000.0 * sc[19] * x1782 +
    sc[20] * x10536 + x10540 + x11899 + x1813 * x948 - x1833 * x948 + x6203 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x2080 - x2141) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-x2122 * x67) *
      (x1813 - x1833 + (-x683) * (x2080 - x2141) +
       (x684) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x685) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (x2086 * x685 + x685 * x948) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[226] =
    -50000000.0 * sc[14] * x1149 + 50000000.0 * sc[14] * x646 -
    sc[19] * x10581 - 60000000.0 * sc[19] * x1742 +
    60000000.0 * sc[19] * x1787 + x1048 + x11896 - x1825 * x948 + x1841 * x948 +
    x6287 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x2186 + x649) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-x2122 * x67) *
      (-x1825 + x1841 + (-x683) * (-x2186 + x649) +
       (x684) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x685) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (x2086 * x685 + x685 * x948) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[249] =
    60000000.0 * sc[19] * x1676 - 60000000.0 * sc[19] * x1741 +
    60000000.0 * sc[20] * x1304 + x11896 + x1830 * x948 - x1831 * x948 + x6413 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x2271 + x946) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-x2122 * x67) *
      (x1830 - x1831 + (-x683) * (-x2271 + x946) +
       (x684) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x685) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (x2086 * x685 + x685 * x948) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[272] =
    60000000.0 * sc[19] * x1749 - 60000000.0 * sc[19] * x1814 + x1048 + x11896 -
    x1877 * x948 + x6512 + x896 * x948 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x1480 - x2323) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-x2122 * x67) *
      (-x1877 + x896 + (-x683) * (x1480 - x2323) +
       (x684) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x685) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (x2086 * x685 + x685 * x948) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[295] =
    60000000.0 * sc[19] * x1818 - 60000000.0 * sc[19] * x1819 +
    6600000.0 * x110 * x170 * x2279 + x11899 + x1886 * x948 - x1897 * x948 +
    x6593 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x1453 - x2360) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-x2122 * x67) *
      (x1886 - x1897 + (-x683) * (x1453 - x2360) +
       (x684) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x685) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (x2086 * x685 + x685 * x948) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[318] =
    60000000.0 * sc[19] * x1821 - 60000000.0 * sc[19] * x1823 + x10324 * x3 +
    x11896 + x1860 * x948 - x1862 * x2086 - x1862 * x948 + x412 + x6658 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1035 + x809) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-x2122 * x67) *
      (x1860 - x1862 + (-x683) * (-x1035 + x809) +
       (x684) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x685) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (x2086 * x685 + x685 * x948) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[341] =
    60000000.0 * sc[19] * x1828 - 60000000.0 * sc[19] * x1834 + x11896 -
    x1862 * x2086 - x1862 * x948 + x1872 * x948 + x412 + x989 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1118 + x1205) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-x2122 * x67) *
      (-x1862 + x1872 + (-x683) * (-x1118 + x1205) +
       (x684) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x685) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (x2086 * x685 + x685 * x948) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[364] =
    60000000.0 * sc[19] * x1835 - 60000000.0 * sc[19] * x1836 + x11896 -
    x1925 * x948 + x2131 + x412 + x502 * x948 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (x216 - x894) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-x2122 * x67) *
      (-x1925 + x502 + (-x683) * (x216 - x894) +
       (x684) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x685) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (x2086 * x685 + x685 * x948) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[387] =
    50000000.0 * sc[14] * x1689 - 50000000.0 * sc[14] * x1707 -
    60000000.0 * sc[19] * x1815 + x10148 + x1087 * x2072 - x1088 * x2072 +
    x11903 + x1932 * x2086 + x1932 * x948 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1070 + x955) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-x2122 * x67) *
      (x1932 - x1937 + (-x683) * (-x1070 + x955) +
       (x684) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x685) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (x2086 * x685 + x685 * x948) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[410] =
    50000000.0 * sc[14] * x1625 + 60000000.0 * sc[19] * x1761 -
    60000000.0 * sc[19] * x1817 + x1089 * x2072 + x11896 + x11905 +
    x183 * x2086 + x183 * x948 - x1937 * x2086 + x1945 * x2122 + x5551 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1668 + x958) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-x2122 * x67) *
      (x183 - x1937 + (-x683) * (-x1668 + x958) +
       (x684) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x685) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (x2086 * x685 + x685 * x948) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[433] =
    50000000.0 * sc[14] * x1018 - 60000000.0 * sc[19] * x1863 + x1141 * x2072 +
    x11903 + x11905 + x2086 * x233 + x233 * x948 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1668 + x1694) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-x2122 * x67) *
      (-x1937 + x233 + (-x683) * (-x1668 + x1694) +
       (x684) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x685) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (x2086 * x685 + x685 * x948) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[456] =
    -sc[0] * x407 + 50000000.0 * sc[14] * x1729 - 50000000.0 * sc[14] * x262 +
    60000000.0 * sc[19] * x1870 - 60000000.0 * sc[19] * x1873 - sc[4] * x7528 -
    sc[5] * x9115 - 9260000.0 * sc[6] - sc[7] * x9990 - sc[8] * x10533 -
    sc[9] * x10581 + x10148 - x10326 * x3 + x11896 + x1946 * x948 + x405 +
    x5551 - 60000000.0 * x578 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1009 + x1057) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-x2122 * x67) *
      (-x1937 + x1946 + (-x683) * (-x1009 + x1057) +
       (x684) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x685) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (x2086 * x685 + x685 * x948) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[479] =
    60000000.0 * sc[10] * x1304 + 50000000.0 * sc[14] * x1675 -
    60000000.0 * sc[19] * x1874 + sc[3] * x8246 + sc[4] * x9017 +
    sc[8] * x10536 + x10187 + 1.33e+48 * x1079 * x843 + x11903 + x11905 +
    x1443 * x2072 + x1949 * x2086 + x1949 * x948 + x791 + x8129 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x1668 + x784) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-x2122 * x67) *
      (-x1937 + x1949 + (-x683) * (-x1668 + x784) +
       (x684) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x685) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (x2086 * x685 + x685 * x948) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[502] =
    -60000000.0 * sc[19] * x1876 + x10148 + x11903 + x1788 * x948 + x2095 +
    (50000000.0 * sc[14] * x678 - 60000000.0 * sc[19] * x680 + x2072 * x677 -
     x2086 * x683 - x683 * x948) *
      (-x647 + x669) +
    (50000000.0 * sc[14] * x679 - 60000000.0 * sc[19] * x681 + x2086 * x684 -
     x2122 * x660 + x684 * x948) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-x2122 * x67) *
      (x1788 - x1937 + (-x683) * (-x647 + x669) +
       (x684) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x685) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (-60000000.0 * sc[19] * x682 - x2122 * x640) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (x2086 * x685 + x685 * x948) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[20] =
    sc[19] * x407 - 60000000.0 * sc[19] * x923 + 60000000.0 * sc[19] * x932 +
    1800000.0 * sc[1] * x1636 - 1800000.0 * sc[20] * x1336 +
    90000.0 * sc[3] * x1636 + 24000000.0 * sc[4] * x1636 +
    11000000.0 * sc[8] * x1636 + x10246 + x1636 * x2168 + x2064 + x742 * x897 -
    x742 * x908 + (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1472 + x985) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x725 - x790 + (x677) * (-x1472 + x985)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x756 - x779 +
       (-x597) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                  (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
       (-x448) *
         (-x923 + x932 + (x680) * (-x1472 + x985) +
          (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
          (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                    (x679) * (x725 - x790 + (x677) * (-x1472 + x985))))) +
    (60000000.0 * sc[19] * x682) *
      (x1007 - x937 + (x678) * (-x1472 + x985) +
       (x679) * (x725 - x790 + (x677) * (-x1472 + x985))) +
    (x685 * x742) *
      (-x923 + x932 + (x680) * (-x1472 + x985) +
       (x681) * (x725 - x790 + (x677) * (-x1472 + x985)) +
       (x682) * (x1007 - x937 + (x678) * (-x1472 + x985) +
                 (x679) * (x725 - x790 + (x677) * (-x1472 + x985))));
  J[43] =
    120.0 * sc[17] * x1238 * x516 - 60000000.0 * sc[19] * x1005 +
    60000000.0 * sc[19] * x1074 + 1.33e+48 * sc[19] * x465 * x729 +
    1800000.0 * sc[1] * x362 + 90000.0 * sc[3] * x362 +
    24000000.0 * sc[4] * x362 + 11000000.0 * sc[8] * x362 + x1069 * x742 -
    1800000.0 * x1340 - x1526 * x742 + x351 + x615 - 1800000.0 * x766 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1665 - x1692) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x926 - x936 + (x677) * (x1665 - x1692)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1560 - x423 +
       (-x597) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                  (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
       (-x448) *
         (-x1005 + x1074 + (x680) * (x1665 - x1692) +
          (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
          (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                    (x679) * (x926 - x936 + (x677) * (x1665 - x1692))))) +
    (60000000.0 * sc[19] * x682) *
      (x1471 - x1481 + (x678) * (x1665 - x1692) +
       (x679) * (x926 - x936 + (x677) * (x1665 - x1692))) +
    (x685 * x742) *
      (-x1005 + x1074 + (x680) * (x1665 - x1692) +
       (x681) * (x926 - x936 + (x677) * (x1665 - x1692)) +
       (x682) * (x1471 - x1481 + (x678) * (x1665 - x1692) +
                 (x679) * (x926 - x936 + (x677) * (x1665 - x1692))));
  J[66] =
    60000000.0 * sc[19] * x1633 - 60000000.0 * sc[19] * x824 +
    1800000.0 * sc[1] * x1063 + 90000.0 * sc[3] * x1063 +
    24000000.0 * sc[4] * x1063 + 11000000.0 * sc[8] * x1063 + x1063 * x2168 +
    x115 * x742 - x1653 * x742 + x351 + x7438 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1753 - x1773) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x968 - x995 + (x677) * (x1753 - x1773)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1081 - x1718 +
       (-x597) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                  (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
       (-x448) *
         (x1633 - x824 + (x680) * (x1753 - x1773) +
          (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
          (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                    (x679) * (x968 - x995 + (x677) * (x1753 - x1773))))) +
    (60000000.0 * sc[19] * x682) *
      (x1482 - x961 + (x678) * (x1753 - x1773) +
       (x679) * (x968 - x995 + (x677) * (x1753 - x1773))) +
    (x685 * x742) *
      (x1633 - x824 + (x680) * (x1753 - x1773) +
       (x681) * (x968 - x995 + (x677) * (x1753 - x1773)) +
       (x682) * (x1482 - x961 + (x678) * (x1753 - x1773) +
                 (x679) * (x968 - x995 + (x677) * (x1753 - x1773))));
  J[89] =
    -60000000.0 * sc[19] * x1656 + 60000000.0 * sc[19] * x1672 +
    1800000.0 * sc[1] * x185 - sc[20] * x8246 + 90000.0 * sc[3] * x185 +
    24000000.0 * sc[4] * x185 + 11000000.0 * sc[8] * x185 - 90000.0 * x1340 +
    x1654 * x742 - x1685 * x742 + x185 * x2168 + x351 - 90000.0 * x766 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1822 - x1838) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (-x1000 + x999 + (x677) * (x1822 - x1838)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1739 + x250 +
       (-x597) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                  (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
       (-x448) *
         (-x1656 + x1672 + (x680) * (x1822 - x1838) +
          (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
          (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                    (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))))) +
    (60000000.0 * sc[19] * x682) *
      (x1535 - x1537 + (x678) * (x1822 - x1838) +
       (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))) +
    (x685 * x742) *
      (-x1656 + x1672 + (x680) * (x1822 - x1838) +
       (x681) * (-x1000 + x999 + (x677) * (x1822 - x1838)) +
       (x682) * (x1535 - x1537 + (x678) * (x1822 - x1838) +
                 (x679) * (-x1000 + x999 + (x677) * (x1822 - x1838))));
  J[112] =
    -60000000.0 * sc[19] * x1686 + 60000000.0 * sc[19] * x548 + sc[19] * x7528 +
    1800000.0 * sc[1] * x1981 - sc[20] * x9017 + 90000.0 * sc[3] * x1981 +
    24000000.0 * sc[4] * x1981 + 11000000.0 * sc[8] * x1981 -
    24000000.0 * x1340 + x1708 * x742 - x1745 * x742 + x1981 * x2168 + x351 -
    24000000.0 * x766 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1824 - x1887) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1006 - x1008 + (x677) * (x1824 - x1887)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1759 + x1780 +
       (-x597) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                  (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
       (-x448) *
         (-x1686 + x548 + (x680) * (x1824 - x1887) +
          (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
          (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                    (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))))) +
    (60000000.0 * sc[19] * x682) *
      (x1385 - x1563 + (x678) * (x1824 - x1887) +
       (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))) +
    (x685 * x742) *
      (-x1686 + x548 + (x680) * (x1824 - x1887) +
       (x681) * (x1006 - x1008 + (x677) * (x1824 - x1887)) +
       (x682) * (x1385 - x1563 + (x678) * (x1824 - x1887) +
                 (x679) * (x1006 - x1008 + (x677) * (x1824 - x1887))));
  J[135] =
    -60000000.0 * sc[19] * x1750 + 60000000.0 * sc[19] * x1751 +
    sc[19] * x9115 + 1800000.0 * sc[1] * x1880 - 24000000.0 * sc[20] * x1323 +
    90000.0 * sc[3] * x1880 + 24000000.0 * sc[4] * x1880 +
    11000000.0 * sc[8] * x1880 + x10251 * x10455 + 2.562e+47 * x10256 -
    x10312 * x10455 - 4.375896e+86 * x10317 + 4.375896e+86 * x139 * x1495 -
    2.562e+47 * x1499 * x734 - 7.98e+48 * x1719 + x1747 * x742 - x1748 * x742 -
    5.3067e+88 * x1764 * x1878 + 5.3067e+88 * x1764 * x780 + 7.98e+48 * x1769 -
    x1950 * x83 * (1.68 * x693 * x916 + 12.0 * x693 * x993) +
    x1951 * x83 * (1.68 * x693 * x916 + 12.0 * x693 * x993) + x5940 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1956 - x1973) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1039 - x1042 + (x677) * (x1956 - x1973)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1760 - x1844 +
       (-x597) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                  (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
       (-x448) *
         (-x1750 + x1751 + (x680) * (x1956 - x1973) +
          (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
          (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                    (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1320 + x1564 + (x678) * (x1956 - x1973) +
       (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))) +
    (x685 * x742) *
      (-x1750 + x1751 + (x680) * (x1956 - x1973) +
       (x681) * (x1039 - x1042 + (x677) * (x1956 - x1973)) +
       (x682) * (-x1320 + x1564 + (x678) * (x1956 - x1973) +
                 (x679) * (x1039 - x1042 + (x677) * (x1956 - x1973))));
  J[158] =
    -60000000.0 * sc[19] * x1756 + 60000000.0 * sc[19] * x1768 +
    2660000.0 * sc[19] + 1800000.0 * sc[1] * x1977 - 90000.0 * sc[20] * x1326 +
    90000.0 * sc[3] * x1977 + 24000000.0 * sc[4] * x1977 +
    11000000.0 * sc[8] * x1977 + x1755 * x742 + x1977 * x2168 - x227 * x742 +
    x351 + x877 - x9971 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x2014 - x2032) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1043 - x1045 + (x677) * (x2014 - x2032)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1865 - x1867 +
       (-x597) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                  (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
       (-x448) *
         (-x1756 + x1768 + (x680) * (x2014 - x2032) +
          (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
          (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                    (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1440 + x921 + (x678) * (x2014 - x2032) +
       (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))) +
    (x685 * x742) *
      (-x1756 + x1768 + (x680) * (x2014 - x2032) +
       (x681) * (x1043 - x1045 + (x677) * (x2014 - x2032)) +
       (x682) * (-x1440 + x921 + (x678) * (x2014 - x2032) +
                 (x679) * (x1043 - x1045 + (x677) * (x2014 - x2032))));
  J[181] =
    -60000000.0 * sc[19] * x1770 + 60000000.0 * sc[19] * x1772 +
    sc[19] * x9990 + x1767 * x742 - x1812 * x742 + x253 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x2070 - x2087) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1051 - x1052 + (x677) * (x2070 - x2087)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1875 + x1891 +
       (-x597) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                  (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
       (-x448) *
         (-x1770 + x1772 + (x680) * (x2070 - x2087) +
          (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
          (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                    (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))))) +
    (60000000.0 * sc[19] * x682) *
      (x1580 - x476 + (x678) * (x2070 - x2087) +
       (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))) +
    (x685 * x742) *
      (-x1770 + x1772 + (x680) * (x2070 - x2087) +
       (x681) * (x1051 - x1052 + (x677) * (x2070 - x2087)) +
       (x682) * (x1580 - x476 + (x678) * (x2070 - x2087) +
                 (x679) * (x1051 - x1052 + (x677) * (x2070 - x2087))));
  J[204] =
    sc[14] * x6213 - 60000000.0 * sc[19] * x1779 + 60000000.0 * sc[19] * x1782 +
    1800000.0 * sc[1] * x339 - sc[20] * x10536 + 90000.0 * sc[3] * x339 +
    24000000.0 * sc[4] * x339 + 11000000.0 * sc[8] * x339 - 11000000.0 * x1340 +
    x135 + x1813 * x742 - x1833 * x742 + x2168 * x339 + x351 + x6208 -
    11000000.0 * x766 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x2080 - x2141) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1056 - x1059 + (x677) * (x2080 - x2141)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1881 - x1960 +
       (-x597) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                  (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
       (-x448) *
         (-x1779 + x1782 + (x680) * (x2080 - x2141) +
          (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
          (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                    (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))))) +
    (60000000.0 * sc[19] * x682) *
      (-x315 + x789 + (x678) * (x2080 - x2141) +
       (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))) +
    (x685 * x742) *
      (-x1779 + x1782 + (x680) * (x2080 - x2141) +
       (x681) * (x1056 - x1059 + (x677) * (x2080 - x2141)) +
       (x682) * (-x315 + x789 + (x678) * (x2080 - x2141) +
                 (x679) * (x1056 - x1059 + (x677) * (x2080 - x2141))));
  J[227] =
    sc[19] * x10581 + 60000000.0 * sc[19] * x1742 -
    60000000.0 * sc[19] * x1787 + 1800000.0 * sc[1] * x2010 -
    11000000.0 * sc[20] * x1333 + 90000.0 * sc[3] * x2010 +
    24000000.0 * sc[4] * x2010 + 11000000.0 * sc[8] * x2010 + x10246 -
    x1825 * x742 + x1841 * x742 + x2010 * x2168 + x2064 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x2186 + x649) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1060 - x1062 + (x677) * (-x2186 + x649)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1961 - x1962 +
       (-x597) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                  (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
       (-x448) *
         (x1742 - x1787 + (x680) * (-x2186 + x649) +
          (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
          (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                    (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1149 + x646 + (x678) * (-x2186 + x649) +
       (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))) +
    (x685 * x742) *
      (x1742 - x1787 + (x680) * (-x2186 + x649) +
       (x681) * (x1060 - x1062 + (x677) * (-x2186 + x649)) +
       (x682) * (-x1149 + x646 + (x678) * (-x2186 + x649) +
                 (x679) * (x1060 - x1062 + (x677) * (-x2186 + x649))));
  J[250] =
    -60000000.0 * sc[19] * x1676 + 60000000.0 * sc[19] * x1741 +
    1800000.0 * sc[1] * x2011 + sc[20] * x10247 * x1154 -
    60000000.0 * sc[20] * x1304 + 90000.0 * sc[3] * x2011 +
    24000000.0 * sc[4] * x2011 - sc[8] * x10247 * x135 +
    11000000.0 * sc[8] * x2011 + 6.405e+46 * x10256 - 1.093974e+86 * x10317 +
    1.093974e+86 * x139 * x1495 - 6.405e+46 * x1499 * x734 + x1638 -
    1.995e+48 * x1719 - 1.326675e+88 * x1764 * x1878 +
    1.326675e+88 * x1764 * x780 + 1.995e+48 * x1769 + x1830 * x742 -
    x1831 * x742 - x1950 * x6402 + x1951 * x6402 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x2271 + x946) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1064 - x1071 + (x677) * (-x2271 + x946)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1968 - x1969 +
       (-x597) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                  (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
       (-x448) *
         (-x1676 + x1741 + (x680) * (-x2271 + x946) +
          (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
          (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                    (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1037 + x1590 + (x678) * (-x2271 + x946) +
       (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))) +
    (x685 * x742) *
      (-x1676 + x1741 + (x680) * (-x2271 + x946) +
       (x681) * (x1064 - x1071 + (x677) * (-x2271 + x946)) +
       (x682) * (-x1037 + x1590 + (x678) * (-x2271 + x946) +
                 (x679) * (x1064 - x1071 + (x677) * (-x2271 + x946))));
  J[273] =
    6.26e+26 * refC * x2127 * x774 * x9 * exp(x346 + x365) -
    60000000.0 * sc[19] * x1749 + 60000000.0 * sc[19] * x1814 +
    1800000.0 * sc[1] * x774 + 90000.0 * sc[3] * x774 +
    24000000.0 * sc[4] * x774 + 11000000.0 * sc[8] * x774 + x10246 -
    x1877 * x742 + x2064 + x742 * x896 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1480 - x2323) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1072 - x1073 + (x677) * (x1480 - x2323)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1970 + x755 +
       (-x597) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                  (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
       (-x448) *
         (-x1749 + x1814 + (x680) * (x1480 - x2323) +
          (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
          (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                    (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))))) +
    (60000000.0 * sc[19] * x682) *
      (-x1047 + x963 + (x678) * (x1480 - x2323) +
       (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))) +
    (x685 * x742) *
      (-x1749 + x1814 + (x680) * (x1480 - x2323) +
       (x681) * (x1072 - x1073 + (x677) * (x1480 - x2323)) +
       (x682) * (-x1047 + x963 + (x678) * (x1480 - x2323) +
                 (x679) * (x1072 - x1073 + (x677) * (x1480 - x2323))));
  J[296] =
    -60000000.0 * sc[19] * x1818 + 60000000.0 * sc[19] * x1819 +
    1800000.0 * sc[1] * x1554 + 90000.0 * sc[3] * x1554 +
    24000000.0 * sc[4] * x1554 + 11000000.0 * sc[8] * x1554 + x1554 * x2168 +
    x1886 * x742 - x1897 * x742 + x351 + x877 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x1453 - x2360) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1075 - x671 + (x677) * (x1453 - x2360)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1971 - x1979 +
       (-x597) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                  (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
       (-x448) *
         (-x1818 + x1819 + (x680) * (x1453 - x2360) +
          (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
          (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                    (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))))) +
    (60000000.0 * sc[19] * x682) *
      (x1640 - x1659 + (x678) * (x1453 - x2360) +
       (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))) +
    (x685 * x742) *
      (-x1818 + x1819 + (x680) * (x1453 - x2360) +
       (x681) * (x1075 - x671 + (x677) * (x1453 - x2360)) +
       (x682) * (x1640 - x1659 + (x678) * (x1453 - x2360) +
                 (x679) * (x1075 - x671 + (x677) * (x1453 - x2360))));
  J[319] =
    -60000000.0 * sc[19] * x1821 + 60000000.0 * sc[19] * x1823 + x1860 * x742 -
    x1862 * x742 + x253 + x868 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1035 + x809) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1078 - x1080 + (x677) * (-x1035 + x809)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1884 + x1987 +
       (-x597) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                  (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
       (-x448) *
         (-x1821 + x1823 + (x680) * (-x1035 + x809) +
          (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
          (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                    (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))))) +
    (60000000.0 * sc[19] * x682) *
      (x1663 - x1664 + (x678) * (-x1035 + x809) +
       (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))) +
    (x685 * x742) *
      (-x1821 + x1823 + (x680) * (-x1035 + x809) +
       (x681) * (x1078 - x1080 + (x677) * (-x1035 + x809)) +
       (x682) * (x1663 - x1664 + (x678) * (-x1035 + x809) +
                 (x679) * (x1078 - x1080 + (x677) * (-x1035 + x809))));
  J[342] =
    -60000000.0 * sc[19] * x1828 + 60000000.0 * sc[19] * x1834 +
    1800000.0 * sc[1] * x374 + 90000.0 * sc[3] * x374 +
    24000000.0 * sc[4] * x374 + 11000000.0 * sc[8] * x374 + sc[8] * x6213 -
    x1862 * x742 + x1872 * x742 + x2168 * x374 + x351 + x868 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1118 + x1205) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1884 + x1947 +
       (-x597) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                  (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
       (-x448) *
         (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
          (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
          (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                    (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))))) +
    (60000000.0 * sc[19] * x682) *
      (x1670 - x1679 + (x678) * (-x1118 + x1205) +
       (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))) +
    (x685 * x742) *
      (-x1828 + x1834 + (x680) * (-x1118 + x1205) +
       (x681) * (x1083 - x1084 + (x677) * (-x1118 + x1205)) +
       (x682) * (x1670 - x1679 + (x678) * (-x1118 + x1205) +
                 (x679) * (x1083 - x1084 + (x677) * (-x1118 + x1205))));
  J[365] =
    -60000000.0 * sc[19] * x1835 + 60000000.0 * sc[19] * x1836 +
    1800000.0 * sc[1] * x1716 + 90000.0 * sc[3] * x1716 +
    24000000.0 * sc[4] * x1716 + 11000000.0 * sc[8] * x1716 - x1925 * x742 +
    x367 + x502 * x742 + x868 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (x216 - x894) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1085 - x1086 + (x677) * (x216 - x894)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (x1837 - x1882 +
       (-x597) * (x1680 - x1688 + (x678) * (x216 - x894) +
                  (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
       (-x448) *
         (-x1835 + x1836 + (x680) * (x216 - x894) +
          (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
          (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                    (x679) * (x1085 - x1086 + (x677) * (x216 - x894))))) +
    (60000000.0 * sc[19] * x682) *
      (x1680 - x1688 + (x678) * (x216 - x894) +
       (x679) * (x1085 - x1086 + (x677) * (x216 - x894))) +
    (x685 * x742) *
      (-x1835 + x1836 + (x680) * (x216 - x894) +
       (x681) * (x1085 - x1086 + (x677) * (x216 - x894)) +
       (x682) * (x1680 - x1688 + (x678) * (x216 - x894) +
                 (x679) * (x1085 - x1086 + (x677) * (x216 - x894))));
  J[388] =
    60000000.0 * sc[19] * x1815 + x11659 + x1932 * x742 + x253 + x606 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1070 + x955) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1087 - x1088 + (x677) * (-x1070 + x955)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1957 + x731 +
       (-x597) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                  (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
       (-x448) *
         (-x1761 + x1815 + (x680) * (-x1070 + x955) +
          (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
          (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                    (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))))) +
    (60000000.0 * sc[19] * x682) *
      (x1689 - x1707 + (x678) * (-x1070 + x955) +
       (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))) +
    (x685 * x742) *
      (-x1761 + x1815 + (x680) * (-x1070 + x955) +
       (x681) * (x1087 - x1088 + (x677) * (-x1070 + x955)) +
       (x682) * (x1689 - x1707 + (x678) * (-x1070 + x955) +
                 (x679) * (x1087 - x1088 + (x677) * (-x1070 + x955))));
  J[411] =
    60000000.0 * sc[19] * x1817 + 120.0 * sc[1] * x1238 * x516 + x11659 +
    x183 * x742 + x253 + x606 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1668 + x958) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1089 - x1092 + (x677) * (-x1668 + x958)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1957 + x731 +
       (-x597) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                  (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
       (-x448) *
         (-x1761 + x1817 + (x680) * (-x1668 + x958) +
          (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
          (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                    (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))))) +
    (60000000.0 * sc[19] * x682) *
      (x1625 - x1707 + (x678) * (-x1668 + x958) +
       (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))) +
    (x685 * x742) *
      (-x1761 + x1817 + (x680) * (-x1668 + x958) +
       (x681) * (x1089 - x1092 + (x677) * (-x1668 + x958)) +
       (x682) * (x1625 - x1707 + (x678) * (-x1668 + x958) +
                 (x679) * (x1089 - x1092 + (x677) * (-x1668 + x958))));
  J[434] =
    60000000.0 * sc[19] * x1863 + x11659 + x233 * x742 + x253 + x606 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1668 + x1694) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1957 + x1958 +
       (-x597) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                  (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
       (-x448) *
         (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
          (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
          (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                    (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))))) +
    (60000000.0 * sc[19] * x682) *
      (x1018 - x1707 + (x678) * (-x1668 + x1694) +
       (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))) +
    (x685 * x742) *
      (-x1761 + x1863 + (x680) * (-x1668 + x1694) +
       (x681) * (-x1092 + x1141 + (x677) * (-x1668 + x1694)) +
       (x682) * (x1018 - x1707 + (x678) * (-x1668 + x1694) +
                 (x679) * (-x1092 + x1141 + (x677) * (-x1668 + x1694))));
  J[457] =
    sc[0] * x407 - 60000000.0 * sc[19] * x1870 + 60000000.0 * sc[19] * x1873 +
    1.33e+48 * sc[1] * x465 * x729 + sc[4] * x7528 + sc[5] * x9115 +
    2660000.0 * sc[6] + sc[7] * x9990 + sc[9] * x10581 + x1946 * x742 + x253 +
    60000000.0 * x578 + x606 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1009 + x1057) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1957 + x655 +
       (-x597) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                  (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
       (-x448) *
         (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
          (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
          (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                    (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))))) +
    (60000000.0 * sc[19] * x682) *
      (x1729 - x262 + (x678) * (-x1009 + x1057) +
       (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))) +
    (x685 * x742) *
      (-x1870 + x1873 + (x680) * (-x1009 + x1057) +
       (x681) * (x1161 - x1167 + (x677) * (-x1009 + x1057)) +
       (x682) * (x1729 - x262 + (x678) * (-x1009 + x1057) +
                 (x679) * (x1161 - x1167 + (x677) * (-x1009 + x1057))));
  J[480] =
    -1800000.0 * sc[0] * x1336 - 60000000.0 * sc[10] * x1304 +
    60000000.0 * sc[19] * x1874 + 1800000.0 * sc[1] * x1339 +
    90000.0 * sc[3] * x1339 - sc[3] * x8246 + 24000000.0 * sc[4] * x1339 -
    sc[4] * x9017 - 24000000.0 * sc[5] * x1323 - 90000.0 * sc[6] * x1326 -
    sc[8] * x10536 + 11000000.0 * sc[8] * x1339 - 11000000.0 * sc[9] * x1333 -
    x10187 - 1.33e+48 * x1079 * x843 - x1154 + x11659 + x1949 * x742 + x348 +
    x606 + x8130 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x1668 + x784) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1957 + x1966 +
       (-x597) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                  (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
       (-x448) *
         (-x1761 + x1874 + (x680) * (-x1668 + x784) +
          (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
          (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                    (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))))) +
    (60000000.0 * sc[19] * x682) *
      (x1675 - x1707 + (x678) * (-x1668 + x784) +
       (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))) +
    (x685 * x742) *
      (-x1761 + x1874 + (x680) * (-x1668 + x784) +
       (x681) * (-x1092 + x1443 + (x677) * (-x1668 + x784)) +
       (x682) * (x1675 - x1707 + (x678) * (-x1668 + x784) +
                 (x679) * (-x1092 + x1443 + (x677) * (-x1668 + x784))));
  J[503] =
    60000000.0 * sc[19] * x1876 + x11659 + x1788 * x742 + x253 + x606 +
    (60000000.0 * sc[19] * x680 - x683 * x742) * (-x647 + x669) +
    (60000000.0 * sc[19] * x681 + x684 * x742) *
      (x1444 - x1445 + (x677) * (-x647 + x669)) +
    (-1800000.0 * sc[1] * x376 - 90000.0 * sc[3] * x376 -
     24000000.0 * sc[4] * x376 - 11000000.0 * sc[8] * x376 - x2168 * x376) *
      (-x1957 + x731 +
       (-x597) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                  (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
       (-x448) *
         (-x1761 + x1876 + (x680) * (-x647 + x669) +
          (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
          (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                    (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))))) +
    (60000000.0 * sc[19] * x682) *
      (x1752 - x1757 + (x678) * (-x647 + x669) +
       (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))) +
    (x685 * x742) *
      (-x1761 + x1876 + (x680) * (-x647 + x669) +
       (x681) * (x1444 - x1445 + (x677) * (-x647 + x669)) +
       (x682) * (x1752 - x1757 + (x678) * (-x647 + x669) +
                 (x679) * (x1444 - x1445 + (x677) * (-x647 + x669))));
  J[21] = 0;
  J[44] = 0;
  J[67] = 0;
  J[90] = 0;
  J[113] = 0;
  J[136] = 0;
  J[159] = 0;
  J[182] = 0;
  J[205] = 0;
  J[228] = 0;
  J[251] = 0;
  J[274] = 0;
  J[297] = 0;
  J[320] = 0;
  J[343] = 0;
  J[366] = 0;
  J[389] = 0;
  J[412] = 0;
  J[435] = 0;
  J[458] = 0;
  J[481] = 0;
  J[504] = 0;

  for (int k = 0; k < 22; k++) {
    J[506 + k] = (wdot_pert1[k] - wdot[k]) / (pertT);
  }
  amrex::Real c_R[22], dcRdT[22], e_RT[22];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 22; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[506 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 22; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 22; ++m) {
      dehmixdc += eh_RT[m] * J[k * 23 + m];
    }
    J[k * 23 + 22] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[528] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 90;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 9966;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 22;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 2.01600000E+00;
  WT[1] = 1.00800000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 3.19980000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 1.80150000E+01;
  WT[6] = 3.30060000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 1.50350000E+01;
  WT[9] = 1.60430000E+01;
  WT[10] = 2.80100000E+01;
  WT[11] = 4.40090000E+01;
  WT[12] = 3.00260000E+01;
  WT[13] = 2.60380000E+01;
  WT[14] = 2.80540000E+01;
  WT[15] = 3.00700000E+01;
  WT[16] = 4.10290000E+01;
  WT[17] = 4.20370000E+01;
  WT[18] = 4.40530000E+01;
  WT[19] = 4.10730000E+01;
  WT[20] = 4.20810000E+01;
  WT[21] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 3.80000000E+01;
  EPS[1] = 1.45000000E+02;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 1.07400000E+02;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 5.72400000E+02;
  EPS[6] = 1.07400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.44000000E+02;
  EPS[9] = 1.41400000E+02;
  EPS[10] = 9.81000000E+01;
  EPS[11] = 2.44000000E+02;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 2.09000000E+02;
  EPS[14] = 2.80800000E+02;
  EPS[15] = 2.52300000E+02;
  EPS[16] = 1.50000000E+02;
  EPS[17] = 4.36000000E+02;
  EPS[18] = 4.36000000E+02;
  EPS[19] = 2.66800000E+02;
  EPS[20] = 2.66800000E+02;
  EPS[21] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 2.92000000E+00;
  SIG[1] = 2.05000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 3.45800000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 2.60500000E+00;
  SIG[6] = 3.45800000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.80000000E+00;
  SIG[9] = 3.74600000E+00;
  SIG[10] = 3.65000000E+00;
  SIG[11] = 3.76300000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 4.10000000E+00;
  SIG[14] = 3.97100000E+00;
  SIG[15] = 4.30200000E+00;
  SIG[16] = 2.50000000E+00;
  SIG[17] = 3.97000000E+00;
  SIG[18] = 3.97000000E+00;
  SIG[19] = 4.98200000E+00;
  SIG[20] = 4.98200000E+00;
  SIG[21] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 1.84400000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 7.90000000E-01;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 1.60000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 2.60000000E+00;
  POL[10] = 1.95000000E+00;
  POL[11] = 2.65000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 2.80000000E+02;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 3.80000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 4.00000000E+00;
  ZROT[6] = 1.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 0.00000000E+00;
  ZROT[9] = 1.30000000E+01;
  ZROT[10] = 1.80000000E+00;
  ZROT[11] = 2.10000000E+00;
  ZROT[12] = 2.00000000E+00;
  ZROT[13] = 2.50000000E+00;
  ZROT[14] = 1.50000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 1.00000000E+00;
  ZROT[17] = 2.00000000E+00;
  ZROT[18] = 2.00000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.00000000E+00;
  ZROT[21] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 1;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 1;
  NLIN[11] = 1;
  NLIN[12] = 2;
  NLIN[13] = 1;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.38347555E+01;
  COFETA[1] = 1.00106621E+00;
  COFETA[2] = -4.98105694E-02;
  COFETA[3] = 2.31450475E-03;
  COFETA[4] = -2.04078253E+01;
  COFETA[5] = 3.65436395E+00;
  COFETA[6] = -3.98339635E-01;
  COFETA[7] = 1.75883009E-02;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.71618439E+01;
  COFETA[13] = 2.68036374E+00;
  COFETA[14] = -2.72570227E-01;
  COFETA[15] = 1.21650964E-02;
  COFETA[16] = -1.50620876E+01;
  COFETA[17] = 1.92606504E+00;
  COFETA[18] = -1.73487476E-01;
  COFETA[19] = 7.82572931E-03;
  COFETA[20] = -1.05420930E+01;
  COFETA[21] = -1.37777266E+00;
  COFETA[22] = 4.20502561E-01;
  COFETA[23] = -2.40627344E-02;
  COFETA[24] = -1.71463359E+01;
  COFETA[25] = 2.68036374E+00;
  COFETA[26] = -2.72570227E-01;
  COFETA[27] = 1.21650964E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -2.02316522E+01;
  COFETA[33] = 3.63241793E+00;
  COFETA[34] = -3.95581049E-01;
  COFETA[35] = 1.74725495E-02;
  COFETA[36] = -2.00094678E+01;
  COFETA[37] = 3.57220167E+00;
  COFETA[38] = -3.87936446E-01;
  COFETA[39] = 1.71483254E-02;
  COFETA[40] = -1.66188439E+01;
  COFETA[41] = 2.40307799E+00;
  COFETA[42] = -2.36167638E-01;
  COFETA[43] = 1.05714061E-02;
  COFETA[44] = -2.40015087E+01;
  COFETA[45] = 5.14359547E+00;
  COFETA[46] = -5.74269731E-01;
  COFETA[47] = 2.44937679E-02;
  COFETA[48] = -1.98330663E+01;
  COFETA[49] = 2.69480162E+00;
  COFETA[50] = -1.65880845E-01;
  COFETA[51] = 3.14504769E-03;
  COFETA[52] = -2.33666497E+01;
  COFETA[53] = 4.80350223E+00;
  COFETA[54] = -5.38341336E-01;
  COFETA[55] = 2.32747213E-02;
  COFETA[56] = -2.50655480E+01;
  COFETA[57] = 5.33982977E+00;
  COFETA[58] = -5.89982992E-01;
  COFETA[59] = 2.47780650E-02;
  COFETA[60] = -2.46410962E+01;
  COFETA[61] = 5.19497183E+00;
  COFETA[62] = -5.78827339E-01;
  COFETA[63] = 2.46050921E-02;
  COFETA[64] = -1.92183918E+01;
  COFETA[65] = 3.75164499E+00;
  COFETA[66] = -4.10390993E-01;
  COFETA[67] = 1.80861665E-02;
  COFETA[68] = -2.23395728E+01;
  COFETA[69] = 3.86433912E+00;
  COFETA[70] = -3.41553983E-01;
  COFETA[71] = 1.17083447E-02;
  COFETA[72] = -2.23161511E+01;
  COFETA[73] = 3.86433912E+00;
  COFETA[74] = -3.41553983E-01;
  COFETA[75] = 1.17083447E-02;
  COFETA[76] = -2.51527894E+01;
  COFETA[77] = 5.30723075E+00;
  COFETA[78] = -5.89742369E-01;
  COFETA[79] = 2.49294033E-02;
  COFETA[80] = -2.51406667E+01;
  COFETA[81] = 5.30723075E+00;
  COFETA[82] = -5.89742369E-01;
  COFETA[83] = 2.49294033E-02;
  COFETA[84] = -1.65695492E+01;
  COFETA[85] = 2.39056562E+00;
  COFETA[86] = -2.34558144E-01;
  COFETA[87] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 9.24082480E+00;
  COFLAM[1] = -4.69567526E-01;
  COFLAM[2] = 1.15980102E-01;
  COFLAM[3] = -2.61033156E-03;
  COFLAM[4] = -8.57944636E-01;
  COFLAM[5] = 3.65436395E+00;
  COFLAM[6] = -3.98339635E-01;
  COFLAM[7] = 1.75883009E-02;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = -1.93717634E+00;
  COFLAM[13] = 2.89110257E+00;
  COFLAM[14] = -2.71096988E-01;
  COFLAM[15] = 1.15344939E-02;
  COFLAM[16] = 1.41666231E+01;
  COFLAM[17] = -3.24630273E+00;
  COFLAM[18] = 5.33877875E-01;
  COFLAM[19] = -2.32905027E-02;
  COFLAM[20] = 2.33729836E+01;
  COFLAM[21] = -8.96536178E+00;
  COFLAM[22] = 1.52828630E+00;
  COFLAM[23] = -7.58551616E-02;
  COFLAM[24] = -1.12959874E+00;
  COFLAM[25] = 2.34014328E+00;
  COFLAM[26] = -1.63245076E-01;
  COFLAM[27] = 5.80319843E-03;
  COFLAM[28] = 8.84006318E-01;
  COFLAM[29] = 1.31525455E+00;
  COFLAM[30] = 1.91773906E-02;
  COFLAM[31] = -4.41642314E-03;
  COFLAM[32] = 1.39937895E+01;
  COFLAM[33] = -4.64256403E+00;
  COFLAM[34] = 9.07728510E-01;
  COFLAM[35] = -4.77274380E-02;
  COFLAM[36] = 1.33091614E+01;
  COFLAM[37] = -4.96140250E+00;
  COFLAM[38] = 1.03295495E+00;
  COFLAM[39] = -5.63420011E-02;
  COFLAM[40] = 1.18777275E+01;
  COFLAM[41] = -3.15463597E+00;
  COFLAM[42] = 6.01972754E-01;
  COFLAM[43] = -3.03211015E-02;
  COFLAM[44] = -1.13649201E+01;
  COFLAM[45] = 5.88177354E+00;
  COFLAM[46] = -5.68651792E-01;
  COFLAM[47] = 2.03561484E-02;
  COFLAM[48] = 5.39305623E+00;
  COFLAM[49] = -2.39312259E+00;
  COFLAM[50] = 7.39585006E-01;
  COFLAM[51] = -4.58435469E-02;
  COFLAM[52] = -7.70164041E+00;
  COFLAM[53] = 4.56884430E+00;
  COFLAM[54] = -4.04747578E-01;
  COFLAM[55] = 1.40841066E-02;
  COFLAM[56] = -1.46152767E+01;
  COFLAM[57] = 6.36251222E+00;
  COFLAM[58] = -5.03831917E-01;
  COFLAM[59] = 1.26120967E-02;
  COFLAM[60] = -1.09902158E+01;
  COFLAM[61] = 4.70647555E+00;
  COFLAM[62] = -2.52272322E-01;
  COFLAM[63] = 1.75186734E-04;
  COFLAM[64] = -5.96382011E+00;
  COFLAM[65] = 4.39355990E+00;
  COFLAM[66] = -3.97598235E-01;
  COFLAM[67] = 1.39749618E-02;
  COFLAM[68] = -8.32870491E+00;
  COFLAM[69] = 3.97067241E+00;
  COFLAM[70] = -2.21252281E-01;
  COFLAM[71] = 1.47870386E-03;
  COFLAM[72] = -9.88396235E+00;
  COFLAM[73] = 4.13890943E+00;
  COFLAM[74] = -1.74918796E-01;
  COFLAM[75] = -3.28392968E-03;
  COFLAM[76] = -2.14189910E+01;
  COFLAM[77] = 9.40840962E+00;
  COFLAM[78] = -9.66247319E-01;
  COFLAM[79] = 3.55085303E-02;
  COFLAM[80] = -1.70514626E+01;
  COFLAM[81] = 7.35906672E+00;
  COFLAM[82] = -6.52820712E-01;
  COFLAM[83] = 1.99982085E-02;
  COFLAM[84] = 1.29305954E+01;
  COFLAM[85] = -3.52816965E+00;
  COFLAM[86] = 6.45498434E-01;
  COFLAM[87] = -3.19375023E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.03270769E+01;
  COFD[1] = 2.19285409E+00;
  COFD[2] = -7.54492786E-02;
  COFD[3] = 3.51398213E-03;
  COFD[4] = -1.14366544E+01;
  COFD[5] = 2.78323501E+00;
  COFD[6] = -1.51214064E-01;
  COFD[7] = 6.75150012E-03;
  COFD[8] = -1.09595844E+01;
  COFD[9] = 2.30836460E+00;
  COFD[10] = -8.76339315E-02;
  COFD[11] = 3.90878445E-03;
  COFD[12] = -1.18989101E+01;
  COFD[13] = 2.57507000E+00;
  COFD[14] = -1.24033737E-01;
  COFD[15] = 5.56694959E-03;
  COFD[16] = -1.09629118E+01;
  COFD[17] = 2.30836460E+00;
  COFD[18] = -8.76339315E-02;
  COFD[19] = 3.90878445E-03;
  COFD[20] = -1.71983144E+01;
  COFD[21] = 4.63881440E+00;
  COFD[22] = -3.86139677E-01;
  COFD[23] = 1.66955099E-02;
  COFD[24] = -1.18998160E+01;
  COFD[25] = 2.57507000E+00;
  COFD[26] = -1.24033737E-01;
  COFD[27] = 5.56694959E-03;
  COFD[28] = -1.19006697E+01;
  COFD[29] = 2.57507000E+00;
  COFD[30] = -1.24033737E-01;
  COFD[31] = 5.56694959E-03;
  COFD[32] = -1.25141403E+01;
  COFD[33] = 2.77873601E+00;
  COFD[34] = -1.50637360E-01;
  COFD[35] = 6.72684281E-03;
  COFD[36] = -1.24693714E+01;
  COFD[37] = 2.76686648E+00;
  COFD[38] = -1.49120141E-01;
  COFD[39] = 6.66220432E-03;
  COFD[40] = -1.17159884E+01;
  COFD[41] = 2.48123210E+00;
  COFD[42] = -1.11322604E-01;
  COFD[43] = 4.99282389E-03;
  COFD[44] = -1.37794466E+01;
  COFD[45] = 3.23973858E+00;
  COFD[46] = -2.09989036E-01;
  COFD[47] = 9.27667906E-03;
  COFD[48] = -1.60528433E+01;
  COFD[49] = 4.11188603E+00;
  COFD[50] = -3.21540884E-01;
  COFD[51] = 1.40482564E-02;
  COFD[52] = -1.34709956E+01;
  COFD[53] = 3.09379603E+00;
  COFD[54] = -1.91268635E-01;
  COFD[55] = 8.47480224E-03;
  COFD[56] = -1.42229344E+01;
  COFD[57] = 3.38669384E+00;
  COFD[58] = -2.28784122E-01;
  COFD[59] = 1.00790953E-02;
  COFD[60] = -1.39924933E+01;
  COFD[61] = 3.26384506E+00;
  COFD[62] = -2.12947087E-01;
  COFD[63] = 9.39743888E-03;
  COFD[64] = -1.22004476E+01;
  COFD[65] = 2.80725489E+00;
  COFD[66] = -1.54291406E-01;
  COFD[67] = 6.88290911E-03;
  COFD[68] = -1.57035004E+01;
  COFD[69] = 3.93614244E+00;
  COFD[70] = -2.99111497E-01;
  COFD[71] = 1.30888229E-02;
  COFD[72] = -1.57045486E+01;
  COFD[73] = 3.93614244E+00;
  COFD[74] = -2.99111497E-01;
  COFD[75] = 1.30888229E-02;
  COFD[76] = -1.43129867E+01;
  COFD[77] = 3.31177824E+00;
  COFD[78] = -2.18945280E-01;
  COFD[79] = 9.64764419E-03;
  COFD[80] = -1.43135474E+01;
  COFD[81] = 3.31177824E+00;
  COFD[82] = -2.18945280E-01;
  COFD[83] = 9.64764419E-03;
  COFD[84] = -1.16906458E+01;
  COFD[85] = 2.47469981E+00;
  COFD[86] = -1.10436257E-01;
  COFD[87] = 4.95273813E-03;
  COFD[88] = -1.14366544E+01;
  COFD[89] = 2.78323501E+00;
  COFD[90] = -1.51214064E-01;
  COFD[91] = 6.75150012E-03;
  COFD[92] = -1.47968875E+01;
  COFD[93] = 4.23027636E+00;
  COFD[94] = -3.36139991E-01;
  COFD[95] = 1.46507621E-02;
  COFD[96] = -1.34230419E+01;
  COFD[97] = 3.48624238E+00;
  COFD[98] = -2.41554467E-01;
  COFD[99] = 1.06263545E-02;
  COFD[100] = -1.46550238E+01;
  COFD[101] = 3.83606243E+00;
  COFD[102] = -2.86076532E-01;
  COFD[103] = 1.25205829E-02;
  COFD[104] = -1.34248014E+01;
  COFD[105] = 3.48624238E+00;
  COFD[106] = -2.41554467E-01;
  COFD[107] = 1.06263545E-02;
  COFD[108] = -1.95739720E+01;
  COFD[109] = 5.61113230E+00;
  COFD[110] = -4.90190187E-01;
  COFD[111] = 2.03260675E-02;
  COFD[112] = -1.46554904E+01;
  COFD[113] = 3.83606243E+00;
  COFD[114] = -2.86076532E-01;
  COFD[115] = 1.25205829E-02;
  COFD[116] = -1.46559297E+01;
  COFD[117] = 3.83606243E+00;
  COFD[118] = -2.86076532E-01;
  COFD[119] = 1.25205829E-02;
  COFD[120] = -1.57995045E+01;
  COFD[121] = 4.22225052E+00;
  COFD[122] = -3.35156428E-01;
  COFD[123] = 1.46104855E-02;
  COFD[124] = -1.57199190E+01;
  COFD[125] = 4.19936335E+00;
  COFD[126] = -3.32311009E-01;
  COFD[127] = 1.44921003E-02;
  COFD[128] = -1.43151328E+01;
  COFD[129] = 3.68038508E+00;
  COFD[130] = -2.65779346E-01;
  COFD[131] = 1.16360771E-02;
  COFD[132] = -1.76147183E+01;
  COFD[133] = 4.86049500E+00;
  COFD[134] = -4.12200578E-01;
  COFD[135] = 1.77160971E-02;
  COFD[136] = -1.97550243E+01;
  COFD[137] = 5.56931926E+00;
  COFD[138] = -4.89105511E-01;
  COFD[139] = 2.04493129E-02;
  COFD[140] = -1.72232379E+01;
  COFD[141] = 4.69060745E+00;
  COFD[142] = -3.92369888E-01;
  COFD[143] = 1.69459661E-02;
  COFD[144] = -1.82252070E+01;
  COFD[145] = 5.05237312E+00;
  COFD[146] = -4.35182396E-01;
  COFD[147] = 1.86363074E-02;
  COFD[148] = -1.79345106E+01;
  COFD[149] = 4.91373893E+00;
  COFD[150] = -4.18747629E-01;
  COFD[151] = 1.79856610E-02;
  COFD[152] = -1.54460977E+01;
  COFD[153] = 4.26819983E+00;
  COFD[154] = -3.40766379E-01;
  COFD[155] = 1.48393361E-02;
  COFD[156] = -1.94688845E+01;
  COFD[157] = 5.43830787E+00;
  COFD[158] = -4.75472880E-01;
  COFD[159] = 1.99909996E-02;
  COFD[160] = -1.94694206E+01;
  COFD[161] = 5.43830787E+00;
  COFD[162] = -4.75472880E-01;
  COFD[163] = 1.99909996E-02;
  COFD[164] = -1.83539845E+01;
  COFD[165] = 4.98756925E+00;
  COFD[166] = -4.27526072E-01;
  COFD[167] = 1.83341755E-02;
  COFD[168] = -1.83542714E+01;
  COFD[169] = 4.98756925E+00;
  COFD[170] = -4.27526072E-01;
  COFD[171] = 1.83341755E-02;
  COFD[172] = -1.42894603E+01;
  COFD[173] = 3.67490723E+00;
  COFD[174] = -2.65114792E-01;
  COFD[175] = 1.16092671E-02;
  COFD[176] = -1.09595844E+01;
  COFD[177] = 2.30836460E+00;
  COFD[178] = -8.76339315E-02;
  COFD[179] = 3.90878445E-03;
  COFD[180] = -1.34230419E+01;
  COFD[181] = 3.48624238E+00;
  COFD[182] = -2.41554467E-01;
  COFD[183] = 1.06263545E-02;
  COFD[184] = -1.32093517E+01;
  COFD[185] = 2.90778936E+00;
  COFD[186] = -1.67388544E-01;
  COFD[187] = 7.45220609E-03;
  COFD[188] = -1.43139120E+01;
  COFD[189] = 3.17651319E+00;
  COFD[190] = -2.02028974E-01;
  COFD[191] = 8.94232502E-03;
  COFD[192] = -1.32243932E+01;
  COFD[193] = 2.90778936E+00;
  COFD[194] = -1.67388544E-01;
  COFD[195] = 7.45220609E-03;
  COFD[196] = -1.94093476E+01;
  COFD[197] = 5.16013126E+00;
  COFD[198] = -4.46824543E-01;
  COFD[199] = 1.90464887E-02;
  COFD[200] = -1.43190281E+01;
  COFD[201] = 3.17651319E+00;
  COFD[202] = -2.02028974E-01;
  COFD[203] = 8.94232502E-03;
  COFD[204] = -1.43238892E+01;
  COFD[205] = 3.17651319E+00;
  COFD[206] = -2.02028974E-01;
  COFD[207] = 8.94232502E-03;
  COFD[208] = -1.50766073E+01;
  COFD[209] = 3.47945612E+00;
  COFD[210] = -2.40703722E-01;
  COFD[211] = 1.05907441E-02;
  COFD[212] = -1.50270285E+01;
  COFD[213] = 3.46140064E+00;
  COFD[214] = -2.38440092E-01;
  COFD[215] = 1.04960087E-02;
  COFD[216] = -1.40998907E+01;
  COFD[217] = 3.08120012E+00;
  COFD[218] = -1.89629903E-01;
  COFD[219] = 8.40361952E-03;
  COFD[220] = -1.70534750E+01;
  COFD[221] = 4.14240922E+00;
  COFD[222] = -3.25239774E-01;
  COFD[223] = 1.41980687E-02;
  COFD[224] = -1.94373032E+01;
  COFD[225] = 5.02567894E+00;
  COFD[226] = -4.32045169E-01;
  COFD[227] = 1.85132214E-02;
  COFD[228] = -1.65488277E+01;
  COFD[229] = 3.95035840E+00;
  COFD[230] = -3.00959418E-01;
  COFD[231] = 1.31692593E-02;
  COFD[232] = -1.74792034E+01;
  COFD[233] = 4.29676909E+00;
  COFD[234] = -3.44085306E-01;
  COFD[235] = 1.49671135E-02;
  COFD[236] = -1.72556425E+01;
  COFD[237] = 4.17889917E+00;
  COFD[238] = -3.29752510E-01;
  COFD[239] = 1.43850275E-02;
  COFD[240] = -1.49500258E+01;
  COFD[241] = 3.52327209E+00;
  COFD[242] = -2.46286208E-01;
  COFD[243] = 1.08285963E-02;
  COFD[244] = -1.90883170E+01;
  COFD[245] = 4.84384483E+00;
  COFD[246] = -4.10265575E-01;
  COFD[247] = 1.76414287E-02;
  COFD[248] = -1.90946650E+01;
  COFD[249] = 4.84384483E+00;
  COFD[250] = -4.10265575E-01;
  COFD[251] = 1.76414287E-02;
  COFD[252] = -1.76774947E+01;
  COFD[253] = 4.24719726E+00;
  COFD[254] = -3.38206061E-01;
  COFD[255] = 1.47350654E-02;
  COFD[256] = -1.76808635E+01;
  COFD[257] = 4.24719726E+00;
  COFD[258] = -3.38206061E-01;
  COFD[259] = 1.47350654E-02;
  COFD[260] = -1.40756909E+01;
  COFD[261] = 3.07549274E+00;
  COFD[262] = -1.88889344E-01;
  COFD[263] = 8.37152866E-03;
  COFD[264] = -1.18989101E+01;
  COFD[265] = 2.57507000E+00;
  COFD[266] = -1.24033737E-01;
  COFD[267] = 5.56694959E-03;
  COFD[268] = -1.46550238E+01;
  COFD[269] = 3.83606243E+00;
  COFD[270] = -2.86076532E-01;
  COFD[271] = 1.25205829E-02;
  COFD[272] = -1.43139120E+01;
  COFD[273] = 3.17651319E+00;
  COFD[274] = -2.02028974E-01;
  COFD[275] = 8.94232502E-03;
  COFD[276] = -1.55511233E+01;
  COFD[277] = 3.48070094E+00;
  COFD[278] = -2.40859499E-01;
  COFD[279] = 1.05972514E-02;
  COFD[280] = -1.43340695E+01;
  COFD[281] = 3.17651319E+00;
  COFD[282] = -2.02028974E-01;
  COFD[283] = 8.94232502E-03;
  COFD[284] = -2.12652444E+01;
  COFD[285] = 5.59961822E+00;
  COFD[286] = -4.91624856E-01;
  COFD[287] = 2.05035546E-02;
  COFD[288] = -1.55588172E+01;
  COFD[289] = 3.48070094E+00;
  COFD[290] = -2.40859499E-01;
  COFD[291] = 1.05972514E-02;
  COFD[292] = -1.55661647E+01;
  COFD[293] = 3.48070094E+00;
  COFD[294] = -2.40859499E-01;
  COFD[295] = 1.05972514E-02;
  COFD[296] = -1.63493305E+01;
  COFD[297] = 3.82388595E+00;
  COFD[298] = -2.84480724E-01;
  COFD[299] = 1.24506311E-02;
  COFD[300] = -1.62724429E+01;
  COFD[301] = 3.79163564E+00;
  COFD[302] = -2.80257365E-01;
  COFD[303] = 1.22656902E-02;
  COFD[304] = -1.52721010E+01;
  COFD[305] = 3.36790500E+00;
  COFD[306] = -2.26321740E-01;
  COFD[307] = 9.97135055E-03;
  COFD[308] = -1.84688303E+01;
  COFD[309] = 4.49330851E+00;
  COFD[310] = -3.68208715E-01;
  COFD[311] = 1.59565402E-02;
  COFD[312] = -2.08293167E+01;
  COFD[313] = 5.35267674E+00;
  COFD[314] = -4.69010505E-01;
  COFD[315] = 1.98979152E-02;
  COFD[316] = -1.78834868E+01;
  COFD[317] = 4.29613154E+00;
  COFD[318] = -3.44012526E-01;
  COFD[319] = 1.49643715E-02;
  COFD[320] = -1.89544717E+01;
  COFD[321] = 4.68595732E+00;
  COFD[322] = -3.91842840E-01;
  COFD[323] = 1.69262542E-02;
  COFD[324] = -1.86424488E+01;
  COFD[325] = 4.53572533E+00;
  COFD[326] = -3.73386925E-01;
  COFD[327] = 1.61678881E-02;
  COFD[328] = -1.64169341E+01;
  COFD[329] = 3.89309916E+00;
  COFD[330] = -2.93528188E-01;
  COFD[331] = 1.28463177E-02;
  COFD[332] = -2.05184780E+01;
  COFD[333] = 5.18417470E+00;
  COFD[334] = -4.49491573E-01;
  COFD[335] = 1.91438508E-02;
  COFD[336] = -2.05284666E+01;
  COFD[337] = 5.18417470E+00;
  COFD[338] = -4.49491573E-01;
  COFD[339] = 1.91438508E-02;
  COFD[340] = -1.91121670E+01;
  COFD[341] = 4.61801405E+00;
  COFD[342] = -3.83535652E-01;
  COFD[343] = 1.65862513E-02;
  COFD[344] = -1.91174394E+01;
  COFD[345] = 4.61801405E+00;
  COFD[346] = -3.83535652E-01;
  COFD[347] = 1.65862513E-02;
  COFD[348] = -1.52414498E+01;
  COFD[349] = 3.35922578E+00;
  COFD[350] = -2.25181399E-01;
  COFD[351] = 9.92132878E-03;
  COFD[352] = -1.09629118E+01;
  COFD[353] = 2.30836460E+00;
  COFD[354] = -8.76339315E-02;
  COFD[355] = 3.90878445E-03;
  COFD[356] = -1.34248014E+01;
  COFD[357] = 3.48624238E+00;
  COFD[358] = -2.41554467E-01;
  COFD[359] = 1.06263545E-02;
  COFD[360] = -1.32243932E+01;
  COFD[361] = 2.90778936E+00;
  COFD[362] = -1.67388544E-01;
  COFD[363] = 7.45220609E-03;
  COFD[364] = -1.43340695E+01;
  COFD[365] = 3.17651319E+00;
  COFD[366] = -2.02028974E-01;
  COFD[367] = 8.94232502E-03;
  COFD[368] = -1.32399011E+01;
  COFD[369] = 2.90778936E+00;
  COFD[370] = -1.67388544E-01;
  COFD[371] = 7.45220609E-03;
  COFD[372] = -1.94252948E+01;
  COFD[373] = 5.16013126E+00;
  COFD[374] = -4.46824543E-01;
  COFD[375] = 1.90464887E-02;
  COFD[376] = -1.43393972E+01;
  COFD[377] = 3.17651319E+00;
  COFD[378] = -2.02028974E-01;
  COFD[379] = 8.94232502E-03;
  COFD[380] = -1.43444614E+01;
  COFD[381] = 3.17651319E+00;
  COFD[382] = -2.02028974E-01;
  COFD[383] = 8.94232502E-03;
  COFD[384] = -1.50911746E+01;
  COFD[385] = 3.47945612E+00;
  COFD[386] = -2.40703722E-01;
  COFD[387] = 1.05907441E-02;
  COFD[388] = -1.50420909E+01;
  COFD[389] = 3.46140064E+00;
  COFD[390] = -2.38440092E-01;
  COFD[391] = 1.04960087E-02;
  COFD[392] = -1.41191170E+01;
  COFD[393] = 3.08120012E+00;
  COFD[394] = -1.89629903E-01;
  COFD[395] = 8.40361952E-03;
  COFD[396] = -1.70756953E+01;
  COFD[397] = 4.14240922E+00;
  COFD[398] = -3.25239774E-01;
  COFD[399] = 1.41980687E-02;
  COFD[400] = -1.94570202E+01;
  COFD[401] = 5.02567894E+00;
  COFD[402] = -4.32045169E-01;
  COFD[403] = 1.85132214E-02;
  COFD[404] = -1.65675292E+01;
  COFD[405] = 3.95035840E+00;
  COFD[406] = -3.00959418E-01;
  COFD[407] = 1.31692593E-02;
  COFD[408] = -1.74984410E+01;
  COFD[409] = 4.29676909E+00;
  COFD[410] = -3.44085306E-01;
  COFD[411] = 1.49671135E-02;
  COFD[412] = -1.72753698E+01;
  COFD[413] = 4.17889917E+00;
  COFD[414] = -3.29752510E-01;
  COFD[415] = 1.43850275E-02;
  COFD[416] = -1.49718147E+01;
  COFD[417] = 3.52327209E+00;
  COFD[418] = -2.46286208E-01;
  COFD[419] = 1.08285963E-02;
  COFD[420] = -1.91102567E+01;
  COFD[421] = 4.84384483E+00;
  COFD[422] = -4.10265575E-01;
  COFD[423] = 1.76414287E-02;
  COFD[424] = -1.91168913E+01;
  COFD[425] = 4.84384483E+00;
  COFD[426] = -4.10265575E-01;
  COFD[427] = 1.76414287E-02;
  COFD[428] = -1.76992903E+01;
  COFD[429] = 4.24719726E+00;
  COFD[430] = -3.38206061E-01;
  COFD[431] = 1.47350654E-02;
  COFD[432] = -1.77028097E+01;
  COFD[433] = 4.24719726E+00;
  COFD[434] = -3.38206061E-01;
  COFD[435] = 1.47350654E-02;
  COFD[436] = -1.40949183E+01;
  COFD[437] = 3.07549274E+00;
  COFD[438] = -1.88889344E-01;
  COFD[439] = 8.37152866E-03;
  COFD[440] = -1.71983144E+01;
  COFD[441] = 4.63881440E+00;
  COFD[442] = -3.86139677E-01;
  COFD[443] = 1.66955099E-02;
  COFD[444] = -1.95739720E+01;
  COFD[445] = 5.61113230E+00;
  COFD[446] = -4.90190187E-01;
  COFD[447] = 2.03260675E-02;
  COFD[448] = -1.94093476E+01;
  COFD[449] = 5.16013126E+00;
  COFD[450] = -4.46824543E-01;
  COFD[451] = 1.90464887E-02;
  COFD[452] = -2.12652444E+01;
  COFD[453] = 5.59961822E+00;
  COFD[454] = -4.91624856E-01;
  COFD[455] = 2.05035546E-02;
  COFD[456] = -1.94252948E+01;
  COFD[457] = 5.16013126E+00;
  COFD[458] = -4.46824543E-01;
  COFD[459] = 1.90464887E-02;
  COFD[460] = -1.19157788E+01;
  COFD[461] = 9.28952533E-01;
  COFD[462] = 2.42107483E-01;
  COFD[463] = -1.59824150E-02;
  COFD[464] = -2.06463656E+01;
  COFD[465] = 5.41688482E+00;
  COFD[466] = -4.73387188E-01;
  COFD[467] = 1.99280175E-02;
  COFD[468] = -2.06516251E+01;
  COFD[469] = 5.41688482E+00;
  COFD[470] = -4.73387188E-01;
  COFD[471] = 1.99280175E-02;
  COFD[472] = -2.12831283E+01;
  COFD[473] = 5.61184117E+00;
  COFD[474] = -4.90532156E-01;
  COFD[475] = 2.03507922E-02;
  COFD[476] = -2.14087360E+01;
  COFD[477] = 5.57281993E+00;
  COFD[478] = -4.76690860E-01;
  COFD[479] = 1.94000702E-02;
  COFD[480] = -2.11388255E+01;
  COFD[481] = 5.55529689E+00;
  COFD[482] = -4.87942530E-01;
  COFD[483] = 2.04249057E-02;
  COFD[484] = -2.07653629E+01;
  COFD[485] = 5.01091988E+00;
  COFD[486] = -3.77985581E-01;
  COFD[487] = 1.40968617E-02;
  COFD[488] = -1.77563175E+01;
  COFD[489] = 3.57475686E+00;
  COFD[490] = -1.56396297E-01;
  COFD[491] = 3.12157721E-03;
  COFD[492] = -2.15095920E+01;
  COFD[493] = 5.46737673E+00;
  COFD[494] = -4.55696085E-01;
  COFD[495] = 1.81982625E-02;
  COFD[496] = -2.08812277E+01;
  COFD[497] = 5.08859217E+00;
  COFD[498] = -3.90525428E-01;
  COFD[499] = 1.47376395E-02;
  COFD[500] = -2.12661812E+01;
  COFD[501] = 5.24930667E+00;
  COFD[502] = -4.17435088E-01;
  COFD[503] = 1.61434424E-02;
  COFD[504] = -2.10440599E+01;
  COFD[505] = 5.59806282E+00;
  COFD[506] = -4.87109535E-01;
  COFD[507] = 2.01370226E-02;
  COFD[508] = -1.87383877E+01;
  COFD[509] = 3.96926341E+00;
  COFD[510] = -2.16412264E-01;
  COFD[511] = 6.06012078E-03;
  COFD[512] = -1.87452995E+01;
  COFD[513] = 3.96926341E+00;
  COFD[514] = -2.16412264E-01;
  COFD[515] = 6.06012078E-03;
  COFD[516] = -2.13847376E+01;
  COFD[517] = 5.17440955E+00;
  COFD[518] = -4.04678430E-01;
  COFD[519] = 1.54706350E-02;
  COFD[520] = -2.13884026E+01;
  COFD[521] = 5.17440955E+00;
  COFD[522] = -4.04678430E-01;
  COFD[523] = 1.54706350E-02;
  COFD[524] = -2.10643264E+01;
  COFD[525] = 5.53614864E+00;
  COFD[526] = -4.86046753E-01;
  COFD[527] = 2.03659193E-02;
  COFD[528] = -1.18998160E+01;
  COFD[529] = 2.57507000E+00;
  COFD[530] = -1.24033737E-01;
  COFD[531] = 5.56694959E-03;
  COFD[532] = -1.46554904E+01;
  COFD[533] = 3.83606243E+00;
  COFD[534] = -2.86076532E-01;
  COFD[535] = 1.25205829E-02;
  COFD[536] = -1.43190281E+01;
  COFD[537] = 3.17651319E+00;
  COFD[538] = -2.02028974E-01;
  COFD[539] = 8.94232502E-03;
  COFD[540] = -1.55588172E+01;
  COFD[541] = 3.48070094E+00;
  COFD[542] = -2.40859499E-01;
  COFD[543] = 1.05972514E-02;
  COFD[544] = -1.43393972E+01;
  COFD[545] = 3.17651319E+00;
  COFD[546] = -2.02028974E-01;
  COFD[547] = 8.94232502E-03;
  COFD[548] = -2.06463656E+01;
  COFD[549] = 5.41688482E+00;
  COFD[550] = -4.73387188E-01;
  COFD[551] = 1.99280175E-02;
  COFD[552] = -1.55666313E+01;
  COFD[553] = 3.48070094E+00;
  COFD[554] = -2.40859499E-01;
  COFD[555] = 1.05972514E-02;
  COFD[556] = -1.55740954E+01;
  COFD[557] = 3.48070094E+00;
  COFD[558] = -2.40859499E-01;
  COFD[559] = 1.05972514E-02;
  COFD[560] = -1.63542358E+01;
  COFD[561] = 3.82388595E+00;
  COFD[562] = -2.84480724E-01;
  COFD[563] = 1.24506311E-02;
  COFD[564] = -1.62775683E+01;
  COFD[565] = 3.79163564E+00;
  COFD[566] = -2.80257365E-01;
  COFD[567] = 1.22656902E-02;
  COFD[568] = -1.52792799E+01;
  COFD[569] = 3.36790500E+00;
  COFD[570] = -2.26321740E-01;
  COFD[571] = 9.97135055E-03;
  COFD[572] = -1.84777509E+01;
  COFD[573] = 4.49330851E+00;
  COFD[574] = -3.68208715E-01;
  COFD[575] = 1.59565402E-02;
  COFD[576] = -2.08367641E+01;
  COFD[577] = 5.35267674E+00;
  COFD[578] = -4.69010505E-01;
  COFD[579] = 1.98979152E-02;
  COFD[580] = -1.78903850E+01;
  COFD[581] = 4.29613154E+00;
  COFD[582] = -3.44012526E-01;
  COFD[583] = 1.49643715E-02;
  COFD[584] = -1.89616566E+01;
  COFD[585] = 4.68595732E+00;
  COFD[586] = -3.91842840E-01;
  COFD[587] = 1.69262542E-02;
  COFD[588] = -1.86499019E+01;
  COFD[589] = 4.53572533E+00;
  COFD[590] = -3.73386925E-01;
  COFD[591] = 1.61678881E-02;
  COFD[592] = -1.64255877E+01;
  COFD[593] = 3.89309916E+00;
  COFD[594] = -2.93528188E-01;
  COFD[595] = 1.28463177E-02;
  COFD[596] = -2.05272244E+01;
  COFD[597] = 5.18417470E+00;
  COFD[598] = -4.49491573E-01;
  COFD[599] = 1.91438508E-02;
  COFD[600] = -2.05373910E+01;
  COFD[601] = 5.18417470E+00;
  COFD[602] = -4.49491573E-01;
  COFD[603] = 1.91438508E-02;
  COFD[604] = -1.91208247E+01;
  COFD[605] = 4.61801405E+00;
  COFD[606] = -3.83535652E-01;
  COFD[607] = 1.65862513E-02;
  COFD[608] = -1.91261897E+01;
  COFD[609] = 4.61801405E+00;
  COFD[610] = -3.83535652E-01;
  COFD[611] = 1.65862513E-02;
  COFD[612] = -1.52486292E+01;
  COFD[613] = 3.35922578E+00;
  COFD[614] = -2.25181399E-01;
  COFD[615] = 9.92132878E-03;
  COFD[616] = -1.19006697E+01;
  COFD[617] = 2.57507000E+00;
  COFD[618] = -1.24033737E-01;
  COFD[619] = 5.56694959E-03;
  COFD[620] = -1.46559297E+01;
  COFD[621] = 3.83606243E+00;
  COFD[622] = -2.86076532E-01;
  COFD[623] = 1.25205829E-02;
  COFD[624] = -1.43238892E+01;
  COFD[625] = 3.17651319E+00;
  COFD[626] = -2.02028974E-01;
  COFD[627] = 8.94232502E-03;
  COFD[628] = -1.55661647E+01;
  COFD[629] = 3.48070094E+00;
  COFD[630] = -2.40859499E-01;
  COFD[631] = 1.05972514E-02;
  COFD[632] = -1.43444614E+01;
  COFD[633] = 3.17651319E+00;
  COFD[634] = -2.02028974E-01;
  COFD[635] = 8.94232502E-03;
  COFD[636] = -2.06516251E+01;
  COFD[637] = 5.41688482E+00;
  COFD[638] = -4.73387188E-01;
  COFD[639] = 1.99280175E-02;
  COFD[640] = -1.55740954E+01;
  COFD[641] = 3.48070094E+00;
  COFD[642] = -2.40859499E-01;
  COFD[643] = 1.05972514E-02;
  COFD[644] = -1.55816727E+01;
  COFD[645] = 3.48070094E+00;
  COFD[646] = -2.40859499E-01;
  COFD[647] = 1.05972514E-02;
  COFD[648] = -1.63588948E+01;
  COFD[649] = 3.82388595E+00;
  COFD[650] = -2.84480724E-01;
  COFD[651] = 1.24506311E-02;
  COFD[652] = -1.62824385E+01;
  COFD[653] = 3.79163564E+00;
  COFD[654] = -2.80257365E-01;
  COFD[655] = 1.22656902E-02;
  COFD[656] = -1.52861287E+01;
  COFD[657] = 3.36790500E+00;
  COFD[658] = -2.26321740E-01;
  COFD[659] = 9.97135055E-03;
  COFD[660] = -1.84862906E+01;
  COFD[661] = 4.49330851E+00;
  COFD[662] = -3.68208715E-01;
  COFD[663] = 1.59565402E-02;
  COFD[664] = -2.08438728E+01;
  COFD[665] = 5.35267674E+00;
  COFD[666] = -4.69010505E-01;
  COFD[667] = 1.98979152E-02;
  COFD[668] = -1.78969625E+01;
  COFD[669] = 4.29613154E+00;
  COFD[670] = -3.44012526E-01;
  COFD[671] = 1.49643715E-02;
  COFD[672] = -1.89685112E+01;
  COFD[673] = 4.68595732E+00;
  COFD[674] = -3.91842840E-01;
  COFD[675] = 1.69262542E-02;
  COFD[676] = -1.86570161E+01;
  COFD[677] = 4.53572533E+00;
  COFD[678] = -3.73386925E-01;
  COFD[679] = 1.61678881E-02;
  COFD[680] = -1.64338675E+01;
  COFD[681] = 3.89309916E+00;
  COFD[682] = -2.93528188E-01;
  COFD[683] = 1.28463177E-02;
  COFD[684] = -2.05355943E+01;
  COFD[685] = 5.18417470E+00;
  COFD[686] = -4.49491573E-01;
  COFD[687] = 1.91438508E-02;
  COFD[688] = -2.05459343E+01;
  COFD[689] = 5.18417470E+00;
  COFD[690] = -4.49491573E-01;
  COFD[691] = 1.91438508E-02;
  COFD[692] = -1.91291085E+01;
  COFD[693] = 4.61801405E+00;
  COFD[694] = -3.83535652E-01;
  COFD[695] = 1.65862513E-02;
  COFD[696] = -1.91345636E+01;
  COFD[697] = 4.61801405E+00;
  COFD[698] = -3.83535652E-01;
  COFD[699] = 1.65862513E-02;
  COFD[700] = -1.52554785E+01;
  COFD[701] = 3.35922578E+00;
  COFD[702] = -2.25181399E-01;
  COFD[703] = 9.92132878E-03;
  COFD[704] = -1.25141403E+01;
  COFD[705] = 2.77873601E+00;
  COFD[706] = -1.50637360E-01;
  COFD[707] = 6.72684281E-03;
  COFD[708] = -1.57995045E+01;
  COFD[709] = 4.22225052E+00;
  COFD[710] = -3.35156428E-01;
  COFD[711] = 1.46104855E-02;
  COFD[712] = -1.50766073E+01;
  COFD[713] = 3.47945612E+00;
  COFD[714] = -2.40703722E-01;
  COFD[715] = 1.05907441E-02;
  COFD[716] = -1.63493305E+01;
  COFD[717] = 3.82388595E+00;
  COFD[718] = -2.84480724E-01;
  COFD[719] = 1.24506311E-02;
  COFD[720] = -1.50911746E+01;
  COFD[721] = 3.47945612E+00;
  COFD[722] = -2.40703722E-01;
  COFD[723] = 1.05907441E-02;
  COFD[724] = -2.12831283E+01;
  COFD[725] = 5.61184117E+00;
  COFD[726] = -4.90532156E-01;
  COFD[727] = 2.03507922E-02;
  COFD[728] = -1.63542358E+01;
  COFD[729] = 3.82388595E+00;
  COFD[730] = -2.84480724E-01;
  COFD[731] = 1.24506311E-02;
  COFD[732] = -1.63588948E+01;
  COFD[733] = 3.82388595E+00;
  COFD[734] = -2.84480724E-01;
  COFD[735] = 1.24506311E-02;
  COFD[736] = -1.73374523E+01;
  COFD[737] = 4.21416723E+00;
  COFD[738] = -3.34163932E-01;
  COFD[739] = 1.45697432E-02;
  COFD[740] = -1.72738845E+01;
  COFD[741] = 4.19029808E+00;
  COFD[742] = -3.31177076E-01;
  COFD[743] = 1.44446234E-02;
  COFD[744] = -1.59862997E+01;
  COFD[745] = 3.67388294E+00;
  COFD[746] = -2.64990709E-01;
  COFD[747] = 1.16042706E-02;
  COFD[748] = -1.93276406E+01;
  COFD[749] = 4.85015581E+00;
  COFD[750] = -4.10945109E-01;
  COFD[751] = 1.76651398E-02;
  COFD[752] = -2.14449532E+01;
  COFD[753] = 5.56531152E+00;
  COFD[754] = -4.88789821E-01;
  COFD[755] = 2.04437116E-02;
  COFD[756] = -1.88463801E+01;
  COFD[757] = 4.68393046E+00;
  COFD[758] = -3.91610863E-01;
  COFD[759] = 1.69174645E-02;
  COFD[760] = -1.98646724E+01;
  COFD[761] = 5.04367502E+00;
  COFD[762] = -4.34153325E-01;
  COFD[763] = 1.85956055E-02;
  COFD[764] = -1.95552136E+01;
  COFD[765] = 4.90255048E+00;
  COFD[766] = -4.17368501E-01;
  COFD[767] = 1.79287358E-02;
  COFD[768] = -1.72828280E+01;
  COFD[769] = 4.26063341E+00;
  COFD[770] = -3.39848064E-01;
  COFD[771] = 1.48021313E-02;
  COFD[772] = -2.11606942E+01;
  COFD[773] = 5.42846112E+00;
  COFD[774] = -4.74321870E-01;
  COFD[775] = 1.99459749E-02;
  COFD[776] = -2.11667588E+01;
  COFD[777] = 5.42846112E+00;
  COFD[778] = -4.74321870E-01;
  COFD[779] = 1.99459749E-02;
  COFD[780] = -1.99803480E+01;
  COFD[781] = 4.97875278E+00;
  COFD[782] = -4.26485475E-01;
  COFD[783] = 1.82931933E-02;
  COFD[784] = -1.99835677E+01;
  COFD[785] = 4.97875278E+00;
  COFD[786] = -4.26485475E-01;
  COFD[787] = 1.82931933E-02;
  COFD[788] = -1.59633426E+01;
  COFD[789] = 3.66853818E+00;
  COFD[790] = -2.64346221E-01;
  COFD[791] = 1.15784613E-02;
  COFD[792] = -1.24693714E+01;
  COFD[793] = 2.76686648E+00;
  COFD[794] = -1.49120141E-01;
  COFD[795] = 6.66220432E-03;
  COFD[796] = -1.57199190E+01;
  COFD[797] = 4.19936335E+00;
  COFD[798] = -3.32311009E-01;
  COFD[799] = 1.44921003E-02;
  COFD[800] = -1.50270285E+01;
  COFD[801] = 3.46140064E+00;
  COFD[802] = -2.38440092E-01;
  COFD[803] = 1.04960087E-02;
  COFD[804] = -1.62724429E+01;
  COFD[805] = 3.79163564E+00;
  COFD[806] = -2.80257365E-01;
  COFD[807] = 1.22656902E-02;
  COFD[808] = -1.50420909E+01;
  COFD[809] = 3.46140064E+00;
  COFD[810] = -2.38440092E-01;
  COFD[811] = 1.04960087E-02;
  COFD[812] = -2.14087360E+01;
  COFD[813] = 5.57281993E+00;
  COFD[814] = -4.76690860E-01;
  COFD[815] = 1.94000702E-02;
  COFD[816] = -1.62775683E+01;
  COFD[817] = 3.79163564E+00;
  COFD[818] = -2.80257365E-01;
  COFD[819] = 1.22656902E-02;
  COFD[820] = -1.62824385E+01;
  COFD[821] = 3.79163564E+00;
  COFD[822] = -2.80257365E-01;
  COFD[823] = 1.22656902E-02;
  COFD[824] = -1.72738845E+01;
  COFD[825] = 4.19029808E+00;
  COFD[826] = -3.31177076E-01;
  COFD[827] = 1.44446234E-02;
  COFD[828] = -1.72167712E+01;
  COFD[829] = 4.16886779E+00;
  COFD[830] = -3.28518156E-01;
  COFD[831] = 1.43341626E-02;
  COFD[832] = -1.59525075E+01;
  COFD[833] = 3.66023858E+00;
  COFD[834] = -2.63401043E-01;
  COFD[835] = 1.15432000E-02;
  COFD[836] = -1.92867532E+01;
  COFD[837] = 4.83375900E+00;
  COFD[838] = -4.09146560E-01;
  COFD[839] = 1.76006599E-02;
  COFD[840] = -2.14082433E+01;
  COFD[841] = 5.55346617E+00;
  COFD[842] = -4.87783156E-01;
  COFD[843] = 2.04210886E-02;
  COFD[844] = -1.87897289E+01;
  COFD[845] = 4.66162351E+00;
  COFD[846] = -3.88920477E-01;
  COFD[847] = 1.68089648E-02;
  COFD[848] = -1.98075051E+01;
  COFD[849] = 5.02169524E+00;
  COFD[850] = -4.31582804E-01;
  COFD[851] = 1.84953568E-02;
  COFD[852] = -1.94823661E+01;
  COFD[853] = 4.87333294E+00;
  COFD[854] = -4.13769241E-01;
  COFD[855] = 1.77802244E-02;
  COFD[856] = -1.72316133E+01;
  COFD[857] = 4.24011069E+00;
  COFD[858] = -3.37339810E-01;
  COFD[859] = 1.46996679E-02;
  COFD[860] = -2.11309194E+01;
  COFD[861] = 5.41773516E+00;
  COFD[862] = -4.73414338E-01;
  COFD[863] = 1.99258685E-02;
  COFD[864] = -2.11372801E+01;
  COFD[865] = 5.41773516E+00;
  COFD[866] = -4.73414338E-01;
  COFD[867] = 1.99258685E-02;
  COFD[868] = -1.99235836E+01;
  COFD[869] = 4.95514826E+00;
  COFD[870] = -4.23691395E-01;
  COFD[871] = 1.81828318E-02;
  COFD[872] = -1.99269591E+01;
  COFD[873] = 4.95514826E+00;
  COFD[874] = -4.23691395E-01;
  COFD[875] = 1.81828318E-02;
  COFD[876] = -1.59327344E+01;
  COFD[877] = 3.65620899E+00;
  COFD[878] = -2.62933804E-01;
  COFD[879] = 1.15253223E-02;
  COFD[880] = -1.17159884E+01;
  COFD[881] = 2.48123210E+00;
  COFD[882] = -1.11322604E-01;
  COFD[883] = 4.99282389E-03;
  COFD[884] = -1.43151328E+01;
  COFD[885] = 3.68038508E+00;
  COFD[886] = -2.65779346E-01;
  COFD[887] = 1.16360771E-02;
  COFD[888] = -1.40998907E+01;
  COFD[889] = 3.08120012E+00;
  COFD[890] = -1.89629903E-01;
  COFD[891] = 8.40361952E-03;
  COFD[892] = -1.52721010E+01;
  COFD[893] = 3.36790500E+00;
  COFD[894] = -2.26321740E-01;
  COFD[895] = 9.97135055E-03;
  COFD[896] = -1.41191170E+01;
  COFD[897] = 3.08120012E+00;
  COFD[898] = -1.89629903E-01;
  COFD[899] = 8.40361952E-03;
  COFD[900] = -2.11388255E+01;
  COFD[901] = 5.55529689E+00;
  COFD[902] = -4.87942530E-01;
  COFD[903] = 2.04249057E-02;
  COFD[904] = -1.52792799E+01;
  COFD[905] = 3.36790500E+00;
  COFD[906] = -2.26321740E-01;
  COFD[907] = 9.97135055E-03;
  COFD[908] = -1.52861287E+01;
  COFD[909] = 3.36790500E+00;
  COFD[910] = -2.26321740E-01;
  COFD[911] = 9.97135055E-03;
  COFD[912] = -1.59862997E+01;
  COFD[913] = 3.67388294E+00;
  COFD[914] = -2.64990709E-01;
  COFD[915] = 1.16042706E-02;
  COFD[916] = -1.59525075E+01;
  COFD[917] = 3.66023858E+00;
  COFD[918] = -2.63401043E-01;
  COFD[919] = 1.15432000E-02;
  COFD[920] = -1.50233391E+01;
  COFD[921] = 3.26660767E+00;
  COFD[922] = -2.13287177E-01;
  COFD[923] = 9.41137857E-03;
  COFD[924] = -1.81735675E+01;
  COFD[925] = 4.38391495E+00;
  COFD[926] = -3.54941287E-01;
  COFD[927] = 1.54195107E-02;
  COFD[928] = -2.05128629E+01;
  COFD[929] = 5.23843909E+00;
  COFD[930] = -4.55815614E-01;
  COFD[931] = 1.93898040E-02;
  COFD[932] = -1.76285583E+01;
  COFD[933] = 4.19935698E+00;
  COFD[934] = -3.32310212E-01;
  COFD[935] = 1.44920670E-02;
  COFD[936] = -1.86157710E+01;
  COFD[937] = 4.55689508E+00;
  COFD[938] = -3.75937921E-01;
  COFD[939] = 1.62703488E-02;
  COFD[940] = -1.83538331E+01;
  COFD[941] = 4.42828044E+00;
  COFD[942] = -3.60417833E-01;
  COFD[943] = 1.56455103E-02;
  COFD[944] = -1.60261598E+01;
  COFD[945] = 3.73312045E+00;
  COFD[946] = -2.72579779E-01;
  COFD[947] = 1.19290272E-02;
  COFD[948] = -2.02922626E+01;
  COFD[949] = 5.11106992E+00;
  COFD[950] = -4.42047129E-01;
  COFD[951] = 1.89042990E-02;
  COFD[952] = -2.03014971E+01;
  COFD[953] = 5.11106992E+00;
  COFD[954] = -4.42047129E-01;
  COFD[955] = 1.89042990E-02;
  COFD[956] = -1.87684982E+01;
  COFD[957] = 4.49191492E+00;
  COFD[958] = -3.68041771E-01;
  COFD[959] = 1.59498676E-02;
  COFD[960] = -1.87733780E+01;
  COFD[961] = 4.49191492E+00;
  COFD[962] = -3.68041771E-01;
  COFD[963] = 1.59498676E-02;
  COFD[964] = -1.50031706E+01;
  COFD[965] = 3.26223357E+00;
  COFD[966] = -2.12746642E-01;
  COFD[967] = 9.38912883E-03;
  COFD[968] = -1.37794466E+01;
  COFD[969] = 3.23973858E+00;
  COFD[970] = -2.09989036E-01;
  COFD[971] = 9.27667906E-03;
  COFD[972] = -1.76147183E+01;
  COFD[973] = 4.86049500E+00;
  COFD[974] = -4.12200578E-01;
  COFD[975] = 1.77160971E-02;
  COFD[976] = -1.70534750E+01;
  COFD[977] = 4.14240922E+00;
  COFD[978] = -3.25239774E-01;
  COFD[979] = 1.41980687E-02;
  COFD[980] = -1.84688303E+01;
  COFD[981] = 4.49330851E+00;
  COFD[982] = -3.68208715E-01;
  COFD[983] = 1.59565402E-02;
  COFD[984] = -1.70756953E+01;
  COFD[985] = 4.14240922E+00;
  COFD[986] = -3.25239774E-01;
  COFD[987] = 1.41980687E-02;
  COFD[988] = -2.07653629E+01;
  COFD[989] = 5.01091988E+00;
  COFD[990] = -3.77985581E-01;
  COFD[991] = 1.40968617E-02;
  COFD[992] = -1.84777509E+01;
  COFD[993] = 4.49330851E+00;
  COFD[994] = -3.68208715E-01;
  COFD[995] = 1.59565402E-02;
  COFD[996] = -1.84862906E+01;
  COFD[997] = 4.49330851E+00;
  COFD[998] = -3.68208715E-01;
  COFD[999] = 1.59565402E-02;
  COFD[1000] = -1.93276406E+01;
  COFD[1001] = 4.85015581E+00;
  COFD[1002] = -4.10945109E-01;
  COFD[1003] = 1.76651398E-02;
  COFD[1004] = -1.92867532E+01;
  COFD[1005] = 4.83375900E+00;
  COFD[1006] = -4.09146560E-01;
  COFD[1007] = 1.76006599E-02;
  COFD[1008] = -1.81735675E+01;
  COFD[1009] = 4.38391495E+00;
  COFD[1010] = -3.54941287E-01;
  COFD[1011] = 1.54195107E-02;
  COFD[1012] = -2.13425604E+01;
  COFD[1013] = 5.40460130E+00;
  COFD[1014] = -4.72718910E-01;
  COFD[1015] = 1.99362717E-02;
  COFD[1016] = -2.19317665E+01;
  COFD[1017] = 5.45216133E+00;
  COFD[1018] = -4.52916925E-01;
  COFD[1019] = 1.80456400E-02;
  COFD[1020] = -2.09191230E+01;
  COFD[1021] = 5.30153901E+00;
  COFD[1022] = -4.63335119E-01;
  COFD[1023] = 1.96897053E-02;
  COFD[1024] = -2.16802565E+01;
  COFD[1025] = 5.52918296E+00;
  COFD[1026] = -4.85360709E-01;
  COFD[1027] = 2.03448006E-02;
  COFD[1028] = -2.14326420E+01;
  COFD[1029] = 5.41729961E+00;
  COFD[1030] = -4.73400281E-01;
  COFD[1031] = 1.99269567E-02;
  COFD[1032] = -1.94485902E+01;
  COFD[1033] = 4.91446566E+00;
  COFD[1034] = -4.18837152E-01;
  COFD[1035] = 1.79893537E-02;
  COFD[1036] = -2.22116629E+01;
  COFD[1037] = 5.54251230E+00;
  COFD[1038] = -4.70946314E-01;
  COFD[1039] = 1.90785869E-02;
  COFD[1040] = -2.22235050E+01;
  COFD[1041] = 5.54251230E+00;
  COFD[1042] = -4.70946314E-01;
  COFD[1043] = 1.90785869E-02;
  COFD[1044] = -2.18590684E+01;
  COFD[1045] = 5.47368915E+00;
  COFD[1046] = -4.79424291E-01;
  COFD[1047] = 2.01372920E-02;
  COFD[1048] = -2.18653022E+01;
  COFD[1049] = 5.47368915E+00;
  COFD[1050] = -4.79424291E-01;
  COFD[1051] = 2.01372920E-02;
  COFD[1052] = -1.81432499E+01;
  COFD[1053] = 4.37565431E+00;
  COFD[1054] = -3.53906025E-01;
  COFD[1055] = 1.53760786E-02;
  COFD[1056] = -1.60528433E+01;
  COFD[1057] = 4.11188603E+00;
  COFD[1058] = -3.21540884E-01;
  COFD[1059] = 1.40482564E-02;
  COFD[1060] = -1.97550243E+01;
  COFD[1061] = 5.56931926E+00;
  COFD[1062] = -4.89105511E-01;
  COFD[1063] = 2.04493129E-02;
  COFD[1064] = -1.94373032E+01;
  COFD[1065] = 5.02567894E+00;
  COFD[1066] = -4.32045169E-01;
  COFD[1067] = 1.85132214E-02;
  COFD[1068] = -2.08293167E+01;
  COFD[1069] = 5.35267674E+00;
  COFD[1070] = -4.69010505E-01;
  COFD[1071] = 1.98979152E-02;
  COFD[1072] = -1.94570202E+01;
  COFD[1073] = 5.02567894E+00;
  COFD[1074] = -4.32045169E-01;
  COFD[1075] = 1.85132214E-02;
  COFD[1076] = -1.77563175E+01;
  COFD[1077] = 3.57475686E+00;
  COFD[1078] = -1.56396297E-01;
  COFD[1079] = 3.12157721E-03;
  COFD[1080] = -2.08367641E+01;
  COFD[1081] = 5.35267674E+00;
  COFD[1082] = -4.69010505E-01;
  COFD[1083] = 1.98979152E-02;
  COFD[1084] = -2.08438728E+01;
  COFD[1085] = 5.35267674E+00;
  COFD[1086] = -4.69010505E-01;
  COFD[1087] = 1.98979152E-02;
  COFD[1088] = -2.14449532E+01;
  COFD[1089] = 5.56531152E+00;
  COFD[1090] = -4.88789821E-01;
  COFD[1091] = 2.04437116E-02;
  COFD[1092] = -2.14082433E+01;
  COFD[1093] = 5.55346617E+00;
  COFD[1094] = -4.87783156E-01;
  COFD[1095] = 2.04210886E-02;
  COFD[1096] = -2.05128629E+01;
  COFD[1097] = 5.23843909E+00;
  COFD[1098] = -4.55815614E-01;
  COFD[1099] = 1.93898040E-02;
  COFD[1100] = -2.19317665E+01;
  COFD[1101] = 5.45216133E+00;
  COFD[1102] = -4.52916925E-01;
  COFD[1103] = 1.80456400E-02;
  COFD[1104] = -1.90499374E+01;
  COFD[1105] = 3.99221757E+00;
  COFD[1106] = -2.19854880E-01;
  COFD[1107] = 6.22736279E-03;
  COFD[1108] = -2.20036321E+01;
  COFD[1109] = 5.55935694E+00;
  COFD[1110] = -4.74154740E-01;
  COFD[1111] = 1.92584304E-02;
  COFD[1112] = -2.16379525E+01;
  COFD[1113] = 5.29019717E+00;
  COFD[1114] = -4.24502606E-01;
  COFD[1115] = 1.65197343E-02;
  COFD[1116] = -2.19399756E+01;
  COFD[1117] = 5.41841631E+00;
  COFD[1118] = -4.46818971E-01;
  COFD[1119] = 1.77127652E-02;
  COFD[1120] = -2.14303411E+01;
  COFD[1121] = 5.59268435E+00;
  COFD[1122] = -4.91232974E-01;
  COFD[1123] = 2.05064746E-02;
  COFD[1124] = -2.01015275E+01;
  COFD[1125] = 4.41511629E+00;
  COFD[1126] = -2.84086963E-01;
  COFD[1127] = 9.37586971E-03;
  COFD[1128] = -2.01111534E+01;
  COFD[1129] = 4.41511629E+00;
  COFD[1130] = -2.84086963E-01;
  COFD[1131] = 9.37586971E-03;
  COFD[1132] = -2.20947854E+01;
  COFD[1133] = 5.36053938E+00;
  COFD[1134] = -4.36434519E-01;
  COFD[1135] = 1.71484255E-02;
  COFD[1136] = -2.20998692E+01;
  COFD[1137] = 5.36053938E+00;
  COFD[1138] = -4.36434519E-01;
  COFD[1139] = 1.71484255E-02;
  COFD[1140] = -2.04833743E+01;
  COFD[1141] = 5.23112374E+00;
  COFD[1142] = -4.54967682E-01;
  COFD[1143] = 1.93570423E-02;
  COFD[1144] = -1.34709956E+01;
  COFD[1145] = 3.09379603E+00;
  COFD[1146] = -1.91268635E-01;
  COFD[1147] = 8.47480224E-03;
  COFD[1148] = -1.72232379E+01;
  COFD[1149] = 4.69060745E+00;
  COFD[1150] = -3.92369888E-01;
  COFD[1151] = 1.69459661E-02;
  COFD[1152] = -1.65488277E+01;
  COFD[1153] = 3.95035840E+00;
  COFD[1154] = -3.00959418E-01;
  COFD[1155] = 1.31692593E-02;
  COFD[1156] = -1.78834868E+01;
  COFD[1157] = 4.29613154E+00;
  COFD[1158] = -3.44012526E-01;
  COFD[1159] = 1.49643715E-02;
  COFD[1160] = -1.65675292E+01;
  COFD[1161] = 3.95035840E+00;
  COFD[1162] = -3.00959418E-01;
  COFD[1163] = 1.31692593E-02;
  COFD[1164] = -2.15095920E+01;
  COFD[1165] = 5.46737673E+00;
  COFD[1166] = -4.55696085E-01;
  COFD[1167] = 1.81982625E-02;
  COFD[1168] = -1.78903850E+01;
  COFD[1169] = 4.29613154E+00;
  COFD[1170] = -3.44012526E-01;
  COFD[1171] = 1.49643715E-02;
  COFD[1172] = -1.78969625E+01;
  COFD[1173] = 4.29613154E+00;
  COFD[1174] = -3.44012526E-01;
  COFD[1175] = 1.49643715E-02;
  COFD[1176] = -1.88463801E+01;
  COFD[1177] = 4.68393046E+00;
  COFD[1178] = -3.91610863E-01;
  COFD[1179] = 1.69174645E-02;
  COFD[1180] = -1.87897289E+01;
  COFD[1181] = 4.66162351E+00;
  COFD[1182] = -3.88920477E-01;
  COFD[1183] = 1.68089648E-02;
  COFD[1184] = -1.76285583E+01;
  COFD[1185] = 4.19935698E+00;
  COFD[1186] = -3.32310212E-01;
  COFD[1187] = 1.44920670E-02;
  COFD[1188] = -2.09191230E+01;
  COFD[1189] = 5.30153901E+00;
  COFD[1190] = -4.63335119E-01;
  COFD[1191] = 1.96897053E-02;
  COFD[1192] = -2.20036321E+01;
  COFD[1193] = 5.55935694E+00;
  COFD[1194] = -4.74154740E-01;
  COFD[1195] = 1.92584304E-02;
  COFD[1196] = -2.03766918E+01;
  COFD[1197] = 5.13263469E+00;
  COFD[1198] = -4.44457285E-01;
  COFD[1199] = 1.89932102E-02;
  COFD[1200] = -2.12121345E+01;
  COFD[1201] = 5.39823225E+00;
  COFD[1202] = -4.72294645E-01;
  COFD[1203] = 1.99340225E-02;
  COFD[1204] = -2.10944068E+01;
  COFD[1205] = 5.34286099E+00;
  COFD[1206] = -4.68100992E-01;
  COFD[1207] = 1.98731399E-02;
  COFD[1208] = -1.88646025E+01;
  COFD[1209] = 4.72476764E+00;
  COFD[1210] = -3.96306836E-01;
  COFD[1211] = 1.70964541E-02;
  COFD[1212] = -2.21065263E+01;
  COFD[1213] = 5.58360799E+00;
  COFD[1214] = -4.82701436E-01;
  COFD[1215] = 1.98437922E-02;
  COFD[1216] = -2.21153557E+01;
  COFD[1217] = 5.58360799E+00;
  COFD[1218] = -4.82701436E-01;
  COFD[1219] = 1.98437922E-02;
  COFD[1220] = -2.14323161E+01;
  COFD[1221] = 5.37331605E+00;
  COFD[1222] = -4.70491203E-01;
  COFD[1223] = 1.99134666E-02;
  COFD[1224] = -2.14369847E+01;
  COFD[1225] = 5.37331605E+00;
  COFD[1226] = -4.70491203E-01;
  COFD[1227] = 1.99134666E-02;
  COFD[1228] = -1.76002073E+01;
  COFD[1229] = 4.19171952E+00;
  COFD[1230] = -3.31354810E-01;
  COFD[1231] = 1.44520623E-02;
  COFD[1232] = -1.42229344E+01;
  COFD[1233] = 3.38669384E+00;
  COFD[1234] = -2.28784122E-01;
  COFD[1235] = 1.00790953E-02;
  COFD[1236] = -1.82252070E+01;
  COFD[1237] = 5.05237312E+00;
  COFD[1238] = -4.35182396E-01;
  COFD[1239] = 1.86363074E-02;
  COFD[1240] = -1.74792034E+01;
  COFD[1241] = 4.29676909E+00;
  COFD[1242] = -3.44085306E-01;
  COFD[1243] = 1.49671135E-02;
  COFD[1244] = -1.89544717E+01;
  COFD[1245] = 4.68595732E+00;
  COFD[1246] = -3.91842840E-01;
  COFD[1247] = 1.69262542E-02;
  COFD[1248] = -1.74984410E+01;
  COFD[1249] = 4.29676909E+00;
  COFD[1250] = -3.44085306E-01;
  COFD[1251] = 1.49671135E-02;
  COFD[1252] = -2.08812277E+01;
  COFD[1253] = 5.08859217E+00;
  COFD[1254] = -3.90525428E-01;
  COFD[1255] = 1.47376395E-02;
  COFD[1256] = -1.89616566E+01;
  COFD[1257] = 4.68595732E+00;
  COFD[1258] = -3.91842840E-01;
  COFD[1259] = 1.69262542E-02;
  COFD[1260] = -1.89685112E+01;
  COFD[1261] = 4.68595732E+00;
  COFD[1262] = -3.91842840E-01;
  COFD[1263] = 1.69262542E-02;
  COFD[1264] = -1.98646724E+01;
  COFD[1265] = 5.04367502E+00;
  COFD[1266] = -4.34153325E-01;
  COFD[1267] = 1.85956055E-02;
  COFD[1268] = -1.98075051E+01;
  COFD[1269] = 5.02169524E+00;
  COFD[1270] = -4.31582804E-01;
  COFD[1271] = 1.84953568E-02;
  COFD[1272] = -1.86157710E+01;
  COFD[1273] = 4.55689508E+00;
  COFD[1274] = -3.75937921E-01;
  COFD[1275] = 1.62703488E-02;
  COFD[1276] = -2.16802565E+01;
  COFD[1277] = 5.52918296E+00;
  COFD[1278] = -4.85360709E-01;
  COFD[1279] = 2.03448006E-02;
  COFD[1280] = -2.16379525E+01;
  COFD[1281] = 5.29019717E+00;
  COFD[1282] = -4.24502606E-01;
  COFD[1283] = 1.65197343E-02;
  COFD[1284] = -2.12121345E+01;
  COFD[1285] = 5.39823225E+00;
  COFD[1286] = -4.72294645E-01;
  COFD[1287] = 1.99340225E-02;
  COFD[1288] = -2.19327379E+01;
  COFD[1289] = 5.60638188E+00;
  COFD[1290] = -4.91272522E-01;
  COFD[1291] = 2.04396264E-02;
  COFD[1292] = -2.18273535E+01;
  COFD[1293] = 5.55753905E+00;
  COFD[1294] = -4.88136714E-01;
  COFD[1295] = 2.04294957E-02;
  COFD[1296] = -1.99081518E+01;
  COFD[1297] = 5.09311649E+00;
  COFD[1298] = -4.39965178E-01;
  COFD[1299] = 1.88238537E-02;
  COFD[1300] = -2.20453687E+01;
  COFD[1301] = 5.44448440E+00;
  COFD[1302] = -4.51529024E-01;
  COFD[1303] = 1.79698119E-02;
  COFD[1304] = -2.20546120E+01;
  COFD[1305] = 5.44448440E+00;
  COFD[1306] = -4.51529024E-01;
  COFD[1307] = 1.79698119E-02;
  COFD[1308] = -2.21885121E+01;
  COFD[1309] = 5.59472344E+00;
  COFD[1310] = -4.91421518E-01;
  COFD[1311] = 2.05117088E-02;
  COFD[1312] = -2.21933965E+01;
  COFD[1313] = 5.59472344E+00;
  COFD[1314] = -4.91421518E-01;
  COFD[1315] = 2.05117088E-02;
  COFD[1316] = -1.85864196E+01;
  COFD[1317] = 4.54915847E+00;
  COFD[1318] = -3.75000738E-01;
  COFD[1319] = 1.62324821E-02;
  COFD[1320] = -1.39924933E+01;
  COFD[1321] = 3.26384506E+00;
  COFD[1322] = -2.12947087E-01;
  COFD[1323] = 9.39743888E-03;
  COFD[1324] = -1.79345106E+01;
  COFD[1325] = 4.91373893E+00;
  COFD[1326] = -4.18747629E-01;
  COFD[1327] = 1.79856610E-02;
  COFD[1328] = -1.72556425E+01;
  COFD[1329] = 4.17889917E+00;
  COFD[1330] = -3.29752510E-01;
  COFD[1331] = 1.43850275E-02;
  COFD[1332] = -1.86424488E+01;
  COFD[1333] = 4.53572533E+00;
  COFD[1334] = -3.73386925E-01;
  COFD[1335] = 1.61678881E-02;
  COFD[1336] = -1.72753698E+01;
  COFD[1337] = 4.17889917E+00;
  COFD[1338] = -3.29752510E-01;
  COFD[1339] = 1.43850275E-02;
  COFD[1340] = -2.12661812E+01;
  COFD[1341] = 5.24930667E+00;
  COFD[1342] = -4.17435088E-01;
  COFD[1343] = 1.61434424E-02;
  COFD[1344] = -1.86499019E+01;
  COFD[1345] = 4.53572533E+00;
  COFD[1346] = -3.73386925E-01;
  COFD[1347] = 1.61678881E-02;
  COFD[1348] = -1.86570161E+01;
  COFD[1349] = 4.53572533E+00;
  COFD[1350] = -3.73386925E-01;
  COFD[1351] = 1.61678881E-02;
  COFD[1352] = -1.95552136E+01;
  COFD[1353] = 4.90255048E+00;
  COFD[1354] = -4.17368501E-01;
  COFD[1355] = 1.79287358E-02;
  COFD[1356] = -1.94823661E+01;
  COFD[1357] = 4.87333294E+00;
  COFD[1358] = -4.13769241E-01;
  COFD[1359] = 1.77802244E-02;
  COFD[1360] = -1.83538331E+01;
  COFD[1361] = 4.42828044E+00;
  COFD[1362] = -3.60417833E-01;
  COFD[1363] = 1.56455103E-02;
  COFD[1364] = -2.14326420E+01;
  COFD[1365] = 5.41729961E+00;
  COFD[1366] = -4.73400281E-01;
  COFD[1367] = 1.99269567E-02;
  COFD[1368] = -2.19399756E+01;
  COFD[1369] = 5.41841631E+00;
  COFD[1370] = -4.46818971E-01;
  COFD[1371] = 1.77127652E-02;
  COFD[1372] = -2.10944068E+01;
  COFD[1373] = 5.34286099E+00;
  COFD[1374] = -4.68100992E-01;
  COFD[1375] = 1.98731399E-02;
  COFD[1376] = -2.18273535E+01;
  COFD[1377] = 5.55753905E+00;
  COFD[1378] = -4.88136714E-01;
  COFD[1379] = 2.04294957E-02;
  COFD[1380] = -2.15746130E+01;
  COFD[1381] = 5.44803850E+00;
  COFD[1382] = -4.76610560E-01;
  COFD[1383] = 2.00355294E-02;
  COFD[1384] = -1.96408096E+01;
  COFD[1385] = 4.95923807E+00;
  COFD[1386] = -4.24176182E-01;
  COFD[1387] = 1.82020215E-02;
  COFD[1388] = -2.22159601E+01;
  COFD[1389] = 5.51722375E+00;
  COFD[1390] = -4.66081431E-01;
  COFD[1391] = 1.88044011E-02;
  COFD[1392] = -2.22255943E+01;
  COFD[1393] = 5.51722375E+00;
  COFD[1394] = -4.66081431E-01;
  COFD[1395] = 1.88044011E-02;
  COFD[1396] = -2.19982906E+01;
  COFD[1397] = 5.51276597E+00;
  COFD[1398] = -4.83701824E-01;
  COFD[1399] = 2.02915297E-02;
  COFD[1400] = -2.20033786E+01;
  COFD[1401] = 5.51276597E+00;
  COFD[1402] = -4.83701824E-01;
  COFD[1403] = 2.02915297E-02;
  COFD[1404] = -1.83249359E+01;
  COFD[1405] = 4.42045763E+00;
  COFD[1406] = -3.59451578E-01;
  COFD[1407] = 1.56056164E-02;
  COFD[1408] = -1.22004476E+01;
  COFD[1409] = 2.80725489E+00;
  COFD[1410] = -1.54291406E-01;
  COFD[1411] = 6.88290911E-03;
  COFD[1412] = -1.54460977E+01;
  COFD[1413] = 4.26819983E+00;
  COFD[1414] = -3.40766379E-01;
  COFD[1415] = 1.48393361E-02;
  COFD[1416] = -1.49500258E+01;
  COFD[1417] = 3.52327209E+00;
  COFD[1418] = -2.46286208E-01;
  COFD[1419] = 1.08285963E-02;
  COFD[1420] = -1.64169341E+01;
  COFD[1421] = 3.89309916E+00;
  COFD[1422] = -2.93528188E-01;
  COFD[1423] = 1.28463177E-02;
  COFD[1424] = -1.49718147E+01;
  COFD[1425] = 3.52327209E+00;
  COFD[1426] = -2.46286208E-01;
  COFD[1427] = 1.08285963E-02;
  COFD[1428] = -2.10440599E+01;
  COFD[1429] = 5.59806282E+00;
  COFD[1430] = -4.87109535E-01;
  COFD[1431] = 2.01370226E-02;
  COFD[1432] = -1.64255877E+01;
  COFD[1433] = 3.89309916E+00;
  COFD[1434] = -2.93528188E-01;
  COFD[1435] = 1.28463177E-02;
  COFD[1436] = -1.64338675E+01;
  COFD[1437] = 3.89309916E+00;
  COFD[1438] = -2.93528188E-01;
  COFD[1439] = 1.28463177E-02;
  COFD[1440] = -1.72828280E+01;
  COFD[1441] = 4.26063341E+00;
  COFD[1442] = -3.39848064E-01;
  COFD[1443] = 1.48021313E-02;
  COFD[1444] = -1.72316133E+01;
  COFD[1445] = 4.24011069E+00;
  COFD[1446] = -3.37339810E-01;
  COFD[1447] = 1.46996679E-02;
  COFD[1448] = -1.60261598E+01;
  COFD[1449] = 3.73312045E+00;
  COFD[1450] = -2.72579779E-01;
  COFD[1451] = 1.19290272E-02;
  COFD[1452] = -1.94485902E+01;
  COFD[1453] = 4.91446566E+00;
  COFD[1454] = -4.18837152E-01;
  COFD[1455] = 1.79893537E-02;
  COFD[1456] = -2.14303411E+01;
  COFD[1457] = 5.59268435E+00;
  COFD[1458] = -4.91232974E-01;
  COFD[1459] = 2.05064746E-02;
  COFD[1460] = -1.88646025E+01;
  COFD[1461] = 4.72476764E+00;
  COFD[1462] = -3.96306836E-01;
  COFD[1463] = 1.70964541E-02;
  COFD[1464] = -1.99081518E+01;
  COFD[1465] = 5.09311649E+00;
  COFD[1466] = -4.39965178E-01;
  COFD[1467] = 1.88238537E-02;
  COFD[1468] = -1.96408096E+01;
  COFD[1469] = 4.95923807E+00;
  COFD[1470] = -4.24176182E-01;
  COFD[1471] = 1.82020215E-02;
  COFD[1472] = -1.72414795E+01;
  COFD[1473] = 4.29808578E+00;
  COFD[1474] = -3.44235570E-01;
  COFD[1475] = 1.49727727E-02;
  COFD[1476] = -2.12621849E+01;
  COFD[1477] = 5.47935225E+00;
  COFD[1478] = -4.80056796E-01;
  COFD[1479] = 2.01607180E-02;
  COFD[1480] = -2.12736166E+01;
  COFD[1481] = 5.47935225E+00;
  COFD[1482] = -4.80056796E-01;
  COFD[1483] = 2.01607180E-02;
  COFD[1484] = -2.01223105E+01;
  COFD[1485] = 5.03101171E+00;
  COFD[1486] = -4.32665019E-01;
  COFD[1487] = 1.85372086E-02;
  COFD[1488] = -2.01283319E+01;
  COFD[1489] = 5.03101171E+00;
  COFD[1490] = -4.32665019E-01;
  COFD[1491] = 1.85372086E-02;
  COFD[1492] = -1.59884349E+01;
  COFD[1493] = 3.72220402E+00;
  COFD[1494] = -2.71150591E-01;
  COFD[1495] = 1.18665265E-02;
  COFD[1496] = -1.57035004E+01;
  COFD[1497] = 3.93614244E+00;
  COFD[1498] = -2.99111497E-01;
  COFD[1499] = 1.30888229E-02;
  COFD[1500] = -1.94688845E+01;
  COFD[1501] = 5.43830787E+00;
  COFD[1502] = -4.75472880E-01;
  COFD[1503] = 1.99909996E-02;
  COFD[1504] = -1.90883170E+01;
  COFD[1505] = 4.84384483E+00;
  COFD[1506] = -4.10265575E-01;
  COFD[1507] = 1.76414287E-02;
  COFD[1508] = -2.05184780E+01;
  COFD[1509] = 5.18417470E+00;
  COFD[1510] = -4.49491573E-01;
  COFD[1511] = 1.91438508E-02;
  COFD[1512] = -1.91102567E+01;
  COFD[1513] = 4.84384483E+00;
  COFD[1514] = -4.10265575E-01;
  COFD[1515] = 1.76414287E-02;
  COFD[1516] = -1.87383877E+01;
  COFD[1517] = 3.96926341E+00;
  COFD[1518] = -2.16412264E-01;
  COFD[1519] = 6.06012078E-03;
  COFD[1520] = -2.05272244E+01;
  COFD[1521] = 5.18417470E+00;
  COFD[1522] = -4.49491573E-01;
  COFD[1523] = 1.91438508E-02;
  COFD[1524] = -2.05355943E+01;
  COFD[1525] = 5.18417470E+00;
  COFD[1526] = -4.49491573E-01;
  COFD[1527] = 1.91438508E-02;
  COFD[1528] = -2.11606942E+01;
  COFD[1529] = 5.42846112E+00;
  COFD[1530] = -4.74321870E-01;
  COFD[1531] = 1.99459749E-02;
  COFD[1532] = -2.11309194E+01;
  COFD[1533] = 5.41773516E+00;
  COFD[1534] = -4.73414338E-01;
  COFD[1535] = 1.99258685E-02;
  COFD[1536] = -2.02922626E+01;
  COFD[1537] = 5.11106992E+00;
  COFD[1538] = -4.42047129E-01;
  COFD[1539] = 1.89042990E-02;
  COFD[1540] = -2.22116629E+01;
  COFD[1541] = 5.54251230E+00;
  COFD[1542] = -4.70946314E-01;
  COFD[1543] = 1.90785869E-02;
  COFD[1544] = -2.01015275E+01;
  COFD[1545] = 4.41511629E+00;
  COFD[1546] = -2.84086963E-01;
  COFD[1547] = 9.37586971E-03;
  COFD[1548] = -2.21065263E+01;
  COFD[1549] = 5.58360799E+00;
  COFD[1550] = -4.82701436E-01;
  COFD[1551] = 1.98437922E-02;
  COFD[1552] = -2.20453687E+01;
  COFD[1553] = 5.44448440E+00;
  COFD[1554] = -4.51529024E-01;
  COFD[1555] = 1.79698119E-02;
  COFD[1556] = -2.22159601E+01;
  COFD[1557] = 5.51722375E+00;
  COFD[1558] = -4.66081431E-01;
  COFD[1559] = 1.88044011E-02;
  COFD[1560] = -2.12621849E+01;
  COFD[1561] = 5.47935225E+00;
  COFD[1562] = -4.80056796E-01;
  COFD[1563] = 2.01607180E-02;
  COFD[1564] = -2.09002680E+01;
  COFD[1565] = 4.72895031E+00;
  COFD[1566] = -3.33332771E-01;
  COFD[1567] = 1.18431478E-02;
  COFD[1568] = -2.09118417E+01;
  COFD[1569] = 4.72895031E+00;
  COFD[1570] = -3.33332771E-01;
  COFD[1571] = 1.18431478E-02;
  COFD[1572] = -2.24554479E+01;
  COFD[1573] = 5.49330641E+00;
  COFD[1574] = -4.60498247E-01;
  COFD[1575] = 1.84639199E-02;
  COFD[1576] = -2.24615428E+01;
  COFD[1577] = 5.49330641E+00;
  COFD[1578] = -4.60498247E-01;
  COFD[1579] = 1.84639199E-02;
  COFD[1580] = -2.02646659E+01;
  COFD[1581] = 5.10426133E+00;
  COFD[1582] = -4.41256919E-01;
  COFD[1583] = 1.88737290E-02;
  COFD[1584] = -1.57045486E+01;
  COFD[1585] = 3.93614244E+00;
  COFD[1586] = -2.99111497E-01;
  COFD[1587] = 1.30888229E-02;
  COFD[1588] = -1.94694206E+01;
  COFD[1589] = 5.43830787E+00;
  COFD[1590] = -4.75472880E-01;
  COFD[1591] = 1.99909996E-02;
  COFD[1592] = -1.90946650E+01;
  COFD[1593] = 4.84384483E+00;
  COFD[1594] = -4.10265575E-01;
  COFD[1595] = 1.76414287E-02;
  COFD[1596] = -2.05284666E+01;
  COFD[1597] = 5.18417470E+00;
  COFD[1598] = -4.49491573E-01;
  COFD[1599] = 1.91438508E-02;
  COFD[1600] = -1.91168913E+01;
  COFD[1601] = 4.84384483E+00;
  COFD[1602] = -4.10265575E-01;
  COFD[1603] = 1.76414287E-02;
  COFD[1604] = -1.87452995E+01;
  COFD[1605] = 3.96926341E+00;
  COFD[1606] = -2.16412264E-01;
  COFD[1607] = 6.06012078E-03;
  COFD[1608] = -2.05373910E+01;
  COFD[1609] = 5.18417470E+00;
  COFD[1610] = -4.49491573E-01;
  COFD[1611] = 1.91438508E-02;
  COFD[1612] = -2.05459343E+01;
  COFD[1613] = 5.18417470E+00;
  COFD[1614] = -4.49491573E-01;
  COFD[1615] = 1.91438508E-02;
  COFD[1616] = -2.11667588E+01;
  COFD[1617] = 5.42846112E+00;
  COFD[1618] = -4.74321870E-01;
  COFD[1619] = 1.99459749E-02;
  COFD[1620] = -2.11372801E+01;
  COFD[1621] = 5.41773516E+00;
  COFD[1622] = -4.73414338E-01;
  COFD[1623] = 1.99258685E-02;
  COFD[1624] = -2.03014971E+01;
  COFD[1625] = 5.11106992E+00;
  COFD[1626] = -4.42047129E-01;
  COFD[1627] = 1.89042990E-02;
  COFD[1628] = -2.22235050E+01;
  COFD[1629] = 5.54251230E+00;
  COFD[1630] = -4.70946314E-01;
  COFD[1631] = 1.90785869E-02;
  COFD[1632] = -2.01111534E+01;
  COFD[1633] = 4.41511629E+00;
  COFD[1634] = -2.84086963E-01;
  COFD[1635] = 9.37586971E-03;
  COFD[1636] = -2.21153557E+01;
  COFD[1637] = 5.58360799E+00;
  COFD[1638] = -4.82701436E-01;
  COFD[1639] = 1.98437922E-02;
  COFD[1640] = -2.20546120E+01;
  COFD[1641] = 5.44448440E+00;
  COFD[1642] = -4.51529024E-01;
  COFD[1643] = 1.79698119E-02;
  COFD[1644] = -2.22255943E+01;
  COFD[1645] = 5.51722375E+00;
  COFD[1646] = -4.66081431E-01;
  COFD[1647] = 1.88044011E-02;
  COFD[1648] = -2.12736166E+01;
  COFD[1649] = 5.47935225E+00;
  COFD[1650] = -4.80056796E-01;
  COFD[1651] = 2.01607180E-02;
  COFD[1652] = -2.09118417E+01;
  COFD[1653] = 4.72895031E+00;
  COFD[1654] = -3.33332771E-01;
  COFD[1655] = 1.18431478E-02;
  COFD[1656] = -2.09236897E+01;
  COFD[1657] = 4.72895031E+00;
  COFD[1658] = -3.33332771E-01;
  COFD[1659] = 1.18431478E-02;
  COFD[1660] = -2.24668858E+01;
  COFD[1661] = 5.49330641E+00;
  COFD[1662] = -4.60498247E-01;
  COFD[1663] = 1.84639199E-02;
  COFD[1664] = -2.24731226E+01;
  COFD[1665] = 5.49330641E+00;
  COFD[1666] = -4.60498247E-01;
  COFD[1667] = 1.84639199E-02;
  COFD[1668] = -2.02739012E+01;
  COFD[1669] = 5.10426133E+00;
  COFD[1670] = -4.41256919E-01;
  COFD[1671] = 1.88737290E-02;
  COFD[1672] = -1.43129867E+01;
  COFD[1673] = 3.31177824E+00;
  COFD[1674] = -2.18945280E-01;
  COFD[1675] = 9.64764419E-03;
  COFD[1676] = -1.83539845E+01;
  COFD[1677] = 4.98756925E+00;
  COFD[1678] = -4.27526072E-01;
  COFD[1679] = 1.83341755E-02;
  COFD[1680] = -1.76774947E+01;
  COFD[1681] = 4.24719726E+00;
  COFD[1682] = -3.38206061E-01;
  COFD[1683] = 1.47350654E-02;
  COFD[1684] = -1.91121670E+01;
  COFD[1685] = 4.61801405E+00;
  COFD[1686] = -3.83535652E-01;
  COFD[1687] = 1.65862513E-02;
  COFD[1688] = -1.76992903E+01;
  COFD[1689] = 4.24719726E+00;
  COFD[1690] = -3.38206061E-01;
  COFD[1691] = 1.47350654E-02;
  COFD[1692] = -2.13847376E+01;
  COFD[1693] = 5.17440955E+00;
  COFD[1694] = -4.04678430E-01;
  COFD[1695] = 1.54706350E-02;
  COFD[1696] = -1.91208247E+01;
  COFD[1697] = 4.61801405E+00;
  COFD[1698] = -3.83535652E-01;
  COFD[1699] = 1.65862513E-02;
  COFD[1700] = -1.91291085E+01;
  COFD[1701] = 4.61801405E+00;
  COFD[1702] = -3.83535652E-01;
  COFD[1703] = 1.65862513E-02;
  COFD[1704] = -1.99803480E+01;
  COFD[1705] = 4.97875278E+00;
  COFD[1706] = -4.26485475E-01;
  COFD[1707] = 1.82931933E-02;
  COFD[1708] = -1.99235836E+01;
  COFD[1709] = 4.95514826E+00;
  COFD[1710] = -4.23691395E-01;
  COFD[1711] = 1.81828318E-02;
  COFD[1712] = -1.87684982E+01;
  COFD[1713] = 4.49191492E+00;
  COFD[1714] = -3.68041771E-01;
  COFD[1715] = 1.59498676E-02;
  COFD[1716] = -2.18590684E+01;
  COFD[1717] = 5.47368915E+00;
  COFD[1718] = -4.79424291E-01;
  COFD[1719] = 2.01372920E-02;
  COFD[1720] = -2.20947854E+01;
  COFD[1721] = 5.36053938E+00;
  COFD[1722] = -4.36434519E-01;
  COFD[1723] = 1.71484255E-02;
  COFD[1724] = -2.14323161E+01;
  COFD[1725] = 5.37331605E+00;
  COFD[1726] = -4.70491203E-01;
  COFD[1727] = 1.99134666E-02;
  COFD[1728] = -2.21885121E+01;
  COFD[1729] = 5.59472344E+00;
  COFD[1730] = -4.91421518E-01;
  COFD[1731] = 2.05117088E-02;
  COFD[1732] = -2.19982906E+01;
  COFD[1733] = 5.51276597E+00;
  COFD[1734] = -4.83701824E-01;
  COFD[1735] = 2.02915297E-02;
  COFD[1736] = -2.01223105E+01;
  COFD[1737] = 5.03101171E+00;
  COFD[1738] = -4.32665019E-01;
  COFD[1739] = 1.85372086E-02;
  COFD[1740] = -2.24554479E+01;
  COFD[1741] = 5.49330641E+00;
  COFD[1742] = -4.60498247E-01;
  COFD[1743] = 1.84639199E-02;
  COFD[1744] = -2.24668858E+01;
  COFD[1745] = 5.49330641E+00;
  COFD[1746] = -4.60498247E-01;
  COFD[1747] = 1.84639199E-02;
  COFD[1748] = -2.23842793E+01;
  COFD[1749] = 5.56066804E+00;
  COFD[1750] = -4.88405706E-01;
  COFD[1751] = 2.04357330E-02;
  COFD[1752] = -2.23903039E+01;
  COFD[1753] = 5.56066804E+00;
  COFD[1754] = -4.88405706E-01;
  COFD[1755] = 2.04357330E-02;
  COFD[1756] = -1.87434421E+01;
  COFD[1757] = 4.48550694E+00;
  COFD[1758] = -3.67277454E-01;
  COFD[1759] = 1.59194755E-02;
  COFD[1760] = -1.43135474E+01;
  COFD[1761] = 3.31177824E+00;
  COFD[1762] = -2.18945280E-01;
  COFD[1763] = 9.64764419E-03;
  COFD[1764] = -1.83542714E+01;
  COFD[1765] = 4.98756925E+00;
  COFD[1766] = -4.27526072E-01;
  COFD[1767] = 1.83341755E-02;
  COFD[1768] = -1.76808635E+01;
  COFD[1769] = 4.24719726E+00;
  COFD[1770] = -3.38206061E-01;
  COFD[1771] = 1.47350654E-02;
  COFD[1772] = -1.91174394E+01;
  COFD[1773] = 4.61801405E+00;
  COFD[1774] = -3.83535652E-01;
  COFD[1775] = 1.65862513E-02;
  COFD[1776] = -1.77028097E+01;
  COFD[1777] = 4.24719726E+00;
  COFD[1778] = -3.38206061E-01;
  COFD[1779] = 1.47350654E-02;
  COFD[1780] = -2.13884026E+01;
  COFD[1781] = 5.17440955E+00;
  COFD[1782] = -4.04678430E-01;
  COFD[1783] = 1.54706350E-02;
  COFD[1784] = -1.91261897E+01;
  COFD[1785] = 4.61801405E+00;
  COFD[1786] = -3.83535652E-01;
  COFD[1787] = 1.65862513E-02;
  COFD[1788] = -1.91345636E+01;
  COFD[1789] = 4.61801405E+00;
  COFD[1790] = -3.83535652E-01;
  COFD[1791] = 1.65862513E-02;
  COFD[1792] = -1.99835677E+01;
  COFD[1793] = 4.97875278E+00;
  COFD[1794] = -4.26485475E-01;
  COFD[1795] = 1.82931933E-02;
  COFD[1796] = -1.99269591E+01;
  COFD[1797] = 4.95514826E+00;
  COFD[1798] = -4.23691395E-01;
  COFD[1799] = 1.81828318E-02;
  COFD[1800] = -1.87733780E+01;
  COFD[1801] = 4.49191492E+00;
  COFD[1802] = -3.68041771E-01;
  COFD[1803] = 1.59498676E-02;
  COFD[1804] = -2.18653022E+01;
  COFD[1805] = 5.47368915E+00;
  COFD[1806] = -4.79424291E-01;
  COFD[1807] = 2.01372920E-02;
  COFD[1808] = -2.20998692E+01;
  COFD[1809] = 5.36053938E+00;
  COFD[1810] = -4.36434519E-01;
  COFD[1811] = 1.71484255E-02;
  COFD[1812] = -2.14369847E+01;
  COFD[1813] = 5.37331605E+00;
  COFD[1814] = -4.70491203E-01;
  COFD[1815] = 1.99134666E-02;
  COFD[1816] = -2.21933965E+01;
  COFD[1817] = 5.59472344E+00;
  COFD[1818] = -4.91421518E-01;
  COFD[1819] = 2.05117088E-02;
  COFD[1820] = -2.20033786E+01;
  COFD[1821] = 5.51276597E+00;
  COFD[1822] = -4.83701824E-01;
  COFD[1823] = 2.02915297E-02;
  COFD[1824] = -2.01283319E+01;
  COFD[1825] = 5.03101171E+00;
  COFD[1826] = -4.32665019E-01;
  COFD[1827] = 1.85372086E-02;
  COFD[1828] = -2.24615428E+01;
  COFD[1829] = 5.49330641E+00;
  COFD[1830] = -4.60498247E-01;
  COFD[1831] = 1.84639199E-02;
  COFD[1832] = -2.24731226E+01;
  COFD[1833] = 5.49330641E+00;
  COFD[1834] = -4.60498247E-01;
  COFD[1835] = 1.84639199E-02;
  COFD[1836] = -2.23903039E+01;
  COFD[1837] = 5.56066804E+00;
  COFD[1838] = -4.88405706E-01;
  COFD[1839] = 2.04357330E-02;
  COFD[1840] = -2.23964020E+01;
  COFD[1841] = 5.56066804E+00;
  COFD[1842] = -4.88405706E-01;
  COFD[1843] = 2.04357330E-02;
  COFD[1844] = -1.87483223E+01;
  COFD[1845] = 4.48550694E+00;
  COFD[1846] = -3.67277454E-01;
  COFD[1847] = 1.59194755E-02;
  COFD[1848] = -1.16906458E+01;
  COFD[1849] = 2.47469981E+00;
  COFD[1850] = -1.10436257E-01;
  COFD[1851] = 4.95273813E-03;
  COFD[1852] = -1.42894603E+01;
  COFD[1853] = 3.67490723E+00;
  COFD[1854] = -2.65114792E-01;
  COFD[1855] = 1.16092671E-02;
  COFD[1856] = -1.40756909E+01;
  COFD[1857] = 3.07549274E+00;
  COFD[1858] = -1.88889344E-01;
  COFD[1859] = 8.37152866E-03;
  COFD[1860] = -1.52414498E+01;
  COFD[1861] = 3.35922578E+00;
  COFD[1862] = -2.25181399E-01;
  COFD[1863] = 9.92132878E-03;
  COFD[1864] = -1.40949183E+01;
  COFD[1865] = 3.07549274E+00;
  COFD[1866] = -1.88889344E-01;
  COFD[1867] = 8.37152866E-03;
  COFD[1868] = -2.10643264E+01;
  COFD[1869] = 5.53614864E+00;
  COFD[1870] = -4.86046753E-01;
  COFD[1871] = 2.03659193E-02;
  COFD[1872] = -1.52486292E+01;
  COFD[1873] = 3.35922578E+00;
  COFD[1874] = -2.25181399E-01;
  COFD[1875] = 9.92132878E-03;
  COFD[1876] = -1.52554785E+01;
  COFD[1877] = 3.35922578E+00;
  COFD[1878] = -2.25181399E-01;
  COFD[1879] = 9.92132878E-03;
  COFD[1880] = -1.59633426E+01;
  COFD[1881] = 3.66853818E+00;
  COFD[1882] = -2.64346221E-01;
  COFD[1883] = 1.15784613E-02;
  COFD[1884] = -1.59327344E+01;
  COFD[1885] = 3.65620899E+00;
  COFD[1886] = -2.62933804E-01;
  COFD[1887] = 1.15253223E-02;
  COFD[1888] = -1.50031706E+01;
  COFD[1889] = 3.26223357E+00;
  COFD[1890] = -2.12746642E-01;
  COFD[1891] = 9.38912883E-03;
  COFD[1892] = -1.81432499E+01;
  COFD[1893] = 4.37565431E+00;
  COFD[1894] = -3.53906025E-01;
  COFD[1895] = 1.53760786E-02;
  COFD[1896] = -2.04833743E+01;
  COFD[1897] = 5.23112374E+00;
  COFD[1898] = -4.54967682E-01;
  COFD[1899] = 1.93570423E-02;
  COFD[1900] = -1.76002073E+01;
  COFD[1901] = 4.19171952E+00;
  COFD[1902] = -3.31354810E-01;
  COFD[1903] = 1.44520623E-02;
  COFD[1904] = -1.85864196E+01;
  COFD[1905] = 4.54915847E+00;
  COFD[1906] = -3.75000738E-01;
  COFD[1907] = 1.62324821E-02;
  COFD[1908] = -1.83249359E+01;
  COFD[1909] = 4.42045763E+00;
  COFD[1910] = -3.59451578E-01;
  COFD[1911] = 1.56056164E-02;
  COFD[1912] = -1.59884349E+01;
  COFD[1913] = 3.72220402E+00;
  COFD[1914] = -2.71150591E-01;
  COFD[1915] = 1.18665265E-02;
  COFD[1916] = -2.02646659E+01;
  COFD[1917] = 5.10426133E+00;
  COFD[1918] = -4.41256919E-01;
  COFD[1919] = 1.88737290E-02;
  COFD[1920] = -2.02739012E+01;
  COFD[1921] = 5.10426133E+00;
  COFD[1922] = -4.41256919E-01;
  COFD[1923] = 1.88737290E-02;
  COFD[1924] = -1.87434421E+01;
  COFD[1925] = 4.48550694E+00;
  COFD[1926] = -3.67277454E-01;
  COFD[1927] = 1.59194755E-02;
  COFD[1928] = -1.87483223E+01;
  COFD[1929] = 4.48550694E+00;
  COFD[1930] = -3.67277454E-01;
  COFD[1931] = 1.59194755E-02;
  COFD[1932] = -1.49828551E+01;
  COFD[1933] = 3.25781069E+00;
  COFD[1934] = -2.12199367E-01;
  COFD[1935] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 0;
  KTDIF[1] = 1;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 0.00000000E+00;
  COFTD[1] = 0.00000000E+00;
  COFTD[2] = 0.00000000E+00;
  COFTD[3] = 0.00000000E+00;
  COFTD[4] = -1.44152190E-01;
  COFTD[5] = -7.99993584E-05;
  COFTD[6] = 4.89707442E-08;
  COFTD[7] = -9.14277269E-12;
  COFTD[8] = 4.06676789E-01;
  COFTD[9] = 3.84699853E-05;
  COFTD[10] = -2.54843294E-08;
  COFTD[11] = 5.86294132E-12;
  COFTD[12] = 4.26576987E-01;
  COFTD[13] = 1.20406440E-04;
  COFTD[14] = -7.67293441E-08;
  COFTD[15] = 1.52089282E-11;
  COFTD[16] = 4.12890501E-01;
  COFTD[17] = 3.90577773E-05;
  COFTD[18] = -2.58737105E-08;
  COFTD[19] = 5.95252260E-12;
  COFTD[20] = 2.27466103E-02;
  COFTD[21] = 6.73071543E-04;
  COFTD[22] = -3.40932103E-07;
  COFTD[23] = 5.48493184E-11;
  COFTD[24] = 4.28228101E-01;
  COFTD[25] = 1.20872486E-04;
  COFTD[26] = -7.70263335E-08;
  COFTD[27] = 1.52677960E-11;
  COFTD[28] = 4.29786829E-01;
  COFTD[29] = 1.21312456E-04;
  COFTD[30] = -7.73067054E-08;
  COFTD[31] = 1.53233700E-11;
  COFTD[32] = 3.31188133E-01;
  COFTD[33] = 1.81325042E-04;
  COFTD[34] = -1.11095367E-07;
  COFTD[35] = 2.07634046E-11;
  COFTD[36] = 3.39554500E-01;
  COFTD[37] = 1.79333587E-04;
  COFTD[38] = -1.10134815E-07;
  COFTD[39] = 2.06425572E-11;
  COFTD[40] = 4.30602469E-01;
  COFTD[41] = 9.35955212E-05;
  COFTD[42] = -6.03979306E-08;
  COFTD[43] = 1.23114290E-11;
  COFTD[44] = 2.93190141E-01;
  COFTD[45] = 4.01428114E-04;
  COFTD[46] = -2.30704675E-07;
  COFTD[47] = 4.05174676E-11;
  COFTD[48] = 1.22692619E-01;
  COFTD[49] = 6.21274281E-04;
  COFTD[50] = -3.29963157E-07;
  COFTD[51] = 5.47158146E-11;
  COFTD[52] = 3.05611370E-01;
  COFTD[53] = 3.24503916E-04;
  COFTD[54] = -1.89888419E-07;
  COFTD[55] = 3.38661408E-11;
  COFTD[56] = 2.49016176E-01;
  COFTD[57] = 4.29034331E-04;
  COFTD[58] = -2.42667349E-07;
  COFTD[59] = 4.20799172E-11;
  COFTD[60] = 2.74035711E-01;
  COFTD[61] = 3.96247941E-04;
  COFTD[62] = -2.26856932E-07;
  COFTD[63] = 3.97175174E-11;
  COFTD[64] = 3.86105710E-01;
  COFTD[65] = 2.28759408E-04;
  COFTD[66] = -1.39424407E-07;
  COFTD[67] = 2.58988578E-11;
  COFTD[68] = 1.59288295E-01;
  COFTD[69] = 6.02831194E-04;
  COFTD[70] = -3.24836171E-07;
  COFTD[71] = 5.43906658E-11;
  COFTD[72] = 1.59990556E-01;
  COFTD[73] = 6.05488919E-04;
  COFTD[74] = -3.26268289E-07;
  COFTD[75] = 5.46304600E-11;
  COFTD[76] = 2.71945062E-01;
  COFTD[77] = 4.30812732E-04;
  COFTD[78] = -2.45083425E-07;
  COFTD[79] = 4.26911430E-11;
  COFTD[80] = 2.72586795E-01;
  COFTD[81] = 4.31829359E-04;
  COFTD[82] = -2.45661770E-07;
  COFTD[83] = 4.27918850E-11;
  COFTD[84] = 4.31330748E-01;
  COFTD[85] = 9.20535689E-05;
  COFTD[86] = -5.94508898E-08;
  COFTD[87] = 1.21437846E-11;
  COFTD[88] = 1.44152190E-01;
  COFTD[89] = 7.99993584E-05;
  COFTD[90] = -4.89707442E-08;
  COFTD[91] = 9.14277269E-12;
  COFTD[92] = 0.00000000E+00;
  COFTD[93] = 0.00000000E+00;
  COFTD[94] = 0.00000000E+00;
  COFTD[95] = 0.00000000E+00;
  COFTD[96] = 2.35281489E-01;
  COFTD[97] = 4.65667373E-04;
  COFTD[98] = -2.60938016E-07;
  COFTD[99] = 4.49268709E-11;
  COFTD[100] = 1.79839678E-01;
  COFTD[101] = 6.01720824E-04;
  COFTD[102] = -3.26432767E-07;
  COFTD[103] = 5.49110406E-11;
  COFTD[104] = 2.37051899E-01;
  COFTD[105] = 4.69171356E-04;
  COFTD[106] = -2.62901483E-07;
  COFTD[107] = 4.52649298E-11;
  COFTD[108] = -1.74351746E-01;
  COFTD[109] = 8.62242165E-04;
  COFTD[110] = -3.79543417E-07;
  COFTD[111] = 5.60259034E-11;
  COFTD[112] = 1.80186380E-01;
  COFTD[113] = 6.02880848E-04;
  COFTD[114] = -3.27062078E-07;
  COFTD[115] = 5.50169005E-11;
  COFTD[116] = 1.80513126E-01;
  COFTD[117] = 6.03974096E-04;
  COFTD[118] = -3.27655164E-07;
  COFTD[119] = 5.51166667E-11;
  COFTD[120] = 1.00038655E-01;
  COFTD[121] = 6.50465703E-04;
  COFTD[122] = -3.41777446E-07;
  COFTD[123] = 5.62776574E-11;
  COFTD[124] = 1.05123703E-01;
  COFTD[125] = 6.50663360E-04;
  COFTD[126] = -3.42563171E-07;
  COFTD[127] = 5.64801866E-11;
  COFTD[128] = 2.00119185E-01;
  COFTD[129] = 5.64791694E-04;
  COFTD[130] = -3.09444383E-07;
  COFTD[131] = 5.24137469E-11;
  COFTD[132] = -2.00308977E-02;
  COFTD[133] = 8.50438113E-04;
  COFTD[134] = -4.21063477E-07;
  COFTD[135] = 6.67958138E-11;
  COFTD[136] = -1.61357064E-01;
  COFTD[137] = 9.05917454E-04;
  COFTD[138] = -4.07877889E-07;
  COFTD[139] = 6.10624399E-11;
  COFTD[140] = 1.63244604E-02;
  COFTD[141] = 7.90131000E-04;
  COFTD[142] = -3.98291254E-07;
  COFTD[143] = 6.38849501E-11;
  COFTD[144] = -5.08743421E-02;
  COFTD[145] = 8.54340362E-04;
  COFTD[146] = -4.15925370E-07;
  COFTD[147] = 6.53061561E-11;
  COFTD[148] = -2.72323151E-02;
  COFTD[149] = 8.39182512E-04;
  COFTD[150] = -4.13848987E-07;
  COFTD[151] = 6.54926559E-11;
  COFTD[152] = 9.86932164E-02;
  COFTD[153] = 7.20973229E-04;
  COFTD[154] = -3.77134366E-07;
  COFTD[155] = 6.19201176E-11;
  COFTD[156] = -1.41640200E-01;
  COFTD[157] = 9.21402335E-04;
  COFTD[158] = -4.23209196E-07;
  COFTD[159] = 6.41398937E-11;
  COFTD[160] = -1.41951569E-01;
  COFTD[161] = 9.23427864E-04;
  COFTD[162] = -4.24139542E-07;
  COFTD[163] = 6.42808932E-11;
  COFTD[164] = -4.05264355E-02;
  COFTD[165] = 8.65034494E-04;
  COFTD[166] = -4.23754623E-07;
  COFTD[167] = 6.67873033E-11;
  COFTD[168] = -4.05741399E-02;
  COFTD[169] = 8.66052741E-04;
  COFTD[170] = -4.24253431E-07;
  COFTD[171] = 6.68659197E-11;
  COFTD[172] = 2.01521521E-01;
  COFTD[173] = 5.62743751E-04;
  COFTD[174] = -3.08519054E-07;
  COFTD[175] = 5.22805672E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[22];
  amrex::Real SIG[22];
  amrex::Real wt[22];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: H2
  // Imported from NIST
  Tci[0] = 33.145000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (2.015880 * 2.015880 * 12.964000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (2.015880 * 12.964000);
  acentric_i[0] = -0.219000;

  // species 1: H
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: O
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: O2
  // Imported from NIST
  Tci[3] = 154.581000;
  ai[3] = 1e6 * 0.42748 * Rcst * Rcst * Tci[3] * Tci[3] /
          (31.998800 * 31.998800 * 50.430466);
  bi[3] = 0.08664 * Rcst * Tci[3] / (31.998800 * 50.430466);
  acentric_i[3] = 0.022200;

  // species 4: OH
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: H2O
  // Imported from NIST
  Tci[5] = 647.096000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (18.015340 * 18.015340 * 220.640000);
  bi[5] = 0.08664 * Rcst * Tci[5] / (18.015340 * 220.640000);
  acentric_i[5] = 0.344300;

  // species 6: HO2
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: CH3
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: CH4
  // Imported from NIST
  Tci[9] = 190.560000;
  ai[9] = 1e6 * 0.42748 * Rcst * Rcst * Tci[9] * Tci[9] /
          (16.043030 * 16.043030 * 45.990000);
  bi[9] = 0.08664 * Rcst * Tci[9] / (16.043030 * 45.990000);
  acentric_i[9] = 0.011000;

  // species 10: CO
  // Imported from NIST
  Tci[10] = 132.850000;
  ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] /
           (28.010000 * 28.010000 * 34.940000);
  bi[10] = 0.08664 * Rcst * Tci[10] / (28.010000 * 34.940000);
  acentric_i[10] = 0.045000;

  // species 11: CO2
  // Imported from NIST
  Tci[11] = 304.120000;
  ai[11] = 1e6 * 0.42748 * Rcst * Rcst * Tci[11] * Tci[11] /
           (44.009950 * 44.009950 * 73.740000);
  bi[11] = 0.08664 * Rcst * Tci[11] / (44.009950 * 73.740000);
  acentric_i[11] = 0.225000;

  // species 12: CH2O
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: C2H2
  // Imported from NIST
  Tci[13] = 308.300000;
  ai[13] = 1e6 * 0.42748 * Rcst * Rcst * Tci[13] * Tci[13] /
           (26.038000 * 26.038000 * 61.140000);
  bi[13] = 0.08664 * Rcst * Tci[13] / (26.038000 * 61.140000);
  acentric_i[13] = 0.189000;

  // species 14: C2H4
  // Imported from NIST
  Tci[14] = 282.340000;
  ai[14] = 1e6 * 0.42748 * Rcst * Rcst * Tci[14] * Tci[14] /
           (28.054000 * 28.054000 * 50.410000);
  bi[14] = 0.08664 * Rcst * Tci[14] / (28.054000 * 50.410000);
  acentric_i[14] = 0.087000;

  // species 15: C2H6
  // Imported from NIST
  Tci[15] = 305.320000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (30.070120 * 30.070120 * 48.720000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (30.070120 * 48.720000);
  acentric_i[15] = 0.099000;

  // species 16: HCCO
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: CH2CO
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: CH3CHO
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: aC3H5
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C3H6
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: N2
  // Imported from NIST
  Tci[21] = 126.192000;
  ai[21] = 1e6 * 0.42748 * Rcst * Rcst * Tci[21] * Tci[21] /
           (28.013400 * 28.013400 * 33.958000);
  bi[21] = 0.08664 * Rcst * Tci[21] / (28.013400 * 33.958000);
  acentric_i[21] = 0.037200;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: H2
  // Imported from NIST
  sqrtOneOverTc[0] = 1.7369646834812e-01;
  sqrtAsti[0] = 2.4824229305911e+05;
  Bi[0] = 9.1362254169923e+00;
  Fomega[0] = 1.3798618890700e-01;

  // species 1: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[1] = 7.2391579785311e-02;
  sqrtAsti[1] = 5.8451221185793e+05;
  Bi[1] = 4.4006634563410e+00;
  Fomega[1] = 4.8508000000000e-01;

  // species 2: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 9.7460146948181e-02;
  sqrtAsti[2] = 4.2500156012386e+04;
  Bi[2] = 6.6930234851885e-01;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: O2
  // Imported from NIST
  sqrtOneOverTc[3] = 8.0430717653241e-02;
  sqrtAsti[3] = 3.6980081924740e+04;
  Bi[3] = 6.9005216444999e-01;
  Fomega[3] = 5.1945301904908e-01;

  // species 4: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[4] = 9.7460146948181e-02;
  sqrtAsti[4] = 3.9981183985545e+04;
  Bi[4] = 6.2963299076575e-01;
  Fomega[4] = 4.8508000000000e-01;

  // species 5: H2O
  // Imported from NIST
  sqrtOneOverTc[5] = 3.9311140369715e-02;
  sqrtAsti[5] = 1.3145468419592e+05;
  Bi[5] = 1.1727204136223e+00;
  Fomega[5] = 1.0013577274636e+00;

  // species 6: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[6] = 8.4114315417892e-02;
  sqrtAsti[6] = 3.3657825710980e+04;
  Bi[6] = 6.4505861132042e-01;
  Fomega[6] = 4.8508000000000e-01;

  // species 7: H2O2
  // Computed from Lennard-Jones
  sqrtOneOverTc[7] = 8.4114315417892e-02;
  sqrtAsti[7] = 3.2660380884830e+04;
  Bi[7] = 6.2594239211036e-01;
  Fomega[7] = 4.8508000000000e-01;

  // species 8: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[8] = 7.2642504557751e-02;
  sqrtAsti[8] = 9.8558148656101e+04;
  Bi[8] = 1.8791630452967e+00;
  Fomega[8] = 4.8508000000000e-01;

  // species 9: CH4
  // Imported from NIST
  sqrtOneOverTc[9] = 7.2440948474968e-02;
  sqrtAsti[9] = 9.5215046085708e+04;
  Bi[9] = 1.8605203320660e+00;
  Fomega[9] = 5.0213035482700e-01;

  // species 10: CO
  // Imported from NIST
  sqrtOneOverTc[10] = 8.6759935530451e-02;
  sqrtAsti[10] = 4.3619324712923e+04;
  Bi[10] = 9.7786303823350e-01;
  Fomega[10] = 5.5459948367500e-01;

  // species 11: CO2
  // Imported from NIST
  sqrtOneOverTc[11] = 5.7342616962522e-02;
  sqrtAsti[11] = 4.3745610142919e+04;
  Bi[11] = 6.7506167841745e-01;
  Fomega[11] = 8.2653709187500e-01;

  // species 12: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[12] = 3.9062261583604e-02;
  sqrtAsti[12] = 8.4274889632487e+04;
  Bi[12] = 7.9341968505345e-01;
  Fomega[12] = 4.8508000000000e-01;

  // species 13: C2H2
  // Imported from NIST
  sqrtOneOverTc[13] = 5.6952558345025e-02;
  sqrtAsti[13] = 8.2318059295808e+04;
  Bi[13] = 1.3950602011188e+00;
  Fomega[13] = 7.7293553202700e-01;

  // species 14: C2H4
  // Imported from NIST
  sqrtOneOverTc[14] = 5.9513267432530e-02;
  sqrtAsti[14] = 7.7056842134487e+04;
  Bi[14] = 1.4381805192666e+00;
  Fomega[14] = 6.1893034120300e-01;

  // species 15: C2H6
  // Imported from NIST
  sqrtOneOverTc[15] = 5.7229819101749e-02;
  sqrtAsti[15] = 7.9078494187583e+04;
  Bi[15] = 1.5012924285481e+00;
  Fomega[15] = 6.3721234098700e-01;

  // species 16: HCCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[16] = 7.1174827921716e-02;
  sqrtAsti[16] = 1.9669985462832e+04;
  Bi[16] = 1.9608582502049e-01;
  Fomega[16] = 4.8508000000000e-01;

  // species 17: CH2CO
  // Computed from Lennard-Jones
  sqrtOneOverTc[17] = 4.1747340173827e-02;
  sqrtAsti[17] = 6.5499293944176e+04;
  Bi[17] = 7.6640249759188e-01;
  Fomega[17] = 4.8508000000000e-01;

  // species 18: CH3CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[18] = 4.1747340173827e-02;
  sqrtAsti[18] = 6.2501845947638e+04;
  Bi[18] = 7.3132957554014e-01;
  Fomega[18] = 4.8508000000000e-01;

  // species 19: aC3H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 5.3367780663448e-02;
  sqrtAsti[19] = 7.3719333603301e+04;
  Bi[19] = 1.5501433096373e+00;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[20] = 5.3367780663448e-02;
  sqrtAsti[20] = 7.1953475180922e+04;
  Bi[20] = 1.5130114815887e+00;
  Fomega[20] = 4.8508000000000e-01;

  // species 21: N2
  // Imported from NIST
  sqrtOneOverTc[21] = 8.9019282240563e-02;
  sqrtAsti[21] = 4.2022983929562e+04;
  Bi[21] = 9.5560052221563e-01;
  Fomega[21] = 5.4259343186608e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

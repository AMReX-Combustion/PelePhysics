#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  H
1  O
2  C
3  N
*/

// Species
#define H2_ID 0
#define H_ID 1
#define O_ID 2
#define O2_ID 3
#define OH_ID 4
#define H2O_ID 5
#define HO2_ID 6
#define H2O2_ID 7
#define CH3_ID 8
#define CH4_ID 9
#define CO_ID 10
#define CO2_ID 11
#define CH2O_ID 12
#define C2H2_ID 13
#define C2H4_ID 14
#define C2H6_ID 15
#define HCCO_ID 16
#define CH2CO_ID 17
#define CH3CHO_ID 18
#define aC3H5_ID 19
#define C3H6_ID 20
#define N2_ID 21

#define NUM_ELEMENTS 4
#define NUM_SPECIES 22
#define NUM_IONS 0
#define NUM_REACTIONS 206

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(int* i, int* nspec, int* ki, int* nu);
void CKKFKR(
  amrex::Real* P,
  amrex::Real* T,
  amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 22;
  ii = 206;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.4960317460317460;  // H2
  imw_new[1] = 0.9920634920634921;  // H
  imw_new[2] = 0.0625039064941559;  // O
  imw_new[3] = 0.0312519532470779;  // O2
  imw_new[4] = 0.0587993179279120;  // OH
  imw_new[5] = 0.0555092978073827;  // H2O
  imw_new[6] = 0.0302975216627280;  // HO2
  imw_new[7] = 0.0293996589639560;  // H2O2
  imw_new[8] = 0.0665114732291320;  // CH3
  imw_new[9] = 0.0623324814560868;  // CH4
  imw_new[10] = 0.0357015351660121; // CO
  imw_new[11] = 0.0227226249176305; // CO2
  imw_new[12] = 0.0333044694598015; // CH2O
  imw_new[13] = 0.0384054074813734; // C2H2
  imw_new[14] = 0.0356455407428531; // C2H4
  imw_new[15] = 0.0332557366145660; // C2H6
  imw_new[16] = 0.0243730044602598; // HCCO
  imw_new[17] = 0.0237885672145967; // CH2CO
  imw_new[18] = 0.0226999296302181; // CH3CHO
  imw_new[19] = 0.0243468945535997; // aC3H5
  imw_new[20] = 0.0237636938285687; // C3H6
  imw_new[21] = 0.0356964374955379; // N2
}

//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 2.016000;   // H2
  mw_new[1] = 1.008000;   // H
  mw_new[2] = 15.999000;  // O
  mw_new[3] = 31.998000;  // O2
  mw_new[4] = 17.007000;  // OH
  mw_new[5] = 18.015000;  // H2O
  mw_new[6] = 33.006000;  // HO2
  mw_new[7] = 34.014000;  // H2O2
  mw_new[8] = 15.035000;  // CH3
  mw_new[9] = 16.043000;  // CH4
  mw_new[10] = 28.010000; // CO
  mw_new[11] = 44.009000; // CO2
  mw_new[12] = 30.026000; // CH2O
  mw_new[13] = 26.038000; // C2H2
  mw_new[14] = 28.054000; // C2H4
  mw_new[15] = 30.070000; // C2H6
  mw_new[16] = 41.029000; // HCCO
  mw_new[17] = 42.037000; // CH2CO
  mw_new[18] = 44.053000; // CH3CHO
  mw_new[19] = 41.073000; // aC3H5
  mw_new[20] = 42.081000; // C3H6
  mw_new[21] = 28.014000; // N2
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[22] = {
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0312519532470779, // O2
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0302975216627280, // HO2
  0.0293996589639560, // H2O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0333044694598015, // CH2O
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0226999296302181, // CH3CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0356964374955379, // N2
};
const amrex::Real h_global_imw[22] = {
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0625039064941559, // O
  0.0312519532470779, // O2
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0302975216627280, // HO2
  0.0293996589639560, // H2O2
  0.0665114732291320, // CH3
  0.0623324814560868, // CH4
  0.0357015351660121, // CO
  0.0227226249176305, // CO2
  0.0333044694598015, // CH2O
  0.0384054074813734, // C2H2
  0.0356455407428531, // C2H4
  0.0332557366145660, // C2H6
  0.0243730044602598, // HCCO
  0.0237885672145967, // CH2CO
  0.0226999296302181, // CH3CHO
  0.0243468945535997, // aC3H5
  0.0237636938285687, // C3H6
  0.0356964374955379, // N2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[22] = {
  2.016000,  // H2
  1.008000,  // H
  15.999000, // O
  31.998000, // O2
  17.007000, // OH
  18.015000, // H2O
  33.006000, // HO2
  34.014000, // H2O2
  15.035000, // CH3
  16.043000, // CH4
  28.010000, // CO
  44.009000, // CO2
  30.026000, // CH2O
  26.038000, // C2H2
  28.054000, // C2H4
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  44.053000, // CH3CHO
  41.073000, // aC3H5
  42.081000, // C3H6
  28.014000, // N2
};
const amrex::Real h_global_mw[22] = {
  2.016000,  // H2
  1.008000,  // H
  15.999000, // O
  31.998000, // O2
  17.007000, // OH
  18.015000, // H2O
  33.006000, // HO2
  34.014000, // H2O2
  15.035000, // CH3
  16.043000, // CH4
  28.010000, // CO
  44.009000, // CO2
  30.026000, // CH2O
  26.038000, // C2H2
  28.054000, // C2H4
  30.070000, // C2H6
  41.029000, // HCCO
  42.037000, // CH2CO
  44.053000, // CH3CHO
  41.073000, // aC3H5
  42.081000, // C3H6
  28.014000, // N2
};

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 1: H
    species[1] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: O2
    species[3] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 4: OH
    species[4] = +2.99201543e+00 - 2.40131752e-03 * tc[1] +
                 4.61793841e-06 * tc[2] - 3.88113333e-09 * tc[3] +
                 1.36411470e-12 * tc[4];
    // species 5: H2O
    species[5] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 6: HO2
    species[6] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: CH3
    species[8] = +2.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 9: CH4
    species[9] = +4.14987613e+00 - 1.36709788e-02 * tc[1] +
                 4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                 1.66693956e-11 * tc[4];
    // species 10: CO
    species[10] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 11: CO2
    species[11] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 3.19328580e-03 * tc[1] +
                  4.75349210e-05 * tc[2] - 5.74586110e-08 * tc[3] +
                  2.19311120e-11 * tc[4];
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 21: N2
    species[21] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 1: H
    species[1] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: O2
    species[3] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 4: OH
    species[4] = +2.09288767e+00 + 5.48429716e-04 * tc[1] +
                 1.26505228e-07 * tc[2] - 8.79461556e-11 * tc[3] +
                 1.17412376e-14 * tc[4];
    // species 5: H2O
    species[5] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 6: HO2
    species[6] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: CH3
    species[8] = +1.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 9: CH4
    species[9] = -9.25148505e-01 + 1.33909467e-02 * tc[1] -
                 5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                 1.01815230e-13 * tc[4];
    // species 10: CO
    species[10] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 11: CO2
    species[11] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 1.17230590e-02 * tc[1] -
                  4.22631370e-06 * tc[2] + 6.83724510e-10 * tc[3] -
                  4.09848630e-14 * tc[4];
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 21: N2
    species[21] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 1: H
    species[1] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 2: O
    species[2] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 3: O2
    species[3] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 4: OH
    species[4] = +3.99201543e+00 - 2.40131752e-03 * tc[1] +
                 4.61793841e-06 * tc[2] - 3.88113333e-09 * tc[3] +
                 1.36411470e-12 * tc[4];
    // species 5: H2O
    species[5] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 6: HO2
    species[6] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 5.42822417e-04 * tc[1] +
                 1.67335701e-05 * tc[2] - 2.15770813e-08 * tc[3] +
                 8.62454363e-12 * tc[4];
    // species 8: CH3
    species[8] = +3.67359040e+00 + 2.01095175e-03 * tc[1] +
                 5.73021856e-06 * tc[2] - 6.87117425e-09 * tc[3] +
                 2.54385734e-12 * tc[4];
    // species 9: CH4
    species[9] = +5.14987613e+00 - 1.36709788e-02 * tc[1] +
                 4.91800599e-05 * tc[2] - 4.84743026e-08 * tc[3] +
                 1.66693956e-11 * tc[4];
    // species 10: CO
    species[10] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 11: CO2
    species[11] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 1.81188721e-02 * tc[1] -
                  1.73947474e-05 * tc[2] + 9.34397568e-09 * tc[3] -
                  2.01457615e-12 * tc[4];
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 3.19328580e-03 * tc[1] +
                  4.75349210e-05 * tc[2] - 5.74586110e-08 * tc[3] +
                  2.19311120e-11 * tc[4];
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 1.98138210e-02 * tc[1] +
                  1.24970600e-05 * tc[2] - 3.33555550e-08 * tc[3] +
                  1.58465710e-11 * tc[4];
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 2.09251800e-02 * tc[1] +
                  4.48679400e-06 * tc[2] - 1.66891200e-08 * tc[3] +
                  7.15814600e-12 * tc[4];
    // species 21: N2
    species[21] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485400e-12 * tc[4];
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 1: H
    species[1] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 2: O
    species[2] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 3: O2
    species[3] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 4: OH
    species[4] = +3.09288767e+00 + 5.48429716e-04 * tc[1] +
                 1.26505228e-07 * tc[2] - 8.79461556e-11 * tc[3] +
                 1.17412376e-14 * tc[4];
    // species 5: H2O
    species[5] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 6: HO2
    species[6] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 4.90831694e-03 * tc[1] -
                 1.90139225e-06 * tc[2] + 3.71185986e-10 * tc[3] -
                 2.87908305e-14 * tc[4];
    // species 8: CH3
    species[8] = +2.28571772e+00 + 7.23990037e-03 * tc[1] -
                 2.98714348e-06 * tc[2] + 5.95684644e-10 * tc[3] -
                 4.67154394e-14 * tc[4];
    // species 9: CH4
    species[9] = +7.48514950e-02 + 1.33909467e-02 * tc[1] -
                 5.73285809e-06 * tc[2] + 1.22292535e-09 * tc[3] -
                 1.01815230e-13 * tc[4];
    // species 10: CO
    species[10] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 11: CO2
    species[11] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 9.00359745e-03 * tc[1] -
                  4.16939635e-06 * tc[2] + 9.23345882e-10 * tc[3] -
                  7.94838201e-14 * tc[4];
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 1.17230590e-02 * tc[1] -
                  4.22631370e-06 * tc[2] + 6.83724510e-10 * tc[3] -
                  4.09848630e-14 * tc[4];
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 1.43247310e-02 * tc[1] -
                  5.67816320e-06 * tc[2] + 1.10808010e-09 * tc[3] -
                  9.03638870e-14 * tc[4];
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 1.49083400e-02 * tc[1] -
                  4.94989900e-06 * tc[2] + 7.21202200e-10 * tc[3] -
                  3.76620400e-14 * tc[4];
    // species 21: N2
    species[21] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                  5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 3: O2
    species[3] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 4: OH
    species[4] = +3.615080560000000e+03 * invT + 4.095940888000000e+00 -
                 3.992015430000000e+00 * tc[0] + 1.200658760000000e-03 * tc[1] -
                 7.696564016666666e-07 * tc[2] + 3.234277775000000e-10 * tc[3] -
                 6.820573500000000e-14 * tc[4];
    // species 5: H2O
    species[5] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 6: HO2
    species[6] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.770258210000000e+04 * invT + 8.410619499999998e-01 -
                 4.276112690000000e+00 * tc[0] + 2.714112085000000e-04 * tc[1] -
                 2.788928350000000e-06 * tc[2] + 1.798090108333333e-09 * tc[3] -
                 4.312271815000000e-13 * tc[4];
    // species 8: CH3
    species[8] = +1.644499880000000e+04 * invT + 2.069026070000000e+00 -
                 3.673590400000000e+00 * tc[0] - 1.005475875000000e-03 * tc[1] -
                 9.550364266666668e-07 * tc[2] + 5.725978541666666e-10 * tc[3] -
                 1.271928670000000e-13 * tc[4];
    // species 9: CH4
    species[9] = -1.024664760000000e+04 * invT + 9.791179889999999e+00 -
                 5.149876130000000e+00 * tc[0] + 6.835489400000000e-03 * tc[1] -
                 8.196676650000000e-06 * tc[2] + 4.039525216666667e-09 * tc[3] -
                 8.334697800000000e-13 * tc[4];
    // species 10: CO
    species[10] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 11: CO2
    species[11] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 13: C2H2
    species[13] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 14: C2H4
    species[14] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 15: C2H6
    species[15] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 16: HCCO
    species[16] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * tc[0] -
                  8.827510500000000e-03 * tc[1] +
                  3.954850166666666e-06 * tc[2] -
                  1.439646583333334e-09 * tc[3] + 2.533240550000000e-13 * tc[4];
    // species 17: CH2CO
    species[17] = -7.042918040000000e+03 * invT - 1.007981170000000e+01 -
                  2.135836300000000e+00 * tc[0] -
                  9.059436050000000e-03 * tc[1] +
                  2.899124566666666e-06 * tc[2] -
                  7.786646400000000e-10 * tc[3] + 1.007288075000000e-13 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.157287800000000e+04 * invT + 6.264436000000000e-01 -
                  4.729459500000000e+00 * tc[0] +
                  1.596642900000000e-03 * tc[1] -
                  7.922486833333334e-06 * tc[2] +
                  4.788217583333333e-09 * tc[3] - 1.096555600000000e-12 * tc[4];
    // species 19: aC3H5
    species[19] = +1.924562900000000e+04 * invT - 1.581003050000000e+01 -
                  1.363183500000000e+00 * tc[0] -
                  9.906910499999999e-03 * tc[1] -
                  2.082843333333333e-06 * tc[2] +
                  2.779629583333333e-09 * tc[3] - 7.923285500000000e-13 * tc[4];
    // species 20: C3H6
    species[20] = +1.074826000000000e+03 * invT - 1.465203300000000e+01 -
                  1.493307000000000e+00 * tc[0] -
                  1.046259000000000e-02 * tc[1] -
                  7.477990000000000e-07 * tc[2] +
                  1.390760000000000e-09 * tc[3] - 3.579073000000000e-13 * tc[4];
    // species 21: N2
    species[21] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * tc[0] -
                  7.041202000000000e-04 * tc[1] +
                  6.605369999999999e-07 * tc[2] -
                  4.701262500000001e-10 * tc[3] + 1.222427000000000e-13 * tc[4];
  } else {
    // species 0: H2
    species[0] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 1: H
    species[1] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 2: O
    species[2] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 3: O2
    species[3] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 4: OH
    species[4] = +3.858657000000000e+03 * invT - 1.383808430000000e+00 -
                 3.092887670000000e+00 * tc[0] - 2.742148580000000e-04 * tc[1] -
                 2.108420466666667e-08 * tc[2] + 7.328846300000000e-12 * tc[3] -
                 5.870618800000000e-16 * tc[4];
    // species 5: H2O
    species[5] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 6: HO2
    species[6] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.786178770000000e+04 * invT + 1.248846229999999e+00 -
                 4.165002850000000e+00 * tc[0] - 2.454158470000000e-03 * tc[1] +
                 3.168987083333333e-07 * tc[2] - 3.093216550000000e-11 * tc[3] +
                 1.439541525000000e-15 * tc[4];
    // species 8: CH3
    species[8] = +1.677558430000000e+04 * invT - 6.194354070000000e+00 -
                 2.285717720000000e+00 * tc[0] - 3.619950185000000e-03 * tc[1] +
                 4.978572466666667e-07 * tc[2] - 4.964038700000000e-11 * tc[3] +
                 2.335771970000000e-15 * tc[4];
    // species 9: CH4
    species[9] = -9.468344590000001e+03 * invT - 1.836246650500000e+01 -
                 7.485149500000000e-02 * tc[0] - 6.695473350000000e-03 * tc[1] +
                 9.554763483333333e-07 * tc[2] - 1.019104458333333e-10 * tc[3] +
                 5.090761500000000e-15 * tc[4];
    // species 10: CO
    species[10] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 11: CO2
    species[11] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 13: C2H2
    species[13] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 14: C2H4
    species[14] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 15: C2H6
    species[15] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 16: HCCO
    species[16] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * tc[0] -
                  2.042670050000000e-03 * tc[1] +
                  2.655757833333333e-07 * tc[2] -
                  2.385504333333333e-11 * tc[3] + 9.703915999999999e-16 * tc[4];
    // species 17: CH2CO
    species[17] = -7.551053110000000e+03 * invT + 3.879050115000000e+00 -
                  4.511297320000000e+00 * tc[0] -
                  4.501798725000000e-03 * tc[1] +
                  6.948993916666666e-07 * tc[2] -
                  7.694549016666667e-11 * tc[3] + 3.974191005000000e-15 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.259312200000000e+04 * invT + 8.884902499999999e+00 -
                  5.404110800000000e+00 * tc[0] -
                  5.861529500000000e-03 * tc[1] +
                  7.043856166666666e-07 * tc[2] -
                  5.697704250000000e-11 * tc[3] + 2.049243150000000e-15 * tc[4];
    // species 19: aC3H5
    species[19] = +1.748244900000000e+04 * invT + 1.774383770000000e+01 -
                  6.500787700000000e+00 * tc[0] -
                  7.162365500000000e-03 * tc[1] +
                  9.463605333333332e-07 * tc[2] -
                  9.234000833333333e-11 * tc[3] + 4.518194349999999e-15 * tc[4];
    // species 20: C3H6
    species[20] = -9.235703000000000e+02 * invT + 2.004560700000000e+01 -
                  6.732257000000000e+00 * tc[0] -
                  7.454170000000000e-03 * tc[1] +
                  8.249831666666666e-07 * tc[2] -
                  6.010018333333334e-11 * tc[3] + 1.883102000000000e-15 * tc[4];
    // species 21: N2
    species[21] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * tc[0] -
                  7.439884000000000e-04 * tc[1] +
                  9.474600000000001e-08 * tc[2] -
                  8.414198333333333e-12 * tc[3] + 3.376675500000000e-16 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +7.079729340000000e+04 * invT + 1.405805570000000e+00 -
                 3.489816650000000e+00 * tc[0] - 1.619177705000000e-04 * tc[1] +
                 2.814984416666667e-07 * tc[2] - 2.635144391666666e-10 * tc[3] +
                 7.030453350000001e-14 * tc[4];
    // species 1: CH2
    species[1] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 2: CH2*
    species[2] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * tc[0] + 1.183307095000000e-03 * tc[1] -
                 1.372160366666667e-06 * tc[2] + 5.573466508333334e-10 * tc[3] -
                 9.715736850000000e-14 * tc[4];
    // species 3: HCO
    species[3] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                 4.221185840000000e+00 * tc[0] + 1.621962660000000e-03 * tc[1] -
                 2.296657433333333e-06 * tc[2] + 1.109534108333333e-09 * tc[3] -
                 2.168844325000000e-13 * tc[4];
    // species 4: CH3O
    species[4] = +9.786011000000000e+02 * invT - 1.104597300000000e+01 -
                 2.106204000000000e+00 * tc[0] - 3.608297500000000e-03 * tc[1] -
                 8.897453333333333e-07 * tc[2] + 6.148030000000000e-10 * tc[3] -
                 1.037805000000000e-13 * tc[4];
    // species 5: H2CC
    species[5] = +4.862179400000000e+04 * invT - 2.638842700000001e+00 -
                 3.281548300000000e+00 * tc[0] - 3.488239550000000e-03 * tc[1] +
                 3.975874000000000e-07 * tc[2] + 1.008702666666667e-10 * tc[3] -
                 4.909477250000000e-14 * tc[4];
    // species 6: C2H3
    species[6] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                 3.212466450000000e+00 * tc[0] - 7.573958100000000e-04 * tc[1] -
                 4.320156866666666e-06 * tc[2] + 2.980482058333333e-09 * tc[3] -
                 7.357543650000000e-13 * tc[4];
    // species 7: C2H5
    species[7] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                 4.306465680000000e+00 * tc[0] + 2.093294460000000e-03 * tc[1] -
                 8.285713450000000e-06 * tc[2] + 4.992721716666666e-09 * tc[3] -
                 1.152545020000000e-12 * tc[4];
    // species 8: CH2CHO
    species[8] = +1.521476600000000e+03 * invT - 6.162391100000001e+00 -
                 3.409062400000000e+00 * tc[0] - 5.369287000000000e-03 * tc[1] -
                 3.152487500000000e-07 * tc[2] - 5.965485916666667e-10 * tc[3] -
                 1.433692550000000e-13 * tc[4];
    // species 9: nC3H7
    species[9] = +1.031234600000000e+04 * invT - 2.008691670000000e+01 -
                 1.049117300000000e+00 * tc[0] - 1.300448650000000e-02 * tc[1] -
                 3.923752666666667e-07 * tc[2] + 1.632927666666667e-09 * tc[3] -
                 4.686010350000000e-13 * tc[4];
  } else {
    // species 0: CH
    species[0] = +7.101243640000001e+04 * invT - 2.606515260000000e+00 -
                 2.878464730000000e+00 * tc[0] - 4.854568405000000e-04 * tc[1] -
                 2.407427583333333e-08 * tc[2] + 1.089065408333333e-11 * tc[3] -
                 8.803969149999999e-16 * tc[4];
    // species 1: CH2
    species[1] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 2: CH2*
    species[2] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * tc[0] - 2.327943185000000e-03 * tc[1] +
                 3.353199116666667e-07 * tc[2] - 3.482550000000000e-11 * tc[3] +
                 1.698581825000000e-15 * tc[4];
    // species 3: HCO
    species[3] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                 2.772174380000000e+00 * tc[0] - 2.478477630000000e-03 * tc[1] +
                 4.140760216666667e-07 * tc[2] - 4.909681483333334e-11 * tc[3] +
                 2.667543555000000e-15 * tc[4];
    // species 4: CH3O
    species[4] = +1.278325200000000e+02 * invT + 8.412240000000000e-01 -
                 3.770799000000000e+00 * tc[0] - 3.935748500000000e-03 * tc[1] +
                 4.427306666666667e-07 * tc[2] - 3.287025833333333e-11 * tc[3] +
                 1.056308000000000e-15 * tc[4];
    // species 5: H2CC
    species[5] = +4.831668800000000e+04 * invT + 3.637796990000000e+00 -
                 4.278034000000000e+00 * tc[0] - 2.378140200000000e-03 * tc[1] +
                 2.716834833333333e-07 * tc[2] - 2.121900500000000e-11 * tc[3] +
                 7.443189499999999e-16 * tc[4];
    // species 6: C2H3
    species[6] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                 3.016724000000000e+00 * tc[0] - 5.165114600000000e-03 * tc[1] +
                 7.801372483333333e-07 * tc[2] - 8.480274000000000e-11 * tc[3] +
                 4.313035205000000e-15 * tc[4];
    // species 7: C2H5
    species[7] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                 1.954656420000000e+00 * tc[0] - 8.698636100000001e-03 * tc[1] +
                 1.330344446666667e-06 * tc[2] - 1.460147408333333e-10 * tc[3] +
                 7.482078800000000e-15 * tc[4];
    // species 8: CH2CHO
    species[8] = +4.903217800000000e+02 * invT + 1.100775780000000e+01 -
                 5.975669900000000e+00 * tc[0] - 4.065295700000000e-03 * tc[1] +
                 4.572707500000000e-07 * tc[2] - 3.391920083333333e-11 * tc[3] +
                 1.088008550000000e-15 * tc[4];
    // species 9: nC3H7
    species[9] = +7.976223600000000e+03 * invT + 2.322504490000000e+01 -
                 7.709747900000000e+00 * tc[0] - 8.015742500000001e-03 * tc[1] +
                 8.786706333333332e-07 * tc[2] - 6.324029333333334e-11 * tc[3] +
                 1.943135950000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 2: O
    species[2] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 3: O2
    species[3] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 4: OH
    species[4] = +3.61508056e+03 * invT + 3.09594089e+00 -
                 3.99201543e+00 * tc[0] + 1.20065876e-03 * tc[1] -
                 7.69656402e-07 * tc[2] + 3.23427778e-10 * tc[3] -
                 6.82057350e-14 * tc[4];
    // species 5: H2O
    species[5] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 6: HO2
    species[6] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 7: H2O2
    species[7] = -1.77025821e+04 * invT - 1.58938050e-01 -
                 4.27611269e+00 * tc[0] + 2.71411208e-04 * tc[1] -
                 2.78892835e-06 * tc[2] + 1.79809011e-09 * tc[3] -
                 4.31227182e-13 * tc[4];
    // species 8: CH3
    species[8] = +1.64449988e+04 * invT + 1.06902607e+00 -
                 3.67359040e+00 * tc[0] - 1.00547588e-03 * tc[1] -
                 9.55036427e-07 * tc[2] + 5.72597854e-10 * tc[3] -
                 1.27192867e-13 * tc[4];
    // species 9: CH4
    species[9] = -1.02466476e+04 * invT + 8.79117989e+00 -
                 5.14987613e+00 * tc[0] + 6.83548940e-03 * tc[1] -
                 8.19667665e-06 * tc[2] + 4.03952522e-09 * tc[3] -
                 8.33469780e-13 * tc[4];
    // species 10: CO
    species[10] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 11: CO2
    species[11] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 13: C2H2
    species[13] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 14: C2H4
    species[14] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 15: C2H6
    species[15] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 16: HCCO
    species[16] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * tc[0] - 8.82751050e-03 * tc[1] +
                  3.95485017e-06 * tc[2] - 1.43964658e-09 * tc[3] +
                  2.53324055e-13 * tc[4];
    // species 17: CH2CO
    species[17] = -7.04291804e+03 * invT - 1.10798117e+01 -
                  2.13583630e+00 * tc[0] - 9.05943605e-03 * tc[1] +
                  2.89912457e-06 * tc[2] - 7.78664640e-10 * tc[3] +
                  1.00728807e-13 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.15728780e+04 * invT - 3.73556400e-01 -
                  4.72945950e+00 * tc[0] + 1.59664290e-03 * tc[1] -
                  7.92248683e-06 * tc[2] + 4.78821758e-09 * tc[3] -
                  1.09655560e-12 * tc[4];
    // species 19: aC3H5
    species[19] = +1.92456290e+04 * invT - 1.68100305e+01 -
                  1.36318350e+00 * tc[0] - 9.90691050e-03 * tc[1] -
                  2.08284333e-06 * tc[2] + 2.77962958e-09 * tc[3] -
                  7.92328550e-13 * tc[4];
    // species 20: C3H6
    species[20] = +1.07482600e+03 * invT - 1.56520330e+01 -
                  1.49330700e+00 * tc[0] - 1.04625900e-02 * tc[1] -
                  7.47799000e-07 * tc[2] + 1.39076000e-09 * tc[3] -
                  3.57907300e-13 * tc[4];
    // species 21: N2
    species[21] = -1.02089990e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                  6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                  1.22242700e-13 * tc[4];
  } else {
    // species 0: H2
    species[0] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 1: H
    species[1] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 2: O
    species[2] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 3: O2
    species[3] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 4: OH
    species[4] = +3.85865700e+03 * invT - 2.38380843e+00 -
                 3.09288767e+00 * tc[0] - 2.74214858e-04 * tc[1] -
                 2.10842047e-08 * tc[2] + 7.32884630e-12 * tc[3] -
                 5.87061880e-16 * tc[4];
    // species 5: H2O
    species[5] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 6: HO2
    species[6] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 7: H2O2
    species[7] = -1.78617877e+04 * invT + 2.48846230e-01 -
                 4.16500285e+00 * tc[0] - 2.45415847e-03 * tc[1] +
                 3.16898708e-07 * tc[2] - 3.09321655e-11 * tc[3] +
                 1.43954153e-15 * tc[4];
    // species 8: CH3
    species[8] = +1.67755843e+04 * invT - 7.19435407e+00 -
                 2.28571772e+00 * tc[0] - 3.61995018e-03 * tc[1] +
                 4.97857247e-07 * tc[2] - 4.96403870e-11 * tc[3] +
                 2.33577197e-15 * tc[4];
    // species 9: CH4
    species[9] = -9.46834459e+03 * invT - 1.93624665e+01 -
                 7.48514950e-02 * tc[0] - 6.69547335e-03 * tc[1] +
                 9.55476348e-07 * tc[2] - 1.01910446e-10 * tc[3] +
                 5.09076150e-15 * tc[4];
    // species 10: CO
    species[10] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 11: CO2
    species[11] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 12: CH2O
    species[12] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 13: C2H2
    species[13] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 14: C2H4
    species[14] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 15: C2H6
    species[15] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 16: HCCO
    species[16] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * tc[0] - 2.04267005e-03 * tc[1] +
                  2.65575783e-07 * tc[2] - 2.38550433e-11 * tc[3] +
                  9.70391600e-16 * tc[4];
    // species 17: CH2CO
    species[17] = -7.55105311e+03 * invT + 2.87905011e+00 -
                  4.51129732e+00 * tc[0] - 4.50179872e-03 * tc[1] +
                  6.94899392e-07 * tc[2] - 7.69454902e-11 * tc[3] +
                  3.97419100e-15 * tc[4];
    // species 18: CH3CHO
    species[18] = -2.25931220e+04 * invT + 7.88490250e+00 -
                  5.40411080e+00 * tc[0] - 5.86152950e-03 * tc[1] +
                  7.04385617e-07 * tc[2] - 5.69770425e-11 * tc[3] +
                  2.04924315e-15 * tc[4];
    // species 19: aC3H5
    species[19] = +1.74824490e+04 * invT + 1.67438377e+01 -
                  6.50078770e+00 * tc[0] - 7.16236550e-03 * tc[1] +
                  9.46360533e-07 * tc[2] - 9.23400083e-11 * tc[3] +
                  4.51819435e-15 * tc[4];
    // species 20: C3H6
    species[20] = -9.23570300e+02 * invT + 1.90456070e+01 -
                  6.73225700e+00 * tc[0] - 7.45417000e-03 * tc[1] +
                  8.24983167e-07 * tc[2] - 6.01001833e-11 * tc[3] +
                  1.88310200e-15 * tc[4];
    // species 21: N2
    species[21] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                  9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                  3.37667550e-16 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +2.99201543e+00 - 1.20065876e-03 * tc[1] +
                 1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
                 2.72822940e-13 * tc[4] + 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +3.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +2.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +4.14987613e+00 - 6.83548940e-03 * tc[1] +
                 1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                 3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +1.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +1.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +3.72945950e+00 - 1.59664290e-03 * tc[1] +
                  1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
                  4.38622240e-12 * tc[4] - 2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +3.63183500e-01 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +4.93307000e-01 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +2.09288767e+00 + 2.74214858e-04 * tc[1] +
                 4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
                 2.34824752e-15 * tc[4] + 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +3.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +1.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = -9.25148505e-01 + 6.69547335e-03 * tc[1] -
                 1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                 2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +4.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +3.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.40411080e+00 + 5.86152950e-03 * tc[1] -
                  1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
                  8.19697260e-15 * tc[4] - 2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +5.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +5.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 1: H
    species[1] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 3: O2
    species[3] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 4: OH
    species[4] = +3.99201543e+00 - 1.20065876e-03 * tc[1] +
                 1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
                 2.72822940e-13 * tc[4] + 3.61508056e+03 * invT;
    // species 5: H2O
    species[5] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 6: HO2
    species[6] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 7: H2O2
    species[7] = +4.27611269e+00 - 2.71411208e-04 * tc[1] +
                 5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
                 1.72490873e-12 * tc[4] - 1.77025821e+04 * invT;
    // species 8: CH3
    species[8] = +3.67359040e+00 + 1.00547588e-03 * tc[1] +
                 1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
                 5.08771468e-13 * tc[4] + 1.64449988e+04 * invT;
    // species 9: CH4
    species[9] = +5.14987613e+00 - 6.83548940e-03 * tc[1] +
                 1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
                 3.33387912e-12 * tc[4] - 1.02466476e+04 * invT;
    // species 10: CO
    species[10] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 11: CO2
    species[11] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 12: CH2O
    species[12] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 13: C2H2
    species[13] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 14: C2H4
    species[14] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 15: C2H6
    species[15] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 16: HCCO
    species[16] = +2.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 + 9.05943605e-03 * tc[1] -
                  5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
                  4.02915230e-13 * tc[4] - 7.04291804e+03 * invT;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 - 1.59664290e-03 * tc[1] +
                  1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
                  4.38622240e-12 * tc[4] - 2.15728780e+04 * invT;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 + 9.90691050e-03 * tc[1] +
                  4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
                  3.16931420e-12 * tc[4] + 1.92456290e+04 * invT;
    // species 20: C3H6
    species[20] = +1.49330700e+00 + 1.04625900e-02 * tc[1] +
                  1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
                  1.43162920e-12 * tc[4] + 1.07482600e+03 * invT;
    // species 21: N2
    species[21] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 1: H
    species[1] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 2: O
    species[2] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 3: O2
    species[3] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 4: OH
    species[4] = +3.09288767e+00 + 2.74214858e-04 * tc[1] +
                 4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
                 2.34824752e-15 * tc[4] + 3.85865700e+03 * invT;
    // species 5: H2O
    species[5] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 6: HO2
    species[6] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 7: H2O2
    species[7] = +4.16500285e+00 + 2.45415847e-03 * tc[1] -
                 6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
                 5.75816610e-15 * tc[4] - 1.78617877e+04 * invT;
    // species 8: CH3
    species[8] = +2.28571772e+00 + 3.61995018e-03 * tc[1] -
                 9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
                 9.34308788e-15 * tc[4] + 1.67755843e+04 * invT;
    // species 9: CH4
    species[9] = +7.48514950e-02 + 6.69547335e-03 * tc[1] -
                 1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
                 2.03630460e-14 * tc[4] - 9.46834459e+03 * invT;
    // species 10: CO
    species[10] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 11: CO2
    species[11] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 12: CH2O
    species[12] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 13: C2H2
    species[13] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 14: C2H4
    species[14] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 15: C2H6
    species[15] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 16: HCCO
    species[16] = +5.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 + 4.50179872e-03 * tc[1] -
                  1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
                  1.58967640e-14 * tc[4] - 7.55105311e+03 * invT;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 + 5.86152950e-03 * tc[1] -
                  1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
                  8.19697260e-15 * tc[4] - 2.25931220e+04 * invT;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 + 7.16236550e-03 * tc[1] -
                  1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
                  1.80727774e-14 * tc[4] + 1.74824490e+04 * invT;
    // species 20: C3H6
    species[20] = +6.73225700e+00 + 7.45417000e-03 * tc[1] -
                  1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
                  7.53240800e-15 * tc[4] - 9.23570300e+02 * invT;
    // species 21: N2
    species[21] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                  1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: CH
    species[0] = +3.48981665e+00 + 1.61917771e-04 * tc[1] -
                 5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
                 2.81218134e-13 * tc[4] + 7.07972934e+04 * invT;
    // species 1: CH2
    species[1] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 2: CH2*
    species[2] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 3: HCO
    species[3] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                 4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                 8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 4: CH3O
    species[4] = +2.10620400e+00 + 3.60829750e-03 * tc[1] +
                 1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
                 4.15122000e-13 * tc[4] + 9.78601100e+02 * invT;
    // species 5: H2CC
    species[5] = +3.28154830e+00 + 3.48823955e-03 * tc[1] -
                 7.95174800e-07 * tc[2] - 3.02610800e-10 * tc[3] +
                 1.96379090e-13 * tc[4] + 4.86217940e+04 * invT;
    // species 6: C2H3
    species[6] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                 8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                 2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 7: C2H5
    species[7] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                 1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                 4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 8: CH2CHO
    species[8] = +3.40906240e+00 + 5.36928700e-03 * tc[1] +
                 6.30497500e-07 * tc[2] + 1.78964578e-09 * tc[3] +
                 5.73477020e-13 * tc[4] + 1.52147660e+03 * invT;
    // species 9: nC3H7
    species[9] = +1.04911730e+00 + 1.30044865e-02 * tc[1] +
                 7.84750533e-07 * tc[2] - 4.89878300e-09 * tc[3] +
                 1.87440414e-12 * tc[4] + 1.03123460e+04 * invT;
  } else {
    // species 0: CH
    species[0] = +2.87846473e+00 + 4.85456840e-04 * tc[1] +
                 4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
                 3.52158766e-15 * tc[4] + 7.10124364e+04 * invT;
    // species 1: CH2
    species[1] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 2: CH2*
    species[2] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 3: HCO
    species[3] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                 8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                 1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 4: CH3O
    species[4] = +3.77079900e+00 + 3.93574850e-03 * tc[1] -
                 8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
                 4.22523200e-15 * tc[4] + 1.27832520e+02 * invT;
    // species 5: H2CC
    species[5] = +4.27803400e+00 + 2.37814020e-03 * tc[1] -
                 5.43366967e-07 * tc[2] + 6.36570150e-11 * tc[3] -
                 2.97727580e-15 * tc[4] + 4.83166880e+04 * invT;
    // species 6: C2H3
    species[6] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                 1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                 1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 7: C2H5
    species[7] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                 2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                 2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 8: CH2CHO
    species[8] = +5.97566990e+00 + 4.06529570e-03 * tc[1] -
                 9.14541500e-07 * tc[2] + 1.01757603e-10 * tc[3] -
                 4.35203420e-15 * tc[4] + 4.90321780e+02 * invT;
    // species 9: nC3H7
    species[9] = +7.70974790e+00 + 8.01574250e-03 * tc[1] -
                 1.75734127e-06 * tc[2] + 1.89720880e-10 * tc[3] -
                 7.77254380e-15 * tc[4] + 7.97622360e+03 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 1: H
    species[1] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 2: O
    species[2] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 3: O2
    species[3] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 4: OH
    species[4] = +3.99201543e+00 * tc[0] - 2.40131752e-03 * tc[1] +
                 2.30896920e-06 * tc[2] - 1.29371111e-09 * tc[3] +
                 3.41028675e-13 * tc[4] - 1.03925458e-01;
    // species 5: H2O
    species[5] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 6: HO2
    species[6] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 7: H2O2
    species[7] = +4.27611269e+00 * tc[0] - 5.42822417e-04 * tc[1] +
                 8.36678505e-06 * tc[2] - 7.19236043e-09 * tc[3] +
                 2.15613591e-12 * tc[4] + 3.43505074e+00;
    // species 8: CH3
    species[8] = +3.67359040e+00 * tc[0] + 2.01095175e-03 * tc[1] +
                 2.86510928e-06 * tc[2] - 2.29039142e-09 * tc[3] +
                 6.35964335e-13 * tc[4] + 1.60456433e+00;
    // species 9: CH4
    species[9] = +5.14987613e+00 * tc[0] - 1.36709788e-02 * tc[1] +
                 2.45900299e-05 * tc[2] - 1.61581009e-08 * tc[3] +
                 4.16734890e-12 * tc[4] - 4.64130376e+00;
    // species 10: CO
    species[10] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 11: CO2
    species[11] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 12: CH2O
    species[12] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 13: C2H2
    species[13] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 14: C2H4
    species[14] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 15: C2H6
    species[15] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 16: HCCO
    species[16] = +2.25172140e+00 * tc[0] + 1.76550210e-02 * tc[1] -
                  1.18645505e-05 * tc[2] + 5.75858633e-09 * tc[3] -
                  1.26662028e-12 * tc[4] + 1.24904170e+01;
    // species 17: CH2CO
    species[17] = +2.13583630e+00 * tc[0] + 1.81188721e-02 * tc[1] -
                  8.69737370e-06 * tc[2] + 3.11465856e-09 * tc[3] -
                  5.03644037e-13 * tc[4] + 1.22156480e+01;
    // species 18: CH3CHO
    species[18] = +4.72945950e+00 * tc[0] - 3.19328580e-03 * tc[1] +
                  2.37674605e-05 * tc[2] - 1.91528703e-08 * tc[3] +
                  5.48277800e-12 * tc[4] + 4.10301590e+00;
    // species 19: aC3H5
    species[19] = +1.36318350e+00 * tc[0] + 1.98138210e-02 * tc[1] +
                  6.24853000e-06 * tc[2] - 1.11185183e-08 * tc[3] +
                  3.96164275e-12 * tc[4] + 1.71732140e+01;
    // species 20: C3H6
    species[20] = +1.49330700e+00 * tc[0] + 2.09251800e-02 * tc[1] +
                  2.24339700e-06 * tc[2] - 5.56304000e-09 * tc[3] +
                  1.78953650e-12 * tc[4] + 1.61453400e+01;
    // species 21: N2
    species[21] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                  1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                  6.11213500e-13 * tc[4] + 3.95037200e+00;
  } else {
    // species 0: H2
    species[0] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 1: H
    species[1] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 2: O
    species[2] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 3: O2
    species[3] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 4: OH
    species[4] = +3.09288767e+00 * tc[0] + 5.48429716e-04 * tc[1] +
                 6.32526140e-08 * tc[2] - 2.93153852e-11 * tc[3] +
                 2.93530940e-15 * tc[4] + 4.47669610e+00;
    // species 5: H2O
    species[5] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 6: HO2
    species[6] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 7: H2O2
    species[7] = +4.16500285e+00 * tc[0] + 4.90831694e-03 * tc[1] -
                 9.50696125e-07 * tc[2] + 1.23728662e-10 * tc[3] -
                 7.19770763e-15 * tc[4] + 2.91615662e+00;
    // species 8: CH3
    species[8] = +2.28571772e+00 * tc[0] + 7.23990037e-03 * tc[1] -
                 1.49357174e-06 * tc[2] + 1.98561548e-10 * tc[3] -
                 1.16788599e-14 * tc[4] + 8.48007179e+00;
    // species 9: CH4
    species[9] = +7.48514950e-02 * tc[0] + 1.33909467e-02 * tc[1] -
                 2.86642905e-06 * tc[2] + 4.07641783e-10 * tc[3] -
                 2.54538075e-14 * tc[4] + 1.84373180e+01;
    // species 10: CO
    species[10] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 11: CO2
    species[11] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 12: CH2O
    species[12] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 13: C2H2
    species[13] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 14: C2H4
    species[14] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 15: C2H6
    species[15] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 16: HCCO
    species[16] = +5.62820580e+00 * tc[0] + 4.08534010e-03 * tc[1] -
                  7.96727350e-07 * tc[2] + 9.54201733e-11 * tc[3] -
                  4.85195800e-15 * tc[4] - 3.93025950e+00;
    // species 17: CH2CO
    species[17] = +4.51129732e+00 * tc[0] + 9.00359745e-03 * tc[1] -
                  2.08469817e-06 * tc[2] + 3.07781961e-10 * tc[3] -
                  1.98709550e-14 * tc[4] + 6.32247205e-01;
    // species 18: CH3CHO
    species[18] = +5.40411080e+00 * tc[0] + 1.17230590e-02 * tc[1] -
                  2.11315685e-06 * tc[2] + 2.27908170e-10 * tc[3] -
                  1.02462158e-14 * tc[4] - 3.48079170e+00;
    // species 19: aC3H5
    species[19] = +6.50078770e+00 * tc[0] + 1.43247310e-02 * tc[1] -
                  2.83908160e-06 * tc[2] + 3.69360033e-10 * tc[3] -
                  2.25909717e-14 * tc[4] - 1.12430500e+01;
    // species 20: C3H6
    species[20] = +6.73225700e+00 * tc[0] + 1.49083400e-02 * tc[1] -
                  2.47494950e-06 * tc[2] + 2.40400733e-10 * tc[3] -
                  9.41551000e-15 * tc[4] - 1.33133500e+01;
    // species 21: N2
    species[21] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                  2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                  1.68833775e-15 * tc[4] + 5.98052800e+00;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[22];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result +=
      y[0] *
      (+2.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+2.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+3.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+3.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+3.99201543e+00 - 2.40131752e-03 * tc[1] + 4.61793841e-06 * tc[2] -
       3.88113333e-09 * tc[3] + 1.36411470e-12 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+4.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+4.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+3.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+5.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+3.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+2.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+4.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+8.08681094e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+3.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+4.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+2.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+2.13583630e+00 + 1.81188721e-02 * tc[1] - 1.73947474e-05 * tc[2] +
       9.34397568e-09 * tc[3] - 2.01457615e-12 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+4.72945950e+00 - 3.19328580e-03 * tc[1] + 4.75349210e-05 * tc[2] -
       5.74586110e-08 * tc[3] + 2.19311120e-11 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+1.36318350e+00 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+1.49330700e+00 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+3.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 0: H2
    result +=
      y[0] *
      (+3.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+2.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+3.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+3.09288767e+00 + 5.48429716e-04 * tc[1] + 1.26505228e-07 * tc[2] -
       8.79461556e-11 * tc[3] + 1.17412376e-14 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+3.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+4.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+4.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+2.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+7.48514950e-02 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+2.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+3.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+1.76069008e+00 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+4.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+2.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+1.07188150e+00 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+5.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+4.51129732e+00 + 9.00359745e-03 * tc[1] - 4.16939635e-06 * tc[2] +
       9.23345882e-10 * tc[3] - 7.94838201e-14 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+5.40411080e+00 + 1.17230590e-02 * tc[1] - 4.22631370e-06 * tc[2] +
       6.83724510e-10 * tc[3] - 4.09848630e-14 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+6.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+6.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+2.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[22];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result +=
      y[0] *
      (+1.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+1.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+2.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+2.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+2.99201543e+00 - 2.40131752e-03 * tc[1] + 4.61793841e-06 * tc[2] -
       3.88113333e-09 * tc[3] + 1.36411470e-12 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+3.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+3.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.27611269e+00 - 5.42822417e-04 * tc[1] + 1.67335701e-05 * tc[2] -
       2.15770813e-08 * tc[3] + 8.62454363e-12 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+2.67359040e+00 + 2.01095175e-03 * tc[1] + 5.73021856e-06 * tc[2] -
       6.87117425e-09 * tc[3] + 2.54385734e-12 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (+4.14987613e+00 - 1.36709788e-02 * tc[1] + 4.91800599e-05 * tc[2] -
       4.84743026e-08 * tc[3] + 1.66693956e-11 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+2.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+1.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+3.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (-1.91318906e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+2.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+3.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+1.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+1.13583630e+00 + 1.81188721e-02 * tc[1] - 1.73947474e-05 * tc[2] +
       9.34397568e-09 * tc[3] - 2.01457615e-12 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+3.72945950e+00 - 3.19328580e-03 * tc[1] + 4.75349210e-05 * tc[2] -
       5.74586110e-08 * tc[3] + 2.19311120e-11 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+3.63183500e-01 + 1.98138210e-02 * tc[1] + 1.24970600e-05 * tc[2] -
       3.33555550e-08 * tc[3] + 1.58465710e-11 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+4.93307000e-01 + 2.09251800e-02 * tc[1] + 4.48679400e-06 * tc[2] -
       1.66891200e-08 * tc[3] + 7.15814600e-12 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+2.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 0: H2
    result +=
      y[0] *
      (+2.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 1: H
    result +=
      y[1] *
      (+1.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 2: O
    result +=
      y[2] *
      (+1.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 3: O2
    result +=
      y[3] *
      (+2.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 4: OH
    result +=
      y[4] *
      (+2.09288767e+00 + 5.48429716e-04 * tc[1] + 1.26505228e-07 * tc[2] -
       8.79461556e-11 * tc[3] + 1.17412376e-14 * tc[4]) *
      0.0587993179279120;
    // species 5: H2O
    result +=
      y[5] *
      (+2.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 6: HO2
    result +=
      y[6] *
      (+3.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 7: H2O2
    result +=
      y[7] *
      (+3.16500285e+00 + 4.90831694e-03 * tc[1] - 1.90139225e-06 * tc[2] +
       3.71185986e-10 * tc[3] - 2.87908305e-14 * tc[4]) *
      0.0293996589639560;
    // species 8: CH3
    result +=
      y[8] *
      (+1.28571772e+00 + 7.23990037e-03 * tc[1] - 2.98714348e-06 * tc[2] +
       5.95684644e-10 * tc[3] - 4.67154394e-14 * tc[4]) *
      0.0665114732291320;
    // species 9: CH4
    result +=
      y[9] *
      (-9.25148505e-01 + 1.33909467e-02 * tc[1] - 5.73285809e-06 * tc[2] +
       1.22292535e-09 * tc[3] - 1.01815230e-13 * tc[4]) *
      0.0623324814560868;
    // species 10: CO
    result +=
      y[10] *
      (+1.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 11: CO2
    result +=
      y[11] *
      (+2.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 12: CH2O
    result +=
      y[12] *
      (+7.60690080e-01 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 13: C2H2
    result +=
      y[13] *
      (+3.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 14: C2H4
    result +=
      y[14] *
      (+1.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 15: C2H6
    result +=
      y[15] *
      (+7.18815000e-02 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 16: HCCO
    result +=
      y[16] *
      (+4.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 17: CH2CO
    result +=
      y[17] *
      (+3.51129732e+00 + 9.00359745e-03 * tc[1] - 4.16939635e-06 * tc[2] +
       9.23345882e-10 * tc[3] - 7.94838201e-14 * tc[4]) *
      0.0237885672145967;
    // species 18: CH3CHO
    result +=
      y[18] *
      (+4.40411080e+00 + 1.17230590e-02 * tc[1] - 4.22631370e-06 * tc[2] +
       6.83724510e-10 * tc[3] - 4.09848630e-14 * tc[4]) *
      0.0226999296302181;
    // species 19: aC3H5
    result +=
      y[19] *
      (+5.50078770e+00 + 1.43247310e-02 * tc[1] - 5.67816320e-06 * tc[2] +
       1.10808010e-09 * tc[3] - 9.03638870e-14 * tc[4]) *
      0.0243468945535997;
    // species 20: C3H6
    result +=
      y[20] *
      (+5.73225700e+00 + 1.49083400e-02 * tc[1] - 4.94989900e-06 * tc[2] +
       7.21202200e-10 * tc[3] - 3.76620400e-14 * tc[4]) *
      0.0237636938285687;
    // species 21: N2
    result +=
      y[21] *
      (+1.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[22];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result += y[0] *
              (+2.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+2.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+3.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+3.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+3.99201543e+00 - 1.20065876e-03 * tc[1] +
               1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
               2.72822940e-13 * tc[4] + 3.61508056e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+4.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+4.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+4.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+3.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+5.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+3.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+2.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+4.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+8.08681094e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+3.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+4.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+2.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+2.13583630e+00 + 9.05943605e-03 * tc[1] -
               5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
               4.02915230e-13 * tc[4] - 7.04291804e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+4.72945950e+00 - 1.59664290e-03 * tc[1] +
               1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
               4.38622240e-12 * tc[4] - 2.15728780e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+1.36318350e+00 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+1.49330700e+00 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+3.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 0: H2
    result += y[0] *
              (+3.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+2.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+3.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+3.09288767e+00 + 2.74214858e-04 * tc[1] +
               4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
               2.34824752e-15 * tc[4] + 3.85865700e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+3.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+4.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+4.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+2.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+7.48514950e-02 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+2.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+3.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+1.76069008e+00 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+4.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+2.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+1.07188150e+00 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+5.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+4.51129732e+00 + 4.50179872e-03 * tc[1] -
               1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
               1.58967640e-14 * tc[4] - 7.55105311e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+5.40411080e+00 + 5.86152950e-03 * tc[1] -
               1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
               8.19697260e-15 * tc[4] - 2.25931220e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+6.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+6.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+2.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[22];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 22; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: H2
    result += y[0] *
              (+1.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+1.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+2.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+2.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+2.99201543e+00 - 1.20065876e-03 * tc[1] +
               1.53931280e-06 * tc[2] - 9.70283332e-10 * tc[3] +
               2.72822940e-13 * tc[4] + 3.61508056e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+3.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+3.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+3.27611269e+00 - 2.71411208e-04 * tc[1] +
               5.57785670e-06 * tc[2] - 5.39427032e-09 * tc[3] +
               1.72490873e-12 * tc[4] - 1.77025821e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+2.67359040e+00 + 1.00547588e-03 * tc[1] +
               1.91007285e-06 * tc[2] - 1.71779356e-09 * tc[3] +
               5.08771468e-13 * tc[4] + 1.64449988e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (+4.14987613e+00 - 6.83548940e-03 * tc[1] +
               1.63933533e-05 * tc[2] - 1.21185757e-08 * tc[3] +
               3.33387912e-12 * tc[4] - 1.02466476e+04 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+2.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+1.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+3.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (-1.91318906e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+2.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+3.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+1.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+1.13583630e+00 + 9.05943605e-03 * tc[1] -
               5.79824913e-06 * tc[2] + 2.33599392e-09 * tc[3] -
               4.02915230e-13 * tc[4] - 7.04291804e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+3.72945950e+00 - 1.59664290e-03 * tc[1] +
               1.58449737e-05 * tc[2] - 1.43646527e-08 * tc[3] +
               4.38622240e-12 * tc[4] - 2.15728780e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+3.63183500e-01 + 9.90691050e-03 * tc[1] +
               4.16568667e-06 * tc[2] - 8.33888875e-09 * tc[3] +
               3.16931420e-12 * tc[4] + 1.92456290e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+4.93307000e-01 + 1.04625900e-02 * tc[1] +
               1.49559800e-06 * tc[2] - 4.17228000e-09 * tc[3] +
               1.43162920e-12 * tc[4] + 1.07482600e+03 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+2.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 0: H2
    result += y[0] *
              (+2.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 1: H
    result += y[1] *
              (+1.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 2: O
    result += y[2] *
              (+1.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 3: O2
    result += y[3] *
              (+2.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 4: OH
    result += y[4] *
              (+2.09288767e+00 + 2.74214858e-04 * tc[1] +
               4.21684093e-08 * tc[2] - 2.19865389e-11 * tc[3] +
               2.34824752e-15 * tc[4] + 3.85865700e+03 * invT) *
              0.0587993179279120;
    // species 5: H2O
    result += y[5] *
              (+2.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 6: HO2
    result += y[6] *
              (+3.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 7: H2O2
    result += y[7] *
              (+3.16500285e+00 + 2.45415847e-03 * tc[1] -
               6.33797417e-07 * tc[2] + 9.27964965e-11 * tc[3] -
               5.75816610e-15 * tc[4] - 1.78617877e+04 * invT) *
              0.0293996589639560;
    // species 8: CH3
    result += y[8] *
              (+1.28571772e+00 + 3.61995018e-03 * tc[1] -
               9.95714493e-07 * tc[2] + 1.48921161e-10 * tc[3] -
               9.34308788e-15 * tc[4] + 1.67755843e+04 * invT) *
              0.0665114732291320;
    // species 9: CH4
    result += y[9] *
              (-9.25148505e-01 + 6.69547335e-03 * tc[1] -
               1.91095270e-06 * tc[2] + 3.05731338e-10 * tc[3] -
               2.03630460e-14 * tc[4] - 9.46834459e+03 * invT) *
              0.0623324814560868;
    // species 10: CO
    result += y[10] *
              (+1.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 11: CO2
    result += y[11] *
              (+2.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 12: CH2O
    result += y[12] *
              (+7.60690080e-01 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 13: C2H2
    result += y[13] *
              (+3.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 14: C2H4
    result += y[14] *
              (+1.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 15: C2H6
    result += y[15] *
              (+7.18815000e-02 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 16: HCCO
    result += y[16] *
              (+4.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 17: CH2CO
    result += y[17] *
              (+3.51129732e+00 + 4.50179872e-03 * tc[1] -
               1.38979878e-06 * tc[2] + 2.30836470e-10 * tc[3] -
               1.58967640e-14 * tc[4] - 7.55105311e+03 * invT) *
              0.0237885672145967;
    // species 18: CH3CHO
    result += y[18] *
              (+4.40411080e+00 + 5.86152950e-03 * tc[1] -
               1.40877123e-06 * tc[2] + 1.70931128e-10 * tc[3] -
               8.19697260e-15 * tc[4] - 2.25931220e+04 * invT) *
              0.0226999296302181;
    // species 19: aC3H5
    result += y[19] *
              (+5.50078770e+00 + 7.16236550e-03 * tc[1] -
               1.89272107e-06 * tc[2] + 2.77020025e-10 * tc[3] -
               1.80727774e-14 * tc[4] + 1.74824490e+04 * invT) *
              0.0243468945535997;
    // species 20: C3H6
    result += y[20] *
              (+5.73225700e+00 + 7.45417000e-03 * tc[1] -
               1.64996633e-06 * tc[2] + 1.80300550e-10 * tc[3] -
               7.53240800e-15 * tc[4] - 9.23570300e+02 * invT) *
              0.0237636938285687;
    // species 21: N2
    result += y[21] *
              (+1.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[22]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 22; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[22]; //  temporary storage
  amrex::Real x[22];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  // Now compute y to x conversion
  x[0] = y[0] / (2.016000 * YOW);
  x[1] = y[1] / (1.008000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (31.998000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (18.015000 * YOW);
  x[6] = y[6] / (33.006000 * YOW);
  x[7] = y[7] / (34.014000 * YOW);
  x[8] = y[8] / (15.035000 * YOW);
  x[9] = y[9] / (16.043000 * YOW);
  x[10] = y[10] / (28.010000 * YOW);
  x[11] = y[11] / (44.009000 * YOW);
  x[12] = y[12] / (30.026000 * YOW);
  x[13] = y[13] / (26.038000 * YOW);
  x[14] = y[14] / (28.054000 * YOW);
  x[15] = y[15] / (30.070000 * YOW);
  x[16] = y[16] / (41.029000 * YOW);
  x[17] = y[17] / (42.037000 * YOW);
  x[18] = y[18] / (44.053000 * YOW);
  x[19] = y[19] / (41.073000 * YOW);
  x[20] = y[20] / (42.081000 * YOW);
  x[21] = y[21] / (28.014000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 22; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 2.016000;                   // H2
  XW += x[1] * 1.008000;                   // H
  XW += x[2] * 15.999000;                  // O
  XW += x[3] * 31.998000;                  // O2
  XW += x[4] * 17.007000;                  // OH
  XW += x[5] * 18.015000;                  // H2O
  XW += x[6] * 33.006000;                  // HO2
  XW += x[7] * 34.014000;                  // H2O2
  XW += x[8] * 15.035000;                  // CH3
  XW += x[9] * 16.043000;                  // CH4
  XW += x[10] * 28.010000;                 // CO
  XW += x[11] * 44.009000;                 // CO2
  XW += x[12] * 30.026000;                 // CH2O
  XW += x[13] * 26.038000;                 // C2H2
  XW += x[14] * 28.054000;                 // C2H4
  XW += x[15] * 30.070000;                 // C2H6
  XW += x[16] * 41.029000;                 // HCCO
  XW += x[17] * 42.037000;                 // CH2CO
  XW += x[18] * 44.053000;                 // CH3CHO
  XW += x[19] * 41.073000;                 // aC3H5
  XW += x[20] * 42.081000;                 // C3H6
  XW += x[21] * 28.014000;                 // N2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 22; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 2.016000;                     // H2
  XW += x[1] * 1.008000;                     // H
  XW += x[2] * 15.999000;                    // O
  XW += x[3] * 31.998000;                    // O2
  XW += x[4] * 17.007000;                    // OH
  XW += x[5] * 18.015000;                    // H2O
  XW += x[6] * 33.006000;                    // HO2
  XW += x[7] * 34.014000;                    // H2O2
  XW += x[8] * 15.035000;                    // CH3
  XW += x[9] * 16.043000;                    // CH4
  XW += x[10] * 28.010000;                   // CO
  XW += x[11] * 44.009000;                   // CO2
  XW += x[12] * 30.026000;                   // CH2O
  XW += x[13] * 26.038000;                   // C2H2
  XW += x[14] * 28.054000;                   // C2H4
  XW += x[15] * 30.070000;                   // C2H6
  XW += x[16] * 41.029000;                   // HCCO
  XW += x[17] * 42.037000;                   // CH2CO
  XW += x[18] * 44.053000;                   // CH3CHO
  XW += x[19] * 41.073000;                   // aC3H5
  XW += x[20] * 42.081000;                   // C3H6
  XW += x[21] * 28.014000;                   // N2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;      //  see Eq 4 in CK Manual
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 2.016000;   // H2
  W += c[1] * 1.008000;   // H
  W += c[2] * 15.999000;  // O
  W += c[3] * 31.998000;  // O2
  W += c[4] * 17.007000;  // OH
  W += c[5] * 18.015000;  // H2O
  W += c[6] * 33.006000;  // HO2
  W += c[7] * 34.014000;  // H2O2
  W += c[8] * 15.035000;  // CH3
  W += c[9] * 16.043000;  // CH4
  W += c[10] * 28.010000; // CO
  W += c[11] * 44.009000; // CO2
  W += c[12] * 30.026000; // CH2O
  W += c[13] * 26.038000; // C2H2
  W += c[14] * 28.054000; // C2H4
  W += c[15] * 30.070000; // C2H6
  W += c[16] * 41.029000; // HCCO
  W += c[17] * 42.037000; // CH2CO
  W += c[18] * 44.053000; // CH3CHO
  W += c[19] * 41.073000; // aC3H5
  W += c[20] * 42.081000; // C3H6
  W += c[21] * 28.014000; // N2

  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 22; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 22; i++) {
    x[i] = y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
           * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    c[i] = y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  for (int i = 0; i < 22; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 22; i++) {
    c[i] = rho * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 2.016000 * XWinv;
  y[1] = x[1] * 1.008000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 31.998000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 18.015000 * XWinv;
  y[6] = x[6] * 33.006000 * XWinv;
  y[7] = x[7] * 34.014000 * XWinv;
  y[8] = x[8] * 15.035000 * XWinv;
  y[9] = x[9] * 16.043000 * XWinv;
  y[10] = x[10] * 28.010000 * XWinv;
  y[11] = x[11] * 44.009000 * XWinv;
  y[12] = x[12] * 30.026000 * XWinv;
  y[13] = x[13] * 26.038000 * XWinv;
  y[14] = x[14] * 28.054000 * XWinv;
  y[15] = x[15] * 30.070000 * XWinv;
  y[16] = x[16] * 41.029000 * XWinv;
  y[17] = x[17] * 42.037000 * XWinv;
  y[18] = x[18] * 44.053000 * XWinv;
  y[19] = x[19] * 41.073000 * XWinv;
  y[20] = x[20] * 42.081000 * XWinv;
  y[21] = x[21] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 22; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 22; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 2.016000;   // H2
  CW += c[1] * 1.008000;   // H
  CW += c[2] * 15.999000;  // O
  CW += c[3] * 31.998000;  // O2
  CW += c[4] * 17.007000;  // OH
  CW += c[5] * 18.015000;  // H2O
  CW += c[6] * 33.006000;  // HO2
  CW += c[7] * 34.014000;  // H2O2
  CW += c[8] * 15.035000;  // CH3
  CW += c[9] * 16.043000;  // CH4
  CW += c[10] * 28.010000; // CO
  CW += c[11] * 44.009000; // CO2
  CW += c[12] * 30.026000; // CH2O
  CW += c[13] * 26.038000; // C2H2
  CW += c[14] * 28.054000; // C2H4
  CW += c[15] * 30.070000; // C2H6
  CW += c[16] * 41.029000; // HCCO
  CW += c[17] * 42.037000; // CH2CO
  CW += c[18] * 44.053000; // CH3CHO
  CW += c[19] * 41.073000; // aC3H5
  CW += c[20] * 42.081000; // C3H6
  CW += c[21] * 28.014000; // N2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 2.016000 * CWinv;
  y[1] = c[1] * 1.008000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 31.998000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 18.015000 * CWinv;
  y[6] = c[6] * 33.006000 * CWinv;
  y[7] = c[7] * 34.014000 * CWinv;
  y[8] = c[8] * 15.035000 * CWinv;
  y[9] = c[9] * 16.043000 * CWinv;
  y[10] = c[10] * 28.010000 * CWinv;
  y[11] = c[11] * 44.009000 * CWinv;
  y[12] = c[12] * 30.026000 * CWinv;
  y[13] = c[13] * 26.038000 * CWinv;
  y[14] = c[14] * 28.054000 * CWinv;
  y[15] = c[15] * 30.070000 * CWinv;
  y[16] = c[16] * 41.029000 * CWinv;
  y[17] = c[17] * 42.037000 * CWinv;
  y[18] = c[18] * 44.053000 * CWinv;
  y[19] = c[19] * 41.073000 * CWinv;
  y[20] = c[20] * 42.081000 * CWinv;
  y[21] = c[21] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 4.124237409798234e+07;  // H2
  cvms[1] *= 8.248474819596468e+07;  // H
  cvms[2] *= 5.196863940342046e+06;  // O
  cvms[3] *= 2.598431970171023e+06;  // O2
  cvms[4] *= 4.888847308845322e+06;  // OH
  cvms[5] *= 4.615299815794193e+06;  // H2O
  cvms[6] *= 2.519076112874398e+06;  // HO2
  cvms[7] *= 2.444423654422661e+06;  // H2O2
  cvms[8] *= 5.530071578419182e+06;  // CH3
  cvms[9] *= 5.182610869633635e+06;  // CH4
  cvms[10] *= 2.968390795484913e+06; // CO
  cvms[11] *= 1.889264154639560e+06; // CO2
  cvms[12] *= 2.769087663409458e+06; // CH2O
  cvms[13] *= 3.193203248388218e+06; // C2H2
  cvms[14] *= 2.963735160103101e+06; // C2H4
  cvms[15] *= 2.765035789209591e+06; // C2H6
  cvms[16] *= 2.026484344769124e+06; // HCCO
  cvms[17] *= 1.977891528451897e+06; // CH2CO
  cvms[18] *= 1.887377163451579e+06; // CH3CHO
  cvms[19] *= 2.024313446340233e+06; // aC3H5
  cvms[20] *= 1.975823440068734e+06; // C3H6
  cvms[21] *= 2.967966951578939e+06; // N2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 4.124237409798234e+07;  // H2
  cpms[1] *= 8.248474819596468e+07;  // H
  cpms[2] *= 5.196863940342046e+06;  // O
  cpms[3] *= 2.598431970171023e+06;  // O2
  cpms[4] *= 4.888847308845322e+06;  // OH
  cpms[5] *= 4.615299815794193e+06;  // H2O
  cpms[6] *= 2.519076112874398e+06;  // HO2
  cpms[7] *= 2.444423654422661e+06;  // H2O2
  cpms[8] *= 5.530071578419182e+06;  // CH3
  cpms[9] *= 5.182610869633635e+06;  // CH4
  cpms[10] *= 2.968390795484913e+06; // CO
  cpms[11] *= 1.889264154639560e+06; // CO2
  cpms[12] *= 2.769087663409458e+06; // CH2O
  cpms[13] *= 3.193203248388218e+06; // C2H2
  cpms[14] *= 2.963735160103101e+06; // C2H4
  cpms[15] *= 2.765035789209591e+06; // C2H6
  cpms[16] *= 2.026484344769124e+06; // HCCO
  cpms[17] *= 1.977891528451897e+06; // CH2CO
  cpms[18] *= 1.887377163451579e+06; // CH3CHO
  cpms[19] *= 2.024313446340233e+06; // aC3H5
  cpms[20] *= 1.975823440068734e+06; // C3H6
  cpms[21] *= 2.967966951578939e+06; // N2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 22; i++) {
    ums[i] *= RT *
#if AMREX_DEVICE_COMPILE
              global_imw[i]
#else
              h_global_imw[i]
#endif
      ;
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 22; i++) {
    hms[i] *= RT *
#if AMREX_DEVICE_COMPILE
              global_imw[i]
#else
              h_global_imw[i]
#endif
      ;
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 4.124237409798234e+07;  // H2
  sms[1] *= 8.248474819596468e+07;  // H
  sms[2] *= 5.196863940342046e+06;  // O
  sms[3] *= 2.598431970171023e+06;  // O2
  sms[4] *= 4.888847308845322e+06;  // OH
  sms[5] *= 4.615299815794193e+06;  // H2O
  sms[6] *= 2.519076112874398e+06;  // HO2
  sms[7] *= 2.444423654422661e+06;  // H2O2
  sms[8] *= 5.530071578419182e+06;  // CH3
  sms[9] *= 5.182610869633635e+06;  // CH4
  sms[10] *= 2.968390795484913e+06; // CO
  sms[11] *= 1.889264154639560e+06; // CO2
  sms[12] *= 2.769087663409458e+06; // CH2O
  sms[13] *= 3.193203248388218e+06; // C2H2
  sms[14] *= 2.963735160103101e+06; // C2H4
  sms[15] *= 2.765035789209591e+06; // C2H6
  sms[16] *= 2.026484344769124e+06; // HCCO
  sms[17] *= 1.977891528451897e+06; // CH2CO
  sms[18] *= 1.887377163451579e+06; // CH3CHO
  sms[19] *= 2.024313446340233e+06; // aC3H5
  sms[20] *= 1.975823440068734e+06; // C3H6
  sms[21] *= 2.967966951578939e+06; // N2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* tc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 2: CH + CO (+M) <=> HCCO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[0] * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[0] = Corr * k_f[0] * (sc[10]);
    qr[0] = Corr * k_f[0] * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
            (sc[16]);
  }

  {
    // reaction 3: H + HCO (+M) <=> CH2O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[1] * 1350000000000 *
                             exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[1] = Corr * k_f[1] * (sc[1]);
    qr[1] = Corr * k_f[1] * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) *
            (sc[12]);
  }

  {
    // reaction 4: CH2 + H (+M) <=> CH3 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[2] * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[2] = Corr * k_f[2] * (sc[1]);
    qr[2] = Corr * k_f[2] * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) *
            (sc[8]);
  }

  {
    // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[3] * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[3] = Corr * k_f[3] * (sc[10]);
    qr[3] = Corr * k_f[3] * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
            (sc[17]);
  }

  {
    // reaction 6: CH2O + H (+M) <=> CH3O (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[4] * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[4] = Corr * k_f[4] * (sc[1] * sc[12]);
    qr[4] =
      Corr * k_f[4] * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) * (1.0);
  }

  {
    // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[5] * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[5] = Corr * k_f[5] * (sc[8]);
    qr[5] = Corr * k_f[5] * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) *
            (sc[18]);
  }

  {
    // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[6] * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[6] = Corr * k_f[6] * (1.0);
    qr[6] = Corr * k_f[6] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
            (refCinv) * (sc[1] * sc[13]);
  }

  {
    // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[7] * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[7] = Corr * k_f[7] * (sc[1] * sc[17]);
    qr[7] =
      Corr * k_f[7] * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) * (1.0);
  }

  {
    // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[8] * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[8] = Corr * k_f[8] * (sc[1]);
    qr[8] = Corr * k_f[8] * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) *
            (sc[14]);
  }

  {
    // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[9] * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[9] = Corr * k_f[9] * (sc[8]);
    qr[9] = Corr * k_f[9] * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) *
            (sc[20]);
  }

  {
    // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[10] * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[10] = Corr * k_f[10] * (sc[1]);
    qr[10] = Corr * k_f[10] * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) *
             (refC) * (sc[18]);
  }

  {
    // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[11] * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[11] = Corr * k_f[11] * (sc[14]);
    qr[11] = Corr * k_f[11] * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
             (refCinv) * (sc[0]);
  }

  {
    // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[12] * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[12] = Corr * k_f[12] * (sc[1] * sc[14]);
    qr[12] = Corr * k_f[12] * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) *
             (refC) * (1.0);
  }

  {
    // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                       (3 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[13] * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[13] = Corr * k_f[13] * (sc[1]);
    qr[13] = Corr * k_f[13] * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) *
             (refC) * (sc[15]);
  }

  {
    // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[15];
    const amrex::Real redP =
      Corr / k_f[14] * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    qf[14] = Corr * k_f[14] * (sc[1] * sc[20]);
    qr[14] = Corr * k_f[14] * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) *
             (refC) * (1.0);
  }

  {
    // reaction 20: C2H2 (+M) <=> H2CC (+M)
    amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                       (1.5 - 1) * sc[10] + sc[11] + (2.5 - 1) * sc[13] +
                       (2.5 - 1) * sc[14] + (3 - 1) * sc[15];
    const amrex::Real redP = Corr / k_f[15] * 2450000000 *
                             exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    qf[15] = Corr * k_f[15] * (sc[13]);
    qr[15] = Corr * k_f[15] * exp(-(g_RT[13] - g_RT_qss[5])) * (1.0);
  }

  {
    // reaction 33: HCO + M <=> CO + H + M
    const amrex::Real Corr = mixture + sc[0] + (6 - 1) * sc[5] + sc[9] +
                             (1.5 - 1) * sc[10] + sc[11] + (3 - 1) * sc[13] +
                             (3 - 1) * sc[14] + (3 - 1) * sc[15];
    qf[16] = Corr * k_f[16] * (1.0);
    qr[16] = Corr * k_f[16] * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (refCinv) * (sc[1] * sc[10]);
  }

  {
    // reaction 54: CH + O <=> CO + H
    qf[17] = k_f[17] * (sc[2]);
    qr[17] = k_f[17] * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
             (sc[1] * sc[10]);
  }

  {
    // reaction 55: CH + OH <=> H + HCO
    qf[18] = k_f[18] * (sc[4]);
    qr[18] = k_f[18] * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 56: CH + H2 <=> CH2 + H
    qf[19] = k_f[19] * (sc[0]);
    qr[19] =
      k_f[19] * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) * (sc[1]);
  }

  {
    // reaction 57: CH + H2O <=> CH2O + H
    qf[20] = k_f[20] * (sc[5]);
    qr[20] = k_f[20] * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 58: CH + O2 <=> HCO + O
    qf[21] = k_f[21] * (sc[3]);
    qr[21] = k_f[21] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[2]);
  }

  {
    // reaction 59: CH + CO2 <=> CO + HCO
    qf[22] = k_f[22] * (sc[11]);
    qr[22] = k_f[22] *
             exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
             (sc[10]);
  }

  {
    // reaction 60: H + HCO <=> CO + H2
    qf[23] = k_f[23] * (sc[1]);
    qr[23] = k_f[23] * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 61: HCO + O <=> CO + OH
    qf[24] = k_f[24] * (sc[2]);
    qr[24] = k_f[24] * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
             (sc[4] * sc[10]);
  }

  {
    // reaction 62: HCO + O <=> CO2 + H
    qf[25] = k_f[25] * (sc[2]);
    qr[25] = k_f[25] * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
             (sc[1] * sc[11]);
  }

  {
    // reaction 63: HCO + OH <=> CO + H2O
    qf[26] = k_f[26] * (sc[4]);
    qr[26] = k_f[26] * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 64: HCO + O2 <=> CO + HO2
    qf[27] = k_f[27] * (sc[3]);
    qr[27] = k_f[27] * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
             (sc[6] * sc[10]);
  }

  {
    // reaction 65: CH2 + H2 <=> CH3 + H
    qf[28] = k_f[28] * (sc[0]);
    qr[28] = k_f[28] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 66: CH2 + O <=> H + HCO
    qf[29] = k_f[29] * (sc[2]);
    qr[29] = k_f[29] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 67: CH2 + O2 <=> HCO + OH
    qf[30] = k_f[30] * (sc[3]);
    qr[30] =
      k_f[30] * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 68: CH2 + O2 <=> CO2 + 2 H
    qf[31] = k_f[31] * (sc[3]);
    qr[31] = k_f[31] *
             exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
             (refCinv) * (sc[1] * sc[1] * sc[11]);
  }

  {
    // reaction 69: CH2 + OH <=> CH2O + H
    qf[32] = k_f[32] * (sc[4]);
    qr[32] = k_f[32] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 70: CH2 + OH <=> CH + H2O
    qf[33] = k_f[33] * (sc[4]);
    qr[33] =
      k_f[33] * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 71: CH2 + HO2 <=> CH2O + OH
    qf[34] = k_f[34] * (sc[6]);
    qr[34] = k_f[34] * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 72: CH + CH2 <=> C2H2 + H
    // Remove forward reaction
    // qf[35] = k_f[35] * (1.0);
    qf[35] = 0.0;
    qr[35] = k_f[35] * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 73: 2 CH2 <=> C2H2 + H2
    // Remove forward reaction
    // qf[36] = k_f[36] * (1.0);
    qf[36] = 0.0;
    qr[36] = k_f[36] * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 74: CH2* + N2 <=> CH2 + N2
    qf[37] = k_f[37] * (sc[21]);
    qr[37] = k_f[37] * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[21]);
  }

  {
    // reaction 75: CH2* + H <=> CH + H2
    qf[38] = k_f[38] * (sc[1]);
    qr[38] = k_f[38] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
             (sc[0]);
  }

  {
    // reaction 76: CH2* + O <=> CO + H2
    qf[39] = k_f[39] * (sc[2]);
    qr[39] = k_f[39] * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
             (sc[0] * sc[10]);
  }

  {
    // reaction 77: CH2* + O <=> H + HCO
    qf[40] = k_f[40] * (sc[2]);
    qr[40] = k_f[40] * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
             (sc[1]);
  }

  {
    // reaction 78: CH2* + OH <=> CH2O + H
    qf[41] = k_f[41] * (sc[4]);
    qr[41] = k_f[41] * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
             (sc[1] * sc[12]);
  }

  {
    // reaction 79: CH2* + H2 <=> CH3 + H
    qf[42] = k_f[42] * (sc[0]);
    qr[42] = k_f[42] * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) *
             (sc[1] * sc[8]);
  }

  {
    // reaction 80: CH2* + O2 <=> CO + H + OH
    qf[43] = k_f[43] * (sc[3]);
    qr[43] = k_f[43] *
             exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
             (refCinv) * (sc[1] * sc[4] * sc[10]);
  }

  {
    // reaction 81: CH2* + O2 <=> CO + H2O
    qf[44] = k_f[44] * (sc[3]);
    qr[44] = k_f[44] * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
             (sc[5] * sc[10]);
  }

  {
    // reaction 82: CH2* + H2O <=> CH2 + H2O
    qf[45] = k_f[45] * (sc[5]);
    qr[45] =
      k_f[45] * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 83: CH2* + CO <=> CH2 + CO
    qf[46] = k_f[46] * (sc[10]);
    qr[46] = k_f[46] * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[10]);
  }

  {
    // reaction 84: CH2* + CO2 <=> CH2 + CO2
    qf[47] = k_f[47] * (sc[11]);
    qr[47] = k_f[47] * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
             (sc[11]);
  }

  {
    // reaction 85: CH2* + CO2 <=> CH2O + CO
    qf[48] = k_f[48] * (sc[11]);
    qr[48] = k_f[48] * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
             (sc[10] * sc[12]);
  }

  {
    // reaction 86: CH2O + H <=> H2 + HCO
    qf[49] = k_f[49] * (sc[1] * sc[12]);
    qr[49] =
      k_f[49] * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) * (sc[0]);
  }

  {
    // reaction 87: CH2O + O <=> HCO + OH
    qf[50] = k_f[50] * (sc[2] * sc[12]);
    qr[50] =
      k_f[50] * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) * (sc[4]);
  }

  {
    // reaction 88: CH2O + OH <=> H2O + HCO
    qf[51] = k_f[51] * (sc[4] * sc[12]);
    qr[51] =
      k_f[51] * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) * (sc[5]);
  }

  {
    // reaction 89: CH2O + O2 <=> HCO + HO2
    qf[52] = k_f[52] * (sc[3] * sc[12]);
    qr[52] =
      k_f[52] * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) * (sc[6]);
  }

  {
    // reaction 90: CH2O + HO2 <=> H2O2 + HCO
    qf[53] = k_f[53] * (sc[6] * sc[12]);
    qr[53] =
      k_f[53] * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) * (sc[7]);
  }

  {
    // reaction 91: CH + CH2O <=> CH2CO + H
    qf[54] = k_f[54] * (sc[12]);
    qr[54] = k_f[54] * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 93: CH3 + OH <=> CH2 + H2O
    qf[55] = k_f[55] * (sc[4] * sc[8]);
    qr[55] =
      k_f[55] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) * (sc[5]);
  }

  {
    // reaction 94: CH3 + OH <=> CH2* + H2O
    qf[56] = k_f[56] * (sc[4] * sc[8]);
    qr[56] =
      k_f[56] * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) * (sc[5]);
  }

  {
    // reaction 95: CH3 + O2 <=> CH3O + O
    qf[57] = k_f[57] * (sc[3] * sc[8]);
    qr[57] =
      k_f[57] * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) * (sc[2]);
  }

  {
    // reaction 98: CH3 + HO2 <=> CH3O + OH
    qf[58] = k_f[58] * (sc[6] * sc[8]);
    qr[58] =
      k_f[58] * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) * (sc[4]);
  }

  {
    // reaction 100: CH + CH3 <=> C2H3 + H
    qf[59] = k_f[59] * (sc[8]);
    qr[59] = k_f[59] * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
             (sc[1]);
  }

  {
    // reaction 101: CH3 + HCO <=> CH4 + CO
    qf[60] = k_f[60] * (sc[8]);
    qr[60] = k_f[60] * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
             (sc[9] * sc[10]);
  }

  {
    // reaction 102: CH2O + CH3 <=> CH4 + HCO
    qf[61] = k_f[61] * (sc[8] * sc[12]);
    qr[61] =
      k_f[61] * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) * (sc[9]);
  }

  {
    // reaction 103: CH2 + CH3 <=> C2H4 + H
    qf[62] = k_f[62] * (sc[8]);
    qr[62] = k_f[62] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 104: CH2* + CH3 <=> C2H4 + H
    qf[63] = k_f[63] * (sc[8]);
    qr[63] = k_f[63] * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 105: 2 CH3 <=> C2H5 + H
    qf[64] = k_f[64] * (sc[8] * sc[8]);
    qr[64] =
      k_f[64] * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) * (sc[1]);
  }

  {
    // reaction 107: CH3O + H <=> CH2O + H2
    qf[65] = k_f[65] * (sc[1]);
    qr[65] = k_f[65] * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
             (sc[0] * sc[12]);
  }

  {
    // reaction 108: CH3O + H <=> CH3 + OH
    qf[66] = k_f[66] * (sc[1]);
    qr[66] = k_f[66] * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) *
             (sc[4] * sc[8]);
  }

  {
    // reaction 109: CH3O + H <=> CH2* + H2O
    qf[67] = k_f[67] * (sc[1]);
    qr[67] =
      k_f[67] * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) * (sc[5]);
  }

  {
    // reaction 110: CH3O + O <=> CH2O + OH
    qf[68] = k_f[68] * (sc[2]);
    qr[68] = k_f[68] * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
             (sc[4] * sc[12]);
  }

  {
    // reaction 111: CH3O + OH <=> CH2O + H2O
    qf[69] = k_f[69] * (sc[4]);
    qr[69] = k_f[69] * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
             (sc[5] * sc[12]);
  }

  {
    // reaction 112: CH3O + O2 <=> CH2O + HO2
    qf[70] = k_f[70] * (sc[3]);
    qr[70] = k_f[70] * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
             (sc[6] * sc[12]);
  }

  {
    // reaction 116: CH + CH4 <=> C2H4 + H
    qf[71] = k_f[71] * (sc[9]);
    qr[71] = k_f[71] * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
             (sc[1] * sc[14]);
  }

  {
    // reaction 117: CH2 + CH4 <=> 2 CH3
    qf[72] = k_f[72] * (sc[9]);
    qr[72] = k_f[72] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 118: CH2* + CH4 <=> 2 CH3
    qf[73] = k_f[73] * (sc[9]);
    qr[73] = k_f[73] * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
             (sc[8] * sc[8]);
  }

  {
    // reaction 119: H + HCCO <=> CH2* + CO
    qf[74] = k_f[74] * (sc[1] * sc[16]);
    qr[74] =
      k_f[74] * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) * (sc[10]);
  }

  {
    // reaction 122: CH + HCCO <=> C2H2 + CO
    qf[75] = k_f[75] * (sc[16]);
    qr[75] = k_f[75] * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
             (sc[10] * sc[13]);
  }

  {
    // reaction 123: CH2 + HCCO <=> C2H3 + CO
    qf[76] = k_f[76] * (sc[16]);
    qr[76] = k_f[76] *
             exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 126: C2H2 + O <=> CH2 + CO
    qf[77] = k_f[77] * (sc[2] * sc[13]);
    qr[77] =
      k_f[77] * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) * (sc[10]);
  }

  {
    // reaction 129: C2H2 + HCO <=> C2H3 + CO
    qf[78] = k_f[78] * (sc[13]);
    qr[78] = k_f[78] *
             exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
             (sc[10]);
  }

  {
    // reaction 130: H + H2CC <=> C2H2 + H
    qf[79] = k_f[79] * (sc[1]);
    qr[79] = k_f[79] * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
             (sc[1] * sc[13]);
  }

  {
    // reaction 131: H2CC + O <=> CH2 + CO
    qf[80] = k_f[80] * (sc[2]);
    qr[80] = k_f[80] * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[10]);
  }

  {
    // reaction 132: H2CC + OH <=> CH2CO + H
    qf[81] = k_f[81] * (sc[4]);
    qr[81] = k_f[81] * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 133: H2CC + O2 <=> CH2 + CO2
    qf[82] = k_f[82] * (sc[3]);
    qr[82] = k_f[82] * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
             (sc[11]);
  }

  {
    // reaction 137: CH2CO + O <=> CH2 + CO2
    qf[83] = k_f[83] * (sc[2] * sc[17]);
    qr[83] =
      k_f[83] * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) * (sc[11]);
  }

  {
    // reaction 139: C2H3 + H <=> C2H2 + H2
    qf[84] = k_f[84] * (sc[1]);
    qr[84] = k_f[84] * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
             (sc[0] * sc[13]);
  }

  {
    // reaction 140: C2H3 + H <=> H2 + H2CC
    qf[85] = k_f[85] * (sc[1]);
    qr[85] = k_f[85] * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
             (sc[0]);
  }

  {
    // reaction 141: C2H3 + O <=> CH2CO + H
    qf[86] = k_f[86] * (sc[2]);
    qr[86] = k_f[86] * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
             (sc[1] * sc[17]);
  }

  {
    // reaction 142: C2H3 + O <=> CH3 + CO
    qf[87] = k_f[87] * (sc[2]);
    qr[87] = k_f[87] * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 143: C2H3 + OH <=> C2H2 + H2O
    qf[88] = k_f[88] * (sc[4]);
    qr[88] = k_f[88] * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
             (sc[5] * sc[13]);
  }

  {
    // reaction 144: C2H3 + O2 <=> C2H2 + HO2
    qf[89] = k_f[89] * (sc[3]);
    qr[89] = k_f[89] * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
             (sc[6] * sc[13]);
  }

  {
    // reaction 145: C2H3 + O2 <=> CH2CHO + O
    qf[90] = k_f[90] * (sc[3]);
    qr[90] = k_f[90] * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[2]);
  }

  {
    // reaction 146: C2H3 + O2 <=> CH2O + HCO
    qf[91] = k_f[91] * (sc[3]);
    qr[91] = k_f[91] * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
             (sc[12]);
  }

  {
    // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
    qf[92] = k_f[92] * (sc[6]);
    qr[92] = k_f[92] * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
             (sc[4]);
  }

  {
    // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
    qf[93] = k_f[93] * (sc[7]);
    qr[93] = k_f[93] * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
             (sc[6] * sc[14]);
  }

  {
    // reaction 149: C2H3 + HCO <=> C2H4 + CO
    // Remove forward reaction
    // qf[94] = k_f[94] * (1.0);
    qf[94] = 0.0;
    qr[94] = k_f[94] *
             exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
             (sc[10] * sc[14]);
  }

  {
    // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
    qf[95] = k_f[95] * (sc[8]);
    qr[95] = k_f[95] * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
             (sc[9] * sc[13]);
  }

  {
    // reaction 151: C2H3 + CH3 <=> H + aC3H5
    qf[96] = k_f[96] * (sc[8]);
    qr[96] = k_f[96] * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
             (sc[1] * sc[19]);
  }

  {
    // reaction 152: CH2CHO <=> CH3 + CO
    qf[97] = k_f[97] * (1.0);
    qr[97] = k_f[97] * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv) *
             (sc[8] * sc[10]);
  }

  {
    // reaction 153: CH2CHO + H <=> CH3 + HCO
    qf[98] = k_f[98] * (sc[1]);
    qr[98] =
      k_f[98] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) * (sc[8]);
  }

  {
    // reaction 154: CH2CHO + H <=> CH2CO + H2
    qf[99] = k_f[99] * (sc[1]);
    qr[99] = k_f[99] * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
             (sc[0] * sc[17]);
  }

  {
    // reaction 155: CH2CHO + O <=> CH2CO + OH
    qf[100] = k_f[100] * (sc[2]);
    qr[100] = k_f[100] * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
              (sc[4] * sc[17]);
  }

  {
    // reaction 156: CH2CHO + OH <=> CH2CO + H2O
    qf[101] = k_f[101] * (sc[4]);
    qr[101] = k_f[101] * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
              (sc[5] * sc[17]);
  }

  {
    // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
    qf[102] = k_f[102] * (sc[3]);
    qr[102] = k_f[102] * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
              (sc[6] * sc[17]);
  }

  {
    // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
    qf[103] = k_f[103] * (sc[3]);
    qr[103] = k_f[103] *
              exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
              (refCinv) * (sc[4] * sc[10] * sc[12]);
  }

  {
    // reaction 159: C2H4 + H <=> C2H3 + H2
    qf[104] = k_f[104] * (sc[1] * sc[14]);
    qr[104] =
      k_f[104] * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) * (sc[0]);
  }

  {
    // reaction 160: C2H4 + O <=> C2H3 + OH
    qf[105] = k_f[105] * (sc[2] * sc[14]);
    qr[105] =
      k_f[105] * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) * (sc[4]);
  }

  {
    // reaction 161: C2H4 + O <=> CH3 + HCO
    qf[106] = k_f[106] * (sc[2] * sc[14]);
    qr[106] =
      k_f[106] * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) * (sc[8]);
  }

  {
    // reaction 162: C2H4 + O <=> CH2 + CH2O
    qf[107] = k_f[107] * (sc[2] * sc[14]);
    qr[107] =
      k_f[107] * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) * (sc[12]);
  }

  {
    // reaction 163: C2H4 + OH <=> C2H3 + H2O
    qf[108] = k_f[108] * (sc[4] * sc[14]);
    qr[108] =
      k_f[108] * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) * (sc[5]);
  }

  {
    // reaction 164: C2H4 + O2 <=> C2H3 + HO2
    qf[109] = k_f[109] * (sc[3] * sc[14]);
    qr[109] =
      k_f[109] * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) * (sc[6]);
  }

  {
    // reaction 166: C2H4 + HCO <=> C2H5 + CO
    qf[110] = k_f[110] * (sc[14]);
    qr[110] = k_f[110] *
              exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
              (sc[10]);
  }

  {
    // reaction 167: C2H4 + CH2 <=> H + aC3H5
    qf[111] = k_f[111] * (sc[14]);
    qr[111] = k_f[111] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
    qf[112] = k_f[112] * (sc[14]);
    qr[112] = k_f[112] *
              exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 169: C2H4 + CH2* <=> H + aC3H5
    qf[113] = k_f[113] * (sc[14]);
    qr[113] = k_f[113] * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
              (sc[1] * sc[19]);
  }

  {
    // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
    qf[114] = k_f[114] * (sc[8] * sc[14]);
    qr[114] =
      k_f[114] * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) * (sc[9]);
  }

  {
    // reaction 171: C2H4 + CH3 <=> nC3H7
    qf[115] = k_f[115] * (sc[8] * sc[14]);
    qr[115] =
      k_f[115] * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (1.0);
  }

  {
    // reaction 172: C2H5 + H <=> C2H4 + H2
    qf[116] = k_f[116] * (sc[1]);
    qr[116] = k_f[116] * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
              (sc[0] * sc[14]);
  }

  {
    // reaction 173: C2H5 + O <=> CH2O + CH3
    qf[117] = k_f[117] * (sc[2]);
    qr[117] = k_f[117] * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (sc[8] * sc[12]);
  }

  {
    // reaction 174: C2H5 + O <=> CH3CHO + H
    qf[118] = k_f[118] * (sc[2]);
    qr[118] = k_f[118] * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
              (sc[1] * sc[18]);
  }

  {
    // reaction 175: C2H5 + O2 <=> C2H4 + HO2
    qf[119] = k_f[119] * (sc[3]);
    qr[119] = k_f[119] * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
              (sc[6] * sc[14]);
  }

  {
    // reaction 176: C2H5 + HO2 <=> C2H6 + O2
    qf[120] = k_f[120] * (sc[6]);
    qr[120] = k_f[120] * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
              (sc[3] * sc[15]);
  }

  {
    // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
    qf[121] = k_f[121] * (sc[6]);
    qr[121] = k_f[121] * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
              (sc[7] * sc[14]);
  }

  {
    // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
    qf[122] = k_f[122] * (sc[6]);
    qr[122] = k_f[122] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
              (refCinv) * (sc[4] * sc[8] * sc[12]);
  }

  {
    // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
    qf[123] = k_f[123] * (sc[7]);
    qr[123] = k_f[123] * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
              (sc[6] * sc[15]);
  }

  {
    // reaction 180: C2H5 + HCO <=> C2H6 + CO
    // Remove forward reaction
    // qf[124] = k_f[124] * (1.0);
    qf[124] = 0.0;
    qr[124] = k_f[124] *
              exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
              (sc[10] * sc[15]);
  }

  {
    // reaction 181: C2H6 + H <=> C2H5 + H2
    qf[125] = k_f[125] * (sc[1] * sc[15]);
    qr[125] =
      k_f[125] * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) * (sc[0]);
  }

  {
    // reaction 182: C2H6 + O <=> C2H5 + OH
    qf[126] = k_f[126] * (sc[2] * sc[15]);
    qr[126] =
      k_f[126] * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) * (sc[4]);
  }

  {
    // reaction 183: C2H6 + OH <=> C2H5 + H2O
    qf[127] = k_f[127] * (sc[4] * sc[15]);
    qr[127] =
      k_f[127] * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) * (sc[5]);
  }

  {
    // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
    qf[128] = k_f[128] * (sc[15]);
    qr[128] = k_f[128] *
              exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) * (sc[8]);
  }

  {
    // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
    qf[129] = k_f[129] * (sc[8] * sc[15]);
    qr[129] =
      k_f[129] * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) * (sc[9]);
  }

  {
    // reaction 186: H + aC3H5 <=> CH4 + H2CC
    qf[130] = k_f[130] * (sc[1] * sc[19]);
    qr[130] =
      k_f[130] * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) * (sc[9]);
  }

  {
    // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
    qf[131] = k_f[131] * (sc[6] * sc[19]);
    qr[131] = k_f[131] *
              exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
              (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 189: HCO + aC3H5 <=> C3H6 + CO
    qf[132] = k_f[132] * (sc[19]);
    qr[132] = k_f[132] * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
              (sc[10] * sc[20]);
  }

  {
    // reaction 193: C3H6 + O => C2H5 + HCO
    qf[133] = k_f[133] * (sc[2] * sc[20]);
    qr[133] = 0.0;
  }

  {
    // reaction 198: H + nC3H7 <=> C2H5 + CH3
    qf[134] = k_f[134] * (sc[1]);
    qr[134] = k_f[134] * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
              (sc[8]);
  }

  {
    // reaction 199: H + nC3H7 <=> C3H6 + H2
    qf[135] = k_f[135] * (sc[1]);
    qr[135] = k_f[135] * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
              (sc[0] * sc[20]);
  }

  {
    // reaction 200: O + nC3H7 <=> C2H5 + CH2O
    qf[136] = k_f[136] * (sc[2]);
    qr[136] = k_f[136] *
              exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) * (sc[12]);
  }

  {
    // reaction 201: OH + nC3H7 <=> C3H6 + H2O
    qf[137] = k_f[137] * (sc[4]);
    qr[137] = k_f[137] * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
              (sc[5] * sc[20]);
  }

  {
    // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
    qf[138] = k_f[138] * (sc[3]);
    qr[138] = k_f[138] * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
              (sc[6] * sc[20]);
  }

  {
    // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
    qf[139] = k_f[139] * (sc[6]);
    qr[139] =
      k_f[139] *
      exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12]);
  }

  {
    // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
    qf[140] = k_f[140] * (sc[8]);
    qr[140] = k_f[140] * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
              (sc[9] * sc[20]);
  }

  {
    // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
    // Remove forward reaction
    // qf[141] = k_f[141] * (1.0);
    qf[141] = 0.0;
    qr[141] = k_f[141] *
              exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
              (sc[8] * sc[19]);
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(const amrex::Real* tc, amrex::Real invT, amrex::Real* k_f)
{
  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  k_f[0] = 50000000;
  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  k_f[1] = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  k_f[2] = 25000000000 * exp((-0.8) * tc[0]);
  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  k_f[3] = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  k_f[4] = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f[5] = 18000000;
  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  k_f[6] = 386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  k_f[7] = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  k_f[8] = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f[9] = 25000000;
  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f[10] = 100000000;
  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  k_f[11] = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  k_f[12] = 1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  k_f[13] = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  k_f[14] = 13300000 * exp(-(1640.83858218945) * invT);
  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  k_f[15] = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  // reaction 33: HCO + M <=> CO + H + M
  k_f[16] = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  // reaction 54: CH + O <=> CO + H
  k_f[17] = 57000000;
  // reaction 55: CH + OH <=> H + HCO
  k_f[18] = 30000000;
  // reaction 56: CH + H2 <=> CH2 + H
  k_f[19] = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  // reaction 57: CH + H2O <=> CH2O + H
  k_f[20] = 5710000 * exp(-(-379.928582682563) * invT);
  // reaction 58: CH + O2 <=> HCO + O
  k_f[21] = 33000000;
  // reaction 59: CH + CO2 <=> CO + HCO
  k_f[22] = 3400000 * exp(-(347.219499405257) * invT);
  // reaction 60: H + HCO <=> CO + H2
  k_f[23] = 73400000;
  // reaction 61: HCO + O <=> CO + OH
  k_f[24] = 30000000;
  // reaction 62: HCO + O <=> CO2 + H
  k_f[25] = 30000000;
  // reaction 63: HCO + OH <=> CO + H2O
  k_f[26] = 50000000;
  // reaction 64: HCO + O2 <=> CO + HO2
  k_f[27] = 7600000 * exp(-(201.286666321888) * invT);
  // reaction 65: CH2 + H2 <=> CH3 + H
  k_f[28] = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  // reaction 66: CH2 + O <=> H + HCO
  k_f[29] = 80000000;
  // reaction 67: CH2 + O2 <=> HCO + OH
  k_f[30] = 10560000 * exp(-(754.82499870708) * invT);
  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  k_f[31] = 2640000 * exp(-(754.82499870708) * invT);
  // reaction 69: CH2 + OH <=> CH2O + H
  k_f[32] = 20000000;
  // reaction 70: CH2 + OH <=> CH + H2O
  k_f[33] = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  // reaction 71: CH2 + HO2 <=> CH2O + OH
  k_f[34] = 20000000;
  // reaction 72: CH + CH2 <=> C2H2 + H
  k_f[35] = 40000000;
  // reaction 73: 2 CH2 <=> C2H2 + H2
  k_f[36] = 32000000;
  // reaction 74: CH2* + N2 <=> CH2 + N2
  k_f[37] = 15000000 * exp(-(301.929999482832) * invT);
  // reaction 75: CH2* + H <=> CH + H2
  k_f[38] = 30000000;
  // reaction 76: CH2* + O <=> CO + H2
  k_f[39] = 15000000;
  // reaction 77: CH2* + O <=> H + HCO
  k_f[40] = 15000000;
  // reaction 78: CH2* + OH <=> CH2O + H
  k_f[41] = 30000000;
  // reaction 79: CH2* + H2 <=> CH3 + H
  k_f[42] = 70000000;
  // reaction 80: CH2* + O2 <=> CO + H + OH
  k_f[43] = 28000000;
  // reaction 81: CH2* + O2 <=> CO + H2O
  k_f[44] = 12000000;
  // reaction 82: CH2* + H2O <=> CH2 + H2O
  k_f[45] = 30000000;
  // reaction 83: CH2* + CO <=> CH2 + CO
  k_f[46] = 9000000;
  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  k_f[47] = 7000000;
  // reaction 85: CH2* + CO2 <=> CH2O + CO
  k_f[48] = 14000000;
  // reaction 86: CH2O + H <=> H2 + HCO
  k_f[49] = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  // reaction 87: CH2O + O <=> HCO + OH
  k_f[50] = 39000000 * exp(-(1781.38699694871) * invT);
  // reaction 88: CH2O + OH <=> H2O + HCO
  k_f[51] = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  // reaction 89: CH2O + O2 <=> HCO + HO2
  k_f[52] = 100000000 * exp(-(20128.6666321888) * invT);
  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  k_f[53] = 1000000 * exp(-(4025.73332643776) * invT);
  // reaction 91: CH + CH2O <=> CH2CO + H
  k_f[54] = 94600000 * exp(-(-259.156582889431) * invT);
  // reaction 93: CH3 + OH <=> CH2 + H2O
  k_f[55] = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  // reaction 94: CH3 + OH <=> CH2* + H2O
  k_f[56] = 25010000;
  // reaction 95: CH3 + O2 <=> CH3O + O
  k_f[57] = 30830000 * exp(-(14492.6399751759) * invT);
  // reaction 98: CH3 + HO2 <=> CH3O + OH
  k_f[58] = 13400000;
  // reaction 100: CH + CH3 <=> C2H3 + H
  k_f[59] = 30000000;
  // reaction 101: CH3 + HCO <=> CH4 + CO
  k_f[60] = 8480000;
  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  k_f[61] = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  // reaction 103: CH2 + CH3 <=> C2H4 + H
  k_f[62] = 40000000;
  // reaction 104: CH2* + CH3 <=> C2H4 + H
  k_f[63] = 12000000 * exp(-(-286.83349950869) * invT);
  // reaction 105: 2 CH3 <=> C2H5 + H
  k_f[64] = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  // reaction 107: CH3O + H <=> CH2O + H2
  k_f[65] = 20000000;
  // reaction 108: CH3O + H <=> CH3 + OH
  k_f[66] = 32000000;
  // reaction 109: CH3O + H <=> CH2* + H2O
  k_f[67] = 16000000;
  // reaction 110: CH3O + O <=> CH2O + OH
  k_f[68] = 10000000;
  // reaction 111: CH3O + OH <=> CH2O + H2O
  k_f[69] = 5000000;
  // reaction 112: CH3O + O2 <=> CH2O + HO2
  k_f[70] = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  // reaction 116: CH + CH4 <=> C2H4 + H
  k_f[71] = 60000000;
  // reaction 117: CH2 + CH4 <=> 2 CH3
  k_f[72] = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  // reaction 118: CH2* + CH4 <=> 2 CH3
  k_f[73] = 16000000 * exp(-(-286.83349950869) * invT);
  // reaction 119: H + HCCO <=> CH2* + CO
  k_f[74] = 100000000;
  // reaction 122: CH + HCCO <=> C2H2 + CO
  k_f[75] = 50000000;
  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  k_f[76] = 30000000;
  // reaction 126: C2H2 + O <=> CH2 + CO
  k_f[77] = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  k_f[78] = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  // reaction 130: H + H2CC <=> C2H2 + H
  k_f[79] = 100000000;
  // reaction 131: H2CC + O <=> CH2 + CO
  k_f[80] = 100000000;
  // reaction 132: H2CC + OH <=> CH2CO + H
  k_f[81] = 20000000;
  // reaction 133: H2CC + O2 <=> CH2 + CO2
  k_f[82] = 10000000;
  // reaction 137: CH2CO + O <=> CH2 + CO2
  k_f[83] = 1750000 * exp(-(679.342498836372) * invT);
  // reaction 139: C2H3 + H <=> C2H2 + H2
  k_f[84] = 30000000;
  // reaction 140: C2H3 + H <=> H2 + H2CC
  k_f[85] = 60000000;
  // reaction 141: C2H3 + O <=> CH2CO + H
  k_f[86] = 48000000;
  // reaction 142: C2H3 + O <=> CH3 + CO
  k_f[87] = 48000000;
  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  k_f[88] = 30110000;
  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  k_f[89] = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  k_f[90] = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  k_f[91] = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  k_f[92] = 10000000;
  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  k_f[93] = 12100 * exp(-(-299.917132819613) * invT);
  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  k_f[94] = 90330000;
  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  k_f[95] = 392000;
  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  k_f[96] = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  // reaction 152: CH2CHO <=> CH3 + CO
  k_f[97] = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  // reaction 153: CH2CHO + H <=> CH3 + HCO
  k_f[98] = 90000000;
  // reaction 154: CH2CHO + H <=> CH2CO + H2
  k_f[99] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 155: CH2CHO + O <=> CH2CO + OH
  k_f[100] = 20000000 * exp(-(2012.86666321888) * invT);
  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  k_f[101] = 10000000 * exp(-(1006.43333160944) * invT);
  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  k_f[102] = 140000;
  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  k_f[103] = 18000;
  // reaction 159: C2H4 + H <=> C2H3 + H2
  k_f[104] = 50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
  // reaction 160: C2H4 + O <=> C2H3 + OH
  k_f[105] = 15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
  // reaction 161: C2H4 + O <=> CH3 + HCO
  k_f[106] = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 162: C2H4 + O <=> CH2 + CH2O
  k_f[107] = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  k_f[108] = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  k_f[109] = 42200000 * exp(-(30595.573280927) * invT);
  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  k_f[110] = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  k_f[111] = 20000000 * exp(-(3019.29999482832) * invT);
  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  k_f[112] = 50000000;
  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  k_f[113] = 50000000;
  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  k_f[114] = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  // reaction 171: C2H4 + CH3 <=> nC3H7
  k_f[115] = 330000 * exp(-(3874.76832669634) * invT);
  // reaction 172: C2H5 + H <=> C2H4 + H2
  k_f[116] = 2000000;
  // reaction 173: C2H5 + O <=> CH2O + CH3
  k_f[117] = 16040000;
  // reaction 174: C2H5 + O <=> CH3CHO + H
  k_f[118] = 80200000;
  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  k_f[119] = 20000;
  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  k_f[120] = 300000;
  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  k_f[121] = 300000;
  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f[122] = 24000000;
  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  k_f[123] = 8700 * exp(-(490.133032493797) * invT);
  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  k_f[124] = 120000000;
  // reaction 181: C2H6 + H <=> C2H5 + H2
  k_f[125] = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  // reaction 182: C2H6 + O <=> C2H5 + OH
  k_f[126] = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  k_f[127] = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  k_f[128] = 40000000 * exp(-(-276.769166192596) * invT);
  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  k_f[129] = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  k_f[130] = 20000000 * exp(-(1006.43333160944) * invT);
  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f[131] = 6600000;
  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  k_f[132] = 60000000;
  // reaction 193: C3H6 + O => C2H5 + HCO
  k_f[133] = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  k_f[134] = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  // reaction 199: H + nC3H7 <=> C3H6 + H2
  k_f[135] = 1800000;
  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  k_f[136] = 96000000;
  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  k_f[137] = 24000000;
  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  k_f[138] = 90000;
  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f[139] = 24000000;
  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  k_f[140] = 11000000;
  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  k_f[141] = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA coupling between CH3O  nC3H7  C2H5  CH2CHO  H2CC  C2H3  HCO  CH2*  CH2
  // CH QSSA species 4: CH3O

  amrex::Real CH3O_num = epsilon + 1.0 * qf_co[4] + 1.0 * qf_co[57] +
                         1.0 * qf_co[58] + 1.0 * qr_co[65] + 1.0 * qr_co[66] +
                         1.0 * qr_co[68] + 1.0 * qr_co[69] + 1.0 * qr_co[70];
  amrex::Real CH3O_denom = epsilon - qr_co[4] - qr_co[57] - qr_co[58] -
                           qf_co[65] - qf_co[66] - qf_co[67] - qf_co[68] -
                           qf_co[69] - qf_co[70];
  amrex::Real CH3O_rhs = -CH3O_num / CH3O_denom;

  amrex::Real CH3O_CH2D = (epsilon + 1.0 * qr_co[67]) / CH3O_denom;

  // QSSA species 9: nC3H7

  amrex::Real nC3H7_num = epsilon + 1.0 * qf_co[14] + 1.0 * qf_co[115] +
                          1.0 * qr_co[135] + 1.0 * qr_co[137] +
                          1.0 * qr_co[138] + 1.0 * qr_co[140];
  amrex::Real nC3H7_denom = epsilon - qr_co[14] - qr_co[115] - qf_co[134] -
                            qf_co[135] - qf_co[136] - qf_co[137] - qf_co[138] -
                            qf_co[139] - qf_co[140];
  amrex::Real nC3H7_rhs = -nC3H7_num / nC3H7_denom;

  amrex::Real nC3H7_C2H5 =
    (epsilon + 1.0 * qr_co[134] + 1.0 * qr_co[136] + 1.0 * qr_co[139]) /
    nC3H7_denom;

  // QSSA species 7: C2H5

  amrex::Real C2H5_num =
    epsilon + 1.0 * qf_co[12] + 1.0 * qr_co[13] + 1.0 * qf_co[64] +
    1.0 * qr_co[116] + 1.0 * qr_co[117] + 1.0 * qr_co[118] + 1.0 * qr_co[119] +
    1.0 * qr_co[120] + 1.0 * qr_co[121] + 1.0 * qr_co[122] + 1.0 * qr_co[123] +
    1.0 * qr_co[124] + 1.0 * qf_co[125] + 1.0 * qf_co[126] + 1.0 * qf_co[127] +
    1.0 * qf_co[129] + 1.0 * qr_co[141];
  amrex::Real C2H5_denom =
    epsilon - qr_co[12] - qf_co[13] - qr_co[64] - qr_co[110] - qf_co[116] -
    qf_co[117] - qf_co[118] - qf_co[119] - qf_co[120] - qf_co[121] -
    qf_co[122] - qf_co[123] - qr_co[125] - qr_co[126] - qr_co[127] -
    qr_co[128] - qr_co[129] - qr_co[134] - qr_co[136] - qr_co[139];
  amrex::Real C2H5_rhs = -C2H5_num / C2H5_denom;

  amrex::Real C2H5_nC3H7 =
    (epsilon + 1.0 * qf_co[134] + 1.0 * qf_co[136] + 1.0 * qf_co[139]) /
    C2H5_denom;
  amrex::Real C2H5_HCO = (epsilon + 1.0 * qf_co[110]) / C2H5_denom;
  amrex::Real C2H5_CH2D = (epsilon + 1.0 * qf_co[128]) / C2H5_denom;

  // QSSA species 8: CH2CHO

  amrex::Real CH2CHO_num = epsilon + 1.0 * qf_co[7] + 1.0 * qr_co[10] +
                           1.0 * qr_co[97] + 1.0 * qr_co[99] +
                           1.0 * qr_co[100] + 1.0 * qr_co[101] +
                           1.0 * qr_co[102] + 1.0 * qr_co[103];
  amrex::Real CH2CHO_denom = epsilon - qr_co[7] - qf_co[10] - qr_co[90] -
                             qr_co[92] - qf_co[97] - qf_co[98] - qf_co[99] -
                             qf_co[100] - qf_co[101] - qf_co[102] - qf_co[103];
  amrex::Real CH2CHO_rhs = -CH2CHO_num / CH2CHO_denom;

  amrex::Real CH2CHO_C2H3 =
    (epsilon + 1.0 * qf_co[90] + 1.0 * qf_co[92]) / CH2CHO_denom;
  amrex::Real CH2CHO_HCO = (epsilon + 1.0 * qr_co[98]) / CH2CHO_denom;

  // QSSA species 5: H2CC

  amrex::Real H2CC_num = epsilon + 1.0 * qf_co[11] + 1.0 * qf_co[15] +
                         1.0 * qr_co[79] + 1.0 * qr_co[81] + 1.0 * qf_co[130];
  amrex::Real H2CC_denom = epsilon - qr_co[11] - qr_co[15] - qf_co[79] -
                           qf_co[80] - qf_co[81] - qf_co[82] - qr_co[85] -
                           qr_co[112] - qr_co[130];
  amrex::Real H2CC_rhs = -H2CC_num / H2CC_denom;

  amrex::Real H2CC_C2H3 = (epsilon + 1.0 * qf_co[85]) / H2CC_denom;
  amrex::Real H2CC_CH2D = (epsilon + 1.0 * qf_co[112]) / H2CC_denom;
  amrex::Real H2CC_CH2 =
    (epsilon + 1.0 * qr_co[80] + 1.0 * qr_co[82]) / H2CC_denom;

  // QSSA species 6: C2H3

  amrex::Real C2H3_num =
    epsilon + 1.0 * qr_co[6] + 1.0 * qr_co[8] + 1.0 * qr_co[9] +
    1.0 * qr_co[84] + 1.0 * qr_co[86] + 1.0 * qr_co[87] + 1.0 * qr_co[88] +
    1.0 * qr_co[89] + 1.0 * qr_co[93] + 1.0 * qr_co[94] + 1.0 * qr_co[95] +
    1.0 * qr_co[96] + 1.0 * qf_co[104] + 1.0 * qf_co[105] + 1.0 * qf_co[108] +
    1.0 * qf_co[109] + 1.0 * qf_co[114] + 1.0 * qf_co[131] + 1.0 * qr_co[141];
  amrex::Real C2H3_denom =
    epsilon - qf_co[6] - qf_co[8] - qf_co[9] - qr_co[59] - qr_co[76] -
    qr_co[78] - qf_co[84] - qf_co[85] - qf_co[86] - qf_co[87] - qf_co[88] -
    qf_co[89] - qf_co[90] - qf_co[91] - qf_co[92] - qf_co[93] - qf_co[95] -
    qf_co[96] - qr_co[104] - qr_co[105] - qr_co[108] - qr_co[109] - qr_co[114] -
    qr_co[131];
  amrex::Real C2H3_rhs = -C2H3_num / C2H3_denom;

  amrex::Real C2H3_CH2CHO =
    (epsilon + 1.0 * qr_co[90] + 1.0 * qr_co[92]) / C2H3_denom;
  amrex::Real C2H3_H2CC = (epsilon + 1.0 * qr_co[85]) / C2H3_denom;
  amrex::Real C2H3_HCO =
    (epsilon + 1.0 * qf_co[78] + 1.0 * qr_co[91]) / C2H3_denom;
  amrex::Real C2H3_CH2 = (epsilon + 1.0 * qf_co[76]) / C2H3_denom;
  amrex::Real C2H3_CH = (epsilon + 1.0 * qf_co[59]) / C2H3_denom;

  // QSSA species 3: HCO

  amrex::Real HCO_num =
    epsilon + 1.0 * qr_co[1] + 1.0 * qr_co[5] + 1.0 * qr_co[16] +
    1.0 * qr_co[23] + 1.0 * qr_co[24] + 1.0 * qr_co[25] + 1.0 * qr_co[26] +
    1.0 * qr_co[27] + 1.0 * qf_co[49] + 1.0 * qf_co[50] + 1.0 * qf_co[51] +
    1.0 * qf_co[52] + 1.0 * qf_co[53] + 1.0 * qr_co[60] + 1.0 * qf_co[61] +
    1.0 * qr_co[94] + 1.0 * qf_co[106] + 1.0 * qr_co[124] + 1.0 * qr_co[132];
  amrex::Real HCO_denom =
    epsilon - qf_co[1] - qf_co[5] - qf_co[16] - qr_co[18] - qr_co[21] -
    qr_co[22] - qf_co[23] - qf_co[24] - qf_co[25] - qf_co[26] - qf_co[27] -
    qr_co[29] - qr_co[30] - qr_co[40] - qr_co[49] - qr_co[50] - qr_co[51] -
    qr_co[52] - qr_co[53] - qf_co[60] - qr_co[61] - qf_co[78] - qr_co[91] -
    qr_co[98] - qr_co[106] - qf_co[110] - qf_co[132];
  amrex::Real HCO_rhs = -HCO_num / HCO_denom;

  amrex::Real HCO_C2H5 = (epsilon + 1.0 * qr_co[110]) / HCO_denom;
  amrex::Real HCO_CH2CHO = (epsilon + 1.0 * qf_co[98]) / HCO_denom;
  amrex::Real HCO_C2H3 =
    (epsilon + 1.0 * qr_co[78] + 1.0 * qf_co[91]) / HCO_denom;
  amrex::Real HCO_CH2D = (epsilon + 1.0 * qf_co[40]) / HCO_denom;
  amrex::Real HCO_CH2 =
    (epsilon + 1.0 * qf_co[29] + 1.0 * qf_co[30]) / HCO_denom;
  amrex::Real HCO_CH =
    (epsilon + 1.0 * qf_co[18] + 1.0 * qf_co[21] + 1.0 * qf_co[22]) / HCO_denom;

  // QSSA species 2: CH2*

  amrex::Real CH2D_num = epsilon + 1.0 * qr_co[39] + 1.0 * qr_co[41] +
                         1.0 * qr_co[42] + 1.0 * qr_co[43] + 1.0 * qr_co[44] +
                         1.0 * qr_co[48] + 1.0 * qf_co[56] + 1.0 * qr_co[63] +
                         1.0 * qr_co[73] + 1.0 * qf_co[74] + 1.0 * qr_co[113];
  amrex::Real CH2D_denom =
    epsilon - qf_co[37] - qf_co[38] - qf_co[39] - qf_co[40] - qf_co[41] -
    qf_co[42] - qf_co[43] - qf_co[44] - qf_co[45] - qf_co[46] - qf_co[47] -
    qf_co[48] - qr_co[56] - qf_co[63] - qr_co[67] - qf_co[73] - qr_co[74] -
    qf_co[112] - qf_co[113] - qf_co[128];
  amrex::Real CH2D_rhs = -CH2D_num / CH2D_denom;

  amrex::Real CH2D_CH3O = (epsilon + 1.0 * qf_co[67]) / CH2D_denom;
  amrex::Real CH2D_C2H5 = (epsilon + 1.0 * qr_co[128]) / CH2D_denom;
  amrex::Real CH2D_H2CC = (epsilon + 1.0 * qr_co[112]) / CH2D_denom;
  amrex::Real CH2D_HCO = (epsilon + 1.0 * qr_co[40]) / CH2D_denom;
  amrex::Real CH2D_CH2 = (epsilon + 1.0 * qr_co[37] + 1.0 * qr_co[45] +
                          1.0 * qr_co[46] + 1.0 * qr_co[47]) /
                         CH2D_denom;
  amrex::Real CH2D_CH = (epsilon + 1.0 * qr_co[38]) / CH2D_denom;

  // QSSA species 1: CH2

  amrex::Real CH2_num =
    epsilon + 1.0 * qr_co[2] + 1.0 * qr_co[3] + 1.0 * qr_co[28] +
    1.0 * qr_co[31] + 1.0 * qr_co[32] + 1.0 * qr_co[34] + 1.0 * qr_co[35] +
    2.0 * qr_co[36] + 1.0 * qf_co[55] + 1.0 * qr_co[62] + 1.0 * qr_co[72] +
    1.0 * qf_co[77] + 1.0 * qf_co[83] + 1.0 * qf_co[107] + 1.0 * qr_co[111];
  amrex::Real CH2_denom =
    epsilon - qf_co[2] - qf_co[3] - qr_co[19] - qf_co[28] - qf_co[29] -
    qf_co[30] - qf_co[31] - qf_co[32] - qf_co[33] - qf_co[34] - qf_co[36] -
    qr_co[37] - qr_co[45] - qr_co[46] - qr_co[47] - qr_co[55] - qf_co[62] -
    qf_co[72] - qf_co[76] - qr_co[77] - qr_co[80] - qr_co[82] - qr_co[83] -
    qr_co[107] - qf_co[111];
  amrex::Real CH2_rhs = -CH2_num / CH2_denom;

  amrex::Real CH2_H2CC =
    (epsilon + 1.0 * qf_co[80] + 1.0 * qf_co[82]) / CH2_denom;
  amrex::Real CH2_C2H3 = (epsilon + 1.0 * qr_co[76]) / CH2_denom;
  amrex::Real CH2_HCO =
    (epsilon + 1.0 * qr_co[29] + 1.0 * qr_co[30]) / CH2_denom;
  amrex::Real CH2_CH2D = (epsilon + 1.0 * qf_co[37] + 1.0 * qf_co[45] +
                          1.0 * qf_co[46] + 1.0 * qf_co[47]) /
                         CH2_denom;
  amrex::Real CH2_CH =
    (epsilon + 1.0 * qf_co[19] + 1.0 * qr_co[33]) / CH2_denom;

  // QSSA species 0: CH

  amrex::Real CH_num = epsilon + 1.0 * qr_co[0] + 1.0 * qr_co[17] +
                       1.0 * qr_co[20] + 1.0 * qr_co[35] + 1.0 * qr_co[54] +
                       1.0 * qr_co[71] + 1.0 * qr_co[75];
  amrex::Real CH_denom = epsilon - qf_co[0] - qf_co[17] - qf_co[18] -
                         qf_co[19] - qf_co[20] - qf_co[21] - qf_co[22] -
                         qr_co[33] - qr_co[38] - qf_co[54] - qf_co[59] -
                         qf_co[71] - qf_co[75];
  amrex::Real CH_rhs = -CH_num / CH_denom;

  amrex::Real CH_C2H3 = (epsilon + 1.0 * qr_co[59]) / CH_denom;
  amrex::Real CH_HCO =
    (epsilon + 1.0 * qr_co[18] + 1.0 * qr_co[21] + 1.0 * qr_co[22]) / CH_denom;
  amrex::Real CH_CH2D = (epsilon + 1.0 * qf_co[38]) / CH_denom;
  amrex::Real CH_CH2 = (epsilon + 1.0 * qr_co[19] + 1.0 * qf_co[33]) / CH_denom;

  // Putting it all together
  amrex::Real H_0 = CH2D_CH3O;
  amrex::Real H_1 = C2H5_nC3H7;
  amrex::Real H_2 = HCO_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_3 = CH2D_C2H5 / (1 - nC3H7_C2H5 * H_1);
  amrex::Real H_4 = C2H3_CH2CHO;
  amrex::Real H_5 = HCO_CH2CHO;
  amrex::Real H_6 = C2H3_H2CC;
  amrex::Real H_7 = CH2D_H2CC;
  amrex::Real H_8 = CH2_H2CC;
  amrex::Real H_9 = (HCO_C2H3 - CH2CHO_C2H3 * H_5) /
                    ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_10 =
    (CH2_C2H3 - H2CC_C2H3 * H_8) / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_11 = CH_C2H3 / ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);
  amrex::Real H_12 =
    (CH2D_HCO - C2H5_HCO * H_3) / (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                                   (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_13 = (CH2_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_10) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_14 = (CH_HCO - (C2H3_HCO - CH2CHO_HCO * H_4) * H_11) /
                     (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
                      (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);
  amrex::Real H_15 =
    ((CH2_CH2D - H2CC_CH2D * H_8) - (HCO_CH2D - C2H5_CH2D * H_2) * H_13) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_16 =
    (CH_CH2D - (HCO_CH2D - C2H5_CH2D * H_2) * H_14) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);
  amrex::Real H_17 =
    (((CH_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_11) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_14) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_16) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);
  sc_qss[0] =
    ((((CH_rhs - ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_11) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_14) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_16) -
     ((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) *
       H_17) /
    ((((1 - C2H3_CH * H_11) - (HCO_CH - C2H3_CH * H_9) * H_14) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_16) -
     (((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
      (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
       H_17);

  sc_qss[1] =
    (((((CH2_rhs - H2CC_rhs * H_8) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_10) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_13) -
      ((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
        H2CC_rhs * H_7) -
       (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
        ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
         H_12) *
        H_15) -
     ((((CH2_CH - C2H3_CH * H_10) - (HCO_CH - C2H3_CH * H_9) * H_13) -
       (CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * H_15) *
      sc_qss[0])) /
    ((((1 - H2CC_CH2 * H_8) - (C2H3_CH2 - H2CC_CH2 * H_6) * H_10) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_13) -
     ((CH2D_CH2 - H2CC_CH2 * H_7) -
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
       H_15);

  sc_qss[2] =
    (((((CH2D_rhs - CH3O_rhs * H_0) - (C2H5_rhs - nC3H7_rhs * H_1) * H_3) -
       H2CC_rhs * H_7) -
      (((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
       ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) *
        H_12) -
     ((CH2D_CH - (HCO_CH - C2H3_CH * H_9) * H_12) * sc_qss[0] +
      ((CH2D_CH2 - H2CC_CH2 * H_7) -
       (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * H_12) *
        sc_qss[1])) /
    ((((1 - CH3O_CH2D * H_0) - C2H5_CH2D * H_3) - H2CC_CH2D * H_7) -
     (HCO_CH2D - C2H5_CH2D * H_2) * H_12);

  sc_qss[3] =
    ((((HCO_rhs - (C2H5_rhs - nC3H7_rhs * H_1) * H_2) - CH2CHO_rhs * H_5) -
      ((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) * H_9) -
     ((HCO_CH - C2H3_CH * H_9) * sc_qss[0] +
      (HCO_CH2 - (C2H3_CH2 - H2CC_CH2 * H_6) * H_9) * sc_qss[1] +
      (HCO_CH2D - C2H5_CH2D * H_2) * sc_qss[2])) /
    (((1 - C2H5_HCO * H_2) - CH2CHO_HCO * H_5) -
     (C2H3_HCO - CH2CHO_HCO * H_4) * H_9);

  sc_qss[6] = (((C2H3_rhs - CH2CHO_rhs * H_4) - H2CC_rhs * H_6) -
               (C2H3_CH * sc_qss[0] + (C2H3_CH2 - H2CC_CH2 * H_6) * sc_qss[1] +
                (C2H3_HCO - CH2CHO_HCO * H_4) * sc_qss[3])) /
              ((1 - CH2CHO_C2H3 * H_4) - H2CC_C2H3 * H_6);

  sc_qss[5] = H2CC_rhs - (+H2CC_CH2 * sc_qss[1] + H2CC_CH2D * sc_qss[2] +
                          H2CC_C2H3 * sc_qss[6]);

  sc_qss[8] = CH2CHO_rhs - (+CH2CHO_HCO * sc_qss[3] + CH2CHO_C2H3 * sc_qss[6]);

  sc_qss[7] = ((C2H5_rhs - nC3H7_rhs * H_1) -
               (+C2H5_CH2D * sc_qss[2] + C2H5_HCO * sc_qss[3])) /
              (1 - nC3H7_C2H5 * H_1);

  sc_qss[9] = nC3H7_rhs - (+nC3H7_C2H5 * sc_qss[7]);

  sc_qss[4] = CH3O_rhs - (+CH3O_CH2D * sc_qss[2]);

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 0: 2 OH (+M) <=> H2O2 (+M)
  qf[0] = (sc[4] * sc[4]);
  qr[0] = sc[7];

  // reaction 1: CO + H2 (+M) <=> CH2O (+M)
  qf[1] = sc[0] * sc[10];
  qr[1] = sc[12];

  // reaction 2: CH + CO (+M) <=> HCCO (+M)
  qf[2] = sc[10] * sc_qss[0];
  qr[2] = sc[16];

  // reaction 3: H + HCO (+M) <=> CH2O (+M)
  qf[3] = sc[1] * sc_qss[3];
  qr[3] = sc[12];

  // reaction 4: CH2 + H (+M) <=> CH3 (+M)
  qf[4] = sc[1] * sc_qss[1];
  qr[4] = sc[8];

  // reaction 5: CH2 + CO (+M) <=> CH2CO (+M)
  qf[5] = sc[10] * sc_qss[1];
  qr[5] = sc[17];

  // reaction 6: CH2O + H (+M) <=> CH3O (+M)
  qf[6] = sc[1] * sc[12];
  qr[6] = sc_qss[4];

  // reaction 7: CH3 + H (+M) <=> CH4 (+M)
  qf[7] = sc[1] * sc[8];
  qr[7] = sc[9];

  // reaction 8: CH3 + HCO (+M) <=> CH3CHO (+M)
  qf[8] = sc[8] * sc_qss[3];
  qr[8] = sc[18];

  // reaction 9: 2 CH3 (+M) <=> C2H6 (+M)
  qf[9] = (sc[8] * sc[8]);
  qr[9] = sc[15];

  // reaction 10: C2H3 (+M) <=> C2H2 + H (+M)
  qf[10] = sc_qss[6];
  qr[10] = sc[1] * sc[13];

  // reaction 11: CH2CO + H (+M) <=> CH2CHO (+M)
  qf[11] = sc[1] * sc[17];
  qr[11] = sc_qss[8];

  // reaction 12: C2H3 + H (+M) <=> C2H4 (+M)
  qf[12] = sc[1] * sc_qss[6];
  qr[12] = sc[14];

  // reaction 13: C2H3 + CH3 (+M) <=> C3H6 (+M)
  qf[13] = sc[8] * sc_qss[6];
  qr[13] = sc[20];

  // reaction 14: CH2CHO + H (+M) <=> CH3CHO (+M)
  qf[14] = sc[1] * sc_qss[8];
  qr[14] = sc[18];

  // reaction 15: C2H4 (+M) <=> H2 + H2CC (+M)
  qf[15] = sc[14];
  qr[15] = sc[0] * sc_qss[5];

  // reaction 16: C2H4 + H (+M) <=> C2H5 (+M)
  qf[16] = sc[1] * sc[14];
  qr[16] = sc_qss[7];

  // reaction 17: C2H5 + H (+M) <=> C2H6 (+M)
  qf[17] = sc[1] * sc_qss[7];
  qr[17] = sc[15];

  // reaction 18: H + aC3H5 (+M) <=> C3H6 (+M)
  qf[18] = sc[1] * sc[19];
  qr[18] = sc[20];

  // reaction 19: C3H6 + H (+M) <=> nC3H7 (+M)
  qf[19] = sc[1] * sc[20];
  qr[19] = sc_qss[9];

  // reaction 20: C2H2 (+M) <=> H2CC (+M)
  qf[20] = sc[13];
  qr[20] = sc_qss[5];

  // reaction 21: 2 H + M <=> H2 + M
  qf[21] = (sc[1] * sc[1]);
  qr[21] = sc[0];

  // reaction 22: 2 H + H2 <=> H2 + H2
  qf[22] = sc[0] * (sc[1] * sc[1]);
  qr[22] = (sc[0] * sc[0]);

  // reaction 23: 2 H + H2O <=> H2 + H2O
  qf[23] = (sc[1] * sc[1]) * sc[5];
  qr[23] = sc[0] * sc[5];

  // reaction 24: 2 H + CO2 <=> H2 + CO2
  qf[24] = (sc[1] * sc[1]) * sc[11];
  qr[24] = sc[0] * sc[11];

  // reaction 25: H + OH + M <=> H2O + M
  qf[25] = sc[1] * sc[4];
  qr[25] = sc[5];

  // reaction 26: H + O + M <=> OH + M
  qf[26] = sc[1] * sc[2];
  qr[26] = sc[4];

  // reaction 27: 2 O + M <=> O2 + M
  qf[27] = (sc[2] * sc[2]);
  qr[27] = sc[3];

  // reaction 28: H + O2 + M <=> HO2 + M
  qf[28] = sc[1] * sc[3];
  qr[28] = sc[6];

  // reaction 29: H + O2 + O2 <=> HO2 + O2
  qf[29] = sc[1] * (sc[3] * sc[3]);
  qr[29] = sc[3] * sc[6];

  // reaction 30: H + O2 + H2O <=> HO2 + H2O
  qf[30] = sc[1] * sc[3] * sc[5];
  qr[30] = sc[5] * sc[6];

  // reaction 31: H + O2 + N2 <=> HO2 + N2
  qf[31] = sc[1] * sc[3] * sc[21];
  qr[31] = sc[6] * sc[21];

  // reaction 32: CO + O + M <=> CO2 + M
  qf[32] = sc[2] * sc[10];
  qr[32] = sc[11];

  // reaction 33: HCO + M <=> CO + H + M
  qf[33] = sc_qss[3];
  qr[33] = sc[1] * sc[10];

  // reaction 34: C2H2 + CH3 + M <=> aC3H5 + M
  qf[34] = sc[8] * sc[13];
  qr[34] = sc[19];

  // reaction 35: H + O2 <=> O + OH
  qf[35] = sc[1] * sc[3];
  qr[35] = sc[2] * sc[4];

  // reaction 36: H2 + O <=> H + OH
  qf[36] = sc[0] * sc[2];
  qr[36] = sc[1] * sc[4];

  // reaction 37: H2 + OH <=> H + H2O
  qf[37] = sc[0] * sc[4];
  qr[37] = sc[1] * sc[5];

  // reaction 38: 2 OH <=> H2O + O
  qf[38] = (sc[4] * sc[4]);
  qr[38] = sc[2] * sc[5];

  // reaction 39: H + HO2 <=> H2O + O
  qf[39] = sc[1] * sc[6];
  qr[39] = sc[2] * sc[5];

  // reaction 40: H + HO2 <=> H2 + O2
  qf[40] = sc[1] * sc[6];
  qr[40] = sc[0] * sc[3];

  // reaction 41: H + HO2 <=> 2 OH
  qf[41] = sc[1] * sc[6];
  qr[41] = (sc[4] * sc[4]);

  // reaction 42: HO2 + O <=> O2 + OH
  qf[42] = sc[2] * sc[6];
  qr[42] = sc[3] * sc[4];

  // reaction 43: HO2 + OH <=> H2O + O2
  qf[43] = sc[4] * sc[6];
  qr[43] = sc[3] * sc[5];

  // reaction 44: 2 HO2 <=> H2O2 + O2
  qf[44] = (sc[6] * sc[6]);
  qr[44] = sc[3] * sc[7];

  // reaction 45: 2 HO2 <=> H2O2 + O2
  qf[45] = (sc[6] * sc[6]);
  qr[45] = sc[3] * sc[7];

  // reaction 46: H + H2O2 <=> H2 + HO2
  qf[46] = sc[1] * sc[7];
  qr[46] = sc[0] * sc[6];

  // reaction 47: H + H2O2 <=> H2O + OH
  qf[47] = sc[1] * sc[7];
  qr[47] = sc[4] * sc[5];

  // reaction 48: H2O2 + O <=> HO2 + OH
  qf[48] = sc[2] * sc[7];
  qr[48] = sc[4] * sc[6];

  // reaction 49: H2O2 + OH <=> H2O + HO2
  qf[49] = sc[4] * sc[7];
  qr[49] = sc[5] * sc[6];

  // reaction 50: H2O2 + OH <=> H2O + HO2
  qf[50] = sc[4] * sc[7];
  qr[50] = sc[5] * sc[6];

  // reaction 51: CO + OH <=> CO2 + H
  qf[51] = sc[4] * sc[10];
  qr[51] = sc[1] * sc[11];

  // reaction 52: CO + O2 <=> CO2 + O
  qf[52] = sc[3] * sc[10];
  qr[52] = sc[2] * sc[11];

  // reaction 53: CO + HO2 <=> CO2 + OH
  qf[53] = sc[6] * sc[10];
  qr[53] = sc[4] * sc[11];

  // reaction 54: CH + O <=> CO + H
  qf[54] = sc[2] * sc_qss[0];
  qr[54] = sc[1] * sc[10];

  // reaction 55: CH + OH <=> H + HCO
  qf[55] = sc[4] * sc_qss[0];
  qr[55] = sc[1] * sc_qss[3];

  // reaction 56: CH + H2 <=> CH2 + H
  qf[56] = sc[0] * sc_qss[0];
  qr[56] = sc[1] * sc_qss[1];

  // reaction 57: CH + H2O <=> CH2O + H
  qf[57] = sc[5] * sc_qss[0];
  qr[57] = sc[1] * sc[12];

  // reaction 58: CH + O2 <=> HCO + O
  qf[58] = sc[3] * sc_qss[0];
  qr[58] = sc[2] * sc_qss[3];

  // reaction 59: CH + CO2 <=> CO + HCO
  qf[59] = sc[11] * sc_qss[0];
  qr[59] = sc[10] * sc_qss[3];

  // reaction 60: H + HCO <=> CO + H2
  qf[60] = sc[1] * sc_qss[3];
  qr[60] = sc[0] * sc[10];

  // reaction 61: HCO + O <=> CO + OH
  qf[61] = sc[2] * sc_qss[3];
  qr[61] = sc[4] * sc[10];

  // reaction 62: HCO + O <=> CO2 + H
  qf[62] = sc[2] * sc_qss[3];
  qr[62] = sc[1] * sc[11];

  // reaction 63: HCO + OH <=> CO + H2O
  qf[63] = sc[4] * sc_qss[3];
  qr[63] = sc[5] * sc[10];

  // reaction 64: HCO + O2 <=> CO + HO2
  qf[64] = sc[3] * sc_qss[3];
  qr[64] = sc[6] * sc[10];

  // reaction 65: CH2 + H2 <=> CH3 + H
  qf[65] = sc[0] * sc_qss[1];
  qr[65] = sc[1] * sc[8];

  // reaction 66: CH2 + O <=> H + HCO
  qf[66] = sc[2] * sc_qss[1];
  qr[66] = sc[1] * sc_qss[3];

  // reaction 67: CH2 + O2 <=> HCO + OH
  qf[67] = sc[3] * sc_qss[1];
  qr[67] = sc[4] * sc_qss[3];

  // reaction 68: CH2 + O2 <=> CO2 + 2 H
  qf[68] = sc[3] * sc_qss[1];
  qr[68] = (sc[1] * sc[1]) * sc[11];

  // reaction 69: CH2 + OH <=> CH2O + H
  qf[69] = sc[4] * sc_qss[1];
  qr[69] = sc[1] * sc[12];

  // reaction 70: CH2 + OH <=> CH + H2O
  qf[70] = sc[4] * sc_qss[1];
  qr[70] = sc[5] * sc_qss[0];

  // reaction 71: CH2 + HO2 <=> CH2O + OH
  qf[71] = sc[6] * sc_qss[1];
  qr[71] = sc[4] * sc[12];

  // reaction 72: CH + CH2 <=> C2H2 + H
  qf[72] = sc_qss[0] * sc_qss[1];
  qr[72] = sc[1] * sc[13];

  // reaction 73: 2 CH2 <=> C2H2 + H2
  qf[73] = sc_qss[1] * sc_qss[1];
  qr[73] = sc[0] * sc[13];

  // reaction 74: CH2* + N2 <=> CH2 + N2
  qf[74] = sc[21] * sc_qss[2];
  qr[74] = sc[21] * sc_qss[1];

  // reaction 75: CH2* + H <=> CH + H2
  qf[75] = sc[1] * sc_qss[2];
  qr[75] = sc[0] * sc_qss[0];

  // reaction 76: CH2* + O <=> CO + H2
  qf[76] = sc[2] * sc_qss[2];
  qr[76] = sc[0] * sc[10];

  // reaction 77: CH2* + O <=> H + HCO
  qf[77] = sc[2] * sc_qss[2];
  qr[77] = sc[1] * sc_qss[3];

  // reaction 78: CH2* + OH <=> CH2O + H
  qf[78] = sc[4] * sc_qss[2];
  qr[78] = sc[1] * sc[12];

  // reaction 79: CH2* + H2 <=> CH3 + H
  qf[79] = sc[0] * sc_qss[2];
  qr[79] = sc[1] * sc[8];

  // reaction 80: CH2* + O2 <=> CO + H + OH
  qf[80] = sc[3] * sc_qss[2];
  qr[80] = sc[1] * sc[4] * sc[10];

  // reaction 81: CH2* + O2 <=> CO + H2O
  qf[81] = sc[3] * sc_qss[2];
  qr[81] = sc[5] * sc[10];

  // reaction 82: CH2* + H2O <=> CH2 + H2O
  qf[82] = sc[5] * sc_qss[2];
  qr[82] = sc[5] * sc_qss[1];

  // reaction 83: CH2* + CO <=> CH2 + CO
  qf[83] = sc[10] * sc_qss[2];
  qr[83] = sc[10] * sc_qss[1];

  // reaction 84: CH2* + CO2 <=> CH2 + CO2
  qf[84] = sc[11] * sc_qss[2];
  qr[84] = sc[11] * sc_qss[1];

  // reaction 85: CH2* + CO2 <=> CH2O + CO
  qf[85] = sc[11] * sc_qss[2];
  qr[85] = sc[10] * sc[12];

  // reaction 86: CH2O + H <=> H2 + HCO
  qf[86] = sc[1] * sc[12];
  qr[86] = sc[0] * sc_qss[3];

  // reaction 87: CH2O + O <=> HCO + OH
  qf[87] = sc[2] * sc[12];
  qr[87] = sc[4] * sc_qss[3];

  // reaction 88: CH2O + OH <=> H2O + HCO
  qf[88] = sc[4] * sc[12];
  qr[88] = sc[5] * sc_qss[3];

  // reaction 89: CH2O + O2 <=> HCO + HO2
  qf[89] = sc[3] * sc[12];
  qr[89] = sc[6] * sc_qss[3];

  // reaction 90: CH2O + HO2 <=> H2O2 + HCO
  qf[90] = sc[6] * sc[12];
  qr[90] = sc[7] * sc_qss[3];

  // reaction 91: CH + CH2O <=> CH2CO + H
  qf[91] = sc[12] * sc_qss[0];
  qr[91] = sc[1] * sc[17];

  // reaction 92: CH3 + O <=> CH2O + H
  qf[92] = sc[2] * sc[8];
  qr[92] = sc[1] * sc[12];

  // reaction 93: CH3 + OH <=> CH2 + H2O
  qf[93] = sc[4] * sc[8];
  qr[93] = sc[5] * sc_qss[1];

  // reaction 94: CH3 + OH <=> CH2* + H2O
  qf[94] = sc[4] * sc[8];
  qr[94] = sc[5] * sc_qss[2];

  // reaction 95: CH3 + O2 <=> CH3O + O
  qf[95] = sc[3] * sc[8];
  qr[95] = sc[2] * sc_qss[4];

  // reaction 96: CH3 + O2 <=> CH2O + OH
  qf[96] = sc[3] * sc[8];
  qr[96] = sc[4] * sc[12];

  // reaction 97: CH3 + HO2 <=> CH4 + O2
  qf[97] = sc[6] * sc[8];
  qr[97] = sc[3] * sc[9];

  // reaction 98: CH3 + HO2 <=> CH3O + OH
  qf[98] = sc[6] * sc[8];
  qr[98] = sc[4] * sc_qss[4];

  // reaction 99: CH3 + H2O2 <=> CH4 + HO2
  qf[99] = sc[7] * sc[8];
  qr[99] = sc[6] * sc[9];

  // reaction 100: CH + CH3 <=> C2H3 + H
  qf[100] = sc[8] * sc_qss[0];
  qr[100] = sc[1] * sc_qss[6];

  // reaction 101: CH3 + HCO <=> CH4 + CO
  qf[101] = sc[8] * sc_qss[3];
  qr[101] = sc[9] * sc[10];

  // reaction 102: CH2O + CH3 <=> CH4 + HCO
  qf[102] = sc[8] * sc[12];
  qr[102] = sc[9] * sc_qss[3];

  // reaction 103: CH2 + CH3 <=> C2H4 + H
  qf[103] = sc[8] * sc_qss[1];
  qr[103] = sc[1] * sc[14];

  // reaction 104: CH2* + CH3 <=> C2H4 + H
  qf[104] = sc[8] * sc_qss[2];
  qr[104] = sc[1] * sc[14];

  // reaction 105: 2 CH3 <=> C2H5 + H
  qf[105] = (sc[8] * sc[8]);
  qr[105] = sc[1] * sc_qss[7];

  // reaction 106: CH3 + HCCO <=> C2H4 + CO
  qf[106] = sc[8] * sc[16];
  qr[106] = sc[10] * sc[14];

  // reaction 107: CH3O + H <=> CH2O + H2
  qf[107] = sc[1] * sc_qss[4];
  qr[107] = sc[0] * sc[12];

  // reaction 108: CH3O + H <=> CH3 + OH
  qf[108] = sc[1] * sc_qss[4];
  qr[108] = sc[4] * sc[8];

  // reaction 109: CH3O + H <=> CH2* + H2O
  qf[109] = sc[1] * sc_qss[4];
  qr[109] = sc[5] * sc_qss[2];

  // reaction 110: CH3O + O <=> CH2O + OH
  qf[110] = sc[2] * sc_qss[4];
  qr[110] = sc[4] * sc[12];

  // reaction 111: CH3O + OH <=> CH2O + H2O
  qf[111] = sc[4] * sc_qss[4];
  qr[111] = sc[5] * sc[12];

  // reaction 112: CH3O + O2 <=> CH2O + HO2
  qf[112] = sc[3] * sc_qss[4];
  qr[112] = sc[6] * sc[12];

  // reaction 113: CH4 + H <=> CH3 + H2
  qf[113] = sc[1] * sc[9];
  qr[113] = sc[0] * sc[8];

  // reaction 114: CH4 + O <=> CH3 + OH
  qf[114] = sc[2] * sc[9];
  qr[114] = sc[4] * sc[8];

  // reaction 115: CH4 + OH <=> CH3 + H2O
  qf[115] = sc[4] * sc[9];
  qr[115] = sc[5] * sc[8];

  // reaction 116: CH + CH4 <=> C2H4 + H
  qf[116] = sc[9] * sc_qss[0];
  qr[116] = sc[1] * sc[14];

  // reaction 117: CH2 + CH4 <=> 2 CH3
  qf[117] = sc[9] * sc_qss[1];
  qr[117] = (sc[8] * sc[8]);

  // reaction 118: CH2* + CH4 <=> 2 CH3
  qf[118] = sc[9] * sc_qss[2];
  qr[118] = (sc[8] * sc[8]);

  // reaction 119: H + HCCO <=> CH2* + CO
  qf[119] = sc[1] * sc[16];
  qr[119] = sc[10] * sc_qss[2];

  // reaction 120: HCCO + O <=> 2 CO + H
  qf[120] = sc[2] * sc[16];
  qr[120] = sc[1] * (sc[10] * sc[10]);

  // reaction 121: HCCO + O2 <=> 2 CO + OH
  qf[121] = sc[3] * sc[16];
  qr[121] = sc[4] * (sc[10] * sc[10]);

  // reaction 122: CH + HCCO <=> C2H2 + CO
  qf[122] = sc[16] * sc_qss[0];
  qr[122] = sc[10] * sc[13];

  // reaction 123: CH2 + HCCO <=> C2H3 + CO
  qf[123] = sc[16] * sc_qss[1];
  qr[123] = sc[10] * sc_qss[6];

  // reaction 124: 2 HCCO <=> C2H2 + 2 CO
  qf[124] = (sc[16] * sc[16]);
  qr[124] = (sc[10] * sc[10]) * sc[13];

  // reaction 125: C2H2 + O <=> H + HCCO
  qf[125] = sc[2] * sc[13];
  qr[125] = sc[1] * sc[16];

  // reaction 126: C2H2 + O <=> CH2 + CO
  qf[126] = sc[2] * sc[13];
  qr[126] = sc[10] * sc_qss[1];

  // reaction 127: C2H2 + OH <=> CH2CO + H
  qf[127] = sc[4] * sc[13];
  qr[127] = sc[1] * sc[17];

  // reaction 128: C2H2 + OH <=> CH3 + CO
  qf[128] = sc[4] * sc[13];
  qr[128] = sc[8] * sc[10];

  // reaction 129: C2H2 + HCO <=> C2H3 + CO
  qf[129] = sc[13] * sc_qss[3];
  qr[129] = sc[10] * sc_qss[6];

  // reaction 130: H + H2CC <=> C2H2 + H
  qf[130] = sc[1] * sc_qss[5];
  qr[130] = sc[1] * sc[13];

  // reaction 131: H2CC + O <=> CH2 + CO
  qf[131] = sc[2] * sc_qss[5];
  qr[131] = sc[10] * sc_qss[1];

  // reaction 132: H2CC + OH <=> CH2CO + H
  qf[132] = sc[4] * sc_qss[5];
  qr[132] = sc[1] * sc[17];

  // reaction 133: H2CC + O2 <=> CH2 + CO2
  qf[133] = sc[3] * sc_qss[5];
  qr[133] = sc[11] * sc_qss[1];

  // reaction 134: CH2CO + H <=> H2 + HCCO
  qf[134] = sc[1] * sc[17];
  qr[134] = sc[0] * sc[16];

  // reaction 135: CH2CO + H <=> CH3 + CO
  qf[135] = sc[1] * sc[17];
  qr[135] = sc[8] * sc[10];

  // reaction 136: CH2CO + O <=> HCCO + OH
  qf[136] = sc[2] * sc[17];
  qr[136] = sc[4] * sc[16];

  // reaction 137: CH2CO + O <=> CH2 + CO2
  qf[137] = sc[2] * sc[17];
  qr[137] = sc[11] * sc_qss[1];

  // reaction 138: CH2CO + OH <=> H2O + HCCO
  qf[138] = sc[4] * sc[17];
  qr[138] = sc[5] * sc[16];

  // reaction 139: C2H3 + H <=> C2H2 + H2
  qf[139] = sc[1] * sc_qss[6];
  qr[139] = sc[0] * sc[13];

  // reaction 140: C2H3 + H <=> H2 + H2CC
  qf[140] = sc[1] * sc_qss[6];
  qr[140] = sc[0] * sc_qss[5];

  // reaction 141: C2H3 + O <=> CH2CO + H
  qf[141] = sc[2] * sc_qss[6];
  qr[141] = sc[1] * sc[17];

  // reaction 142: C2H3 + O <=> CH3 + CO
  qf[142] = sc[2] * sc_qss[6];
  qr[142] = sc[8] * sc[10];

  // reaction 143: C2H3 + OH <=> C2H2 + H2O
  qf[143] = sc[4] * sc_qss[6];
  qr[143] = sc[5] * sc[13];

  // reaction 144: C2H3 + O2 <=> C2H2 + HO2
  qf[144] = sc[3] * sc_qss[6];
  qr[144] = sc[6] * sc[13];

  // reaction 145: C2H3 + O2 <=> CH2CHO + O
  qf[145] = sc[3] * sc_qss[6];
  qr[145] = sc[2] * sc_qss[8];

  // reaction 146: C2H3 + O2 <=> CH2O + HCO
  qf[146] = sc[3] * sc_qss[6];
  qr[146] = sc[12] * sc_qss[3];

  // reaction 147: C2H3 + HO2 <=> CH2CHO + OH
  qf[147] = sc[6] * sc_qss[6];
  qr[147] = sc[4] * sc_qss[8];

  // reaction 148: C2H3 + H2O2 <=> C2H4 + HO2
  qf[148] = sc[7] * sc_qss[6];
  qr[148] = sc[6] * sc[14];

  // reaction 149: C2H3 + HCO <=> C2H4 + CO
  qf[149] = sc_qss[3] * sc_qss[6];
  qr[149] = sc[10] * sc[14];

  // reaction 150: C2H3 + CH3 <=> C2H2 + CH4
  qf[150] = sc[8] * sc_qss[6];
  qr[150] = sc[9] * sc[13];

  // reaction 151: C2H3 + CH3 <=> H + aC3H5
  qf[151] = sc[8] * sc_qss[6];
  qr[151] = sc[1] * sc[19];

  // reaction 152: CH2CHO <=> CH3 + CO
  qf[152] = sc_qss[8];
  qr[152] = sc[8] * sc[10];

  // reaction 153: CH2CHO + H <=> CH3 + HCO
  qf[153] = sc[1] * sc_qss[8];
  qr[153] = sc[8] * sc_qss[3];

  // reaction 154: CH2CHO + H <=> CH2CO + H2
  qf[154] = sc[1] * sc_qss[8];
  qr[154] = sc[0] * sc[17];

  // reaction 155: CH2CHO + O <=> CH2CO + OH
  qf[155] = sc[2] * sc_qss[8];
  qr[155] = sc[4] * sc[17];

  // reaction 156: CH2CHO + OH <=> CH2CO + H2O
  qf[156] = sc[4] * sc_qss[8];
  qr[156] = sc[5] * sc[17];

  // reaction 157: CH2CHO + O2 <=> CH2CO + HO2
  qf[157] = sc[3] * sc_qss[8];
  qr[157] = sc[6] * sc[17];

  // reaction 158: CH2CHO + O2 <=> CH2O + CO + OH
  qf[158] = sc[3] * sc_qss[8];
  qr[158] = sc[4] * sc[10] * sc[12];

  // reaction 159: C2H4 + H <=> C2H3 + H2
  qf[159] = sc[1] * sc[14];
  qr[159] = sc[0] * sc_qss[6];

  // reaction 160: C2H4 + O <=> C2H3 + OH
  qf[160] = sc[2] * sc[14];
  qr[160] = sc[4] * sc_qss[6];

  // reaction 161: C2H4 + O <=> CH3 + HCO
  qf[161] = sc[2] * sc[14];
  qr[161] = sc[8] * sc_qss[3];

  // reaction 162: C2H4 + O <=> CH2 + CH2O
  qf[162] = sc[2] * sc[14];
  qr[162] = sc[12] * sc_qss[1];

  // reaction 163: C2H4 + OH <=> C2H3 + H2O
  qf[163] = sc[4] * sc[14];
  qr[163] = sc[5] * sc_qss[6];

  // reaction 164: C2H4 + O2 <=> C2H3 + HO2
  qf[164] = sc[3] * sc[14];
  qr[164] = sc[6] * sc_qss[6];

  // reaction 165: C2H4 + HO2 <=> CH3CHO + OH
  qf[165] = sc[6] * sc[14];
  qr[165] = sc[4] * sc[18];

  // reaction 166: C2H4 + HCO <=> C2H5 + CO
  qf[166] = sc[14] * sc_qss[3];
  qr[166] = sc[10] * sc_qss[7];

  // reaction 167: C2H4 + CH2 <=> H + aC3H5
  qf[167] = sc[14] * sc_qss[1];
  qr[167] = sc[1] * sc[19];

  // reaction 168: C2H4 + CH2* <=> CH4 + H2CC
  qf[168] = sc[14] * sc_qss[2];
  qr[168] = sc[9] * sc_qss[5];

  // reaction 169: C2H4 + CH2* <=> H + aC3H5
  qf[169] = sc[14] * sc_qss[2];
  qr[169] = sc[1] * sc[19];

  // reaction 170: C2H4 + CH3 <=> C2H3 + CH4
  qf[170] = sc[8] * sc[14];
  qr[170] = sc[9] * sc_qss[6];

  // reaction 171: C2H4 + CH3 <=> nC3H7
  qf[171] = sc[8] * sc[14];
  qr[171] = sc_qss[9];

  // reaction 172: C2H5 + H <=> C2H4 + H2
  qf[172] = sc[1] * sc_qss[7];
  qr[172] = sc[0] * sc[14];

  // reaction 173: C2H5 + O <=> CH2O + CH3
  qf[173] = sc[2] * sc_qss[7];
  qr[173] = sc[8] * sc[12];

  // reaction 174: C2H5 + O <=> CH3CHO + H
  qf[174] = sc[2] * sc_qss[7];
  qr[174] = sc[1] * sc[18];

  // reaction 175: C2H5 + O2 <=> C2H4 + HO2
  qf[175] = sc[3] * sc_qss[7];
  qr[175] = sc[6] * sc[14];

  // reaction 176: C2H5 + HO2 <=> C2H6 + O2
  qf[176] = sc[6] * sc_qss[7];
  qr[176] = sc[3] * sc[15];

  // reaction 177: C2H5 + HO2 <=> C2H4 + H2O2
  qf[177] = sc[6] * sc_qss[7];
  qr[177] = sc[7] * sc[14];

  // reaction 178: C2H5 + HO2 <=> CH2O + CH3 + OH
  qf[178] = sc[6] * sc_qss[7];
  qr[178] = sc[4] * sc[8] * sc[12];

  // reaction 179: C2H5 + H2O2 <=> C2H6 + HO2
  qf[179] = sc[7] * sc_qss[7];
  qr[179] = sc[6] * sc[15];

  // reaction 180: C2H5 + HCO <=> C2H6 + CO
  qf[180] = sc_qss[3] * sc_qss[7];
  qr[180] = sc[10] * sc[15];

  // reaction 181: C2H6 + H <=> C2H5 + H2
  qf[181] = sc[1] * sc[15];
  qr[181] = sc[0] * sc_qss[7];

  // reaction 182: C2H6 + O <=> C2H5 + OH
  qf[182] = sc[2] * sc[15];
  qr[182] = sc[4] * sc_qss[7];

  // reaction 183: C2H6 + OH <=> C2H5 + H2O
  qf[183] = sc[4] * sc[15];
  qr[183] = sc[5] * sc_qss[7];

  // reaction 184: C2H6 + CH2* <=> C2H5 + CH3
  qf[184] = sc[15] * sc_qss[2];
  qr[184] = sc[8] * sc_qss[7];

  // reaction 185: C2H6 + CH3 <=> C2H5 + CH4
  qf[185] = sc[8] * sc[15];
  qr[185] = sc[9] * sc_qss[7];

  // reaction 186: H + aC3H5 <=> CH4 + H2CC
  qf[186] = sc[1] * sc[19];
  qr[186] = sc[9] * sc_qss[5];

  // reaction 187: HO2 + aC3H5 <=> C3H6 + O2
  qf[187] = sc[6] * sc[19];
  qr[187] = sc[3] * sc[20];

  // reaction 188: HO2 + aC3H5 <=> C2H3 + CH2O + OH
  qf[188] = sc[6] * sc[19];
  qr[188] = sc[4] * sc[12] * sc_qss[6];

  // reaction 189: HCO + aC3H5 <=> C3H6 + CO
  qf[189] = sc[19] * sc_qss[3];
  qr[189] = sc[10] * sc[20];

  // reaction 190: C3H6 + H <=> C2H4 + CH3
  qf[190] = sc[1] * sc[20];
  qr[190] = sc[8] * sc[14];

  // reaction 191: C3H6 + H <=> H2 + aC3H5
  qf[191] = sc[1] * sc[20];
  qr[191] = sc[0] * sc[19];

  // reaction 192: C3H6 + O <=> CH2CO + CH3 + H
  qf[192] = sc[2] * sc[20];
  qr[192] = sc[1] * sc[8] * sc[17];

  // reaction 193: C3H6 + O => C2H5 + HCO
  qf[193] = sc[2] * sc[20];
  qr[193] = 0.0;

  // reaction 194: C3H6 + O <=> OH + aC3H5
  qf[194] = sc[2] * sc[20];
  qr[194] = sc[4] * sc[19];

  // reaction 195: C3H6 + OH <=> H2O + aC3H5
  qf[195] = sc[4] * sc[20];
  qr[195] = sc[5] * sc[19];

  // reaction 196: C3H6 + HO2 <=> H2O2 + aC3H5
  qf[196] = sc[6] * sc[20];
  qr[196] = sc[7] * sc[19];

  // reaction 197: C3H6 + CH3 <=> CH4 + aC3H5
  qf[197] = sc[8] * sc[20];
  qr[197] = sc[9] * sc[19];

  // reaction 198: H + nC3H7 <=> C2H5 + CH3
  qf[198] = sc[1] * sc_qss[9];
  qr[198] = sc[8] * sc_qss[7];

  // reaction 199: H + nC3H7 <=> C3H6 + H2
  qf[199] = sc[1] * sc_qss[9];
  qr[199] = sc[0] * sc[20];

  // reaction 200: O + nC3H7 <=> C2H5 + CH2O
  qf[200] = sc[2] * sc_qss[9];
  qr[200] = sc[12] * sc_qss[7];

  // reaction 201: OH + nC3H7 <=> C3H6 + H2O
  qf[201] = sc[4] * sc_qss[9];
  qr[201] = sc[5] * sc[20];

  // reaction 202: O2 + nC3H7 <=> C3H6 + HO2
  qf[202] = sc[3] * sc_qss[9];
  qr[202] = sc[6] * sc[20];

  // reaction 203: HO2 + nC3H7 <=> C2H5 + CH2O + OH
  qf[203] = sc[6] * sc_qss[9];
  qr[203] = sc[4] * sc[12] * sc_qss[7];

  // reaction 204: CH3 + nC3H7 <=> C3H6 + CH4
  qf[204] = sc[8] * sc_qss[9];
  qr[204] = sc[9] * sc[20];

  // reaction 205: C2H3 + C2H5 <=> CH3 + aC3H5
  qf[205] = sc_qss[6] * sc_qss[7];
  qr[205] = sc[8] * sc[19];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 10; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  2 OH (+M) <=> H2O2 (+M)
  k_f = 74000000 * exp((-0.37) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2300000 * exp(-0.9 * tc[0] - (-855.468331868023) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2654) * exp(-tc[1] * 0.0106382978723404) +
    0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC);
  // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
  k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - (42446.3257606281) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0679999999999999) * exp(-tc[1] * 0.0050761421319797) +
    0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC);
  // reaction 2:  CH + CO (+M) <=> HCCO (+M)
  k_f = 50000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - (974.227464997937) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4243) * exp(-tc[1] * 0.00421940928270042) +
    0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC);
  // reaction 3:  H + HCO (+M) <=> CH2O (+M)
  k_f = 1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - (717.083748771726) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2176) * exp(-tc[1] * 0.003690036900369) +
    0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC);
  // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
  k_f = 25000000000 * exp((-0.8) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - (618.956498939805) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.32) * exp(-tc[1] * 0.0128205128205128) +
    0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC);
  // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
  k_f = 810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - (3570.32224388449) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4093) * exp(-tc[1] * 0.00363636363636364) +
    0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC);
  // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
  k_f = 540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - (2797.88466187424) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.242) * exp(-tc[1] * 0.0106382978723404) +
    0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC);
  // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - (1227.84866456352) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.217) * exp(-tc[1] * 0.0135135135135135) +
    0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC);
  // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
  k_f = 18000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - (2566.40499560407) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.3827) * exp(-tc[1] * 0.0764759865402264) +
    0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC);
  // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
  k_f = 21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - (3130.00766130536) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4675) * exp(-tc[1] * 0.00662251655629139) +
    0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC);
  // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
  k_f = 386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - (18014.5125184767) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (-0.9816) * exp(-tc[1] * 0.000185745862510913) +
    1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) * (refCinv);
  // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
  k_f = 330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - (5988.27832307616) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.663) * exp(-tc[1] * 0.000585823081429408) +
    0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC);
  // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC);
  // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
  k_f = 25000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - (4916.32618157895) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.825) * exp(-tc[1] * 0.000745934656124124) +
    0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC);
  // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
  k_f = 100000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - (2365.11832928218) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.45) * exp(-tc[1] * 0.000112359550561798) +
    0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC);
  // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
  k_f = 8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - (50251.2162472593) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.2655) * exp(-tc[1] * 0.00555555555555556) +
    0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) * (refCinv);
  // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - (3507.4201606589) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.0247000000000001) * exp(-tc[1] * 0.00476190476190476) +
    0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC);
  // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3364.00341090455) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC);
  // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
  k_f = 200000000;
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  redP = Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - (3003.09641818941) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.98) * exp(-tc[1] * 0.000911909538573774) +
    0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC);
  // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
  k_f = 13300000 * exp(-(1640.83858218945) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[15];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.51666063304) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC);
  // reaction 20:  C2H2 (+M) <=> H2CC (+M)
  k_f = 800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
  redP =
    Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - (25009.8682904946) * invT);
  Corr = redP / (1. + redP);
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5]));
  // reaction 21:  2 H + M <=> H2 + M
  k_f = 1000000 * exp((-1) * tc[0]);
  Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] + (-1) * sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 22:  2 H + H2 <=> H2 + H2
  k_f = 90000 * exp((-0.6) * tc[0]);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 23:  2 H + H2O <=> H2 + H2O
  k_f = 60000000 * exp((-1.25) * tc[0]);
  qf[23] *= k_f;
  qr[23] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 24:  2 H + CO2 <=> H2 + CO2
  k_f = 550000000 * exp((-2) * tc[0]);
  qf[24] *= k_f;
  qr[24] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC);
  // reaction 25:  H + OH + M <=> H2O + M
  k_f = 22000000000 * exp((-2) * tc[0]);
  Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] + sc[9] + (2) * sc[13] +
         (2) * sc[14] + (2) * sc[15];
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC);
  // reaction 26:  H + O + M <=> OH + M
  k_f = 500000 * exp((-1) * tc[0]);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC);
  // reaction 27:  2 O + M <=> O2 + M
  k_f = 120000 * exp((-1) * tc[0]);
  Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] + (0.75) * sc[10] +
         (2.6) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC);
  // reaction 28:  H + O2 + M <=> HO2 + M
  k_f = 2800000 * exp((-0.86) * tc[0]);
  Corr = mixture + (-1) * sc[3] + (-1) * sc[5] + (-0.25) * sc[10] +
         (0.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (0.5) * sc[15] +
         (-1) * sc[21];
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 29:  H + O2 + O2 <=> HO2 + O2
  k_f = 300000000 * exp((-1.72) * tc[0]);
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 30:  H + O2 + H2O <=> HO2 + H2O
  k_f = 16520000 * exp((-0.76) * tc[0]);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 31:  H + O2 + N2 <=> HO2 + N2
  k_f = 26000000 * exp((-1.24) * tc[0]);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC);
  // reaction 32:  CO + O + M <=> CO2 + M
  k_f = 602 * exp(-(1509.64999741416) * invT);
  Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
         (2.5) * sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC);
  // reaction 33:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] + sc[11] +
         (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
  qf[33] *= Corr * k_f;
  qr[33] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) * (refCinv);
  // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
  k_f = 2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
  Corr = mixture;
  qf[34] *= Corr * k_f;
  qr[34] *= Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC);
  // reaction 35:  H + O2 <=> O + OH
  k_f = 83000000 * exp(-(7252.86180424342) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 36:  H2 + O <=> H + OH
  k_f = 0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4]));
  // reaction 37:  H2 + OH <=> H + H2O
  k_f = 216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5]));
  // reaction 38:  2 OH <=> H2O + O
  k_f = 0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5]));
  // reaction 39:  H + HO2 <=> H2O + O
  k_f = 3970000 * exp(-(337.658382754967) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6]));
  // reaction 40:  H + HO2 <=> H2 + O2
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6]));
  // reaction 41:  H + HO2 <=> 2 OH
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6]));
  // reaction 42:  HO2 + O <=> O2 + OH
  k_f = 20000000;
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6]));
  // reaction 43:  HO2 + OH <=> H2O + O2
  k_f = 46400000 * exp(-(-251.60833290236) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6]));
  // reaction 44:  2 HO2 <=> H2O2 + O2
  k_f = 130000 * exp(-(-820.243165261693) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 45:  2 HO2 <=> H2O2 + O2
  k_f = 420000000 * exp(-(6038.59998965664) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 46:  H + H2O2 <=> H2 + HO2
  k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7]));
  // reaction 47:  H + H2O2 <=> H2O + OH
  k_f = 10000000 * exp(-(1811.57999689699) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7]));
  // reaction 48:  H2O2 + O <=> HO2 + OH
  k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 49:  H2O2 + OH <=> H2O + HO2
  k_f = 1750000 * exp(-(161.02933305751) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 50:  H2O2 + OH <=> H2O + HO2
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7]));
  // reaction 51:  CO + OH <=> CO2 + H
  k_f = 47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11]));
  // reaction 52:  CO + O2 <=> CO2 + O
  k_f = 2500000 * exp(-(24053.7566254656) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11]));
  // reaction 53:  CO + HO2 <=> CO2 + OH
  k_f = 150000000 * exp(-(11875.9133129914) * invT);
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11]));
  // reaction 54:  CH + O <=> CO + H
  k_f = 57000000;
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0]));
  // reaction 55:  CH + OH <=> H + HCO
  k_f = 30000000;
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 56:  CH + H2 <=> CH2 + H
  k_f = 110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1]));
  // reaction 57:  CH + H2O <=> CH2O + H
  k_f = 5710000 * exp(-(-379.928582682563) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0]));
  // reaction 58:  CH + O2 <=> HCO + O
  k_f = 33000000;
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 59:  CH + CO2 <=> CO + HCO
  k_f = 3400000 * exp(-(347.219499405257) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3]));
  // reaction 60:  H + HCO <=> CO + H2
  k_f = 73400000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3]));
  // reaction 61:  HCO + O <=> CO + OH
  k_f = 30000000;
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3]));
  // reaction 62:  HCO + O <=> CO2 + H
  k_f = 30000000;
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3]));
  // reaction 63:  HCO + OH <=> CO + H2O
  k_f = 50000000;
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3]));
  // reaction 64:  HCO + O2 <=> CO + HO2
  k_f = 7600000 * exp(-(201.286666321888) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3]));
  // reaction 65:  CH2 + H2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1]));
  // reaction 66:  CH2 + O <=> H + HCO
  k_f = 80000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 67:  CH2 + O2 <=> HCO + OH
  k_f = 10560000 * exp(-(754.82499870708) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3]));
  // reaction 68:  CH2 + O2 <=> CO2 + 2 H
  k_f = 2640000 * exp(-(754.82499870708) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f *
            exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
            (refCinv);
  // reaction 69:  CH2 + OH <=> CH2O + H
  k_f = 20000000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1]));
  // reaction 70:  CH2 + OH <=> CH + H2O
  k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1]));
  // reaction 71:  CH2 + HO2 <=> CH2O + OH
  k_f = 20000000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1]));
  // reaction 72:  CH + CH2 <=> C2H2 + H
  k_f = 40000000;
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1]));
  // reaction 73:  2 CH2 <=> C2H2 + H2
  k_f = 32000000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1]));
  // reaction 74:  CH2* + N2 <=> CH2 + N2
  k_f = 15000000 * exp(-(301.929999482832) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 75:  CH2* + H <=> CH + H2
  k_f = 30000000;
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2]));
  // reaction 76:  CH2* + O <=> CO + H2
  k_f = 15000000;
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2]));
  // reaction 77:  CH2* + O <=> H + HCO
  k_f = 15000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3]));
  // reaction 78:  CH2* + OH <=> CH2O + H
  k_f = 30000000;
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2]));
  // reaction 79:  CH2* + H2 <=> CH3 + H
  k_f = 70000000;
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2]));
  // reaction 80:  CH2* + O2 <=> CO + H + OH
  k_f = 28000000;
  qf[80] *= k_f;
  qr[80] *= k_f *
            exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
            (refCinv);
  // reaction 81:  CH2* + O2 <=> CO + H2O
  k_f = 12000000;
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2]));
  // reaction 82:  CH2* + H2O <=> CH2 + H2O
  k_f = 30000000;
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 83:  CH2* + CO <=> CH2 + CO
  k_f = 9000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 84:  CH2* + CO2 <=> CH2 + CO2
  k_f = 7000000;
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2]));
  // reaction 85:  CH2* + CO2 <=> CH2O + CO
  k_f = 14000000;
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2]));
  // reaction 86:  CH2O + H <=> H2 + HCO
  k_f = 23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3]));
  // reaction 87:  CH2O + O <=> HCO + OH
  k_f = 39000000 * exp(-(1781.38699694871) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3]));
  // reaction 88:  CH2O + OH <=> H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3]));
  // reaction 89:  CH2O + O2 <=> HCO + HO2
  k_f = 100000000 * exp(-(20128.6666321888) * invT);
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3]));
  // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3]));
  // reaction 91:  CH + CH2O <=> CH2CO + H
  k_f = 94600000 * exp(-(-259.156582889431) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0]));
  // reaction 92:  CH3 + O <=> CH2O + H
  k_f = 84300000;
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12]));
  // reaction 93:  CH3 + OH <=> CH2 + H2O
  k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1]));
  // reaction 94:  CH3 + OH <=> CH2* + H2O
  k_f = 25010000;
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2]));
  // reaction 95:  CH3 + O2 <=> CH3O + O
  k_f = 30830000 * exp(-(14492.6399751759) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4]));
  // reaction 96:  CH3 + O2 <=> CH2O + OH
  k_f = 36000 * exp(-(4498.75699229419) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12]));
  // reaction 97:  CH3 + HO2 <=> CH4 + O2
  k_f = 1000000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9]));
  // reaction 98:  CH3 + HO2 <=> CH3O + OH
  k_f = 13400000;
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4]));
  // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
  k_f = 0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9]));
  // reaction 100:  CH + CH3 <=> C2H3 + H
  k_f = 30000000;
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6]));
  // reaction 101:  CH3 + HCO <=> CH4 + CO
  k_f = 8480000;
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3]));
  // reaction 102:  CH2O + CH3 <=> CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3]));
  // reaction 103:  CH2 + CH3 <=> C2H4 + H
  k_f = 40000000;
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1]));
  // reaction 104:  CH2* + CH3 <=> C2H4 + H
  k_f = 12000000 * exp(-(-286.83349950869) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2]));
  // reaction 105:  2 CH3 <=> C2H5 + H
  k_f = 4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7]));
  // reaction 106:  CH3 + HCCO <=> C2H4 + CO
  k_f = 50000000;
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16]));
  // reaction 107:  CH3O + H <=> CH2O + H2
  k_f = 20000000;
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4]));
  // reaction 108:  CH3O + H <=> CH3 + OH
  k_f = 32000000;
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4]));
  // reaction 109:  CH3O + H <=> CH2* + H2O
  k_f = 16000000;
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4]));
  // reaction 110:  CH3O + O <=> CH2O + OH
  k_f = 10000000;
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4]));
  // reaction 111:  CH3O + OH <=> CH2O + H2O
  k_f = 5000000;
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4]));
  // reaction 112:  CH3O + O2 <=> CH2O + HO2
  k_f = 4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4]));
  // reaction 113:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9]));
  // reaction 114:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9]));
  // reaction 115:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9]));
  // reaction 116:  CH + CH4 <=> C2H4 + H
  k_f = 60000000;
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0]));
  // reaction 117:  CH2 + CH4 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1]));
  // reaction 118:  CH2* + CH4 <=> 2 CH3
  k_f = 16000000 * exp(-(-286.83349950869) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2]));
  // reaction 119:  H + HCCO <=> CH2* + CO
  k_f = 100000000;
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2]));
  // reaction 120:  HCCO + O <=> 2 CO + H
  k_f = 100000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 121:  HCCO + O2 <=> 2 CO + OH
  k_f = 1600000 * exp(-(429.747032597231) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
             (refCinv);
  // reaction 122:  CH + HCCO <=> C2H2 + CO
  k_f = 50000000;
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0]));
  // reaction 123:  CH2 + HCCO <=> C2H3 + CO
  k_f = 30000000;
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6]));
  // reaction 124:  2 HCCO <=> C2H2 + 2 CO
  k_f = 10000000;
  qf[124] *= k_f;
  qr[124] *= k_f *
             exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
             (refCinv);
  // reaction 125:  C2H2 + O <=> H + HCCO
  k_f = 16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16]));
  // reaction 126:  C2H2 + O <=> CH2 + CO
  k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1]));
  // reaction 127:  C2H2 + OH <=> CH2CO + H
  k_f = 2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17]));
  // reaction 128:  C2H2 + OH <=> CH3 + CO
  k_f = 4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13]));
  // reaction 129:  C2H2 + HCO <=> C2H3 + CO
  k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6]));
  // reaction 130:  H + H2CC <=> C2H2 + H
  k_f = 100000000;
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5]));
  // reaction 131:  H2CC + O <=> CH2 + CO
  k_f = 100000000;
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 132:  H2CC + OH <=> CH2CO + H
  k_f = 20000000;
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5]));
  // reaction 133:  H2CC + O2 <=> CH2 + CO2
  k_f = 10000000;
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5]));
  // reaction 134:  CH2CO + H <=> H2 + HCCO
  k_f = 50000000 * exp(-(4025.73332643776) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17]));
  // reaction 135:  CH2CO + H <=> CH3 + CO
  k_f = 1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17]));
  // reaction 136:  CH2CO + O <=> HCCO + OH
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17]));
  // reaction 137:  CH2CO + O <=> CH2 + CO2
  k_f = 1750000 * exp(-(679.342498836372) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1]));
  // reaction 138:  CH2CO + OH <=> H2O + HCCO
  k_f = 7500000 * exp(-(1006.43333160944) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17]));
  // reaction 139:  C2H3 + H <=> C2H2 + H2
  k_f = 30000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6]));
  // reaction 140:  C2H3 + H <=> H2 + H2CC
  k_f = 60000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6]));
  // reaction 141:  C2H3 + O <=> CH2CO + H
  k_f = 48000000;
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6]));
  // reaction 142:  C2H3 + O <=> CH3 + CO
  k_f = 48000000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6]));
  // reaction 143:  C2H3 + OH <=> C2H2 + H2O
  k_f = 30110000;
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6]));
  // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6]));
  // reaction 145:  C2H3 + O2 <=> CH2CHO + O
  k_f = 300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 146:  C2H3 + O2 <=> CH2O + HCO
  k_f = 46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6]));
  // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
  k_f = 10000000;
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8]));
  // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
  k_f = 12100 * exp(-(-299.917132819613) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6]));
  // reaction 149:  C2H3 + HCO <=> C2H4 + CO
  k_f = 90330000;
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6]));
  // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
  k_f = 392000;
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6]));
  // reaction 151:  C2H3 + CH3 <=> H + aC3H5
  k_f = 1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6]));
  // reaction 152:  CH2CHO <=> CH3 + CO
  k_f = 7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) * (refCinv);
  // reaction 153:  CH2CHO + H <=> CH3 + HCO
  k_f = 90000000;
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8]));
  // reaction 154:  CH2CHO + H <=> CH2CO + H2
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8]));
  // reaction 155:  CH2CHO + O <=> CH2CO + OH
  k_f = 20000000 * exp(-(2012.86666321888) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8]));
  // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8]));
  // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
  k_f = 140000;
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8]));
  // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
  k_f = 18000;
  qf[158] *= k_f;
  qr[158] *= k_f *
             exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
             (refCinv);
  // reaction 159:  C2H4 + H <=> C2H3 + H2
  k_f = 50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6]));
  // reaction 160:  C2H4 + O <=> C2H3 + OH
  k_f = 15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6]));
  // reaction 161:  C2H4 + O <=> CH3 + HCO
  k_f = 19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3]));
  // reaction 162:  C2H4 + O <=> CH2 + CH2O
  k_f = 0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1]));
  // reaction 163:  C2H4 + OH <=> C2H3 + H2O
  k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6]));
  // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
  k_f = 42200000 * exp(-(30595.573280927) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6]));
  // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
  k_f = 2000000 * exp(-(7045.03332126608) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18]));
  // reaction 166:  C2H4 + HCO <=> C2H5 + CO
  k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7]));
  // reaction 167:  C2H4 + CH2 <=> H + aC3H5
  k_f = 20000000 * exp(-(3019.29999482832) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1]));
  // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
  k_f = 50000000;
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5]));
  // reaction 169:  C2H4 + CH2* <=> H + aC3H5
  k_f = 50000000;
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2]));
  // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6]));
  // reaction 171:  C2H4 + CH3 <=> nC3H7
  k_f = 330000 * exp(-(3874.76832669634) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC);
  // reaction 172:  C2H5 + H <=> C2H4 + H2
  k_f = 2000000;
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7]));
  // reaction 173:  C2H5 + O <=> CH2O + CH3
  k_f = 16040000;
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7]));
  // reaction 174:  C2H5 + O <=> CH3CHO + H
  k_f = 80200000;
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7]));
  // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
  k_f = 20000;
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7]));
  // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
  k_f = 300000;
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7]));
  // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
  k_f = 300000;
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7]));
  // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
  k_f = 24000000;
  qf[178] *= k_f;
  qr[178] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
             (refCinv);
  // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
  k_f = 8700 * exp(-(490.133032493797) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7]));
  // reaction 180:  C2H5 + HCO <=> C2H6 + CO
  k_f = 120000000;
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7]));
  // reaction 181:  C2H6 + H <=> C2H5 + H2
  k_f = 115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7]));
  // reaction 182:  C2H6 + O <=> C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7]));
  // reaction 183:  C2H6 + OH <=> C2H5 + H2O
  k_f = 3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7]));
  // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
  k_f = 40000000 * exp(-(-276.769166192596) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7]));
  // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
  k_f = 6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7]));
  // reaction 186:  H + aC3H5 <=> CH4 + H2CC
  k_f = 20000000 * exp(-(1006.43333160944) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5]));
  // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
  k_f = 2660000;
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20]));
  // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
  k_f = 6600000;
  qf[188] *= k_f;
  qr[188] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
             (refCinv);
  // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
  k_f = 60000000;
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3]));
  // reaction 190:  C3H6 + H <=> C2H4 + CH3
  k_f = 1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20]));
  // reaction 191:  C3H6 + H <=> H2 + aC3H5
  k_f = 0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20]));
  // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
  k_f = 120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
             (refCinv);
  // reaction 193:  C3H6 + O => C2H5 + HCO
  k_f = 35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(g_RT[2] + g_RT[20] - g_RT_qss[3] - g_RT_qss[7]));
  // reaction 194:  C3H6 + O <=> OH + aC3H5
  k_f = 180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20]));
  // reaction 195:  C3H6 + OH <=> H2O + aC3H5
  k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20]));
  // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
  k_f = 0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20]));
  // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
  k_f = 2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20]));
  // reaction 198:  H + nC3H7 <=> C2H5 + CH3
  k_f = 3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 199:  H + nC3H7 <=> C3H6 + H2
  k_f = 1800000;
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9]));
  // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
  k_f = 96000000;
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9]));
  // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
  k_f = 24000000;
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9]));
  // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
  k_f = 90000;
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9]));
  // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
  k_f = 24000000;
  qf[203] *= k_f;
  qr[203] *= k_f *
             exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
             (refCinv);
  // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
  k_f = 11000000;
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9]));
  // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
  k_f = 3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7]));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[22];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[10];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142], qf_qss[142], qr_qss[142];
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * tc[0] - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 22; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 22; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  2 OH (+M) <=> H2O2 (+M)
    const amrex::Real k_f = 74000000 * exp((-0.37) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2300000 * exp(-0.9 * tc[0] - -855.468331868023 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2654 * exp(-tc[1] * 0.0106382978723404) +
      0.7346 * exp(-tc[1] * 0.000569476082004556) + exp(-5182 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 1:  CO + H2 (+M) <=> CH2O (+M)
    const amrex::Real k_f = 43 * exp((1.5) * tc[0] - (40056.0465980557) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.07e+15 * exp(-3.42 * tc[0] - 42446.3257606281 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0679999999999999 * exp(-tc[1] * 0.0050761421319797) +
      0.932 * exp(-tc[1] * 0.000649350649350649) + exp(-10300 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[10] - g_RT[12])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 2:  CH + CO (+M) <=> HCCO (+M)
    const amrex::Real k_f = 50000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+16 * exp(-3.74 * tc[0] - 974.227464997937 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[16] + g_RT_qss[0])) * (refC) *
                           (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 3:  H + HCO (+M) <=> CH2O (+M)
    const amrex::Real k_f =
      1090000 * exp((0.48) * tc[0] - (-130.836333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1350000000000 * exp(-2.57 * tc[0] - 717.083748771726 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2176 * exp(-tc[1] * 0.003690036900369) +
      0.7824 * exp(-tc[1] * 0.000362976406533575) + exp(-6570 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[12] + g_RT_qss[3])) * (refC) * (sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 4:  CH2 + H (+M) <=> CH3 (+M)
    const amrex::Real k_f = 25000000000 * exp((-0.8) * tc[0]);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.2e+15 * exp(-3.14 * tc[0] - 618.956498939805 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.32 * exp(-tc[1] * 0.0128205128205128) +
      0.68 * exp(-tc[1] * 0.00050125313283208) + exp(-5590 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[8] + g_RT_qss[1])) * (refC) * (sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 5:  CH2 + CO (+M) <=> CH2CO (+M)
    const amrex::Real k_f =
      810000 * exp((0.5) * tc[0] - (2269.50716277929) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.69e+21 * exp(-5.11 * tc[0] - 3570.32224388449 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4093 * exp(-tc[1] * 0.00363636363636364) +
      0.5907 * exp(-tc[1] * 0.000815660685154976) + exp(-5185 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[10] * sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[10] - g_RT[17] + g_RT_qss[1])) * (refC) *
                           (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 6:  CH2O + H (+M) <=> CH3O (+M)
    const amrex::Real k_f =
      540000 * exp((0.454) * tc[0] - (1308.36333109227) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+18 * exp(-4.8 * tc[0] - 2797.88466187424 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.242 * exp(-tc[1] * 0.0106382978723404) +
      0.758 * exp(-tc[1] * 0.000643086816720257) + exp(-4200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[12] - g_RT_qss[4])) * (refC) *
                           (sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 7:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f =
      12700000000 * exp((-0.63) * tc[0] - (192.731983003208) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.477e+21 * exp(-4.76 * tc[0] - 1227.84866456352 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.217 * exp(-tc[1] * 0.0135135135135135) +
      0.783 * exp(-tc[1] * 0.000340020401224073) + exp(-6964 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 8:  CH3 + HCO (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 18000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.2e+36 * exp(-9.588 * tc[0] - 2566.40499560407 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3827 * exp(-tc[1] * 0.0764759865402264) +
      0.6173 * exp(-tc[1] * 0.000481231953801732) + exp(-5093 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[18] + g_RT_qss[3])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 9:  2 CH3 (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      21200000000 * exp((-0.97) * tc[0] - (311.994332798926) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.77e+38 * exp(-9.67 * tc[0] - 3130.00766130536 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4675 * exp(-tc[1] * 0.00662251655629139) +
      0.5325 * exp(-tc[1] * 0.000963391136801541) + exp(-4970 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 10:  C2H3 (+M) <=> C2H2 + H (+M)
    const amrex::Real k_f =
      386000000 * exp((1.62) * tc[0] - (18643.2817423997) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2.565e+21 * exp(-3.4 * tc[0] - 18014.5125184767 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      -0.9816 * exp(-tc[1] * 0.000185745862510913) +
      1.9816 * exp(-tc[1] * 0.232926488400261) + exp(0.0795 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (refCinv) * (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 11:  CH2CO + H (+M) <=> CH2CHO (+M)
    const amrex::Real k_f =
      330000000 * exp((-0.06) * tc[0] - (4277.34165934012) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 3.8e+29 * exp(-7.64 * tc[0] - 5988.27832307616 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.663 * exp(-tc[1] * 0.000585823081429408) +
      0.337 * exp(-tc[1] * 0.0003125) + exp(-4131 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[17]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[17] - g_RT_qss[8])) * (refC) *
                           (sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 12:  C2H3 + H (+M) <=> C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[14] + g_RT_qss[6])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 13:  C2H3 + CH3 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 25000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 4.27e+46 * exp(-11.94 * tc[0] - 4916.32618157895 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.825 * exp(-tc[1] * 0.000745934656124124) +
      0.175 * exp(-tc[1] * 1.66666666666667e-05) + exp(-10139.8 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[6])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 14:  CH2CHO + H (+M) <=> CH3CHO (+M)
    const amrex::Real k_f = 100000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 5.2e+27 * exp(-7.297 * tc[0] - 2365.11832928218 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.45 * exp(-tc[1] * 0.000112359550561798) +
      0.55 * exp(-tc[1] * 0.000229885057471264) + exp(-7244 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[18] + g_RT_qss[8])) * (refC) * (sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 15:  C2H4 (+M) <=> H2 + H2CC (+M)
    const amrex::Real k_f =
      8000000000000 * exp((0.44) * tc[0] - (44670.543423485) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 7e+44 * exp(-9.31 * tc[0] - 50251.2162472593 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.2655 * exp(-tc[1] * 0.00555555555555556) +
      0.7345 * exp(-tc[1] * 0.000966183574879227) + exp(-5417 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[14] - g_RT_qss[5])) *
                           (refCinv) * (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 16:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1080000 * exp((0.454) * tc[0] - (915.85433176459) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.2e+30 * exp(-7.62 * tc[0] - 3507.4201606589 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.0247000000000001 * exp(-tc[1] * 0.00476190476190476) +
      0.9753 * exp(-tc[1] * 0.00101626016260163) + exp(-4374 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[14]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[14] - g_RT_qss[7])) * (refC) *
                           (sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 17:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (795.082331971457) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3364.00341090455 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[15] + g_RT_qss[7])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 18:  H + aC3H5 (+M) <=> C3H6 (+M)
    const amrex::Real k_f = 200000000;
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 1.33e+48 * exp(-12 * tc[0] - 3003.09641818941 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.98 * exp(-tc[1] * 0.000911909538573774) +
      0.02 * exp(-tc[1] * 0.000911909538573774) + exp(-6859.5 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[19] - g_RT[20])) * (refC) * (sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 19:  C3H6 + H (+M) <=> nC3H7 (+M)
    const amrex::Real k_f = 13300000 * exp(-(1640.83858218945) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.51666063304 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48097 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[20]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(g_RT[1] + g_RT[20] - g_RT_qss[9])) * (refC) *
                           (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 20:  C2H2 (+M) <=> H2CC (+M)
    const amrex::Real k_f =
      800000000000000 * exp((-0.52) * tc[0] - (25538.2457895895) * invT);
    amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] + (0.5) * sc[10] +
                       sc[11] + (1.5) * sc[13] + (1.5) * sc[14] + (2) * sc[15];
    const amrex::Real redP =
      Corr / k_f * 2450000000 * exp(-0.64 * tc[0] - 25009.8682904946 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[13] - g_RT_qss[5])) * (sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
  }

  {
    // reaction 21:  2 H + M <=> H2 + M
    const amrex::Real k_f = 1000000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[0] + (-1) * sc[5] + sc[9] +
                             (-1) * sc[11] + (2) * sc[13] + (2) * sc[14] +
                             (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[1] * sc[1]));
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 22:  2 H + H2 <=> H2 + H2
    const amrex::Real k_f = 90000 * exp((-0.6) * tc[0]);
    const amrex::Real qf = k_f * (sc[0] * (sc[1] * sc[1]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * ((sc[0] * sc[0]));
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 23:  2 H + H2O <=> H2 + H2O
    const amrex::Real k_f = 60000000 * exp((-1.25) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 24:  2 H + CO2 <=> H2 + CO2
    const amrex::Real k_f = 550000000 * exp((-2) * tc[0]);
    const amrex::Real qf = k_f * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[1])) * (refC) * (sc[0] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= 2.000000 * qdot;
  }

  {
    // reaction 25:  H + OH + M <=> H2O + M
    const amrex::Real k_f = 22000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + (-0.27) * sc[0] + (2.65) * sc[5] +
                             sc[9] + (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5])) * (refC) * (sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 26:  H + O + M <=> OH + M
    const amrex::Real k_f = 500000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[2] - g_RT[4])) * (refC) * (sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 27:  2 O + M <=> O2 + M
    const amrex::Real k_f = 120000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + (1.4) * sc[0] + (14.4) * sc[5] + sc[9] +
                             (0.75) * sc[10] + (2.6) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 28:  H + O2 + M <=> HO2 + M
    const amrex::Real k_f = 2800000 * exp((-0.86) * tc[0]);
    const amrex::Real Corr = mixture + (-1) * sc[3] + (-1) * sc[5] +
                             (-0.25) * sc[10] + (0.5) * sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (0.5) * sc[15] + (-1) * sc[21];
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 29:  H + O2 + O2 <=> HO2 + O2
    const amrex::Real k_f = 300000000 * exp((-1.72) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * (sc[3] * sc[3]));
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 30:  H + O2 + H2O <=> HO2 + H2O
    const amrex::Real k_f = 16520000 * exp((-0.76) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 31:  H + O2 + N2 <=> HO2 + N2
    const amrex::Real k_f = 26000000 * exp((-1.24) * tc[0]);
    const amrex::Real qf = k_f * (sc[1] * sc[3] * sc[21]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[3] - g_RT[6])) * (refC) * (sc[6] * sc[21]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 32:  CO + O + M <=> CO2 + M
    const amrex::Real k_f = 602 * exp(-(1509.64999741416) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[3] + (5) * sc[5] +
                             sc[9] + (0.5) * sc[10] + (2.5) * sc[11] +
                             (2) * sc[13] + (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[10]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[10] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 33:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr = mixture + sc[0] + (5) * sc[5] + sc[9] +
                             (0.5) * sc[10] + sc[11] + (2) * sc[13] +
                             (2) * sc[14] + (2) * sc[15];
    const amrex::Real qf = Corr * k_f * (sc_qss[3]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (refCinv) * (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 34:  C2H2 + CH3 + M <=> aC3H5 + M
    const amrex::Real k_f =
      2.2e+43 * exp((-11.82) * tc[0] - (17979.9314692026) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[13]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[13] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 35:  H + O2 <=> O + OH
    const amrex::Real k_f = 83000000 * exp(-(7252.86180424342) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[3] - g_RT[4])) * (sc[2] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 36:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.05 * exp((2.67) * tc[0] - (3165.23282791169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[2] - g_RT[4])) * (sc[1] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 37:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[4] - g_RT[5])) * (sc[1] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 38:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0357 * exp((2.4) * tc[0] - (-1061.78716484796) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 39:  H + HO2 <=> H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.658382754967) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] - g_RT[5] + g_RT[6])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 40:  H + HO2 <=> H2 + O2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[3] + g_RT[6])) * (sc[0] * sc[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 41:  H + HO2 <=> 2 OH
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - 2.000000 * g_RT[4] + g_RT[6])) * ((sc[4] * sc[4]));
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 42:  HO2 + O <=> O2 + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[6])) * (sc[3] * sc[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  HO2 + OH <=> H2O + O2
    const amrex::Real k_f = 46400000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[6])) * (sc[3] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 44:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 130000 * exp(-(-820.243165261693) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 45:  2 HO2 <=> H2O2 + O2
    const amrex::Real k_f = 420000000 * exp(-(6038.59998965664) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 46:  H + H2O2 <=> H2 + HO2
    const amrex::Real k_f = 12.1 * exp((2) * tc[0] - (2616.72666218454) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[6] + g_RT[7])) * (sc[0] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 47:  H + H2O2 <=> H2O + OH
    const amrex::Real k_f = 10000000 * exp(-(1811.57999689699) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[5] + g_RT[7])) * (sc[4] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 48:  H2O2 + O <=> HO2 + OH
    const amrex::Real k_f = 9.63 * exp((2) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT[7])) * (sc[4] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 49:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 1750000 * exp(-(161.02933305751) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 50:  H2O2 + OH <=> H2O + HO2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT[7])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 51:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      47.6 * exp((1.228) * tc[0] - (35.2251666063304) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[10] - g_RT[11])) * (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 52:  CO + O2 <=> CO2 + O
    const amrex::Real k_f = 2500000 * exp(-(24053.7566254656) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[10] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 53:  CO + HO2 <=> CO2 + OH
    const amrex::Real k_f = 150000000 * exp(-(11875.9133129914) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[10] - g_RT[11])) * (sc[4] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 54:  CH + O <=> CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[10] + g_RT_qss[0])) *
                           (sc[1] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 55:  CH + OH <=> H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 56:  CH + H2 <=> CH2 + H
    const amrex::Real k_f =
      110.7 * exp((1.79) * tc[0] - (840.371831893882) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] + g_RT_qss[0] - g_RT_qss[1])) *
      (sc[1] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 57:  CH + H2O <=> CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-379.928582682563) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[5] - g_RT[12] + g_RT_qss[0])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 58:  CH + O2 <=> HCO + O
    const amrex::Real k_f = 33000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[2] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 59:  CH + CO2 <=> CO + HCO
    const amrex::Real k_f = 3400000 * exp(-(347.219499405257) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT_qss[0] - g_RT_qss[3])) *
      (sc[10] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 60:  H + HCO <=> CO + H2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[10] + g_RT_qss[3])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 61:  HCO + O <=> CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT_qss[3])) *
                           (sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 62:  HCO + O <=> CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[11] + g_RT_qss[3])) *
                           (sc[1] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 63:  HCO + OH <=> CO + H2O
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT_qss[3])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 64:  HCO + O2 <=> CO + HO2
    const amrex::Real k_f = 7600000 * exp(-(201.286666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[3])) *
                           (sc[6] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 65:  CH2 + H2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.25649376812) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[1])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 66:  CH2 + O <=> H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 67:  CH2 + O2 <=> HCO + OH
    const amrex::Real k_f = 10560000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT_qss[1] - g_RT_qss[3])) *
      (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 68:  CH2 + O2 <=> CO2 + 2 H
    const amrex::Real k_f = 2640000 * exp(-(754.82499870708) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[1] + g_RT[3] - g_RT[11] + g_RT_qss[1])) *
      (refCinv) * ((sc[1] * sc[1]) * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += 2.000000 * qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 69:  CH2 + OH <=> CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[1])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 70:  CH2 + OH <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT_qss[0] + g_RT_qss[1])) *
      (sc[5] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 71:  CH2 + HO2 <=> CH2O + OH
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT_qss[1])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 72:  CH + CH2 <=> C2H2 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc_qss[0] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] - g_RT[13] + g_RT_qss[0] + g_RT_qss[1])) *
      (sc[1] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 73:  2 CH2 <=> C2H2 + H2
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc_qss[1] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] - g_RT[13] + 2.000000 * g_RT_qss[1])) *
      (sc[0] * sc[13]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[0] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 74:  CH2* + N2 <=> CH2 + N2
    const amrex::Real k_f = 15000000 * exp(-(301.929999482832) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[21] - g_RT[21] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[21] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 75:  CH2* + H <=> CH + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[2])) *
      (sc[0] * sc_qss[0]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 76:  CH2* + O <=> CO + H2
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[2] - g_RT[10] + g_RT_qss[2])) *
                           (sc[0] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 77:  CH2* + O <=> H + HCO
    const amrex::Real k_f = 15000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT_qss[2] - g_RT_qss[3])) *
      (sc[1] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
  }

  {
    // reaction 78:  CH2* + OH <=> CH2O + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[12] + g_RT_qss[2])) *
                           (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  CH2* + H2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT_qss[2])) * (sc[1] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 80:  CH2* + O2 <=> CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[3] - g_RT[4] - g_RT[10] + g_RT_qss[2])) *
      (refCinv) * (sc[1] * sc[4] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 81:  CH2* + O2 <=> CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[5] - g_RT[10] + g_RT_qss[2])) *
                           (sc[5] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 82:  CH2* + H2O <=> CH2 + H2O
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 83:  CH2* + CO <=> CH2 + CO
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[10] - g_RT[10] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 84:  CH2* + CO2 <=> CH2 + CO2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[11] - g_RT[11] - g_RT_qss[1] + g_RT_qss[2])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 85:  CH2* + CO2 <=> CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[2])) *
      (sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 86:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      23000 * exp((1.05) * tc[0] - (1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[12] - g_RT_qss[3])) *
                           (sc[0] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 87:  CH2O + O <=> HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.38699694871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[3])) *
                           (sc[4] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  CH2O + OH <=> H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[3])) *
                           (sc[5] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 89:  CH2O + O2 <=> HCO + HO2
    const amrex::Real k_f = 100000000 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[12] - g_RT_qss[3])) *
                           (sc[6] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 90:  CH2O + HO2 <=> H2O2 + HCO
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[3])) *
                           (sc[7] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 91:  CH + CH2O <=> CH2CO + H
    const amrex::Real k_f = 94600000 * exp(-(-259.156582889431) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[12] - g_RT[17] + g_RT_qss[0])) *
      (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 92:  CH3 + O <=> CH2O + H
    const amrex::Real k_f = 84300000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[8] - g_RT[12])) * (sc[1] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 93:  CH3 + OH <=> CH2 + H2O
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.43432866158) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[1])) *
                           (sc[5] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 94:  CH3 + OH <=> CH2* + H2O
    const amrex::Real k_f = 25010000;
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[2])) *
                           (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 95:  CH3 + O2 <=> CH3O + O
    const amrex::Real k_f = 30830000 * exp(-(14492.6399751759) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4])) *
                           (sc[2] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 96:  CH3 + O2 <=> CH2O + OH
    const amrex::Real k_f = 36000 * exp(-(4498.75699229419) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 97:  CH3 + HO2 <=> CH4 + O2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[8] - g_RT[9])) * (sc[3] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 98:  CH3 + HO2 <=> CH3O + OH
    const amrex::Real k_f = 13400000;
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[4] + g_RT[6] + g_RT[8] - g_RT_qss[4])) *
                           (sc[4] * sc_qss[4]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 99:  CH3 + H2O2 <=> CH4 + HO2
    const amrex::Real k_f =
      0.0245 * exp((2.47) * tc[0] - (2606.66232886845) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[6] + g_RT[7] + g_RT[8] - g_RT[9])) * (sc[6] * sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 100:  CH + CH3 <=> C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[8] + g_RT_qss[0] - g_RT_qss[6])) *
      (sc[1] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 101:  CH3 + HCO <=> CH4 + CO
    const amrex::Real k_f = 8480000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[3]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT_qss[3])) *
                           (sc[9] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 102:  CH2O + CH3 <=> CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2948.84966161566) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[3])) *
                           (sc[9] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 103:  CH2 + CH3 <=> C2H4 + H
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[1])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 104:  CH2* + CH3 <=> C2H4 + H
    const amrex::Real k_f = 12000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[14] + g_RT_qss[2])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 105:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      4990000 * exp((0.1) * tc[0] - (5334.09665753003) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT_qss[7])) *
                           (sc[1] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
  }

  {
    // reaction 106:  CH3 + HCCO <=> C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[10] - g_RT[14] + g_RT[16])) *
                           (sc[10] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 107:  CH3O + H <=> CH2O + H2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[4])) *
                           (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 108:  CH3O + H <=> CH3 + OH
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT_qss[4])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 109:  CH3O + H <=> CH2* + H2O
    const amrex::Real k_f = 16000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] - g_RT_qss[2] + g_RT_qss[4])) *
      (sc[5] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 110:  CH3O + O <=> CH2O + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[12] + g_RT_qss[4])) *
                           (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 111:  CH3O + OH <=> CH2O + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[12] + g_RT_qss[4])) *
                           (sc[5] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 112:  CH3O + O2 <=> CH2O + HO2
    const amrex::Real k_f =
      4.28e-19 * exp((7.6) * tc[0] - (-1776.35483029066) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT_qss[4])) *
                           (sc[6] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 113:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5454.86865732316) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT[9])) * (sc[0] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 114:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.66332592059) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9])) * (sc[4] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 115:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1570.03599731073) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9])) * (sc[5] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 116:  CH + CH4 <=> C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[9] - g_RT[14] + g_RT_qss[0])) *
                           (sc[1] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 117:  CH2 + CH4 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[1]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[1])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 118:  CH2* + CH4 <=> 2 CH3
    const amrex::Real k_f = 16000000 * exp(-(-286.83349950869) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = k_f *
                           exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[2])) *
                           ((sc[8] * sc[8]));
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 119:  H + HCCO <=> CH2* + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[10] + g_RT[16] - g_RT_qss[2])) *
                           (sc[10] * sc_qss[2]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 120:  HCCO + O <=> 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[1] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 121:  HCCO + O2 <=> 2 CO + OH
    const amrex::Real k_f = 1600000 * exp(-(429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - 2.000000 * g_RT[10] + g_RT[16])) *
      (refCinv) * (sc[4] * (sc[10] * sc[10]));
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 122:  CH + HCCO <=> C2H2 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[13] + g_RT[16] + g_RT_qss[0])) *
      (sc[10] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 123:  CH2 + HCCO <=> C2H3 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[16] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[16] + g_RT_qss[1] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 124:  2 HCCO <=> C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[16] * sc[16]));
    const amrex::Real qr =
      k_f * exp(-(-2.000000 * g_RT[10] - g_RT[13] + 2.000000 * g_RT[16])) *
      (refCinv) * ((sc[10] * sc[10]) * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += 2.000000 * qdot;
    wdot[13] += qdot;
    wdot[16] -= 2.000000 * qdot;
  }

  {
    // reaction 125:  C2H2 + O <=> H + HCCO
    const amrex::Real k_f =
      16.32 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] + g_RT[13] - g_RT[16])) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[13] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 126:  C2H2 + O <=> CH2 + CO
    const amrex::Real k_f = 4.08 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[10] + g_RT[13] - g_RT_qss[1])) *
                           (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 127:  C2H2 + OH <=> CH2CO + H
    const amrex::Real k_f =
      2.18e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[13] - g_RT[17])) * (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[13] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 128:  C2H2 + OH <=> CH3 + CO
    const amrex::Real k_f =
      4.83e-10 * exp((4) * tc[0] - (-1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT[13])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 129:  C2H2 + HCO <=> C2H3 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[13] + g_RT_qss[3] - g_RT_qss[6])) *
      (sc[10] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 130:  H + H2CC <=> C2H2 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[1] - g_RT[13] + g_RT_qss[5])) *
                           (sc[1] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[1] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 131:  H2CC + O <=> CH2 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[10] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[10] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 132:  H2CC + OH <=> CH2CO + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[4] - g_RT[17] + g_RT_qss[5])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 133:  H2CC + O2 <=> CH2 + CO2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[5]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[11] - g_RT_qss[1] + g_RT_qss[5])) *
      (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 134:  CH2CO + H <=> H2 + HCCO
    const amrex::Real k_f = 50000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[16] + g_RT[17])) * (sc[0] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 135:  CH2CO + H <=> CH3 + CO
    const amrex::Real k_f =
      1500 * exp((1.43) * tc[0] - (1353.6528310147) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[10] + g_RT[17])) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 136:  CH2CO + O <=> HCCO + OH
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[16] + g_RT[17])) * (sc[4] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 137:  CH2CO + O <=> CH2 + CO2
    const amrex::Real k_f = 1750000 * exp(-(679.342498836372) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[11] + g_RT[17] - g_RT_qss[1])) *
                           (sc[11] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[11] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 138:  CH2CO + OH <=> H2O + HCCO
    const amrex::Real k_f = 7500000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[17]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[16] + g_RT[17])) * (sc[5] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 139:  C2H3 + H <=> C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT_qss[6])) *
                           (sc[0] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 140:  C2H3 + H <=> H2 + H2CC
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT_qss[5] + g_RT_qss[6])) *
      (sc[0] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 141:  C2H3 + O <=> CH2CO + H
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[17] + g_RT_qss[6])) *
                           (sc[1] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 142:  C2H3 + O <=> CH3 + CO
    const amrex::Real k_f = 48000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[10] + g_RT_qss[6])) *
                           (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 143:  C2H3 + OH <=> C2H2 + H2O
    const amrex::Real k_f = 30110000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[13] + g_RT_qss[6])) *
                           (sc[5] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 144:  C2H3 + O2 <=> C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-192.93326966953) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[13] + g_RT_qss[6])) *
                           (sc[6] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 145:  C2H3 + O2 <=> CH2CHO + O
    const amrex::Real k_f =
      300000 * exp((0.29) * tc[0] - (5.53538332385192) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[2] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 146:  C2H3 + O2 <=> CH2O + HCO
    const amrex::Real k_f =
      46000000000 * exp((-1.39) * tc[0] - (508.248832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[12] - g_RT_qss[3] + g_RT_qss[6])) *
      (sc[12] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 147:  C2H3 + HO2 <=> CH2CHO + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT_qss[6] - g_RT_qss[8])) *
      (sc[4] * sc_qss[8]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 148:  C2H3 + H2O2 <=> C2H4 + HO2
    const amrex::Real k_f = 12100 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[14] + g_RT_qss[6])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 149:  C2H3 + HCO <=> C2H4 + CO
    const amrex::Real k_f = 90330000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[6]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[14] + g_RT_qss[3] + g_RT_qss[6])) *
      (sc[10] * sc[14]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 150:  C2H3 + CH3 <=> C2H2 + CH4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[13] + g_RT_qss[6])) *
                           (sc[9] * sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 151:  C2H3 + CH3 <=> H + aC3H5
    const amrex::Real k_f =
      1.5e+18 * exp((-2.83) * tc[0] - (9368.88788395227) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[6]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[8] - g_RT[19] + g_RT_qss[6])) *
                           (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 152:  CH2CHO <=> CH3 + CO
    const amrex::Real k_f =
      7.8e+41 * exp((-9.147) * tc[0] - (23600.8616262414) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = k_f * exp(-(-g_RT[8] - g_RT[10] + g_RT_qss[8])) *
                           (refCinv) * (sc[8] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 153:  CH2CHO + H <=> CH3 + HCO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[3] + g_RT_qss[8])) *
      (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 154:  CH2CHO + H <=> CH2CO + H2
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[17] + g_RT_qss[8])) *
                           (sc[0] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 155:  CH2CHO + O <=> CH2CO + OH
    const amrex::Real k_f = 20000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] - g_RT[17] + g_RT_qss[8])) *
                           (sc[4] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 156:  CH2CHO + OH <=> CH2CO + H2O
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[17] + g_RT_qss[8])) *
                           (sc[5] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  CH2CHO + O2 <=> CH2CO + HO2
    const amrex::Real k_f = 140000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[17] + g_RT_qss[8])) *
                           (sc[6] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 158:  CH2CHO + O2 <=> CH2O + CO + OH
    const amrex::Real k_f = 18000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[8]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[10] - g_RT[12] + g_RT_qss[8])) *
      (refCinv) * (sc[4] * sc[10] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 159:  C2H4 + H <=> C2H3 + H2
    const amrex::Real k_f =
      50.7 * exp((1.93) * tc[0] - (6516.65582217112) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[14] - g_RT_qss[6])) *
                           (sc[0] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 160:  C2H4 + O <=> C2H3 + OH
    const amrex::Real k_f =
      15.1 * exp((1.91) * tc[0] - (1882.03033010965) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[14] - g_RT_qss[6])) *
                           (sc[4] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 161:  C2H4 + O <=> CH3 + HCO
    const amrex::Real k_f =
      19.2 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[3])) *
                           (sc[8] * sc_qss[3]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 162:  C2H4 + O <=> CH2 + CH2O
    const amrex::Real k_f =
      0.384 * exp((1.83) * tc[0] - (110.707666477038) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[12] + g_RT[14] - g_RT_qss[1])) *
                           (sc[12] * sc_qss[1]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 163:  C2H4 + OH <=> C2H3 + H2O
    const amrex::Real k_f = 3.6 * exp((2) * tc[0] - (1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT_qss[6])) *
                           (sc[5] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 164:  C2H4 + O2 <=> C2H3 + HO2
    const amrex::Real k_f = 42200000 * exp(-(30595.573280927) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] + g_RT[14] - g_RT_qss[6])) *
                           (sc[6] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 165:  C2H4 + HO2 <=> CH3CHO + OH
    const amrex::Real k_f = 2000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] + g_RT[14] - g_RT[18])) * (sc[4] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 166:  C2H4 + HCO <=> C2H5 + CO
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[14] + g_RT_qss[3] - g_RT_qss[7])) *
      (sc[10] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 167:  C2H4 + CH2 <=> H + aC3H5
    const amrex::Real k_f = 20000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[1]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[1])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 168:  C2H4 + CH2* <=> CH4 + H2CC
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[9] + g_RT[14] + g_RT_qss[2] - g_RT_qss[5])) *
      (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 169:  C2H4 + CH2* <=> H + aC3H5
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[19] + g_RT_qss[2])) *
      (sc[1] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 170:  C2H4 + CH3 <=> C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.59332540342) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT_qss[6])) *
                           (sc[9] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 171:  C2H4 + CH3 <=> nC3H7
    const amrex::Real k_f = 330000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] + g_RT[14] - g_RT_qss[9])) * (refC) * (sc_qss[9]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 172:  C2H5 + H <=> C2H4 + H2
    const amrex::Real k_f = 2000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT_qss[7])) *
                           (sc[0] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 173:  C2H5 + O <=> CH2O + CH3
    const amrex::Real k_f = 16040000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
                           (sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 174:  C2H5 + O <=> CH3CHO + H
    const amrex::Real k_f = 80200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[1] + g_RT[2] - g_RT[18] + g_RT_qss[7])) *
                           (sc[1] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 175:  C2H5 + O2 <=> C2H4 + HO2
    const amrex::Real k_f = 20000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT_qss[7])) *
                           (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 176:  C2H5 + HO2 <=> C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[3] + g_RT[6] - g_RT[15] + g_RT_qss[7])) *
                           (sc[3] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 177:  C2H5 + HO2 <=> C2H4 + H2O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT_qss[7])) *
                           (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 178:  C2H5 + HO2 <=> CH2O + CH3 + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[8] - g_RT[12] + g_RT_qss[7])) *
      (refCinv) * (sc[4] * sc[8] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 179:  C2H5 + H2O2 <=> C2H6 + HO2
    const amrex::Real k_f = 8700 * exp(-(490.133032493797) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[7]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[6] + g_RT[7] - g_RT[15] + g_RT_qss[7])) *
                           (sc[6] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 180:  C2H5 + HCO <=> C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc_qss[3] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] - g_RT[15] + g_RT_qss[3] + g_RT_qss[7])) *
      (sc[10] * sc[15]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 181:  C2H6 + H <=> C2H5 + H2
    const amrex::Real k_f =
      115 * exp((1.9) * tc[0] - (3789.22149350954) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] + g_RT[15] - g_RT_qss[7])) *
                           (sc[0] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 182:  C2H6 + O <=> C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.30282842885) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - g_RT[4] + g_RT[15] - g_RT_qss[7])) *
                           (sc[4] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 183:  C2H6 + OH <=> C2H5 + H2O
    const amrex::Real k_f =
      3.54 * exp((2.12) * tc[0] - (437.798499250106) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] + g_RT[15] - g_RT_qss[7])) *
                           (sc[5] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 184:  C2H6 + CH2* <=> C2H5 + CH3
    const amrex::Real k_f = 40000000 * exp(-(-276.769166192596) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] + g_RT[15] + g_RT_qss[2] - g_RT_qss[7])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 185:  C2H6 + CH3 <=> C2H5 + CH4
    const amrex::Real k_f =
      6.14 * exp((1.74) * tc[0] - (5258.61415765932) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] + g_RT[15] - g_RT_qss[7])) *
                           (sc[9] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 186:  H + aC3H5 <=> CH4 + H2CC
    const amrex::Real k_f = 20000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[1] - g_RT[9] + g_RT[19] - g_RT_qss[5])) *
                           (sc[9] * sc_qss[5]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[9] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 187:  HO2 + aC3H5 <=> C3H6 + O2
    const amrex::Real k_f = 2660000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[19] - g_RT[20])) * (sc[3] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 188:  HO2 + aC3H5 <=> C2H3 + CH2O + OH
    const amrex::Real k_f = 6600000;
    const amrex::Real qf = k_f * (sc[6] * sc[19]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] + g_RT[19] - g_RT_qss[6])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[6]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 189:  HCO + aC3H5 <=> C3H6 + CO
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[19] * sc_qss[3]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[10] + g_RT[19] - g_RT[20] + g_RT_qss[3])) *
      (sc[10] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[19] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 190:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      1.6e+16 * exp((-2.39) * tc[0] - (5625.96232369677) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT[14] + g_RT[20])) * (sc[8] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 191:  C3H6 + H <=> H2 + aC3H5
    const amrex::Real k_f =
      0.17 * exp((2.5) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[19] + g_RT[20])) * (sc[0] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 192:  C3H6 + O <=> CH2CO + CH3 + H
    const amrex::Real k_f =
      120 * exp((1.65) * tc[0] - (164.551849718143) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[2] - g_RT[8] - g_RT[17] + g_RT[20])) *
      (refCinv) * (sc[1] * sc[8] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 193:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.65) * tc[0] - (-489.126599162188) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 194:  C3H6 + O <=> OH + aC3H5
    const amrex::Real k_f =
      180000 * exp((0.7) * tc[0] - (2958.91399493175) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[19] + g_RT[20])) * (sc[4] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 195:  C3H6 + OH <=> H2O + aC3H5
    const amrex::Real k_f = 3.1 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[19] + g_RT[20])) * (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 196:  C3H6 + HO2 <=> H2O2 + aC3H5
    const amrex::Real k_f =
      0.0096 * exp((2.6) * tc[0] - (6999.74382134365) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[20])) * (sc[7] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 197:  C3H6 + CH3 <=> CH4 + aC3H5
    const amrex::Real k_f =
      2.2e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[19] + g_RT[20])) * (sc[9] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[19] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 198:  H + nC3H7 <=> C2H5 + CH3
    const amrex::Real k_f =
      3.7e+18 * exp((-2.92) * tc[0] - (6292.72440588802) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[8] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[8] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 199:  H + nC3H7 <=> C3H6 + H2
    const amrex::Real k_f = 1800000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[9])) *
                           (sc[0] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 200:  O + nC3H7 <=> C2H5 + CH2O
    const amrex::Real k_f = 96000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 201:  OH + nC3H7 <=> C3H6 + H2O
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[4] - g_RT[5] - g_RT[20] + g_RT_qss[9])) *
                           (sc[5] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 202:  O2 + nC3H7 <=> C3H6 + HO2
    const amrex::Real k_f = 90000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT_qss[9])) *
                           (sc[6] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 203:  HO2 + nC3H7 <=> C2H5 + CH2O + OH
    const amrex::Real k_f = 24000000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[9]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[12] - g_RT_qss[7] + g_RT_qss[9])) *
      (refCinv) * (sc[4] * sc[12] * sc_qss[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 204:  CH3 + nC3H7 <=> C3H6 + CH4
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[9]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[8] - g_RT[9] - g_RT[20] + g_RT_qss[9])) *
                           (sc[9] * sc[20]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 205:  C2H3 + C2H5 <=> CH3 + aC3H5
    const amrex::Real k_f =
      3.9e+26 * exp((-5.22) * tc[0] - (9937.0194996458) * invT);
    const amrex::Real qf = k_f * (sc_qss[6] * sc_qss[7]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[8] - g_RT[19] + g_RT_qss[6] + g_RT_qss[7])) *
      (sc[8] * sc[19]);
    // Remove forward reaction
    // const amrex::Real qdot = qf - qr;
    const amrex::Real qdot = -qr;
    wdot[8] += qdot;
    wdot[19] += qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 22; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 22; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 22; i++) {
    c[i] = PWORT * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[22]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 22; i++) {
    c[i] = 1e6 * rho * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[22];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 2.016000;   // H2
  XW += x[1] * 1.008000;   // H
  XW += x[2] * 15.999000;  // O
  XW += x[3] * 31.998000;  // O2
  XW += x[4] * 17.007000;  // OH
  XW += x[5] * 18.015000;  // H2O
  XW += x[6] * 33.006000;  // HO2
  XW += x[7] * 34.014000;  // H2O2
  XW += x[8] * 15.035000;  // CH3
  XW += x[9] * 16.043000;  // CH4
  XW += x[10] * 28.010000; // CO
  XW += x[11] * 44.009000; // CO2
  XW += x[12] * 30.026000; // CH2O
  XW += x[13] * 26.038000; // C2H2
  XW += x[14] * 28.054000; // C2H4
  XW += x[15] * 30.070000; // C2H6
  XW += x[16] * 41.029000; // HCCO
  XW += x[17] * 42.037000; // CH2CO
  XW += x[18] * 44.053000; // CH3CHO
  XW += x[19] * 41.073000; // aC3H5
  XW += x[20] * 42.081000; // C3H6
  XW += x[21] * 28.014000; // N2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 22; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 22; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // H2
  kcharge[1] = 0;  // H
  kcharge[2] = 0;  // O
  kcharge[3] = 0;  // O2
  kcharge[4] = 0;  // OH
  kcharge[5] = 0;  // H2O
  kcharge[6] = 0;  // HO2
  kcharge[7] = 0;  // H2O2
  kcharge[8] = 0;  // CH3
  kcharge[9] = 0;  // CH4
  kcharge[10] = 0; // CO
  kcharge[11] = 0; // CO2
  kcharge[12] = 0; // CH2O
  kcharge[13] = 0; // C2H2
  kcharge[14] = 0; // C2H4
  kcharge[15] = 0; // C2H6
  kcharge[16] = 0; // HCCO
  kcharge[17] = 0; // CH2CO
  kcharge[18] = 0; // CH3CHO
  kcharge[19] = 0; // aC3H5
  kcharge[20] = 0; // C3H6
  kcharge[21] = 0; // N2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[22];
  CKCHRG(kchrg);

  for (int id = 0; id < 22; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] *
#if AMREX_DEVICE_COMPILE
             global_imw[id]
#else
             h_global_imw[id]
#endif
      ;
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: H2
    species[0] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 1: H
    species[1] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 2: O
    species[2] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 3: O2
    species[3] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 4: OH
    species[4] = -2.40131752e-03 + 9.23587682e-06 * tc[1] -
                 1.16434000e-08 * tc[2] + 5.45645880e-12 * tc[3];
    // species 5: H2O
    species[5] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 6: HO2
    species[6] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 7: H2O2
    species[7] = -5.42822417e-04 + 3.34671402e-05 * tc[1] -
                 6.47312439e-08 * tc[2] + 3.44981745e-11 * tc[3];
    // species 8: CH3
    species[8] = +2.01095175e-03 + 1.14604371e-05 * tc[1] -
                 2.06135228e-08 * tc[2] + 1.01754294e-11 * tc[3];
    // species 9: CH4
    species[9] = -1.36709788e-02 + 9.83601198e-05 * tc[1] -
                 1.45422908e-07 * tc[2] + 6.66775824e-11 * tc[3];
    // species 10: CO
    species[10] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 11: CO2
    species[11] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 12: CH2O
    species[12] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 13: C2H2
    species[13] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 14: C2H4
    species[14] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 15: C2H6
    species[15] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 16: HCCO
    species[16] = +1.76550210e-02 - 4.74582020e-05 * tc[1] +
                  5.18272770e-08 * tc[2] - 2.02659244e-11 * tc[3];
    // species 17: CH2CO
    species[17] = +1.81188721e-02 - 3.47894948e-05 * tc[1] +
                  2.80319270e-08 * tc[2] - 8.05830460e-12 * tc[3];
    // species 18: CH3CHO
    species[18] = -3.19328580e-03 + 9.50698420e-05 * tc[1] -
                  1.72375833e-07 * tc[2] + 8.77244480e-11 * tc[3];
    // species 19: aC3H5
    species[19] = +1.98138210e-02 + 2.49941200e-05 * tc[1] -
                  1.00066665e-07 * tc[2] + 6.33862840e-11 * tc[3];
    // species 20: C3H6
    species[20] = +2.09251800e-02 + 8.97358800e-06 * tc[1] -
                  5.00673600e-08 * tc[2] + 2.86325840e-11 * tc[3];
    // species 21: N2
    species[21] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                  1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
  } else {
    // species 0: H2
    species[0] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 1: H
    species[1] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 2: O
    species[2] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 3: O2
    species[3] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 4: OH
    species[4] = +5.48429716e-04 + 2.53010456e-07 * tc[1] -
                 2.63838467e-10 * tc[2] + 4.69649504e-14 * tc[3];
    // species 5: H2O
    species[5] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 6: HO2
    species[6] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 7: H2O2
    species[7] = +4.90831694e-03 - 3.80278450e-06 * tc[1] +
                 1.11355796e-09 * tc[2] - 1.15163322e-13 * tc[3];
    // species 8: CH3
    species[8] = +7.23990037e-03 - 5.97428696e-06 * tc[1] +
                 1.78705393e-09 * tc[2] - 1.86861758e-13 * tc[3];
    // species 9: CH4
    species[9] = +1.33909467e-02 - 1.14657162e-05 * tc[1] +
                 3.66877605e-09 * tc[2] - 4.07260920e-13 * tc[3];
    // species 10: CO
    species[10] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 11: CO2
    species[11] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 12: CH2O
    species[12] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 13: C2H2
    species[13] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 14: C2H4
    species[14] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 15: C2H6
    species[15] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 16: HCCO
    species[16] = +4.08534010e-03 - 3.18690940e-06 * tc[1] +
                  8.58781560e-10 * tc[2] - 7.76313280e-14 * tc[3];
    // species 17: CH2CO
    species[17] = +9.00359745e-03 - 8.33879270e-06 * tc[1] +
                  2.77003765e-09 * tc[2] - 3.17935280e-13 * tc[3];
    // species 18: CH3CHO
    species[18] = +1.17230590e-02 - 8.45262740e-06 * tc[1] +
                  2.05117353e-09 * tc[2] - 1.63939452e-13 * tc[3];
    // species 19: aC3H5
    species[19] = +1.43247310e-02 - 1.13563264e-05 * tc[1] +
                  3.32424030e-09 * tc[2] - 3.61455548e-13 * tc[3];
    // species 20: C3H6
    species[20] = +1.49083400e-02 - 9.89979800e-06 * tc[1] +
                  2.16360660e-09 * tc[2] - 1.50648160e-13 * tc[3];
    // species 21: N2
    species[21] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                  3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(amrex::Real* J, amrex::Real* sc, amrex::Real T, const int consP)
{
#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;
  amrex::Real g_RT[22];
  amrex::Real h_RT[22];
  amrex::Real g_RT_qss[10];
  amrex::Real h_RT_qss[10];
  amrex::Real sc_qss[10];
  amrex::Real kf_qss[142];
  amrex::Real T_pert1, pertT;
  amrex::Real wdot_pert1[22], wdot[22];

  // dwdot/dT by finite difference
  pertT = 1e-2;
  T_pert1 = T + pertT;

  tc[0] = log(T_pert1);
  tc[1] = T_pert1;
  tc[2] = T_pert1 * T_pert1;
  tc[3] = T_pert1 * T_pert1 * T_pert1;
  tc[4] = T_pert1 * T_pert1 * T_pert1 * T_pert1;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot_pert1, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[142], tc, invT);
  tc[0] = log(T);
  tc[1] = T;
  tc[2] = T * T;
  tc[3] = T * T * T;
  tc[4] = T * T * T * T;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[142], tc, invT);

  // compute the species enthalpy
  speciesEnthalpy(h_RT, tc);
  for (int i = 0; i < 529; i++) {
    J[i] = 0.0;
  }
  // Species terms
  amrex::Real x1 = kf_qss[85] * sc[1] + 10.0e-13;
  amrex::Real x4 = g_RT[19] + g_RT[1] - g_RT[9] - g_RT_qss[5];
  const amrex::Real x8 = exp(g_RT[0] - g_RT[1] + g_RT_qss[5] - g_RT_qss[6]);
  const amrex::Real x12 = exp(-g_RT[14] + g_RT[9] - g_RT_qss[2] + g_RT_qss[5]);
  amrex::Real x16 = sc[12] + sc[16] + sc[17] + sc[18] + sc[19] + sc[1] +
                    sc[20] + sc[2] + sc[4] + sc[6] + sc[7] + sc[8];
  amrex::Real x17 = 3.0 * sc[15] + 2 * sc[9];
  amrex::Real x20 =
    2 * sc[0] + 1.5 * sc[10] + 2 * sc[11] + sc[21] + sc[3] + 6.0 * sc[5];
  const amrex::Real x22 = 2.5 * sc[13] + 2.5 * sc[14] + x16 + x17 + x20;
  const amrex::Real x23 = -g_RT[13] + g_RT_qss[5];
  amrex::Real x24 = -25009.8682904946 * invT - 0.64 * tc[0];
  amrex::Real x28 = 1.0 + 2450000000.0 * x22 * exp(x24) / kf_qss[15];
  amrex::Real x30 = exp(x23 + x24) / x28;
  amrex::Real x33 = g_RT[0] - g_RT[14] + g_RT_qss[5];
  amrex::Real x34 = -50251.216247259297 * invT - 9.31 * tc[0];
  amrex::Real x37 = 7.0e+44 * exp(x34);
  amrex::Real x38 = 3.0 * sc[13] + 3.0 * sc[14] + x16;
  const amrex::Real x40 = x17 + x20 + x38;
  amrex::Real x43 = log(
    0.2655 * exp(-0.0055555555555555601 * tc[1]) +
    0.7345 * exp(-0.00096618357487922703 * tc[1]) + exp(-5417.0 * invT));
  amrex::Real x46 = -0.29097730287517898 * x43 +
                    0.43429448190325198 * log(x37 * x40 / kf_qss[11]) - 0.4;
  amrex::Real x52 =
    1.7777777777777777 * ((x46) * (x46)) /
      ((-0.73540532268950665 * x43 - 0.18666666666666668 * x46 + 1) *
       (-0.73540532268950665 * x43 - 0.18666666666666668 * x46 + 1)) +
    1.0;
  amrex::Real x56 = exp(M_LN10 * (0.43429448190325198 * x43 / x52)) /
                    (1.0 + x37 * x40 / kf_qss[11]);
  amrex::Real x57 = x56 * exp(x33 + x34);
  amrex::Real x63 =
    -kf_qss[112] * sc[9] * x12 - kf_qss[130] * sc[9] * exp(-x4) -
    kf_qss[79] * sc[1] - kf_qss[80] * sc[2] - kf_qss[81] * sc[4] -
    kf_qss[82] * sc[3] - kf_qss[85] * sc[0] * x8 -
    7.0e+44 * refCinv * sc[0] * x40 * x57 - 2450000000.0 * x22 * x30 + 10.0e-13;
  const amrex::Real x65 = x1 / x63;
  const amrex::Real x66 = refCinv * sc[4];
  const amrex::Real x72 =
    exp(g_RT[12] - g_RT[19] + g_RT[4] - g_RT[6] + g_RT_qss[6]);
  amrex::Real x75 = -g_RT[0] + g_RT[1];
  amrex::Real x76 = g_RT[14] - g_RT_qss[6];
  const amrex::Real x83 = exp(g_RT[1] - g_RT[8] - g_RT_qss[0] + g_RT_qss[6]);
  amrex::Real x86 = g_RT[8] - g_RT[9];
  amrex::Real x90 = -g_RT[10] + g_RT_qss[3];
  amrex::Real x92 = kf_qss[78] * exp(-g_RT[13] + g_RT_qss[6] - x90);
  amrex::Real x97 =
    2.565e+21 * x40 * exp(-18014.512518476698 * invT - 3.4 * tc[0]) / kf_qss[6];
  amrex::Real x98 = log(
    exp(0.0795 * invT) + 1.9816 * exp(-0.23292648840026101 * tc[1]) -
    0.9816 * exp(-0.000185745862510913 * tc[1]));
  amrex::Real x100 =
    -0.29097730287517898 * x98 + 0.43429448190325198 * log(x97) - 0.4;
  amrex::Real x105 =
    1.7777777777777777 * ((x100) * (x100)) /
      ((-0.18666666666666668 * x100 - 0.73540532268950665 * x98 + 1) *
       (-0.18666666666666668 * x100 - 0.73540532268950665 * x98 + 1)) +
    1.0;
  amrex::Real x107 = exp(M_LN10 * (0.43429448190325198 * x98 / x105));
  amrex::Real x110 =
    x107 * exp(-18014.512518476698 * invT - 3.4 * tc[0]) / (x97 + 1.0);
  amrex::Real x114 = g_RT[3] - g_RT[6];
  amrex::Real x119 = x40 * exp(-4916.3261815789501 * invT - 11.94 * tc[0]);
  amrex::Real x123 = log(
    0.825 * exp(-0.00074593465612412396 * tc[1]) +
    0.175 * exp(-1.6666666666666701e-5 * tc[1]) + exp(-10139.8 * invT));
  amrex::Real x125 = -0.29097730287517898 * x123 +
                     0.43429448190325198 * log(4.27e+46 * x119 / kf_qss[9]) -
                     0.4;
  amrex::Real x127 = -0.55155399201712996 * x123 - 0.14 * x125 + 0.75;
  amrex::Real x130 = ((x125) * (x125)) / ((x127) * (x127)) + 1.0;
  amrex::Real x134 = exp(M_LN10 * (0.43429448190325198 * x123 / x130)) /
                     (1.0 + 4.27e+46 * x119 / kf_qss[9]);
  amrex::Real x137 = -1670.67933047167 * invT - 3.86 * tc[0];
  amrex::Real x139 = 1.4e+18 * exp(x137);
  amrex::Real x142 = log(
    0.218 * exp(-0.0048192771084337397 * tc[1]) +
    0.782 * exp(-0.000375516334960571 * tc[1]) + exp(-6095.0 * invT));
  amrex::Real x144 = -0.29097730287517898 * x142 +
                     0.43429448190325198 * log(x139 * x40 / kf_qss[8]) - 0.4;
  amrex::Real x149 =
    1.7777777777777777 * ((x144) * (x144)) /
      ((-0.73540532268950665 * x142 - 0.18666666666666668 * x144 + 1) *
       (-0.73540532268950665 * x142 - 0.18666666666666668 * x144 + 1)) +
    1.0;
  amrex::Real x153 = exp(M_LN10 * (0.43429448190325198 * x142 / x149)) /
                     (1.0 + x139 * x40 / kf_qss[8]);
  const amrex::Real x158 = exp(g_RT[10] - g_RT[16] - g_RT_qss[1] + g_RT_qss[6]);
  amrex::Real x162 = g_RT[4] - g_RT[5];
  amrex::Real x166 = g_RT[2] - g_RT[4];
  amrex::Real x169 =
    -kf_qss[104] * sc[0] * exp(-x75 - x76) -
    kf_qss[105] * sc[4] * exp(-x166 - x76) -
    kf_qss[108] * sc[5] * exp(-x162 - x76) -
    kf_qss[109] * sc[6] * exp(-x114 - x76) -
    kf_qss[114] * sc[9] * exp(-x76 - x86) - kf_qss[131] * sc[12] * x66 * x72 -
    kf_qss[59] * sc[1] * x83 - kf_qss[76] * sc[10] * x158 - kf_qss[84] * sc[1] -
    kf_qss[85] * sc[1] - kf_qss[86] * sc[2] - kf_qss[87] * sc[2] -
    kf_qss[88] * sc[4] - kf_qss[89] * sc[3] - kf_qss[90] * sc[3] -
    kf_qss[91] * sc[3] - kf_qss[92] * sc[6] - kf_qss[93] * sc[7] -
    kf_qss[95] * sc[8] - kf_qss[96] * sc[8] - sc[10] * x92 -
    sc[1] * x139 * x153 * x40 - 4.27e+46 * sc[8] * x119 * x134 -
    2.565e+21 * x110 * x40 + 10.0e-13;
  amrex::Real x171 = kf_qss[85] * sc[0] * x8 + 10.0e-13;
  amrex::Real x172 = x171 / x169;
  amrex::Real x173 = kf_qss[90] * sc[3] + kf_qss[92] * sc[6] + 10.0e-13;
  amrex::Real x176 = x40 * exp(-2365.1183292821802 * invT - 7.297 * tc[0]);
  amrex::Real x180 = log(
    0.55 * exp(-0.00022988505747126401 * tc[1]) +
    0.45 * exp(-0.000112359550561798 * tc[1]) + exp(-7244.0 * invT));
  amrex::Real x182 = -0.29097730287517898 * x180 +
                     0.43429448190325198 * log(5.2e+27 * x176 / kf_qss[10]) -
                     0.4;
  amrex::Real x184 = -0.55155399201712996 * x180 - 0.14 * x182 + 0.75;
  amrex::Real x187 = ((x182) * (x182)) / ((x184) * (x184)) + 1.0;
  amrex::Real x191 = exp(M_LN10 * (0.43429448190325198 * x180 / x187)) /
                     (1.0 + 5.2e+27 * x176 / kf_qss[10]);
  const amrex::Real x196 = exp(g_RT[4] - g_RT[6] - g_RT_qss[6] + g_RT_qss[8]);
  amrex::Real x201 = -g_RT[17] - g_RT[1] + g_RT_qss[8];
  amrex::Real x202 = -5988.2783230761597 * invT - 7.64 * tc[0];
  amrex::Real x207 = log(
    0.663 * exp(-0.00058582308142940799 * tc[1]) +
    0.337 * exp(-0.0003125 * tc[1]) + exp(-4131.0 * invT));
  amrex::Real x209 =
    -0.29097730287517898 * x207 +
    0.43429448190325198 * log(3.8e+29 * x40 * exp(x202) / kf_qss[7]) - 0.4;
  amrex::Real x214 =
    1.7777777777777777 * ((x209) * (x209)) /
      ((-0.73540532268950665 * x207 - 0.18666666666666668 * x209 + 1) *
       (-0.73540532268950665 * x207 - 0.18666666666666668 * x209 + 1)) +
    1.0;
  amrex::Real x218 = exp(M_LN10 * (0.43429448190325198 * x207 / x214)) /
                     (1.0 + 3.8e+29 * x40 * exp(x202) / kf_qss[7]);
  amrex::Real x220 = refC * x218 * exp(x201 + x202);
  amrex::Real x225 =
    kf_qss[90] * exp(g_RT[2] - g_RT[3] - g_RT_qss[6] + g_RT_qss[8]);
  amrex::Real x228 =
    -kf_qss[100] * sc[2] - kf_qss[101] * sc[4] - kf_qss[102] * sc[3] -
    kf_qss[103] * sc[3] - kf_qss[92] * sc[4] * x196 - kf_qss[97] -
    kf_qss[98] * sc[1] - kf_qss[99] * sc[1] - 5.2e+27 * sc[1] * x176 * x191 -
    sc[2] * x225 - 3.8e+29 * x220 * x40 + 10.0e-13;
  const amrex::Real x230 = x173 / x228;
  amrex::Real x231 = kf_qss[92] * sc[4] * x196 + sc[2] * x225 + 10.0e-13;
  amrex::Real x232 = x231 / x169;
  amrex::Real x233 = -x172 * x65 - x230 * x232 + 1;
  amrex::Real x236 = exp(g_RT_qss[1] - g_RT_qss[2]);
  amrex::Real x240 = -3570.32224388449 * invT - 5.11 * tc[0];
  amrex::Real x242 = 2.69e+21 * exp(x240);
  amrex::Real x245 = log(
    0.4093 * exp(-0.0036363636363636398 * tc[1]) +
    0.5907 * exp(-0.000815660685154976 * tc[1]) + exp(-5185.0 * invT));
  amrex::Real x247 = -0.29097730287517898 * x245 +
                     0.43429448190325198 * log(x242 * x40 / kf_qss[3]) - 0.4;
  amrex::Real x252 =
    1.7777777777777777 * ((x247) * (x247)) /
      ((-0.73540532268950665 * x245 - 0.18666666666666668 * x247 + 1) *
       (-0.73540532268950665 * x245 - 0.18666666666666668 * x247 + 1)) +
    1.0;
  amrex::Real x256 = exp(M_LN10 * (0.43429448190325198 * x245 / x252)) /
                     (1.0 + x242 * x40 / kf_qss[3]);
  amrex::Real x261 = -618.95649893980499 * invT - 3.14 * tc[0];
  amrex::Real x263 = 3200000000000000.0 * exp(x261);
  amrex::Real x266 = log(
    0.32 * exp(-0.012820512820512799 * tc[1]) +
    0.68 * exp(-0.00050125313283207998 * tc[1]) + exp(-5590.0 * invT));
  amrex::Real x268 = -0.29097730287517898 * x266 +
                     0.43429448190325198 * log(x263 * x40 / kf_qss[2]) - 0.4;
  amrex::Real x273 =
    1.7777777777777777 * ((x268) * (x268)) /
      ((-0.73540532268950665 * x266 - 0.18666666666666668 * x268 + 1) *
       (-0.73540532268950665 * x266 - 0.18666666666666668 * x268 + 1)) +
    1.0;
  amrex::Real x277 = exp(M_LN10 * (0.43429448190325198 * x266 / x273)) /
                     (1.0 + x263 * x40 / kf_qss[2]);
  amrex::Real x286 =
    kf_qss[19] * exp(-g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[1]);
  const amrex::Real x290 = exp(g_RT[10] - g_RT[2] + g_RT_qss[1] - g_RT_qss[5]);
  const amrex::Real x312 = exp(g_RT[11] - g_RT[3] + g_RT_qss[1] - g_RT_qss[5]);
  amrex::Real x315 =
    -kf_qss[107] * sc[12] * exp(g_RT[12] - g_RT[14] - g_RT[2] + g_RT_qss[1]) -
    kf_qss[111] * sc[14] - kf_qss[28] * sc[0] - kf_qss[29] * sc[2] -
    kf_qss[30] * sc[3] - kf_qss[31] * sc[3] - kf_qss[32] * sc[4] -
    kf_qss[33] * sc[4] - kf_qss[34] * sc[6] - kf_qss[37] * sc[21] * x236 -
    kf_qss[45] * sc[5] * x236 - kf_qss[46] * sc[10] * x236 -
    kf_qss[47] * sc[11] * x236 -
    kf_qss[55] * sc[5] * exp(-g_RT[8] + g_RT_qss[1] - x162) -
    kf_qss[62] * sc[8] - kf_qss[72] * sc[9] - kf_qss[76] * sc[16] -
    kf_qss[77] * sc[10] * exp(g_RT[10] - g_RT[13] - g_RT[2] + g_RT_qss[1]) -
    kf_qss[80] * sc[10] * x290 - kf_qss[82] * sc[11] * x312 -
    kf_qss[83] * sc[11] * exp(g_RT[11] - g_RT[17] - g_RT[2] + g_RT_qss[1]) -
    sc[10] * x242 * x256 * x40 - sc[1] * x263 * x277 * x40 - sc[1] * x286 +
    10.0e-13;
  amrex::Real x318 =
    (kf_qss[80] * sc[2] + kf_qss[82] * sc[3] + 10.0e-13) / x315;
  amrex::Real x320 =
    -x318 * x65 + (kf_qss[76] * sc[10] * x158 + 10.0e-13) / x315;
  amrex::Real x321 = x320 / x233;
  amrex::Real x323 = kf_qss[59] * sc[8] + 10.0e-13;
  amrex::Real x324 = x323 / x169;
  const amrex::Real x332 = exp(-g_RT[1] + g_RT[8] + g_RT_qss[3] - g_RT_qss[8]);
  amrex::Real x341 =
    kf_qss[22] * exp(g_RT[10] - g_RT[11] - g_RT_qss[0] + g_RT_qss[3]);
  amrex::Real x343 = -717.08374877172605 * invT - 2.57 * tc[0];
  amrex::Real x345 = 1350000000000.0 * exp(x343);
  amrex::Real x348 = log(
    0.2176 * exp(-0.0036900369003690001 * tc[1]) +
    0.7824 * exp(-0.00036297640653357502 * tc[1]) + exp(-6570.0 * invT));
  amrex::Real x351 = -0.29097730287517898 * x348 +
                     0.43429448190325198 * log(x345 * x40 / kf_qss[1]) - 0.4;
  amrex::Real x353 = -0.55155399201712996 * x348 - 0.14 * x351 + 0.75;
  amrex::Real x356 = ((x351) * (x351)) / ((x353) * (x353)) + 1.0;
  amrex::Real x359 = exp(M_LN10 * (0.43429448190325198 * x348 / x356)) /
                     (1.0 + x345 * x40 / kf_qss[1]);
  amrex::Real x367 = x40 * exp(-2566.4049956040699 * invT - 9.588 * tc[0]);
  amrex::Real x371 = log(
    0.3827 * exp(-0.076475986540226401 * tc[1]) +
    0.6173 * exp(-0.00048123195380173197 * tc[1]) + exp(-5093.0 * invT));
  amrex::Real x373 = -0.29097730287517898 * x371 +
                     0.43429448190325198 * log(2.2e+36 * x367 / kf_qss[5]) -
                     0.4;
  amrex::Real x375 = -0.55155399201712996 * x371 - 0.14 * x373 + 0.75;
  amrex::Real x378 = ((x373) * (x373)) / ((x375) * (x375)) + 1.0;
  amrex::Real x382 = exp(M_LN10 * (0.43429448190325198 * x371 / x378)) /
                     (1.0 + 2.2e+36 * x367 / kf_qss[5]);
  const amrex::Real x385 = exp(g_RT[2] - g_RT[3] - g_RT_qss[0] + g_RT_qss[3]);
  amrex::Real x388 = g_RT[12] - g_RT_qss[3];
  const amrex::Real x392 = exp(g_RT[1] - g_RT[4] - g_RT_qss[0] + g_RT_qss[3]);
  const amrex::Real x401 = exp(g_RT[1] - g_RT[2] - g_RT_qss[1] + g_RT_qss[3]);
  const amrex::Real x404 = exp(g_RT[1] - g_RT[2] - g_RT_qss[2] + g_RT_qss[3]);
  amrex::Real x411 =
    kf_qss[30] * exp(-g_RT[3] + g_RT[4] - g_RT_qss[1] + g_RT_qss[3]);
  amrex::Real x415 =
    kf_qss[91] * exp(g_RT[12] - g_RT[3] + g_RT_qss[3] - g_RT_qss[6]);
  amrex::Real x422 =
    -kf_qss[106] * sc[8] * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3]) -
    kf_qss[110] * sc[14] - kf_qss[132] * sc[19] - kf_qss[16] * x40 -
    kf_qss[18] * sc[1] * x392 - kf_qss[21] * sc[2] * x385 - kf_qss[23] * sc[1] -
    kf_qss[24] * sc[2] - kf_qss[25] * sc[2] - kf_qss[26] * sc[4] -
    kf_qss[27] * sc[3] - kf_qss[29] * sc[1] * x401 - kf_qss[40] * sc[1] * x404 -
    kf_qss[49] * sc[0] * exp(g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3]) -
    kf_qss[50] * sc[4] * exp(-x166 - x388) -
    kf_qss[51] * sc[5] * exp(-x162 - x388) -
    kf_qss[52] * sc[6] * exp(-x114 - x388) -
    kf_qss[53] * sc[7] * exp(-g_RT[6] + g_RT[7] - x388) - kf_qss[60] * sc[8] -
    kf_qss[61] * sc[9] * exp(-x388 - x86) - kf_qss[78] * sc[13] -
    kf_qss[98] * sc[8] * x332 - sc[10] * x341 - sc[12] * x415 -
    sc[1] * x345 * x359 * x40 - sc[4] * x411 - 2.2e+36 * sc[8] * x367 * x382 +
    10.0e-13;
  amrex::Real x424 = kf_qss[98] * sc[1] + 10.0e-13;
  amrex::Real x425 = x424 / x422;
  amrex::Real x427 =
    -x230 * x425 + (kf_qss[91] * sc[3] + sc[10] * x92 + 10.0e-13) / x422;
  amrex::Real x428 = x427 / x233;
  amrex::Real x433 =
    kf_qss[18] * sc[4] + kf_qss[21] * sc[3] + kf_qss[22] * sc[11] + 10.0e-13;
  amrex::Real x435 = -x324 * x428 + x433 / x422;
  amrex::Real x436 = kf_qss[98] * sc[8] * x332 + 10.0e-13;
  const amrex::Real x437 = x436 / x228;
  amrex::Real x439 = kf_qss[78] * sc[13] + sc[12] * x415 + 10.0e-13;
  amrex::Real x441 = -x232 * x437 + x439 / x169;
  amrex::Real x442 = kf_qss[110] * sc[14] + 10.0e-13;
  amrex::Real x447 =
    kf_qss[134] * exp(-g_RT[1] + g_RT[8] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x449 = g_RT[15] - g_RT_qss[7];
  const amrex::Real x452 =
    exp(g_RT[12] + g_RT[4] - g_RT[6] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x458 = kf_qss[128] * exp(g_RT[8] - g_RT_qss[2] - x449);
  amrex::Real x468 = kf_qss[110] * exp(-g_RT[14] + g_RT_qss[7] - x90);
  amrex::Real x470 = -g_RT[14] - g_RT[1] + g_RT_qss[7];
  amrex::Real x471 = -3507.4201606588999 * invT - 7.62 * tc[0];
  amrex::Real x473 = 1.2e+30 * exp(x471);
  amrex::Real x476 = log(
    0.0247 * exp(-0.0047619047619047597 * tc[1]) +
    0.9753 * exp(-0.00101626016260163 * tc[1]) + exp(-4374.0 * invT));
  amrex::Real x478 = -0.29097730287517898 * x476 +
                     0.43429448190325198 * log(x40 * x473 / kf_qss[12]) - 0.4;
  amrex::Real x483 =
    1.7777777777777777 * ((x478) * (x478)) /
      ((-0.73540532268950665 * x476 - 0.18666666666666668 * x478 + 1) *
       (-0.73540532268950665 * x476 - 0.18666666666666668 * x478 + 1)) +
    1.0;
  amrex::Real x487 = exp(M_LN10 * (0.43429448190325198 * x476 / x483)) /
                     (1.0 + x40 * x473 / kf_qss[12]);
  amrex::Real x489 = refC * x487 * exp(x470 + x471);
  amrex::Real x492 = -3364.00341090455 * invT - 7.08 * tc[0];
  amrex::Real x494 = 1.99e+29 * exp(x492);
  amrex::Real x497 = log(
    0.1578 * exp(-0.008 * tc[1]) + 0.8422 * exp(-0.000450653447498873 * tc[1]) +
    exp(-6882.0 * invT));
  amrex::Real x499 = -0.29097730287517898 * x497 +
                     0.43429448190325198 * log(x40 * x494 / kf_qss[13]) - 0.4;
  amrex::Real x504 =
    1.7777777777777777 * ((x499) * (x499)) /
      ((-0.73540532268950665 * x497 - 0.18666666666666668 * x499 + 1) *
       (-0.73540532268950665 * x497 - 0.18666666666666668 * x499 + 1)) +
    1.0;
  amrex::Real x508 = exp(M_LN10 * (0.43429448190325198 * x497 / x504)) /
                     (1.0 + x40 * x494 / kf_qss[13]);
  const amrex::Real x512 = exp(g_RT[12] - g_RT[2] + g_RT_qss[7] - g_RT_qss[9]);
  amrex::Real x518 =
    -kf_qss[116] * sc[1] - kf_qss[117] * sc[2] - kf_qss[118] * sc[2] -
    kf_qss[119] * sc[3] - kf_qss[120] * sc[6] - kf_qss[121] * sc[6] -
    kf_qss[122] * sc[6] - kf_qss[123] * sc[7] -
    kf_qss[125] * sc[0] * exp(-x449 - x75) -
    kf_qss[126] * sc[4] * exp(-x166 - x449) -
    kf_qss[127] * sc[5] * exp(-x162 - x449) -
    kf_qss[129] * sc[9] * exp(-x449 - x86) - kf_qss[136] * sc[12] * x512 -
    kf_qss[139] * sc[12] * x452 * x66 -
    kf_qss[64] * sc[1] * exp(g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7]) -
    sc[10] * x468 - sc[1] * x40 * x494 * x508 - sc[8] * x447 - sc[8] * x458 -
    1.2e+30 * x40 * x489 + 10.0e-13;
  amrex::Real x520 = kf_qss[136] * sc[12] * x512 +
                     kf_qss[139] * sc[12] * x452 * x66 + sc[8] * x447 +
                     10.0e-13;
  x20 = sc[13] + sc[14] + x16 + x17 + x20;
  amrex::Real x524 = -3522.5166606330399 * invT - 6.66 * tc[0];
  amrex::Real x526 = 6.26e+26 * exp(x524);
  amrex::Real x529 =
    log(exp(-0.00076335877862595397 * tc[1]) + exp(-48097.0 * invT));
  amrex::Real x532 = -0.29097730287517898 * x529 +
                     0.43429448190325198 * log(x20 * x526 / kf_qss[14]) - 0.4;
  amrex::Real x537 =
    1.7777777777777777 * ((x532) * (x532)) /
      ((-0.73540532268950665 * x529 - 0.18666666666666668 * x532 + 1) *
       (-0.73540532268950665 * x529 - 0.18666666666666668 * x532 + 1)) +
    1.0;
  amrex::Real x540 = exp(M_LN10 * (0.43429448190325198 * x529 / x537)) /
                     (1.0 + x20 * x526 / kf_qss[14]);
  amrex::Real x543 = -g_RT[1] - g_RT[20] + g_RT_qss[9];
  amrex::Real x545 = refC * exp(x524 + x543);
  amrex::Real x553 =
    -kf_qss[115] * refC * exp(-g_RT[14] - g_RT[8] + g_RT_qss[9]) -
    kf_qss[134] * sc[1] - kf_qss[135] * sc[1] - kf_qss[136] * sc[2] -
    kf_qss[137] * sc[4] - kf_qss[138] * sc[3] - kf_qss[139] * sc[6] -
    kf_qss[140] * sc[8] - 6.26e+26 * x20 * x540 * x545 + 10.0e-13;
  const amrex::Real x555 = x520 / x553;
  amrex::Real x556 =
    kf_qss[134] * sc[1] + kf_qss[136] * sc[2] + kf_qss[139] * sc[6] + 10.0e-13;
  amrex::Real x557 = x556 / x518;
  amrex::Real x559 = (1.0 / ((-x555 * x557 + 1)));
  const amrex::Real x561 = x442 * x559 / x518;
  amrex::Real x562 = sc[10] * x468 + 10.0e-13;
  amrex::Real x564 = -x425 * x437 - x428 * x441 + 1 - x561 * x562 / x422;
  amrex::Real x566 = kf_qss[29] * sc[1] * x401 + sc[4] * x411 + 10.0e-13;
  amrex::Real x568 = (-x321 * x441 + x566 / x315) / x564;
  const amrex::Real x574 = exp(g_RT[10] - g_RT[16] - g_RT[1] + g_RT_qss[2]);
  const amrex::Real x576 = exp(-g_RT[8] + g_RT_qss[2] - x162);
  const amrex::Real x578 = exp(-g_RT[1] + g_RT[5] + g_RT_qss[2] - g_RT_qss[4]);
  amrex::Real x583 =
    -kf_qss[112] * sc[14] - kf_qss[113] * sc[14] - kf_qss[128] * sc[15] -
    kf_qss[37] * sc[21] - kf_qss[38] * sc[1] - kf_qss[39] * sc[2] -
    kf_qss[40] * sc[2] - kf_qss[41] * sc[4] - kf_qss[42] * sc[0] -
    kf_qss[43] * sc[3] - kf_qss[44] * sc[3] - kf_qss[45] * sc[5] -
    kf_qss[46] * sc[10] - kf_qss[47] * sc[11] - kf_qss[48] * sc[11] -
    kf_qss[56] * sc[5] * x576 - kf_qss[63] * sc[8] - kf_qss[67] * sc[5] * x578 -
    kf_qss[73] * sc[9] - kf_qss[74] * sc[10] * x574 + 10.0e-13;
  amrex::Real x585 = sc[8] * x458 + 10.0e-13;
  amrex::Real x588 =
    -x561 * x585 / x583 + (kf_qss[40] * sc[1] * x404 + 10.0e-13) / x583;
  amrex::Real x589 = x435 / x564;
  const amrex::Real x592 = exp(g_RT_qss[0] - g_RT_qss[2] - x75);
  amrex::Real x597 =
    -x588 * x589 + (kf_qss[38] * sc[0] * x592 + 10.0e-13) / x583;
  amrex::Real x598 = kf_qss[112] * sc[14] + 10.0e-13;
  const amrex::Real x599 = x598 / x63;
  amrex::Real x600 = kf_qss[112] * sc[9] * x12 + 10.0e-13;
  amrex::Real x601 = x600 / x583;
  amrex::Real x602 = kf_qss[128] * sc[15] + 10.0e-13;
  const amrex::Real x603 = x559 * x602 / x518;
  amrex::Real x607 =
    -x562 * x603 / x422 + (kf_qss[40] * sc[2] + 10.0e-13) / x422;
  amrex::Real x608 = x588 / x564;
  amrex::Real x611 = -g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[4];
  const amrex::Real x614 = exp(g_RT[4] - g_RT[6] - g_RT[8] + g_RT_qss[4]);
  amrex::Real x617 = -g_RT[12] - g_RT[1] + g_RT_qss[4];
  amrex::Real x618 = -2797.88466187424 * invT - 4.8 * tc[0];
  amrex::Real x622 = 2.2e+18 * x40 * exp(x618) / kf_qss[4];
  amrex::Real x624 = log(
    0.242 * exp(-0.010638297872340399 * tc[1]) +
    0.758 * exp(-0.00064308681672025703 * tc[1]) + exp(-4200.0 * invT));
  amrex::Real x626 =
    -0.29097730287517898 * x624 + 0.43429448190325198 * log(x622) - 0.4;
  amrex::Real x631 =
    1.7777777777777777 * ((x626) * (x626)) /
      ((-0.73540532268950665 * x624 - 0.18666666666666668 * x626 + 1) *
       (-0.73540532268950665 * x624 - 0.18666666666666668 * x626 + 1)) +
    1.0;
  amrex::Real x635 =
    exp(M_LN10 * (0.43429448190325198 * x624 / x631)) / (x622 + 1.0);
  amrex::Real x637 = refC * x635 * exp(x617 + x618);
  amrex::Real x639 = -kf_qss[57] * sc[2] * exp(-x611) -
                     kf_qss[58] * sc[4] * x614 - kf_qss[65] * sc[1] -
                     kf_qss[66] * sc[1] - kf_qss[67] * sc[1] -
                     kf_qss[68] * sc[2] - kf_qss[69] * sc[4] -
                     kf_qss[70] * sc[3] - 2.2e+18 * x40 * x637 + 10.0e-13;
  const amrex::Real x642 = (kf_qss[67] * sc[5] * x578 + 10.0e-13) / x639;
  amrex::Real x644 = (kf_qss[67] * sc[1] + 10.0e-13) / x583;
  amrex::Real x645 =
    -x599 * x601 - x607 * x608 - x642 * x644 + 1 - x585 * x603 / x583;
  amrex::Real x648 = -x318 * x599 - x568 * x607 +
                     (kf_qss[37] * sc[21] + kf_qss[45] * sc[5] +
                      kf_qss[46] * sc[10] + kf_qss[47] * sc[11] + 10.0e-13) /
                       x315;
  amrex::Real x649 = x648 / x645;
  amrex::Real x652 = kf_qss[33] * exp(g_RT_qss[0] - g_RT_qss[1] - x162);
  amrex::Real x657 =
    kf_qss[80] * sc[10] * x290 + kf_qss[82] * sc[11] * x312 + 10.0e-13;
  const amrex::Real x658 = x657 / x63;
  amrex::Real x660 = kf_qss[76] * sc[16] + 10.0e-13;
  amrex::Real x662 = -x172 * x658 + x660 / x169;
  amrex::Real x664 = kf_qss[29] * sc[2] + kf_qss[30] * sc[3] + 10.0e-13;
  amrex::Real x666 = -x428 * x662 + x664 / x422;
  amrex::Real x668 = kf_qss[37] * sc[21] * x236 + kf_qss[45] * sc[5] * x236 +
                     kf_qss[46] * sc[10] * x236 + kf_qss[47] * sc[11] * x236 +
                     10.0e-13;
  amrex::Real x671 = -x601 * x658 - x608 * x666 + x668 / x583;
  amrex::Real x672 = -x318 * x658 - x321 * x662 - x568 * x666 - x649 * x671 + 1;
  const amrex::Real x674 =
    (x321 * x324 + x435 * x568 + x597 * x649 -
     (kf_qss[19] * sc[0] + sc[5] * x652 + 10.0e-13) / x315) /
    x672;
  const amrex::Real x675 =
    (x588 * x589 - (kf_qss[38] * sc[0] * x592 + 10.0e-13) / x583) / x645;
  const amrex::Real x676 = (x601 * x658 + x608 * x666 - x668 / x583) / x645;
  const amrex::Real x677 = (x324 * x428 - x433 / x422) / x564;
  const amrex::Real x678 = (x428 * x662 - x664 / x422) / x564;
  const amrex::Real x679 =
    (x562 * x603 / x422 - (kf_qss[40] * sc[2] + 10.0e-13) / x422) / x564;
  const amrex::Real x680 = x324 / x233;
  const amrex::Real x681 = (x172 * x658 - x660 / x169) / x233;
  const amrex::Real x682 = (x232 * x437 - x439 / x169) / x233;
  amrex::Real x686 = exp(M_LN10 * (0.43429448190325198 * x348 / x356)) * x40 /
                     (kf_qss[1] * ((1.0 + x345 * x40 / kf_qss[1]) *
                                   (1.0 + x345 * x40 / kf_qss[1])));
  const amrex::Real x691 = 0.43429448190325198 / x40;
  amrex::Real x693 = ((x351) * (x351)) / ((x353) * (x353) * (x353));
  amrex::Real x694 = x691 * x693;
  amrex::Real x696 = x351 * x691 / ((x353) * (x353));
  amrex::Real x699 = sc[1] * x345 * x348 * x359 * x40 / ((x356) * (x356));
  const amrex::Real x702 =
    sc[8] * x40 * exp(-5132.8099912081398 * invT - 19.176 * tc[0]);
  amrex::Real x703 =
    2.066115702479339e-73 * exp(M_LN10 * (0.43429448190325198 * x371 / x378)) /
    (kf_qss[5] * ((4.5454545454545456e-37 + x367 / kf_qss[5]) *
                  (4.5454545454545456e-37 + x367 / kf_qss[5])));
  amrex::Real x707 = ((x373) * (x373)) / ((x375) * (x375) * (x375));
  amrex::Real x711 = x373 / ((x375) * (x375));
  amrex::Real x714 = 2.2e+36 * sc[8] * x367 * x371 * x382 / ((x378) * (x378));
  amrex::Real x715 = sc[8] * exp(-2566.4049956040699 * invT - 9.588 * tc[0]);
  amrex::Real x717 =
    -2 * kf_qss[16] - 2700000000000.0 * sc[1] * x359 * exp(x343) +
    3.645e+24 * sc[1] * x686 * exp(-1434.1674975434501 * invT - 5.14 * tc[0]) -
    4.4e+36 * x382 * x715 + x699 * (0.56 * x694 + 4.0 * x696) +
    9.68e+72 * x702 * x703 + x714 * (0.56 * x691 * x707 + 4.0 * x691 * x711);
  amrex::Real x718 =
    -kf_qss[49] * exp(g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3]) + x717;
  amrex::Real x720 = x433 / ((x422) * (x422));
  amrex::Real x723 = 2.3703703703703702 * ((x144) * (x144)) /
                     ((-0.73540532269 * x142 - 0.18666666666666668 * x144 + 1) *
                      (-0.73540532269 * x142 - 0.18666666666666668 * x144 + 1) *
                      (-0.73540532269 * x142 - 0.18666666666666668 * x144 + 1));
  x144 = 1.7777777777777777 * x144 /
         ((-0.73540532268950665 * x142 - 0.18666666666666668 * x144 + 1) *
          (-0.73540532268950665 * x142 - 0.18666666666666668 * x144 + 1));
  amrex::Real x728 = sc[1] * x139 * x142 * x153 * x40 / ((x149) * (x149));
  amrex::Real x729 = exp(M_LN10 * (0.43429448190325198 * x142 / x149)) * x40 /
                     (kf_qss[8] * ((1.0 + x139 * x40 / kf_qss[8]) *
                                   (1.0 + x139 * x40 / kf_qss[8])));
  amrex::Real x732 =
    sc[1] * x729 * exp(-3341.3586609433401 * invT - 7.72 * tc[0]);
  amrex::Real x736 =
    sc[8] * x40 * exp(-9832.6523631579003 * invT - 23.88 * tc[0]);
  amrex::Real x737 =
    5.4845910414689933e-94 * exp(M_LN10 * (0.43429448190325198 * x123 / x130)) /
    (kf_qss[9] * ((2.3419203747072597e-47 + x119 / kf_qss[9]) *
                  (2.3419203747072597e-47 + x119 / kf_qss[9])));
  amrex::Real x740 = 2.3703703703703702 * ((x100) * (x100)) /
                     ((-0.18666666666666668 * x100 - 0.73540532269 * x98 + 1) *
                      (-0.18666666666666668 * x100 - 0.73540532269 * x98 + 1) *
                      (-0.18666666666666668 * x100 - 0.73540532269 * x98 + 1));
  x100 = 1.7777777777777777 * x100 /
         ((-0.18666666666666668 * x100 - 0.73540532268950665 * x98 + 1) *
          (-0.18666666666666668 * x100 - 0.73540532268950665 * x98 + 1));
  amrex::Real x744 = 2.565e+21 * x110 * x40 * x98 / ((x105) * (x105));
  amrex::Real x747 = x107 * x40 *
                     exp(-36029.025036953499 * invT - 6.8 * tc[0]) /
                     (kf_qss[6] * ((x97 + 1.0) * (x97 + 1.0)));
  const amrex::Real x748 =
    sc[8] * exp(-4916.3261815789501 * invT - 11.94 * tc[0]);
  amrex::Real x753 = ((x125) * (x125)) * x691 / ((x127) * (x127) * (x127));
  amrex::Real x754 = x125 * x691 / ((x127) * (x127));
  amrex::Real x757 = 4.27e+46 * sc[8] * x119 * x123 * x134 / ((x130) * (x130));
  amrex::Real x758 = -2.8e+18 * sc[1] * x153 * exp(x137) - 5.13e+21 * x110 -
                     8.54e+46 * x134 * x748 +
                     x728 * (4.0 * x144 * x691 + 0.56 * x691 * x723) +
                     3.92e+36 * x732 + 3.64658e+93 * x736 * x737 +
                     x744 * (4.0 * x100 * x691 + 0.56 * x691 * x740) +
                     1.315845e+43 * x747 + x757 * (0.56 * x753 + 4.0 * x754);
  amrex::Real x760 =
    (-kf_qss[104] * exp(-x75 - x76) + x758) / ((x169) * (x169));
  amrex::Real x762 =
    (kf_qss[91] * sc[3] + sc[10] * x92 + 10.0e-13) / ((x422) * (x422));
  amrex::Real x767 = ((x182) * (x182)) * x691 / ((x184) * (x184) * (x184));
  amrex::Real x768 = x182 / ((x184) * (x184));
  amrex::Real x771 = 5.2e+27 * sc[1] * x176 * x180 * x191 / ((x187) * (x187));
  const amrex::Real x773 = sc[1] * x40;
  amrex::Real x774 = x773 * exp(-4730.2366585643604 * invT - 14.594 * tc[0]);
  amrex::Real x775 =
    3.6982248520710058e-56 * exp(M_LN10 * (0.43429448190325198 * x180 / x187)) /
    (kf_qss[10] * ((1.923076923076923e-28 + x176 / kf_qss[10]) *
                   (1.923076923076923e-28 + x176 / kf_qss[10])));
  amrex::Real x778 =
    1.7777777777777777 * x209 /
    ((-0.73540532268950665 * x207 - 0.18666666666666668 * x209 + 1) *
     (-0.73540532268950665 * x207 - 0.18666666666666668 * x209 + 1));
  x209 = 2.3703703703703702 * ((x209) * (x209)) /
         ((-0.73540532269 * x207 - 0.18666666666666668 * x209 + 1) *
          (-0.73540532269 * x207 - 0.18666666666666668 * x209 + 1) *
          (-0.73540532269 * x207 - 0.18666666666666668 * x209 + 1));
  amrex::Real x782 = 3.8e+29 * x207 * x220 * x40 / ((x214) * (x214));
  amrex::Real x783 = sc[1] * exp(-2365.1183292821802 * invT - 7.297 * tc[0]);
  amrex::Real x785 =
    6.9252077562326885e-60 * exp(M_LN10 * (0.43429448190325198 * x207 / x214)) /
    (kf_qss[7] * ((2.6315789473684213e-30 + x40 * exp(x202) / kf_qss[7]) *
                  (2.6315789473684213e-30 + x40 * exp(x202) / kf_qss[7])));
  const amrex::Real x788 = refC * x40;
  amrex::Real x789 =
    x788 * exp(-11976.556646152299 * invT - 15.28 * tc[0] + x201);
  amrex::Real x790 =
    -1.04e+28 * x191 * x783 - 7.6e+29 * x220 +
    x771 * (4.0 * x691 * x768 + 0.56 * x767) + 5.408e+55 * x774 * x775 +
    x782 * (0.56 * x209 * x691 + 4.0 * x691 * x778) + 2.888e+59 * x785 * x789;
  amrex::Real x791 = x790 / ((x228) * (x228));
  amrex::Real x792 = x173 * x425;
  amrex::Real x795 = x230 * x424 / ((x422) * (x422));
  amrex::Real x796 = -x718 * x762 + x718 * x795 + x791 * x792;
  amrex::Real x798 = x173 * x232;
  amrex::Real x806 = 2.3703703703703702 * ((x46) * (x46)) /
                     ((-0.73540532269 * x43 - 0.18666666666666668 * x46 + 1) *
                      (-0.73540532269 * x43 - 0.18666666666666668 * x46 + 1) *
                      (-0.73540532269 * x43 - 0.18666666666666668 * x46 + 1));
  x46 = 1.7777777777777777 * x46 /
        ((-0.73540532268950665 * x43 - 0.18666666666666668 * x46 + 1) *
         (-0.73540532268950665 * x43 - 0.18666666666666668 * x46 + 1));
  amrex::Real x810 =
    7.0e+44 * refCinv * sc[0] * x40 * x43 * x57 / ((x52) * (x52));
  amrex::Real x813 = x22 *
                     exp(-50019.736580989098 * invT - 1.28 * tc[0] + x23) /
                     (kf_qss[15] * ((x28) * (x28)));
  amrex::Real x814 = exp(M_LN10 * (0.43429448190325198 * x43 / x52)) * x40 /
                     (kf_qss[11] * ((1.0 + x37 * x40 / kf_qss[11]) *
                                    (1.0 + x37 * x40 / kf_qss[11])));
  amrex::Real x816 =
    refCinv * sc[0] * exp(-100502.432494519 * invT - 18.62 * tc[0] + x33);
  amrex::Real x818 = -1.4e+45 * refCinv * sc[0] * x57 - 4900000000.0 * x30 +
                     x810 * (4.0 * x46 * x691 + 0.56 * x691 * x806) +
                     1.2005e+19 * x813 + 9.8e+89 * x814 * x816;
  amrex::Real x819 = -kf_qss[85] * x8 - 7.0e+44 * refCinv * x40 * x57 + x818;
  amrex::Real x823 = -kf_qss[85] * x65 * x8 / x169 +
                     x1 * x172 * x819 / ((x63) * (x63)) + x171 * x65 * x760 +
                     x230 * x231 * x760 + x791 * x798;
  amrex::Real x825 = x427 / ((x233) * (x233));
  amrex::Real x826 = x324 * x825;
  amrex::Real x827 =
    x323 * x428 * x760 - x680 * x796 - x718 * x720 + x823 * x826;
  amrex::Real x828 = x441 / x233;
  amrex::Real x831 = x40 * exp(-974.22746499793698 * invT - 3.74 * tc[0]);
  amrex::Real x835 = log(
    0.4243 * exp(-0.0042194092827004199 * tc[1]) +
    0.5757 * exp(-0.000605326876513317 * tc[1]) + exp(-5069.0 * invT));
  amrex::Real x837 = -0.29097730287517898 * x835 +
                     0.43429448190325198 * log(2.69e+16 * x831 / kf_qss[0]) -
                     0.4;
  amrex::Real x839 = -0.55155399201712996 * x835 - 0.14 * x837 + 0.75;
  amrex::Real x842 = ((x837) * (x837)) / ((x839) * (x839)) + 1.0;
  amrex::Real x846 = exp(M_LN10 * (0.43429448190325198 * x835 / x842)) /
                     (1.0 + 2.69e+16 * x831 / kf_qss[0]);
  amrex::Real x849 =
    -kf_qss[17] * sc[2] - kf_qss[18] * sc[4] - kf_qss[19] * sc[0] -
    kf_qss[20] * sc[5] - kf_qss[21] * sc[3] - kf_qss[22] * sc[11] -
    kf_qss[38] * sc[0] * x592 - kf_qss[54] * sc[12] - kf_qss[59] * sc[8] -
    kf_qss[71] * sc[9] - kf_qss[75] * sc[16] - 2.69e+16 * sc[10] * x831 * x846 -
    sc[5] * x652 + 10.0e-13;
  amrex::Real x852 = (kf_qss[59] * sc[1] * x83 + 10.0e-13) / x849;
  amrex::Real x854 =
    -x828 * x852 + (kf_qss[18] * sc[1] * x392 + kf_qss[21] * sc[2] * x385 +
                    sc[10] * x341 + 10.0e-13) /
                     x849;
  amrex::Real x855 = x854 / x564;
  amrex::Real x856 = x320 / ((x233) * (x233));
  amrex::Real x857 = x324 * x856;
  amrex::Real x858 = x321 * x323;
  amrex::Real x862 = 2.3703703703703702 * ((x247) * (x247)) /
                     ((-0.73540532269 * x245 - 0.18666666666666668 * x247 + 1) *
                      (-0.73540532269 * x245 - 0.18666666666666668 * x247 + 1) *
                      (-0.73540532269 * x245 - 0.18666666666666668 * x247 + 1));
  x247 = 1.7777777777777777 * x247 /
         ((-0.73540532268950665 * x245 - 0.18666666666666668 * x247 + 1) *
          (-0.73540532268950665 * x245 - 0.18666666666666668 * x247 + 1));
  amrex::Real x866 = sc[10] * x242 * x245 * x256 * x40 / ((x252) * (x252));
  amrex::Real x868 = exp(M_LN10 * (0.43429448190325198 * x266 / x273)) * x40 /
                     (kf_qss[2] * ((1.0 + x263 * x40 / kf_qss[2]) *
                                   (1.0 + x263 * x40 / kf_qss[2])));
  amrex::Real x872 =
    sc[1] * x868 * exp(-1237.91299787961 * invT - 6.28 * tc[0]);
  amrex::Real x874 = 2.3703703703703702 * ((x268) * (x268)) /
                     ((-0.73540532269 * x266 - 0.18666666666666668 * x268 + 1) *
                      (-0.73540532269 * x266 - 0.18666666666666668 * x268 + 1) *
                      (-0.73540532269 * x266 - 0.18666666666666668 * x268 + 1));
  x268 = 1.7777777777777777 * x268 /
         ((-0.73540532268950665 * x266 - 0.18666666666666668 * x268 + 1) *
          (-0.73540532268950665 * x266 - 0.18666666666666668 * x268 + 1));
  amrex::Real x878 = sc[1] * x263 * x266 * x277 * x40 / ((x273) * (x273));
  amrex::Real x879 = exp(M_LN10 * (0.43429448190325198 * x245 / x252)) * x40 /
                     (kf_qss[3] * ((1.0 + x242 * x40 / kf_qss[3]) *
                                   (1.0 + x242 * x40 / kf_qss[3])));
  amrex::Real x882 =
    sc[10] * x879 * exp(-7140.6444877689701 * invT - 10.22 * tc[0]);
  amrex::Real x883 =
    -5.38e+21 * sc[10] * x256 * exp(x240) -
    6400000000000000.0 * sc[1] * x277 * exp(x261) +
    x866 * (4.0 * x247 * x691 + 0.56 * x691 * x862) + 2.048e+31 * x872 +
    x878 * (4.0 * x268 * x691 + 0.56 * x691 * x874) + 1.44722e+43 * x882;
  amrex::Real x884 = -kf_qss[28] + x883;
  amrex::Real x886 =
    (kf_qss[76] * sc[10] * x158 + 10.0e-13) / ((x315) * (x315));
  amrex::Real x887 = x1 * x318;
  amrex::Real x888 =
    (kf_qss[80] * sc[2] + kf_qss[82] * sc[3] + 10.0e-13) / ((x315) * (x315));
  amrex::Real x889 = x65 * x888;
  amrex::Real x890 = -x884 * x886 + x884 * x889 + x819 * x887 / ((x63) * (x63));
  amrex::Real x892 = x599 * x888;
  amrex::Real x893 = x566 / ((x315) * (x315));
  amrex::Real x894 = x232 * x436;
  amrex::Real x896 = x231 * x437 * x760 - x439 * x760 + x791 * x894;
  amrex::Real x897 = x441 * x856;
  amrex::Real x898 =
    -x321 * x896 + x823 * x897 - x884 * x893 - x441 * x890 / x233;
  amrex::Real x899 = x607 / x564;
  amrex::Real x900 = x424 * x437 / ((x422) * (x422));
  amrex::Real x901 = x425 * x436;
  amrex::Real x904 = 2.3703703703703702 * ((x478) * (x478)) /
                     ((-0.73540532269 * x476 - 0.18666666666666668 * x478 + 1) *
                      (-0.73540532269 * x476 - 0.18666666666666668 * x478 + 1) *
                      (-0.73540532269 * x476 - 0.18666666666666668 * x478 + 1));
  x478 = 1.7777777777777777 * x478 /
         ((-0.73540532268950665 * x476 - 0.18666666666666668 * x478 + 1) *
          (-0.73540532268950665 * x476 - 0.18666666666666668 * x478 + 1));
  amrex::Real x908 = 1.2e+30 * x40 * x476 * x489 / ((x483) * (x483));
  amrex::Real x909 = exp(M_LN10 * (0.43429448190325198 * x476 / x483)) * x40 /
                     (kf_qss[12] * ((1.0 + x40 * x473 / kf_qss[12]) *
                                    (1.0 + x40 * x473 / kf_qss[12])));
  amrex::Real x912 =
    refC * x909 * exp(-7014.8403213177899 * invT - 15.24 * tc[0] + x470);
  amrex::Real x914 = exp(M_LN10 * (0.43429448190325198 * x497 / x504)) * x40 /
                     (kf_qss[13] * ((1.0 + x40 * x494 / kf_qss[13]) *
                                    (1.0 + x40 * x494 / kf_qss[13])));
  amrex::Real x921 = 2.3703703703703702 * ((x499) * (x499)) /
                     ((-0.73540532269 * x497 - 0.18666666666666668 * x499 + 1) *
                      (-0.73540532269 * x497 - 0.18666666666666668 * x499 + 1) *
                      (-0.73540532269 * x497 - 0.18666666666666668 * x499 + 1));
  x499 = 1.7777777777777777 * x499 /
         ((-0.73540532268950665 * x497 - 0.18666666666666668 * x499 + 1) *
          (-0.73540532268950665 * x497 - 0.18666666666666668 * x499 + 1));
  amrex::Real x925 = sc[1] * x40 * x494 * x497 * x508 / ((x504) * (x504));
  amrex::Real x926 = -2.4e+30 * refC * x487 * exp(x470 + x471) -
                     3.98e+29 * sc[1] * x508 * exp(x492) +
                     7.9202e+58 * sc[1] * x914 *
                       exp(-6728.0068218091001 * invT - 14.16 * tc[0]) +
                     x908 * (4.0 * x478 * x691 + 0.56 * x691 * x904) +
                     2.88e+60 * x912 +
                     x925 * (4.0 * x499 * x691 + 0.56 * x691 * x921);
  amrex::Real x927 = -kf_qss[125] * exp(-x449 - x75) + x926;
  amrex::Real x929 = x559 * x562 / x422;
  amrex::Real x931 = x442 * x929 / ((x518) * (x518));
  amrex::Real x932 = x441 * x825;
  amrex::Real x934 = x561 * x562 / ((x422) * (x422));
  amrex::Real x936 = x555 * x556 / ((x518) * (x518));
  amrex::Real x937 = exp(M_LN10 * (0.43429448190325198 * x529 / x537)) * x20 /
                     (kf_qss[14] * ((1.0 + x20 * x526 / kf_qss[14]) *
                                    (1.0 + x20 * x526 / kf_qss[14])));
  amrex::Real x943 =
    refC * x937 * exp(-7045.0333212660798 * invT - 13.32 * tc[0] + x543);
  amrex::Real x946 =
    0.77207907893911465 * x532 /
    (x20 * ((-0.73540532268950665 * x529 - 0.18666666666666668 * x532 + 1) *
            (-0.73540532268950665 * x529 - 0.18666666666666668 * x532 + 1)));
  x532 = 1.0294387719188194 * ((x532) * (x532)) /
         (x20 * ((-0.73540532269 * x529 - 0.18666666666666668 * x532 + 1) *
                 (-0.73540532269 * x529 - 0.18666666666666668 * x532 + 1) *
                 (-0.73540532269 * x529 - 0.18666666666666668 * x532 + 1)));
  amrex::Real x950 = 6.26e+26 * x20 * x529 * x540 * x545 / ((x537) * (x537));
  amrex::Real x951 = -1.252e+27 * x540 * x545 + 7.83752e+53 * x943 +
                     x950 * (0.56 * x532 + 4.0 * x946);
  amrex::Real x954 = x520 * x557 / ((x553) * (x553));
  amrex::Real x956 = x927 * x936 + x951 * x954;
  amrex::Real x957 = (1.0 / ((-x555 * x557 + 1) * (-x555 * x557 + 1)));
  amrex::Real x960 = x442 * x562 * x957 / (x422 * x518);
  amrex::Real x961 = -x428 * x896 + x718 * x900 + x718 * x934 + x791 * x901 -
                     x796 * x828 + x823 * x932 + x927 * x931 + x956 * x960;
  x566 = (-x321 * x441 + x566 / x315) / ((x564) * (x564));
  amrex::Real x964 = x566 * x607;
  amrex::Real x965 = (kf_qss[40] * sc[2] + 10.0e-13) / ((x422) * (x422));
  amrex::Real x966 = x602 * x929 / ((x518) * (x518));
  amrex::Real x967 = x562 * x603 / ((x422) * (x422));
  amrex::Real x968 = x562 * x602 * x957 / (x422 * x518);
  amrex::Real x969 = -x718 * x965 + x718 * x967 + x927 * x966 + x956 * x968;
  amrex::Real x970 = (kf_qss[37] * sc[21] + kf_qss[45] * sc[5] +
                      kf_qss[46] * sc[10] + kf_qss[47] * sc[11] + 10.0e-13) /
                     ((x315) * (x315));
  amrex::Real x971 = x318 * x598;
  amrex::Real x972 = -x568 * x969 + x884 * x892 - x884 * x970 - x898 * x899 +
                     x961 * x964 + x819 * x971 / ((x63) * (x63));
  amrex::Real x973 = x597 / x645;
  amrex::Real x975 = (kf_qss[38] * sc[0] * x592 + 10.0e-13) / ((x583) * (x583));
  x588 = x588 / ((x564) * (x564));
  amrex::Real x977 = x435 * x588;
  amrex::Real x978 = (kf_qss[40] * sc[1] * x404 + 10.0e-13) / ((x583) * (x583));
  amrex::Real x980 = x561 * x585 / ((x583) * (x583));
  amrex::Real x981 = x559 * x585 / x583;
  amrex::Real x983 = x442 * x981 / ((x518) * (x518));
  amrex::Real x985 = x442 * x585 * x957 / (x518 * x583);
  amrex::Real x986 =
    kf_qss[42] * x978 - kf_qss[42] * x980 + x927 * x983 + x956 * x985;
  amrex::Real x987 = kf_qss[38] * x592 / x583 + kf_qss[42] * x975 -
                     x589 * x986 - x608 * x827 + x961 * x977;
  amrex::Real x988 = x435 * x566;
  amrex::Real x989 = x585 * x603 / ((x583) * (x583));
  amrex::Real x990 = x602 * x981 / ((x518) * (x518));
  x622 = exp(M_LN10 * (0.43429448190325198 * x624 / x631)) /
         (kf_qss[4] * ((x622 + 1.0) * (x622 + 1.0)));
  amrex::Real x994 = x788 * exp(-5595.76932374848 * invT - 9.6 * tc[0] + x617);
  amrex::Real x997 = 2.3703703703703702 * ((x626) * (x626)) /
                     ((-0.73540532269 * x624 - 0.18666666666666668 * x626 + 1) *
                      (-0.73540532269 * x624 - 0.18666666666666668 * x626 + 1) *
                      (-0.73540532269 * x624 - 0.18666666666666668 * x626 + 1));
  x626 = 1.7777777777777777 * x626 /
         ((-0.73540532268950665 * x624 - 0.18666666666666668 * x626 + 1) *
          (-0.73540532268950665 * x624 - 0.18666666666666668 * x626 + 1));
  amrex::Real x1001 = 2.2e+18 * x40 * x624 * x637 / ((x631) * (x631));
  amrex::Real x1002 = -4.4e+18 * refC * x635 * exp(x617 + x618) +
                      x1001 * (4.0 * x626 * x691 + 0.56 * x691 * x997) +
                      9.68e+36 * x622 * x994;
  amrex::Real x1005 =
    x644 * (kf_qss[67] * sc[5] * x578 + 10.0e-13) / ((x639) * (x639));
  amrex::Real x1008 =
    x642 * (kf_qss[67] * sc[1] + 10.0e-13) / ((x583) * (x583));
  amrex::Real x1010 = x599 * x600 / ((x583) * (x583));
  amrex::Real x1011 = x588 * x607;
  amrex::Real x1012 = x598 * x601;
  amrex::Real x1013 = x585 * x602 * x957 / (x518 * x583);
  amrex::Real x1014 = -kf_qss[42] * x1008 - kf_qss[42] * x1010 -
                      kf_qss[42] * x989 + x1002 * x1005 + x1011 * x961 +
                      x1012 * x819 / ((x63) * (x63)) + x1013 * x956 -
                      x608 * x969 - x899 * x986 + x927 * x990;
  amrex::Real x1017 = x597 * x648 / ((x645) * (x645));
  amrex::Real x1018 =
    (kf_qss[19] * sc[0] + sc[5] * x652 + 10.0e-13) / ((x315) * (x315));
  amrex::Real x1019 = kf_qss[19] / x315 + x1014 * x1017 - x1018 * x884 -
                      x568 * x827 - x589 * x898 - x649 * x987 + x760 * x858 +
                      x823 * x857 + x961 * x988 - x972 * x973 -
                      x324 * x890 / x233;
  amrex::Real x1020 = x666 / x564;
  amrex::Real x1022 = -x854 * x899 + (kf_qss[38] * sc[1] + 10.0e-13) / x849;
  amrex::Real x1023 = x671 / x645;
  amrex::Real x1025 = x662 / x233;
  amrex::Real x1026 = -x1020 * x854 - x1022 * x1023 - x1025 * x852 +
                      (kf_qss[33] * sc[4] + sc[1] * x286 + 10.0e-13) / x849;
  amrex::Real x1027 = x1026 / x672;
  amrex::Real x1028 = x171 * x658;
  amrex::Real x1030 = -kf_qss[85] * x658 * x8 / x169 + x1028 * x760 +
                      x172 * x657 * x819 / ((x63) * (x63)) - x660 * x760;
  amrex::Real x1031 = x852 / x233;
  amrex::Real x1032 = x852 / ((x233) * (x233));
  amrex::Real x1033 = x1032 * x662;
  amrex::Real x1036 = ((x837) * (x837)) / ((x839) * (x839) * (x839));
  amrex::Real x1037 = x837 / ((x839) * (x839));
  amrex::Real x1041 =
    2.69e+16 * sc[10] * x831 * x835 * x846 / ((x842) * (x842));
  amrex::Real x1042 = sc[10] * exp(-974.22746499793698 * invT - 3.74 * tc[0]);
  amrex::Real x1044 =
    1.3819598955238318e-33 * exp(M_LN10 * (0.43429448190325198 * x835 / x842)) /
    (kf_qss[0] * ((3.717472118959108e-17 + x831 / kf_qss[0]) *
                  (3.717472118959108e-17 + x831 / kf_qss[0])));
  const amrex::Real x1047 =
    sc[10] * x40 * exp(-1948.4549299958701 * invT - 7.48 * tc[0]);
  amrex::Real x1049 = x1041 * (0.56 * x1036 * x691 + 4.0 * x1037 * x691) -
                      5.38e+16 * x1042 * x846 + 1.44722e+33 * x1044 * x1047;
  amrex::Real x1050 = -kf_qss[19] - kf_qss[38] * x592 + x1049;
  amrex::Real x1052 = (kf_qss[59] * sc[1] * x83 + 10.0e-13) / ((x849) * (x849));
  amrex::Real x1053 = x1025 * x1052;
  amrex::Real x1054 = (kf_qss[18] * sc[1] * x392 + kf_qss[21] * sc[2] * x385 +
                       sc[10] * x341 + 10.0e-13) /
                      ((x849) * (x849));
  amrex::Real x1055 = x1032 * x441;
  amrex::Real x1056 = x1052 * x828;
  amrex::Real x1057 =
    -x1031 * x896 - x1050 * x1054 + x1050 * x1056 + x1055 * x823;
  amrex::Real x1058 = (kf_qss[38] * sc[1] + 10.0e-13) / ((x849) * (x849));
  amrex::Real x1059 = x854 / ((x564) * (x564));
  amrex::Real x1060 = x1059 * x607;
  amrex::Real x1061 =
    -x1050 * x1058 - x1057 * x899 + x1060 * x961 - x855 * x969;
  amrex::Real x1062 = x664 / ((x422) * (x422));
  amrex::Real x1063 = x662 * x825;
  amrex::Real x1064 =
    -x1025 * x796 - x1030 * x428 - x1062 * x718 + x1063 * x823;
  amrex::Real x1065 = x1059 * x666;
  amrex::Real x1066 =
    (kf_qss[33] * sc[4] + sc[1] * x286 + 10.0e-13) / ((x849) * (x849));
  amrex::Real x1068 = x1022 * x671 / ((x645) * (x645));
  amrex::Real x1069 = x600 * x658 / ((x583) * (x583));
  amrex::Real x1070 = x588 * x666;
  x668 = x668 / ((x583) * (x583));
  amrex::Real x1073 = -kf_qss[42] * x1069 + kf_qss[42] * x668 - x1020 * x986 -
                      x1064 * x608 + x1070 * x961 +
                      x601 * x657 * x819 / ((x63) * (x63));
  amrex::Real x1074 = x1022 / x645;
  amrex::Real x1075 = x1014 * x1068 - x1020 * x1057 - x1023 * x1061 -
                      x1030 * x1031 + x1033 * x823 + x1050 * x1053 -
                      x1050 * x1066 - x1064 * x855 + x1065 * x961 -
                      x1073 * x1074;
  amrex::Real x1076 = -x321 * x324 - x435 * x568 - x597 * x649 +
                      (kf_qss[19] * sc[0] + sc[5] * x652 + 10.0e-13) / x315;
  amrex::Real x1077 = x1076 / x672;
  amrex::Real x1078 = x1022 * x597 / ((x645) * (x645));
  amrex::Real x1079 = x1032 * x324;
  amrex::Real x1080 = x1052 * x680;
  amrex::Real x1081 = x1059 * x435;
  amrex::Real x1082 = x662 * x856;
  amrex::Real x1083 = x658 * x888;
  amrex::Real x1085 = x648 * x671 / ((x645) * (x645));
  amrex::Real x1086 = x566 * x666;
  amrex::Real x1087 = x1014 * x1085 - x1020 * x898 - x1023 * x972 -
                      x1030 * x321 - x1064 * x568 - x1073 * x649 +
                      x1082 * x823 + x1083 * x884 + x1086 * x961 +
                      x318 * x657 * x819 / ((x63) * (x63)) - x662 * x890 / x233;
  amrex::Real x1090 = x1026 * x1076 / ((x672) * (x672));
  amrex::Real x1091 = x1031 * x323;
  amrex::Real x1099 =
    kf_qss[141] * exp(g_RT[19] + g_RT[8] - g_RT_qss[6] - g_RT_qss[7]);
  amrex::Real x1104 =
    kf_qss[96] * exp(g_RT[19] + g_RT[1] - g_RT[8] - g_RT_qss[6]);
  const amrex::Real x1108 = exp(g_RT[14] - g_RT_qss[6] - x90);
  amrex::Real x1114 = exp(
    g_RT[20] - g_RT[8] - g_RT_qss[6] - 4916.3261815789501 * invT -
    11.94 * tc[0]);
  amrex::Real x1121 = kf_qss[89] * exp(g_RT[13] - g_RT_qss[6] - x114);
  const amrex::Real x1124 = exp(g_RT[0] + g_RT[13] - g_RT[1] - g_RT_qss[6]);
  amrex::Real x1128 = refCinv * sc[13] * sc[1];
  amrex::Real x1131 = x107 *
                      exp(
                        g_RT[13] + g_RT[1] - g_RT_qss[6] -
                        18014.512518476698 * invT - 3.4 * tc[0]) /
                      (x97 + 1.0);
  amrex::Real x1135 = g_RT[14] - g_RT[1] - g_RT_qss[6];
  amrex::Real x1136 = x153 * exp(x1135 + x137);
  const amrex::Real x1142 = exp(g_RT[10] - g_RT[2] + g_RT[8] - g_RT_qss[6]);
  const amrex::Real x1145 = exp(g_RT[13] - g_RT_qss[6] - x162);
  const amrex::Real x1150 = exp(g_RT[17] + g_RT[1] - g_RT[2] - g_RT_qss[6]);
  amrex::Real x1153 = -g_RT[6] + g_RT[7];
  amrex::Real x1155 = kf_qss[93] * exp(g_RT[14] - g_RT_qss[6] - x1153);
  const amrex::Real x1158 = exp(g_RT[13] - g_RT_qss[6] - x86);
  amrex::Real x1161 =
    kf_qss[104] * sc[14] * sc[1] + kf_qss[105] * sc[14] * sc[2] +
    kf_qss[108] * sc[14] * sc[4] + kf_qss[109] * sc[14] * sc[3] +
    kf_qss[114] * sc[14] * sc[8] + kf_qss[131] * sc[19] * sc[6] +
    kf_qss[84] * sc[0] * sc[13] * x1124 + kf_qss[86] * sc[17] * sc[1] * x1150 +
    kf_qss[87] * sc[10] * sc[8] * x1142 + kf_qss[88] * sc[13] * sc[5] * x1145 +
    kf_qss[94] * sc[10] * sc[14] * x1108 + kf_qss[95] * sc[13] * sc[9] * x1158 +
    sc[13] * sc[6] * x1121 + sc[14] * sc[6] * x1155 +
    1.4e+18 * sc[14] * x1136 * x788 + sc[19] * sc[1] * x1104 +
    sc[19] * sc[8] * x1099 + 4.27e+46 * sc[20] * x1114 * x134 * x788 +
    2.565e+21 * x1128 * x1131 * x40 + 10.0e-13;
  const amrex::Real x1164 = exp(g_RT[17] + g_RT[1] - g_RT[4] - g_RT_qss[5]);
  const amrex::Real x1167 = exp(g_RT[13] - g_RT_qss[5]);
  amrex::Real x1173 = sc[13] * exp(x24) / x28;
  amrex::Real x1175 =
    kf_qss[130] * sc[19] * sc[1] + kf_qss[79] * sc[13] * sc[1] * x1167 +
    kf_qss[81] * sc[17] * sc[1] * x1164 + sc[14] * x37 * x40 * x56 +
    2450000000.0 * x1173 * x22 + 10.0e-13;
  const amrex::Real x1176 = x1175 / x63;
  const amrex::Real x1177 = sc[10] * x66;
  const amrex::Real x1178 =
    exp(g_RT[10] + g_RT[12] - g_RT[3] + g_RT[4] - g_RT_qss[8]);
  const amrex::Real x1182 = exp(g_RT[17] - g_RT_qss[8] - x114);
  amrex::Real x1186 = kf_qss[101] * exp(g_RT[17] - g_RT_qss[8] - x162);
  const amrex::Real x1190 = exp(
    g_RT[18] - g_RT[1] - g_RT_qss[8] - 2365.1183292821802 * invT -
    7.297 * tc[0]);
  const amrex::Real x1192 = 5.2e+27 * x1190 * x788;
  amrex::Real x1197 = kf_qss[97] * exp(g_RT[10] + g_RT[8] - g_RT_qss[8]);
  amrex::Real x1199 = sc[17] * sc[1];
  amrex::Real x1200 = 3.8e+29 * x218 * x40 * exp(x202);
  amrex::Real x1203 =
    kf_qss[99] * exp(g_RT[0] + g_RT[17] - g_RT[1] - g_RT_qss[8]);
  amrex::Real x1206 = kf_qss[100] * exp(g_RT[17] - g_RT_qss[8] - x166);
  amrex::Real x1208 =
    kf_qss[102] * sc[17] * sc[6] * x1182 +
    kf_qss[103] * sc[12] * x1177 * x1178 + refCinv * sc[10] * sc[8] * x1197 +
    sc[0] * sc[17] * x1203 + sc[17] * sc[4] * x1206 + sc[17] * sc[5] * x1186 +
    sc[18] * x1192 * x191 + x1199 * x1200 + 10.0e-13;
  const amrex::Real x1209 = x1208 / x228;
  amrex::Real x1210 = -x1161 / x169 + x1176 * x172 + x1209 * x232;
  amrex::Real x1211 = x1210 / x233;
  const amrex::Real x1213 = exp(-x86 - x90);
  const amrex::Real x1217 = exp(-x166 - x90);
  const amrex::Real x1221 = exp(-x75 - x90);
  const amrex::Real x1224 = exp(-x162 - x90);
  amrex::Real x1229 = exp(
    g_RT[18] - g_RT[8] - g_RT_qss[3] - 2566.4049956040699 * invT -
    9.588 * tc[0]);
  const amrex::Real x1234 = exp(g_RT[11] + g_RT[1] - g_RT[2] - g_RT_qss[3]);
  const amrex::Real x1238 = exp(-g_RT[19] + g_RT[20] - x90);
  amrex::Real x1246 = exp(g_RT[1] - x90);
  const amrex::Real x1248 = refCinv * sc[10] * sc[1];
  amrex::Real x1251 = g_RT[12] - g_RT[1] - g_RT_qss[3];
  amrex::Real x1252 = x359 * exp(x1251 + x343);
  const amrex::Real x1260 = exp(g_RT[15] - g_RT_qss[7] - x90);
  amrex::Real x1264 =
    kf_qss[106] * sc[14] * sc[2] + kf_qss[124] * sc[10] * sc[15] * x1260 +
    kf_qss[132] * sc[10] * sc[20] * x1238 + kf_qss[16] * x1246 * x1248 * x40 +
    kf_qss[23] * sc[0] * sc[10] * x1221 + kf_qss[24] * sc[10] * sc[4] * x1217 +
    kf_qss[25] * sc[11] * sc[1] * x1234 + kf_qss[26] * sc[10] * sc[5] * x1224 +
    kf_qss[27] * sc[10] * sc[6] * exp(-x114 - x90) +
    kf_qss[49] * sc[12] * sc[1] + kf_qss[50] * sc[12] * sc[2] +
    kf_qss[51] * sc[12] * sc[4] + kf_qss[52] * sc[12] * sc[3] +
    kf_qss[53] * sc[12] * sc[6] + kf_qss[60] * sc[10] * sc[9] * x1213 +
    kf_qss[61] * sc[12] * sc[8] + kf_qss[94] * sc[10] * sc[14] * x1108 +
    1350000000000.0 * sc[12] * x1252 * x788 +
    2.2e+36 * sc[18] * x1229 * x382 * x788 + 10.0e-13;
  const amrex::Real x1266 = exp(g_RT[20] - g_RT_qss[9] - x86);
  const amrex::Real x1270 = exp(g_RT[20] - g_RT_qss[9] - x162);
  const amrex::Real x1277 = exp(g_RT[20] - g_RT_qss[9] - x75);
  const amrex::Real x1280 = exp(g_RT[20] - g_RT_qss[9] - x114);
  amrex::Real x1283 = kf_qss[115] * sc[14] * sc[8] +
                      kf_qss[135] * sc[0] * sc[20] * x1277 +
                      kf_qss[137] * sc[20] * sc[5] * x1270 +
                      kf_qss[138] * sc[20] * sc[6] * x1280 +
                      kf_qss[140] * sc[20] * sc[9] * x1266 +
                      sc[1] * sc[20] * x20 * x526 * x540 + 10.0e-13;
  const amrex::Real x1284 = x1283 / x553;
  amrex::Real x1289 = sc[14] * sc[1];
  const amrex::Real x1293 = exp(g_RT[12] - g_RT[2] + g_RT[8] - g_RT_qss[7]);
  amrex::Real x1297 = kf_qss[123] * exp(g_RT[15] - g_RT_qss[7] - x1153);
  const amrex::Real x1299 = exp(g_RT[18] + g_RT[1] - g_RT[2] - g_RT_qss[7]);
  const amrex::Real x1304 = exp(g_RT[14] - g_RT[6] + g_RT[7] - g_RT_qss[7]);
  const amrex::Real x1307 = exp(g_RT[14] - g_RT_qss[7] - x114);
  const amrex::Real x1310 = exp(g_RT[14] - g_RT_qss[7] - x75);
  amrex::Real x1313 = g_RT[15] - g_RT[1] - g_RT_qss[7];
  amrex::Real x1314 = exp(x1313 + x492);
  amrex::Real x1320 = -g_RT[3] + g_RT[6];
  const amrex::Real x1321 = exp(g_RT[15] - g_RT_qss[7] - x1320);
  const amrex::Real x1325 =
    exp(g_RT[12] + g_RT[4] - g_RT[6] + g_RT[8] - g_RT_qss[7]);
  amrex::Real x1328 =
    kf_qss[116] * sc[0] * sc[14] * x1310 +
    kf_qss[117] * sc[12] * sc[8] * x1293 +
    kf_qss[118] * sc[18] * sc[1] * x1299 +
    kf_qss[119] * sc[14] * sc[6] * x1307 +
    kf_qss[120] * sc[15] * sc[3] * x1321 +
    kf_qss[121] * sc[14] * sc[7] * x1304 +
    kf_qss[122] * sc[12] * sc[8] * x1325 * x66 +
    kf_qss[124] * sc[10] * sc[15] * x1260 + kf_qss[125] * sc[15] * sc[1] +
    kf_qss[126] * sc[15] * sc[2] + kf_qss[127] * sc[15] * sc[4] +
    kf_qss[129] * sc[15] * sc[8] + kf_qss[64] * ((sc[8]) * (sc[8])) +
    sc[15] * sc[6] * x1297 + 1.99e+29 * sc[15] * x1314 * x508 * x788 +
    sc[19] * sc[8] * x1099 + x1289 * x40 * x473 * x487 + 10.0e-13;
  amrex::Real x1329 = x1284 * x557 - x1328 / x518;
  x427 = x1209 * x425 - x1211 * x427 - x1264 / x422 - x1329 * x929;
  const amrex::Real x1332 = -2.0 * g_RT[8] + g_RT[9];
  amrex::Real x1338 =
    kf_qss[63] * exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[2]);
  const amrex::Real x1342 = exp(g_RT[12] + g_RT[1] - g_RT[4] - g_RT_qss[2]);
  const amrex::Real x1345 = exp(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[2]);
  const amrex::Real x1349 = exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[2]);
  const amrex::Real x1352 = exp(g_RT[0] + g_RT[10] - g_RT[2] - g_RT_qss[2]);
  const amrex::Real x1355 =
    exp(g_RT[10] + g_RT[1] - g_RT[3] + g_RT[4] - g_RT_qss[2]);
  const amrex::Real x1358 = exp(g_RT[10] - g_RT[11] + g_RT[12] - g_RT_qss[2]);
  const amrex::Real x1361 = exp(g_RT[10] - g_RT[3] + g_RT[5] - g_RT_qss[2]);
  amrex::Real x1364 =
    kf_qss[113] * sc[19] * sc[1] * x1349 + kf_qss[39] * sc[0] * sc[10] * x1352 +
    kf_qss[41] * sc[12] * sc[1] * x1342 + kf_qss[42] * sc[1] * sc[8] * x1345 +
    kf_qss[43] * sc[1] * x1177 * x1355 + kf_qss[44] * sc[10] * sc[5] * x1361 +
    kf_qss[48] * sc[10] * sc[12] * x1358 + kf_qss[56] * sc[4] * sc[8] +
    kf_qss[73] * ((sc[8]) * (sc[8])) * exp(-g_RT_qss[2] - x1332) +
    kf_qss[74] * sc[16] * sc[1] + sc[14] * sc[1] * x1338 + 10.0e-13;
  amrex::Real x1366 =
    kf_qss[70] * exp(g_RT[12] - g_RT[3] + g_RT[6] - g_RT_qss[4]);
  amrex::Real x1369 = sc[12] * sc[1];
  amrex::Real x1370 = 2.2e+18 * x40 * x635 * exp(x618);
  const amrex::Real x1372 = exp(-g_RT[1] + g_RT[4] + g_RT[8] - g_RT_qss[4]);
  const amrex::Real x1376 = exp(g_RT[12] - g_RT_qss[4] - x162);
  const amrex::Real x1379 = exp(g_RT[12] - g_RT_qss[4] - x166);
  const amrex::Real x1383 = exp(g_RT[0] + g_RT[12] - g_RT[1] - g_RT_qss[4]);
  amrex::Real x1386 =
    kf_qss[57] * sc[3] * sc[8] + kf_qss[58] * sc[6] * sc[8] +
    kf_qss[65] * sc[0] * sc[12] * x1383 + kf_qss[66] * sc[4] * sc[8] * x1372 +
    kf_qss[68] * sc[12] * sc[4] * x1379 + kf_qss[69] * sc[12] * sc[5] * x1376 +
    sc[12] * sc[6] * x1366 + x1369 * x1370 + 10.0e-13;
  const amrex::Real x1387 = x1386 / x639;
  amrex::Real x1388 =
    x1176 * x601 - x1329 * x981 - x1364 / x583 + x1387 * x644 - x427 * x608;
  amrex::Real x1389 = x1388 / x645;
  const amrex::Real x1390 = exp(g_RT[10] + g_RT[13] - g_RT[16] - g_RT_qss[0]);
  const amrex::Real x1393 = exp(g_RT[14] + g_RT[1] - g_RT[9] - g_RT_qss[0]);
  const amrex::Real x1396 = exp(g_RT[10] + g_RT[1] - g_RT[2] - g_RT_qss[0]);
  amrex::Real x1401 = exp(
    -g_RT[10] + g_RT[16] - g_RT_qss[0] - 974.22746499793698 * invT -
    3.74 * tc[0]);
  amrex::Real x1407 =
    kf_qss[20] * exp(g_RT[12] + g_RT[1] - g_RT[5] - g_RT_qss[0]);
  amrex::Real x1410 =
    kf_qss[54] * exp(-g_RT[12] + g_RT[17] + g_RT[1] - g_RT_qss[0]);
  amrex::Real x1412 = exp(g_RT[13] + g_RT[1] - g_RT_qss[0] - g_RT_qss[1]);
  amrex::Real x1416 =
    kf_qss[17] * sc[10] * sc[1] * x1396 + kf_qss[35] * sc[13] * sc[1] * x1412 +
    kf_qss[71] * sc[14] * sc[1] * x1393 + kf_qss[75] * sc[10] * sc[13] * x1390 +
    sc[12] * sc[1] * x1407 + 2.69e+16 * sc[16] * x1401 * x788 * x846 +
    sc[17] * sc[1] * x1410 + 10.0e-13;
  amrex::Real x1419 =
    kf_qss[111] * exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[1]);
  const amrex::Real x1422 = exp(g_RT[12] + g_RT[4] - g_RT[6] - g_RT_qss[1]);
  const amrex::Real x1425 = exp(g_RT[12] + g_RT[1] - g_RT[4] - g_RT_qss[1]);
  amrex::Real x1430 =
    kf_qss[28] * exp(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[1]);
  amrex::Real x1434 = -g_RT[10] + g_RT[17] - g_RT_qss[1];
  amrex::Real x1437 = 2.69e+21 * x256 * x40 * exp(x1434 + x240);
  const amrex::Real x1439 = exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[1]);
  amrex::Real x1444 = kf_qss[31] * refCinv *
                      exp(g_RT[11] + 2.0 * g_RT[1] - g_RT[3] - g_RT_qss[1]);
  amrex::Real x1446 = -g_RT[1] + g_RT[8] - g_RT_qss[1];
  amrex::Real x1449 = 3200000000000000.0 * x277 * exp(x1446 + x261);
  const amrex::Real x1456 = exp(g_RT[0] + g_RT[13] - 2.0 * g_RT_qss[1]);
  amrex::Real x1459 =
    kf_qss[107] * sc[14] * sc[2] + kf_qss[32] * sc[12] * sc[1] * x1425 +
    kf_qss[34] * sc[12] * sc[4] * x1422 + kf_qss[35] * sc[13] * sc[1] * x1412 +
    2.0 * kf_qss[36] * sc[0] * sc[13] * x1456 + kf_qss[55] * sc[4] * sc[8] +
    kf_qss[62] * sc[14] * sc[1] * x1439 +
    kf_qss[72] * ((sc[8]) * (sc[8])) * exp(-g_RT_qss[1] - x1332) +
    kf_qss[77] * sc[13] * sc[2] + kf_qss[83] * sc[17] * sc[2] +
    refC * sc[17] * x1437 + sc[11] * ((sc[1]) * (sc[1])) * x1444 +
    sc[19] * sc[1] * x1419 + sc[1] * sc[8] * x1430 + sc[8] * x1449 * x788 +
    10.0e-13;
  x320 =
    x1176 * x318 - x1211 * x320 - x1388 * x649 - x1459 / x315 - x427 * x568;
  amrex::Real x1461 = x427 / x564;
  amrex::Real x1462 =
    -x1022 * x1389 - x1027 * x320 - x1211 * x852 - x1416 / x849 - x1461 * x854;
  x852 = -x1022 * x973 - x1026 * x1077 - x589 * x854 - x680 * x852 + 1;
  x854 = x1462 / ((x852) * (x852));
  const amrex::Real x1465 =
    x854 * (x1014 * x1078 - x1019 * x1027 + x1050 * x1080 - x1057 * x589 -
            x1061 * x973 - x1074 * x987 - x1075 * x1077 + x1079 * x823 +
            x1081 * x961 + x1087 * x1090 + x1091 * x760 - x827 * x855);
  x149 = 1.4e+18 * sc[14] * x1136 * x142 * x788 / ((x149) * (x149));
  const amrex::Real x1468 = refC * sc[14];
  amrex::Real x1470 =
    x1468 * x729 * exp(-3341.3586609433401 * invT - 7.72 * tc[0] + x1135);
  x130 = 4.27e+46 * sc[20] * x1114 * x123 * x134 * x788 / ((x130) * (x130));
  const amrex::Real x1474 = refC * sc[20] * x1114;
  const amrex::Real x1477 = sc[20] * x788 *
                            exp(
                              g_RT[20] - g_RT[8] - g_RT_qss[6] -
                              9832.6523631579003 * invT - 23.88 * tc[0]);
  x97 = x107 * x1128 * x40 *
        exp(
          g_RT[13] + g_RT[1] - g_RT_qss[6] - 36029.025036953499 * invT -
          6.8 * tc[0]) /
        (kf_qss[6] * ((x97 + 1.0) * (x97 + 1.0)));
  x105 = 2.565e+21 * x1128 * x1131 * x40 * x98 / ((x105) * (x105));
  x107 = -x105 * (4.0 * x100 * x691 + 0.56 * x691 * x740) +
         5.13e+21 * x1128 * x1131 + 2.8e+18 * x1136 * x1468 -
         x130 * (0.56 * x753 + 4.0 * x754) + 8.54e+46 * x134 * x1474 -
         3.92e+36 * x1470 - 3.64658e+93 * x1477 * x737 -
         x149 * (4.0 * x144 * x691 + 0.56 * x691 * x723) - 1.315845e+43 * x97;
  x214 = x1199 * x1200 * x207 / ((x214) * (x214));
  const amrex::Real x1487 = sc[18] * x788 *
                            exp(
                              g_RT[18] - g_RT[1] - g_RT_qss[8] -
                              4730.2366585643604 * invT - 14.594 * tc[0]);
  const amrex::Real x1490 = refC * sc[18] * x1190;
  x187 = sc[18] * x1192 * x180 * x191 / ((x187) * (x187));
  amrex::Real x1493 =
    x1199 * x40 * exp(-11976.556646152299 * invT - 15.28 * tc[0]);
  amrex::Real x1494 = 7.6e+29 * x1199 * x218 * exp(x202) -
                      5.408e+55 * x1487 * x775 + 1.04e+28 * x1490 * x191 -
                      2.888e+59 * x1493 * x785 -
                      x187 * (4.0 * x691 * x768 + 0.56 * x767) -
                      x214 * (0.56 * x209 * x691 + 4.0 * x691 * x778);
  x1175 = x1175 / ((x63) * (x63));
  x1208 = x1208 / ((x228) * (x228));
  amrex::Real x1500 = sc[13] * x22 *
                      exp(-50019.736580989098 * invT - 1.28 * tc[0]) /
                      (kf_qss[15] * ((x28) * (x28)));
  x52 = sc[14] * x37 * x40 * x43 * x56 / ((x52) * (x52));
  amrex::Real x1505 =
    sc[14] * x814 * exp(-100502.432494519 * invT - 18.62 * tc[0]);
  amrex::Real x1506 =
    (1.4e+45 * sc[14] * x56 * exp(x34) + 4900000000.0 * x1173 -
     1.2005e+19 * x1500 - 9.8e+89 * x1505 -
     x52 * (4.0 * x46 * x691 + 0.56 * x691 * x806)) /
    x63;
  amrex::Real x1507 = -x1208 * x232 * x790 + x1506 * x172;
  amrex::Real x1508 = kf_qss[85] * x1176 * x8 / x169 + x1161 * x760 -
                      x1175 * x172 * x819 - x1176 * x171 * x760 -
                      x1209 * x231 * x760 + x1507 +
                      x232 * (sc[17] * x1203 + x1494) / x228 -
                      (kf_qss[84] * sc[13] * x1124 + x107) / x169;
  amrex::Real x1509 = x1032 * x1210;
  x1052 = x1052 * x1211;
  const amrex::Real x1513 = sc[16] * x788 *
                            exp(
                              -g_RT[10] + g_RT[16] - g_RT_qss[0] -
                              1948.4549299958701 * invT - 7.48 * tc[0]);
  x842 = 2.69e+16 * sc[16] * x1401 * x788 * x835 * x846 / ((x842) * (x842));
  amrex::Real x1516 =
    -(5.38e+16 * refC * sc[16] * x1401 * x846 - 1.44722e+33 * x1044 * x1513 -
      x842 * (0.56 * x1036 * x691 + 4.0 * x1037 * x691)) /
    x849;
  amrex::Real x1517 = x1059 * x427;
  x1416 = x1416 / ((x849) * (x849));
  amrex::Real x1519 =
    x1387 * (kf_qss[67] * sc[1] + 10.0e-13) / ((x583) * (x583));
  amrex::Real x1521 = x1329 * x559 * x585 / ((x583) * (x583));
  amrex::Real x1523 = x1329 * x585 * x957 / x583;
  amrex::Real x1528 = x1369 * x40 * exp(-5595.76932374848 * invT - 9.6 * tc[0]);
  x631 = x1369 * x1370 * x624 / ((x631) * (x631));
  amrex::Real x1531 = 4.4e+18 * x1369 * x635 * exp(x618) -
                      9.68e+36 * x1528 * x622 -
                      x631 * (4.0 * x626 * x691 + 0.56 * x691 * x997);
  amrex::Real x1533 = x1176 * x600 / ((x583) * (x583));
  amrex::Real x1534 = x427 * x588;
  amrex::Real x1535 = x1329 * x562 * x957 / x422;
  x1328 = x1328 / ((x518) * (x518));
  amrex::Real x1537 = x1284 * x556 / ((x518) * (x518));
  const amrex::Real x1539 = refC * sc[15];
  x483 = x1289 * x40 * x473 * x476 * x487 / ((x483) * (x483));
  amrex::Real x1547 =
    x1289 * x909 * exp(-7014.8403213177899 * invT - 15.24 * tc[0]);
  x504 = 1.99e+29 * sc[15] * x1314 * x497 * x508 * x788 / ((x504) * (x504));
  amrex::Real x1549 =
    2.4e+30 * x1289 * x487 * exp(x471) + 3.98e+29 * x1314 * x1539 * x508 -
    7.9202e+58 * x1539 * x914 *
      exp(-6728.0068218091001 * invT - 14.16 * tc[0] + x1313) -
    2.88e+60 * x1547 - x483 * (4.0 * x478 * x691 + 0.56 * x691 * x904) -
    x504 * (4.0 * x499 * x691 + 0.56 * x691 * x921);
  x1283 = x1283 / ((x553) * (x553));
  amrex::Real x1554 = sc[1] * sc[20] * exp(x524);
  amrex::Real x1557 =
    sc[1] * sc[20] * x937 * exp(-7045.0333212660798 * invT - 13.32 * tc[0]);
  x537 = sc[1] * sc[20] * x20 * x526 * x529 * x540 / ((x537) * (x537));
  amrex::Real x1559 = 1.252e+27 * x1554 * x540 - 7.83752e+53 * x1557 -
                      x537 * (0.56 * x532 + 4.0 * x946);
  amrex::Real x1561 = -x1283 * x557 * x951 + x1328 * x927 - x1537 * x927 +
                      x557 * (kf_qss[135] * sc[20] * x1277 + x1559) / x553 -
                      (kf_qss[116] * sc[14] * x1310 + x1549) / x518;
  amrex::Real x1563 = x1329 * x559 * x562 / ((x422) * (x422));
  const amrex::Real x1564 = refC * sc[12];
  x378 = 2.2e+36 * sc[18] * x1229 * x371 * x382 * x788 / ((x378) * (x378));
  x356 = 1350000000000.0 * sc[12] * x1252 * x348 * x788 / ((x356) * (x356));
  const amrex::Real x1568 = refC * sc[18] * x1229;
  const amrex::Real x1570 = sc[18] * x788 *
                            exp(
                              g_RT[18] - g_RT[8] - g_RT_qss[3] -
                              5132.8099912081398 * invT - 19.176 * tc[0]);
  amrex::Real x1572 = 2 * kf_qss[16] * x1246 * x1248 +
                      2700000000000.0 * x1252 * x1564 -
                      3.645e+24 * x1564 * x686 *
                        exp(-1434.1674975434501 * invT - 5.14 * tc[0] + x1251) +
                      4.4e+36 * x1568 * x382 - 9.68e+72 * x1570 * x703 -
                      x356 * (0.56 * x694 + 4.0 * x696) -
                      x378 * (0.56 * x691 * x707 + 4.0 * x691 * x711);
  amrex::Real x1573 = x1209 * x424 / ((x422) * (x422));
  amrex::Real x1574 = x1264 / ((x422) * (x422));
  amrex::Real x1575 = x1210 * x825;
  x718 = -x1208 * x425 * x790 - x1211 * x796 - x1508 * x428 + x1535 * x956 -
         x1561 * x929 + x1563 * x718 - x1573 * x718 + x1574 * x718 +
         x1575 * x823 - (kf_qss[23] * sc[10] * x1221 + x1572) / x422 +
         x425 * (sc[17] * x1203 + x1494) / x228;
  x796 = x1364 / ((x583) * (x583));
  x1386 = x1386 / ((x639) * (x639));
  amrex::Real x1582 = -x1002 * x1386 * x644 + x1506 * x601;
  x986 = -kf_qss[39] * sc[10] * x1352 / x583 + kf_qss[42] * x1519 -
         kf_qss[42] * x1521 + kf_qss[42] * x1533 - kf_qss[42] * x796 -
         x1175 * x601 * x819 - x1461 * x986 + x1523 * x956 + x1534 * x961 -
         x1561 * x981 + x1582 - x608 * x718 +
         x644 * (kf_qss[65] * sc[12] * x1383 + x1531) / x639;
  amrex::Real x1584 = x1022 * x1388 / ((x645) * (x645));
  amrex::Real x1586 = x1176 * x888;
  amrex::Real x1587 = x1210 * x856;
  amrex::Real x1588 = x427 * x566;
  amrex::Real x1589 = x1388 * x648 / ((x645) * (x645));
  x252 = refC * sc[17] * x1437 * x245 / ((x252) * (x252));
  amrex::Real x1593 =
    refC * sc[8] * x868 * exp(-1237.91299787961 * invT - 6.28 * tc[0] + x1446);
  amrex::Real x1595 = refC * sc[17] * x256 * exp(x1434 + x240);
  amrex::Real x1597 = refC * sc[17] * x879 *
                      exp(-7140.6444877689701 * invT - 10.22 * tc[0] + x1434);
  x273 = sc[8] * x1449 * x266 * x788 / ((x273) * (x273));
  amrex::Real x1599 =
    6400000000000000.0 * refC * sc[8] * x277 * exp(x1446 + x261) -
    2.048e+31 * x1593 + 5.38e+21 * x1595 - 1.44722e+43 * x1597 -
    x252 * (4.0 * x247 * x691 + 0.56 * x691 * x862) -
    x273 * (4.0 * x268 * x691 + 0.56 * x691 * x874);
  x1459 = x1459 / ((x315) * (x315));
  x884 = x1014 * x1589 - x1175 * x318 * x819 - x1211 * x890 - x1389 * x972 +
         x1459 * x884 - x1461 * x898 + x1506 * x318 - x1508 * x321 -
         x1586 * x884 + x1587 * x823 + x1588 * x961 - x568 * x718 -
         x649 * x986 - (2.0 * kf_qss[36] * sc[13] * x1456 + x1599) / x315;
  x890 = x320 / x672;
  x898 = x1026 * x320 / ((x672) * (x672));
  x972 = (x1014 * x1584 - x1027 * x884 - x1031 * x1508 + x1050 * x1052 +
          x1050 * x1416 - x1057 * x1461 - x1061 * x1389 - x1074 * x986 -
          x1075 * x890 + x1087 * x898 + x1509 * x823 + x1516 + x1517 * x961 -
          x718 * x855) /
         x852;
  x1026 = -sc[1] * x139 * x153 - 2.565e+21 * x110 - 4.27e+46 * x134 * x748 +
          x728 * (2.0 * x144 * x691 + 0.28 * x691 * x723) + 1.96e+36 * x732 +
          1.82329e+93 * x736 * x737 +
          x744 * (2.0 * x100 * x691 + 0.28 * x691 * x740) +
          6.579225e+42 * x747 + x757 * (0.28 * x753 + 2.0 * x754);
  x139 =
    -kf_qss[59] * x83 - kf_qss[84] - kf_qss[85] + x1026 - x139 * x153 * x40;
  x1050 = sc[1] * x686 * exp(-1434.1674975434501 * invT - 5.14 * tc[0]);
  x1057 = -kf_qss[16] - sc[1] * x345 * x359 + 1.8225e+24 * x1050 -
          2.2e+36 * x382 * x715 + x699 * (0.28 * x691 * x693 + 2.0 * x696) +
          4.84e+72 * x702 * x703 +
          x714 * (0.28 * x691 * x707 + 2.0 * x691 * x711);
  x345 = -kf_qss[18] * x392 - kf_qss[23] - kf_qss[29] * x401 -
         kf_qss[40] * x404 + x1057 - x345 * x359 * x40;
  x1061 = -5.2e+27 * x191 * x783 - 3.8e+29 * x220 +
          x771 * (0.28 * ((x182) * (x182)) * x691 / ((x184) * (x184) * (x184)) +
                  2.0 * x691 * x768) +
          2.704e+55 * x774 * x775 +
          x782 * (0.28 * x209 * x691 + 2.0 * x691 * x778) +
          1.444e+59 * x785 * x789;
  x1075 = -kf_qss[98] - kf_qss[99] + x1061 - 5.2e+27 * x176 * x191;
  amrex::Real x1631 = -kf_qss[98] * x230 / x422 +
                      x1075 * x792 / ((x228) * (x228)) - x345 * x762 +
                      x345 * x795;
  amrex::Real x1636 = -7.0e+44 * refCinv * sc[0] * x57 - 2450000000.0 * x30 +
                      x810 * (2.0 * x46 * x691 + 0.28 * x691 * x806) +
                      6.0025e+18 * x813 + 4.9e+89 * x814 * x816;
  amrex::Real x1637 = -kf_qss[79] + x1636;
  amrex::Real x1638 = x1 * x172 / ((x63) * (x63));
  amrex::Real x1639 = -kf_qss[85] * x172 / x63 +
                      x1075 * x798 / ((x228) * (x228)) +
                      x139 * x171 * x65 / ((x169) * (x169)) +
                      x139 * x230 * x231 / ((x169) * (x169)) + x1637 * x1638;
  amrex::Real x1640 = x139 * x323 * x428 / ((x169) * (x169)) - x1631 * x680 +
                      x1639 * x826 - x345 * x720;
  x439 = x439 / ((x169) * (x169));
  amrex::Real x1643 = x1075 * x894 / ((x228) * (x228)) - x139 * x439 +
                      x139 * x231 * x437 / ((x169) * (x169));
  amrex::Real x1647 =
    x1041 * (2.0 * x1037 * x691 +
             0.28 * x691 * ((x837) * (x837)) / ((x839) * (x839) * (x839))) -
    2.69e+16 * x1042 * x846 + 7.2361e+32 * x1044 * x1047;
  amrex::Real x1648 = -x1054 * x1647 + x1056 * x1647;
  amrex::Real x1649 = kf_qss[18] * x392 / x849 -
                      kf_qss[59] * x828 * x83 / x849 - x1031 * x1643 +
                      x1055 * x1639 + x1648;
  amrex::Real x1652 =
    sc[1] * x914 * exp(-6728.0068218091001 * invT - 14.16 * tc[0]);
  amrex::Real x1654 =
    -sc[1] * x494 * x508 + 3.9601e+58 * x1652 - 1.2e+30 * x489 +
    x908 * (2.0 * x478 * x691 + 0.28 * x691 * x904) + 1.44e+60 * x912 +
    x925 * (2.0 * x499 * x691 + 0.28 * x691 * x921);
  x494 = -kf_qss[116] -
         kf_qss[64] * exp(g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7]) + x1654 -
         x40 * x494 * x508;
  amrex::Real x1657 = -6.26e+26 * x540 * x545 + 3.91876e+53 * x943 +
                      x950 * (0.28 * x532 + 2.0 * x946);
  amrex::Real x1658 = -kf_qss[134] - kf_qss[135] + x1657;
  amrex::Real x1660 = -kf_qss[134] * x555 / x518 + x1658 * x954 + x494 * x936;
  amrex::Real x1661 = x1660 * x968 - x345 * x965 + x345 * x967 + x494 * x966;
  amrex::Real x1662 = -kf_qss[98] * x437 / x422 +
                      x1075 * x901 / ((x228) * (x228)) - x1631 * x828 +
                      x1639 * x932 - x1643 * x428 + x1660 * x960 + x345 * x900 +
                      x345 * x934 + x494 * x931;
  amrex::Real x1663 = kf_qss[38] / x849 - x1058 * x1647 + x1060 * x1662 -
                      x1649 * x899 - x1661 * x855;
  amrex::Real x1666 =
    -sc[10] * x242 * x256 - sc[1] * x263 * x277 +
    x866 * (2.0 * x247 * x691 + 0.28 * x691 * x862) + 1.024e+31 * x872 +
    x878 * (2.0 * x268 * x691 + 0.28 * x691 * x874) + 7.2361e+42 * x882;
  x263 = x1666 - x263 * x277 * x40 - x286;
  amrex::Real x1669 = -kf_qss[85] * x318 / x63 +
                      x1637 * x887 / ((x63) * (x63)) - x263 * x886 +
                      x263 * x889;
  amrex::Real x1670 = kf_qss[38] * x978 - kf_qss[38] * x980 +
                      kf_qss[40] * x404 / x583 + x1660 * x985 + x494 * x983;
  amrex::Real x1671 =
    kf_qss[38] * x975 - x1640 * x608 + x1662 * x977 - x1670 * x589;
  amrex::Real x1673 = x1001 * (2.0 * x626 * x691 + 0.28 * x691 * x997) +
                      4.84e+36 * x622 * x994 - 2.2e+18 * x637;
  amrex::Real x1674 = -kf_qss[65] - kf_qss[66] - kf_qss[67] + x1673;
  amrex::Real x1677 = -kf_qss[38] * x1008 - kf_qss[38] * x1010 -
                      kf_qss[38] * x989 - kf_qss[67] * x642 / x583 +
                      x1005 * x1674 + x1011 * x1662 +
                      x1012 * x1637 / ((x63) * (x63)) + x1013 * x1660 -
                      x1661 * x608 - x1670 * x899 + x494 * x990;
  amrex::Real x1678 = kf_qss[29] * x401 / x315 + x1639 * x897 - x1643 * x321 -
                      x1669 * x828 - x263 * x893;
  amrex::Real x1680 = x1637 * x971 / ((x63) * (x63)) - x1661 * x568 +
                      x1662 * x964 - x1678 * x899 + x263 * x892 - x263 * x970;
  amrex::Real x1681 = x1017 * x1677 - x1018 * x263 +
                      x139 * x858 / ((x169) * (x169)) + x1639 * x857 -
                      x1640 * x568 + x1662 * x988 - x1669 * x680 -
                      x1671 * x649 - x1678 * x589 - x1680 * x973;
  amrex::Real x1682 = x660 / ((x169) * (x169));
  amrex::Real x1683 = x657 / ((x63) * (x63));
  amrex::Real x1685 =
    x1028 * x139 / ((x169) * (x169)) - x139 * x1682 + x1637 * x1683 * x172;
  amrex::Real x1687 =
    -x1025 * x1631 - x1062 * x345 + x1063 * x1639 - x1685 * x428;
  amrex::Real x1688 = -kf_qss[38] * x1069 + kf_qss[38] * x668 - x1020 * x1670 +
                      x1070 * x1662 + x1637 * x1683 * x601 - x1687 * x608;
  amrex::Real x1689 = x1053 * x1647 - x1066 * x1647;
  x286 = -kf_qss[59] * x1025 * x83 / x849 - x1020 * x1649 - x1023 * x1663 -
         x1031 * x1685 + x1033 * x1639 + x1065 * x1662 + x1068 * x1677 -
         x1074 * x1688 - x1687 * x855 + x1689 + x286 / x849;
  amrex::Real x1692 = -x1020 * x1678 - x1023 * x1680 - x1025 * x1669 +
                      x1082 * x1639 + x1083 * x263 + x1085 * x1677 +
                      x1086 * x1662 + x1637 * x1683 * x318 - x1685 * x321 -
                      x1687 * x568 - x1688 * x649;
  const amrex::Real x1694 =
    x854 * (-kf_qss[59] * x680 * x83 / x849 - x1027 * x1681 - x1074 * x1671 -
            x1077 * x286 + x1078 * x1677 + x1079 * x1639 + x1080 * x1647 +
            x1081 * x1662 + x1090 * x1692 + x1091 * x139 / ((x169) * (x169)) -
            x1640 * x855 - x1649 * x589 - x1663 * x973);
  x182 = 5.2e+27 * refC * sc[18] * x1190 * x191 +
         3.8e+29 * x1199 * x218 * exp(x202) - 2.704e+55 * x1487 * x775 -
         1.444e+59 * x1493 * x785 -
         x187 * (0.28 * ((x182) * (x182)) * x691 / ((x184) * (x184) * (x184)) +
                 2.0 * x691 * x768) -
         x214 * (0.28 * x209 * x691 + 2.0 * x691 * x778);
  x184 = -x105 * (2.0 * x100 * x691 + 0.28 * x691 * x740) +
         2.565e+21 * x1128 * x1131 + 1.4e+18 * x1136 * x1468 -
         x130 * (0.28 * x753 + 2.0 * x754) + 4.27e+46 * x134 * x1474 -
         1.96e+36 * x1470 - 1.82329e+93 * x1477 * x737 -
         x149 * (2.0 * x144 * x691 + 0.28 * x691 * x723) - 6.579225e+42 * x97;
  amrex::Real x1705 = x1161 / ((x169) * (x169));
  amrex::Real x1708 =
    sc[14] * x37 * x56 -
    4.9e+89 * sc[14] * x814 * exp(-100502.432494519 * invT - 18.62 * tc[0]) +
    2450000000.0 * x1173 - 6.0025e+18 * x1500 -
    x52 * (2.0 * x46 * x691 + 0.28 * x691 * x806);
  amrex::Real x1709 = (kf_qss[130] * sc[19] + kf_qss[79] * sc[13] * x1167 +
                       kf_qss[81] * sc[17] * x1164 + x1708) /
                      x63;
  amrex::Real x1710 =
    -x1075 * x1208 * x232 - x1175 * x1637 * x172 -
    x1176 * x139 * x171 / ((x169) * (x169)) -
    x1209 * x139 * x231 / ((x169) * (x169)) + x139 * x1705 + x1709 * x172 +
    x232 * (sc[17] * x1200 + x182) / x228 -
    (kf_qss[104] * sc[14] + kf_qss[86] * sc[17] * x1150 +
     2.565e+21 * refCinv * sc[13] * x1131 * x40 + sc[19] * x1104 + x184) /
      x169;
  x837 = 2.69e+16 * refC * sc[16] * x1401 * x846 - 7.2361e+32 * x1044 * x1513 -
         x842 * (2.0 * x1037 * x691 +
                 0.28 * x691 * ((x837) * (x837)) / ((x839) * (x839) * (x839)));
  x839 = 2.2e+18 * x1369 * x635 * exp(x618) - 4.84e+36 * x1528 * x622 -
         x631 * (2.0 * x626 * x691 + 0.28 * x691 * x997);
  x914 = x1539 * x914 * exp(-6728.0068218091001 * invT - 14.16 * tc[0] + x1313);
  amrex::Real x1720 =
    x1289 * x473 * x487 + 1.99e+29 * x1314 * x1539 * x508 - 1.44e+60 * x1547 -
    x483 * (2.0 * x478 * x691 + 0.28 * x691 * x904) -
    x504 * (2.0 * x499 * x691 + 0.28 * x691 * x921) - 3.9601e+58 * x914;
  amrex::Real x1724 = sc[1] * sc[20] * x526 * x540 - 3.91876e+53 * x1557 -
                      x537 * (0.28 * x532 + 2.0 * x946);
  amrex::Real x1726 = kf_qss[134] * x1284 / x518 - x1283 * x1658 * x557 +
                      x1328 * x494 - x1537 * x494 +
                      x557 * (sc[20] * x20 * x526 * x540 + x1724) / x553 -
                      (kf_qss[118] * sc[18] * x1299 + kf_qss[125] * sc[15] +
                       sc[14] * x40 * x473 * x487 + x1720) /
                        x518;
  x686 = x1564 * x686 * exp(-1434.1674975434501 * invT - 5.14 * tc[0] + x1251);
  amrex::Real x1730 =
    kf_qss[16] * x1246 * x1248 + 1350000000000.0 * x1252 * x1564 +
    2.2e+36 * x1568 * x382 - 4.84e+72 * x1570 * x703 -
    x356 * (0.28 * x691 * x693 + 2.0 * x696) -
    x378 * (0.28 * x691 * x707 + 2.0 * x691 * x711) - 1.8225e+24 * x686;
  x345 = kf_qss[98] * x1209 / x422 - x1075 * x1208 * x425 - x1211 * x1631 +
         x1535 * x1660 + x1563 * x345 - x1573 * x345 + x1574 * x345 +
         x1575 * x1639 - x1710 * x428 - x1726 * x929 -
         (kf_qss[16] * refCinv * sc[10] * x1246 * x40 +
          kf_qss[25] * sc[11] * x1234 + kf_qss[49] * sc[12] + x1730) /
           x422 +
         x425 * (sc[17] * x1200 + x182) / x228;
  x1631 = kf_qss[38] * x1519 - kf_qss[38] * x1521 + kf_qss[38] * x1533 -
          kf_qss[38] * x796 + kf_qss[67] * x1387 / x583 - x1175 * x1637 * x601 -
          x1386 * x1674 * x644 - x1461 * x1670 + x1523 * x1660 + x1534 * x1662 +
          x1709 * x601 - x1726 * x981 - x345 * x608 +
          x644 * (sc[12] * x1370 + x839) / x639 -
          (kf_qss[113] * sc[19] * x1349 + kf_qss[41] * sc[12] * x1342 +
           kf_qss[42] * sc[8] * x1345 + kf_qss[43] * x1177 * x1355 +
           kf_qss[74] * sc[16] + sc[14] * x1338) /
            x583;
  x1670 = refC * sc[8] * x1449 - 1.024e+31 * x1593 + 2.69e+21 * x1595 -
          7.2361e+42 * x1597 - x252 * (2.0 * x247 * x691 + 0.28 * x691 * x862) -
          x273 * (2.0 * x268 * x691 + 0.28 * x691 * x874);
  x263 = -x1175 * x1637 * x318 - x1211 * x1669 - x1389 * x1680 + x1459 * x263 -
         x1461 * x1678 - x1586 * x263 + x1587 * x1639 + x1588 * x1662 +
         x1589 * x1677 - x1631 * x649 + x1709 * x318 - x1710 * x321 -
         x345 * x568 -
         (kf_qss[32] * sc[12] * x1425 + kf_qss[35] * sc[13] * x1412 +
          kf_qss[62] * sc[14] * x1439 + 2.0 * sc[11] * ((sc[1])) * x1444 +
          sc[19] * x1419 + sc[8] * x1430 + x1670) /
           x315;
  x1669 = x1052 * x1647 + x1416 * x1647;
  x1649 =
    (-kf_qss[59] * x1211 * x83 / x849 - x1027 * x263 - x1031 * x1710 -
     x1074 * x1631 - x1389 * x1663 - x1461 * x1649 + x1509 * x1639 +
     x1517 * x1662 + x1584 * x1677 + x1669 + x1692 * x898 - x286 * x890 -
     x345 * x855 -
     (kf_qss[17] * sc[10] * x1396 + kf_qss[35] * sc[13] * x1412 +
      kf_qss[71] * sc[14] * x1393 + sc[12] * x1407 + sc[17] * x1410 + x837) /
       x849) /
    x852;
  x1663 = -kf_qss[39] - kf_qss[40];
  x1678 = -kf_qss[21] * x385 - kf_qss[24] - kf_qss[25] + x1057;
  x1680 = -kf_qss[86] - kf_qss[87] + x1026;
  x286 = x230 * x231 / ((x169) * (x169));
  amrex::Real x1744 = -kf_qss[80] + x1636;
  amrex::Real x1745 = -kf_qss[100] + x1061 - x225;
  amrex::Real x1748 = x1638 * x1744 + x1680 * x286 +
                      x1680 * x171 * x65 / ((x169) * (x169)) +
                      x1745 * x798 / ((x228) * (x228)) - x225 * x230 / x169;
  amrex::Real x1750 =
    -x1678 * x762 + x1678 * x795 + x1745 * x792 / ((x228) * (x228));
  amrex::Real x1751 = -x1678 * x720 + x1680 * x323 * x428 / ((x169) * (x169)) +
                      x1748 * x826 - x1750 * x680;
  amrex::Real x1753 = x231 * x437 / ((x169) * (x169));
  amrex::Real x1756 = x1680 * x1753 - x1680 * x439 +
                      x1745 * x894 / ((x228) * (x228)) - x225 * x437 / x169;
  amrex::Real x1757 = -kf_qss[117] - kf_qss[118] + x1654;
  amrex::Real x1759 =
    -kf_qss[136] * x555 / x518 + x1757 * x936 + x954 * (-kf_qss[136] + x1657);
  amrex::Real x1760 = x1678 * x900 + x1678 * x934 +
                      x1745 * x901 / ((x228) * (x228)) + x1748 * x932 -
                      x1750 * x828 - x1756 * x428 + x1757 * x931 + x1759 * x960;
  amrex::Real x1761 =
    -x1663 * x978 + x1663 * x980 + x1757 * x983 + x1759 * x985;
  amrex::Real x1762 =
    -x1663 * x975 - x1751 * x608 + x1760 * x977 - x1761 * x589;
  amrex::Real x1764 =
    x1028 * x1680 / ((x169) * (x169)) - x1680 * x1682 + x1683 * x172 * x1744;
  amrex::Real x1765 = -kf_qss[29] + x1666;
  amrex::Real x1766 = -kf_qss[57] * exp(-x611) - kf_qss[68] + x1673;
  amrex::Real x1768 = kf_qss[40] / x422 - x1678 * x965 + x1678 * x967 +
                      x1757 * x966 + x1759 * x968;
  amrex::Real x1769 = x1005 * x1766 + x1008 * x1663 + x1010 * x1663 +
                      x1012 * x1744 / ((x63) * (x63)) + x1013 * x1759 +
                      x1663 * x989 + x1757 * x990 + x1760 * x588 * x607 -
                      x1761 * x899 - x1768 * x608;
  amrex::Real x1772 = -kf_qss[80] * x65 / x315 +
                      x1744 * x887 / ((x63) * (x63)) - x1765 * x886 +
                      x1765 * x889;
  amrex::Real x1773 = x1748 * x897 - x1756 * x321 - x1765 * x893 - x1772 * x828;
  amrex::Real x1774 = -kf_qss[80] * x599 / x315 +
                      x1744 * x971 / ((x63) * (x63)) + x1760 * x566 * x607 +
                      x1765 * x892 - x1765 * x970 - x1768 * x568 - x1773 * x899;
  amrex::Real x1775 = kf_qss[29] / x422 - x1025 * x1750 - x1062 * x1678 +
                      x1063 * x1748 - x1764 * x428;
  amrex::Real x1776 = -x1020 * x1761 + x1069 * x1663 + x1070 * x1760 -
                      x1663 * x668 + x1683 * x1744 * x601 - x1775 * x608;
  amrex::Real x1778 =
    -kf_qss[80] * x658 / x315 - x1020 * x1773 - x1023 * x1774 - x1025 * x1772 +
    x1082 * x1748 + x1083 * x1765 + x1085 * x1769 + x1086 * x1760 +
    x1683 * x1744 * x318 - x1764 * x321 - x1775 * x568 - x1776 * x649;
  amrex::Real x1779 = -kf_qss[17] + x1647;
  amrex::Real x1780 = x1017 * x1769 - x1018 * x1765 +
                      x1680 * x858 / ((x169) * (x169)) + x1748 * x857 -
                      x1751 * x568 + x1760 * x988 - x1762 * x649 -
                      x1772 * x680 - x1773 * x589 - x1774 * x973;
  amrex::Real x1781 = kf_qss[21] * x385 / x849 - x1031 * x1756 - x1054 * x1779 +
                      x1055 * x1748 + x1056 * x1779;
  amrex::Real x1782 =
    -x1058 * x1779 + x1059 * x1760 * x607 - x1768 * x855 - x1781 * x899;
  amrex::Real x1784 = -x1020 * x1781 - x1023 * x1782 - x1031 * x1764 +
                      x1033 * x1748 + x1053 * x1779 + x1059 * x1760 * x666 -
                      x1066 * x1779 + x1068 * x1769 - x1074 * x1776 -
                      x1775 * x855;
  const amrex::Real x1785 =
    x854 * (-x1027 * x1780 + x1059 * x1760 * x435 - x1074 * x1762 -
            x1077 * x1784 + x1078 * x1769 + x1079 * x1748 + x1080 * x1779 +
            x1090 * x1778 + x1091 * x1680 / ((x169) * (x169)) - x1751 * x855 -
            x1781 * x589 - x1782 * x973);
  amrex::Real x1789 = x1724 * x557 / x553;
  amrex::Real x1790 = kf_qss[136] * x1284 / x518 -
                      x1283 * x557 * (-kf_qss[136] + x1657) + x1328 * x1757 -
                      x1537 * x1757 + x1789 -
                      (kf_qss[126] * sc[15] + x1720) / x518;
  amrex::Real x1793 = x1209 * x231 / ((x169) * (x169));
  amrex::Real x1797 = x182 * x232 / x228;
  x225 = -x1175 * x172 * x1744 - x1176 * x1680 * x171 / ((x169) * (x169)) -
         x1208 * x1745 * x232 + x1209 * x225 / x169 + x1680 * x1705 -
         x1680 * x1793 + x1708 * x172 / x63 + x1797 -
         (kf_qss[105] * sc[14] + x184) / x169;
  x1678 = -x1208 * x1745 * x425 - x1211 * x1750 + x1535 * x1759 +
          x1563 * x1678 - x1573 * x1678 + x1574 * x1678 + x1575 * x1748 -
          x1790 * x929 + x182 * x425 / x228 - x225 * x428 -
          (kf_qss[106] * sc[14] + kf_qss[50] * sc[12] + x1730) / x422;
  x1750 = x1708 * x601 / x63;
  x1663 = -x1175 * x1744 * x601 - x1386 * x1766 * x644 - x1461 * x1761 -
          x1519 * x1663 + x1521 * x1663 + x1523 * x1759 - x1533 * x1663 +
          x1534 * x1760 + x1663 * x796 - x1678 * x608 + x1750 - x1790 * x981 +
          x644 * x839 / x639;
  x1761 = -x837 / x849;
  amrex::Real x1808 = x1708 * x318 / x63;
  x1765 =
    kf_qss[80] * x1176 / x315 - x1175 * x1744 * x318 - x1211 * x1772 -
    x1389 * x1774 + x1459 * x1765 - x1461 * x1773 - x1586 * x1765 +
    x1587 * x1748 + x1588 * x1760 + x1589 * x1769 - x1663 * x649 -
    x1678 * x568 + x1808 - x225 * x321 -
    (kf_qss[107] * sc[14] + kf_qss[77] * sc[13] + kf_qss[83] * sc[17] + x1670) /
      x315;
  x1772 = (-x1027 * x1765 - x1031 * x225 + x1052 * x1779 - x1074 * x1663 -
           x1389 * x1782 + x1416 * x1779 - x1461 * x1781 + x1509 * x1748 +
           x1517 * x1760 + x1584 * x1769 - x1678 * x855 + x1761 + x1778 * x898 -
           x1784 * x890) /
          x852;
  x1773 = -kf_qss[89] - kf_qss[90] - kf_qss[91] + x1026;
  x1774 = -kf_qss[82] + x1636;
  x1779 =
    x1028 * x1773 / ((x169) * (x169)) - x1682 * x1773 + x1683 * x172 * x1774;
  x1781 = -kf_qss[102] - kf_qss[103] + x1061;
  x1782 = x171 * x65 / ((x169) * (x169));
  x1784 = -kf_qss[90] * x232 / x228 + x1 * x172 * x1774 / ((x63) * (x63)) +
          x1773 * x1782 + x1773 * x286 + x1781 * x798 / ((x228) * (x228));
  amrex::Real x1821 =
    x1753 * x1773 - x1773 * x439 + x1781 * x894 / ((x228) * (x228));
  amrex::Real x1822 = -kf_qss[21] + x1647;
  amrex::Real x1823 =
    -x1031 * x1821 - x1054 * x1822 + x1055 * x1784 + x1056 * x1822;
  amrex::Real x1824 = -kf_qss[119] + x1654;
  amrex::Real x1825 = -kf_qss[27] + x1057;
  amrex::Real x1827 = -kf_qss[90] * x425 / x228 + kf_qss[91] / x422 +
                      x1781 * x792 / ((x228) * (x228)) - x1825 * x762 +
                      x1825 * x795;
  amrex::Real x1829 = x1824 * x936 + x954 * (-kf_qss[138] + x1657);
  amrex::Real x1830 = x1781 * x901 / ((x228) * (x228)) + x1784 * x932 -
                      x1821 * x428 + x1824 * x931 + x1825 * x900 +
                      x1825 * x934 - x1827 * x828 + x1829 * x960;
  amrex::Real x1831 = kf_qss[30] / x422 - x1025 * x1827 - x1062 * x1825 +
                      x1063 * x1784 - x1779 * x428;
  amrex::Real x1832 = -kf_qss[43] - kf_qss[44];
  amrex::Real x1833 = x1824 * x983 + x1829 * x985 - x1832 * x978 + x1832 * x980;
  amrex::Real x1834 = -x1020 * x1833 + x1069 * x1832 + x1070 * x1830 +
                      x1683 * x1774 * x601 - x1831 * x608 - x1832 * x668;
  amrex::Real x1835 = x1824 * x966 - x1825 * x965 + x1825 * x967 + x1829 * x968;
  amrex::Real x1836 =
    -x1058 * x1822 + x1060 * x1830 - x1823 * x899 - x1835 * x855;
  amrex::Real x1838 = x1005 * (-kf_qss[70] + x1673) + x1008 * x1832 +
                      x1010 * x1832 + x1011 * x1830 +
                      x1012 * x1774 / ((x63) * (x63)) + x1013 * x1829 +
                      x1824 * x990 + x1832 * x989 - x1833 * x899 - x1835 * x608;
  amrex::Real x1839 = -x1020 * x1823 - x1023 * x1836 - x1031 * x1779 +
                      x1033 * x1784 + x1053 * x1822 + x1065 * x1830 -
                      x1066 * x1822 + x1068 * x1838 - x1074 * x1834 -
                      x1831 * x855;
  amrex::Real x1840 = -kf_qss[30] - kf_qss[31] + x1666;
  amrex::Real x1841 = -kf_qss[82] * x65 / x315 +
                      x1774 * x887 / ((x63) * (x63)) - x1840 * x886 +
                      x1840 * x889;
  amrex::Real x1842 = x323 * x428 / ((x169) * (x169));
  amrex::Real x1843 = kf_qss[21] / x422 + x1773 * x1842 + x1784 * x826 -
                      x1825 * x720 - x1827 * x680;
  amrex::Real x1845 = x1784 * x897 - x1821 * x321 - x1840 * x893 - x1841 * x828;
  amrex::Real x1846 = -kf_qss[82] * x599 / x315 +
                      x1774 * x971 / ((x63) * (x63)) + x1830 * x964 -
                      x1835 * x568 + x1840 * x892 - x1840 * x970 - x1845 * x899;
  amrex::Real x1848 =
    x1830 * x435 * x588 - x1832 * x975 - x1833 * x589 - x1843 * x608;
  amrex::Real x1849 = x1017 * x1838 - x1018 * x1840 + x1784 * x857 +
                      x1830 * x435 * x566 - x1841 * x680 - x1843 * x568 -
                      x1845 * x589 - x1846 * x973 - x1848 * x649 +
                      x1773 * x858 / ((x169) * (x169));
  amrex::Real x1850 =
    -kf_qss[82] * x658 / x315 - x1020 * x1845 - x1023 * x1846 - x1025 * x1841 +
    x1082 * x1784 + x1083 * x1840 + x1085 * x1838 + x1086 * x1830 +
    x1683 * x1774 * x318 - x1779 * x321 - x1831 * x568 - x1834 * x649;
  const amrex::Real x1852 =
    x854 * (-x1027 * x1849 + x1059 * x1830 * x435 - x1074 * x1848 -
            x1077 * x1839 + x1078 * x1838 + x1079 * x1784 + x1080 * x1822 +
            x1090 * x1850 + x1091 * x1773 / ((x169) * (x169)) - x1823 * x589 -
            x1836 * x973 - x1843 * x855);
  amrex::Real x1855 = x1176 * x171 / ((x169) * (x169));
  amrex::Real x1856 = -x1175 * x172 * x1774 - x1208 * x1781 * x232 +
                      x1705 * x1773 + x1708 * x172 / x63 - x1773 * x1793 -
                      x1773 * x1855 + x1797 -
                      (kf_qss[109] * sc[14] + x184) / x169;
  amrex::Real x1860 = -x1283 * x557 * (-kf_qss[138] + x1657) + x1328 * x1824 -
                      x1537 * x1824 + x1789 -
                      (kf_qss[120] * sc[15] * x1321 + x1720) / x518;
  x1825 = -x1208 * x1781 * x425 - x1211 * x1827 + x1535 * x1829 +
          x1563 * x1825 - x1573 * x1825 + x1574 * x1825 + x1575 * x1784 +
          x182 * x425 / x228 - x1856 * x428 - x1860 * x929 -
          (kf_qss[52] * sc[12] + x1730) / x422;
  x1827 = -x1175 * x1774 * x601 - x1386 * x644 * (-kf_qss[70] + x1673) -
          x1461 * x1833 - x1519 * x1832 + x1521 * x1832 + x1523 * x1829 -
          x1533 * x1832 + x1534 * x1830 + x1750 - x1825 * x608 + x1832 * x796 -
          x1860 * x981 + x644 * (kf_qss[57] * sc[8] + x839) / x639;
  x1832 = kf_qss[82] * x1176 / x315 - x1175 * x1774 * x318 - x1211 * x1841 -
          x1389 * x1846 + x1459 * x1840 - x1461 * x1845 - x1586 * x1840 +
          x1587 * x1784 + x1588 * x1830 + x1589 * x1838 - x1670 / x315 + x1808 -
          x1825 * x568 - x1827 * x649 - x1856 * x321;
  x1822 = (-x1027 * x1832 - x1031 * x1856 + x1052 * x1822 - x1074 * x1827 -
           x1389 * x1836 + x1416 * x1822 - x1461 * x1823 + x1509 * x1784 +
           x1517 * x1830 + x1584 * x1838 + x1761 - x1825 * x855 - x1839 * x890 +
           x1850 * x898) /
          x852;
  x1823 = -kf_qss[26] - kf_qss[50] * exp(-x166 - x388) + x1057 - x411;
  x1833 = refCinv * sc[12];
  x1836 = -kf_qss[105] * exp(-x166 - x76) - kf_qss[131] * x1833 * x72 -
          kf_qss[88] + x1026;
  x1839 = -kf_qss[101] - kf_qss[92] * x196 + x1061;
  x1840 = -kf_qss[81] + x1636;
  x1841 = -kf_qss[92] * x196 * x230 / x169 + x1638 * x1840 + x1782 * x1836 +
          x1836 * x286 + x1839 * x798 / ((x228) * (x228));
  x1845 = -x1823 * x762 + x1823 * x795 + x1839 * x792 / ((x228) * (x228));
  x1846 = kf_qss[18] / x422 - x1823 * x720 + x1836 * x1842 + x1841 * x826 -
          x1845 * x680;
  amrex::Real x1875 = -kf_qss[18] + x1647;
  amrex::Real x1876 = -kf_qss[92] * x196 * x437 / x169 + x1753 * x1836 -
                      x1836 * x439 + x1839 * x894 / ((x228) * (x228));
  amrex::Real x1877 =
    -x1031 * x1876 - x1054 * x1875 + x1055 * x1841 + x1056 * x1875;
  amrex::Real x1879 =
    x1028 * x1836 / ((x169) * (x169)) - x1682 * x1836 + x1683 * x172 * x1840;
  amrex::Real x1881 =
    -kf_qss[126] * exp(-x166 - x449) - kf_qss[139] * x1833 * x452 + x1654;
  amrex::Real x1885 = -kf_qss[139] * x1833 * x452 * x557 / x553 + x1881 * x936 +
                      x954 * (-kf_qss[137] + x1657);
  amrex::Real x1886 = -x1823 * x965 + x1823 * x967 +
                      x1881 * x602 * x929 / ((x518) * (x518)) + x1885 * x968;
  amrex::Real x1887 = x1823 * x900 + x1823 * x934 +
                      x1839 * x901 / ((x228) * (x228)) + x1841 * x932 -
                      x1845 * x828 - x1876 * x428 + x1881 * x931 + x1885 * x960;
  amrex::Real x1888 =
    -x1058 * x1875 + x1060 * x1887 - x1877 * x899 - x1886 * x855;
  amrex::Real x1889 =
    -x1025 * x1845 - x1062 * x1823 + x1063 * x1841 - x1879 * x428;
  amrex::Real x1891 = -kf_qss[58] * x614 - kf_qss[69] + x1673;
  amrex::Real x1892 =
    kf_qss[41] * x978 - kf_qss[41] * x980 + x1881 * x983 + x1885 * x985;
  amrex::Real x1893 = -kf_qss[41] * x1008 - kf_qss[41] * x1010 -
                      kf_qss[41] * x989 + x1005 * x1891 + x1011 * x1887 +
                      x1012 * x1840 / ((x63) * (x63)) + x1013 * x1885 +
                      x1881 * x602 * x981 / ((x518) * (x518)) - x1886 * x608 -
                      x1892 * x899;
  amrex::Real x1894 = -kf_qss[41] * x1069 + kf_qss[41] * x668 - x1020 * x1892 +
                      x1683 * x1840 * x601 + x1887 * x588 * x666 - x1889 * x608;
  x1059 = kf_qss[33] / x849 - x1020 * x1877 - x1023 * x1888 - x1031 * x1879 +
          x1033 * x1841 + x1053 * x1875 + x1059 * x1887 * x666 - x1066 * x1875 +
          x1068 * x1893 - x1074 * x1894 - x1889 * x855;
  amrex::Real x1896 =
    kf_qss[41] * x975 - x1846 * x608 + x1887 * x977 - x1892 * x589;
  amrex::Real x1897 = -kf_qss[32] - kf_qss[33] + x1666;
  amrex::Real x1898 =
    x1840 * x887 / ((x63) * (x63)) - x1897 * x886 + x1897 * x889;
  x411 =
    x1841 * x897 - x1876 * x321 - x1897 * x893 - x1898 * x828 + x411 / x315;
  amrex::Real x1900 = x1840 * x971 / ((x63) * (x63)) - x1886 * x568 +
                      x1887 * x964 + x1897 * x892 - x1897 * x970 - x411 * x899;
  amrex::Real x1901 = x1017 * x1893 - x1018 * x1897 + x1841 * x857 -
                      x1846 * x568 + x1887 * x988 - x1896 * x649 -
                      x1898 * x680 - x1900 * x973 - x411 * x589 +
                      x1836 * x858 / ((x169) * (x169));
  x566 = -x1020 * x411 - x1023 * x1900 - x1025 * x1898 + x1082 * x1841 +
         x1083 * x1897 + x1085 * x1893 + x1683 * x1840 * x318 - x1879 * x321 +
         x1887 * x566 * x666 - x1889 * x568 - x1894 * x649;
  const amrex::Real x1903 =
    x854 * (-x1027 * x1901 - x1059 * x1077 - x1074 * x1896 + x1078 * x1893 +
            x1079 * x1841 + x1080 * x1875 + x1081 * x1887 + x1090 * x566 +
            x1091 * x1836 / ((x169) * (x169)) - x1846 * x855 - x1877 * x589 -
            x1888 * x973);
  amrex::Real x1905 =
    (kf_qss[103] * sc[10] * x1178 * x1833 + sc[17] * x1206 + x182) / x228;
  amrex::Real x1908 = kf_qss[92] * x1209 * x196 / x169 - x1175 * x172 * x1840 -
                      x1176 * x171 * x1836 / ((x169) * (x169)) -
                      x1208 * x1839 * x232 + x1705 * x1836 +
                      x1708 * x172 / x63 - x1793 * x1836 + x1905 * x232 -
                      (kf_qss[108] * sc[14] + x184) / x169;
  amrex::Real x1911 =
    -x1283 * x557 * (-kf_qss[137] + x1657) + x1328 * x1881 - x1537 * x1881 +
    x1789 -
    (kf_qss[122] * sc[8] * x1325 * x1833 + kf_qss[127] * sc[15] + x1720) / x518;
  x1823 = -x1208 * x1839 * x425 - x1211 * x1845 + x1535 * x1885 +
          x1563 * x1823 - x1573 * x1823 + x1574 * x1823 + x1575 * x1841 +
          x1905 * x425 - x1908 * x428 - x1911 * x559 * x562 / x422 -
          (kf_qss[24] * sc[10] * x1217 + kf_qss[51] * sc[12] + x1730) / x422;
  x1845 = kf_qss[41] * x1519 - kf_qss[41] * x1521 + kf_qss[41] * x1533 -
          kf_qss[41] * x796 - x1175 * x1840 * x601 - x1386 * x1891 * x644 -
          x1461 * x1892 + x1523 * x1885 + x1534 * x1887 + x1750 - x1823 * x608 -
          x1911 * x559 * x585 / x583 +
          x644 *
            (kf_qss[66] * sc[8] * x1372 + kf_qss[68] * sc[12] * x1379 + x839) /
            x639 -
          (kf_qss[43] * x1248 * x1355 + kf_qss[56] * sc[8]) / x583;
  x1892 = -x1175 * x1840 * x318 - x1211 * x1898 - x1389 * x1900 +
          x1459 * x1897 - x1461 * x411 - x1586 * x1897 + x1587 * x1841 +
          x1588 * x1887 + x1589 * x1893 + x1808 - x1823 * x568 - x1845 * x649 -
          x1908 * x321 -
          (kf_qss[34] * sc[12] * x1422 + kf_qss[55] * sc[8] + x1670) / x315;
  x1875 = (-x1027 * x1892 - x1031 * x1908 + x1052 * x1875 - x1059 * x890 -
           x1074 * x1845 - x1389 * x1888 + x1416 * x1875 - x1461 * x1877 +
           x1509 * x1841 + x1517 * x1887 + x1584 * x1893 + x1761 -
           x1823 * x855 + x566 * x898) /
          x852;
  x1877 = -kf_qss[108] * exp(-x162 - x76) - 8.4e+18 * sc[1] * x153 * exp(x137) -
          1.539e+22 * x110 - 2.562e+47 * x134 * x748 +
          x728 * (12.0 * x144 * x691 + 1.68 * x691 * x723) + 1.176e+37 * x732 +
          1.093974e+94 * x736 * x737 +
          x744 * (12.0 * x100 * x691 + 1.68 * x691 * x740) +
          3.947535e+43 * x747 + x757 * (1.68 * x753 + 12.0 * x754);
  x1888 = x1877 / ((x169) * (x169));
  x1059 = -6.0 * kf_qss[16] - kf_qss[51] * exp(-x162 - x388) -
          8100000000000.0 * sc[1] * x359 * exp(x343) + 1.0935e+25 * x1050 -
          1.32e+37 * x382 * x715 + x699 * (1.68 * x694 + 12.0 * x696) +
          2.904e+73 * x702 * x703 +
          x714 * (1.68 * x691 * x707 + 12.0 * x691 * x711);
  x1897 = -3.12e+28 * x191 * x783 - 2.28e+30 * x220 +
          x771 * (12.0 * x691 * x768 + 1.68 * x767) + 1.6224e+56 * x774 * x775 +
          x782 * (1.68 * x209 * x691 + 12.0 * x691 * x778) +
          8.664e+59 * x785 * x789;
  x1898 = -x1059 * x762 + x1059 * x795 + x1897 * x792 / ((x228) * (x228));
  x411 = -4.2e+45 * refCinv * sc[0] * x57 - 14700000000.0 * x30 +
         x810 * (12.0 * x46 * x691 + 1.68 * x691 * x806) + 3.6015e+19 * x813 +
         2.94e+90 * x814 * x816;
  x1900 = x1638 * x411 + x171 * x1888 * x65 + x1888 * x230 * x231 +
          x1897 * x798 / ((x228) * (x228));
  amrex::Real x1943 =
    -x1059 * x720 + x1888 * x323 * x428 - x1898 * x680 + x1900 * x826;
  amrex::Real x1944 = x1028 * x1888 + x1683 * x172 * x411 - x1888 * x660;
  amrex::Real x1946 =
    -kf_qss[20] + x1041 * (1.68 * x1036 * x691 + 12.0 * x1037 * x691) -
    1.614e+17 * x1042 * x846 + 4.34166e+33 * x1044 * x1047 - x652;
  amrex::Real x1951 = -kf_qss[127] * exp(-x162 - x449) +
                      8.64e+60 * refC * x909 *
                        exp(-7014.8403213177899 * invT - 15.24 * tc[0] + x470) -
                      1.194e+30 * sc[1] * x508 * exp(x492) +
                      2.37606e+59 * x1652 - 7.2e+30 * x489 +
                      x908 * (12.0 * x478 * x691 + 1.68 * x691 * x904) +
                      x925 * (12.0 * x499 * x691 + 1.68 * x691 * x921);
  amrex::Real x1953 = -3.756e+27 * x540 * x545 + 2.351256e+54 * x943 +
                      x950 * (1.68 * x532 + 12.0 * x946);
  amrex::Real x1954 = x1951 * x936 + x1953 * x954;
  amrex::Real x1955 =
    -x1059 * x965 + x1059 * x967 + x1951 * x966 + x1954 * x968;
  x1877 =
    -x1877 * x439 + x1888 * x231 * x437 + x1897 * x894 / ((x228) * (x228));
  amrex::Real x1957 = x1059 * x900 + x1059 * x934 - x1877 * x428 +
                      x1897 * x901 / ((x228) * (x228)) - x1898 * x828 +
                      x1900 * x932 + x1951 * x931 + x1954 * x960;
  amrex::Real x1958 =
    -x1031 * x1877 - x1054 * x1946 + x1055 * x1900 + x1056 * x1946;
  amrex::Real x1959 =
    -x1058 * x1946 + x1060 * x1957 - x1955 * x855 - x1958 * x899;
  amrex::Real x1960 =
    -x1025 * x1898 - x1059 * x1062 + x1063 * x1900 - x1944 * x428;
  amrex::Real x1963 =
    (-kf_qss[45] - kf_qss[56] * x576 - kf_qss[67] * x578) / ((x583) * (x583));
  amrex::Real x1966 = x1001 * (12.0 * x626 * x691 + 1.68 * x691 * x997) +
                      2.904e+37 * x622 * x994 - 1.32e+19 * x637;
  amrex::Real x1970 = x1951 * x983 + x1954 * x985 + x1963 * x561 * x585 -
                      x1963 * (kf_qss[40] * sc[1] * x404 + 10.0e-13);
  amrex::Real x1971 =
    -kf_qss[67] * x578 * x644 / x639 + x1005 * x1966 + x1011 * x1957 +
    x1012 * x411 / ((x63) * (x63)) + x1013 * x1954 + x1951 * x990 -
    x1955 * x608 + x1963 * x585 * x603 + x1963 * x599 * x600 +
    x1963 * x642 * (kf_qss[67] * sc[1] + 10.0e-13) - x1970 * x899;
  amrex::Real x1973 =
    kf_qss[45] * x236 / x583 - x1020 * x1970 + x1070 * x1957 +
    x1683 * x411 * x601 - x1960 * x608 + x1963 * x600 * x658 -
    x668 * (-kf_qss[45] - kf_qss[56] * x576 - kf_qss[67] * x578);
  amrex::Real x1974 = -x1020 * x1958 - x1023 * x1959 - x1031 * x1944 +
                      x1033 * x1900 + x1053 * x1946 + x1065 * x1957 -
                      x1066 * x1946 + x1068 * x1971 - x1074 * x1973 -
                      x1960 * x855;
  amrex::Real x1978 =
    -kf_qss[45] * x236 - kf_qss[55] * exp(-g_RT[8] + g_RT_qss[1] - x162) -
    1.614e+22 * sc[10] * x256 * exp(x240) -
    1.92e+16 * sc[1] * x277 * exp(x261) +
    x866 * (12.0 * x247 * x691 + 1.68 * x691 * x862) + 6.144e+31 * x872 +
    x878 * (12.0 * x268 * x691 + 1.68 * x691 * x874) + 4.34166e+43 * x882;
  amrex::Real x1980 =
    x1978 * x65 * x888 - x1978 * x886 + x411 * x887 / ((x63) * (x63));
  amrex::Real x1981 =
    -x1877 * x321 + x1900 * x897 - x1978 * x893 - x1980 * x828;
  amrex::Real x1982 = kf_qss[45] / x315 - x1955 * x568 + x1957 * x964 +
                      x1978 * x599 * x888 - x1978 * x970 - x1981 * x899 +
                      x411 * x971 / ((x63) * (x63));
  amrex::Real x1983 = -x1020 * x1981 - x1023 * x1982 - x1025 * x1980 +
                      x1082 * x1900 + x1085 * x1971 + x1086 * x1957 +
                      x1683 * x318 * x411 - x1944 * x321 - x1960 * x568 -
                      x1973 * x649 + x1978 * x658 * x888;
  amrex::Real x1984 = -x1943 * x608 + x1957 * x977 -
                      x1963 * (kf_qss[38] * sc[0] * x592 + 10.0e-13) -
                      x1970 * x589;
  x652 = x1017 * x1971 - x1018 * x1978 + x1888 * x858 + x1900 * x857 -
         x1943 * x568 + x1957 * x988 - x1980 * x680 - x1981 * x589 -
         x1982 * x973 - x1984 * x649 + x652 / x315;
  const amrex::Real x1986 =
    x854 * (-x1027 * x652 - x1074 * x1984 - x1077 * x1974 + x1078 * x1971 +
            x1079 * x1900 + x1080 * x1946 + x1081 * x1957 + x1090 * x1983 +
            x1091 * x1888 - x1943 * x855 - x1958 * x589 - x1959 * x973);
  amrex::Real x1989 =
    (sc[17] * x1186 + 2.28e+30 * x1199 * x218 * exp(x202) -
     1.6224e+56 * x1487 * x775 + 3.12e+28 * x1490 * x191 -
     8.664e+59 * x1493 * x785 - x187 * (12.0 * x691 * x768 + 1.68 * x767) -
     x214 * (1.68 * x209 * x691 + 12.0 * x691 * x778)) /
    x228;
  amrex::Real x1994 =
    (4.2e+45 * sc[14] * x56 * exp(x34) + 14700000000.0 * x1173 -
     3.6015e+19 * x1500 - 2.94e+90 * x1505 -
     x52 * (12.0 * x46 * x691 + 1.68 * x691 * x806)) /
    x63;
  amrex::Real x1996 =
    x1161 * x1888 - x1175 * x172 * x411 - x1176 * x171 * x1888 -
    x1208 * x1897 * x232 - x1209 * x1888 * x231 + x172 * x1994 + x1989 * x232 -
    (kf_qss[88] * sc[13] * x1145 -
     x105 * (12.0 * x100 * x691 + 1.68 * x691 * x740) +
     1.539e+22 * x1128 * x1131 + 8.4e+18 * x1136 * x1468 -
     x130 * (1.68 * x753 + 12.0 * x754) + 2.562e+47 * x134 * x1474 -
     1.176e+37 * x1470 - 1.093974e+94 * x1477 * x737 -
     x149 * (12.0 * x144 * x691 + 1.68 * x691 * x723) - 3.947535e+43 * x97) /
      x169;
  amrex::Real x1998 =
    (kf_qss[69] * sc[12] * x1376 + 1.32e+19 * x1369 * x635 * exp(x618) -
     2.904e+37 * x1528 * x622 -
     x631 * (12.0 * x626 * x691 + 1.68 * x691 * x997)) /
    x639;
  amrex::Real x2003 =
    (kf_qss[137] * sc[20] * x1270 + 3.756e+27 * x1554 * x540 -
     2.351256e+54 * x1557 - x537 * (1.68 * x532 + 12.0 * x946)) /
    x553;
  x909 =
    -x1283 * x1953 * x557 + x1328 * x1951 - x1537 * x1951 + x2003 * x557 -
    (7.2e+30 * x1289 * x487 * exp(x471) -
     8.64e+60 * x1289 * x909 * exp(-7014.8403213177899 * invT - 15.24 * tc[0]) +
     1.194e+30 * x1314 * x1539 * x508 -
     x483 * (12.0 * x478 * x691 + 1.68 * x691 * x904) -
     x504 * (12.0 * x499 * x691 + 1.68 * x691 * x921) - 2.37606e+59 * x914) /
      x518;
  x1059 =
    x1059 * x1563 - x1059 * x1573 + x1059 * x1574 - x1208 * x1897 * x425 -
    x1211 * x1898 + x1535 * x1954 + x1575 * x1900 + x1989 * x425 -
    x1996 * x428 - x909 * x929 -
    (6.0 * kf_qss[16] * x1246 * x1248 + kf_qss[26] * sc[10] * x1224 +
     8100000000000.0 * x1252 * x1564 + 1.32e+37 * x1568 * x382 -
     2.904e+73 * x1570 * x703 - x356 * (1.68 * x694 + 12.0 * x696) -
     x378 * (1.68 * x691 * x707 + 12.0 * x691 * x711) - 1.0935e+25 * x686) /
      x422;
  x600 = -kf_qss[44] * sc[10] * x1361 / x583 - x1059 * x608 -
         x1175 * x411 * x601 - x1176 * x1963 * x600 +
         x1329 * x1963 * x559 * x585 + x1364 * x1963 - x1386 * x1966 * x644 -
         x1387 * x1963 * (kf_qss[67] * sc[1] + 10.0e-13) - x1461 * x1970 +
         x1523 * x1954 + x1534 * x1957 + x1994 * x601 + x1998 * x644 -
         x909 * x981;
  x1364 = refC * sc[8] * x277 * exp(x1446 + x261);
  x1898 =
    -x1059 * x568 - x1175 * x318 * x411 - x1211 * x1980 - x1389 * x1982 +
    x1459 * x1978 - x1461 * x1981 - x1586 * x1978 + x1587 * x1900 +
    x1588 * x1957 + x1589 * x1971 + x1994 * x318 - x1996 * x321 - x600 * x649 -
    (1.92e+16 * x1364 - 6.144e+31 * x1593 + 1.614e+22 * x1595 -
     4.34166e+43 * x1597 - x252 * (12.0 * x247 * x691 + 1.68 * x691 * x862) -
     x273 * (12.0 * x268 * x691 + 1.68 * x691 * x874)) /
      x315;
  x1946 =
    (-x1027 * x1898 - x1031 * x1996 + x1052 * x1946 - x1059 * x855 -
     x1074 * x600 - x1389 * x1959 + x1416 * x1946 - x1461 * x1958 +
     x1509 * x1900 + x1517 * x1957 + x1584 * x1971 - x1974 * x890 +
     x1983 * x898 -
     (1.614e+17 * refC * sc[16] * x1401 * x846 - 4.34166e+33 * x1044 * x1513 -
      x842 * (1.68 * x1036 * x691 + 12.0 * x1037 * x691)) /
       x849) /
    x852;
  x1958 = -kf_qss[52] * exp(-x114 - x388) + x1057;
  x1959 =
    (-kf_qss[109] * exp(-x114 - x76) - kf_qss[92] + x1026) / ((x169) * (x169));
  x1963 = x1061 * x792 / ((x228) * (x228));
  x1970 = -kf_qss[92] * x425 / x228 - x1958 * x762 + x1958 * x795 + x1963;
  x1974 = x1636 / ((x63) * (x63));
  x1978 = x1 * x172 * x1974 + x1061 * x798 / ((x228) * (x228));
  x1980 = -kf_qss[92] * x232 / x228 + x171 * x1959 * x65 + x1959 * x230 * x231 +
          x1978;
  x1981 = -x1958 * x720 + x1959 * x323 * x428 - x1970 * x680 + x1980 * x826;
  x1982 = -kf_qss[34] + x1666;
  amrex::Real x2024 =
    x1061 * x894 / ((x228) * (x228)) + x1959 * x231 * x437 -
    x439 * (-kf_qss[109] * exp(-x114 - x76) - kf_qss[92] + x1026);
  amrex::Real x2026 = x1974 * x887 + x1982 * x65 * x888 - x1982 * x886;
  amrex::Real x2027 = x1980 * x897 - x1982 * x893 - x2024 * x321 - x2026 * x828;
  amrex::Real x2029 = -kf_qss[120] - kf_qss[121] - kf_qss[122] + x1654;
  amrex::Real x2031 =
    -kf_qss[139] * x555 / x518 + x2029 * x936 + x954 * (-kf_qss[139] + x1657);
  amrex::Real x2032 = x1061 * x901 / ((x228) * (x228)) + x1958 * x900 +
                      x1958 * x934 - x1970 * x828 + x1980 * x932 -
                      x2024 * x428 + x2029 * x931 + x2031 * x960;
  amrex::Real x2034 =
    -x1958 * x965 + x1958 * x967 + x2029 * x966 + x2031 * x968;
  amrex::Real x2035 = x1974 * x971 + x1982 * x599 * x888 - x1982 * x970 -
                      x2027 * x899 + x2032 * x964 - x2034 * x568;
  amrex::Real x2037 =
    -x1981 * x608 + x2032 * x977 - x589 * (x2029 * x983 + x2031 * x985);
  amrex::Real x2038 = x1005 * x1673 + x1012 * x1974;
  amrex::Real x2039 = x1011 * x2032 + x1013 * x2031 + x2029 * x990 -
                      x2034 * x608 + x2038 -
                      x899 * (x2029 * x983 + x2031 * x985);
  amrex::Real x2040 = x1017 * x2039 - x1018 * x1982 + x1959 * x858 +
                      x1980 * x857 - x1981 * x568 - x2026 * x680 -
                      x2027 * x589 + x2032 * x988 - x2035 * x973 - x2037 * x649;
  x660 = x1028 * x1959 + x172 * x1974 * x657 - x1959 * x660;
  amrex::Real x2043 = -x1031 * x2024 + x1055 * x1980 + x1648;
  amrex::Real x2044 =
    -x1058 * x1647 + x1060 * x2032 - x2034 * x855 - x2043 * x899;
  amrex::Real x2045 =
    -x1025 * x1970 - x1062 * x1958 + x1063 * x1980 - x428 * x660;
  amrex::Real x2046 = x1974 * x601 * x657;
  amrex::Real x2047 = -x1020 * (x2029 * x983 + x2031 * x985) + x1070 * x2032 -
                      x2045 * x608 + x2046;
  amrex::Real x2048 = -x1020 * x2043 - x1023 * x2044 - x1031 * x660 +
                      x1033 * x1980 + x1065 * x2032 + x1068 * x2039 -
                      x1074 * x2047 + x1689 - x2045 * x855;
  amrex::Real x2049 = x1974 * x318 * x657;
  amrex::Real x2050 = -x1020 * x2027 - x1023 * x2035 - x1025 * x2026 +
                      x1082 * x1980 + x1085 * x2039 + x1086 * x2032 +
                      x1982 * x658 * x888 - x2045 * x568 - x2047 * x649 +
                      x2049 - x321 * x660;
  const amrex::Real x2051 =
    x854 * (-x1027 * x2040 - x1074 * x2037 - x1077 * x2048 + x1078 * x2039 +
            x1079 * x1980 + x1080 * x1647 + x1081 * x2032 + x1090 * x2050 +
            x1091 * x1959 - x1981 * x855 - x2043 * x589 - x2044 * x973);
  amrex::Real x2054 =
    kf_qss[139] * x1284 / x518 - x1283 * x557 * (-kf_qss[139] + x1657) +
    x1328 * x2029 - x1537 * x2029 +
    x557 * (kf_qss[138] * sc[20] * x1280 + x1724) / x553 -
    (kf_qss[119] * sc[14] * x1307 + sc[15] * x1297 + x1720) / x518;
  amrex::Real x2060 =
    -x1061 * x1208 * x232 - x1175 * x1636 * x172 + x1708 * x172 / x63;
  x231 = x1161 * x1959 - x1176 * x171 * x1959 - x1209 * x1959 * x231 + x2060 +
         x232 * (kf_qss[102] * sc[17] * x1182 + x182) / x228 -
         (kf_qss[131] * sc[19] + sc[13] * x1121 + sc[14] * x1155 + x184) / x169;
  x1161 = -x1061 * x1208 * x425;
  x1958 =
    x1161 - x1211 * x1970 + x1535 * x2031 + x1563 * x1958 - x1573 * x1958 +
    x1574 * x1958 + x1575 * x1980 - x2054 * x929 - x231 * x428 -
    (kf_qss[27] * sc[10] * exp(-x114 - x90) + kf_qss[53] * sc[12] + x1730) /
      x422 +
    x425 * (kf_qss[102] * sc[17] * x1182 + x182) / x228;
  x1970 = -x1175 * x1636 * x601 - x1386 * x1673 * x644;
  amrex::Real x2068 =
    -x1461 * (x2029 * x983 + x2031 * x985) + x1523 * x2031 + x1534 * x2032 +
    x1750 - x1958 * x608 + x1970 - x2054 * x981 +
    x644 * (kf_qss[58] * sc[8] + sc[12] * x1366 + x839) / x639;
  amrex::Real x2069 = -x1175 * x1636 * x318;
  amrex::Real x2071 = -x1670 / x315 + x1808 + x2069;
  x1982 = -x1176 * x1982 * x888 - x1211 * x2026 - x1389 * x2035 +
          x1459 * x1982 - x1461 * x2027 + x1587 * x1980 + x1588 * x2032 +
          x1589 * x2039 - x1958 * x568 - x2068 * x649 + x2071 - x231 * x321;
  x2026 = (-x1027 * x1982 - x1031 * x231 - x1074 * x2068 - x1389 * x2044 -
           x1461 * x2043 + x1509 * x1980 + x1517 * x2032 + x1584 * x2039 +
           x1669 + x1761 - x1958 * x855 - x2048 * x890 + x2050 * x898) /
          x852;
  x2027 = -kf_qss[93] + x1026;
  x2035 = -kf_qss[53] * exp(-g_RT[6] + g_RT[7] - x388) + x1057;
  x2043 = x1963 - x2035 * x762 + x2035 * x795;
  x2044 = x1782 * x2027 + x1978 + x2027 * x286;
  x2048 = x1842 * x2027 - x2035 * x720 - x2043 * x680 + x2044 * x826;
  amrex::Real x2080 = -kf_qss[123] + x1654;
  amrex::Real x2082 = x1657 * x954 + x2080 * x936;
  amrex::Real x2083 =
    x1061 * x894 / ((x228) * (x228)) + x1753 * x2027 - x2027 * x439;
  amrex::Real x2084 = x1061 * x901 / ((x228) * (x228)) + x2035 * x900 +
                      x2035 * x934 - x2043 * x828 + x2044 * x932 +
                      x2080 * x931 + x2082 * x960 - x2083 * x428;
  amrex::Real x2086 =
    -x2048 * x608 + x2084 * x977 - x589 * (x2080 * x983 + x2082 * x985);
  amrex::Real x2087 =
    -x2035 * x965 + x2035 * x967 + x2080 * x966 + x2082 * x968;
  amrex::Real x2088 = x1011 * x2084 + x1013 * x2082 + x2038 + x2080 * x990 -
                      x2087 * x608 - x899 * (x2080 * x983 + x2082 * x985);
  amrex::Real x2089 = -x1666 * x886 + x1666 * x889 + x1974 * x887;
  amrex::Real x2090 = -x1666 * x893 - x2089 * x828;
  amrex::Real x2091 = x2044 * x897 - x2083 * x321 + x2090;
  amrex::Real x2093 = x1666 * x892 - x1666 * x970 + x1974 * x971 +
                      x2084 * x964 - x2087 * x568 - x2091 * x899;
  amrex::Real x2094 = -x1018 * x1666 - x2089 * x680;
  amrex::Real x2095 = x1017 * x2088 + x2044 * x857 - x2048 * x568 +
                      x2084 * x988 - x2086 * x649 - x2091 * x589 -
                      x2093 * x973 + x2094 + x2027 * x858 / ((x169) * (x169));
  amrex::Real x2096 = -x1031 * x2083 + x1055 * x2044 + x1648;
  amrex::Real x2097 =
    -x1058 * x1647 + x1060 * x2084 - x2087 * x855 - x2096 * x899;
  amrex::Real x2098 =
    x1028 * x2027 / ((x169) * (x169)) - x1682 * x2027 + x172 * x1974 * x657;
  amrex::Real x2099 =
    -x1025 * x2043 - x1062 * x2035 + x1063 * x2044 - x2098 * x428;
  amrex::Real x2100 = -x1020 * (x2080 * x983 + x2082 * x985) + x1070 * x2084 +
                      x2046 - x2099 * x608;
  amrex::Real x2101 = -x1020 * x2096 - x1023 * x2097 - x1031 * x2098 +
                      x1033 * x2044 + x1065 * x2084 + x1068 * x2088 -
                      x1074 * x2100 + x1689 - x2099 * x855;
  amrex::Real x2103 = -x1020 * x2091 - x1023 * x2093 - x1025 * x2089 +
                      x1082 * x2044 + x1083 * x1666 + x1085 * x2088 +
                      x1086 * x2084 + x2049 - x2098 * x321 - x2099 * x568 -
                      x2100 * x649;
  const amrex::Real x2104 =
    x854 * (-x1027 * x2095 - x1074 * x2086 - x1077 * x2101 + x1078 * x2088 +
            x1079 * x2044 + x1080 * x1647 + x1081 * x2084 + x1090 * x2103 +
            x1091 * x2027 / ((x169) * (x169)) - x2048 * x855 - x2096 * x589 -
            x2097 * x973);
  amrex::Real x2106 =
    x1705 * x2027 - x1793 * x2027 + x1797 - x1855 * x2027 + x2060 - x184 / x169;
  amrex::Real x2108 = -x1283 * x1657 * x557;
  amrex::Real x2110 = x1328 * x2080 - x1537 * x2080 + x1789 + x2108 -
                      (kf_qss[121] * sc[14] * x1304 + x1720) / x518;
  amrex::Real x2112 = -x1730 / x422 + x182 * x425 / x228;
  x2035 = x1161 - x1211 * x2043 + x1535 * x2082 + x1563 * x2035 -
          x1573 * x2035 + x1574 * x2035 + x1575 * x2044 - x2106 * x428 -
          x2110 * x929 + x2112;
  x2043 = -x1461 * (x2080 * x983 + x2082 * x985) + x1523 * x2082 +
          x1534 * x2084 + x1750 + x1970 - x2035 * x608 - x2110 * x981 +
          x644 * x839 / x639;
  amrex::Real x2117 = -x1211 * x2089 + x1459 * x1666 - x1586 * x1666;
  x2091 = -x1389 * x2093 - x1461 * x2091 + x1587 * x2044 + x1588 * x2084 +
          x1589 * x2088 - x2035 * x568 - x2043 * x649 + x2071 - x2106 * x321 +
          x2117;
  x2093 = (-x1027 * x2091 - x1031 * x2106 - x1074 * x2043 - x1389 * x2097 -
           x1461 * x2096 + x1509 * x2044 + x1517 * x2084 + x1584 * x2088 +
           x1669 + x1761 - x2035 * x855 - x2101 * x890 + x2103 * x898) /
          x852;
  x2096 = -kf_qss[95] - kf_qss[96] + x1026 - 4.27e+46 * x119 * x134;
  x2097 = x1782 * x2096 + x1978 + x2096 * x286;
  x2101 = -kf_qss[98] * x232 * x332 / x228 + x1061 * x894 / ((x228) * (x228)) +
          x1753 * x2096 - x2096 * x439;
  amrex::Real x2123 = -kf_qss[59] + x1647;
  amrex::Real x2124 =
    -x1031 * x2101 - x1054 * x2123 + x1055 * x2097 + x1056 * x2123;
  amrex::Real x2125 =
    -kf_qss[106] * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3]) -
    kf_qss[60] - kf_qss[98] * x332 + x1057 - 2.2e+36 * x367 * x382;
  amrex::Real x2127 = x1963 - x2125 * x762 + x2125 * x795;
  amrex::Real x2128 = x1654 - x447 - x458;
  amrex::Real x2130 =
    x2128 * x936 - x447 * x557 / x553 + x954 * (-kf_qss[140] + x1657);
  amrex::Real x2131 = -kf_qss[98] * x332 * x425 / x228 +
                      x1061 * x901 / ((x228) * (x228)) + x2097 * x932 -
                      x2101 * x428 + x2125 * x900 + x2125 * x934 -
                      x2127 * x828 + x2128 * x931 + x2130 * x960;
  amrex::Real x2132 =
    x1028 * x2096 / ((x169) * (x169)) - x1682 * x2096 + x172 * x1974 * x657;
  amrex::Real x2133 =
    -x1025 * x2127 - x1062 * x2125 + x1063 * x2097 - x2132 * x428;
  amrex::Real x2135 = kf_qss[63] * x978 - kf_qss[63] * x980 + x2128 * x983 +
                      x2130 * x985 - x458 * x561 / x583;
  amrex::Real x2136 = -kf_qss[63] * x1069 + kf_qss[63] * x668 - x1020 * x2135 +
                      x1070 * x2131 + x2046 - x2133 * x608;
  amrex::Real x2137 =
    -x2125 * x965 + x2125 * x967 + x2128 * x966 + x2130 * x968;
  amrex::Real x2138 =
    -x1058 * x2123 + x1060 * x2131 - x2124 * x899 - x2137 * x855;
  amrex::Real x2139 = -kf_qss[63] * x1008 - kf_qss[63] * x1010 -
                      kf_qss[63] * x989 + x1011 * x2131 + x1013 * x2130 +
                      x2038 + x2128 * x990 - x2135 * x899 - x2137 * x608 -
                      x458 * x603 / x583;
  amrex::Real x2140 = -x1020 * x2124 - x1023 * x2138 - x1031 * x2132 +
                      x1033 * x2097 + x1053 * x2123 + x1065 * x2131 -
                      x1066 * x2123 + x1068 * x2139 - x1074 * x2136 -
                      x2133 * x855;
  amrex::Real x2142 = -kf_qss[59] * x428 / x169 + x1842 * x2096 + x2097 * x826 -
                      x2125 * x720 - x2127 * x680;
  amrex::Real x2143 =
    kf_qss[63] * x975 + x2131 * x977 - x2135 * x589 - x2142 * x608;
  amrex::Real x2144 = -kf_qss[62] + x1666;
  amrex::Real x2145 = x1974 * x887 - x2144 * x886 + x2144 * x889;
  amrex::Real x2146 = x2097 * x897 - x2101 * x321 - x2144 * x893 - x2145 * x828;
  amrex::Real x2147 = x1974 * x971 + x2131 * x964 - x2137 * x568 +
                      x2144 * x892 - x2144 * x970 - x2146 * x899;
  amrex::Real x2148 =
    -kf_qss[59] * x321 / x169 + x1017 * x2139 - x1018 * x2144 + x2097 * x857 +
    x2131 * x988 - x2142 * x568 - x2143 * x649 - x2145 * x680 - x2146 * x589 -
    x2147 * x973 + x2096 * x858 / ((x169) * (x169));
  amrex::Real x2149 = -x1020 * x2146 - x1023 * x2147 - x1025 * x2145 +
                      x1082 * x2097 + x1083 * x2144 + x1085 * x2139 +
                      x1086 * x2131 + x2049 - x2132 * x321 - x2133 * x568 -
                      x2136 * x649;
  const amrex::Real x2150 =
    x854 * (-kf_qss[59] * x1031 / x169 - x1027 * x2148 - x1074 * x2143 -
            x1077 * x2140 + x1078 * x2139 + x1079 * x2097 + x1080 * x2123 +
            x1081 * x2131 + x1090 * x2149 + x1091 * x2096 / ((x169) * (x169)) -
            x2124 * x589 - x2138 * x973 - x2142 * x855);
  amrex::Real x2154 =
    -x1283 * x557 * (-kf_qss[140] + x1657) + x1328 * x2128 - x1537 * x2128 +
    x557 * (kf_qss[115] * sc[14] + x1724) / x553 -
    (kf_qss[117] * sc[12] * x1293 + kf_qss[122] * sc[12] * x1325 * x66 +
     kf_qss[129] * sc[15] + 2.0 * kf_qss[64] * ((sc[8])) + sc[19] * x1099 +
     x1720) /
      x518;
  amrex::Real x2157 = x1705 * x2096 - x1793 * x2096 - x1855 * x2096 + x2060 +
                      x232 * (refCinv * sc[10] * x1197 + x182) / x228 -
                      (kf_qss[114] * sc[14] + kf_qss[87] * sc[10] * x1142 +
                       sc[19] * x1099 + x184) /
                        x169;
  x2125 = x1161 - x1211 * x2127 + x1535 * x2130 + x1563 * x2125 -
          x1573 * x2125 + x1574 * x2125 + x1575 * x2097 - x2154 * x929 -
          x2157 * x428 - (kf_qss[61] * sc[12] + x1730) / x422 +
          x425 * (refCinv * sc[10] * x1197 + x182) / x228;
  x458 = kf_qss[63] * x1519 - kf_qss[63] * x1521 + kf_qss[63] * x1533 -
         kf_qss[63] * x796 - x1329 * x458 * x559 / x583 - x1461 * x2135 +
         x1523 * x2130 + x1534 * x2131 + x1750 + x1970 - x2125 * x608 -
         x2154 * x981 +
         x644 *
           (kf_qss[57] * sc[3] + kf_qss[58] * sc[6] +
            kf_qss[66] * sc[4] * x1372 + x839) /
           x639 -
         (kf_qss[42] * sc[1] * x1345 + kf_qss[56] * sc[4] +
          2.0 * kf_qss[73] * ((sc[8])) * exp(-g_RT_qss[2] - x1332)) /
           x583;
  x1430 = -x1211 * x2145 - x1389 * x2147 + x1459 * x2144 - x1461 * x2146 -
          x1586 * x2144 + x1587 * x2097 + x1588 * x2131 + x1589 * x2139 +
          x1808 + x2069 - x2125 * x568 - x2157 * x321 - x458 * x649 -
          (kf_qss[55] * sc[4] +
           2.0 * kf_qss[72] * ((sc[8])) * exp(-g_RT_qss[1] - x1332) +
           sc[1] * x1430 + x1449 * x788 + x1670) /
            x315;
  x1449 = (-x1027 * x1430 - x1031 * x2157 + x1052 * x2123 - x1074 * x458 -
           x1389 * x2138 + x1416 * x2123 - x1461 * x2124 + x1509 * x2097 +
           x1517 * x2131 + x1584 * x2139 + x1761 - x2125 * x855 - x2140 * x890 +
           x2149 * x898) /
          x852;
  x2123 = -kf_qss[61] * exp(-x388 - x86) + x717;
  x2124 = -kf_qss[114] * exp(-x76 - x86) + x758;
  x2127 = -kf_qss[112] * x12 - kf_qss[130] * exp(-x4) + x818;
  x2135 = x1638 * x2127 + x1782 * x2124 + x2124 * x286 + x791 * x798;
  x2138 = -x2123 * x762 + x2123 * x795 + x791 * x792;
  x2140 = x1842 * x2124 - x2123 * x720 + x2135 * x826 - x2138 * x680;
  x2144 = -kf_qss[72] + x883;
  x2145 = x2127 * x887 / ((x63) * (x63)) - x2144 * x886 + x2144 * x889;
  x2146 = x1753 * x2124 - x2124 * x439 + x791 * x894;
  x2147 = x2135 * x897 - x2144 * x893 - x2145 * x828 - x2146 * x321;
  amrex::Real x2174 = -kf_qss[129] * exp(-x449 - x86) + x926;
  amrex::Real x2175 = x2174 * x936 + x951 * x954;
  amrex::Real x2176 =
    -x2123 * x965 + x2123 * x967 + x2174 * x966 + x2175 * x968;
  amrex::Real x2177 = x2123 * x900 + x2123 * x934 + x2135 * x932 -
                      x2138 * x828 - x2146 * x428 + x2174 * x931 +
                      x2175 * x960 + x791 * x901;
  amrex::Real x2178 = x2127 * x971 / ((x63) * (x63)) + x2144 * x892 -
                      x2144 * x970 - x2147 * x899 - x2176 * x568 + x2177 * x964;
  amrex::Real x2179 =
    kf_qss[73] * x978 - kf_qss[73] * x980 + x2174 * x983 + x2175 * x985;
  amrex::Real x2180 =
    kf_qss[73] * x975 - x2140 * x608 + x2177 * x977 - x2179 * x589;
  amrex::Real x2182 = -kf_qss[112] * x12 * x599 / x583 - kf_qss[73] * x1008 -
                      kf_qss[73] * x1010 - kf_qss[73] * x989 + x1002 * x1005 +
                      x1011 * x2177 + x1012 * x2127 / ((x63) * (x63)) +
                      x1013 * x2175 + x2174 * x990 - x2176 * x608 -
                      x2179 * x899;
  amrex::Real x2183 = x1017 * x2182 - x1018 * x2144 + x2135 * x857 -
                      x2140 * x568 - x2145 * x680 - x2147 * x589 +
                      x2177 * x988 - x2178 * x973 - x2180 * x649 +
                      x2124 * x858 / ((x169) * (x169));
  amrex::Real x2185 =
    x1028 * x2124 / ((x169) * (x169)) - x1682 * x2124 + x1683 * x172 * x2127;
  amrex::Real x2186 = -kf_qss[71] + x1049;
  amrex::Real x2187 =
    -x1031 * x2146 - x1054 * x2186 + x1055 * x2135 + x1056 * x2186;
  amrex::Real x2188 =
    -x1058 * x2186 + x1060 * x2177 - x2176 * x855 - x2187 * x899;
  amrex::Real x2189 =
    -x1025 * x2138 - x1062 * x2123 + x1063 * x2135 - x2185 * x428;
  amrex::Real x2190 = -kf_qss[112] * x12 * x658 / x583 - kf_qss[73] * x1069 +
                      kf_qss[73] * x668 - x1020 * x2179 + x1070 * x2177 +
                      x1683 * x2127 * x601 - x2189 * x608;
  amrex::Real x2191 = -x1020 * x2187 - x1023 * x2188 - x1031 * x2185 +
                      x1033 * x2135 + x1053 * x2186 + x1065 * x2177 -
                      x1066 * x2186 + x1068 * x2182 - x1074 * x2190 -
                      x2189 * x855;
  amrex::Real x2192 = -x1020 * x2147 - x1023 * x2178 - x1025 * x2145 +
                      x1082 * x2135 + x1083 * x2144 + x1085 * x2182 +
                      x1086 * x2177 + x1683 * x2127 * x318 - x2185 * x321 -
                      x2189 * x568 - x2190 * x649;
  const amrex::Real x2193 =
    x854 * (-x1027 * x2183 - x1074 * x2180 - x1077 * x2191 + x1078 * x2182 +
            x1079 * x2135 + x1080 * x2186 + x1081 * x2177 + x1090 * x2192 +
            x1091 * x2124 / ((x169) * (x169)) - x2140 * x855 - x2187 * x589 -
            x2188 * x973);
  amrex::Real x2197 = -x1283 * x557 * x951 + x1328 * x2174 - x1537 * x2174 -
                      x1549 / x518 +
                      x557 * (kf_qss[140] * sc[20] * x1266 + x1559) / x553;
  amrex::Real x2202 = -x1175 * x172 * x2127 + x1494 * x232 / x228 + x1507 +
                      x1705 * x2124 - x1793 * x2124 - x1855 * x2124 -
                      (kf_qss[95] * sc[13] * x1158 + x107) / x169;
  x2123 = -x1208 * x425 * x790 - x1211 * x2138 + x1494 * x425 / x228 +
          x1535 * x2175 + x1563 * x2123 - x1573 * x2123 + x1574 * x2123 +
          x1575 * x2135 - x2197 * x929 - x2202 * x428 -
          (kf_qss[60] * sc[10] * x1213 + x1572) / x422;
  x2138 = kf_qss[112] * x1176 * x12 / x583 + kf_qss[73] * x1519 -
          kf_qss[73] * x1521 + kf_qss[73] * x1533 - kf_qss[73] * x796 -
          x1175 * x2127 * x601 - x1461 * x2179 + x1523 * x2175 +
          x1531 * x644 / x639 + x1534 * x2177 + x1582 - x2123 * x608 -
          x2197 * x981;
  x2144 = -x1175 * x2127 * x318 - x1211 * x2145 - x1389 * x2178 +
          x1459 * x2144 - x1461 * x2147 + x1506 * x318 - x1586 * x2144 +
          x1587 * x2135 + x1588 * x2177 + x1589 * x2182 - x1599 / x315 -
          x2123 * x568 - x2138 * x649 - x2202 * x321;
  x2145 = (-x1027 * x2144 - x1031 * x2202 + x1052 * x2186 - x1074 * x2138 -
           x1389 * x2188 + x1416 * x2186 - x1461 * x2187 + x1509 * x2135 +
           x1516 + x1517 * x2177 + x1584 * x2182 - x2123 * x855 - x2191 * x890 +
           x2192 * x898) /
          x852;
  x2147 = -1.5 * kf_qss[16] - 2025000000000.0 * sc[1] * x359 * exp(x343) +
          2.73375e+24 * x1050 - x341 - 3.3e+36 * x382 * x715 +
          x699 * (3.0 * x351 * x691 / ((x353) * (x353)) + 0.42 * x694) +
          7.26e+72 * x702 * x703 +
          x714 * (3.0 * x373 * x691 / ((x375) * (x375)) + 0.42 * x691 * x707);
  x732 = -kf_qss[76] * x158 - 2.1e+18 * sc[1] * x153 * exp(x137) -
         3.8475e+21 * x110 - 6.405e+46 * x134 * x748 +
         x728 * (3.0 * x144 * x691 + 0.42 * x691 * x723) + 2.94e+36 * x732 +
         2.734935e+93 * x736 * x737 +
         x744 * (3.0 * x100 * x691 + 0.42 * x691 * x740) +
         9.8688375000000004e+42 * x747 + x757 * (0.42 * x753 + 3.0 * x754) -
         x92;
  x220 = -7.8e+27 * x191 * x783 - 5.7e+29 * x220 +
         x771 * (3.0 * x691 * x768 + 0.42 * x767) + 4.056e+55 * x774 * x775 +
         x782 * (0.42 * x209 * x691 + 3.0 * x691 * x778) +
         2.166e+59 * x785 * x789;
  x2178 =
    -x2147 * x762 + x2147 * x795 + x220 * x792 / ((x228) * (x228)) + x92 / x422;
  x2179 = -1.05e+45 * refCinv * sc[0] * x57 - 3675000000.0 * x30 +
          x810 * (3.0 * x46 * x691 + 0.42 * x691 * x806) + 9.00375e+18 * x813 +
          7.35e+89 * x814 * x816;
  x2186 = x1 * x172 * x2179 / ((x63) * (x63)) + x1782 * x732 +
          x220 * x798 / ((x228) * (x228)) + x286 * x732;
  x2187 = x1842 * x732 - x2147 * x720 - x2178 * x680 + x2186 * x826;
  x242 = -kf_qss[46] * x236 -
         kf_qss[77] * exp(g_RT[10] - g_RT[13] - g_RT[2] + g_RT_qss[1]) -
         kf_qss[80] * x290 - 4.035e+21 * sc[10] * x256 * exp(x240) -
         4800000000000000.0 * sc[1] * x277 * exp(x261) - x242 * x256 * x40 +
         x866 * (3.0 * x247 * x691 + 0.42 * x691 * x862) + 1.536e+31 * x872 +
         x878 * (3.0 * x268 * x691 + 0.42 * x691 * x874) + 1.085415e+43 * x882;
  x872 = kf_qss[76] * x158 / x315 + x2179 * x887 / ((x63) * (x63)) +
         x242 * x65 * x888 - x242 * x886;
  x882 = x1753 * x732 + x220 * x894 / ((x228) * (x228)) - x439 * x732;
  x2188 = x2186 * x441 * x856 - x242 * x893 - x321 * x882 - x828 * x872;
  x2191 = -2.985e+29 * sc[1] * x508 * exp(x492) + 5.94015e+58 * x1652 - x468 -
          1.8e+30 * x489 + x908 * (3.0 * x478 * x691 + 0.42 * x691 * x904) +
          2.16e+60 * x912 + x925 * (3.0 * x499 * x691 + 0.42 * x691 * x921);
  x943 = -9.39e+26 * x540 * x545 + 5.87814e+53 * x943 +
         x950 * (0.42 * x532 + 3.0 * x946);
  amrex::Real x2252 = x2191 * x936 + x943 * x954;
  amrex::Real x2253 = -x2147 * x965 + x2147 * x967 + x2191 * x966 +
                      x2252 * x968 - x468 * x603 / x422;
  amrex::Real x2254 = x2147 * x900 + x2147 * x934 - x2178 * x828 +
                      x2186 * x441 * x825 + x2191 * x931 +
                      x220 * x901 / ((x228) * (x228)) + x2252 * x960 -
                      x428 * x882 - x468 * x561 / x422;
  amrex::Real x2255 = kf_qss[46] / x315 + x2179 * x971 / ((x63) * (x63)) -
                      x2188 * x899 - x2253 * x568 + x2254 * x964 +
                      x242 * x599 * x888 - x242 * x970;
  amrex::Real x2256 = -kf_qss[46] - kf_qss[74] * x574;
  amrex::Real x2257 = x2191 * x983 + x2252 * x985 - x2256 * x978 + x2256 * x980;
  amrex::Real x2258 =
    -x2187 * x608 + x2254 * x977 - x2256 * x975 - x2257 * x589;
  amrex::Real x2260 = x1001 * (3.0 * x626 * x691 + 0.42 * x691 * x997) +
                      7.26e+36 * x622 * x994 - 3.3e+18 * x637;
  amrex::Real x2261 = x1005 * x2260 + x1008 * x2256 + x1010 * x2256 +
                      x1011 * x2254 + x1012 * x2179 / ((x63) * (x63)) +
                      x1013 * x2252 + x2191 * x990 - x2253 * x608 +
                      x2256 * x989 - x2257 * x899;
  amrex::Real x2262 = x1017 * x2261 - x1018 * x242 + x2186 * x857 -
                      x2187 * x568 - x2188 * x589 + x2254 * x988 -
                      x2255 * x973 - x2258 * x649 - x680 * x872 +
                      x732 * x858 / ((x169) * (x169));
  amrex::Real x2266 = x1041 * (0.42 * x1036 * x691 + 3.0 * x1037 * x691) -
                      4.035e+16 * x1042 * x846 + 1.085415e+33 * x1044 * x1047 -
                      2.69e+16 * x831 * x846;
  x341 = -x1031 * x882 + x1032 * x2186 * x441 - x1054 * x2266 + x1056 * x2266 +
         x341 / x849;
  amrex::Real x2268 =
    -x1058 * x2266 + x1060 * x2254 - x2253 * x855 - x341 * x899;
  amrex::Real x2270 = -kf_qss[80] * x172 * x290 / x63 +
                      x1028 * x732 / ((x169) * (x169)) - x1682 * x732 +
                      x172 * x2179 * x657 / ((x63) * (x63));
  amrex::Real x2271 =
    -x1025 * x2178 - x1062 * x2147 + x1063 * x2186 - x2270 * x428;
  amrex::Real x2272 =
    kf_qss[46] * x236 / x583 - kf_qss[80] * x290 * x601 / x63 - x1020 * x2257 +
    x1069 * x2256 + x1070 * x2254 + x2179 * x601 * x657 / ((x63) * (x63)) -
    x2256 * x668 - x2271 * x608;
  amrex::Real x2273 = -x1020 * x341 - x1023 * x2268 - x1031 * x2270 +
                      x1033 * x2186 + x1053 * x2266 + x1065 * x2254 -
                      x1066 * x2266 + x1068 * x2261 - x1074 * x2272 -
                      x2271 * x855;
  x888 = -kf_qss[80] * x290 * x318 / x63 - x1020 * x2188 - x1023 * x2255 -
         x1025 * x872 + x1082 * x2186 + x1085 * x2261 + x1086 * x2254 +
         x2179 * x318 * x657 / ((x63) * (x63)) - x2270 * x321 - x2271 * x568 -
         x2272 * x649 + x242 * x658 * x888;
  const amrex::Real x2275 =
    x854 * (-x1027 * x2262 - x1074 * x2258 - x1077 * x2273 + x1078 * x2261 +
            x1079 * x2186 + x1080 * x2266 + x1081 * x2254 + x1090 * x888 +
            x1091 * x732 / ((x169) * (x169)) - x2187 * x855 - x2268 * x973 -
            x341 * x589);
  amrex::Real x2278 =
    (kf_qss[103] * sc[12] * x1178 * x66 + refCinv * sc[8] * x1197 +
     5.7e+29 * x1199 * x218 * exp(x202) - 4.056e+55 * x1487 * x775 +
     7.8e+27 * x1490 * x191 - 2.166e+59 * x1493 * x785 -
     x187 * (3.0 * x691 * x768 + 0.42 * x767) -
     x214 * (0.42 * x209 * x691 + 3.0 * x691 * x778)) /
    x228;
  amrex::Real x2284 =
    (1.05e+45 * sc[14] * x56 * exp(x34) + 3675000000.0 * x1173 -
     9.00375e+18 * x1500 - 7.35e+89 * x1505 -
     x52 * (3.0 * x46 * x691 + 0.42 * x691 * x806)) /
    x63;
  x753 = -x1175 * x172 * x2179 - x1208 * x220 * x232 + x1705 * x732 +
         x172 * x2284 - x1793 * x732 - x1855 * x732 + x2278 * x232 -
         (kf_qss[87] * sc[8] * x1142 + kf_qss[94] * sc[14] * x1108 -
          x105 * (3.0 * x100 * x691 + 0.42 * x691 * x740) +
          3.8475e+21 * x1128 * x1131 + 2.1e+18 * x1136 * x1468 -
          x130 * (0.42 * x753 + 3.0 * x754) + 6.405e+46 * x134 * x1474 -
          2.94e+36 * x1470 - 2.734935e+93 * x1477 * x737 -
          x149 * (3.0 * x144 * x691 + 0.42 * x691 * x723) -
          9.8688375000000004e+42 * x97) /
           x169;
  x1470 = (9.39e+26 * x1554 * x540 - 5.87814e+53 * x1557 -
           x537 * (0.42 * x532 + 3.0 * x946)) /
          x553;
  x1557 =
    -x1283 * x557 * x943 + x1328 * x2191 + x1470 * x557 - x1537 * x2191 -
    (kf_qss[124] * sc[15] * x1260 + 1.8e+30 * x1289 * x487 * exp(x471) +
     2.985e+29 * x1314 * x1539 * x508 - 2.16e+60 * x1547 -
     x483 * (3.0 * x478 * x691 + 0.42 * x691 * x904) -
     x504 * (3.0 * x499 * x691 + 0.42 * x691 * x921) - 5.94015e+58 * x914) /
      x518;
  x351 = -x1208 * x220 * x425 - x1211 * x2178 - x1329 * x468 * x559 / x422 +
         x1535 * x2252 - x1557 * x929 + x1563 * x2147 - x1573 * x2147 +
         x1574 * x2147 + x1575 * x2186 + x2278 * x425 - x428 * x753 -
         (kf_qss[124] * sc[15] * x1260 + kf_qss[132] * sc[20] * x1238 +
          kf_qss[16] * refCinv * sc[1] * x1246 * x40 +
          1.5 * kf_qss[16] * x1246 * x1248 + kf_qss[23] * sc[0] * x1221 +
          kf_qss[24] * sc[4] * x1217 + kf_qss[26] * sc[5] * x1224 +
          kf_qss[27] * sc[6] * exp(-x114 - x90) + kf_qss[60] * sc[9] * x1213 +
          kf_qss[94] * sc[14] * x1108 + 2025000000000.0 * x1252 * x1564 +
          3.3e+36 * x1568 * x382 - 7.26e+72 * x1570 * x703 -
          x356 * (3.0 * x351 * x691 / ((x353) * (x353)) + 0.42 * x694) -
          x378 * (3.0 * x373 * x691 / ((x375) * (x375)) + 0.42 * x691 * x707) -
          2.73375e+24 * x686) /
           x422;
  x353 = (3.3e+18 * x1369 * x635 * exp(x618) - 7.26e+36 * x1528 * x622 -
          x631 * (3.0 * x626 * x691 + 0.42 * x691 * x997)) /
         x639;
  x373 = -x1175 * x2179 * x601 - x1386 * x2260 * x644 - x1461 * x2257 -
         x1519 * x2256 + x1521 * x2256 + x1523 * x2252 - x1533 * x2256 +
         x1534 * x2254 - x1557 * x981 + x2256 * x796 + x2284 * x601 -
         x351 * x608 + x353 * x644 -
         (kf_qss[39] * sc[0] * x1352 + kf_qss[43] * sc[1] * x1355 * x66 +
          kf_qss[44] * sc[5] * x1361 + kf_qss[48] * sc[12] * x1358) /
           x583;
  x375 =
    -x1175 * x2179 * x318 - x1211 * x872 - x1389 * x2255 + x1459 * x242 -
    x1461 * x2188 - x1586 * x242 + x1587 * x2186 + x1588 * x2254 +
    x1589 * x2261 + x2284 * x318 - x321 * x753 - x351 * x568 - x373 * x649 -
    (4.035e+21 * refC * sc[17] * x256 * exp(x1434 + x240) +
     4800000000000000.0 * x1364 - 1.536e+31 * x1593 - 1.085415e+43 * x1597 -
     x252 * (3.0 * x247 * x691 + 0.42 * x691 * x862) -
     x273 * (3.0 * x268 * x691 + 0.42 * x691 * x874)) /
      x315;
  x468 =
    (-x1027 * x375 - x1031 * x753 + x1052 * x2266 - x1074 * x373 -
     x1389 * x2268 + x1416 * x2266 - x1461 * x341 + x1509 * x2186 +
     x1517 * x2254 + x1584 * x2261 - x2273 * x890 - x351 * x855 + x888 * x898 -
     (kf_qss[17] * sc[1] * x1396 + kf_qss[75] * sc[13] * x1390 +
      4.035e+16 * refC * sc[16] * x1401 * x846 - 1.085415e+33 * x1044 * x1513 -
      x842 * (0.42 * x1036 * x691 + 3.0 * x1037 * x691)) /
       x849) /
    x852;
  x694 = x1638 * x818 + x1782 * x758 + x286 * x758 + x791 * x798;
  x1593 = -x717 * x762 + x717 * x795 + x791 * x792;
  x1597 =
    kf_qss[22] / x422 - x1593 * x680 + x1842 * x758 + x694 * x826 - x717 * x720;
  x883 = -kf_qss[47] * x236 - kf_qss[82] * x312 -
         kf_qss[83] * exp(g_RT[11] - g_RT[17] - g_RT[2] + g_RT_qss[1]) + x883;
  x2147 = x1753 * x758 - x439 * x758 + x791 * x894;
  x2178 = x951 * x954 + x555 * x556 * x926 / ((x518) * (x518));
  x242 = -x1593 * x828 - x2147 * x428 + x2178 * x960 + x441 * x694 * x825 +
         x442 * x926 * x929 / ((x518) * (x518)) + x717 * x900 + x717 * x934 +
         x791 * x901;
  x872 = -kf_qss[47] - kf_qss[48];
  x2188 = x2178 * x985 + x442 * x926 * x981 / ((x518) * (x518)) - x872 * x978 +
          x872 * x980;
  x2255 = -x1597 * x608 - x2188 * x589 + x242 * x977 - x872 * x975;
  x2256 = x2178 * x968 - x717 * x965 + x717 * x967 +
          x602 * x926 * x929 / ((x518) * (x518));
  x2257 = x1002 * x1005 + x1008 * x872 + x1010 * x872 + x1011 * x242 +
          x1012 * x818 / ((x63) * (x63)) + x1013 * x2178 - x2188 * x899 -
          x2256 * x608 + x872 * x989 + x602 * x926 * x981 / ((x518) * (x518));
  x2266 = -x883 * x886 + x883 * x889 + x818 * x887 / ((x63) * (x63));
  x341 = -x2147 * x321 - x2266 * x828 + x441 * x694 * x856 - x883 * x893;
  x2268 = kf_qss[47] / x315 - x2256 * x568 + x242 * x964 - x341 * x899 +
          x883 * x892 - x883 * x970 + x818 * x971 / ((x63) * (x63));
  x2273 = x1017 * x2257 - x1018 * x883 - x1597 * x568 - x2255 * x649 -
          x2266 * x680 - x2268 * x973 + x242 * x988 - x341 * x589 +
          x694 * x857 + x758 * x858 / ((x169) * (x169));
  x1049 = -kf_qss[22] + x1049;
  amrex::Real x2324 = -kf_qss[82] * x172 * x312 / x63 +
                      x1028 * x758 / ((x169) * (x169)) - x1682 * x758 +
                      x1683 * x172 * x818;
  amrex::Real x2325 =
    -x1031 * x2147 + x1032 * x441 * x694 - x1049 * x1054 + x1049 * x1056;
  amrex::Real x2326 =
    -x1049 * x1058 + x1060 * x242 - x2256 * x855 - x2325 * x899;
  amrex::Real x2327 =
    -x1025 * x1593 - x1062 * x717 + x1063 * x694 - x2324 * x428;
  amrex::Real x2328 = kf_qss[47] * x236 / x583 -
                      kf_qss[82] * x312 * x601 / x63 - x1020 * x2188 +
                      x1069 * x872 + x1070 * x242 + x1683 * x601 * x818 -
                      x2327 * x608 - x668 * x872;
  amrex::Real x2329 = -x1020 * x2325 - x1023 * x2326 - x1031 * x2324 +
                      x1033 * x694 + x1049 * x1053 - x1049 * x1066 +
                      x1065 * x242 + x1068 * x2257 - x1074 * x2328 -
                      x2327 * x855;
  amrex::Real x2330 =
    -kf_qss[82] * x312 * x318 / x63 - x1020 * x341 - x1023 * x2268 -
    x1025 * x2266 + x1082 * x694 + x1083 * x883 + x1085 * x2257 + x1086 * x242 +
    x1683 * x318 * x818 - x2324 * x321 - x2327 * x568 - x2328 * x649;
  const amrex::Real x2331 =
    x854 * (-x1027 * x2273 + x1049 * x1080 - x1074 * x2255 - x1077 * x2329 +
            x1078 * x2257 + x1079 * x694 + x1081 * x242 + x1090 * x2330 +
            x1091 * x758 / ((x169) * (x169)) - x1597 * x855 - x2325 * x589 -
            x2326 * x973);
  x107 = -x107 / x169 - x1175 * x172 * x818 + x1494 * x232 / x228 + x1507 +
         x1705 * x758 - x1793 * x758 - x1855 * x758;
  x556 = -x1283 * x557 * x951 - x1284 * x556 * x926 / ((x518) * (x518)) +
         x1328 * x926 - x1549 / x518 + x1559 * x557 / x553;
  x717 = -x107 * x428 - x1208 * x425 * x790 - x1211 * x1593 +
         x1494 * x425 / x228 + x1535 * x2178 + x1563 * x717 - x1573 * x717 +
         x1574 * x717 + x1575 * x694 - x556 * x929 -
         (kf_qss[25] * sc[1] * x1234 + x1572) / x422;
  x1507 = -x1175 * x601 * x818 - x1461 * x2188 - x1519 * x872 + x1521 * x872 +
          x1523 * x2178 + x1531 * x644 / x639 - x1533 * x872 + x1534 * x242 +
          x1582 - x556 * x981 - x608 * x717 + x796 * x872;
  x1444 = -x107 * x321 - x1175 * x318 * x818 - x1211 * x2266 - x1389 * x2268 +
          x1459 * x883 - x1461 * x341 + x1506 * x318 - x1507 * x649 -
          x1586 * x883 + x1587 * x694 + x1588 * x242 + x1589 * x2257 -
          x568 * x717 - (((sc[1]) * (sc[1])) * x1444 + x1599) / x315;
  x1516 =
    (-x1027 * x1444 - x1031 * x107 + x1049 * x1052 + x1049 * x1416 -
     x1074 * x1507 - x1389 * x2326 - x1461 * x2325 + x1509 * x694 + x1516 +
     x1517 * x242 + x1584 * x2257 - x2329 * x890 + x2330 * x898 - x717 * x855) /
    x852;
  x1549 = x1057 - x415;
  x1572 = -kf_qss[131] * x66 * x72 + x1026;
  x1582 = -x1549 * x762 + x1549 * x795 + x1963;
  x1599 = x1572 * x1782 + x1572 * x286 + x1978;
  x1593 = -x1549 * x720 + x1572 * x1842 - x1582 * x680 + x1599 * x826;
  x883 =
    x1028 * x1572 / ((x169) * (x169)) - x1572 * x1682 + x172 * x1974 * x657;
  x872 = -kf_qss[54] + x1647;
  x2188 = -kf_qss[136] * x512 - kf_qss[139] * x452 * x66 + x1654;
  x2266 = x1657 * x954 + x2188 * x936 -
          x557 * (kf_qss[136] * x512 + kf_qss[139] * x452 * x66) / x553;
  x415 = x1061 * x894 / ((x228) * (x228)) + x1572 * x1753 - x1572 * x439 +
         x415 / x169;
  x341 = x1061 * x901 / ((x228) * (x228)) + x1549 * x900 + x1549 * x934 -
         x1582 * x828 + x1599 * x932 + x2188 * x931 + x2266 * x960 -
         x415 * x428;
  x2268 = -x1031 * x415 - x1054 * x872 + x1055 * x1599 + x1056 * x872;
  x1049 = -x1025 * x1582 - x1062 * x1549 + x1063 * x1599 - x428 * x883;
  x2325 = -x1549 * x965 + x1549 * x967 + x2188 * x966 + x2266 * x968;
  x2326 = -x1058 * x872 + x1060 * x341 - x2268 * x899 - x2325 * x855;
  x2329 = x1011 * x341 + x1013 * x2266 + x2038 + x2188 * x990 - x2325 * x608 -
          x899 * (x2188 * x983 + x2266 * x985);
  amrex::Real x2358 = -x1020 * (x2188 * x983 + x2266 * x985) - x1049 * x608 +
                      x1070 * x341 + x2046;
  amrex::Real x2359 = -x1020 * x2268 - x1023 * x2326 - x1031 * x883 +
                      x1033 * x1599 - x1049 * x855 + x1053 * x872 +
                      x1065 * x341 - x1066 * x872 + x1068 * x2329 -
                      x1074 * x2358;
  amrex::Real x2360 =
    -x1593 * x608 + x341 * x977 - x589 * (x2188 * x983 + x2266 * x985);
  amrex::Real x2361 =
    -kf_qss[107] * exp(g_RT[12] - g_RT[14] - g_RT[2] + g_RT_qss[1]) + x1666;
  amrex::Real x2362 = x1974 * x887 - x2361 * x886 + x2361 * x889;
  amrex::Real x2363 = x1599 * x897 - x2361 * x893 - x2362 * x828 - x321 * x415;
  amrex::Real x2364 = x1974 * x971 - x2325 * x568 + x2361 * x892 -
                      x2361 * x970 - x2363 * x899 + x341 * x964;
  amrex::Real x2365 = x1017 * x2329 - x1018 * x2361 +
                      x1572 * x858 / ((x169) * (x169)) - x1593 * x568 +
                      x1599 * x857 - x2360 * x649 - x2362 * x680 -
                      x2363 * x589 - x2364 * x973 + x341 * x988;
  amrex::Real x2366 = -x1020 * x2363 - x1023 * x2364 - x1025 * x2362 -
                      x1049 * x568 + x1082 * x1599 + x1083 * x2361 +
                      x1085 * x2329 + x1086 * x341 + x2049 - x2358 * x649 -
                      x321 * x883;
  const amrex::Real x2367 =
    x854 * (-x1027 * x2365 - x1074 * x2360 - x1077 * x2359 + x1078 * x2329 +
            x1079 * x1599 + x1080 * x872 + x1081 * x341 + x1090 * x2366 +
            x1091 * x1572 / ((x169) * (x169)) - x1593 * x855 - x2268 * x589 -
            x2326 * x973);
  amrex::Real x2369 = x1572 * x1705 - x1572 * x1793 - x1572 * x1855 + x2060 +
                      x232 * (kf_qss[103] * x1177 * x1178 + x182) / x228 -
                      x184 / x169;
  amrex::Real x2370 =
    x1328 * x2188 - x1537 * x2188 + x1789 + x2108 -
    (kf_qss[117] * sc[8] * x1293 + kf_qss[122] * sc[8] * x1325 * x66 + x1720) /
      x518;
  amrex::Real x2371 =
    (kf_qss[65] * sc[0] * x1383 + kf_qss[68] * sc[4] * x1379 +
     kf_qss[69] * sc[5] * x1376 + sc[1] * x1370 + sc[6] * x1366 + x839) /
    x639;
  x1549 = x1161 - x1211 * x1582 + x1535 * x2266 + x1549 * x1563 -
          x1549 * x1573 + x1549 * x1574 + x1575 * x1599 - x2369 * x428 -
          x2370 * x929 -
          (kf_qss[49] * sc[1] + kf_qss[50] * sc[2] + kf_qss[51] * sc[4] +
           kf_qss[52] * sc[3] + kf_qss[53] * sc[6] + kf_qss[61] * sc[8] +
           1350000000000.0 * x1252 * x788 + x1730) /
            x422 +
          x425 * (kf_qss[103] * x1177 * x1178 + x182) / x228;
  x1582 = -x1461 * (x2188 * x983 + x2266 * x985) + x1523 * x2266 +
          x1534 * x341 - x1549 * x608 + x1750 + x1970 - x2370 * x981 +
          x2371 * x644 -
          (kf_qss[41] * sc[1] * x1342 + kf_qss[48] * sc[10] * x1358) / x583;
  x1808 =
    -x1211 * x2362 - x1389 * x2364 + x1459 * x2361 - x1461 * x2363 -
    x1549 * x568 - x1582 * x649 - x1586 * x2361 + x1587 * x1599 + x1588 * x341 +
    x1589 * x2329 + x1808 + x2069 - x2369 * x321 -
    (kf_qss[32] * sc[1] * x1425 + kf_qss[34] * sc[4] * x1422 + x1670) / x315;
  x1407 = (-x1027 * x1808 - x1031 * x2369 + x1052 * x872 - x1074 * x1582 -
           x1389 * x2326 + x1416 * x872 - x1461 * x2268 + x1509 * x1599 +
           x1517 * x341 - x1549 * x855 + x1584 * x2329 - x2359 * x890 +
           x2366 * x898 - (sc[1] * x1407 + x837) / x849) /
          x852;
  x359 = -3.0 * kf_qss[16] - 4050000000000.0 * sc[1] * x359 * exp(x343) +
         5.4675e+24 * x1050 - 6.6e+36 * x382 * x715 +
         x699 * (0.84 * x691 * x693 + 6.0 * x696) + 1.452e+73 * x702 * x703 +
         x714 * (0.84 * x691 * x707 + 6.0 * x691 * x711);
  x699 = (-kf_qss[78] + x359) / ((x422) * (x422));
  x714 = -1.14e+30 * refC * x218 * exp(x201 + x202) - 1.56e+28 * x191 * x783 +
         x771 * (6.0 * x691 * x768 + 0.84 * x767) + 8.112e+55 * x774 * x775 +
         x782 * (0.84 * x209 * x691 + 6.0 * x691 * x778) +
         4.332e+59 * x785 * x789;
  x92 = x230 * x424 * x699 -
        x699 * (kf_qss[91] * sc[3] + sc[10] * x92 + 10.0e-13) +
        x714 * x792 / ((x228) * (x228));
  x110 =
    -4.2e+18 * sc[1] * x153 * exp(x137) +
    5.88e+36 * sc[1] * x729 * exp(-3341.3586609433401 * invT - 7.72 * tc[0]) -
    7.695e+21 * x110 - 1.281e+47 * x134 * x748 +
    x728 * (6.0 * x144 * x691 + 0.84 * x691 * x723) +
    5.46987e+93 * x736 * x737 +
    x744 * (6.0 * x100 * x691 + 0.84 * x691 * x740) + 1.9737675e+43 * x747 +
    x757 * (0.84 * ((x125) * (x125)) * x691 / ((x127) * (x127) * (x127)) +
            6.0 * x754);
  x57 = -2.1e+45 * refCinv * sc[0] * x57 +
        x810 * (6.0 * x46 * x691 + 0.84 * x691 * x806) + 1.47e+90 * x814 * x816;
  x153 = -6125000000.0 * x30 + x57 + 1.500625e+19 * x813;
  x728 = x110 / ((x169) * (x169));
  x744 = x110 * x286 + x153 * x1638 + x171 * x65 * x728 +
         x714 * x798 / ((x228) * (x228));
  x433 = x110 * x1842 - x433 * x699 - x680 * x92 + x744 * x826;
  x747 = x110 * x1753 - x110 * x439 + x714 * x894 / ((x228) * (x228));
  x757 = x1041 * (0.84 * x1036 * x691 + 6.0 * x1037 * x691) -
         8.07e+16 * x1042 * x846 + 2.17083e+33 * x1044 * x1047;
  x771 = -x1031 * (kf_qss[78] / x169 + x747) - x1054 * x757 + x1055 * x744 +
         x1056 * x757;
  x489 = -5.97e+29 * sc[1] * x508 * exp(x492) + 1.18803e+59 * x1652 -
         3.6e+30 * x489 + x908 * (6.0 * x478 * x691 + 0.84 * x691 * x904) +
         4.32e+60 * x912 + x925 * (6.0 * x499 * x691 + 0.84 * x691 * x921);
  x782 = x1657 * x954 + x489 * x936;
  x789 = x489 * x966 + x562 * x603 * x699 + x782 * x968 -
         x965 * (-kf_qss[78] + x359);
  x810 = x424 * x437 * x699 - x428 * (kf_qss[78] / x169 + x747) + x489 * x931 +
         x561 * x562 * x699 + x744 * x932 + x782 * x960 - x828 * x92 +
         x714 * x901 / ((x228) * (x228));
  x814 = -x1058 * x757 + x1060 * x810 - x771 * x899 - x789 * x855;
  x816 = x1028 * x728 - x110 * x1682 + x153 * x1683 * x172;
  x664 = -x1025 * x92 - x428 * x816 + x662 * x744 * x825 - x664 * x699;
  x908 = x489 * x983 + x782 * x985;
  x912 = -x1020 * x908 + x1070 * x810 + x153 * x1683 * x601 - x608 * x664;
  x637 = x1001 * (6.0 * x626 * x691 + 0.84 * x691 * x997) +
         1.452e+37 * x622 * x994 - 6.6e+18 * x637;
  x925 = x1005 * x637 + x1011 * x810 + x1012 * x153 / ((x63) * (x63)) +
         x1013 * x782 + x489 * x990 - x608 * x789 - x899 * x908;
  x994 = -x1031 * x816 + x1032 * x662 * x744 + x1053 * x757 - x1066 * x757;
  x1001 = -x1020 * x771 - x1023 * x814 + x1065 * x810 + x1068 * x925 -
          x1074 * x912 - x664 * x855 + x994;
  x256 =
    -8.07e+21 * sc[10] * x256 * exp(x240) +
    2.17083e+43 * sc[10] * x879 *
      exp(-7140.6444877689701 * invT - 10.22 * tc[0]) -
    9600000000000000.0 * sc[1] * x277 * exp(x261) +
    3.072e+31 * sc[1] * x868 * exp(-1237.91299787961 * invT - 6.28 * tc[0]) +
    x866 * (6.0 * x247 * x691 + 0.84 * x691 * x862) +
    x878 * (6.0 * x268 * x691 + 0.84 * x691 * x874);
  x261 = x153 * x887 / ((x63) * (x63)) - x256 * x886 + x256 * x889;
  x277 = -x256 * x893 - x261 * x828 - x321 * (kf_qss[78] / x169 + x747) +
         x744 * x897;
  x866 = x153 * x971 / ((x63) * (x63)) + x256 * x892 - x256 * x970 -
         x277 * x899 - x568 * x789 + x810 * x964;
  x878 = -x1020 * x277 - x1023 * x866 - x1025 * x261 + x1083 * x256 +
         x1085 * x925 + x1086 * x810 + x153 * x1683 * x318 - x321 * x816 -
         x568 * x664 - x649 * x912 + x662 * x744 * x856;
  x1032 = -x433 * x608 - x589 * x908 + x810 * x977;
  x1041 = x1017 * x925 - x1018 * x256 - x1032 * x649 - x261 * x680 -
          x277 * x589 - x433 * x568 + x728 * x858 + x744 * x857 + x810 * x988 -
          x866 * x973;
  x1050 =
    x854 * (-x1001 * x1077 - x1027 * x1041 - x1032 * x1074 + x1078 * x925 +
            x1079 * x744 + x1080 * x757 + x1081 * x810 + x1090 * x878 +
            x1091 * x728 - x433 * x855 - x589 * x771 - x814 * x973);
  x125 = -x105 * (6.0 * x100 * x691 + 0.84 * x691 * x740) +
         7.695e+21 * x1128 * x1131 + 4.2e+18 * x1136 * x1468 -
         x130 * (0.84 * ((x125) * (x125)) * x691 / ((x127) * (x127) * (x127)) +
                 6.0 * x754) +
         1.281e+47 * x134 * x1474 -
         5.88e+36 * x1468 * x729 *
           exp(-3341.3586609433401 * invT - 7.72 * tc[0] + x1135) -
         5.46987e+93 * x1477 * x737 -
         x149 * (6.0 * x144 * x691 + 0.84 * x691 * x723) - 1.9737675e+43 * x97;
  x127 = 2.1e+45 * sc[14] * x56 * exp(x34) - 1.47e+90 * x1505 -
         x52 * (6.0 * x46 * x691 + 0.84 * x691 * x806);
  x28 = (kf_qss[79] * sc[1] * x1167 + 6125000000.0 * x1173 + x127 -
         1.500625e+19 * x1500 + 2450000000.0 * x22 * exp(x24) / x28) /
        x63;
  x218 = (1.14e+30 * x1199 * x218 * exp(x202) - 8.112e+55 * x1487 * x775 +
          1.56e+28 * x1490 * x191 - 4.332e+59 * x1493 * x785 -
          x187 * (6.0 * x691 * x768 + 0.84 * x767) -
          x214 * (0.84 * x209 * x691 + 6.0 * x691 * x778)) /
         x228;
  x723 = x110 * x1705 - x110 * x1793 - x1176 * x171 * x728 -
         x1208 * x232 * x714 + x218 * x232;
  x144 = -x1175 * x153 * x172 + x172 * x28 + x723 -
         (kf_qss[84] * sc[0] * x1124 + kf_qss[88] * sc[5] * x1145 +
          kf_qss[95] * sc[9] * x1158 +
          2.565e+21 * refCinv * sc[1] * x1131 * x40 + sc[6] * x1121 + x125) /
           x169;
  x693 = 3.0 * kf_qss[16] * x1246 * x1248 + 4050000000000.0 * x1252 * x1564 +
         6.6e+36 * x1568 * x382 - 1.452e+73 * x1570 * x703 -
         x356 * (0.84 * x691 * x693 + 6.0 * x696) -
         x378 * (0.84 * x691 * x707 + 6.0 * x691 * x711) - 5.4675e+24 * x686;
  x696 = 3.6e+30 * x1289 * x487 * exp(x471) + 5.97e+29 * x1314 * x1539 * x508 -
         4.32e+60 * x1547 - x483 * (6.0 * x478 * x691 + 0.84 * x691 * x904) -
         x504 * (6.0 * x499 * x691 + 0.84 * x691 * x921) - 1.18803e+59 * x914;
  x703 = x1328 * x489 - x1537 * x489 + x1789 + x2108 - x696 / x518;
  x707 = -x1208 * x425 * x714 + x218 * x425;
  x424 = -x1209 * x424 * x699 - x1211 * x92 + x1264 * x699 +
         x1329 * x559 * x562 * x699 - x144 * x428 + x1535 * x782 +
         x1575 * x744 - x703 * x929 + x707 - x693 / x422;
  x635 = (6.6e+18 * x1369 * x635 * exp(x618) - 1.452e+37 * x1528 * x622 -
          x631 * (6.0 * x626 * x691 + 0.84 * x691 * x997)) /
         x639;
  x711 =
    -x1175 * x153 * x601 - x1386 * x637 * x644 + x1523 * x782 + x635 * x644;
  x729 = -x1461 * x908 + x1534 * x810 + x28 * x601 - x424 * x608 - x703 * x981 +
         x711;
  x737 = -2.17083e+43 * refC * sc[17] * x879 *
           exp(-7140.6444877689701 * invT - 10.22 * tc[0] + x1434) -
         3.072e+31 * refC * sc[8] * x868 *
           exp(-1237.91299787961 * invT - 6.28 * tc[0] + x1446) +
         9600000000000000.0 * x1364 + 8.07e+21 * x1595 -
         x252 * (6.0 * x247 * x691 + 0.84 * x691 * x862) -
         x273 * (6.0 * x268 * x691 + 0.84 * x691 * x874);
  x740 = -x1175 * x153 * x318 - x1211 * x261 - x1389 * x866 - x144 * x321 +
         x1459 * x256 - x1461 * x277 - x1586 * x256 + x1587 * x744 +
         x1588 * x810 + x1589 * x925 + x28 * x318 - x424 * x568 - x649 * x729 -
         (kf_qss[35] * sc[1] * x1412 + 2.0 * kf_qss[36] * sc[0] * x1456 +
          kf_qss[77] * sc[2] + x737) /
           x315;
  x100 = 8.07e+16 * refC * sc[16] * x1401 * x846 - 2.17083e+33 * x1044 * x1513 -
         x842 * (0.84 * x1036 * x691 + 6.0 * x1037 * x691);
  x754 =
    (-x1001 * x890 - x1027 * x740 - x1031 * x144 + x1052 * x757 - x1074 * x729 -
     x1389 * x814 + x1416 * x757 - x1461 * x771 + x1509 * x744 + x1517 * x810 +
     x1584 * x925 - x424 * x855 + x878 * x898 -
     (kf_qss[35] * sc[1] * x1412 + kf_qss[75] * sc[10] * x1390 + x100) / x849) /
    x852;
  x767 = -kf_qss[111] + x256;
  x768 = -kf_qss[110] + x359;
  x775 = -x762 * x768 + x768 * x795 + x714 * x792 / ((x228) * (x228));
  x778 = x110 * x1842 - x680 * x775 - x720 * x768 + x744 * x826;
  x209 = x153 * x887 / ((x63) * (x63)) - x767 * x886 + x767 * x889;
  x785 = -kf_qss[112] - kf_qss[113];
  x806 = -kf_qss[110] * x559 * x562 / (x422 * x518) - x428 * x747 +
         x489 * x931 + x744 * x932 + x768 * x900 + x768 * x934 - x775 * x828 +
         x782 * x960 + x714 * x901 / ((x228) * (x228));
  x46 = x489 * x966 - x768 * x965 + x768 * x967 + x782 * x968;
  x862 = -kf_qss[110] * x559 * x585 / (x518 * x583) - x785 * x978 +
         x785 * x980 + x908;
  x247 = -kf_qss[112] * x601 / x63 + x1005 * x637 + x1008 * x785 +
         x1010 * x785 + x1011 * x806 + x1012 * x153 / ((x63) * (x63)) +
         x1013 * x782 - x46 * x608 + x489 * x990 + x785 * x989 - x862 * x899;
  x868 = -x209 * x828 - x321 * x747 + x744 * x897 - x767 * x893;
  x874 = -x589 * x862 - x608 * x778 - x785 * x975 + x806 * x977;
  x268 = -kf_qss[112] * x318 / x63 + x153 * x971 / ((x63) * (x63)) -
         x46 * x568 + x767 * x892 - x767 * x970 + x806 * x964 - x868 * x899;
  x879 = x1017 * x247 - x1018 * x767 - x209 * x680 - x268 * x973 - x568 * x778 -
         x589 * x868 - x649 * x874 + x728 * x858 + x744 * x857 + x806 * x988;
  x825 = -x1025 * x775 - x1062 * x768 - x428 * x816 + x662 * x744 * x825;
  x904 = -x1020 * x862 + x1069 * x785 + x1070 * x806 + x153 * x1683 * x601 -
         x608 * x825 - x668 * x785;
  x856 = -x1020 * x868 - x1023 * x268 - x1025 * x209 + x1083 * x767 +
         x1085 * x247 + x1086 * x806 + x153 * x1683 * x318 - x321 * x816 -
         x568 * x825 - x649 * x904 + x662 * x744 * x856;
  x478 = -x1031 * x747 - x1054 * x757 + x1056 * x757;
  x921 =
    -x1058 * x757 + x1060 * x806 - x46 * x855 - x899 * (x1055 * x744 + x478);
  x499 = -x1020 * (x1055 * x744 + x478) - x1023 * x921 + x1065 * x806 +
         x1068 * x247 - x1074 * x904 - x825 * x855 + x994;
  x622 = x854 * (-x1027 * x879 - x1074 * x874 - x1077 * x499 + x1078 * x247 +
                 x1079 * x744 + x1080 * x757 + x1081 * x806 + x1090 * x856 +
                 x1091 * x728 - x589 * (x1055 * x744 + x478) - x778 * x855 -
                 x921 * x973);
  x37 = (6125000000.0 * x1173 + x127 - 1.500625e+19 * x1500 + x37 * x40 * x56) /
        x63;
  x56 =
    -x1175 * x153 * x172 + x172 * x37 + x723 -
    (kf_qss[104] * sc[1] + kf_qss[105] * sc[2] + kf_qss[108] * sc[4] +
     kf_qss[109] * sc[3] + kf_qss[114] * sc[8] + kf_qss[94] * sc[10] * x1108 +
     sc[6] * x1155 + 1.4e+18 * x1136 * x788 + x125) /
      x169;
  x473 = x1328 * x489 - x1537 * x489 + x2108 +
         x557 * (kf_qss[115] * sc[8] + x1724) / x553 -
         (kf_qss[116] * sc[0] * x1310 + kf_qss[119] * sc[6] * x1307 +
          kf_qss[121] * sc[7] * x1304 + x473 * x487 * x773 + x696) /
           x518;
  x487 = -x1211 * x775 + x1535 * x782 + x1563 * x768 - x1573 * x768 +
         x1574 * x768 + x1575 * x744 - x428 * x56 - x473 * x929 + x707 -
         (kf_qss[106] * sc[2] + kf_qss[94] * sc[10] * x1108 + x693) / x422;
  x997 = -sc[1] * x1338 / x583 - x1461 * x862 - x1519 * x785 + x1521 * x785 -
         x1533 * x785 + x1534 * x806 + x37 * x601 - x473 * x981 - x487 * x608 +
         x711 + x785 * x796;
  x626 = -x1175 * x153 * x318 - x1211 * x209 - x1389 * x268 + x1459 * x767 -
         x1461 * x868 - x1586 * x767 + x1587 * x744 + x1588 * x806 +
         x1589 * x247 + x318 * x37 - x321 * x56 - x487 * x568 - x649 * x997 -
         (kf_qss[107] * sc[2] + kf_qss[62] * sc[1] * x1439 + x737) / x315;
  x1036 =
    (-x1027 * x626 - x1031 * x56 + x1052 * x757 - x1074 * x997 - x1389 * x921 +
     x1416 * x757 - x1461 * (x1055 * x744 + x478) + x1509 * x744 +
     x1517 * x806 + x1584 * x247 - x487 * x855 - x499 * x890 + x856 * x898 -
     (kf_qss[71] * sc[1] * x1393 + x100) / x849) /
    x852;
  x792 = -x359 * x762 + x359 * x795 + x714 * x792 / ((x228) * (x228));
  x30 = -7350000000.0 * x30 + x57 + 1.80075e+19 * x813;
  x171 = x1 * x172 * x30 / ((x63) * (x63)) + x110 * x286 + x171 * x65 * x728 +
         x714 * x798 / ((x228) * (x228));
  x798 = x110 * x1842 + x171 * x826 - x359 * x720 - x680 * x792;
  x813 = -x256 * x886 + x256 * x889 + x30 * x887 / ((x63) * (x63));
  x950 = 1.175628e+54 * refC * x937 *
           exp(-7045.0333212660798 * invT - 13.32 * tc[0] + x543) -
         1.878e+27 * x540 * x545 + x950 * (0.84 * x532 + 6.0 * x946);
  x1037 = x489 * x936 + x950 * x954;
  x1044 = x1037 * x960 + x171 * x932 + x359 * x900 + x359 * x934 - x428 * x747 +
          x489 * x931 - x792 * x828 + x714 * x901 / ((x228) * (x228));
  x1121 = kf_qss[128] * x978 - kf_qss[128] * x980 + x1037 * x985 + x489 * x983;
  x1131 = kf_qss[128] * x975 + x1044 * x435 * x588 - x1121 * x589 - x608 * x798;
  x562 = -kf_qss[128] * x559 * x562 / (x422 * x518) + x1037 * x968 -
         x359 * x965 + x359 * x967 + x489 * x966;
  x585 = -kf_qss[128] * x1008 - kf_qss[128] * x1010 - kf_qss[128] * x989 -
         kf_qss[128] * x559 * x585 / (x518 * x583) + x1005 * x637 +
         x1012 * x30 / ((x63) * (x63)) + x1013 * x1037 + x1044 * x588 * x607 -
         x1121 * x899 + x489 * x990 - x562 * x608;
  x1005 = x171 * x897 - x256 * x893 - x321 * x747 - x813 * x828;
  x1012 = -x1005 * x899 + x1044 * x964 + x256 * x892 - x256 * x970 +
          x30 * x971 / ((x63) * (x63)) - x562 * x568;
  x1136 = -x1005 * x589 - x1012 * x973 + x1017 * x585 - x1018 * x256 +
          x1044 * x988 - x1131 * x649 + x171 * x857 - x568 * x798 -
          x680 * x813 + x728 * x858;
  x1155 =
    x1044 * x1060 - x1058 * x757 - x562 * x855 - x899 * (x1055 * x171 + x478);
  x1246 = x1028 * x728 - x110 * x1682 + x172 * x30 * x657 / ((x63) * (x63));
  x1252 = -x1025 * x792 - x1062 * x359 + x1063 * x171 - x1246 * x428;
  x1264 = -kf_qss[128] * x1069 + kf_qss[128] * x668 - x1020 * x1121 +
          x1044 * x1070 - x1252 * x608 + x30 * x601 * x657 / ((x63) * (x63));
  x1338 = -x1005 * x1020 - x1012 * x1023 - x1025 * x813 + x1044 * x1086 +
          x1082 * x171 + x1083 * x256 + x1085 * x585 - x1246 * x321 -
          x1252 * x568 - x1264 * x649 + x30 * x318 * x657 / ((x63) * (x63));
  x149 = -x1020 * (x1055 * x171 + x478) - x1023 * x1155 - x1031 * x1246 +
         x1033 * x171 + x1044 * x1065 + x1053 * x757 - x1066 * x757 +
         x1068 * x585 - x1074 * x1264 - x1252 * x855;
  x130 = x854 * (-x1027 * x1136 + x1044 * x1081 - x1074 * x1131 - x1077 * x149 +
                 x1078 * x585 + x1079 * x171 + x1080 * x757 + x1090 * x1338 +
                 x1091 * x728 - x1155 * x973 - x589 * (x1055 * x171 + x478) -
                 x798 * x855);
  x1173 = (7350000000.0 * x1173 + x127 - 1.80075e+19 * x1500) / x63;
  x97 = x1173 * x172 - x1175 * x172 * x30 - x125 / x169 + x723;
  x937 = (-1.175628e+54 * sc[1] * sc[20] * x937 *
            exp(-7045.0333212660798 * invT - 13.32 * tc[0]) +
          1.878e+27 * x1554 * x540 - x537 * (0.84 * x532 + 6.0 * x946)) /
         x553;
  x508 = -x1283 * x557 * x950 + x1328 * x489 - x1537 * x489 + x557 * x937 -
         (kf_qss[120] * sc[3] * x1321 + kf_qss[124] * sc[10] * x1260 +
          kf_qss[125] * sc[1] + kf_qss[126] * sc[2] + kf_qss[127] * sc[4] +
          kf_qss[129] * sc[8] + sc[6] * x1297 + 1.99e+29 * x1314 * x508 * x788 +
          x696) /
           x518;
  x946 = x1037 * x1535 - x1211 * x792 + x1563 * x359 - x1573 * x359 +
         x1574 * x359 + x1575 * x171 - x428 * x97 - x508 * x929 + x707 -
         (kf_qss[124] * sc[10] * x1260 + x693) / x422;
  x532 = kf_qss[128] * x1519 - kf_qss[128] * x1521 + kf_qss[128] * x1533 -
         kf_qss[128] * x796 + x1037 * x1523 + x1044 * x427 * x588 -
         x1121 * x1461 + x1173 * x601 - x1175 * x30 * x601 -
         x1386 * x637 * x644 - x508 * x981 - x608 * x946 + x635 * x644;
  x588 = -x1005 * x1461 - x1012 * x1389 + x1044 * x1588 + x1173 * x318 -
         x1175 * x30 * x318 - x1211 * x813 + x1459 * x256 - x1586 * x256 +
         x1587 * x171 + x1589 * x585 - x321 * x97 - x532 * x649 - x568 * x946 -
         x737 / x315;
  x1297 = (-x100 / x849 - x1027 * x588 - x1031 * x97 + x1044 * x1517 +
           x1052 * x757 - x1074 * x532 - x1155 * x1389 + x1338 * x898 +
           x1416 * x757 - x1461 * (x1055 * x171 + x478) - x149 * x890 +
           x1509 * x171 + x1584 * x585 - x855 * x946) /
          x852;
  x1314 = x1026 * x1782 + x1026 * x286 + x1978;
  x1028 =
    x1026 * x1028 / ((x169) * (x169)) - x1026 * x1682 + x172 * x1974 * x657;
  x105 = -kf_qss[75] + x1647;
  x894 = x1026 * x1753 - x1026 * x439 + x1061 * x894 / ((x228) * (x228));
  x1055 = -x1031 * x894 + x1055 * x1314;
  x1054 = -x105 * x1054 + x105 * x1056 + x1055;
  x936 = x1654 * x936 + x1657 * x954;
  x954 = -x1057 * x965 + x1057 * x967 + x1654 * x966 + x936 * x968;
  x1056 = -x1057 * x762 + x1057 * x795 + x1963;
  x901 = x1061 * x901 / ((x228) * (x228)) + x1314 * x932 + x1654 * x931 -
         x428 * x894 + x936 * x960;
  x931 = -x1056 * x828 + x1057 * x900 + x1057 * x934 + x901;
  x932 = x1060 * x931 - x855 * x954;
  x960 = -x105 * x1058 - x1054 * x899 + x932;
  x214 = -x1025 * x1056 - x1057 * x1062 + x1063 * x1314 -
         x428 * (kf_qss[76] / x169 + x1028);
  x983 = x1654 * x983 + x936 * x985;
  x985 = -x1020 * x983 + x1070 * x931 + x2046 - x214 * x608;
  x187 = x1011 * x931 + x1013 * x936 + x1654 * x990 + x2038 - x608 * x954 -
         x899 * x983;
  x1053 = -x1020 * x1054 - x1023 * x960 - x1031 * (kf_qss[76] / x169 + x1028) +
          x1033 * x1314 + x105 * x1053 - x105 * x1066 + x1065 * x931 +
          x1068 * x187 - x1074 * x985 - x214 * x855;
  x1066 = -kf_qss[76] + x1666;
  x1493 = -x1066 * x886 + x1066 * x889 + x1974 * x887;
  x897 = x1314 * x897 - x321 * x894;
  x1500 = -x1066 * x893 - x1493 * x828 + x897;
  x52 = x1974 * x971 - x568 * x954 + x931 * x964;
  x1505 = x1066 * x892 - x1066 * x970 - x1500 * x899 + x52;
  x842 = x1026 * x1842 - x1056 * x680 - x1057 * x720 + x1314 * x826;
  x1528 = -x589 * x983 - x608 * x842 + x931 * x977;
  x631 =
    x1026 * x858 / ((x169) * (x169)) + x1314 * x857 - x568 * x842 + x931 * x988;
  x483 = x1017 * x187 - x1018 * x1066 - x1493 * x680 - x1500 * x589 -
         x1505 * x973 - x1528 * x649 + x631;
  x1547 = -x1020 * x1500 - x1023 * x1505 - x1025 * x1493 + x1066 * x1083 +
          x1082 * x1314 + x1085 * x187 + x1086 * x931 + x2049 - x214 * x568 -
          x321 * (kf_qss[76] / x169 + x1028) - x649 * x985;
  x504 = x854 * (x1026 * x1091 / ((x169) * (x169)) - x1027 * x483 +
                 x105 * x1080 - x1053 * x1077 - x1054 * x589 - x1074 * x1528 +
                 x1078 * x187 + x1079 * x1314 + x1081 * x931 + x1090 * x1547 -
                 x842 * x855 - x960 * x973);
  x537 = x1026 * x1705 - x1026 * x1793 - x1026 * x1855;
  x378 = x1797 + x2060 + x537 - x184 / x169;
  x1328 = x1328 * x1654 - x1537 * x1654 + x2108;
  x1537 = x1328 - x1720 / x518;
  x356 = -x1056 * x1211 + x1057 * x1563 - x1057 * x1573 + x1057 * x1574 +
         x1161 + x1314 * x1575 + x1535 * x936;
  x252 = x2112 + x356 - x378 * x428 - x929 * (x1537 + x1789);
  x1595 = -x1461 * x983 + x1523 * x936 + x1970 + x644 * x839 / x639;
  x273 = -kf_qss[74] * sc[1] / x583 + x1534 * x931 + x1595 + x1750 -
         x252 * x608 - x981 * (x1537 + x1789);
  x648 = x1314 * x1587 + x1388 * x187 * x648 / ((x645) * (x645)) + x1588 * x931;
  x1638 = x1066 * x1459 - x1066 * x1586 - x1211 * x1493 - x1389 * x1505 -
          x1461 * x1500 + x2071 - x252 * x568 - x273 * x649 - x321 * x378 +
          x648;
  x846 =
    (x1022 * x1388 * x187 / ((x645) * (x645)) - x1027 * x1638 - x1031 * x378 +
     x105 * x1052 + x105 * x1416 - x1053 * x890 - x1054 * x1461 - x1074 * x273 +
     x1314 * x1509 - x1389 * x960 + x1517 * x931 + x1547 * x898 - x252 * x855 -
     (2.69e+16 * x1401 * x788 * x846 + x837) / x849) /
    x852;
  x1052 = x1666 * x892 - x1666 * x970 - x899 * (x2090 + x897);
  x1416 = x1017 * x187 - x1528 * x649 + x2094 - x589 * (x2090 + x897) + x631 -
          x973 * (x1052 + x52);
  x439 = -x1025 * x1056 - x1028 * x428 - x1057 * x1062 + x1063 * x1314;
  x1652 = -x1020 * x983 + x1070 * x931 + x2046 - x439 * x608;
  x1682 =
    -x1020 * (x2090 + x897) - x1025 * x2089 - x1028 * x321 + x1083 * x1666;
  x1683 = -x1023 * (x1052 + x52) + x1082 * x1314 + x1085 * x187 + x1086 * x931 -
          x1652 * x649 + x1682 + x2049 - x439 * x568;
  x1058 = -x1058 * x1647 - x899 * (x1055 + x1648);
  x1705 = -x1020 * (x1055 + x1648) - x1023 * (x1058 + x932) - x1028 * x1031 +
          x1033 * x1314 + x1065 * x931 + x1689 - x439 * x855;
  x1079 = x1026 * x1091 / ((x169) * (x169)) + x1079 * x1314 + x1080 * x1647 -
          x589 * (x1055 + x1648);
  x1080 = x854 * (-x1027 * x1416 - x1074 * x1528 -
                  x1077 * (x1068 * x187 - x1074 * x1652 + x1705) +
                  x1078 * x187 + x1079 + x1081 * x931 + x1090 * x1683 -
                  x842 * x855 - x973 * (x1058 + x932));
  x1091 = (kf_qss[102] * sc[6] * x1182 + sc[0] * x1203 + sc[1] * x1200 +
           sc[4] * x1206 + sc[5] * x1186 + x182) /
          x228;
  x1186 = (kf_qss[81] * sc[1] * x1164 + x1708) / x63;
  x1206 = -x1061 * x1208 * x232 + x1091 * x232 - x1175 * x1636 * x172 +
          x1186 * x172 + x537 - (kf_qss[86] * sc[1] * x1150 + x184) / x169;
  x1647 =
    x1091 * x425 - x1206 * x428 - x1730 / x422 + x356 - x929 * (x1537 + x1789);
  x914 =
    x1186 * x601 + x1534 * x931 + x1595 - x1647 * x608 - x981 * (x1537 + x1789);
  x686 = -x1389 * (x1052 + x52) - x1461 * (x2090 + x897) + x2117;
  x1437 = x1186 * x318 - x1206 * x321 - x1647 * x568 + x2069 + x648 -
          x649 * x914 + x686 -
          (kf_qss[83] * sc[2] + refC * x1437 + x1670) / x315;
  x1509 = x1314 * x1509 - x1461 * (x1055 + x1648);
  x1022 = x1022 * x1388 * x187 / ((x645) * (x645)) + x1517 * x931 +
          x1683 * x898 - x890 * (x1068 * x187 - x1074 * x1652 + x1705);
  x849 = (x1022 - x1027 * x1437 - x1031 * x1206 - x1074 * x914 -
          x1389 * (x1058 + x932) + x1509 - x1647 * x855 + x1669 -
          (sc[1] * x1410 + x837) / x849) /
         x852;
  x1410 = x2060 + x537 + x232 * (x1192 * x191 + x182) / x228 - x184 / x169;
  x837 = x1328 + x1789 - (kf_qss[118] * sc[1] * x1299 + x1720) / x518;
  x382 = -x1410 * x428 + x356 - x837 * x929 -
         (2.2e+36 * x1229 * x382 * x788 + x1730) / x422 +
         x425 * (x1192 * x191 + x182) / x228;
  x286 = x1534 * x931 + x1595 + x1750 - x382 * x608 - x837 * x981;
  x1753 = -x1410 * x321 + x2071 - x286 * x649 - x382 * x568 + x648 + x686;
  x1793 = -x1389 * (x1058 + x932) + x1509 + x1669 + x1761;
  x1782 = (x1022 - x1027 * x1753 - x1031 * x1410 - x1074 * x286 + x1793 -
           x382 * x855) /
          x852;
  x1057 = -kf_qss[132] + x1057;
  x762 = -x1057 * x762 + x1057 * x795 + x1963;
  x795 = x1057 * x900 + x1057 * x934 - x762 * x828 + x901;
  x900 = -x1025 * x762 - x1028 * x428 - x1057 * x1062 + x1063 * x1314;
  x934 = -x1057 * x965 + x1057 * x967 + x1654 * x966 + x936 * x968;
  x965 = x1058 + x1060 * x795 - x855 * x934;
  x966 = x1011 * x795 + x1013 * x936 + x1654 * x990 + x2038 - x608 * x934 -
         x899 * x983;
  x967 = -x1020 * x983 + x1070 * x795 + x2046 - x608 * x900;
  x968 = -x1020 * (x1055 + x1648) - x1023 * x965 - x1028 * x1031 +
         x1033 * x1314 + x1065 * x795 + x1068 * x966 - x1074 * x967 + x1689 -
         x855 * x900;
  x964 = x1052 + x1974 * x971 - x568 * x934 + x795 * x964;
  x720 = x1026 * x1842 - x1057 * x720 + x1314 * x826 - x680 * x762;
  x826 = -x589 * x983 - x608 * x720 + x795 * x977;
  x857 = x1017 * x966 + x1026 * x858 / ((x169) * (x169)) + x1314 * x857 +
         x2094 - x568 * x720 - x589 * (x2090 + x897) - x649 * x826 +
         x795 * x988 - x964 * x973;
  x858 = -x1023 * x964 + x1082 * x1314 + x1085 * x966 + x1086 * x795 + x1682 +
         x2049 - x568 * x900 - x649 * x967;
  x971 =
    x854 * (-x1027 * x857 - x1074 * x826 - x1077 * x968 + x1078 * x966 + x1079 +
            x1081 * x795 + x1090 * x858 - x720 * x855 - x965 * x973);
  x172 = -x1061 * x1208 * x232 - x1175 * x1636 * x172 +
         x172 * (kf_qss[130] * sc[1] + x1708) / x63 + x1797 + x537 -
         (kf_qss[131] * sc[6] + sc[1] * x1104 + sc[8] * x1099 + x184) / x169;
  x232 = x1328 + x1789 - (sc[8] * x1099 + x1720) / x518;
  x988 = x1057 * x1563 - x1057 * x1573 + x1057 * x1574 + x1161 - x1211 * x762 +
         x1314 * x1575 + x1535 * x936 - x172 * x428 + x2112 - x232 * x929;
  x601 = -kf_qss[113] * sc[1] * x1349 / x583 + x1534 * x795 + x1595 -
         x232 * x981 + x601 * (kf_qss[130] * sc[1] + x1708) / x63 - x608 * x988;
  x318 = x1314 * x1587 - x1389 * x964 - x1461 * (x2090 + x897) + x1588 * x795 +
         x1589 * x966 - x172 * x321 + x2069 + x2117 +
         x318 * (kf_qss[130] * sc[1] + x1708) / x63 - x568 * x988 -
         x601 * x649 - (sc[1] * x1419 + x1670) / x315;
  x1033 = (-x1027 * x318 - x1031 * x172 - x1074 * x601 - x1389 * x965 + x1509 +
           x1517 * x795 + x1584 * x966 + x1669 + x1761 - x855 * x988 +
           x858 * x898 - x890 * x968) /
          x852;
  x134 = x1797 + x2060 + x537 - (4.27e+46 * x1114 * x134 * x788 + x184) / x169;
  x1060 = (kf_qss[135] * sc[0] * x1277 + kf_qss[137] * sc[5] * x1270 +
           kf_qss[138] * sc[6] * x1280 + kf_qss[140] * sc[9] * x1266 +
           sc[1] * x20 * x526 * x540 + x1724) /
          x553;
  x422 = -x134 * x428 + x182 * x425 / x228 + x356 -
         x929 * (x1060 * x557 + x1537) -
         (kf_qss[132] * sc[10] * x1238 + x1730) / x422;
  x425 =
    x1534 * x931 + x1595 + x1750 - x422 * x608 - x981 * (x1060 * x557 + x1537);
  x428 = -x134 * x321 + x2071 - x422 * x568 - x425 * x649 + x648 + x686;
  x929 =
    (x1022 - x1027 * x428 - x1031 * x134 - x1074 * x425 + x1793 - x422 * x855) /
    x852;
  x1062 = -kf_qss[37] * x236 + x1666;
  x886 = -x1062 * x886 + x1062 * x889 + x1974 * x887;
  x887 = kf_qss[37] * x978 - kf_qss[37] * x980 + x983;
  x889 = kf_qss[37] * x975 - x589 * x887 - x608 * x842 + x931 * x977;
  x975 = -kf_qss[37] * x1008 - kf_qss[37] * x1010 - kf_qss[37] * x989 +
         x1011 * x931 + x1013 * x936 + x1654 * x990 + x2038 - x608 * x954 -
         x887 * x899;
  x828 = -x1062 * x893 - x828 * x886 + x897;
  x315 = kf_qss[37] / x315 + x1062 * x892 - x1062 * x970 + x52 - x828 * x899;
  x589 = x1017 * x975 - x1018 * x1062 - x315 * x973 - x589 * x828 + x631 -
         x649 * x889 - x680 * x886;
  x236 = -kf_qss[37] * x1069 + kf_qss[37] * x236 / x583 + kf_qss[37] * x668 -
         x1020 * x887 + x1070 * x931 + x2046 - x439 * x608;
  x583 = -x1020 * x828 - x1023 * x315 - x1025 * x886 - x1028 * x321 +
         x1062 * x1083 + x1082 * x1314 + x1085 * x975 + x1086 * x931 + x2049 -
         x236 * x649 - x439 * x568;
  x892 = x854 *
         (-x1027 * x589 - x1074 * x889 -
          x1077 * (x1068 * x975 - x1074 * x236 + x1705) + x1078 * x975 + x1079 +
          x1081 * x931 + x1090 * x583 - x842 * x855 - x973 * (x1058 + x932));
  x608 = kf_qss[37] * x1519 - kf_qss[37] * x1521 + kf_qss[37] * x1533 -
         kf_qss[37] * x796 - x1461 * x887 + x1523 * x936 + x1534 * x931 +
         x1750 + x1970 - x252 * x608 - x981 * (x1537 + x1789) +
         x644 * x839 / x639;
  x321 = x1062 * x1459 - x1062 * x1586 - x1211 * x886 + x1314 * x1587 -
         x1389 * x315 - x1461 * x828 + x1588 * x931 + x1589 * x975 + x2071 -
         x252 * x568 - x321 * x378 - x608 * x649;
  x568 = (-x1027 * x321 - x1031 * x378 - x1074 * x608 + x1517 * x931 +
          x1584 * x975 + x1793 - x252 * x855 + x583 * x898 -
          x890 * (x1068 * x975 - x1074 * x236 + x1705)) /
         x852;
  x644 = (-sc_qss[0] * x1019 + x884) / x672;
  x649 = (-sc_qss[0] * x1076 + x320) / ((x672) * (x672));
  x855 = x1087 * x649;
  x893 = (-sc_qss[0] * x1681 + x263) / x672;
  x899 = x1692 * x649;
  x970 = (-sc_qss[0] * x1780 + x1765) / x672;
  x973 = x1778 * x649;
  x977 = (-sc_qss[0] * x1849 + x1832) / x672;
  x978 = x1850 * x649;
  x980 = (-sc_qss[0] * x1901 + x1892) / x672;
  x981 = x566 * x649;
  x989 = (-sc_qss[0] * x652 + x1898) / x672;
  x990 = x1983 * x649;
  x1008 = (-sc_qss[0] * x2040 + x1982) / x672;
  x1010 = x2050 * x649;
  x1011 = (-sc_qss[0] * x2095 + x2091) / x672;
  x1013 = x2103 * x649;
  x1017 = (-sc_qss[0] * x2148 + x1430) / x672;
  x1018 = x2149 * x649;
  x1019 = (-sc_qss[0] * x2183 + x2144) / x672;
  x1020 = x2192 * x649;
  x1023 = (-sc_qss[0] * x2262 + x375) / x672;
  x1025 = x649 * x888;
  x1027 = (-sc_qss[0] * x2273 + x1444) / x672;
  x1031 = x2330 * x649;
  x1063 = (-sc_qss[0] * x2365 + x1808) / x672;
  x1065 = x2366 * x649;
  x1068 = (-sc_qss[0] * x1041 + x740) / x672;
  x1069 = x649 * x878;
  x1070 = (-sc_qss[0] * x879 + x626) / x672;
  x668 = x649 * x856;
  x1074 = (-sc_qss[0] * x1136 + x588) / x672;
  x1077 = x1338 * x649;
  x1078 = (-sc_qss[0] * x483 + x1638) / x672;
  x1081 = x1547 * x649;
  x1082 = (-sc_qss[0] * x1416 + x1437) / x672;
  x1083 = x1683 * x649;
  x1085 = (-sc_qss[0] * x1416 + x1753) / x672;
  x1086 = (-sc_qss[0] * x857 + x318) / x672;
  x1087 = x649 * x858;
  x1090 = (-sc_qss[0] * x1416 + x428) / x672;
  x1099 = (-sc_qss[0] * x589 + x321) / x672;
  x1104 = x583 * x649;
  x987 = (-sc_qss[0] * x987 - sc_qss[1] * x1073 + x986) / x645;
  x1073 = (-sc_qss[0] * x597 - sc_qss[1] * x671 + x1388) / ((x645) * (x645));
  x1014 = x1014 * x1073;
  x1211 = (-sc_qss[0] * x1671 - sc_qss[1] * x1688 + x1631) / x645;
  x1389 = x1073 * x1677;
  x1419 = (-sc_qss[0] * x1762 - sc_qss[1] * x1776 + x1663) / x645;
  x1461 = x1073 * x1769;
  x854 = (-sc_qss[0] * x1848 - sc_qss[1] * x1834 + x1827) / x645;
  x1517 = x1073 * x1838;
  x1519 = (-sc_qss[0] * x1896 - sc_qss[1] * x1894 + x1845) / x645;
  x1521 = x1073 * x1893;
  x1523 = (-sc_qss[0] * x1984 - sc_qss[1] * x1973 + x600) / x645;
  x1533 = x1073 * x1971;
  x1534 = (-sc_qss[0] * x2037 - sc_qss[1] * x2047 + x2068) / x645;
  x1535 = x1073 * x2039;
  x1563 = (-sc_qss[0] * x2086 - sc_qss[1] * x2100 + x2043) / x645;
  x1573 = x1073 * x2088;
  x1574 = (-sc_qss[0] * x2143 - sc_qss[1] * x2136 + x458) / x645;
  x1575 = x1073 * x2139;
  x796 = (-sc_qss[0] * x2180 - sc_qss[1] * x2190 + x2138) / x645;
  x986 = x1073 * x2182;
  x1584 = (-sc_qss[0] * x2258 - sc_qss[1] * x2272 + x373) / x645;
  x1586 = x1073 * x2261;
  x1587 = (-sc_qss[0] * x2255 - sc_qss[1] * x2328 + x1507) / x645;
  x1588 = x1073 * x2257;
  x1589 = (-sc_qss[0] * x2360 - sc_qss[1] * x2358 + x1582) / x645;
  x1459 = x1073 * x2329;
  x884 = (-sc_qss[0] * x1032 - sc_qss[1] * x912 + x729) / x645;
  x890 = x1073 * x925;
  x898 = (-sc_qss[0] * x874 - sc_qss[1] * x904 + x997) / x645;
  x1648 = x1073 * x247;
  x1666 = (-sc_qss[0] * x1131 - sc_qss[1] * x1264 + x532) / x645;
  x1671 = x1073 * x585;
  x1677 = (-sc_qss[0] * x1528 - sc_qss[1] * x985 + x273) / x645;
  x1681 = x1073 * x187;
  x1688 = -sc_qss[0] * x1528 - sc_qss[1] * x1652;
  x1689 = (x1688 + x914) / x645;
  x1692 = (x1688 + x286) / x645;
  x184 = (-sc_qss[0] * x826 - sc_qss[1] * x967 + x601) / x645;
  x1720 = x1073 * x966;
  x1730 = (x1688 + x425) / x645;
  x1631 = (-sc_qss[0] * x889 - sc_qss[1] * x236 + x608) / x645;
  x1670 = x1073 * x975;
  x263 = (-sc_qss[0] * x435 - sc_qss[1] * x666 - sc_qss[2] * x607 + x427) /
         ((x564) * (x564));
  x961 = x263 * x961;
  x827 =
    (-sc_qss[0] * x827 - sc_qss[1] * x1064 - sc_qss[2] * x969 + x718) / x564;
  x969 = x1662 * x263;
  x1064 =
    (-sc_qss[0] * x1640 - sc_qss[1] * x1687 - sc_qss[2] * x1661 + x345) / x564;
  x718 = x1760 * x263;
  x1640 =
    (-sc_qss[0] * x1751 - sc_qss[1] * x1775 - sc_qss[2] * x1768 + x1678) / x564;
  x1661 = x1830 * x263;
  x1662 =
    (-sc_qss[0] * x1843 - sc_qss[1] * x1831 - sc_qss[2] * x1835 + x1825) / x564;
  x1687 = x1887 * x263;
  x345 =
    (-sc_qss[0] * x1846 - sc_qss[1] * x1889 - sc_qss[2] * x1886 + x1823) / x564;
  x1669 = x1957 * x263;
  x1751 =
    (-sc_qss[0] * x1943 - sc_qss[1] * x1960 - sc_qss[2] * x1955 + x1059) / x564;
  x1760 = x2032 * x263;
  x1762 =
    (-sc_qss[0] * x1981 - sc_qss[1] * x2045 - sc_qss[2] * x2034 + x1958) / x564;
  x1768 = x2084 * x263;
  x1769 =
    (-sc_qss[0] * x2048 - sc_qss[1] * x2099 - sc_qss[2] * x2087 + x2035) / x564;
  x1775 = x2131 * x263;
  x1776 =
    (-sc_qss[0] * x2142 - sc_qss[1] * x2133 - sc_qss[2] * x2137 + x2125) / x564;
  x1778 = x2177 * x263;
  x1780 =
    (-sc_qss[0] * x2140 - sc_qss[1] * x2189 - sc_qss[2] * x2176 + x2123) / x564;
  x1797 = x2254 * x263;
  x1678 =
    (-sc_qss[0] * x2187 - sc_qss[1] * x2271 - sc_qss[2] * x2253 + x351) / x564;
  x1750 = x242 * x263;
  x1663 =
    (-sc_qss[0] * x1597 - sc_qss[1] * x2327 - sc_qss[2] * x2256 + x717) / x564;
  x1761 = x263 * x341;
  x1765 =
    (-sc_qss[0] * x1593 - sc_qss[1] * x1049 - sc_qss[2] * x2325 + x1549) / x564;
  x1830 = x263 * x810;
  x1831 =
    (-sc_qss[0] * x433 - sc_qss[1] * x664 - sc_qss[2] * x789 + x424) / x564;
  x1834 = x263 * x806;
  x1835 =
    (-sc_qss[0] * x778 - sc_qss[1] * x825 - sc_qss[2] * x46 + x487) / x564;
  x1838 = x1044 * x263;
  x1842 =
    (-sc_qss[0] * x798 - sc_qss[1] * x1252 - sc_qss[2] * x562 + x946) / x564;
  x1843 = x263 * x931;
  x1848 =
    (-sc_qss[0] * x842 - sc_qss[1] * x214 - sc_qss[2] * x954 + x252) / x564;
  x1849 = -sc_qss[0] * x842 - sc_qss[1] * x439 - sc_qss[2] * x954;
  x1850 = (x1647 + x1849) / x564;
  x1855 = (x1849 + x382) / x564;
  x1825 = x263 * x795;
  x1827 =
    (-sc_qss[0] * x720 - sc_qss[1] * x900 - sc_qss[2] * x934 + x988) / x564;
  x1832 = (x1849 + x422) / x564;
  x1846 = (x1849 + x252) / x564;
  x1886 =
    sc_qss[2] * (kf_qss[67] * sc[5] * x578 + 10.0e-13) / ((x639) * (x639));
  x1887 = x1002 * x1386 + x1002 * x1886 -
          (kf_qss[65] * sc[12] * x1383 + x1531) / x639;
  x1370 = x1386 * x1674 + x1674 * x1886 - (sc[12] * x1370 + x839) / x639;
  x1674 = x1386 * x1766 + x1766 * x1886 - x839 / x639;
  x1766 = x1386 * (-kf_qss[70] + x1673) + x1886 * (-kf_qss[70] + x1673) -
          (kf_qss[57] * sc[8] + x839) / x639;
  x1889 =
    x1386 * x1891 + x1886 * x1891 -
    (kf_qss[66] * sc[8] * x1372 + kf_qss[68] * sc[12] * x1379 + x839) / x639;
  x1891 = -kf_qss[67] * sc_qss[2] * x578 / x639 + x1386 * x1966 +
          x1886 * x1966 - x1998;
  x1366 = x1386 * x1673 + x1673 * x1886 -
          (kf_qss[58] * sc[8] + sc[12] * x1366 + x839) / x639;
  x1893 = x1386 * x1673 + x1673 * x1886 - x839 / x639;
  x839 = x1386 * x1673 + x1673 * x1886 -
         (kf_qss[57] * sc[3] + kf_qss[58] * sc[6] + kf_qss[66] * sc[4] * x1372 +
          x839) /
           x639;
  x639 = x1002 * x1386 + x1002 * x1886 - x1531 / x639;
  x1002 = x1386 * x2260 + x1886 * x2260 - x353;
  x1531 = x1386 * x1673 + x1673 * x1886 - x2371;
  x1386 = x1386 * x637 + x1886 * x637 - x635;
  x760 =
    (sc_qss[0] * x323 * x760 - sc_qss[1] * x1030 - sc_qss[3] * x896 + x1508) /
    x233;
  x896 = (-sc_qss[0] * x324 - sc_qss[1] * x662 - sc_qss[3] * x441 + x1210) /
         ((x233) * (x233));
  x823 = x823 * x896;
  x1030 = (sc_qss[0] * x139 * x323 / ((x169) * (x169)) - sc_qss[1] * x1685 -
           sc_qss[3] * x1643 + x1710) /
          x233;
  x1508 = x1639 * x896;
  x139 = sc_qss[0] * x323 / ((x169) * (x169));
  x1639 = (-sc_qss[1] * x1764 - sc_qss[3] * x1756 + x139 * x1680 + x225) / x233;
  x1643 = x1748 * x896;
  x1673 =
    (-sc_qss[1] * x1779 - sc_qss[3] * x1821 + x139 * x1773 + x1856) / x233;
  x1685 = x1784 * x896;
  x1710 =
    (-sc_qss[1] * x1879 - sc_qss[3] * x1876 + x139 * x1836 + x1908) / x233;
  x1680 = x1841 * x896;
  x1748 =
    (sc_qss[0] * x1888 * x323 - sc_qss[1] * x1944 - sc_qss[3] * x1877 + x1996) /
    x233;
  x1756 = x1900 * x896;
  x323 =
    (sc_qss[0] * x1959 * x323 - sc_qss[1] * x660 - sc_qss[3] * x2024 + x231) /
    x233;
  x1764 = x1980 * x896;
  x225 = (-sc_qss[1] * x2098 - sc_qss[3] * x2083 + x139 * x2027 + x2106) / x233;
  x1773 = x2044 * x896;
  x1779 = (-kf_qss[59] * sc_qss[0] / x169 - sc_qss[1] * x2132 -
           sc_qss[3] * x2101 + x139 * x2096 + x2157) /
          x233;
  x1784 = x2097 * x896;
  x1821 =
    (-sc_qss[1] * x2185 - sc_qss[3] * x2146 + x139 * x2124 + x2202) / x233;
  x1856 = x2135 * x896;
  x1836 = (-sc_qss[1] * x2270 - sc_qss[3] * x882 + x139 * x732 + x753) / x233;
  x1841 = x2186 * x896;
  x758 = (-sc_qss[1] * x2324 - sc_qss[3] * x2147 + x107 + x139 * x758) / x233;
  x1876 = x694 * x896;
  x1879 = (-sc_qss[1] * x883 - sc_qss[3] * x415 + x139 * x1572 + x2369) / x233;
  x1894 = x1599 * x896;
  x1896 = (-sc_qss[1] * x816 - sc_qss[3] * (kf_qss[78] / x169 + x747) +
           x110 * x139 + x144) /
          x233;
  x1901 = x744 * x896;
  x566 = (-sc_qss[1] * x816 - sc_qss[3] * x747 + x110 * x139 + x56) / x233;
  x1908 = (-sc_qss[1] * x1246 - sc_qss[3] * x747 + x110 * x139 + x97) / x233;
  x1823 = x171 * x896;
  x169 = (-sc_qss[1] * (kf_qss[76] / x169 + x1028) - sc_qss[3] * x894 +
          x1026 * x139 + x378) /
         x233;
  x1845 = x1314 * x896;
  x1026 = -sc_qss[1] * x1028 - sc_qss[3] * x894 + x1026 * x139;
  x1892 = (x1026 + x1206) / x233;
  x1888 = (x1026 + x1410) / x233;
  x1900 = (x1026 + x172) / x233;
  x1943 = (x1026 + x134) / x233;
  x1944 = (x1026 + x378) / x233;
  x1955 = sc_qss[2] * x602 / ((x518) * (x518));
  x1877 = sc_qss[3] * x442 / ((x518) * (x518));
  x927 = x559 * (x1561 + x1877 * x927 + x1955 * x927);
  x957 = x957 * (-sc_qss[2] * x602 / x518 - sc_qss[3] * x442 / x518 + x1329);
  x956 = x956 * x957;
  x1561 = x559 * (x1726 + x1877 * x494 + x1955 * x494);
  x494 = x1660 * x957;
  x1660 = x559 * (x1757 * x1877 + x1757 * x1955 + x1790);
  x1726 = x1759 * x957;
  x1757 = x559 * (x1824 * x1877 + x1824 * x1955 + x1860);
  x1759 = x1829 * x957;
  x1790 = x559 * (x1877 * x1881 + x1881 * x1955 + x1911);
  x1824 = x1885 * x957;
  x1829 = x559 * (x1877 * x1951 + x1951 * x1955 + x909);
  x1860 = x1954 * x957;
  x1881 = x559 * (x1877 * x2029 + x1955 * x2029 + x2054);
  x1885 = x2031 * x957;
  x1911 = x559 * (x1877 * x2080 + x1955 * x2080 + x2110);
  x1951 = x2082 * x957;
  x1954 = x559 * (x1877 * x2128 + x1955 * x2128 + x2154);
  x1957 = x2130 * x957;
  x1960 = x559 * (x1877 * x2174 + x1955 * x2174 + x2197);
  x1966 = x2175 * x957;
  x1971 = x559 * (x1557 + x1877 * x2191 + x1955 * x2191);
  x1973 = x2252 * x957;
  x926 = x559 * (sc_qss[2] * x602 * x926 / ((x518) * (x518)) +
                 sc_qss[3] * x442 * x926 / ((x518) * (x518)) + x556);
  x1983 = x2178 * x957;
  x1984 = x559 * (x1877 * x2188 + x1955 * x2188 + x2370);
  x652 = x2266 * x957;
  x1996 = x559 * (x1877 * x489 + x1955 * x489 + x703);
  x1998 = x782 * x957;
  x909 = x559 *
         (-kf_qss[110] * sc_qss[3] / x518 + x1877 * x489 + x1955 * x489 + x473);
  x1059 = x559 * (-kf_qss[128] * sc_qss[2] / x518 + x1877 * x489 +
                  x1955 * x489 + x508);
  x600 = x1037 * x957;
  x1789 = x559 * (x1537 + x1654 * x1877 + x1654 * x1955 + x1789);
  x1364 = x936 * x957;
  x1898 = x559 * (x1654 * x1877 + x1654 * x1955 + x837);
  x1959 = x559 * (x1654 * x1877 + x1654 * x1955 + x232);
  x557 = x559 * (x1060 * x557 + x1537 + x1654 * x1877 + x1654 * x1955);
  x819 = sc_qss[1] * x657 * x819 / ((x63) * (x63)) +
         sc_qss[2] * x598 * x819 / ((x63) * (x63)) +
         sc_qss[6] * x1 * x819 / ((x63) * (x63)) + x1175 * x819 - x1506;
  x1654 = sc_qss[2] * x598 / ((x63) * (x63));
  x1963 = sc_qss[1] * x657 / ((x63) * (x63));
  x1978 = sc_qss[6] * x1 / ((x63) * (x63));
  x1637 = -kf_qss[85] * sc_qss[6] / x63 + x1175 * x1637 + x1637 * x1654 +
          x1637 * x1963 + x1637 * x1978 - x1709;
  x1709 =
    x1175 * x1744 + x1654 * x1744 - x1708 / x63 + x1744 * x1963 + x1744 * x1978;
  x1744 =
    x1175 * x1774 + x1654 * x1774 - x1708 / x63 + x1774 * x1963 + x1774 * x1978;
  x1774 =
    x1175 * x1840 + x1654 * x1840 - x1708 / x63 + x1840 * x1963 + x1840 * x1978;
  x1840 = x1175 * x411 + x1654 * x411 + x1963 * x411 + x1978 * x411 - x1994;
  x1636 = sc_qss[1] * x1974 * x657 + sc_qss[2] * x1974 * x598 +
          sc_qss[6] * x1 * x1974 + x1175 * x1636;
  x411 = x1636 - x1708 / x63;
  x1994 = x1175 * x2127 - x1506 + x1654 * x2127 + x1963 * x2127 + x1978 * x2127;
  x1974 = -kf_qss[80] * sc_qss[1] * x290 / x63 +
          sc_qss[1] * x2179 * x657 / ((x63) * (x63)) +
          sc_qss[6] * x1 * x2179 / ((x63) * (x63)) + x1175 * x2179 +
          x1654 * x2179 - x2284;
  x818 = -kf_qss[82] * sc_qss[1] * x312 / x63 + x1175 * x818 - x1506 +
         x1654 * x818 + x1963 * x818 + x1978 * x818;
  x1506 = x1175 * x153 + x153 * x1654 + x153 * x1963 + x153 * x1978 - x28;
  x1980 = -kf_qss[112] * sc_qss[2] / x63 + x1175 * x153 + x153 * x1654 +
          x153 * x1963 + x153 * x1978 - x37;
  x1 = sc_qss[1] * x30 * x657 / ((x63) * (x63)) +
       sc_qss[2] * x30 * x598 / ((x63) * (x63)) +
       sc_qss[6] * x1 * x30 / ((x63) * (x63)) - x1173 + x1175 * x30;
  x598 = -x1186 + x1636;
  x63 = x1636 - (kf_qss[130] * sc[1] + x1708) / x63;
  x657 = sc_qss[3] * x436 * x791 + sc_qss[6] * x173 * x791 + x1208 * x790 -
         (sc[17] * x1203 + x1494) / x228;
  x1200 = sc_qss[3] * x1075 * x436 / ((x228) * (x228)) +
          sc_qss[6] * x1075 * x173 / ((x228) * (x228)) + x1075 * x1208 -
          (sc[17] * x1200 + x182) / x228;
  x1203 = sc_qss[3] * x436 / ((x228) * (x228));
  x1175 = sc_qss[6] * x173 / ((x228) * (x228));
  x1075 = x1175 * x1745 + x1203 * x1745 + x1208 * x1745 - x182 / x228;
  x1708 = -kf_qss[90] * sc_qss[6] / x228 + x1175 * x1781 + x1203 * x1781 +
          x1208 * x1781 - x182 / x228;
  x1745 = x1175 * x1839 + x1203 * x1839 + x1208 * x1839 - x1905;
  x1781 = x1175 * x1897 + x1203 * x1897 + x1208 * x1897 - x1989;
  x1061 = x1061 * x1175 + x1061 * x1203 + x1061 * x1208;
  x1839 = -kf_qss[92] * sc_qss[6] / x228 + x1061 -
          (kf_qss[102] * sc[17] * x1182 + x182) / x228;
  x1905 = x1061 - x182 / x228;
  x1197 = -kf_qss[98] * sc_qss[3] * x332 / x228 + x1061 -
          (refCinv * sc[10] * x1197 + x182) / x228;
  x173 = sc_qss[3] * x436 * x791 + sc_qss[6] * x173 * x791 + x1208 * x790 -
         x1494 / x228;
  x436 = x1175 * x220 + x1203 * x220 + x1208 * x220 - x2278;
  x790 = x1061 - (kf_qss[103] * x1177 * x1178 + x182) / x228;
  x791 = x1175 * x714 + x1203 * x714 + x1208 * x714 - x218;
  x1494 = x1061 - x1091;
  x191 = x1061 - (x1192 * x191 + x182) / x228;
  x228 = sc_qss[7] * x520 / ((x553) * (x553));
  x520 =
    x1283 * x951 + x228 * x951 - (kf_qss[135] * sc[20] * x1277 + x1559) / x553;
  x540 =
    x1283 * x1658 + x1658 * x228 - (sc[20] * x20 * x526 * x540 + x1724) / x553;
  x1208 = x1283 * (-kf_qss[136] + x1657) - x1724 / x553 +
          x228 * (-kf_qss[136] + x1657);
  x1658 = x1283 * (-kf_qss[138] + x1657) - x1724 / x553 +
          x228 * (-kf_qss[138] + x1657);
  x182 = -kf_qss[139] * sc_qss[7] * x1833 * x452 / x553 +
         x1283 * (-kf_qss[137] + x1657) - x1724 / x553 +
         x228 * (-kf_qss[137] + x1657);
  x1897 = x1283 * x1953 + x1953 * x228 - x2003;
  x1953 = x1283 * (-kf_qss[139] + x1657) + x228 * (-kf_qss[139] + x1657) -
          (kf_qss[138] * sc[20] * x1280 + x1724) / x553;
  x1989 = x1283 * x1657 + x1657 * x228 - x1724 / x553;
  x447 = -sc_qss[7] * x447 / x553 + x1283 * (-kf_qss[140] + x1657) +
         x228 * (-kf_qss[140] + x1657) - (kf_qss[115] * sc[14] + x1724) / x553;
  x2003 =
    x1283 * x951 + x228 * x951 - (kf_qss[140] * sc[20] * x1266 + x1559) / x553;
  x1981 = x1283 * x943 - x1470 + x228 * x943;
  x951 = x1283 * x951 - x1559 / x553 + x228 * x951;
  x1559 =
    -sc_qss[7] * (kf_qss[136] * x512 + kf_qss[139] * x452 * x66) / x553 + x1989;
  x553 = x1283 * x1657 + x1657 * x228 - (kf_qss[115] * sc[8] + x1724) / x553;
  x1724 = x1283 * x950 + x228 * x950 - x937;
  x1283 = -x1060 + x1283 * x1657 + x1657 * x228;
  x1657 = 23000.0 * exp(
                      g_RT[0] - g_RT[12] - g_RT[1] + g_RT_qss[3] -
                      1648.03458051046 * invT + 1.05 * tc[0]);
  x2024 = sc[0] * x1657;
  x2029 = 50.7 * exp(-6516.6558221711202 * invT + 1.93 * tc[0] - x75 - x76);
  x2031 = sc[0] * x2029;
  x2032 = 110.7 * exp(
                    -g_RT[0] + g_RT[1] - g_RT_qss[0] + g_RT_qss[1] -
                    840.37183189388202 * invT + 1.79 * tc[0]);
  x2034 = sc[1] * x2032;
  x2037 = 0.5 * sc[0] * exp(-3638.25649376812 * invT + 2.0 * tc[0]);
  x2038 = 60000000.0 * sc[0] * x8;
  x2039 = -44670.543423485004 * invT + 0.44 * tc[0];
  x34 = 8.75e+31 * x40 * exp(-x2039 + x34);
  x2040 = -0.29097730287517898 * x43 + 0.43429448190325198 * log(x34) - 0.4;
  x660 = -0.14 * x2040 - 0.55155399201712996 * x43 + 0.75;
  x2045 = exp(
    M_LN10 * (0.43429448190325198 * x43 /
              (((x2040) * (x2040)) / ((x660) * (x660)) + 1.0)));
  x2046 = x2045 * exp(-94921.759670744301 * invT - 8.87 * tc[0] - x2039 + x33) /
          (x34 + 1.0);
  x2047 = 7.0e+44 * refCinv * sc[0] * x2046 * x40;
  x2049 = 115.0 * exp(-3789.2214935095399 * invT + 1.9 * tc[0] - x449 - x75);
  x2050 = sc[0] * x2049;
  x2054 = exp(-2012.8666632188799 * invT);
  x2060 = 20000000.0 * sc[1] * x2054;
  x231 = 100000000.0 * sc[10] * x574;
  x1161 = -18014.512518476698 * invT - 3.4 * tc[0];
  x1958 =
    6645077720207.25 * x40 * exp(628.76922392300185 * invT - 5.02 * tc[0]);
  x1970 = -0.29097730287517898 * x98 + 0.43429448190325198 * log(x1958) - 0.4;
  x2068 = -0.14 * x1970 - 0.55155399201712996 * x98 + 0.75;
  x2069 = exp(
    M_LN10 * (0.43429448190325198 * x98 /
              (((x1970) * (x1970)) / ((x2068) * (x2068)) + 1.0)));
  x2071 = 2.565e+21 * x2069 * x40 * exp(x1161) / (x1958 + 1.0);
  x1982 = 15000000.0 * sc[1] * x404;
  x2027 = -717.08374877172594 * invT - 2.57 * tc[0];
  x343 = 1238532.11009174 * x40 *
         exp(-130.83633310922701 * invT - 0.48 * tc[0] + x343);
  x2044 = -0.29097730287517898 * x348 + 0.43429448190325198 * log(x343) - 0.4;
  x2048 = 1.7777777777777777 * ((x2044) * (x2044)) /
            ((-0.18666666666666668 * x2044 - 0.73540532268950665 * x348 + 1) *
             (-0.18666666666666668 * x2044 - 0.73540532268950665 * x348 + 1)) +
          1.0;
  x2080 = exp(M_LN10 * (0.43429448190325198 * x348 / x2048)) / (x343 + 1.0);
  x2082 = 1350000000000.0 * x2080 * x773 * exp(x2027);
  x2083 = 16000000.0 * sc[5] * x578;
  x2084 = -1670.679330471668 * invT - 3.86 * tc[0];
  x137 = 230263157894.737 * x40 *
         exp(140.90066642532199 * invT - 0.27 * tc[0] + x137);
  x2086 = -0.29097730287517898 * x142 + 0.43429448190325198 * log(x137) - 0.4;
  x2087 = -0.55155399201712996 * x142 - 0.14 * x2086 + 0.75;
  x2088 = exp(
    M_LN10 * (0.43429448190325198 * x142 /
              (((x2086) * (x2086)) / ((x2087) * (x2087)) + 1.0)));
  x2089 = 1.4e+18 * x2088 * x773 * exp(x2084) / (x137 + 1.0);
  x2090 = 90000000.0 * sc[8] * x332;
  x2094 = 5280000.0 * sc[3] * exp(-754.82499870708 * invT);
  x2095 = 80000000.0 * sc[1] * x401;
  x2098 = 30000000.0 * sc[1] * x392;
  x2099 = 128000.0 * x40 * exp(-618.95649893980499 * invT - 2.34 * tc[0]);
  x2100 = -0.29097730287517898 * x266 + 0.43429448190325198 * log(x2099) - 0.4;
  x2103 = -0.14 * x2100 - 0.55155399201712996 * x266 + 0.75;
  x2106 = exp(
            M_LN10 * (0.43429448190325198 * x266 /
                      (((x2100) * (x2100)) / ((x2103) * (x2103)) + 1.0))) /
          (x2099 + 1.0);
  x2108 =
    3200000000000000.0 * x2106 * exp(-618.95649893980499 * invT - 3.14 * tc[0]);
  x2110 = x2108 * x773;
  x2112 = 20000000.0 * sc[14] * exp(-3019.29999482832 * invT);
  x2035 = 1.5e+18 * exp(-9368.8878839522695 * invT - 2.83 * tc[0]);
  x2043 = sc[8] * x2035;
  x2117 = exp(286.83349950869001 * invT);
  x2091 = 12000000.0 * sc[8] * x2117;
  x2096 = 187000000000.0 * x40 * exp(-8554.6833186802305 * invT - tc[0]);
  x4 = 20000000.0 * exp(-1006.43333160944 * invT - x4);
  x2097 = sc[9] * x4;
  x471 = 1.11111111111111e+24 * x40 *
         exp(915.85433176459003 * invT - 0.454 * tc[0] + x471);
  x2101 = -0.29097730287517898 * x476 + 0.43429448190325198 * log(x471) - 0.4;
  x2128 = -0.14 * x2101 - 0.55155399201712996 * x476 + 0.75;
  x2130 = exp(
    M_LN10 * (0.43429448190325198 * x476 /
              (((x2101) * (x2101)) / ((x2128) * (x2128)) + 1.0)));
  x2131 = x2130 * exp(-3507.4201606589004 * invT - 7.62 * tc[0] + x470) /
          (x471 + 1.0);
  x2132 = 1.2e+30 * x2131 * x788;
  x492 = 3.8195777351247603e+17 * x40 *
         exp(795.08233197145705 * invT + 0.99 * tc[0] + x492);
  x2133 = -0.29097730287517898 * x497 + 0.43429448190325198 * log(x492) - 0.4;
  x2136 = -0.14 * x2133 - 0.55155399201712996 * x497 + 0.75;
  x2137 = exp(
    M_LN10 * (0.43429448190325198 * x497 /
              (((x2133) * (x2133)) / ((x2136) * (x2136)) + 1.0)));
  x2139 = x2137 * exp(-3364.0034109045528 * invT - 7.08 * tc[0]) / (x492 + 1.0);
  x2142 = 1.99e+29 * x2139 * x773;
  x2143 = 3.7e+18 * exp(
                      -g_RT[1] + g_RT[8] + g_RT_qss[7] - g_RT_qss[9] -
                      6292.7244058880196 * invT - 2.92 * tc[0]);
  x2148 = sc[8] * x2143;
  x2149 = exp(
    g_RT[1] - 2.0 * g_RT[8] + g_RT_qss[7] - 5334.0966575300299 * invT +
    0.1 * tc[0]);
  x2154 = 4990000.0 * sc[1] * x2149;
  x618 = 4074074074074.07 * x40 *
         exp(1308.3633310922701 * invT - 0.454 * tc[0] + x618);
  x2157 = -0.29097730287517898 * x624 + 0.43429448190325198 * log(x618) - 0.4;
  x2125 = -0.14 * x2157 - 0.55155399201712996 * x624 + 0.75;
  x458 = exp(
    M_LN10 * (0.43429448190325198 * x624 /
              (1.0 + ((x2157) * (x2157)) / ((x2125) * (x2125)))));
  x1430 =
    x458 * exp(-2797.8846618742396 * invT - 4.8 * tc[0] + x617) / (x618 + 1.0);
  x2124 = 2.2e+18 * refC * x1430 * x40;
  x2127 = -0.29097730287517898 * x180 +
          0.43429448190325198 * log(5.2e+19 * x176) - 0.4;
  x2135 = -0.55155399201712996 * x180 - 0.14 * x2127 + 0.75;
  x2140 = exp(
            M_LN10 * (0.43429448190325198 * x180 /
                      (((x2127) * (x2127)) / ((x2135) * (x2135)) + 1.0))) /
          (5.2e+19 * x176 + 1.0);
  x2146 = 5.2e+27 * sc[1] * x176 * x2140;
  x202 = 1.1515151515151501e+21 * x40 *
         exp(4277.3416593401198 * invT + 0.06 * tc[0] + x202);
  x2174 = -0.29097730287517898 * x207 + 0.43429448190325198 * log(x202) - 0.4;
  x2175 = -0.55155399201712996 * x207 - 0.14 * x2174 + 0.75;
  x2176 = exp(
    M_LN10 * (0.43429448190325198 * x207 /
              (((x2174) * (x2174)) / ((x2175) * (x2175)) + 1.0)));
  x2177 = x2176 * exp(-5988.2783230761797 * invT - 7.64 * tc[0] + x201) /
          (x202 + 1.0);
  x2180 = 3.8e+29 * refC * x2177 * x40;
  x2182 = 3.7e+18 * exp(-6292.7244058880196 * invT - 2.92 * tc[0]);
  x2183 = sc[1] * x2182;
  x2185 =
    4.7067669172932297e+19 * x20 * exp(-1881.67807844359 * invT - 6.66 * tc[0]);
  x2189 = -0.29097730287517898 * x529 + 0.43429448190325198 * log(x2185) - 0.4;
  x2190 = 1.7777777777777777 * ((x2189) * (x2189)) /
            ((-0.18666666666666668 * x2189 - 0.73540532268950665 * x529 + 1) *
             (-0.18666666666666668 * x2189 - 0.73540532268950665 * x529 + 1)) +
          1.0;
  x2192 = exp(M_LN10 * (0.43429448190325198 * x529 / x2190)) / (x2185 + 1.0);
  x2197 = 6.26e+26 * x20 * x2192 * x545;
  x2202 = 1750000.0 * exp(
                        g_RT[11] - g_RT[17] - g_RT[2] + g_RT_qss[1] -
                        679.34249883637199 * invT);
  x2123 = sc[11] * x2202;
  x2138 = -956.11166502896697 * invT + 2.0 * tc[0];
  x2144 = 4.08 * exp(g_RT[10] - g_RT[13] - g_RT[2] + g_RT_qss[1] + x2138);
  x732 = sc[10] * x2144;
  x220 = 39000000.0 * exp(-1781.38699694871 * invT - x166 - x388);
  x2179 = sc[4] * x220;
  x2186 = 300000.0 * exp(-5.5353833238519199 * invT + 0.29 * tc[0]);
  x2187 = sc[3] * x2186;
  x882 = 33000000.0 * sc[2] * x385;
  x2191 = 100000000.0 * sc[10] * x290;
  x943 = -110.707666477038 * invT + 1.83 * tc[0];
  x2252 = 19.2 * exp(-g_RT[14] - g_RT[2] + g_RT[8] + g_RT_qss[3] + x943);
  x2253 = sc[8] * x2252;
  x2254 = 0.384 * exp(g_RT[12] - g_RT[14] - g_RT[2] + g_RT_qss[1] + x943);
  x2258 = sc[12] * x2254;
  x2260 = 15.1 * exp(-1882.0303301096501 * invT + 1.91 * tc[0] - x166 - x76);
  x2261 = sc[4] * x2260;
  x2262 = 89.8 * exp(-2863.3028284288498 * invT + 1.92 * tc[0] - x166 - x449);
  x2270 = sc[4] * x2262;
  x2271 = 96000000.0 * sc[12] * x512;
  x611 = 30830000.0 * exp(-14492.6399751759 * invT - x611);
  x2272 = sc[2] * x611;
  x888 = 20000000.0 * sc[2] * x2054;
  x2278 = 300000.0 * exp(
                       g_RT[2] - g_RT[3] - g_RT_qss[6] + g_RT_qss[8] -
                       5.5353833238519199 * invT + 0.29 * tc[0]);
  x2284 = sc[2] * x2278;
  x753 = 42200000.0 * exp(-30595.573280927001 * invT - x114 - x76);
  x1470 = sc[6] * x753;
  x1557 = 10000000.0 * sc[11] * x312;
  x351 = 7600000.0 * sc[3] * exp(-201.28666632188799 * invT);
  x353 = 46000000000.0 * exp(-508.24883246276698 * invT - 1.39 * tc[0]);
  x373 = sc[3] * x353;
  x375 = 46000000000.0 * exp(
                           g_RT[12] - g_RT[3] + g_RT_qss[3] - g_RT_qss[6] -
                           508.24883246276698 * invT - 1.39 * tc[0]);
  x694 = sc[12] * x375;
  x1597 = 100000000.0 * exp(-20128.666632188801 * invT - x114 - x388);
  x2147 = sc[6] * x1597;
  x2178 = 10560000.0 * exp(
                         -g_RT[3] + g_RT[4] - g_RT_qss[1] + g_RT_qss[3] -
                         754.82499870708 * invT);
  x242 = sc[4] * x2178;
  x2255 = 1.34 * exp(192.93326966953001 * invT + 1.61 * tc[0]);
  x2256 = sc[3] * x2255;
  x2257 = 13200000.0 * sc[3] * exp(-754.82499870708 * invT);
  x2273 = 4.28e-19 * exp(1776.3548302906599 * invT + 7.6 * tc[0]);
  x2324 = sc[3] * x2273;
  x2327 = 3.6 * exp(-1258.0416645118 * invT + 2.0 * tc[0] - x162 - x76);
  x2328 = sc[5] * x2327;
  x2330 = 10560000.0 * sc[3] * exp(-754.82499870708 * invT);
  x107 = 11.3 * sc[4] * exp(-1509.64999741416 * invT + 2.0 * tc[0]);
  x556 = 6600000.0 * sc[12] * x66 * x72;
  x717 = 3430.0 * exp(224.93784961470999 * invT + 1.18 * tc[0] - x162 - x388);
  x1507 = sc[5] * x717;
  x1444 = 25010000.0 * sc[5] * x576;
  x1572 = 56.0 * exp(
                   -g_RT[8] + g_RT_qss[1] - 2727.4343286615799 * invT +
                   1.6 * tc[0] - x162);
  x1599 = sc[5] * x1572;
  x1593 = 3.54 * exp(-437.79849925010598 * invT + 2.12 * tc[0] - x162 - x449);
  x883 = sc[5] * x1593;
  x872 = 13400000.0 * sc[4] * x614;
  x2188 = 24000000.0 * sc[4] * x1833 * x452;
  x2266 = 10000000.0 * sc[4] * x196;
  x415 = exp(-1006.43333160944 * invT);
  x341 = 10000000.0 * sc[4] * x415;
  x2268 = 12100.0 * sc[7] * exp(299.91713281961302 * invT);
  x1049 =
    1000000.0 * exp(-g_RT[6] + g_RT[7] - 4025.7333264377598 * invT - x388);
  x2325 = sc[7] * x1049;
  x2326 = 8700.0 * sc[7] * exp(-490.13303249379697 * invT);
  x76 = 0.227 * exp(-4629.5933254034198 * invT + 2.0 * tc[0] - x76 - x86);
  x2329 = sc[9] * x76;
  x388 = 0.00332 * exp(-2948.8496616156599 * invT + 2.81 * tc[0] - x388 - x86);
  x2358 = sc[9] * x388;
  x2359 = -4161.6018262050302 * invT + 2.0 * tc[0];
  x2360 = 4.92 * sc[9] * exp(x2359);
  x2361 = -0.29097730287517898 * x123 +
          0.43429448190325198 * log(1.708e+39 * x119) - 0.4;
  x2362 = -0.55155399201712996 * x123 - 0.14 * x2361 + 0.75;
  x2363 = exp(
            M_LN10 * (0.43429448190325198 * x123 /
                      (((x2361) * (x2361)) / ((x2362) * (x2362)) + 1.0))) /
          (1.708e+39 * x119 + 1.0);
  x2364 = 4.27e+46 * sc[8] * x119 * x2363;
  x2365 = 32000000.0 * sc[9] * x2117;
  x2366 = 40000000.0 * sc[15] * exp(276.769166192596 * invT);
  x2369 = -0.29097730287517898 * x371 +
          0.43429448190325198 * log(1.2222222222222201e+29 * x367) - 0.4;
  x2370 = -0.14 * x2369 - 0.55155399201712996 * x371 + 0.75;
  x2371 = exp(
            M_LN10 * (0.43429448190325198 * x371 /
                      (((x2369) * (x2369)) / ((x2370) * (x2370)) + 1.0))) /
          (1.2222222222222201e+29 * x367 + 1.0);
  x1549 = 2.2e+36 * sc[8] * x2371 * x367;
  x1582 = 6.14 * exp(-5258.61415765932 * invT + 1.74 * tc[0] - x449 - x86);
  x1808 = sc[9] * x1582;
  x359 = 9980000.0 * sc[1] * x2149;
  x449 = exp(g_RT[8] - g_RT_qss[2] + 276.769166192596 * invT - x449);
  x699 = 40000000.0 * sc[8] * x449;
  x714 = 7.8e+41 * exp(-23600.8616262414 * invT - 9.147 * tc[0]);
  x92 =
    330000.0 * exp(-g_RT[14] - g_RT[8] + g_RT_qss[9] - 3874.76832669634 * invT);
  x110 = refC * x92;
  x57 = 2.46 * sc[9] * exp(x2359);
  x153 = 16000000.0 * sc[9] * x2117;
  x728 = 50000000.0 * sc[9] * x12;
  x744 = sc[13] * exp(-3019.29999482832 * invT + 2.0 * tc[0]);
  x433 =
    10.0 *
    exp(-g_RT[13] + g_RT_qss[6] - 3019.29999482832 * invT + 2.0 * tc[0] - x90);
  x747 = sc[10] * x433;
  x757 = sc[14] * exp(-4025.7333264377598 * invT + 2.0 * tc[0]);
  x771 = -3570.32224388449 * invT - 5.11 * tc[0];
  x240 = 3320987654320990.0 * x40 *
         exp(2269.50716277929 * invT - 0.5 * tc[0] + x240);
  x489 = -0.29097730287517898 * x245 + 0.43429448190325198 * log(x240) - 0.4;
  x782 = -0.55155399201712996 * x245 - 0.14 * x489 + 0.75;
  x789 = exp(
    M_LN10 * (0.43429448190325198 * x245 /
              (((x489) * (x489)) / ((x782) * (x782)) + 1.0)));
  x810 = 2.69e+21 * x789 * exp(x771) / (x240 + 1.0);
  x814 = sc[10] * x40 * x810;
  x816 = 30000000.0 * sc[10] * x158;
  x664 = 3400000.0 * exp(
                       g_RT[10] - g_RT[11] - g_RT_qss[0] + g_RT_qss[3] -
                       347.21949940525701 * invT);
  x908 = sc[10] * x664;
  x912 = 10.0 * exp(
                  -g_RT[14] + g_RT_qss[7] - 4025.7333264377598 * invT +
                  2.0 * tc[0] - x90);
  x637 = sc[10] * x912;
  x925 = 2640000.0 * sc[3] * exp(-754.82499870708 * invT);
  x994 = -25009.868290494604 * invT - 0.64 * tc[0];
  x24 =
    3.0625e-6 * x22 * exp(25538.245789589499 * invT + 0.52 * tc[0] + x24) + 1.0;
  x1001 = 2450000000.0 * x22 * exp(x23 + x994) / x24;
  x256 =
    exp(g_RT[0] + g_RT[16] - g_RT[17] - g_RT[1] - 4025.7333264377598 * invT);
  x261 = 0.17 * exp(
                  g_RT[0] + g_RT[19] - g_RT[1] - g_RT[20] -
                  1253.00949785375 * invT + 2.5 * tc[0]);
  x277 = 12.1 * exp(
                  g_RT[0] - g_RT[1] + g_RT[6] - g_RT[7] -
                  2616.7266621845401 * invT + 2.0 * tc[0]);
  x866 = 16600000.0 *
         exp(g_RT[0] - g_RT[1] + g_RT[3] - g_RT[6] - 412.63766595986999 * invT);
  x878 = 0.05 * exp(-3165.23282791169 * invT + 2.67 * tc[0]);
  x1032 = 216.0 * sc[4] * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  x435 =
    (-sc_qss[0] * x435 - sc_qss[1] * x666 - sc_qss[2] * x607 + x427) / x564;
  x564 = sc_qss[1] * x658 + sc_qss[2] * x599 + sc_qss[6] * x65;
  x607 = -x1176 - x564;
  x233 =
    (-sc_qss[0] * x324 - sc_qss[1] * x662 - sc_qss[3] * x441 + x1210) / x233;
  x75 = 660.0 *
        exp(g_RT[8] - g_RT[9] - 5454.8686573231598 * invT + 1.62 * tc[0] - x75);
  x324 = x559 * (-sc_qss[2] * x602 / x518 - sc_qss[3] * x442 / x518 + x1329);
  x441 = 30000000.0 * sc[0] * x592;
  x442 = g_RT[0] - 2.0 * g_RT[1];
  x518 = x1462 / x852;
  x559 = 110.7 * exp(-840.37183189388202 * invT + 1.79 * tc[0]);
  x602 = sc[10] + sc[21] + sc[3] + x17 + x38;
  x662 = sc[0] * x559;
  x597 = (-sc_qss[0] * x597 - sc_qss[1] * x671 + x1388) / x645;
  x645 = (-sc_qss[0] * x1076 + x320) / x672;
  x666 =
    exp(g_RT[0] + g_RT[17] - g_RT[1] - g_RT_qss[8] - 2012.8666632188799 * invT);
  x671 = ((x2040) * (x2040)) / ((x660) * (x660) * (x660));
  x672 = x2040 / ((x660) * (x660));
  x43 = x43 / ((((x2040) * (x2040)) / ((x660) * (x660)) + 1.0) *
               (((x2040) * (x2040)) / ((x660) * (x660)) + 1.0));
  x1076 = 7.0e+44 * refCinv * sc[0] * x2046 * x40 * x607;
  x1210 = refCinv * sc[0] * x2046 * x607;
  x1329 = x2045 / ((x34 + 1.0) * (x34 + 1.0));
  x33 = refCinv * sc[0] * x40 * x607 *
        exp(-145172.975918004 * invT - 18.18 * tc[0] - 2 * x2039 + x33);
  x427 =
    sc[14] * x40 * exp(-145172.975918004 * invT - 18.18 * tc[0] - 2 * x2039);
  x1388 = x2045 * exp(-94921.759670744301 * invT - 8.87 * tc[0] - x2039) /
          (x34 + 1.0);
  x320 = 7.0e+44 * sc[14] * x1388 * x40 * x43;
  x1462 = 1.4e+45 * sc[14] * x1388 +
          x1076 * x43 * (0.56 * x671 * x691 + 4.0 * x672 * x691) -
          1.4e+45 * x1210 + 1.225e+77 * x1329 * x33 - 1.225e+77 * x1329 * x427 -
          x320 * (0.56 * x671 * x691 + 4.0 * x672 * x691);
  x852 = -40056.046598055698 * invT + 1.5 * tc[0];
  x1041 = 117906976744186.0 * x40 *
          exp(-42446.325760628097 * invT - 3.42 * tc[0] - x852);
  x125 = log(
    0.068 * exp(-0.0050761421319797002 * tc[1]) +
    0.932 * exp(-0.00064935064935064902 * tc[1]) + exp(-10300.0 * invT));
  x127 = -0.29097730287517898 * x125 + 0.43429448190325198 * log(x1041) - 0.4;
  x28 = -0.55155399201712996 * x125 - 0.14 * x127 + 0.75;
  x218 = exp(
    M_LN10 *
    (0.43429448190325198 * x125 / (((x127) * (x127)) / ((x28) * (x28)) + 1.0)));
  x723 = x218 * exp(-82502.372358683802 * invT - 1.92 * tc[0] - x852) /
         (x1041 + 1.0);
  x144 = ((x127) * (x127)) * x691 / ((x28) * (x28) * (x28));
  x693 = x127 * x691 / ((x28) * (x28));
  x696 = x125 / ((((x127) * (x127)) / ((x28) * (x28)) + 1.0) *
                 (((x127) * (x127)) / ((x28) * (x28)) + 1.0));
  x703 = x218 *
         exp(
           -g_RT[0] - g_RT[10] + g_RT[12] - 82502.372358683802 * invT -
           1.92 * tc[0] - x852) /
         (x1041 + 1.0);
  x707 = 5070000000000000.0 * sc[12] * x696 * x703 * x788;
  x424 = x218 / ((x1041 + 1.0) * (x1041 + 1.0));
  x635 = sc[12] * x788 *
         exp(
           -g_RT[0] - g_RT[10] + g_RT[12] - 124948.698119312 * invT -
           5.34 * tc[0] - 2 * x852);
  x711 = 5070000000000000.0 * sc[0] * x40 * x723;
  x729 = sc[10] * x696 * x711;
  x737 = sc[0] * sc[10] * x40 *
         exp(-124948.698119312 * invT - 5.34 * tc[0] - 2 * x852);
  x740 = sc[0] * sc[10] * x723;
  x100 = 1.014e+16 * x1564 * x703 - 1.19557674418605e+30 * x424 * x635 +
         1.19557674418605e+30 * x424 * x737 -
         x707 * (0.56 * x144 + 4.0 * x693) + x729 * (0.56 * x144 + 4.0 * x693) -
         1.014e+16 * x740;
  x767 = -73400000.0 * sc[10] * x1221 - 15000000.0 * sc[10] * x1352 -
         5070000000000000.0 * sc[10] * x40 * x723 + 73400000.0 * sc[1] * x827 -
         73400000.0 * sc[1] * x961 - 15000000.0 * sc[2] * x1014 +
         15000000.0 * sc[2] * x987 + x100;
  x768 = exp(-4025.7333264377598 * invT);
  x775 = 0.17 * sc[20] * exp(-1253.00949785375 * invT + 2.5 * tc[0]);
  x778 = sc_qss[3] * x437 + sc_qss[6] * x230;
  x209 = -x1209 - x778;
  x785 = 20000000.0 * x2054 * x209;
  x806 = 12.1 * exp(-2616.7266621845401 * invT + 2.0 * tc[0]);
  x46 = 16600000.0 * exp(-412.63766595986999 * invT);
  x862 =
    0.05 *
    exp(-g_RT[0] + g_RT[1] - 3165.23282791169 * invT + 2.67 * tc[0] - x166);
  x247 =
    216.0 *
    exp(-g_RT[0] + g_RT[1] - 1726.0331637101899 * invT + 1.51 * tc[0] - x162);
  x868 = 115.0 * exp(-3789.2214935095399 * invT + 1.9 * tc[0]);
  x874 = exp(-tc[0]);
  x268 = 50.7 * exp(-6516.6558221711202 * invT + 1.93 * tc[0]);
  x879 = exp(-2.0 * tc[0]);
  x825 = 660.0 * sc[9] * exp(-5454.8686573231598 * invT + 1.62 * tc[0]);
  x904 = 0.5 * exp(
                 -g_RT[0] + g_RT[1] + g_RT[8] - g_RT_qss[1] -
                 3638.25649376812 * invT + 2.0 * tc[0]);
  x856 = 23000.0 * exp(-1648.03458051046 * invT + 1.05 * tc[0]);
  x478 = sc_qss[7] * x555;
  x921 = -5070000000000000.0 * sc[0] * sc[10] * x723 +
         5070000000000000.0 * x1564 * x703 -
         5.9778837209302301e+29 * x424 * x635 +
         5.9778837209302301e+29 * x424 * x737 -
         x707 * (0.28 * x144 + 2.0 * x693) + x729 * (0.28 * x144 + 2.0 * x693);
  x499 = x43 * (0.28 * x671 * x691 + 2.0 * x672 * x691);
  x37 = refC * sc[0] * exp(-tc[0] + x442);
  x56 = -7.0e+44 * refCinv * sc[0] * x2046 * x607 -
        7.0e+44 * sc[14] * x1388 * x40 * x499 + 7.0e+44 * sc[14] * x1388 +
        1000000.0 * ((sc[1]) * (sc[1])) * x874 + x1076 * x499 +
        6.125e+76 * x1329 * x33 - 6.125e+76 * x1329 * x427 - 1000000.0 * x37;
  x473 = sc_qss[2] * x642;
  x487 = 73400000.0 * sc[1] * x1064 - 73400000.0 * sc[1] * x969 +
         15000000.0 * sc[2] * x1211 - 15000000.0 * sc[2] * x1389 +
         73400000.0 * x435;
  x997 =
    15000000.0 * sc[2] * x1419 - 15000000.0 * sc[2] * x1461 + 15000000.0 * x597;
  x626 = 216.0 * sc[0] * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  x792 = -73400000.0 * sc[1] * x1669 + 73400000.0 * sc[1] * x1751 +
         15000000.0 * sc[2] * x1523 - 15000000.0 * sc[2] * x1533 +
         3.042e+16 * x1564 * x703 - 3.5867302325581401e+30 * x424 * x635 +
         3.5867302325581401e+30 * x424 * x737 -
         x707 * (1.68 * x144 + 12.0 * x693) +
         x729 * (1.68 * x144 + 12.0 * x693) - 3.042e+16 * x740;
  x30 = -x2038 * x411 - x2047 * x411 + x56;
  x171 = 20000000.0 * sc[1] * x1893 + 1800000.0 * sc[1] * x1989 +
         x1905 * x2060 + x30;
  x798 = -73400000.0 * sc[1] * x1768 + 73400000.0 * sc[1] * x1769 +
         15000000.0 * sc[2] * x1563 - 15000000.0 * sc[2] * x1573 + x921;
  x813 = 660.0 * sc[1] * exp(-5454.8686573231598 * invT + 1.62 * tc[0]);
  x950 = -73400000.0 * sc[1] * x1778 + 73400000.0 * sc[1] * x1780 +
         15000000.0 * sc[2] * x796 - 15000000.0 * sc[2] * x986 + x100;
  x1037 = x696 * (0.42 * x144 + 3.0 * x693);
  x1044 =
    -73400000.0 * sc[0] * x1221 - 15000000.0 * sc[0] * x1352 +
    sc[10] * x1037 * x711 - 5070000000000000.0 * sc[12] * x1037 * x703 * x788 +
    73400000.0 * sc[1] * x1678 - 73400000.0 * sc[1] * x1797 +
    15000000.0 * sc[2] * x1584 - 15000000.0 * sc[2] * x1586 +
    7605000000000000.0 * x1564 * x703 - 8.9668255813953501e+29 * x424 * x635 +
    8.9668255813953501e+29 * x424 * x737 - x711 - 7605000000000000.0 * x740;
  x1121 = 73400000.0 * sc[1] * x1663 - 73400000.0 * sc[1] * x1750 +
          15000000.0 * sc[2] * x1587 - 15000000.0 * sc[2] * x1588 + x100;
  x1131 = -73400000.0 * sc[1] * x1761 + 73400000.0 * sc[1] * x1765 -
          15000000.0 * sc[2] * x1459 + 15000000.0 * sc[2] * x1589 +
          5070000000000000.0 * x703 * x788;
  x562 = 1.521e+16 * x1564 * x703 - 1.79336511627907e+30 * x424 * x635 +
         1.79336511627907e+30 * x424 * x737 -
         x707 * (0.84 * x144 + 6.0 * x693) + x729 * (0.84 * x144 + 6.0 * x693) -
         1.521e+16 * x740;
  x585 = -73400000.0 * sc[1] * x1830 + 73400000.0 * sc[1] * x1831 +
         15000000.0 * sc[2] * x884 - 15000000.0 * sc[2] * x890 + x562;
  x1005 = 2.1e+45 * sc[14] * x1388 + 3000000.0 * ((sc[1]) * (sc[1])) * x874 +
          20000000.0 * sc[1] * x1386 +
          x1076 * x43 * (0.84 * x671 * x691 + 6.0 * x672 * x691) -
          2.1e+45 * x1210 + 1.8375e+77 * x1329 * x33 -
          1.8375e+77 * x1329 * x427 + x2060 * x791 -
          x320 * (0.84 * x671 * x691 + 6.0 * x672 * x691) - 3000000.0 * x37;
  x1012 = -73400000.0 * sc[1] * x1834 + 73400000.0 * sc[1] * x1835 -
          15000000.0 * sc[2] * x1648 + 15000000.0 * sc[2] * x898 + x562;
  x1136 = -73400000.0 * sc[1] * x1838 + 73400000.0 * sc[1] * x1842 +
          15000000.0 * sc[2] * x1666 - 15000000.0 * sc[2] * x1671 + x562;
  x1155 = -2000000.0 * sc[1] * x1364;
  x1246 = -90000000.0 * sc[1] * x1845 + x1364 * x2050 + x1845 * x2031;
  x1252 =
    2000000.0 * sc[1] * x1789 + x1155 + x1246 - x1789 * x2050 + x1843 * x2024;
  x1264 = -73400000.0 * sc[1] * x1843 - 15000000.0 * sc[2] * x1681 + x921;
  x1338 = 70000000.0 * sc[0] * x1681 - 30000000.0 * sc[1] * x1681 + x1264;
  x149 = 20000000.0 * sc[1] * x1893 + 1800000.0 * sc[1] * x1989 + x1080 * x441 +
         x1080 * x662 - x1083 * x2034 + x1083 * x2037 + x1338;
  x1173 = 0.17 * sc[1] * exp(-1253.00949785375 * invT + 2.5 * tc[0]);
  x97 = -73400000.0 * sc[1] * x1843 + 73400000.0 * sc[1] * x1846 +
        15000000.0 * sc[2] * x1631 - 15000000.0 * sc[2] * x1670 + x921;
  x937 = -50000000.0 * sc[14] * x1014 + 50000000.0 * sc[14] * x987 +
         x2043 * x760 - x2043 * x823 + x2097 * x819 + x2112 * x644 -
         x2112 * x855;
  x508 = 94600000.0 * sc[12] * exp(259.15658288943098 * invT);
  x946 = x2176 / ((x202 + 1.0) * (x202 + 1.0));
  x532 = -7699.2149868121596 * invT - 15.22 * tc[0];
  x588 = x1199 * x40 * x946 * exp(x532);
  x1314 = ((x2174) * (x2174)) / ((x2175) * (x2175) * (x2175));
  x1028 = x2174 / ((x2175) * (x2175));
  x207 = x207 / ((((x2174) * (x2174)) / ((x2175) * (x2175)) + 1.0) *
                 (((x2174) * (x2174)) / ((x2175) * (x2175)) + 1.0));
  x105 = refC * x209 * x2177;
  x894 = x2176 * exp(-5988.2783230761797 * invT - 7.64 * tc[0]) / (x202 + 1.0);
  x201 = x209 * x788 * exp(x201 + x532);
  x1055 =
    -3.8e+29 * x105 * x207 * x40 * (4.0 * x1028 * x691 + 0.56 * x1314 * x691) +
    7.6e+29 * x105 +
    3.8e+29 * x1199 * x207 * x40 * x894 *
      (4.0 * x1028 * x691 + 0.56 * x1314 * x691) -
    7.6e+29 * x1199 * x894 - 8.7515151515151504e+50 * x201 * x946 +
    8.7515151515151504e+50 * x588;
  x1054 = 50000000.0 * sc[16] * x256 + 48000000.0 * sc[2] * x760 -
          48000000.0 * sc[2] * x823 + 20000000.0 * sc[4] * x819 + x1055 -
          x1465 * x508 + x2180 * x657 + x508 * x972;
  x936 = 40000000.0 * sc[8] * x644 - 40000000.0 * sc[8] * x855 -
         60000000.0 * sc[9] * x1465 + 60000000.0 * sc[9] * x972 -
         x1014 * x2091 + x2029 * x233 + x2031 * x760 - x2031 * x823 +
         x2091 * x987 + x2132 * x927 - x2132 * x956;
  x954 = 5710000.0 * sc[5] * exp(379.92858268256299 * invT);
  x1056 = x458 / ((x618 + 1.0) * (x618 + 1.0));
  x901 = -x1387 - x473;
  x931 = -4287.4059926562095 * invT - 10.054 * tc[0];
  x617 = x788 * x901 * exp(x617 + x931);
  x932 = x2157 * x691 / ((x2125) * (x2125));
  x960 = ((x2157) * (x2157)) * x691 / ((x2125) * (x2125) * (x2125));
  x214 = 2.2e+18 * refC * x1430 * x40 * x624 * x901 /
         ((1.0 + ((x2157) * (x2157)) / ((x2125) * (x2125))) *
          (1.0 + ((x2157) * (x2157)) / ((x2125) * (x2125))));
  x983 = x458 * exp(-2797.8846618742396 * invT - 4.8 * tc[0]) / (x618 + 1.0);
  x985 = x1056 * x1369 * x40 * exp(x931);
  x624 = 2.2e+18 * x1369 * x40 * x624 * x983 /
         ((1.0 + ((x2157) * (x2157)) / ((x2125) * (x2125))) *
          (1.0 + ((x2157) * (x2157)) / ((x2125) * (x2125))));
  x187 = 4.4e+18 * refC * x1430 * x901 - 1.79259259259259e+31 * x1056 * x617 -
         4.4e+18 * x1369 * x983 - x214 * (4.0 * x932 + 0.56 * x960) +
         x624 * (4.0 * x932 + 0.56 * x960) + 1.79259259259259e+31 * x985;
  x1053 = -30000000.0 * sc[4] * x1014 + 20000000.0 * sc[4] * x644 -
          20000000.0 * sc[4] * x855 + 30000000.0 * sc[4] * x987 - x1465 * x954 +
          x1657 * x435 + x187 + x1887 * x2124 + x2024 * x827 - x2024 * x961 +
          x954 * x972;
  x1066 = exp(-g_RT[1] - 2.0 * tc[0] - x162);
  x1493 = refC * sc[5] * x1066;
  x897 = sc[1] * sc[4] * x879;
  x1500 = 30000000.0 * sc[2] * x827 + sc[2] * x878 - 30000000.0 * sc[2] * x961 -
          28000000.0 * sc[3] * x1014 + 28000000.0 * sc[3] * x987 +
          16060000000.0 * x1493 - 16060000000.0 * x897;
  x52 = x435 * exp(-8554.6833186802305 * invT - tc[0]);
  x1505 = exp(g_RT[1] - 8554.6833186802305 * invT - tc[0] - x90);
  x842 = -57000000.0 * sc[2] * x1465 + 57000000.0 * sc[2] * x972 -
         374000000000.0 * x1248 * x1505 + x2096 * x827 - x2096 * x961 +
         374000000000.0 * x52;
  x1528 =
    195039370078.74 * x40 * exp(-1035.1166815603121 * invT - 4.13 * tc[0]);
  x631 = log(
    0.217 * exp(-0.0135135135135135 * tc[1]) +
    0.783 * exp(-0.00034002040122407302 * tc[1]) + exp(-6964.0 * invT));
  x483 = -0.29097730287517898 * x631 + 0.43429448190325198 * log(x1528) - 0.4;
  x1547 = -0.14 * x483 - 0.55155399201712996 * x631 + 0.75;
  x537 = x483 / ((x1547) * (x1547));
  x378 = ((x483) * (x483)) / ((x1547) * (x1547) * (x1547));
  x1328 = x631 / ((1.0 + ((x483) * (x483)) / ((x1547) * (x1547))) *
                  (1.0 + ((x483) * (x483)) / ((x1547) * (x1547))));
  x1537 = x1328 * (0.56 * x378 * x691 + 4.0 * x537 * x691);
  x356 = exp(
           M_LN10 * (0.43429448190325198 * x631 /
                     (1.0 + ((x483) * (x483)) / ((x1547) * (x1547))))) /
         (x1528 + 1.0);
  x252 = -1227.8486645635121 * invT - 4.76 * tc[0];
  x1595 = sc[1] * sc[8] * x356 * exp(x252);
  x273 = exp(
           M_LN10 * (0.43429448190325198 * x631 /
                     (1.0 + ((x483) * (x483)) / ((x1547) * (x1547))))) /
         ((x1528 + 1.0) * (x1528 + 1.0));
  x648 = sc[1] * sc[8] * x40 * exp(-2262.965346123824 * invT - 8.89 * tc[0]);
  x1638 = 2.477e+21 * x356 * x788 * exp(-g_RT[1] + x252 - x86);
  x1052 = refC * sc[9] * exp(-g_RT[1] + x252 - x86);
  x1416 = sc[9] * x788 *
          exp(-g_RT[1] - 2262.965346123824 * invT - 8.89 * tc[0] - x86);
  x439 = -sc[9] * x1537 * x1638 + 4.954e+21 * x1052 * x356 -
         9.6622503937007901e+32 * x1416 * x273 +
         2.477e+21 * x1537 * x1595 * x40 - 4.954e+21 * x1595 +
         9.6622503937007901e+32 * x273 * x648;
  x1652 = -70000000.0 * sc[0] * x1014 + 70000000.0 * sc[0] * x987 +
          x2037 * x644 - x2037 * x855 + x439 + 70000000.0 * x597 +
          0.5 * x645 * exp(-3638.25649376812 * invT + 2.0 * tc[0]);
  x1682 = x2100 / ((x2103) * (x2103));
  x1683 = ((x2100) * (x2100)) / ((x2103) * (x2103) * (x2103));
  x1058 = x266 / ((((x2100) * (x2100)) / ((x2103) * (x2103)) + 1.0) *
                  (((x2100) * (x2100)) / ((x2103) * (x2103)) + 1.0));
  x1705 = x1058 * (4.0 * x1682 * x691 + 0.56 * x1683 * x691);
  x1079 = 3200000000000000.0 * x2106 * x788 *
          exp(-618.95649893980499 * invT - 3.14 * tc[0] + x1446);
  x266 = exp(
           M_LN10 * (0.43429448190325198 * x266 /
                     (((x2100) * (x2100)) / ((x2103) * (x2103)) + 1.0))) /
         ((x2099 + 1.0) * (x2099 + 1.0));
  x1091 = x645 * x773 * exp(-1237.91299787961 * invT - 5.48 * tc[0]);
  x1186 = refC * sc[8] * x2106 *
          exp(-618.95649893980499 * invT - 3.14 * tc[0] + x1446);
  x1206 = sc[1] * x2139 * x324;
  x1647 = -5932.9244898376455 * invT - 13.17 * tc[0];
  x914 =
    sc[15] * x2137 * x788 * exp(x1313 + x1647) / ((x492 + 1.0) * (x492 + 1.0));
  x686 = 1.7777777777777777 * x2044 /
         ((-0.18666666666666668 * x2044 - 0.73540532268950665 * x348 + 1) *
          (-0.18666666666666668 * x2044 - 0.73540532268950665 * x348 + 1));
  x1437 = 2.3703703703703702 * ((x2044) * (x2044)) /
          ((-0.18666666666666668 * x2044 - 0.73540532269 * x348 + 1) *
           (-0.18666666666666668 * x2044 - 0.73540532269 * x348 + 1) *
           (-0.18666666666666668 * x2044 - 0.73540532269 * x348 + 1));
  x1509 = x2080 * exp(x1251 + x2027);
  x1022 = 1350000000000.0 * sc[12] * x1509 * x348 * x788 / ((x2048) * (x2048));
  x1410 = x2080 * x435 * exp(x2027);
  x837 = 1350000000000.0 * x1410 * x348 * x773 / ((x2048) * (x2048));
  x382 = x2088 * exp(x1135 + x2084) / (x137 + 1.0);
  x286 = x2088 / ((x137 + 1.0) * (x137 + 1.0));
  x1135 =
    sc[14] * x788 * exp(-3200.4579945180158 * invT - 7.99 * tc[0] + x1135);
  x1753 = x233 * x773 * exp(-3200.4579945180158 * invT - 7.99 * tc[0]);
  x1446 = sc[8] * x788 * exp(-1237.91299787961 * invT - 5.48 * tc[0] + x1446);
  x1793 = ((x2086) * (x2086)) / ((x2087) * (x2087) * (x2087));
  x1057 = x2086 / ((x2087) * (x2087));
  x142 = x142 / ((((x2086) * (x2086)) / ((x2087) * (x2087)) + 1.0) *
                 (((x2086) * (x2086)) / ((x2087) * (x2087)) + 1.0));
  x762 = x2088 * x233 * exp(x2084) / (x137 + 1.0);
  x795 = 1.4e+18 * x142 * x762 * x773;
  x900 = 1.4e+18 * sc[14] * x142 * x382 * x788;
  x934 = exp(M_LN10 * (0.43429448190325198 * x348 / x2048)) /
         ((x343 + 1.0) * (x343 + 1.0));
  x1251 = sc[12] * x788 * exp(-1565.003830652674 * invT - 5.62 * tc[0] + x1251);
  x965 = x435 * x773 * exp(-1565.003830652674 * invT - 5.62 * tc[0]);
  x966 = sc[1] * x2106 * x645 * exp(-618.95649893980499 * invT - 3.14 * tc[0]);
  x783 = x209 * x2140 * x783;
  x967 = 3.6982248520710056e-40 *
         exp(
           M_LN10 * (0.43429448190325198 * x180 /
                     (((x2127) * (x2127)) / ((x2135) * (x2135)) + 1.0))) /
         ((x176 + 1.923076923076923e-20) * (x176 + 1.923076923076923e-20));
  x968 = ((x2127) * (x2127)) / ((x2135) * (x2135) * (x2135));
  x964 = 4.0 * x2127 * x691 / ((x2135) * (x2135)) + 0.56 * x691 * x968;
  x180 = x180 / ((((x2127) * (x2127)) / ((x2135) * (x2135)) + 1.0) *
                 (((x2127) * (x2127)) / ((x2135) * (x2135)) + 1.0));
  x176 = 5.2e+27 * x176 * x209 * x2140;
  x720 = sc[1] * x176 * x180;
  x826 = x2133 / ((x2136) * (x2136));
  x857 = ((x2133) * (x2133)) / ((x2136) * (x2136) * (x2136));
  x497 = x497 / ((((x2133) * (x2133)) / ((x2136) * (x2136)) + 1.0) *
                 (((x2133) * (x2133)) / ((x2136) * (x2136)) + 1.0));
  x858 = x2137 * exp(-3364.0034109045528 * invT - 7.08 * tc[0] + x1313) /
         (x492 + 1.0);
  x172 = 1.99e+29 * sc[15] * x497 * x788 * x858;
  x232 = x209 * x774 * x967;
  x988 = sc[18] * x1192 * x180 * x2140;
  x601 = x2137 * x324 * x773 * exp(x1647) / ((x492 + 1.0) * (x492 + 1.0));
  x318 = 1.99e+29 * x2139 * x324 * x497 * x773;
  x134 = x40 * exp(-3003.0964181894101 * invT - 12.0 * tc[0]);
  x1060 = log(exp(-0.00091190953857377404 * tc[1]) + exp(-6859.5 * invT));
  x422 = -0.29097730287517898 * x1060 +
         0.43429448190325198 * log(6.65e+39 * x134) - 0.4;
  x425 = -0.55155399201712996 * x1060 - 0.14 * x422 + 0.75;
  x428 = 2.2612923285657754e-80 *
         exp(
           M_LN10 * (0.43429448190325198 * x1060 /
                     (((x422) * (x422)) / ((x425) * (x425)) + 1.0))) /
         ((x134 + 1.5037593984962406e-40) * (x134 + 1.5037593984962406e-40));
  x1062 = sc[19] * x773 * exp(-6006.1928363788102 * invT - 24.0 * tc[0]);
  x886 = exp(
           M_LN10 * (0.43429448190325198 * x1060 /
                     (((x422) * (x422)) / ((x425) * (x425)) + 1.0))) /
         (6.65e+39 * x134 + 1.0);
  x887 = sc[19] * sc[1] * x886 * exp(-3003.0964181894101 * invT - 12.0 * tc[0]);
  x889 = x422 / ((x425) * (x425));
  x975 = ((x422) * (x422)) / ((x425) * (x425) * (x425));
  x828 = x1060 / ((((x422) * (x422)) / ((x425) * (x425)) + 1.0) *
                  (((x422) * (x422)) / ((x425) * (x425)) + 1.0));
  x315 = 1.33e+48 * x788 * x886 *
         exp(
           -g_RT[19] - g_RT[1] + g_RT[20] - 3003.0964181894101 * invT -
           12.0 * tc[0]);
  x589 = sc[20] * x315 * x828;
  x236 = sc[20] * x788 *
         exp(
           -g_RT[19] - g_RT[1] + g_RT[20] - 6006.1928363788102 * invT -
           24.0 * tc[0]);
  x583 = refC * sc[20] * x886 *
         exp(
           -g_RT[19] - g_RT[1] + g_RT[20] - 3003.0964181894101 * invT -
           12.0 * tc[0]);
  x608 = 1.33e+48 * sc[19] * x134 * x886;
  x321 = sc[1] * x608 * x828;
  x649 = 1.7689e+88 * x1062 * x428 - 1.7689e+88 * x236 * x428 +
         x321 * (4.0 * x691 * x889 + 0.56 * x691 * x975) + 2.66e+48 * x583 -
         x589 * (4.0 * x691 * x889 + 0.56 * x691 * x975) - 2.66e+48 * x887;
  x1073 = refC * exp(-g_RT[1] - tc[0] - x166);
  x1688 = sc[4] * x1073;
  x263 = sc[1] * sc[2] * x874;
  x1849 = -2700000000000.0 * sc[1] * x1410 - 2.8e+18 * sc[1] * x762 -
          sc[8] * x1079 * x1705 -
          x1022 * (0.56 * x1437 * x691 + 4.0 * x686 * x691) +
          8.192e+20 * x1091 * x266 - 6.4473684210526297e+29 * x1135 * x286 +
          6400000000000000.0 * x1186 - 3.98e+29 * x1206 -
          3.3440366972477102e+18 * x1251 * x934 - 8.192e+20 * x1446 * x266 +
          2.8e+18 * x1468 * x382 - 5.408e+47 * x1487 * x967 +
          1.04e+28 * x1490 * x2140 + 2700000000000.0 * x1509 * x1564 +
          3.98e+29 * x1539 * x858 + 1000000.0 * x1688 + x1705 * x2110 * x645 -
          x172 * (4.0 * x691 * x826 + 0.56 * x691 * x857) +
          6.4473684210526297e+29 * x1753 * x286 + 5.408e+47 * x232 -
          1000000.0 * x263 + x318 * (4.0 * x691 * x826 + 0.56 * x691 * x857) +
          1.5201919385796501e+47 * x601 + x649 + x720 * x964 - 1.04e+28 * x783 +
          x795 * (4.0 * x1057 * x691 + 0.56 * x1793 * x691) +
          x837 * (0.56 * x1437 * x691 + 4.0 * x686 * x691) -
          x900 * (4.0 * x1057 * x691 + 0.56 * x1793 * x691) -
          1.5201919385796501e+47 * x914 + 3.3440366972477102e+18 * x934 * x965 -
          x964 * x988 - 6400000000000000.0 * x966;
  x1886 = 1.0294387719188194 * ((x2189) * (x2189)) /
          (x20 * ((-0.18666666666666668 * x2189 - 0.73540532269 * x529 + 1) *
                  (-0.18666666666666668 * x2189 - 0.73540532269 * x529 + 1) *
                  (-0.18666666666666668 * x2189 - 0.73540532269 * x529 + 1)));
  x896 =
    0.77207907893911465 * x2189 /
    (x20 * ((-0.18666666666666668 * x2189 - 0.73540532268950665 * x529 + 1) *
            (-0.18666666666666668 * x2189 - 0.73540532268950665 * x529 + 1)));
  x139 = -x1284 - x478;
  x1026 = 6.26e+26 * x139 * x20 * x2192 * x529 * x545 / ((x2190) * (x2190));
  x1955 = exp(M_LN10 * (0.43429448190325198 * x529 / x2190)) * x20 /
          ((x2185 + 1.0) * (x2185 + 1.0));
  x1877 =
    sc[1] * sc[20] * x1955 * exp(-5404.19473907663 * invT - 13.32 * tc[0]);
  x529 = sc[1] * sc[20] * x20 * x2192 * x526 * x529 / ((x2190) * (x2190));
  x957 = refC * x139 * exp(-5404.19473907663 * invT - 13.32 * tc[0] + x543);
  x1654 =
    -x1026 * (0.56 * x1886 + 4.0 * x896) + 1.252e+27 * x139 * x2192 * x545 -
    1.252e+27 * x1554 * x2192 + 5.8928721804511299e+46 * x1877 -
    5.8928721804511299e+46 * x1955 * x957 + x529 * (0.56 * x1886 + 4.0 * x896);
  x1963 = ((x1970) * (x1970)) * x691 / ((x2068) * (x2068) * (x2068));
  x1978 = x1970 * x691 / ((x2068) * (x2068));
  x98 = x98 / ((((x1970) * (x1970)) / ((x2068) * (x2068)) + 1.0) *
               (((x1970) * (x1970)) / ((x2068) * (x2068)) + 1.0));
  x1636 = x2069 * x233 * exp(x1161) / (x1958 + 1.0);
  x1203 = exp(g_RT[13] + g_RT[1] - g_RT_qss[6] + x1161) / (x1958 + 1.0);
  x1175 = x40 / ((x1958 + 1.0) * (x1958 + 1.0));
  x1061 = -17385.743294553802 * invT - 8.42 * tc[0];
  x228 = x1128 * x2069 * exp(g_RT[13] + g_RT[1] - g_RT_qss[6] + x1061);
  x2039 = 2.565e+21 * x1128 * x1203 * x2069 * x40 * x98;
  x34 = -5.13e+21 * x1128 * x1203 * x2069 -
        3.4089248704663201e+34 * x1175 * x2069 * x233 * exp(x1061) +
        3.4089248704663201e+34 * x1175 * x228 -
        2.565e+21 * x1636 * x40 * x98 * (0.56 * x1963 + 4.0 * x1978) +
        5.13e+21 * x1636 + x2039 * (0.56 * x1963 + 4.0 * x1978);
  x2040 = -g_RT[1] - g_RT[3] + g_RT[6];
  x660 = refC * sc[6] * exp(-0.86 * tc[0] + x2040);
  x2045 = sc[1] * sc[3] * exp(-0.86 * tc[0]);
  x1161 = -2800000.0 * x2045 + 2800000.0 * x660;
  x1958 = ((x2101) * (x2101)) / ((x2128) * (x2128) * (x2128));
  x2027 = x2101 / ((x2128) * (x2128));
  x476 = x476 / ((((x2101) * (x2101)) / ((x2128) * (x2128)) + 1.0) *
                 (((x2101) * (x2101)) / ((x2128) * (x2128)) + 1.0));
  x343 = x2130 * exp(-3507.4201606589004 * invT - 7.62 * tc[0]) / (x471 + 1.0);
  x2044 = 1.2e+30 * x1289 * x343 * x40 * x476;
  x2080 = x2130 / ((x471 + 1.0) * (x471 + 1.0));
  x2084 = -6098.9859895531999 * invT - 15.694 * tc[0];
  x470 = x324 * x788 * exp(x2084 + x470);
  x137 = 1.2e+30 * x2131 * x324 * x476 * x788;
  x2086 = x1289 * x2080 * x40 * exp(x2084);
  x2087 = 2.4e+30 * refC * x2131 * x324 - 2.4e+30 * x1289 * x343 -
          x137 * (0.56 * x1958 * x691 + 4.0 * x2027 * x691) +
          x2044 * (0.56 * x1958 * x691 + 4.0 * x2027 * x691) -
          2.6666666666666702e+54 * x2080 * x470 +
          2.6666666666666702e+54 * x2086;
  x2088 = refCinv * exp(
                      g_RT[11] + 2.0 * g_RT[1] - g_RT[3] - g_RT_qss[1] -
                      754.82499870708 * invT);
  x2099 = exp(2.0 * g_RT[10] - g_RT[16] + g_RT[1] - g_RT[2]);
  x2100 = refCinv * ((sc[10]) * (sc[10]));
  x2103 = 10000000.0 * exp(-1811.57999689699 * invT);
  x2106 = 16.32 * exp(-g_RT[13] + g_RT[16] + g_RT[1] - g_RT[2] + x2138);
  x471 = 47.6 * exp(
                  -g_RT[10] + g_RT[11] + g_RT[1] - g_RT[4] -
                  35.225166606330397 * invT + 1.228 * tc[0]);
  x2101 = -30000000.0 * sc[11] * x1234 - sc[11] * x471 +
          30000000.0 * sc[2] * x1064 - 30000000.0 * sc[2] * x969;
  x2128 = 1.5e+18 * exp(
                      g_RT[19] + g_RT[1] - g_RT[8] - g_RT_qss[6] -
                      9368.8878839522695 * invT - 2.83 * tc[0]);
  x2130 =
    exp(-g_RT[14] + g_RT[19] + g_RT[1] - g_RT_qss[1] - 3019.29999482832 * invT);
  x2133 = 50000000.0 * sc[14] * x1211 - 50000000.0 * sc[14] * x1389 -
          50000000.0 * sc[19] * x1349 - sc[19] * x2128 -
          20000000.0 * sc[19] * x2130 - 20000000.0 * sc[19] * x415 +
          x1030 * x2043 - x1508 * x2043 + x1637 * x2097 + x2112 * x893 -
          x2112 * x899 - x608;
  x2136 = 1.6e+16 * exp(-5625.96232369677 * invT - 2.39 * tc[0]);
  x618 = -sc[20] * x20 * x2192 * x526 - sc[20] * x2136 + x2197 * x540 - x775;
  x458 = 94600000.0 * exp(
                        -g_RT[12] + g_RT[17] + g_RT[1] - g_RT_qss[0] +
                        259.15658288943098 * invT);
  x202 = 1500.0 * exp(-1353.6528310147 * invT + 1.43 * tc[0]);
  x2174 = 2.18e-10 * exp(
                       -g_RT[13] + g_RT[17] + g_RT[1] - g_RT[4] +
                       503.21666580471998 * invT + 4.5 * tc[0]);
  x2175 = exp(
    g_RT[17] + g_RT[1] - g_RT[20] - g_RT[2] + g_RT[8] -
    164.55184971814299 * invT + 1.65 * tc[0]);
  x2176 = 120.0 * refCinv * sc[17] * sc[8] * x2175;
  x2185 = -48000000.0 * sc[17] * x1150 - 20000000.0 * sc[17] * x1164 -
          sc[17] * x202 - sc[17] * x2174 - 3.8e+29 * sc[17] * x40 * x894 -
          sc[17] * x458 - 50000000.0 * sc[17] * x768 +
          48000000.0 * sc[2] * x1030 - 48000000.0 * sc[2] * x1508 +
          20000000.0 * sc[4] * x1637 + x1200 * x2180 + x1649 * x508 -
          x1694 * x508 - x2176;
  x2189 = -2.565e+21 * refCinv * sc[13] * x1203 * x2069 * x40 -
          40000000.0 * sc[13] * x1412 + x1030 * x2071 - x1508 * x2071;
  x2190 = 3970000.0 * exp(-337.65838275496702 * invT);
  x852 = -sc[6] * x2190 - sc[6] * x46 -
         70800000.0 * sc[6] * exp(-150.96499974141599 * invT);
  x1041 = 26000000.0 * exp(-1.24 * tc[0]);
  x125 = 2800000.0 * sc[0] + 2100000.0 * sc[10] + 4200000.0 * sc[11] +
         4200000.0 * sc[15] + 2800000.0 * sc[9] + 2800000.0 * x38;
  x127 = 16520000.0 * exp(-0.76 * tc[0]);
  x28 = 83000000.0 * exp(-7252.86180424342 * invT);
  x218 = -sc[21] * sc[3] * x1041 -
         300000000.0 * ((sc[3]) * (sc[3])) * exp(-1.72 * tc[0]) -
         sc[3] * sc[5] * x127 - sc[3] * x125 * exp(-0.86 * tc[0]) - sc[3] * x28;
  x696 =
    12000000.0 *
    exp(g_RT[14] + g_RT[1] - g_RT[8] - g_RT_qss[2] + 286.83349950869001 * invT);
  x100 = -60000000.0 * sc[14] * x1393 - 40000000.0 * sc[14] * x1439 -
         sc[14] * x268 - 1.2e+30 * sc[14] * x343 * x40 - sc[14] * x696 +
         40000000.0 * sc[8] * x893 - 40000000.0 * sc[8] * x899 +
         60000000.0 * sc[9] * x1649 - 60000000.0 * sc[9] * x1694 +
         x1030 * x2031 + x1211 * x2091 - x1389 * x2091 - x1508 * x2031 +
         x1561 * x2132 - x2132 * x494;
  x562 = 84300000.0 * exp(g_RT[12] + g_RT[1] - g_RT[2] - g_RT[8]);
  x1528 =
    5710000.0 *
    exp(g_RT[12] + g_RT[1] - g_RT[5] - g_RT_qss[0] + 379.92858268256299 * invT);
  x631 = -30000000.0 * sc[12] * x1342 - 20000000.0 * sc[12] * x1425 -
         sc[12] * x1528 - 2.2e+18 * sc[12] * x40 * x983 - sc[12] * x562 -
         sc[12] * x856 + 30000000.0 * sc[4] * x1211 -
         30000000.0 * sc[4] * x1389 + 20000000.0 * sc[4] * x893 -
         20000000.0 * sc[4] * x899 + x1064 * x2024 + x1370 * x2124 +
         x1649 * x954 - x1694 * x954 - x2024 * x969;
  x483 = -187000000000.0 * refCinv * sc[10] * x1505 * x40 -
         57000000.0 * sc[10] * x1396 + 57000000.0 * sc[2] * x1649 -
         57000000.0 * sc[2] * x1694 + x1064 * x2096 - x2096 * x969;
  x1547 = 16060000000.0 * sc[0] + 22000000000.0 * sc[11] +
          80300000000.0 * sc[5] + 22000000000.0 * x602;
  x1060 = 28000000.0 * sc[3] * x1211 - 28000000.0 * sc[3] * x1389 -
          sc[4] * x1547 * x879 - sc[4] * x862;
  x422 = 70000000.0 * sc[0] * x1211 - 70000000.0 * sc[0] * x1389 -
         70000000.0 * sc[8] * x1345 -
         2.477e+21 * sc[8] * x356 * x40 * exp(x252) - sc[8] * x904 +
         x2037 * x893 - x2037 * x899;
  x425 = 1.2e+30 * refC * x2131 * x324 - 1.2e+30 * x1289 * x343 -
         x137 * (0.28 * x1958 * x691 + 2.0 * x2027 * x691) +
         x2044 * (0.28 * x1958 * x691 + 2.0 * x2027 * x691) -
         1.33333333333333e+54 * x2080 * x470 + 1.33333333333333e+54 * x2086;
  const amrex::Real x5500 = 22000000000.0 * x1493 - 22000000000.0 * x897;
  amrex::Real x5501 = 0.28 * x378 * x691 + 2.0 * x537 * x691;
  const amrex::Real x5502 = 2.477e+21 * x1328 * x1595 * x40;
  x1328 = sc[9] * x1328 * x1638;
  const amrex::Real x5510 = 2.477e+21 * x1052 * x356 - x1328 * x5501 -
                            4.83112519685039e+32 * x1416 * x273 -
                            2.477e+21 * x1595 +
                            4.83112519685039e+32 * x273 * x648 + x5501 * x5502;
  const amrex::Real x5514 =
    -187000000000.0 * x1248 * x1505 + 187000000000.0 * x52;
  const amrex::Real x5517 = 2.0 * x1682 * x691 + 0.28 * x1683 * x691;
  const amrex::Real x5518 = sc[8] * x1058 * x1079;
  x1058 = x1058 * x2110 * x645;
  const amrex::Real x5527 = 0.28 * x1437 * x691 + 2.0 * x686 * x691;
  const amrex::Real x5532 = 2.0 * x1057 * x691 + 0.28 * x1793 * x691;
  x180 = x180 * (2.0 * x2127 * x691 / ((x2135) * (x2135)) + 0.28 * x691 * x968);
  const amrex::Real x5551 = 7.6009596928982695e+46 * x2137 * x324 * x773 *
                            exp(x1647) / ((x492 + 1.0) * (x492 + 1.0));
  const amrex::Real x5557 = 2.0 * x691 * x826 + 0.28 * x691 * x857;
  x1313 = 7.6009596928982695e+46 * sc[15] * x2137 * x788 * exp(x1313 + x1647) /
          ((x492 + 1.0) * (x492 + 1.0));
  x492 = x1175 * x2069 * x233 * exp(x1061);
  x1970 =
    -2.565e+21 * x1128 * x1203 * x2069 + 1.70446243523316e+34 * x1175 * x228 -
    2.565e+21 * x1636 * x40 * x98 *
      (0.28 * ((x1970) * (x1970)) * x691 / ((x2068) * (x2068) * (x2068)) +
       2.0 * x1978) +
    2.565e+21 * x1636 +
    x2039 * (0.28 * ((x1970) * (x1970)) * x691 / ((x2068) * (x2068) * (x2068)) +
             2.0 * x1978) -
    1.70446243523316e+34 * x492;
  x2068 =
    5.2e+27 * refC * sc[18] * x1190 * x2140 - sc[18] * x1192 * x180 * x2140 -
    2000000.0 * ((sc[1]) * (sc[1])) * x874 - 1350000000000.0 * sc[1] * x1410 +
    sc[1] * x176 * x180 - sc[1] * x2108 * x645 - 1.4e+18 * sc[1] * x762 -
    x1022 * x5527 + x1058 * x5517 + 4.096e+20 * x1091 * x266 -
    3.2236842105263198e+29 * x1135 * x286 + 3200000000000000.0 * x1186 -
    1.99e+29 * x1206 - 1.67201834862385e+18 * x1251 * x934 - x1313 -
    4.096e+20 * x1446 * x266 + 1.4e+18 * x1468 * x382 -
    2.704e+47 * x1487 * x967 + 1350000000000.0 * x1509 * x1564 +
    1.99e+29 * x1539 * x858 + 500000.0 * x1688 - x172 * x5557 +
    3.2236842105263198e+29 * x1753 * x286 + x1970 + 2.704e+47 * x232 -
    500000.0 * x263 + x318 * x5557 + 2000000.0 * x37 - x5517 * x5518 +
    x5527 * x837 + x5532 * x795 - x5532 * x900 + x5551 - 5.2e+27 * x783 +
    1.67201834862385e+18 * x934 * x965;
  x2137 = 8.8445e+87 * x1062 * x428 - 8.8445e+87 * x236 * x428 +
          x321 * (2.0 * x691 * x889 + 0.28 * x691 * x975) + 1.33e+48 * x583 -
          x589 * (2.0 * x691 * x889 + 0.28 * x691 * x975) - 1.33e+48 * x887;
  x532 =
    -3.8e+29 * x105 * x207 * x40 * (2.0 * x1028 * x691 + 0.28 * x1314 * x691) +
    3.8e+29 * x105 +
    3.8e+29 * x1199 * x207 * x40 * x894 *
      (2.0 * x1028 * x691 + 0.28 * x1314 * x691) +
    4.3757575757575802e+50 * x1199 * x40 * x946 * exp(x532) -
    3.8e+29 * x1199 * x894 - 4.3757575757575802e+50 * x201 * x946;
  x1647 = 2.9464360902255599e+46 * sc[1] * sc[20] * x1955 *
            exp(-5404.19473907663 * invT - 13.32 * tc[0]) -
          sc[1] * sc[20] * x2192 * x526 - x1026 * (0.28 * x1886 + 2.0 * x896) +
          6.26e+26 * x139 * x2192 * x545 -
          2.9464360902255599e+46 * x1955 * x957 +
          x529 * (0.28 * x1886 + 2.0 * x896);
  x1061 = 2.2e+18 * refC * x1430 * x901 -
          8.9629629629629601e+30 * x1056 * x617 - 2.2e+18 * x1369 * x983 -
          x214 * (2.0 * x932 + 0.28 * x960) +
          x624 * (2.0 * x932 + 0.28 * x960) + 8.9629629629629601e+30 * x985;
  const amrex::Real x5601 =
    x1061 + x1161 + x1647 + x2068 + x2137 + x425 + x532 + x5500 + x5510 + x5514;
  const amrex::Real x5604 =
    3970000.0 *
    exp(-g_RT[1] + g_RT[2] + g_RT[5] - g_RT[6] - 337.65838275496702 * invT);
  const amrex::Real x5606 =
    83000000.0 *
    exp(-g_RT[1] + g_RT[2] - g_RT[3] + g_RT[4] - 7252.86180424342 * invT);
  const amrex::Real x5656 =
    50000000.0 * sc[14] * x1419 - 50000000.0 * sc[14] * x1461 + x1639 * x2043 -
    x1643 * x2043 + x1709 * x2097 + x2112 * x970 - x2112 * x973;
  const amrex::Real x5661 =
    120.0 * exp(-164.55184971814299 * invT + 1.65 * tc[0]);
  const amrex::Real x5663 =
    48000000.0 * sc[2] * x1639 - 48000000.0 * sc[2] * x1643 + 48000000.0 * x233;
  const amrex::Real x5665 = sc[20] * x5661 + 20000000.0 * sc[4] * x1709 +
                            x1075 * x2180 + x1772 * x508 - x1785 * x508 + x5663;
  const amrex::Real x5673 =
    40000000.0 * sc[8] * x970 - 40000000.0 * sc[8] * x973 +
    60000000.0 * sc[9] * x1772 - 60000000.0 * sc[9] * x1785 + x1419 * x2091 -
    x1461 * x2091 + x1639 * x2031 - x1643 * x2031 + x1660 * x2132 -
    x1726 * x2132;
  const amrex::Real x5681 =
    30000000.0 * sc[4] * x1419 - 30000000.0 * sc[4] * x1461 +
    20000000.0 * sc[4] * x970 - 20000000.0 * sc[4] * x973 + 84300000.0 * sc[8] +
    x1640 * x2024 + x1674 * x2124 + x1772 * x954 - x1785 * x954 - x2024 * x718;
  const amrex::Real x5685 =
    30000000.0 * sc[2] * x1640 - 30000000.0 * sc[2] * x718 + 30000000.0 * x435;
  const amrex::Real x5686 = 57000000.0 * sc[2] * x1772 -
                            57000000.0 * sc[2] * x1785 + x1640 * x2096 -
                            x2096 * x718 + 57000000.0 * x518 + x5685;
  const amrex::Real x5734 =
    -50000000.0 * sc[14] * x1517 + 50000000.0 * sc[14] * x854 + x1673 * x2043 -
    x1685 * x2043 + x1744 * x2097 + x2112 * x977 - x2112 * x978;
  const amrex::Real x5739 =
    48000000.0 * sc[2] * x1673 - 48000000.0 * sc[2] * x1685 +
    20000000.0 * sc[4] * x1744 + x1708 * x2180 + x1822 * x508 - x1852 * x508;
  const amrex::Real x5748 =
    40000000.0 * sc[8] * x977 - 40000000.0 * sc[8] * x978 +
    60000000.0 * sc[9] * x1822 - 60000000.0 * sc[9] * x1852 - x1517 * x2091 +
    x1673 * x2031 - x1685 * x2031 + x1757 * x2132 - x1759 * x2132 +
    x2091 * x854;
  const amrex::Real x5749 = 300000000.0 * exp(-1.72 * tc[0] + x2040);
  const amrex::Real x5757 = refC * sc[6] * x5749 - sc[1] * sc[21] * x1041 -
                            600000000.0 * sc[1] * sc[3] * exp(-1.72 * tc[0]) -
                            sc[1] * sc[5] * x127 -
                            sc[1] * x125 * exp(-0.86 * tc[0]) - sc[1] * x28;
  const amrex::Real x5764 =
    -30000000.0 * sc[4] * x1517 + 30000000.0 * sc[4] * x854 +
    20000000.0 * sc[4] * x977 - 20000000.0 * sc[4] * x978 - x1661 * x2024 +
    x1662 * x2024 + x1766 * x2124 + x1822 * x954 - x1852 * x954;
  const amrex::Real x5765 =
    -30000000.0 * sc[2] * x1661 + 30000000.0 * sc[2] * x1662;
  const amrex::Real x5769 = 57000000.0 * sc[2] * x1822 -
                            57000000.0 * sc[2] * x1852 - x1661 * x2096 +
                            x1662 * x2096 + x5514;
  const amrex::Real x5771 =
    10000000.0 *
    exp(-g_RT[1] + g_RT[4] + g_RT[5] - g_RT[7] - 1811.57999689699 * invT);
  const amrex::Real x5774 =
    47.6 * sc[10] * exp(-35.225166606330397 * invT + 1.228 * tc[0]);
  const amrex::Real x5778 =
    sc[4] * exp(-g_RT[1] + 2.0 * g_RT[4] - g_RT[6] - 150.96499974141599 * invT);
  const amrex::Real x5829 =
    50000000.0 * sc[14] * x1519 - 50000000.0 * sc[14] * x1521 - x1680 * x2043 +
    x1710 * x2043 + x1774 * x2097 + x2112 * x980 - x2112 * x981;
  const amrex::Real x5835 =
    2.18e-10 * exp(503.21666580471998 * invT + 4.5 * tc[0]);
  const amrex::Real x5839 =
    sc[13] * x5835 - 48000000.0 * sc[2] * x1680 + 48000000.0 * sc[2] * x1710 +
    20000000.0 * sc[4] * x1774 - 20000000.0 * x1176 + x1745 * x2180 +
    x1875 * x508 - x1903 * x508 - 20000000.0 * x564;
  const amrex::Real x5847 =
    40000000.0 * sc[8] * x980 - 40000000.0 * sc[8] * x981 +
    60000000.0 * sc[9] * x1875 - 60000000.0 * sc[9] * x1903 + x1519 * x2091 -
    x1521 * x2091 - x1680 * x2031 + x1710 * x2031 + x1790 * x2132 -
    x1824 * x2132;
  const amrex::Real x5854 =
    30000000.0 * sc[4] * x1519 - 30000000.0 * sc[4] * x1521 +
    20000000.0 * sc[4] * x980 - 20000000.0 * sc[4] * x981 - x1687 * x2024 +
    x1875 * x954 + x1889 * x2124 - x1903 * x954 + x2024 * x345 +
    30000000.0 * x597;
  const amrex::Real x5858 =
    -30000000.0 * sc[2] * x1687 + 57000000.0 * sc[2] * x1875 -
    57000000.0 * sc[2] * x1903 + 30000000.0 * sc[2] * x345 - x1687 * x2096 +
    x2096 * x345;
  const amrex::Real x5861 = -sc[1] * x1547 * x879 - sc[1] * x862 +
                            28000000.0 * sc[3] * x1519 -
                            28000000.0 * sc[3] * x1521;
  const amrex::Real x5879 = 12.0 * x1682 * x691 + 1.68 * x1683 * x691;
  x348 =
    x348 * (1.68 * x1437 * x691 + 12.0 * x686 * x691) / ((x2048) * (x2048));
  x2048 = 12.0 * x691 * x826 + 1.68 * x691 * x857;
  x142 = x142 * (12.0 * x1057 * x691 + 1.68 * x1793 * x691);
  const amrex::Real x5919 =
    12.0 * x2127 * x691 / ((x2135) * (x2135)) + 1.68 * x691 * x968;
  const amrex::Real x5955 =
    50000000.0 * sc[14] * x1523 - 50000000.0 * sc[14] * x1533 +
    5.3067e+88 * x1062 * x428 + x1748 * x2043 - x1756 * x2043 + x1840 * x2097 +
    x2112 * x989 - x2112 * x990 - 5.3067e+88 * x236 * x428 +
    x321 * (12.0 * x691 * x889 + 1.68 * x691 * x975) + 7.98e+48 * x583 -
    x589 * (12.0 * x691 * x889 + 1.68 * x691 * x975) - 7.98e+48 * x887;
  const amrex::Real x5961 =
    48000000.0 * sc[2] * x1748 - 48000000.0 * sc[2] * x1756 +
    20000000.0 * sc[4] * x1840 -
    3.8e+29 * x105 * x207 * x40 * (12.0 * x1028 * x691 + 1.68 * x1314 * x691) +
    2.28e+30 * x105 +
    3.8e+29 * x1199 * x207 * x40 * x894 *
      (12.0 * x1028 * x691 + 1.68 * x1314 * x691) -
    2.28e+30 * x1199 * x894 + x1781 * x2180 + x1946 * x508 - x1986 * x508 -
    2.6254545454545501e+51 * x201 * x946 + 2.6254545454545501e+51 * x588;
  const amrex::Real x5964 =
    -x1026 * (1.68 * x1886 + 12.0 * x896) + 3.756e+27 * x139 * x2192 * x545 -
    3.756e+27 * x1554 * x2192 + 1.7678616541353401e+47 * x1877 + x1897 * x2197 -
    1.7678616541353401e+47 * x1955 * x957 + x529 * (1.68 * x1886 + 12.0 * x896);
  const amrex::Real x5967 =
    2.565e+21 * x1128 * x1203 * x2069 * x40 * x98 *
      (1.68 * x1963 + 12.0 * x1978) -
    1.539e+22 * x1128 * x1203 * x2069 + 1.0226774611399e+35 * x1175 * x228 -
    2.565e+21 * x1636 * x40 * x98 * (1.68 * x1963 + 12.0 * x1978) +
    1.539e+22 * x1636 + x1748 * x2071 - x1756 * x2071 -
    1.0226774611399e+35 * x492;
  const amrex::Real x5969 = 16520000.0 * exp(-0.76 * tc[0] + x2040);
  x2084 = 7.2e+30 * refC * x2131 * x324 + 40000000.0 * sc[8] * x989 -
          40000000.0 * sc[8] * x990 + 60000000.0 * sc[9] * x1946 -
          60000000.0 * sc[9] * x1986 +
          8.0e+54 * x1289 * x2080 * x40 * exp(x2084) - 7.2e+30 * x1289 * x343 -
          x137 * (1.68 * x1958 * x691 + 12.0 * x2027 * x691) + x1523 * x2091 -
          x1533 * x2091 + x1748 * x2031 - x1756 * x2031 + x1829 * x2132 -
          x1860 * x2132 + x2044 * (1.68 * x1958 * x691 + 12.0 * x2027 * x691) -
          8.0e+54 * x2080 * x470;
  x931 = 1.32e+19 * refC * x1430 * x901 + 30000000.0 * sc[4] * x1523 -
         30000000.0 * sc[4] * x1533 + 20000000.0 * sc[4] * x989 -
         20000000.0 * sc[4] * x990 +
         5.3777777777777801e+31 * x1056 * x1369 * x40 * exp(x931) -
         5.3777777777777801e+31 * x1056 * x617 - 1.32e+19 * x1369 * x983 -
         x1669 * x2024 + x1751 * x2024 + x1891 * x2124 + x1946 * x954 -
         x1986 * x954 - x214 * (12.0 * x932 + 1.68 * x960) +
         5710000.0 * x518 * exp(379.92858268256299 * invT) +
         x624 * (12.0 * x932 + 1.68 * x960);
  const amrex::Real x5997 =
    -30000000.0 * sc[2] * x1669 + 30000000.0 * sc[2] * x1751 +
    57000000.0 * sc[2] * x1946 - 57000000.0 * sc[2] * x1986 -
    1122000000000.0 * x1248 * x1505 - x1669 * x2096 + x1751 * x2096 +
    1122000000000.0 * x52;
  const amrex::Real x6001 = refC * x1066 * x1547 + 28000000.0 * sc[3] * x1523 -
                            28000000.0 * sc[3] * x1533 + 80300000000.0 * x1493 -
                            80300000000.0 * x897;
  const amrex::Real x6009 =
    70000000.0 * sc[0] * x1523 - 70000000.0 * sc[0] * x1533 +
    1.4862e+22 * x1052 * x356 -
    x1328 * (1.68 * x378 * x691 + 12.0 * x537 * x691) -
    2.8986751181102398e+33 * x1416 * x273 - 1.4862e+22 * x1595 + x2037 * x989 -
    x2037 * x990 + 2.8986751181102398e+33 * x273 * x648 +
    x5502 * (1.68 * x378 * x691 + 12.0 * x537 * x691);
  const amrex::Real x6053 = 50000000.0 * sc[14] * x1534 -
                            50000000.0 * sc[14] * x1535 + x1008 * x2112 -
                            x1010 * x2112 - x1764 * x2043 + x2043 * x323;
  const amrex::Real x6056 =
    -48000000.0 * sc[2] * x1764 + 48000000.0 * sc[2] * x323;
  const amrex::Real x6063 = 26000000.0 * exp(-1.24 * tc[0] + x2040);
  const amrex::Real x6066 = refC * sc[21] * x6063 + refC * sc[3] * x5749 +
                            refC * sc[5] * x5969 +
                            refC * x125 * exp(-0.86 * tc[0] + x2040);
  const amrex::Real x6073 =
    40000000.0 * sc[8] * x1008 - 40000000.0 * sc[8] * x1010 +
    60000000.0 * sc[9] * x2026 - 60000000.0 * sc[9] * x2051 + x1534 * x2091 -
    x1535 * x2091 - x1764 * x2031 + x1881 * x2132 - x1885 * x2132 +
    x2031 * x323;
  const amrex::Real x6075 =
    -sc[1] * x2190 - sc[1] * x46 -
    70800000.0 * sc[1] * exp(-150.96499974141599 * invT);
  const amrex::Real x6082 =
    20000000.0 * sc[4] * x1008 - 20000000.0 * sc[4] * x1010 +
    30000000.0 * sc[4] * x1534 - 30000000.0 * sc[4] * x1535 + x1366 * x2124 -
    x1760 * x2024 + x1762 * x2024 + x2026 * x954 - x2051 * x954;
  const amrex::Real x6086 =
    -30000000.0 * sc[2] * x1760 + 30000000.0 * sc[2] * x1762 +
    57000000.0 * sc[2] * x2026 - 57000000.0 * sc[2] * x2051 - x1760 * x2096 +
    x1762 * x2096;
  const amrex::Real x6090 = 20000000.0 * sc[4] * x411 + x532;
  const amrex::Real x6093 = x2097 * x411 + x2137;
  const amrex::Real x6095 =
    x1161 + x2038 * x411 + x2068 + x425 + x5500 + x5510 + x5514 + x6090 + x6093;
  const amrex::Real x6136 = 50000000.0 * sc[14] * x1563 -
                            50000000.0 * sc[14] * x1573 + x1011 * x2112 -
                            x1013 * x2112 - x1773 * x2043 + x2043 * x225;
  const amrex::Real x6138 = x1905 * x2180 + x6090;
  const amrex::Real x6141 =
    -48000000.0 * sc[2] * x1773 + 48000000.0 * sc[2] * x225;
  const amrex::Real x6153 =
    40000000.0 * sc[8] * x1011 - 40000000.0 * sc[8] * x1013 +
    60000000.0 * sc[9] * x2093 - 60000000.0 * sc[9] * x2104 + x1563 * x2091 -
    x1573 * x2091 - x1773 * x2031 + x1911 * x2132 - x1951 * x2132 +
    x2031 * x225;
  const amrex::Real x6154 = x1061 + x1893 * x2124;
  const amrex::Real x6161 =
    20000000.0 * sc[4] * x1011 - 20000000.0 * sc[4] * x1013 +
    30000000.0 * sc[4] * x1563 - 30000000.0 * sc[4] * x1573 - x1768 * x2024 +
    x1769 * x2024 + x2093 * x954 - x2104 * x954;
  const amrex::Real x6162 =
    -30000000.0 * sc[2] * x1768 + 30000000.0 * sc[2] * x1769;
  const amrex::Real x6166 = 57000000.0 * sc[2] * x2093 -
                            57000000.0 * sc[2] * x2104 - x1768 * x2096 +
                            x1769 * x2096 + x5514;
  const amrex::Real x6177 =
    6.26e+26 * refC * x1989 * x20 * x2192 * exp(x524 + x543) -
    1800000.0 * sc[1] * x1989 + x1647 - x1989 * x2183;
  const amrex::Real x6178 = -68000000.0 * sc[1] * x1893 -
                            90000000.0 * sc[1] * x1905 - x1905 * x2060 -
                            x1905 * x2146 + x6177;
  const amrex::Real x6227 = x1017 * x2112 - x1018 * x2112 + x1779 * x2043 -
                            x1784 * x2043 + x2035 * x233;
  amrex::Real x6230 = 1500.0 * exp(
                                 g_RT[10] - g_RT[17] - g_RT[1] + g_RT[8] -
                                 1353.6528310147 * invT + 1.43 * tc[0]);
  const amrex::Real x6233 = 120.0 * refCinv * sc[17] * sc[1] * x2175;
  const amrex::Real x6236 = sc[10] * x6230 + 48000000.0 * sc[2] * x1779 -
                            48000000.0 * sc[2] * x1784 + x1197 * x2180 +
                            x1449 * x508 - x2150 * x508 - x6233;
  const amrex::Real x6237 =
    1.6e+16 * exp(
                g_RT[14] - g_RT[1] - g_RT[20] + g_RT[8] -
                5625.96232369677 * invT - 2.39 * tc[0]);
  const amrex::Real x6251 =
    40000000.0 * sc[8] * x1017 - 40000000.0 * sc[8] * x1018 +
    60000000.0 * sc[9] * x1449 - 60000000.0 * sc[9] * x2150 + x1574 * x2091 -
    x1575 * x2091 + x1779 * x2031 - x1784 * x2031 + x1954 * x2132 -
    x1957 * x2132 + 12000000.0 * x2117 * x597 + 40000000.0 * x645;
  const amrex::Real x6259 =
    84300000.0 * sc[2] + 20000000.0 * sc[4] * x1017 -
    20000000.0 * sc[4] * x1018 + 30000000.0 * sc[4] * x1574 -
    30000000.0 * sc[4] * x1575 + x1449 * x954 - x1775 * x2024 + x1776 * x2024 +
    x2124 * x839 - x2150 * x954;
  const amrex::Real x6260 =
    -30000000.0 * sc[2] * x1775 + 30000000.0 * sc[2] * x1776;
  const amrex::Real x6266 =
    70000000.0 * sc[0] * x1574 - 70000000.0 * sc[0] * x1575 -
    70000000.0 * sc[1] * x1345 - sc[1] * x904 + x1017 * x2037 - x1018 * x2037 -
    2.477e+21 * x356 * x773 * exp(x252);
  const amrex::Real x6312 = x1019 * x2112 - x1020 * x2112 + x1821 * x2043 -
                            x1856 * x2043 + x1994 * x2097 + x4 * x607;
  const amrex::Real x6318 = 48000000.0 * sc[2] * x1821 -
                            48000000.0 * sc[2] * x1856 +
                            20000000.0 * sc[4] * x1994 + x1055 + x173 * x2180 +
                            x2145 * x508 - x2193 * x508;
  const amrex::Real x6328 =
    40000000.0 * sc[8] * x1019 - 40000000.0 * sc[8] * x1020 +
    60000000.0 * sc[9] * x2145 - 60000000.0 * sc[9] * x2193 + x1821 * x2031 -
    x1856 * x2031 + x1960 * x2132 - x1966 * x2132 + x2091 * x796 -
    x2091 * x986 + 60000000.0 * x518;
  const amrex::Real x6336 =
    20000000.0 * sc[4] * x1019 - 20000000.0 * sc[4] * x1020 +
    30000000.0 * sc[4] * x796 - 30000000.0 * sc[4] * x986 - x1778 * x2024 +
    x1780 * x2024 + x187 + x2124 * x639 + x2145 * x954 - x2193 * x954;
  const amrex::Real x6340 =
    -30000000.0 * sc[2] * x1778 + 30000000.0 * sc[2] * x1780 +
    28000000.0 * sc[3] * x796 - 28000000.0 * sc[3] * x986 +
    44000000000.0 * x1493 - 44000000000.0 * x897;
  const amrex::Real x6343 = 57000000.0 * sc[2] * x2145 -
                            57000000.0 * sc[2] * x2193 -
                            374000000000.0 * x1248 * x1505 - x1778 * x2096 +
                            x1780 * x2096 + 374000000000.0 * x52;
  const amrex::Real x6344 = 70000000.0 * sc[0] * x796 -
                            70000000.0 * sc[0] * x986 + x1019 * x2037 -
                            x1020 * x2037 + x1638 + x439;
  const amrex::Real x6347 = -20000000.0 * sc[1] * x173 * x2054 -
                            90000000.0 * sc[1] * x173 -
                            68000000.0 * sc[1] * x639 - x173 * x2146 + x1849;
  const amrex::Real x6348 =
    47.6 * sc[4] * exp(-35.225166606330397 * invT + 1.228 * tc[0]);
  const amrex::Real x6356 = 3.0 * x1682 * x691 + 0.42 * x1683 * x691;
  const amrex::Real x6380 = 3.0 * x1057 * x691 + 0.42 * x1793 * x691;
  const amrex::Real x6384 =
    3.0 * x2127 * x691 / ((x2135) * (x2135)) + 0.42 * x691 * x968;
  const amrex::Real x6418 = 3.0 * x691 * x826 + 0.42 * x691 * x857;
  x828 = x828 * (3.0 * x691 * x889 + 0.42 * x691 * x975);
  const amrex::Real x6437 =
    50000000.0 * sc[14] * x1584 - 50000000.0 * sc[14] * x1586 +
    sc[1] * x608 * x828 - sc[20] * x315 * x828 + x1023 * x2112 - x1025 * x2112 +
    1.326675e+88 * x1062 * x428 + x1836 * x2043 - x1841 * x2043 +
    x1974 * x2097 - 1.326675e+88 * x236 * x428 + 1.995e+48 * x583 -
    1.995e+48 * x887;
  const amrex::Real x6444 =
    -x1026 * (0.42 * x1886 + 3.0 * x896) + 9.39e+26 * x139 * x2192 * x545 -
    9.39e+26 * x1554 * x2192 + 4.4196541353383503e+46 * x1877 -
    4.4196541353383503e+46 * x1955 * x957 + x1981 * x2197 +
    x529 * (0.42 * x1886 + 3.0 * x896);
  const amrex::Real x6451 =
    48000000.0 * sc[2] * x1836 - 48000000.0 * sc[2] * x1841 +
    20000000.0 * sc[4] * x1974 + sc[8] * x6230 -
    3.8e+29 * x105 * x207 * x40 * (3.0 * x1028 * x691 + 0.42 * x1314 * x691) +
    5.7e+29 * x105 +
    3.8e+29 * x1199 * x207 * x40 * x894 *
      (3.0 * x1028 * x691 + 0.42 * x1314 * x691) -
    5.7e+29 * x1199 * x894 - 6.5636363636363603e+50 * x201 * x946 +
    x2180 * x436 - x2275 * x508 + x468 * x508 + 6.5636363636363603e+50 * x588;
  const amrex::Real x6454 =
    -3.8475e+21 * x1128 * x1203 * x2069 +
    2.5566936528497398e+34 * x1175 * x228 -
    2.565e+21 * x1636 * x40 * x98 * (0.42 * x1963 + 3.0 * x1978) +
    3.8475e+21 * x1636 + x1836 * x2071 - x1841 * x2071 +
    x2039 * (0.42 * x1963 + 3.0 * x1978) - 2.5566936528497398e+34 * x492;
  x476 = 1.8e+30 * refC * x2131 * x324 + 40000000.0 * sc[8] * x1023 -
         40000000.0 * sc[8] * x1025 - 60000000.0 * sc[9] * x2275 +
         60000000.0 * sc[9] * x468 +
         1.2e+30 * x1289 * x343 * x40 * x476 *
           (0.42 * x1958 * x691 + 3.0 * x2027 * x691) -
         1.8e+30 * x1289 * x343 + x1584 * x2091 - x1586 * x2091 +
         x1836 * x2031 - x1841 * x2031 + x1971 * x2132 - x1973 * x2132 -
         2.0e+54 * x2080 * x470 + 2.0e+54 * x2086 -
         1.2e+30 * x2131 * x324 * x476 * x788 *
           (0.42 * x1958 * x691 + 3.0 * x2027 * x691);
  x2157 = 3.3e+18 * refC * x1430 * x901 + 20000000.0 * sc[4] * x1023 -
          20000000.0 * sc[4] * x1025 + 30000000.0 * sc[4] * x1584 -
          30000000.0 * sc[4] * x1586 + x1002 * x2124 -
          1.3444444444444401e+31 * x1056 * x617 - 3.3e+18 * x1369 * x983 +
          x1678 * x2024 - x1797 * x2024 -
          x214 * (0.42 * x960 + 3.0 * x2157 * x691 / ((x2125) * (x2125))) -
          x2275 * x954 + x468 * x954 +
          x624 * (0.42 * x960 + 3.0 * x2157 * x691 / ((x2125) * (x2125))) +
          1.3444444444444401e+31 * x985;
  x2125 = 70000000.0 * sc[0] * x1584 - 70000000.0 * sc[0] * x1586 +
          x1023 * x2037 - x1025 * x2037 + 3.7155e+21 * x1052 * x356 -
          x1328 * (0.42 * x378 * x691 + 3.0 * x537 * x691) -
          7.2466877952755894e+32 * x1416 * x273 - 3.7155e+21 * x1595 +
          7.2466877952755894e+32 * x273 * x648 +
          x5502 * (0.42 * x378 * x691 + 3.0 * x537 * x691);
  const amrex::Real x6491 =
    -187000000000.0 * refCinv * sc[1] * x1505 * x40 -
    57000000.0 * sc[1] * x1396 + 30000000.0 * sc[2] * x1678 -
    30000000.0 * sc[2] * x1797 - 57000000.0 * sc[2] * x2275 +
    57000000.0 * sc[2] * x468 - 280500000000.0 * x1248 * x1505 + x1678 * x2096 -
    x1797 * x2096 + 280500000000.0 * x52;
  const amrex::Real x6534 =
    50000000.0 * sc[14] * x1587 - 50000000.0 * sc[14] * x1588 + x1027 * x2112 -
    x1031 * x2112 - x1876 * x2043 + x2043 * x758 + x2097 * x818;
  x1055 = -48000000.0 * sc[2] * x1876 + 48000000.0 * sc[2] * x758 +
          20000000.0 * sc[4] * x818 + x1055 + x1516 * x508 + x173 * x2180 -
          x2331 * x508;
  const amrex::Real x6555 =
    40000000.0 * sc[8] * x1027 - 40000000.0 * sc[8] * x1031 +
    60000000.0 * sc[9] * x1516 - 60000000.0 * sc[9] * x2331 + x1587 * x2091 -
    x1588 * x2091 - x1876 * x2031 - x1983 * x2132 + x2031 * x758 + x2087 +
    x2132 * x926;
  x187 = 20000000.0 * sc[4] * x1027 - 20000000.0 * sc[4] * x1031 +
         30000000.0 * sc[4] * x1587 - 30000000.0 * sc[4] * x1588 +
         x1516 * x954 + x1663 * x2024 - x1750 * x2024 + x187 + x2124 * x639 -
         x2331 * x954;
  const amrex::Real x6567 =
    57000000.0 * sc[2] * x1516 + 30000000.0 * sc[2] * x1663 -
    30000000.0 * sc[2] * x1750 - 57000000.0 * sc[2] * x2331 -
    374000000000.0 * x1248 * x1505 + x1663 * x2096 - x1750 * x2096 +
    374000000000.0 * x52;
  x439 = 70000000.0 * sc[0] * x1587 - 70000000.0 * sc[0] * x1588 +
         x1027 * x2037 - x1031 * x2037 + x439;
  const amrex::Real x6606 =
    -30000000.0 * sc[2] * x1761 + 30000000.0 * sc[2] * x1765;
  const amrex::Real x6612 = -50000000.0 * sc[14] * x1459 +
                            50000000.0 * sc[14] * x1589 + x1063 * x2112 -
                            x1065 * x2112 + x1879 * x2043 - x1894 * x2043;
  const amrex::Real x6618 = 48000000.0 * sc[2] * x1879 -
                            48000000.0 * sc[2] * x1894 + x1407 * x508 +
                            x2180 * x790 - x2367 * x508 +
                            94600000.0 * x518 * exp(259.15658288943098 * invT);
  const amrex::Real x6627 =
    40000000.0 * sc[8] * x1063 - 40000000.0 * sc[8] * x1065 +
    60000000.0 * sc[9] * x1407 - 60000000.0 * sc[9] * x2367 - x1459 * x2091 +
    x1589 * x2091 + x1879 * x2031 - x1894 * x2031 + x1984 * x2132 -
    x2132 * x652;
  const amrex::Real x6642 =
    -30000000.0 * sc[1] * x1342 - 20000000.0 * sc[1] * x1425 - sc[1] * x1528 -
    2.2e+18 * sc[1] * x40 * x983 - sc[1] * x562 - sc[1] * x856 +
    20000000.0 * sc[4] * x1063 - 20000000.0 * sc[4] * x1065 -
    30000000.0 * sc[4] * x1459 + 30000000.0 * sc[4] * x1589 + x1407 * x954 +
    x1531 * x2124 - x1761 * x2024 + x1765 * x2024 - x2367 * x954;
  const amrex::Real x6680 = 50000000.0 * sc[14] * x884 -
                            50000000.0 * sc[14] * x890 + x1068 * x2112 -
                            x1069 * x2112 + x1506 * x2097 + x1896 * x2043;
  const amrex::Real x6687 =
    48000000.0 * sc[2] * x1896 - 48000000.0 * sc[2] * x1901 +
    20000000.0 * sc[4] * x1506 + sc[4] * x5835 - x1050 * x508 + x508 * x754;
  x1412 = -2.565e+21 * refCinv * sc[1] * x1203 * x2069 * x40 -
          40000000.0 * sc[1] * x1412 + x1896 * x2071 - x1901 * x2071;
  x1289 = 3.6e+30 * refC * x2131 * x324 - 3.6e+30 * x1289 * x343 -
          x137 * (0.84 * x1958 * x691 + 6.0 * x2027 * x691) +
          x2044 * (0.84 * x1958 * x691 + 6.0 * x2027 * x691) -
          4.0e+54 * x2080 * x470 + 4.0e+54 * x2086;
  x2131 = 40000000.0 * sc[8] * x1068 - 40000000.0 * sc[8] * x1069 -
          60000000.0 * sc[9] * x1050 + 60000000.0 * sc[9] * x754 + x1289 +
          x1896 * x2031 - x1901 * x2031 + x1996 * x2132 - x1998 * x2132 +
          x2091 * x884 - x2091 * x890;
  x1369 = 6.6e+18 * refC * x1430 * x901 -
          2.6888888888888901e+31 * x1056 * x617 - 6.6e+18 * x1369 * x983 +
          x1386 * x2124 - x214 * (6.0 * x932 + 0.84 * x960) +
          x624 * (6.0 * x932 + 0.84 * x960) + 2.6888888888888901e+31 * x985;
  x1430 = 20000000.0 * sc[4] * x1068 - 20000000.0 * sc[4] * x1069 +
          30000000.0 * sc[4] * x884 - 30000000.0 * sc[4] * x890 - x1050 * x954 +
          x1369 - x1830 * x2024 + x1831 * x2024 + x754 * x954;
  x1056 = -30000000.0 * sc[2] * x1830 + 30000000.0 * sc[2] * x1831 +
          28000000.0 * sc[3] * x884 - 28000000.0 * sc[3] * x890 +
          66000000000.0 * x1493 - 66000000000.0 * x897;
  x617 = -57000000.0 * sc[2] * x1050 + 57000000.0 * sc[2] * x754 -
         561000000000.0 * x1248 * x1505 - x1830 * x2096 + x1831 * x2096 +
         561000000000.0 * x52;
  x932 = -7.431e+21 * sc[1] * sc[8] * x356 * exp(x252) +
         7.431e+21 * x1052 * x356 -
         x1328 * (0.84 * x378 * x691 + 6.0 * x537 * x691) -
         1.4493375590551199e+33 * x1416 * x273 +
         1.4493375590551199e+33 * x273 * x648 +
         x5502 * (0.84 * x378 * x691 + 6.0 * x537 * x691);
  x960 = 70000000.0 * sc[0] * x884 - 70000000.0 * sc[0] * x890 + x1068 * x2037 -
         x1069 * x2037 + x932;
  x1199 =
    1.14e+30 * refC * x209 * x2177 -
    3.8e+29 * x105 * x207 * x40 * (6.0 * x1028 * x691 + 0.84 * x1314 * x691) +
    3.8e+29 * x1199 * x207 * x40 * x894 *
      (6.0 * x1028 * x691 + 0.84 * x1314 * x691) -
    1.14e+30 * x1199 * x894 - 1.3127272727272701e+51 * x201 * x946 +
    x2180 * x791 + 1.3127272727272701e+51 * x588;
  x2177 = 6.0 * x1682 * x691 + 0.84 * x1683 * x691;
  x946 = 6.0 * x1057 * x691 + 0.84 * x1793 * x691;
  x588 = x497 * (6.0 * x691 * x826 + 0.84 * x691 * x857);
  x2127 = 6.0 * x2127 * x691 / ((x2135) * (x2135)) + 0.84 * x691 * x968;
  x2135 = 2.65335e+88 * x1062 * x428 - 2.65335e+88 * x236 * x428 +
          x321 * (6.0 * x691 * x889 + 0.84 * x691 * x975) + 3.99e+48 * x583 -
          x589 * (6.0 * x691 * x889 + 0.84 * x691 * x975) - 3.99e+48 * x887;
  x1128 = -7.695e+21 * x1128 * x1203 * x2069 +
          5.1133873056994796e+34 * x1175 * x228 -
          2.565e+21 * x1636 * x40 * x98 * (0.84 * x1963 + 6.0 * x1978) +
          7.695e+21 * x1636 + x2039 * (0.84 * x1963 + 6.0 * x1978) -
          5.1133873056994796e+34 * x492;
  x2069 = -1.99e+29 * sc[15] * x588 * x788 * x858 -
          6000000.0 * ((sc[1]) * (sc[1])) * x874 - 68000000.0 * sc[1] * x1386 -
          4050000000000.0 * sc[1] * x1410 - 4.2e+18 * sc[1] * x762 -
          90000000.0 * sc[1] * x791 -
          x1022 * (0.84 * x1437 * x691 + 6.0 * x686 * x691) + x1058 * x2177 +
          1.2288e+21 * x1091 * x266 + x1128 -
          9.6710526315789494e+29 * x1135 * x286 + 9600000000000000.0 * x1186 -
          5.97e+29 * x1206 - 5.0160550458715597e+18 * x1251 * x934 -
          1.2288e+21 * x1446 * x266 + 4.2e+18 * x1468 * x382 -
          8.112e+47 * x1487 * x967 + 1.56e+28 * x1490 * x2140 +
          4050000000000.0 * x1509 * x1564 + 5.97e+29 * x1539 * x858 +
          1500000.0 * x1688 + 9.6710526315789494e+29 * x1753 * x286 -
          x2060 * x791 + 8.112e+47 * x209 * x774 * x967 + x2127 * x720 -
          x2127 * x988 + x2135 + 1.99e+29 * x2139 * x324 * x588 * x773 -
          x2146 * x791 - x2177 * x5518 - 1500000.0 * x263 + 6000000.0 * x37 +
          2.2802879078694799e+47 * x601 - 1.56e+28 * x783 + x795 * x946 +
          x837 * (0.84 * x1437 * x691 + 6.0 * x686 * x691) - x900 * x946 -
          2.2802879078694799e+47 * x914 + 5.0160550458715597e+18 * x934 * x965 -
          9600000000000000.0 * x966;
  x1314 = 30000000.0 * sc[1] * x1901 * x83 + 90000000.0 * sc[1] * x1901 +
          2000000.0 * sc[1] * x1998 + x1199 - x1901 * x2043 + x1901 * x2089 +
          x1998 * x2142 - x1998 * x2148 + x1998 * x2154 - 8400000.0 * x2045 +
          x2069 + 8400000.0 * x660;
  x1028 = -50000000.0 * sc[14] * x1648 + 50000000.0 * sc[14] * x898 +
          x1070 * x2112 + x1980 * x2097 + x2043 * x566 - x2112 * x668 +
          50000000.0 * x597 + 20000000.0 * x645 * exp(-3019.29999482832 * invT);
  x207 = -48000000.0 * sc[2] * x1901 + 48000000.0 * sc[2] * x566;
  x105 = 20000000.0 * sc[4] * x1070 - 30000000.0 * sc[4] * x1648 -
         20000000.0 * sc[4] * x668 + 30000000.0 * sc[4] * x898 + x1036 * x954 +
         x1369 - x1834 * x2024 + x1835 * x2024 - x622 * x954;
  x201 = -30000000.0 * sc[2] * x1834 + 30000000.0 * sc[2] * x1835 -
         28000000.0 * sc[3] * x1648 + 28000000.0 * sc[3] * x898 +
         66000000000.0 * x1493 - 66000000000.0 * x897;
  x214 = 57000000.0 * sc[2] * x1036 - 57000000.0 * sc[2] * x622 -
         561000000000.0 * x1248 * x1505 - x1834 * x2096 + x1835 * x2096 +
         561000000000.0 * x52;
  x983 = -60000000.0 * sc[1] * x1393 - 40000000.0 * sc[1] * x1439 -
         sc[1] * x268 - sc[1] * x696 + 40000000.0 * sc[8] * x1070 -
         40000000.0 * sc[8] * x668 + 60000000.0 * sc[9] * x1036 -
         60000000.0 * sc[9] * x622 + x1289 - x1648 * x2091 - x1901 * x2031 -
         x1998 * x2132 + x2031 * x566 + x2091 * x898 + x2132 * x909 -
         1.2e+30 * x343 * x773;
  x985 = -70000000.0 * sc[0] * x1648 + 70000000.0 * sc[0] * x898 +
         x1070 * x2037 - x2037 * x668 + x932;
  x624 = 50000000.0 * sc[14] * x1666 - 50000000.0 * sc[14] * x1671 +
         x1 * x2097 + x1074 * x2112 - x1077 * x2112 - x1823 * x2043 +
         x1908 * x2043;
  x1682 = -48000000.0 * sc[2] * x1823 + 48000000.0 * sc[2] * x1908 +
          20000000.0 * sc[4] * x1 + x1199 + x1297 * x508 - x130 * x508;
  x545 =
    -x1026 * (0.84 * x1886 + 6.0 * x896) + 1.878e+27 * x139 * x2192 * x545 -
    1.878e+27 * x1554 * x2192 + x1724 * x2197 + 8.8393082706766904e+46 * x1877 -
    8.8393082706766904e+46 * x1955 * x957 + x529 * (0.84 * x1886 + 6.0 * x896);
  x1554 = 40000000.0 * sc[8] * x1074 - 40000000.0 * sc[8] * x1077 +
          60000000.0 * sc[9] * x1297 - 60000000.0 * sc[9] * x130 +
          x1059 * x2132 + x1289 + x1666 * x2091 - x1671 * x2091 -
          x1823 * x2031 + x1908 * x2031 - x2132 * x600;
  x1683 = 20000000.0 * sc[4] * x1074 - 20000000.0 * sc[4] * x1077 +
          30000000.0 * sc[4] * x1666 - 30000000.0 * sc[4] * x1671 +
          x1297 * x954 - x130 * x954 + x1369 - x1838 * x2024 + x1842 * x2024;
  x968 = -30000000.0 * sc[2] * x1838 + 30000000.0 * sc[2] * x1842 +
         28000000.0 * sc[3] * x1666 - 28000000.0 * sc[3] * x1671 +
         66000000000.0 * x1493 - 66000000000.0 * x897;
  x52 = 57000000.0 * sc[2] * x1297 - 57000000.0 * sc[2] * x130 -
        561000000000.0 * x1248 * x1505 - x1838 * x2096 + x1842 * x2096 +
        561000000000.0 * x52;
  x1505 = 70000000.0 * sc[0] * x1666 - 70000000.0 * sc[0] * x1671 +
          x1074 * x2037 - x1077 * x2037 + x932;
  x497 = -x1681 * x231;
  x1886 = 40000000.0 * sc[8] * x1078 - 40000000.0 * sc[8] * x1081 -
          60000000.0 * sc[9] * x504 + 60000000.0 * sc[9] * x846 +
          x1677 * x2091 + x169 * x2031;
  x896 = 20000000.0 * sc[4] * x1078 - 20000000.0 * sc[4] * x1081 +
         30000000.0 * sc[4] * x1677 - 30000000.0 * sc[4] * x1681 -
         x1843 * x2024 + x1848 * x2024 - x504 * x954 + x6154 + x846 * x954;
  x1026 = -30000000.0 * sc[2] * x1843;
  x1955 = -48000000.0 * sc[2] * x1845;
  x1877 = 70000000.0 * sc[0] * x1677 - 70000000.0 * sc[0] * x1681 +
          x1078 * x2037 - x1081 * x2037 + x1955;
  x529 = 30000000.0 * sc[1] * x1845 * x83;
  x957 = 2000000.0 * sc[1] * x1364 + 90000000.0 * sc[1] * x1845 +
         x1364 * x2142 - x1364 * x2148 + x1364 * x2154 + x1845 * x2089 + x529 +
         x6178;
  x1963 = 73400000.0 * sc[1] * x1843 - 80200000.0 * sc[2] * x1364 +
          x1843 * x1982 + x1843 * x2082 - x1843 * x2090 + x1843 * x2095 +
          x1843 * x2098 - x1845 * x2043 + x2038 * x411 + x2068 + x5514 + x6093;
  x1978 = -x1364 * x2050;
  x98 = -2000000.0 * sc[1] * x1789 + 80200000.0 * sc[2] * x1789 +
        x1789 * x2050 - x1789 * x2142 + x1789 * x2148 - x1789 * x2154 + x1978;
  x1636 = -50000000.0 * sc[14] * x1681;
  x1203 = -28000000.0 * sc[3] * x1681;
  x1175 = -x1364 * x2132 - x1845 * x2031 + x425;
  x228 = x1175 - x1681 * x2091 + x1789 * x2132;
  x2039 = -x1845 * x2071;
  x1958 = 30000000.0 * sc[1] * x1681 - 15000000.0 * sc[2] * x1681 + x1161 -
          x1681 * x2083 + x2039 + x5500 + x5510;
  x2027 = 50000000.0 * sc[14] * x1689 + x1082 * x2112 - x1083 * x2112 -
          x1845 * x2043 + x1892 * x2043 + x2097 * x598 + x2137;
  x343 = 120.0 * refCinv * sc[1] * sc[8] * x2175;
  x894 = -48000000.0 * sc[1] * x1150 - 20000000.0 * sc[1] * x1164 -
         sc[1] * x202 - sc[1] * x2174 - 3.8e+29 * sc[1] * x40 * x894 -
         sc[1] * x458 - 50000000.0 * sc[1] * x768 + 48000000.0 * sc[2] * x1892 +
         20000000.0 * sc[4] * x598 + x1494 * x2180 + x1955 - x343 +
         x508 * x849 + x532;
  x2044 = -57000000.0 * sc[2] * x1080 - x1843 * x2096;
  x2080 = -70000000.0 * sc[0] * x1681 - x1083 * x2037;
  x470 = -40000000.0 * sc[8] * x1083 - 60000000.0 * sc[9] * x1080;
  x137 = -20000000.0 * sc[4] * x1083 - 30000000.0 * sc[4] * x1681 -
         x1080 * x954 - x1843 * x2024 + x6154;
  x2086 = 2000000.0 * sc[1] * x1364 + 90000000.0 * sc[1] * x1845 -
          68000000.0 * sc[1] * x1893 - 80000000.0 * sc[2] * x1083 -
          30000000.0 * sc[4] * x1080 - 30000000.0 * sc[8] * x1080 -
          x1080 * x441 - x1080 * x508 - x1080 * x662 + x1083 * x2034 -
          x1083 * x2094 + x1083 * x2110 + x1364 * x2142 - x1364 * x2148 +
          x1364 * x2154 + x137 + x1845 * x2089 + x1958 + x470 + x497 + x529 +
          x6177;
  x2175 = 48000000.0 * sc[2] * x1900 + 20000000.0 * sc[4] * x63 + x1033 * x508 +
          x1905 * x2180 + x1955 - x508 * x971 + x532;
  x492 = -1.33e+48 * sc[1] * x134 * x886 - 50000000.0 * sc[1] * x1349 -
         sc[1] * x2128 - 20000000.0 * sc[1] * x2130 -
         20000000.0 * sc[1] * x415 + x1086 * x2112 - x1087 * x2112 -
         x1845 * x2043 + x1900 * x2043 + x2097 * x63 + x2137;
  x1289 = 40000000.0 * sc[8] * x1086 - 40000000.0 * sc[8] * x1087 +
          60000000.0 * sc[9] * x1033 - 60000000.0 * sc[9] * x971 + x1175 -
          x1720 * x2091 + x184 * x2091 + x1900 * x2031 + x1959 * x2132;
  x1369 = 20000000.0 * sc[4] * x1086 - 20000000.0 * sc[4] * x1087 -
          30000000.0 * sc[4] * x1720 + 30000000.0 * sc[4] * x184 +
          x1033 * x954 - x1825 * x2024 + x1827 * x2024 - x954 * x971;
  x932 = -30000000.0 * sc[2] * x1825 + 30000000.0 * sc[2] * x1827;
  x526 = -sc[1] * x20 * x2192 * x526 - sc[1] * x2136 - x1173 + x1283 * x2197;
  const amrex::Real x7287 = 50000000.0 * sc[14] * x1631 -
                            50000000.0 * sc[14] * x1670 + x1099 * x2112 -
                            x1104 * x2112 + x1944 * x2043;
  const amrex::Real x7303 =
    40000000.0 * sc[8] * x1099 - 40000000.0 * sc[8] * x1104 +
    12000000.0 * sc[8] * x1631 * x2117 + 60000000.0 * sc[9] * x568 -
    60000000.0 * sc[9] * x892 + x1175 - x1670 * x2091 + x1789 * x2132 +
    x1944 * x2031;
  const amrex::Real x7310 =
    20000000.0 * sc[4] * x1099 - 20000000.0 * sc[4] * x1104 +
    30000000.0 * sc[4] * x1631 - 30000000.0 * sc[4] * x1670 - x1843 * x2024 +
    x1846 * x2024 + x568 * x954 + x6154 - x892 * x954;
  const amrex::Real x7316 = 70000000.0 * sc[0] * x1631 -
                            70000000.0 * sc[0] * x1670 + x1099 * x2037 -
                            x1104 * x2037 + x5510;
  const amrex::Real x7330 = exp(-2.0 * g_RT[2] + g_RT[3] - tc[0]);
  const amrex::Real x7331 = refC * sc[3] * x7330;
  const amrex::Real x7332 = ((sc[2]) * (sc[2])) * x874;
  const amrex::Real x7347 = exp(-1509.64999741416 * invT);
  const amrex::Real x7349 = sc[10] * sc[2] * x7347;
  const amrex::Real x7351 =
    refC * exp(-g_RT[10] + g_RT[11] - g_RT[2] - 1509.64999741416 * invT);
  const amrex::Real x7352 = sc[11] * x7351;
  const amrex::Real x7365 = x2253 * x827 - x2253 * x961 + x2258 * x644 -
                            x2258 * x855 + x2261 * x760 - x2261 * x823;
  const amrex::Real x7397 = 500000.0 * x1688 - 500000.0 * x263 +
                            240000.0 * x7331 - 240000.0 * x7332 -
                            602.0 * x7349 + 602.0 * x7352;
  const amrex::Real x7407 = x1030 * x2261 + x1064 * x2253 - x1508 * x2261 -
                            x2253 * x969 + x2258 * x893 - x2258 * x899;
  const amrex::Real x7409 =
    9.63 * exp(-2012.8666632188799 * invT + 2.0 * tc[0]);
  const amrex::Real x7413 =
    2500000.0 *
    exp(-g_RT[10] + g_RT[11] + g_RT[2] - g_RT[3] - 24053.756625465601 * invT);
  const amrex::Real x7417 =
    1020.0 * exp(-4327.6633259205901 * invT + 1.5 * tc[0]);
  const amrex::Real x7423 = 1204.0 * sc[0] + 903.0 * sc[10] + 2107.0 * sc[11] +
                            602.0 * sc[21] + 3612.0 * sc[3] + 3612.0 * sc[5] +
                            602.0 * x17 + 602.0 * x38;
  x17 = 2.4 * sc[0] + 1.75 * sc[10] + 3.6 * sc[11] + sc[21] + sc[3] +
        15.4 * sc[5] + x17 + x38;
  x38 = 180000.0 * sc[20] * exp(-2958.91399493175 * invT + 0.7 * tc[0]);
  const amrex::Real x7458 =
    -sc[20] * x5661 -
    35.0 * sc[20] * exp(489.12659916218797 * invT + 1.65 * tc[0]) - x38;
  const amrex::Real x7459 =
    89.8 * exp(-2863.3028284288498 * invT + 1.92 * tc[0]);
  const amrex::Real x7466 = 1750000.0 * exp(-679.34249883637199 * invT);
  const amrex::Real x7469 =
    -sc[17] * x7466 - 10000000.0 * sc[17] * x768 + x2123 * x970 - x2123 * x973;
  const amrex::Real x7471 = exp(
    g_RT[2] - 2.0 * g_RT[4] + g_RT[5] + 1061.78716484796 * invT + 2.4 * tc[0]);
  const amrex::Real x7480 =
    15.1 * exp(-1882.0303301096501 * invT + 1.91 * tc[0]);
  const amrex::Real x7487 = -sc[14] * x7480 - 19.584 * sc[14] * exp(x943) +
                            x1639 * x2261 + x1640 * x2253 - x1643 * x2261 -
                            x2253 * x718 + x2258 * x970 - x2258 * x973;
  const amrex::Real x7488 = 39000000.0 * exp(-1781.38699694871 * invT);
  const amrex::Real x7494 =
    2500000.0 * sc[10] * exp(-24053.756625465601 * invT);
  const amrex::Real x7496 = 20000000.0 * sc[4] * exp(-x1320 - x166);
  const amrex::Real x7511 = 30830000.0 * exp(-14492.6399751759 * invT);
  const amrex::Real x7540 = -x1661 * x2253 + x1662 * x2253 + x1673 * x2261 -
                            x1685 * x2261 + x2258 * x977 - x2258 * x978;
  const amrex::Real x7541 =
    9.63 * exp(-2012.8666632188799 * invT + 2.0 * tc[0] - x1153 - x166);
  const amrex::Real x7543 =
    1020.0 *
    exp(g_RT[8] - g_RT[9] - 4327.6633259205901 * invT + 1.5 * tc[0] - x166);
  const amrex::Real x7546 =
    180000.0 *
    exp(g_RT[19] - g_RT[20] - 2958.91399493175 * invT + 0.7 * tc[0] - x166);
  const amrex::Real x7548 = 20000000.0 * sc[3] * exp(-x1320 - x166);
  const amrex::Real x7549 = sc[4] * exp(1061.78716484796 * invT + 2.4 * tc[0]);
  const amrex::Real x7551 =
    exp(g_RT[17] - g_RT_qss[8] - 2012.8666632188799 * invT - x166);
  x166 =
    10000000.0 * exp(g_RT[16] - g_RT[17] - 4025.7333264377598 * invT - x166);
  const amrex::Real x7594 = -x1680 * x2261 - x1687 * x2253 + x1710 * x2261 +
                            x2253 * x345 + x2258 * x980 - x2258 * x981 +
                            x2260 * x233;
  const amrex::Real x7634 = -x1669 * x2253 + x1748 * x2261 + x1751 * x2253 -
                            x1756 * x2261 + x2258 * x989 - x2258 * x990;
  const amrex::Real x7662 = -100000000.0 * sc[2] * x411 + x7397;
  const amrex::Real x7672 = x1008 * x2258 - x1010 * x2258 - x1760 * x2253 +
                            x1762 * x2253 - x1764 * x2261 + x2261 * x323;
  const amrex::Real x7694 = x1893 * x2272;
  const amrex::Real x7704 = -10000000.0 * sc[2] * x1893 -
                            96000000.0 * sc[2] * x1989 - x1905 * x2284 -
                            x1905 * x888 + x7662 - x7694;
  const amrex::Real x7714 = x1011 * x2258 - x1013 * x2258 - x1768 * x2253 +
                            x1769 * x2253 - x1773 * x2261 + x225 * x2261;
  const amrex::Real x7755 = x1017 * x2258 - x1018 * x2258 - x1775 * x2253 +
                            x1776 * x2253 + x1779 * x2261 - x1784 * x2261 +
                            x2252 * x435;
  const amrex::Real x7786 = -20000000.0 * sc[2] * x173 * x2054 -
                            10000000.0 * sc[2] * x639 - x173 * x2284 -
                            x2272 * x639;
  const amrex::Real x7793 = x1019 * x2258 - x1020 * x2258 - x1778 * x2253 +
                            x1780 * x2253 + x1821 * x2261 - x1856 * x2261;
  const amrex::Real x7794 = 2500000.0 * sc[3] * exp(-24053.756625465601 * invT);
  const amrex::Real x7837 = x1023 * x2258 - x1025 * x2258 + x1678 * x2253 -
                            x1797 * x2253 + x1836 * x2261 - x1841 * x2261;
  const amrex::Real x7875 = x1027 * x2258 - x1031 * x2258 + x1663 * x2253 -
                            x1750 * x2253 - x1876 * x2261 + x2261 * x758;
  const amrex::Real x7914 = x1063 * x2258 - x1065 * x2258 - x1761 * x2253 +
                            x1765 * x2253 + x1879 * x2261 - x1894 * x2261 +
                            x2254 * x645;
  const amrex::Real x7948 =
    -10000000.0 * sc[2] * x1386 - x1386 * x2272 + 1500000.0 * x1688 -
    x2284 * x791 - 1500000.0 * x263 + 720000.0 * x7331 - 720000.0 * x7332 -
    1806.0 * x7349 + 1806.0 * x7352 - x791 * x888;
  const amrex::Real x7949 = 96000000.0 * sc[2] * x1901 +
                            96240000.0 * sc[2] * x1998 - x1901 * x2187 -
                            x1901 * x2261 - x1998 * x2271 + x7948;
  const amrex::Real x7955 = x1068 * x2258 - x1069 * x2258 - x1830 * x2253 +
                            x1831 * x2253 + x1896 * x2261;
  const amrex::Real x7984 = -sc[2] * x7480 - 19.584 * sc[2] * exp(x943) +
                            x1070 * x2258 - x1834 * x2253 + x1835 * x2253 -
                            x2258 * x668 + x2261 * x566;
  const amrex::Real x8016 = x1074 * x2258 - x1077 * x2258 - x1823 * x2261 -
                            x1838 * x2253 + x1842 * x2253 + x1908 * x2261;
  const amrex::Real x8035 = -x1364 * x2270;
  const amrex::Real x8041 =
    96240000.0 * sc[2] * x1364 + 60000000.0 * sc[2] * x1843 +
    96000000.0 * sc[2] * x1845 - x1364 * x2271 - x1843 * x1982 - x1843 * x2095 +
    x1843 * x882 - x1845 * x2187;
  const amrex::Real x8042 =
    -96240000.0 * sc[2] * x1789 + x1789 * x2270 + x1789 * x2271 + x8035 + x8041;
  const amrex::Real x8045 = -x1843 * x2179;
  const amrex::Real x8055 = -x1843 * x2253 - x1845 * x2261;
  const amrex::Real x8066 = -x1083 * x732;
  const amrex::Real x8073 =
    -10000000.0 * sc[2] * x1893 - 96000000.0 * sc[2] * x1989 - x7694;
  const amrex::Real x8077 =
    57000000.0 * sc[2] * x1080 + 80000000.0 * sc[2] * x1083 +
    30000000.0 * sc[2] * x1681 - 33000000.0 * sc[3] * x1080 - x1083 * x2191;
  const amrex::Real x8079 = -x1083 * x2123;
  const amrex::Real x8081 = -x1083 * x2258 + x8055;
  const amrex::Real x8136 = x1086 * x2258 - x1087 * x2258 - x1825 * x2253 +
                            x1827 * x2253 - x1845 * x2261 + x1900 * x2261;
  const amrex::Real x8148 =
    180000.0 * sc[2] * exp(-2958.91399493175 * invT + 0.7 * tc[0]);
  const amrex::Real x8149 =
    -sc[2] * x5661 -
    35.0 * sc[2] * exp(489.12659916218797 * invT + 1.65 * tc[0]) - x8148;
  const amrex::Real x8199 = 300000.0 * sc[6] * x927 - 300000.0 * sc[6] * x956;
  const amrex::Real x8221 = -120000.0 * x7331 + 120000.0 * x7332;
  const amrex::Real x8228 = 300000.0 * sc[6] * x1561 - 300000.0 * sc[6] * x494;
  const amrex::Real x8255 = 300000.0 * sc[6] * x1660 - 300000.0 * sc[6] * x1726;
  const amrex::Real x8258 = exp(-429.747032597231 * invT);
  const amrex::Real x8262 = 1000000.0 * exp(-x1320 - x86);
  const amrex::Real x8265 = 2660000.0 * exp(-g_RT[19] + g_RT[20] - x1320);
  x1320 = 46400000.0 * exp(251.60833290235999 * invT - x1320 - x162);
  const amrex::Real x8307 =
    exp(g_RT[3] - 2.0 * g_RT[6] + g_RT[7] + 820.24316526169298 * invT);
  const amrex::Real x8310 =
    exp(g_RT[3] - 2.0 * g_RT[6] + g_RT[7] - 6038.59998965664 * invT);
  const amrex::Real x8312 = 300000.0 * sc[6] * x1757 - 300000.0 * sc[6] * x1759;
  const amrex::Real x8316 = 42200000.0 * exp(-30595.573280927001 * invT);
  const amrex::Real x8321 = 100000000.0 * exp(-20128.666632188801 * invT);
  const amrex::Real x8325 = 36000.0 * exp(-4498.7569922941902 * invT);
  const amrex::Real x8328 = exp(
    2.0 * g_RT[10] - g_RT[16] - g_RT[3] + g_RT[4] - 429.747032597231 * invT);
  const amrex::Real x8349 = 46400000.0 * exp(251.60833290235999 * invT);
  const amrex::Real x8359 =
    36000.0 *
    exp(g_RT[12] - g_RT[3] + g_RT[4] - g_RT[8] - 4498.7569922941902 * invT);
  const amrex::Real x8364 = 300000.0 * sc[6] * x1790 - 300000.0 * sc[6] * x1824;
  const amrex::Real x8393 = 300000.0 * sc[6] * x1829 - 300000.0 * sc[6] * x1860;
  x90 = 7600000.0 * exp(-201.28666632188799 * invT - x114 - x90);
  x114 = 1.34 * exp(
                  g_RT[13] - g_RT_qss[6] + 192.93326966953001 * invT +
                  1.61 * tc[0] - x114);
  const amrex::Real x8425 =
    4.28e-19 * exp(
                 g_RT[12] - g_RT[3] + g_RT[6] - g_RT_qss[4] +
                 1776.3548302906599 * invT + 7.6 * tc[0]);
  const amrex::Real x8429 =
    300000.0 * sc[6] * x1881 - 300000.0 * sc[6] * x1885 + 300000.0 * x324;
  const amrex::Real x8430 =
    260000.0 * sc[6] * exp(820.24316526169298 * invT) +
    840000000.0 * sc[6] * exp(-6038.59998965664 * invT) + x8429;
  const amrex::Real x8433 = -10000000.0 * sc[3] * x411 + x1161 + x8221;
  const amrex::Real x8458 = 300000.0 * sc[6] * x1911 - 300000.0 * sc[6] * x1951;
  const amrex::Real x8464 =
    -90000.0 * sc[3] * x1989 - x1893 * x2324 + x7694 + x8433;
  const amrex::Real x8465 = -158000.0 * sc[3] * x1905 + x1905 * x2284;
  const amrex::Real x8496 = 300000.0 * sc[6] * x1954 - 300000.0 * sc[6] * x1957;
  const amrex::Real x8525 = 300000.0 * sc[6] * x1960 - 300000.0 * sc[6] * x1966;
  const amrex::Real x8559 = 300000.0 * sc[6] * x1971 - 300000.0 * sc[6] * x1973;
  const amrex::Real x8586 = -300000.0 * sc[6] * x1983 + 300000.0 * sc[6] * x926;
  const amrex::Real x8613 = 300000.0 * sc[6] * x1984 - 300000.0 * sc[6] * x652;
  const amrex::Real x8641 = 300000.0 * sc[6] * x1996 - 300000.0 * sc[6] * x1998;
  const amrex::Real x8647 = -158000.0 * sc[3] * x791 + x1386 * x2272 -
                            x1386 * x2324 + x2284 * x791 - 360000.0 * x7331 +
                            360000.0 * x7332;
  const amrex::Real x8648 = 20000.0 * sc[3] * x1998 + x1901 * x2187 +
                            x1901 * x2256 + x1901 * x373 - 8400000.0 * x2045 +
                            8400000.0 * x660 + x8647;
  const amrex::Real x8665 = -300000.0 * sc[6] * x1998 + 300000.0 * sc[6] * x909;
  const amrex::Real x8691 = 300000.0 * sc[6] * x1059 - 300000.0 * sc[6] * x600;
  const amrex::Real x8722 = 20000.0 * sc[3] * x1364 - x1843 * x242 +
                            x1843 * x351 - x1843 * x694 - x1843 * x882 +
                            x1845 * x2187 + x1845 * x2256 + x1845 * x373;
  const amrex::Real x8725 = -x1843 * x2147;
  const amrex::Real x8727 = -x1470 * x1845;
  const amrex::Real x8728 = -300000.0 * sc[6] * x1364;
  const amrex::Real x8730 = 300000.0 * sc[6] * x1789 + x8727 + x8728;
  const amrex::Real x8745 =
    33000000.0 * sc[3] * x1080 - x1083 * x1557 + x1083 * x2257;
  const amrex::Real x8817 =
    11.3 *
    exp(
      g_RT_qss[0] - g_RT_qss[1] - 1509.64999741416 * invT + 2.0 * tc[0] - x162);
  const amrex::Real x8818 = sc[5] * x8817;
  const amrex::Real x8850 =
    10000000.0 * sc[2] * x1887 + 24000000.0 * sc[6] * x520 +
    20000000.0 * sc[6] * x644 - 20000000.0 * sc[6] * x855 + x1507 * x827 -
    x1507 * x961 - x2188 * x927 + x2188 * x956 - x556 * x760 + x556 * x823;
  const amrex::Real x8855 = 32000000.0 * sc[1] * x1887 - x1014 * x1444 +
                            x1444 * x987 + x1599 * x644 - x1599 * x855;
  amrex::Real x8858 =
    0.0310810810810811 * x40 * exp(855.46833186802303 * invT - 0.53 * tc[0]);
  amrex::Real x8859 = log(
    0.2654 * exp(-0.010638297872340399 * tc[1]) +
    0.7346 * exp(-0.000569476082004556 * tc[1]) + exp(-5182.0 * invT));
  amrex::Real x8860 =
    -0.29097730287517898 * x8859 + 0.43429448190325198 * log(x8858) - 0.4;
  amrex::Real x8863 = -0.55155399201712996 * x8859 - 0.14 * x8860 + 0.75;
  const amrex::Real x8864 = ((x8860) * (x8860)) / ((x8863) * (x8863) * (x8863));
  const amrex::Real x8866 = x8860 / ((x8863) * (x8863));
  const amrex::Real x8873 =
    exp(
      M_LN10 * (0.43429448190325198 * x8859 /
                (((x8860) * (x8860)) / ((x8863) * (x8863)) + 1.0))) /
    (x8858 + 1.0);
  const amrex::Real x8875 =
    ((sc[4]) * (sc[4])) * x8873 * exp(855.46833186802303 * invT - 0.9 * tc[0]);
  amrex::Real x8877 =
    x8859 / ((((x8860) * (x8860)) / ((x8863) * (x8863)) + 1.0) *
             (((x8860) * (x8860)) / ((x8863) * (x8863)) + 1.0));
  const amrex::Real x8879 = 4600000.0 * x40 * x8875 * x8877;
  const amrex::Real x8881 =
    x8873 *
    exp(-2.0 * g_RT[4] + g_RT[7] + 855.46833186802303 * invT - 0.9 * tc[0]);
  const amrex::Real x8885 = 4600000.0 * sc[7] * x788 * x8877 * x8881;
  const amrex::Real x8887 = refC * sc[7] * x8881;
  x8858 = exp(
            M_LN10 * (0.43429448190325198 * x8859 /
                      (((x8860) * (x8860)) / ((x8863) * (x8863)) + 1.0))) /
          ((x8858 + 1.0) * (x8858 + 1.0));
  x8859 = ((sc[4]) * (sc[4])) * x40 * x8858 *
          exp(1710.9366637360499 * invT - 1.43 * tc[0]);
  x8860 =
    sc[7] * x788 *
    exp(-2.0 * g_RT[4] + g_RT[7] + 1710.9366637360499 * invT - 1.43 * tc[0]);
  x8863 =
    -1000000.0 * x1688 + 1000000.0 * x263 - 285945.94594594598 * x8858 * x8860 +
    285945.94594594598 * x8859 - 9200000.0 * x8875 +
    x8879 * (0.56 * x691 * x8864 + 4.0 * x691 * x8866) -
    x8885 * (0.56 * x691 * x8864 + 4.0 * x691 * x8866) + 9200000.0 * x8887;
  const amrex::Real x8930 =
    10000000.0 * sc[2] * x1370 + 24000000.0 * sc[6] * x540 +
    20000000.0 * sc[6] * x893 - 20000000.0 * sc[6] * x899 - x1030 * x556 +
    x1064 * x1507 - x1507 * x969 + x1508 * x556 - x1561 * x2188 + x2188 * x494;
  const amrex::Real x8935 =
    4600000.0 * refC * sc[7] * x8881 - 500000.0 * x1688 + 500000.0 * x263 -
    142972.97297297299 * x8858 * x8860 + 142972.97297297299 * x8859 -
    4600000.0 * x8875 + x8879 * (0.28 * x691 * x8864 + 2.0 * x691 * x8866) -
    x8885 * (0.28 * x691 * x8864 + 2.0 * x691 * x8866);
  const amrex::Real x8942 = 32000000.0 * sc[1] * x1370 + x1211 * x1444 -
                            32000000.0 * x1387 - x1389 * x1444 + x1599 * x893 -
                            x1599 * x899 - 32000000.0 * x473;
  const amrex::Real x8978 =
    10000000.0 * sc[2] * x1674 + 24000000.0 * sc[6] * x1208 +
    20000000.0 * sc[6] * x970 - 20000000.0 * sc[6] * x973 - 10000000.0 * x1387 +
    x1507 * x1640 - x1507 * x718 - x1639 * x556 + x1643 * x556 - x1660 * x2188 +
    x1726 * x2188 - 10000000.0 * x473;
  const amrex::Real x8983 = 32000000.0 * sc[1] * x1674 + sc[9] * x7417 +
                            x1419 * x1444 - x1444 * x1461 + x1599 * x970 -
                            x1599 * x973;
  const amrex::Real x9020 =
    10000000.0 * sc[2] * x1766 + 24000000.0 * sc[6] * x1658 +
    20000000.0 * sc[6] * x977 - 20000000.0 * sc[6] * x978 + sc[8] * x8325 -
    x1507 * x1661 + x1507 * x1662 - x1673 * x556 + x1685 * x556 -
    x1757 * x2188 + x1759 * x2188;
  const amrex::Real x9025 = 32000000.0 * sc[1] * x1766 - x1444 * x1517 +
                            x1444 * x854 + x1599 * x977 - x1599 * x978;
  const amrex::Real x9026 =
    2000000.0 *
    exp(-g_RT[14] + g_RT[18] + g_RT[4] - g_RT[6] - 7045.0333212660798 * invT);
  const amrex::Real x9033 =
    100.0 * sc[9] * exp(-1570.03599731073 * invT + 1.6 * tc[0]);
  const amrex::Real x9036 = 3.1 * exp(149.958566409806 * invT + 2.0 * tc[0]);
  const amrex::Real x9074 = 580000000.0 * exp(-4810.7513250931197 * invT);
  const amrex::Real x9077 = 1750000.0 * exp(-161.02933305751 * invT);
  const amrex::Real x9081 =
    150000000.0 *
    exp(-g_RT[10] + g_RT[11] + g_RT[4] - g_RT[6] - 11875.913312991401 * invT);
  const amrex::Real x9086 =
    3.54 * exp(-437.79849925010598 * invT + 2.12 * tc[0]);
  const amrex::Real x9093 =
    4.83e-10 * exp(1006.43333160944 * invT + 4.0 * tc[0]);
  const amrex::Real x9097 = 3.6 * exp(-1258.0416645118 * invT + 2.0 * tc[0]);
  const amrex::Real x9116 =
    3430.0 * exp(224.93784961470999 * invT + 1.18 * tc[0]);
  const amrex::Real x9122 =
    -10000000.0 * sc[12] * x1379 - 20000000.0 * sc[12] * x1422 -
    sc[12] * x8359 - sc[12] * x9116 + 10000000.0 * sc[2] * x1889 +
    24000000.0 * sc[6] * x182 + 20000000.0 * sc[6] * x980 -
    20000000.0 * sc[6] * x981 - x1507 * x1687 + x1507 * x345 + x1680 * x556 -
    x1710 * x556 - x1790 * x2188 + x1824 * x2188 -
    6600000.0 * x1833 * x233 * x72 - 24000000.0 * x1833 * x324 * x452;
  const amrex::Real x9127 =
    56.0 * exp(-2727.4343286615799 * invT + 1.6 * tc[0]);
  const amrex::Real x9131 = 32000000.0 * sc[1] * x1889 -
                            32000000.0 * sc[8] * x1372 - sc[8] * x7543 -
                            sc[8] * x9127 - 25010000.0 * sc[8] + x1444 * x1519 -
                            x1444 * x1521 + x1599 * x980 - x1599 * x981;
  const amrex::Real x9132 =
    100.0 *
    exp(g_RT[8] - g_RT[9] - 1570.03599731073 * invT + 1.6 * tc[0] - x162);
  const amrex::Real x9134 =
    3.1 *
    exp(g_RT[19] - g_RT[20] + 149.958566409806 * invT + 2.0 * tc[0] - x162);
  const amrex::Real x9150 =
    10000000.0 * exp(g_RT[17] - g_RT_qss[8] - 1006.43333160944 * invT - x162);
  const amrex::Real x9166 =
    580000000.0 * exp(-4810.7513250931197 * invT - x1153 - x162);
  const amrex::Real x9168 =
    1750000.0 * exp(-161.02933305751 * invT - x1153 - x162);
  x162 = 7500000.0 * exp(g_RT[16] - g_RT[17] - 1006.43333160944 * invT - x162);
  const amrex::Real x9192 =
    10000000.0 * sc[2] * x1891 + 24000000.0 * sc[6] * x1897 +
    20000000.0 * sc[6] * x989 - 20000000.0 * sc[6] * x990 - x1507 * x1669 +
    x1507 * x1751 - x1748 * x556 + x1756 * x556 - x1829 * x2188 +
    x1860 * x2188 + x435 * x717;
  const amrex::Real x9199 = 32000000.0 * sc[1] * x1891 + x1444 * x1523 -
                            x1444 * x1533 + x1572 * x645 + x1599 * x989 -
                            x1599 * x990 + 25010000.0 * x576 * x597;
  const amrex::Real x9200 = 2000000.0 * exp(-7045.0333212660798 * invT);
  const amrex::Real x9222 = 150000000.0 * exp(-11875.913312991401 * invT);
  const amrex::Real x9245 =
    6600000.0 * sc[19] + 10000000.0 * sc[2] * x1366 +
    20000000.0 * sc[6] * x1008 - 20000000.0 * sc[6] * x1010 +
    24000000.0 * sc[6] * x1953 - 24000000.0 * x1284 - x1507 * x1760 +
    x1507 * x1762 + x1764 * x556 - x1881 * x2188 + x1885 * x2188 - x323 * x556 -
    24000000.0 * x478;
  const amrex::Real x9246 = -20000000.0 * sc[4] * x411 + x8935;
  const amrex::Real x9252 = 32000000.0 * sc[1] * x1366 + x1008 * x1599 -
                            x1010 * x1599 + x1444 * x1534 - x1444 * x1535;
  const amrex::Real x9275 =
    10000000.0 * sc[2] * x1893 + 18000.0 * sc[3] * x1905;
  const amrex::Real x9284 =
    20000000.0 * sc[6] * x1011 - 20000000.0 * sc[6] * x1013 - x1507 * x1768 +
    x1507 * x1769 + x1773 * x556 - x1911 * x2188 + x1951 * x2188 - x225 * x556;
  const amrex::Real x9285 = x1893 * x872;
  const amrex::Real x9287 = 5000000.0 * sc[4] * x1893;
  const amrex::Real x9295 = 24000000.0 * sc[4] * x1989;
  const amrex::Real x9296 = 24000000.0 * sc[6] * x1989 - x9295;
  const amrex::Real x9297 = -x1905 * x2266 - x1905 * x341 + x1905 * x888 +
                            x9246 - x9285 - x9287 + x9296;
  const amrex::Real x9299 = 32000000.0 * sc[1] * x1893 + x5500;
  const amrex::Real x9305 =
    4.83e-10 * exp(
                 g_RT[10] - g_RT[13] - g_RT[4] + g_RT[8] +
                 1006.43333160944 * invT + 4.0 * tc[0]);
  const amrex::Real x9344 =
    10000000.0 * sc[2] * x839 + sc[3] * x8325 + 20000000.0 * sc[6] * x1017 -
    20000000.0 * sc[6] * x1018 + 24000000.0 * sc[6] * x447 - x1507 * x1775 +
    x1507 * x1776 - x1779 * x556 + x1784 * x556 - x1954 * x2188 + x1957 * x2188;
  const amrex::Real x9351 = 32000000.0 * sc[1] * x839 -
                            32000000.0 * sc[4] * x1372 - sc[4] * x7543 -
                            sc[4] * x9127 - 25010000.0 * sc[4] + x1017 * x1599 -
                            x1018 * x1599 + x1444 * x1574 - x1444 * x1575;
  const amrex::Real x9352 =
    100.0 * sc[4] * exp(-1570.03599731073 * invT + 1.6 * tc[0]);
  const amrex::Real x9385 =
    10000000.0 * sc[2] * x639 + 18000.0 * sc[3] * x173 +
    20000000.0 * sc[6] * x1019 - 20000000.0 * sc[6] * x1020 +
    24000000.0 * sc[6] * x2003 - x1507 * x1778 + x1507 * x1780 - x1821 * x556 +
    x1856 * x556 - x1960 * x2188 + x1966 * x2188;
  const amrex::Real x9391 = 32000000.0 * sc[1] * x639 + sc[2] * x7417 +
                            x1019 * x1599 - x1020 * x1599 + x1444 * x796 -
                            x1444 * x986;
  const amrex::Real x9396 = 20000000.0 * sc[2] * x173 * x2054 -
                            5000000.0 * sc[4] * x639 - x173 * x2266 -
                            x173 * x341 - x639 * x872 + x8863;
  const amrex::Real x9441 =
    10000000.0 * sc[2] * x1002 + 20000000.0 * sc[6] * x1023 -
    20000000.0 * sc[6] * x1025 + 24000000.0 * sc[6] * x1981 + x1507 * x1678 -
    x1507 * x1797 - x1836 * x556 + x1841 * x556 - x1971 * x2188 + x1973 * x2188;
  const amrex::Real x9447 = 32000000.0 * sc[1] * x1002 + x1023 * x1599 -
                            x1025 * x1599 + x1444 * x1584 - x1444 * x1586;
  const amrex::Real x9478 =
    10000000.0 * sc[2] * x639 + 18000.0 * sc[3] * x173 +
    20000000.0 * sc[6] * x1027 - 20000000.0 * sc[6] * x1031 +
    24000000.0 * sc[6] * x951 + x1507 * x1663 - x1507 * x1750 + x1876 * x556 +
    x1983 * x2188 - x2188 * x926 - x556 * x758;
  const amrex::Real x9483 = 32000000.0 * sc[1] * x639 + x1027 * x1599 -
                            x1031 * x1599 + x1444 * x1587 - x1444 * x1588;
  const amrex::Real x9517 =
    -24000000.0 * refCinv * sc[4] * sc[8] * x1325 + 32000000.0 * sc[1] * x1531 +
    24000000.0 * sc[6] * x1984 - 24000000.0 * sc[6] * x652 + x1063 * x1599 -
    x1065 * x1599 - x1444 * x1459 + x1444 * x1589;
  const amrex::Real x9531 =
    10000000.0 * sc[2] * x1531 - 10000000.0 * sc[4] * x1379 -
    20000000.0 * sc[4] * x1422 - sc[4] * x8359 - sc[4] * x9116 +
    20000000.0 * sc[6] * x1063 - 20000000.0 * sc[6] * x1065 +
    24000000.0 * sc[6] * x1559 - x1507 * x1761 + x1507 * x1765 - x1879 * x556 +
    x1894 * x556 - x1984 * x2188 + x2188 * x652 - 6600000.0 * x233 * x66 * x72 -
    24000000.0 * x324 * x452 * x66;
  const amrex::Real x9563 =
    10000000.0 * sc[2] * x1386 + 18000.0 * sc[3] * x791 +
    20000000.0 * sc[6] * x1068 - 20000000.0 * sc[6] * x1069 - x1507 * x1830 +
    x1507 * x1831 - x1896 * x556 + x1901 * x556 - x1996 * x2188 + x1998 * x2188;
  const amrex::Real x9569 = 32000000.0 * sc[1] * x1386 + x1068 * x1599 -
                            x1069 * x1599 + x1444 * x884 - x1444 * x890;
  const amrex::Real x9582 =
    -5000000.0 * sc[4] * x1386 - x1386 * x872 - 1500000.0 * x1688 -
    x2266 * x791 + 1500000.0 * x263 - x341 * x791 + x791 * x888 -
    428918.91891891899 * x8858 * x8860 + 428918.91891891899 * x8859 -
    13800000.0 * x8875 + x8879 * (0.84 * x691 * x8864 + 6.0 * x691 * x8866) -
    x8885 * (0.84 * x691 * x8864 + 6.0 * x691 * x8866) + 13800000.0 * x8887;
  const amrex::Real x9583 =
    30110000.0 * sc[4] * x1901 - 10000000.0 * sc[6] * x1901 -
    24000000.0 * sc[6] * x1998 + x1901 * x2261 + x1998 * x2270 + x9582;
  const amrex::Real x9605 =
    10000000.0 * sc[2] * x1386 + 18000.0 * sc[3] * x791 +
    20000000.0 * sc[6] * x1070 + 24000000.0 * sc[6] * x553 -
    20000000.0 * sc[6] * x668 - x1507 * x1834 + x1507 * x1835 + x1901 * x556 +
    x1998 * x2188 - x2188 * x909 - x556 * x566;
  const amrex::Real x9613 = 32000000.0 * sc[1] * x1386 + x1070 * x1599 -
                            x1444 * x1648 + x1444 * x898 - x1599 * x668;
  const amrex::Real x9644 =
    10000000.0 * sc[2] * x1386 + 18000.0 * sc[3] * x791 +
    20000000.0 * sc[6] * x1074 - 20000000.0 * sc[6] * x1077 +
    24000000.0 * sc[6] * x1724 - x1059 * x2188 - x1507 * x1838 + x1507 * x1842 +
    x1823 * x556 - x1908 * x556 + x2188 * x600;
  const amrex::Real x9649 = 32000000.0 * sc[1] * x1386 + x1074 * x1599 -
                            x1077 * x1599 + x1444 * x1666 - x1444 * x1671;
  const amrex::Real x9653 = -x1845 * x2328;
  const amrex::Real x9671 = x1364 * x2188 - x1507 * x1843 + x1845 * x556;
  const amrex::Real x9674 = 20000000.0 * sc[6] * x1078 -
                            20000000.0 * sc[6] * x1081 + x1507 * x1848 -
                            x169 * x556 - x1789 * x2188 + x9275 + x9671;
  const amrex::Real x9677 = -x1364 * x883;
  const amrex::Real x9684 =
    30110000.0 * sc[4] * x1845 - 24000000.0 * sc[6] * x1364 -
    10000000.0 * sc[6] * x1845 + x1364 * x2270 + x1845 * x2261;
  const amrex::Real x9686 =
    50000000.0 * sc[4] * x1843 + 24000000.0 * sc[6] * x1789 - x1789 * x2270 +
    x1789 * x883 - x1843 * x2098 + x1843 * x2179 + x1843 * x242 + x9677 + x9684;
  const amrex::Real x9721 = -x1083 * x1599 - x1444 * x1681;
  const amrex::Real x9749 =
    30000000.0 * sc[4] * x1080 + 20000000.0 * sc[4] * x1083 +
    30000000.0 * sc[4] * x1681 + 50000000.0 * sc[4] * x1843 -
    20000000.0 * sc[6] * x1083 + x107 * x1083 - x1080 * x8818 - x1083 * x2330 -
    x1843 * x2098 + x1843 * x2179 + x1843 * x242 + x9246 + x9684;
  const amrex::Real x9770 = 20000000.0 * sc[6] * x1086 -
                            20000000.0 * sc[6] * x1087 + 6600000.0 * sc[6] +
                            x1364 * x2188 - x1507 * x1825 + x1507 * x1827 +
                            x1845 * x556 - x1900 * x556 - x1959 * x2188;
  const amrex::Real x9797 = 20000000.0 * sc[6] * x1090 +
                            24000000.0 * sc[6] * x1283 + x1507 * x1832 -
                            x1943 * x556 - x2188 * x557 + x9275 + x9671;
  const amrex::Real x9814 = 20000000.0 * sc[6] * x1099 -
                            20000000.0 * sc[6] * x1104 + x1507 * x1846 -
                            x1789 * x2188 - x1944 * x556 + x9275 + x9671;
  const amrex::Real x9819 = 32000000.0 * sc[1] * x1893 + x1099 * x1599 -
                            x1104 * x1599 + x1444 * x1631 - x1444 * x1670;
  const amrex::Real x9822 = -22000000000.0 * x1493 + 22000000000.0 * x897;
  const amrex::Real x9843 =
    -50000000.0 * sc[10] * x1224 - 12000000.0 * sc[10] * x1361 -
    50000000.0 * sc[4] * x1669 + 50000000.0 * sc[4] * x1751;
  const amrex::Real x9859 =
    50000000.0 * sc[4] * x1678 - 50000000.0 * sc[4] * x1797 -
    50000000.0 * sc[5] * x1224 - 12000000.0 * sc[5] * x1361;
  const amrex::Real x9865 = 16000000.0 * sc[1] * x1386 +
                            5000000.0 * sc[4] * x1386 - 66000000000.0 * x1493 +
                            x341 * x791 + 66000000000.0 * x897;
  const amrex::Real x9875 = 16000000.0 * sc[1] * x1893 + x1364 * x883 +
                            x1845 * x2328 + x1905 * x341 + x9287 + x9295 +
                            x9822;
  const amrex::Real x9878 =
    -12000000.0 * sc[3] * x1681 + x1444 * x1681 + x1681 * x2083;
  const amrex::Real x9879 = -30110000.0 * sc[4] * x1845;
  const amrex::Real x9880 = -50000000.0 * sc[4] * x1843;
  const amrex::Real x9884 = 16000000.0 * sc[1] * x1893 - x107 * x1083 +
                            x1080 * x8818 + x1080 * x954 + x1083 * x1599 +
                            x1364 * x883 + x1845 * x2328 + x9287 + x9295 +
                            x9822 + x9878;
  const amrex::Real x9899 = 2800000.0 * x2045 - 2800000.0 * x660;
  const amrex::Real x9950 = 20000.0 * sc[3] * x1757 - 20000.0 * sc[3] * x1759 +
                            x1673 * x2268 - x1685 * x2268 + 20000.0 * x324;
  const amrex::Real x9964 = sc[18] * x9026 + 20000.0 * sc[3] * x1790 -
                            20000.0 * sc[3] * x1824 - x1680 * x2268 +
                            x1710 * x2268;
  const amrex::Real x9979 =
    0.0245 * exp(-2606.66232886845 * invT + 2.47 * tc[0] - x1153 - x86);
  const amrex::Real x9986 =
    0.0096 * sc[20] * exp(-6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x9990 =
    8700.0 * exp(g_RT[15] - g_RT_qss[7] - 490.13303249379697 * invT - x1153);
  x1153 =
    12100.0 * exp(g_RT[14] - g_RT_qss[6] + 299.91713281961302 * invT - x1153);
  const amrex::Real x9998 = -sc[14] * x1153 - 20000.0 * sc[14] * x1307 -
                            sc[14] * x9200 + 20000.0 * sc[3] * x1881 -
                            20000.0 * sc[3] * x1885 - x1764 * x2268 +
                            x2268 * x323;
  const amrex::Real x10000 =
    -sc[10] * x90 - sc[10] * x9222 - x1760 * x351 + x1762 * x351;
  const amrex::Real x10004 = -1000000.0 * sc[12] * x768 - sc[12] * x8425 +
                             x1366 * x2324 - x1760 * x2325 + x1762 * x2325;
  const amrex::Real x10006 =
    0.0245 * sc[8] * exp(-2606.66232886845 * invT + 2.47 * tc[0]);
  const amrex::Real x10007 =
    0.0096 * exp(
               g_RT[19] - g_RT[20] - g_RT[6] + g_RT[7] -
               6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x10018 =
    90000.0 * sc[3] * x1989 - 24000000.0 * sc[6] * x1989;
  const amrex::Real x10028 = 20000.0 * sc[3] * x1911 - 20000.0 * sc[3] * x1951 -
                             x1773 * x2268 + x225 * x2268 +
                             12100.0 * x233 * exp(299.91713281961302 * invT);
  const amrex::Real x10030 =
    0.0245 * sc[7] * exp(-2606.66232886845 * invT + 2.47 * tc[0]);
  const amrex::Real x10072 =
    -sc[6] * x90 - sc[6] * x9222 + x1678 * x351 - x1797 * x351;
  const amrex::Real x10099 = -1000000.0 * sc[6] * x768 - sc[6] * x8425 +
                             x1531 * x2324 - x1761 * x2325 + x1765 * x2325;
  const amrex::Real x10114 = -20000.0 * sc[3] * x1998 - x1901 * x2268;
  const amrex::Real x10118 =
    140000.0 * sc[3] * x791 + 10000000.0 * sc[6] * x1901 +
    24600000.0 * sc[6] * x1998 + x1386 * x872 + x1470 * x1901 - x1998 * x2188 +
    8400000.0 * x2045 + x2266 * x791 - 8400000.0 * x660;
  const amrex::Real x10130 = 20000.0 * sc[3] * x909 - sc[6] * x1153 -
                             20000.0 * sc[6] * x1307 - sc[6] * x9200 + x10114 +
                             x2268 * x566;
  const amrex::Real x10146 =
    140000.0 * sc[3] * x1905 + 24600000.0 * sc[6] * x1364 +
    10000000.0 * sc[6] * x1845 + x10018 - x1364 * x2188 + x1470 * x1845 +
    x1905 * x2266 + x9285;
  const amrex::Real x10149 = -x1364 * x2326;
  const amrex::Real x10151 = -24600000.0 * sc[6] * x1789 + x10149 +
                             x1789 * x2188 + x1789 * x2326 + x1843 * x2147;
  const amrex::Real x10155 = -20000.0 * sc[3] * x1364 - x1845 * x2268;
  const amrex::Real x10156 = 20000.0 * sc[3] * x1789 + x10155;
  const amrex::Real x10160 = -x1843 * x2325 + x1893 * x2324;
  const amrex::Real x10162 = -x1843 * x351;
  const amrex::Real x10164 = -x1845 * x556;
  const amrex::Real x10165 = -x1845 * x2256;
  const amrex::Real x10174 =
    20000000.0 * sc[6] * x1083 + 24600000.0 * sc[6] * x1364 +
    10000000.0 * sc[6] * x1845 + x10018 - x1364 * x2188 + x1470 * x1845 + x9285;
  const amrex::Real x10201 =
    0.0096 * sc[6] * exp(-6999.7438213436499 * invT + 2.6 * tc[0]);
  const amrex::Real x10214 = 2300000.0 * sc[7] * x788 * x8877 * x8881;
  x8877 = 2300000.0 * x40 * x8875 * x8877;
  const amrex::Real x10217 =
    -4600000.0 * refC * sc[7] * x8881 +
    x10214 * (0.56 * x691 * x8864 + 4.0 * x691 * x8866) +
    142972.97297297299 * x8858 * x8860 - 142972.97297297299 * x8859 +
    4600000.0 * x8875 - x8877 * (0.56 * x691 * x8864 + 4.0 * x691 * x8866);
  const amrex::Real x10219 =
    -2300000.0 * refC * sc[7] * x8881 -
    71486.486486486494 * ((sc[4]) * (sc[4])) * x40 * x8858 *
      exp(1710.9366637360499 * invT - 1.43 * tc[0]) +
    x10214 * (0.28 * x691 * x8864 + 2.0 * x691 * x8866) +
    71486.486486486494 * x8858 * x8860 + 2300000.0 * x8875 -
    x8877 * (0.28 * x691 * x8864 + 2.0 * x691 * x8866);
  const amrex::Real x10224 =
    x10214 * (0.84 * x691 * x8864 + 6.0 * x691 * x8866) +
    214459.459459459 * x8858 * x8860 - 214459.459459459 * x8859 +
    6900000.0 * x8875 - x8877 * (0.84 * x691 * x8864 + 6.0 * x691 * x8866) -
    6900000.0 * x8887;
  const amrex::Real x10228 =
    x10219 + x1364 * x2326 + x1843 * x2325 + x1845 * x2268;
  const amrex::Real x10229 =
    300000.0 * sc[6] * x1789 + x10228 - x1789 * x2326 + x8728;
  const amrex::Real x10253 =
    16040000.0 * sc[2] * x927 - 16040000.0 * sc[2] * x956 +
    24000000.0 * sc[6] * x927 - 24000000.0 * sc[6] * x956 + x2358 * x827 -
    x2358 * x961;
  const amrex::Real x10255 =
    6.6942148760330811e-59 *
    exp(
      M_LN10 * (0.43429448190325198 * x371 /
                (((x2369) * (x2369)) / ((x2370) * (x2370)) + 1.0))) /
    ((x367 + 8.181818181818196e-30) * (x367 + 8.181818181818196e-30));
  const amrex::Real x10259 = x233 * x2363 * x748;
  amrex::Real x10265 = ((x2361) * (x2361)) / ((x2362) * (x2362) * (x2362));
  amrex::Real x10267 = x2361 * x691 / ((x2362) * (x2362));
  amrex::Real x10268 = 0.56 * x10265 * x691 + 4.0 * x10267;
  amrex::Real x10269 =
    x123 / ((((x2361) * (x2361)) / ((x2362) * (x2362)) + 1.0) *
            (((x2361) * (x2361)) / ((x2362) * (x2362)) + 1.0));
  x1114 = 4.27e+46 * x1114 * x2363 * x788;
  const amrex::Real x10273 = sc[20] * x10269 * x1114;
  x123 = 3.4278694009181206e-79 *
         exp(
           M_LN10 * (0.43429448190325198 * x123 /
                     (((x2361) * (x2361)) / ((x2362) * (x2362)) + 1.0))) /
         ((x119 + 5.85480093676815e-40) * (x119 + 5.85480093676815e-40));
  x2361 = -3130.0076613053543 * invT - 9.67 * tc[0];
  x2362 = exp(g_RT[15] - 2.0 * g_RT[8] + x2361);
  amrex::Real x10286 = 8.3490566037735897e+27 * x40 *
                       exp(-2818.0133285064344 * invT - 8.7 * tc[0]);
  amrex::Real x10287 = log(
    0.4675 * exp(-0.0066225165562913899 * tc[1]) +
    0.5325 * exp(-0.00096339113680154098 * tc[1]) + exp(-4970.0 * invT));
  amrex::Real x10288 =
    -0.29097730287517898 * x10287 + 0.43429448190325198 * log(x10286) - 0.4;
  amrex::Real x10292 =
    1.7777777777777777 * ((x10288) * (x10288)) /
      ((-0.73540532268950665 * x10287 - 0.18666666666666668 * x10288 + 1) *
       (-0.73540532268950665 * x10287 - 0.18666666666666668 * x10288 + 1)) +
    1.0;
  const amrex::Real x10295 =
    exp(M_LN10 * (0.43429448190325198 * x10287 / x10292)) / (x10286 + 1.0);
  const amrex::Real x10297 = x10295 * x1539 * x2362;
  x10286 = exp(M_LN10 * (0.43429448190325198 * x10287 / x10292)) /
           ((x10286 + 1.0) * (x10286 + 1.0));
  amrex::Real x10299 = -5948.0209898117882 * invT - 18.37 * tc[0];
  const amrex::Real x10301 =
    sc[15] * x10286 * x788 * exp(g_RT[15] - 2.0 * g_RT[8] + x10299);
  const amrex::Real x10305 = ((sc[8]) * (sc[8])) * x10295 * exp(x2361);
  x119 = 4.27e+46 * x119 * x233 * x2363;
  const amrex::Real x10308 = sc[8] * x10269 * x119;
  const amrex::Real x10311 = ((sc[8]) * (sc[8])) * x10286 * x40 * exp(x10299);
  amrex::Real x10314 = ((x2369) * (x2369)) / ((x2370) * (x2370) * (x2370));
  x371 = x371 / ((((x2369) * (x2369)) / ((x2370) * (x2370)) + 1.0) *
                 (((x2369) * (x2369)) / ((x2370) * (x2370)) + 1.0));
  amrex::Real x10317 =
    x371 * (0.56 * x10314 * x691 + 4.0 * x2369 * x691 / ((x2370) * (x2370)));
  x1229 = 2.2e+36 * x1229 * x2371 * x788;
  const amrex::Real x10323 = x10255 * x435 * x702;
  const amrex::Real x10326 = x2371 * x435 * x715;
  const amrex::Real x10329 =
    1.7777777777777777 * x10288 /
    ((-0.73540532268950665 * x10287 - 0.18666666666666668 * x10288 + 1) *
     (-0.73540532268950665 * x10287 - 0.18666666666666668 * x10288 + 1));
  x10288 = 2.3703703703703702 * ((x10288) * (x10288)) /
           ((-0.73540532269 * x10287 - 0.18666666666666668 * x10288 + 1) *
            (-0.73540532269 * x10287 - 0.18666666666666668 * x10288 + 1) *
            (-0.73540532269 * x10287 - 0.18666666666666668 * x10288 + 1));
  amrex::Real x10331 = 0.56 * x10288 * x691 + 4.0 * x10329 * x691;
  const amrex::Real x10333 = 3.54e+38 * x10295 * x2362 * x788;
  const amrex::Real x10335 = sc[15] * x10287 / ((x10292) * (x10292));
  x10287 = x10287 * x40 / ((x10292) * (x10292));
  x367 = 2.2e+36 * x2371 * x367 * x435;
  x10292 = 2.2e+43 * refC *
           exp(
             -g_RT[13] + g_RT[19] - g_RT[8] - 17979.931469202598 * invT -
             11.82 * tc[0]);
  const amrex::Real x10347 =
    2.2e+43 * sc[13] * exp(-17979.931469202598 * invT - 11.82 * tc[0]);
  const amrex::Real x10349 = sc[19] * x10292 - sc[8] * x10347;
  x1705 =
    -sc[18] * x10317 * x1229 + sc[8] * x10317 * x367 + sc[8] * x1079 * x1705 -
    5.3777777777777799e+65 * x10255 * x1570 - 8.54e+46 * x10259 -
    x10268 * x10273 + x10268 * x10308 + 3.54e+38 * x10287 * x10305 * x10331 +
    7.08e+38 * x10297 - 5.9111320754717004e+66 * x10301 - 7.08e+38 * x10305 +
    5.9111320754717004e+66 * x10311 + 5.3777777777777799e+65 * x10323 -
    4.4e+36 * x10326 - x10331 * x10333 * x10335 + x10349 -
    8.192e+20 * x1091 * x266 - 6400000000000000.0 * x1186 -
    1.458632e+86 * x123 * x1477 + 1.458632e+86 * x123 * x233 * x736 +
    8.192e+20 * x1446 * x266 + 8.54e+46 * x1474 * x2363 +
    4.4e+36 * x1568 * x2371 - x1705 * x2110 * x645 + 6400000000000000.0 * x966;
  const amrex::Real x10372 =
    16040000.0 * sc[2] * x1561 - 16040000.0 * sc[2] * x494 +
    24000000.0 * sc[6] * x1561 - 24000000.0 * sc[6] * x494 + x1064 * x2358 -
    x2358 * x969;
  amrex::Real x10375 =
    0.28 * x10314 * x691 + 2.0 * x2369 * x691 / ((x2370) * (x2370));
  const amrex::Real x10376 = sc[8] * x367 * x371;
  const amrex::Real x10378 = x123 * x233 * x736;
  const amrex::Real x10380 = 0.28 * x10265 * x691 + 2.0 * x10267;
  x371 = sc[18] * x1229 * x371;
  amrex::Real x10396 = 0.28 * x10288 * x691 + 2.0 * x10329 * x691;
  const amrex::Real x10398 =
    sc[1] * x2108 * x645 - 2.6888888888888899e+65 * x10255 * x1570 -
    x10273 * x10380 + 3.54e+38 * x10287 * x10305 * x10396 + 3.54e+38 * x10297 -
    2.9555660377358502e+66 * x10301 - 3.54e+38 * x10305 + x10308 * x10380 +
    2.9555660377358502e+66 * x10311 + 2.6888888888888899e+65 * x10323 -
    x10333 * x10335 * x10396 + x10375 * x10376 - x10375 * x371 +
    7.29316e+85 * x10378 - x1058 * x5517 - 4.096e+20 * x1091 * x266 -
    3200000000000000.0 * x1186 - 7.29316e+85 * x123 * x1477 +
    4.096e+20 * x1446 * x266 + 4.27e+46 * x1474 * x2363 +
    2.2e+36 * x1568 * x2371 - 4.27e+46 * x233 * x2363 * x748 -
    2.2e+36 * x2371 * x435 * x715 + x5517 * x5518;
  const amrex::Real x10400 = x10349 + x10398 + x5510;
  const amrex::Real x10424 =
    16040000.0 * sc[2] * x1660 - 16040000.0 * sc[2] * x1726 +
    24000000.0 * sc[6] * x1660 - 24000000.0 * sc[6] * x1726 + x1640 * x2358 -
    x2358 * x718 + 16040000.0 * x324;
  const amrex::Real x10446 =
    16040000.0 * sc[2] * x1757 - 16040000.0 * sc[2] * x1759 +
    24000000.0 * sc[6] * x1757 - 24000000.0 * sc[6] * x1759 - x1661 * x2358 +
    x1662 * x2358;
  const amrex::Real x10469 =
    16040000.0 * sc[2] * x1790 - 16040000.0 * sc[2] * x1824 +
    24000000.0 * sc[6] * x1790 - 24000000.0 * sc[6] * x1824 -
    24000000.0 * sc[8] * x1325 * x1833 - x1687 * x2358 + x2358 * x345;
  const amrex::Real x10471 =
    1.68 * x10314 * x691 + 12.0 * x2369 * x691 / ((x2370) * (x2370));
  const amrex::Real x10476 = 1.68 * x10265 * x691 + 12.0 * x10267;
  const amrex::Real x10509 =
    16040000.0 * sc[2] * x1829 - 16040000.0 * sc[2] * x1860 +
    24000000.0 * sc[6] * x1829 - 24000000.0 * sc[6] * x1860 - x1669 * x2358 +
    x1751 * x2358;
  const amrex::Real x10532 =
    16040000.0 * sc[2] * x1881 - 16040000.0 * sc[2] * x1885 +
    24000000.0 * sc[6] * x1881 - 24000000.0 * sc[6] * x1885 - x1760 * x2358 +
    x1762 * x2358 + 24000000.0 * x324;
  const amrex::Real x10555 =
    16040000.0 * sc[2] * x1911 - 16040000.0 * sc[2] * x1951 +
    24000000.0 * sc[6] * x1911 - 24000000.0 * sc[6] * x1951 - x1768 * x2358 +
    x1769 * x2358;
  const amrex::Real x10559 =
    -11000000.0 * sc[8] * x1989 + x10349 + x1989 * x2183;
  const amrex::Real x10563 =
    3.9e+26 * exp(
                g_RT[19] + g_RT[8] - g_RT_qss[6] - g_RT_qss[7] -
                9937.0194996457994 * invT - 5.22 * tc[0]);
  const amrex::Real x10566 =
    2.2e-6 * exp(-2855.7545784417798 * invT + 3.5 * tc[0]);
  x16 = sc[0] + sc[10] + sc[11] + sc[13] + sc[14] + sc[15] + sc[21] + sc[3] +
        sc[5] + sc[9] + x16;
  const amrex::Real x10594 =
    6.14 * exp(-5258.61415765932 * invT + 1.74 * tc[0]);
  const amrex::Real x10599 =
    0.227 * exp(-4629.5933254034198 * invT + 2.0 * tc[0]);
  const amrex::Real x10603 = -sc[14] * x10599 - sc[14] * x6237 -
                             330000.0 * sc[14] * exp(-3874.76832669634 * invT) +
                             x110 * x447 + x1779 * x2329 - x1784 * x2329;
  const amrex::Real x10604 =
    0.00332 * exp(-2948.8496616156599 * invT + 2.81 * tc[0]);
  const amrex::Real x10608 =
    -sc[12] * x10604 - 16040000.0 * sc[12] * x1293 +
    16040000.0 * sc[2] * x1954 - 16040000.0 * sc[2] * x1957 -
    24000000.0 * sc[4] * x1325 * x1833 + 24000000.0 * sc[6] * x1954 -
    24000000.0 * sc[6] * x1957 - x1775 * x2358 + x1776 * x2358;
  const amrex::Real x10610 = -7.8e+41 * refCinv * sc[10] *
                               exp(
                                 g_RT[10] + g_RT[8] - g_RT_qss[8] -
                                 23600.8616262414 * invT - 9.147 * tc[0]) -
                             48000000.0 * sc[10] * x1142 - sc[10] * x6230 -
                             sc[10] * x9305 + x1197 * x714;
  x86 =
    2.2e-6 *
    exp(g_RT[19] - g_RT[20] - 2855.7545784417798 * invT + 3.5 * tc[0] - x86);
  const amrex::Real x10642 =
    16040000.0 * sc[2] * x1960 - 16040000.0 * sc[2] * x1966 +
    24000000.0 * sc[6] * x1960 - 24000000.0 * sc[6] * x1966 - x1778 * x2358 +
    x1780 * x2358 + x388 * x435;
  const amrex::Real x10646 =
    50000000.0 * exp(g_RT[10] + g_RT[14] - g_RT[16] - g_RT[8]);
  const amrex::Real x10653 =
    0.42 * x10314 * x691 + 3.0 * x2369 * x691 / ((x2370) * (x2370));
  const amrex::Real x10667 = 0.42 * x10265 * x691 + 3.0 * x10267;
  const amrex::Real x10690 =
    16040000.0 * sc[2] * x1971 - 16040000.0 * sc[2] * x1973 +
    24000000.0 * sc[6] * x1971 - 24000000.0 * sc[6] * x1973 + x1678 * x2358 -
    x1797 * x2358;
  x6230 = -7.8e+41 * refCinv * sc[8] *
            exp(
              g_RT[10] + g_RT[8] - g_RT_qss[8] - 23600.8616262414 * invT -
              9.147 * tc[0]) +
          48000000.0 * sc[2] * x1836 - 48000000.0 * sc[2] * x1841 -
          48000000.0 * sc[8] * x1142 - sc[8] * x6230 - sc[8] * x9305 +
          x436 * x714;
  const amrex::Real x10713 =
    -16040000.0 * sc[2] * x1983 + 16040000.0 * sc[2] * x926 -
    24000000.0 * sc[6] * x1983 + 24000000.0 * sc[6] * x926 + x1663 * x2358 -
    x1750 * x2358;
  const amrex::Real x10738 =
    16040000.0 * sc[2] * x1984 - 16040000.0 * sc[2] * x652 - sc[8] * x10604 -
    16040000.0 * sc[8] * x1293 - x1761 * x2358 + x1765 * x2358;
  const amrex::Real x10739 =
    2.2e+43 * sc[8] * x16 * exp(-17979.931469202598 * invT - 11.82 * tc[0]);
  const amrex::Real x10762 =
    16040000.0 * sc[2] * x1996 - 16040000.0 * sc[2] * x1998 +
    24000000.0 * sc[6] * x1996 - 24000000.0 * sc[6] * x1998 - x1830 * x2358 +
    x1831 * x2358;
  x2369 = 0.84 * x10314 * x691 + 6.0 * x2369 * x691 / ((x2370) * (x2370));
  x2370 = x10269 * (0.84 * x10265 * x691 + 6.0 * x10267);
  x2177 =
    90000000.0 * sc[1] * x791 - sc[20] * x1114 * x2370 + sc[8] * x119 * x2370 -
    8.0666666666666698e+65 * x10255 * x1570 - 1.281e+47 * x10259 +
    3.54e+38 * x10287 * x10305 * (0.84 * x10288 * x691 + 6.0 * x10329 * x691) +
    1.062e+39 * x10297 - 8.8666981132075502e+66 * x10301 - 1.062e+39 * x10305 +
    8.8666981132075502e+66 * x10311 + 8.0666666666666698e+65 * x10323 -
    6.6e+36 * x10326 -
    x10333 * x10335 * (0.84 * x10288 * x691 + 6.0 * x10329 * x691) +
    x10376 * x2369 + 2.187948e+86 * x10378 - x1058 * x2177 -
    1.2288e+21 * x1091 * x266 - 9600000000000000.0 * x1186 -
    2.187948e+86 * x123 * x1477 + x1386 * x2272 + x1386 * x872 +
    1.2288e+21 * x1446 * x266 + 1.281e+47 * x1474 * x2363 +
    6.6e+36 * x1568 * x2371 + x2177 * x5518 - x2369 * x371 +
    9600000000000000.0 * x966;
  x10265 = -30000000.0 * sc[1] * x1901 * x83 + 392000.0 * sc[8] * x1901 +
           x1901 * x2043 + x1901 * x2364 + x1998 * x2148 - x1998 * x359 +
           x1998 * x699;
  x10267 = -16040000.0 * sc[2] * x1998 + 16040000.0 * sc[2] * x909 -
           24000000.0 * sc[6] * x1998 + 24000000.0 * sc[6] * x909 -
           x1834 * x2358 + x1835 * x2358;
  x10269 = -sc[8] * x10599 - sc[8] * x6237 -
           330000.0 * sc[8] * exp(-3874.76832669634 * invT) + x110 * x553 -
           x1901 * x2329 + x2329 * x566;
  x10314 = 16040000.0 * sc[2] * x1059 - 16040000.0 * sc[2] * x600 +
           24000000.0 * sc[6] * x1059 - 24000000.0 * sc[6] * x600 -
           x1838 * x2358 + x1842 * x2358;
  const amrex::Real x10847 =
    -16040000.0 * sc[2] * x1364 - 24000000.0 * sc[6] * x1364 - x1843 * x2358;
  const amrex::Real x10848 =
    16040000.0 * sc[2] * x1789 + 24000000.0 * sc[6] * x1789 + x10847;
  const amrex::Real x10855 =
    90000000.0 * sc[1] * x1905 + 392000.0 * sc[8] * x1845 + x10398 + x10559 +
    x1364 * x2148 - x1364 * x359 + x1364 * x699 + x1845 * x2043 +
    x1845 * x2364 + x1905 * x714 - x529 + x7694 + x9285;
  const amrex::Real x10859 = -x1364 * x1808;
  const amrex::Real x10863 =
    8480000.0 * sc[8] * x1843 + x1549 * x1843 + x1843 * x2090 + x1843 * x2253;
  const amrex::Real x10864 = x10859 + x10863 + x1789 * x1808 - x1789 * x2148 +
                             x1789 * x359 - x1789 * x699;
  const amrex::Real x10871 = refC * x1989 * x92 - x1845 * x2329;
  const amrex::Real x10873 = 32000000.0 * sc[1] * x1893 + x10871 +
                             x1681 * x2091 - x1681 * x2365 - x1681 * x2366 +
                             x5510;
  const amrex::Real x10886 =
    30000000.0 * sc[8] * x1080 + 40000000.0 * sc[8] * x1083 +
    392000.0 * sc[8] * x1845 + x10398 + x10559 - x1083 * x2110 - x1083 * x2360 +
    x1364 * x2148 - x1364 * x359 + x1364 * x699 + x1845 * x2043 +
    x1845 * x2364 - x529 + x7694 + x9285;
  const amrex::Real x10887 = 32000000.0 * sc[1] * x1893 + x1681 * x2091 -
                             x1681 * x2365 - x1681 * x2366 + x1955 + x2080 +
                             x5510 + x9721;
  const amrex::Real x10917 =
    -16040000.0 * sc[2] * x1364 + 16040000.0 * sc[2] * x1959 -
    24000000.0 * sc[6] * x1364 + 24000000.0 * sc[6] * x1959 - x1825 * x2358 +
    x1827 * x2358;
  x1537 = sc[9] * x1537 * x1638 - 4.954e+21 * x1052 * x356 +
          9.6622503937007901e+32 * x1416 * x273 -
          2.477e+21 * x1537 * x1595 * x40 + 4.954e+21 * x1595 -
          9.6622503937007901e+32 * x273 * x648;
  x5501 = -2.477e+21 * x1052 * x356 + x1328 * x5501 +
          4.83112519685039e+32 * x1416 * x273 + 2.477e+21 * x1595 -
          4.83112519685039e+32 * x273 * x648 - x5501 * x5502;
  const amrex::Real x10966 = -x2097 * x411 - x411 * x728 + x5501;
  const amrex::Real x10994 = 7.431e+21 * sc[1] * sc[8] * x356 * exp(x252) -
                             7.431e+21 * x1052 * x356 +
                             x1328 * (0.84 * x378 * x691 + 6.0 * x537 * x691) +
                             1.4493375590551199e+33 * x1416 * x273 -
                             1.4493375590551199e+33 * x273 * x648 -
                             x5502 * (0.84 * x378 * x691 + 6.0 * x537 * x691);
  const amrex::Real x11006 = 11000000.0 * sc[8] * x1989 + x10966 +
                             x1364 * x1808 + x1843 * x2358 + x1845 * x2329;
  const amrex::Real x11007 = -392000.0 * sc[8] * x1845;
  const amrex::Real x11008 = -8480000.0 * sc[8] * x1843;
  const amrex::Real x11015 =
    60000000.0 * sc[9] * x1080 + x1083 * x57 + x153 * x1681;
  const amrex::Real x11027 =
    3400000.0 * sc[11] * exp(-347.21949940525701 * invT);
  amrex::Real x11031 = -0.29097730287517898 * x835 +
                       0.43429448190325198 * log(538000000.0 * x831) - 0.4;
  amrex::Real x11033 = -0.14 * x11031 - 0.55155399201712996 * x835 + 0.75;
  amrex::Real x11038 =
    exp(
      M_LN10 * (0.43429448190325198 * x835 /
                (((x11031) * (x11031)) / ((x11033) * (x11033)) + 1.0))) /
    (538000000.0 * x831 + 1.0);
  const amrex::Real x11039 = 2.69e+16 * sc[10] * x11038 * x831;
  amrex::Real x11069 = ((x11031) * (x11031)) / ((x11033) * (x11033) * (x11033));
  const amrex::Real x11070 =
    4.0 * x11031 * x691 / ((x11033) * (x11033)) + 0.56 * x11069 * x691;
  amrex::Real x11071 =
    x835 / ((((x11031) * (x11031)) / ((x11033) * (x11033)) + 1.0) *
            (((x11031) * (x11031)) / ((x11033) * (x11033)) + 1.0));
  const amrex::Real x11073 = 2.69e+16 * x11038 * x518 * x831;
  const amrex::Real x11075 = sc[10] * x11071 * x11073;
  x831 = 3.4548997388095799e-18 *
         exp(
           M_LN10 * (0.43429448190325198 * x835 /
                     (((x11031) * (x11031)) / ((x11033) * (x11033)) + 1.0))) /
         ((x831 + 1.8587360594795538e-9) * (x831 + 1.8587360594795538e-9));
  x835 = x1047 * x518 * x831;
  const amrex::Real x11082 = 2.69e+16 * x11038 * x1401 * x788;
  const amrex::Real x11084 = sc[16] * x11071 * x11082;
  const amrex::Real x11087 = refC * sc[16] * x11038 * x1401;
  const amrex::Real x11089 = x789 / ((x240 + 1.0) * (x240 + 1.0));
  const amrex::Real x11092 =
    sc[10] * x40 * x645 * exp(-4871.1373249896797 * invT - 10.72 * tc[0]);
  const amrex::Real x11095 =
    sc[17] * x788 * exp(-4871.1373249896797 * invT - 10.72 * tc[0] + x1434);
  amrex::Real x11100 = x489 / ((x782) * (x782));
  amrex::Real x11101 = ((x489) * (x489)) / ((x782) * (x782) * (x782));
  x245 = x245 / ((((x489) * (x489)) / ((x782) * (x782)) + 1.0) *
                 (((x489) * (x489)) / ((x782) * (x782)) + 1.0));
  x489 = sc[10] * x645 * x789 * exp(x771) / (x240 + 1.0);
  x782 =
    2.69e+21 * x245 * x40 * x489 * (4.0 * x11100 * x691 + 0.56 * x11101 * x691);
  x1434 = x789 * exp(x1434 + x771) / (x240 + 1.0);
  x771 = 2.69e+21 * sc[17] * x1434 * x245 * x788 *
         (4.0 * x11100 * x691 + 0.56 * x11101 * x691);
  x240 = refC * sc[17] * x1434;
  x1042 = x1042 * x11038 * x518;
  x789 = -5.38e+16 * x1042 + x11070 * x11075 - x11070 * x11084 +
         5.38e+16 * x11087 + 1.7866913580246899e+37 * x11089 * x11092 -
         1.7866913580246899e+37 * x11089 * x11095 - 2.89444e+25 * x1513 * x831 +
         5.38e+21 * x240 - 5.38e+21 * x489 - 1204.0 * x7349 + 1204.0 * x7352 -
         x771 + x782 + 2.89444e+25 * x835;
  amrex::Real x11153 =
    0.28 * ((x11031) * (x11031)) * x691 / ((x11033) * (x11033) * (x11033)) +
    2.0 * x11031 * x691 / ((x11033) * (x11033));
  const amrex::Real x11159 = 2.69e+21 * x245 * x40 * x489;
  x245 = 2.69e+21 * sc[17] * x1434 * x245 * x788;
  const amrex::Real x11168 =
    -2.69e+16 * x1042 + x11075 * x11153 - x11084 * x11153 + 2.69e+16 * x11087 +
    8.9334567901234601e+36 * x11089 * x11092 -
    8.9334567901234601e+36 * x11089 * x11095 +
    x11159 * (2.0 * x11100 * x691 + 0.28 * x11101 * x691) -
    1.44722e+25 * x1513 * x831 + 2.69e+21 * x240 -
    x245 * (2.0 * x11100 * x691 + 0.28 * x11101 * x691) - 2.69e+21 * x489 +
    1.44722e+25 * x835;
  const amrex::Real x11169 = x11168 - 602.0 * x7349 + 602.0 * x7352;
  const amrex::Real x11231 =
    -14000000.0 * sc[11] * x1517 + 14000000.0 * sc[11] * x854 +
    18000.0 * sc[3] * x1708 - 18000.0 * x1209 - 18000.0 * x778;
  const amrex::Real x11260 =
    -18000.0 * sc[10] * x1178 * x1833 + 14000000.0 * sc[11] * x1519 -
    14000000.0 * sc[11] * x1521 + 18000.0 * sc[3] * x1745;
  const amrex::Real x11265 =
    12.0 * x11031 * x691 / ((x11033) * (x11033)) + 1.68 * x11069 * x691;
  const amrex::Real x11269 = 12.0 * x11100 * x691 + 1.68 * x11101 * x691;
  const amrex::Real x11365 =
    100000000.0 * sc[2] * x411 + 18000.0 * sc[3] * x1905 + x11169;
  x11071 = x11071 *
           (3.0 * x11031 * x691 / ((x11033) * (x11033)) + 0.42 * x11069 * x691);
  const amrex::Real x11447 = 3.0 * x11100 * x691 + 0.42 * x11101 * x691;
  const amrex::Real x11449 = exp(2.0 * g_RT[10] + g_RT[13] - 2.0 * g_RT[16]);
  const amrex::Real x11486 =
    14000000.0 * sc[11] * x1584 - 14000000.0 * sc[11] * x1586 -
    18000.0 * sc[12] * x1178 * x66 - 14000000.0 * sc[12] * x1358 +
    18000.0 * sc[3] * x436;
  x11031 = 6.0 * x11031 * x691 / ((x11033) * (x11033)) + 0.84 * x11069 * x691;
  x11033 = 6.0 * x11100 * x691 + 0.84 * x11101 * x691;
  x11069 = 8.07e+16 * refC * sc[16] * x11038 * x1401 + 18000.0 * sc[3] * x791 -
           8.07e+16 * x1042 + x11031 * x11075 - x11031 * x11084 +
           x11033 * x11159 - x11033 * x245 +
           2.6800370370370399e+37 * x11089 * x11092 -
           2.6800370370370399e+37 * x11089 * x11095 -
           4.34166e+25 * x1513 * x831 + 8.07e+21 * x240 - 8.07e+21 * x489 -
           1806.0 * x7349 + 1806.0 * x7352 + 4.34166e+25 * x835;
  const amrex::Real x11680 = -14000000.0 * sc[11] * x1681;
  const amrex::Real x11684 = -60000000.0 * sc[19] * x1843;
  const amrex::Real x11693 = x1364 * x637 - 10.0 * x1843 * x744 -
                             10.0 * x1843 * x757 + x1843 * x908 + x1845 * x747 +
                             x1845 * x816;
  const amrex::Real x11694 =
    -40000000.0 * sc[3] * x1681 + x11684 + x11693 + x1264 + x1681 * x231;
  const amrex::Real x11708 = -50000000.0 * sc[16] * x1080;
  const amrex::Real x11717 = -30000000.0 * sc[16] * x1083 - x1080 * x11027 +
                             x1080 * x11039 + x1083 * x2191 + x1083 * x732 +
                             x1083 * x814;
  const amrex::Real x11801 = 602.0 * x7349 - 602.0 * x7352;
  const amrex::Real x11803 = 10000000.0 * sc[3] * x411 + x11801;
  const amrex::Real x11807 =
    14000000.0 * sc[11] * x1681 + x11803 - x1843 * x908;
  const amrex::Real x11808 =
    x1080 * x11027 + x1083 * x1557 + x1083 * x2123 - x1083 * x925;
  const amrex::Real x11810 =
    2700000000000.0 * sc[1] * x1410 +
    x1022 * (0.56 * x1437 * x691 + 4.0 * x686 * x691) +
    3.3440366972477102e+18 * x1251 * x934 - 2700000000000.0 * x1509 * x1564 -
    1.014e+16 * x1564 * x703 + 1.19557674418605e+30 * x424 * x635 -
    1.19557674418605e+30 * x424 * x737 + x707 * (0.56 * x144 + 4.0 * x693) -
    x729 * (0.56 * x144 + 4.0 * x693) + 1.014e+16 * x740 -
    x837 * (0.56 * x1437 * x691 + 4.0 * x686 * x691) -
    3.3440366972477102e+18 * x934 * x965;
  const amrex::Real x11811 =
    5070000000000000.0 * sc[0] * sc[10] * x723 +
    1350000000000.0 * sc[1] * x1410 + x1022 * x5527 +
    1.67201834862385e+18 * x1251 * x934 - 1350000000000.0 * x1509 * x1564 -
    5070000000000000.0 * x1564 * x703 + 5.9778837209302301e+29 * x424 * x635 -
    5.9778837209302301e+29 * x424 * x737 - x5527 * x837 +
    x707 * (0.28 * x144 + 2.0 * x693) - x729 * (0.28 * x144 + 2.0 * x693) -
    1.67201834862385e+18 * x934 * x965;
  const amrex::Real x11818 =
    20000000.0 * sc[1] * x1386 + 4050000000000.0 * sc[1] * x1410 +
    5000000.0 * sc[4] * x1386 +
    x1022 * (0.84 * x1437 * x691 + 6.0 * x686 * x691) +
    5.0160550458715597e+18 * x1251 * x934 - 4050000000000.0 * x1509 * x1564 -
    1.521e+16 * x1564 * x703 + 1.79336511627907e+30 * x424 * x635 -
    1.79336511627907e+30 * x424 * x737 + x707 * (0.84 * x144 + 6.0 * x693) -
    x729 * (0.84 * x144 + 6.0 * x693) + 1.521e+16 * x740 -
    x837 * (0.84 * x1437 * x691 + 6.0 * x686 * x691) -
    5.0160550458715597e+18 * x934 * x965;
  const amrex::Real x11821 =
    20000000.0 * sc[1] * x1893 + 96000000.0 * sc[2] * x1989 +
    24000000.0 * sc[6] * x1989 + x11811 + x1364 * x2271 - x1845 * x373 + x9287;
  const amrex::Real x11824 =
    x11821 - x1789 * x2271 - x1843 * x2082 + x1843 * x694;
  const amrex::Real x11826 =
    -20000000.0 * sc[6] * x1083 + x1080 * x508 + x1083 * x2258 + x137;
  const amrex::Real x11829 = -24481.490791399599 * invT - 0.76 * tc[0];
  const amrex::Real x11831 = x22 * x607 * exp(x11829 + x23) / ((x24) * (x24));
  const amrex::Real x11834 = sc[13] * exp(x994) / x24;
  const amrex::Real x11836 = sc[13] * x22 * exp(x11829) / ((x24) * (x24));
  const amrex::Real x11838 = x607 * exp(x23 + x994) / x24;
  const amrex::Real x11839 = x10349 - 15006.25 * x11831 -
                             4900000000.0 * x11834 + 15006.25 * x11836 +
                             4900000000.0 * x11838;
  const amrex::Real x11841 = x10349 - 7503.125 * x11831 -
                             2450000000.0 * x11834 + 7503.125 * x11836 +
                             2450000000.0 * x11838;
  const amrex::Real x11845 =
    100000000.0 * sc[1] * x411 + x1001 * x411 + x11841 + x1970;
  const amrex::Real x11848 = -30000000.0 * sc[1] * x1901 + x10349 + x1128 -
                             18757.8125 * x11831 - 6125000000.0 * x11834 +
                             18757.8125 * x11836 + 6125000000.0 * x11838 -
                             x1901 * x747;
  const amrex::Real x11850 =
    -30000000.0 * sc[1] * x1845 + 10.0 * x1843 * x744 - x1845 * x747;
  x1793 = -1.4e+45 * sc[14] * x1388 + 2.8e+18 * sc[1] * x762 -
          x1076 * x43 * (0.56 * x671 * x691 + 4.0 * x672 * x691) +
          6.4473684210526297e+29 * x1135 * x286 + 1.4e+45 * x1210 -
          1.225e+77 * x1329 * x33 + 1.225e+77 * x1329 * x427 -
          2.8e+18 * x1468 * x382 - 6.4473684210526297e+29 * x1753 * x286 +
          x320 * (0.56 * x671 * x691 + 4.0 * x672 * x691) -
          x795 * (4.0 * x1057 * x691 + 0.56 * x1793 * x691) +
          x900 * (4.0 * x1057 * x691 + 0.56 * x1793 * x691);
  x499 = 7.0e+44 * refCinv * sc[0] * x2046 * x607 +
         7.0e+44 * sc[14] * x1388 * x40 * x499 - 7.0e+44 * sc[14] * x1388 +
         1.4e+18 * sc[1] * x762 - x1076 * x499 +
         3.2236842105263198e+29 * x1135 * x286 - 6.125e+76 * x1329 * x33 +
         6.125e+76 * x1329 * x427 - 1.4e+18 * x1468 * x382 -
         3.2236842105263198e+29 * x1753 * x286 - x5532 * x795 + x5532 * x900;
  x1057 = x2047 * x411 + x411 * x728 + x499;
  x946 = -2.1e+45 * sc[14] * x1388 + 4.2e+18 * sc[1] * x762 -
         x1076 * x43 * (0.84 * x671 * x691 + 6.0 * x672 * x691) +
         9.6710526315789494e+29 * x1135 * x286 + 2.1e+45 * x1210 -
         1.8375e+77 * x1329 * x33 + 1.8375e+77 * x1329 * x427 -
         4.2e+18 * x1468 * x382 - 9.6710526315789494e+29 * x1753 * x286 +
         x320 * (0.84 * x671 * x691 + 6.0 * x672 * x691) - x795 * x946 +
         x900 * x946;
  const amrex::Real x11864 = -x1364 * x637 - x1845 * x2089;
  const amrex::Real x11878 = 1.77e+38 * x10295 * x2362 * x788;
  x826 = -1.77e+38 * x10287 * x10305 * x10331 - 3.54e+38 * x10297 +
         2.9555660377358502e+66 * x10301 + 3.54e+38 * x10305 -
         2.9555660377358502e+66 * x10311 + x10331 * x10335 * x11878 +
         3.98e+29 * x1206 - 3.98e+29 * x1539 * x858 +
         x172 * (4.0 * x691 * x826 + 0.56 * x691 * x857) -
         x318 * (4.0 * x691 * x826 + 0.56 * x691 * x857) -
         1.5201919385796501e+47 * x601 + 1.5201919385796501e+47 * x914;
  x857 =
    1.47778301886792e+66 * sc[15] * x10286 * x788 *
      exp(g_RT[15] - 2.0 * g_RT[8] + x10299) -
    1.47778301886792e+66 * ((sc[8]) * (sc[8])) * x10286 * x40 * exp(x10299) -
    1.77e+38 * x10287 * x10305 * x10396 - 1.77e+38 * x10297 +
    1.77e+38 * x10305 + x10335 * x10396 * x11878 + 1.99e+29 * x1206 + x1313 -
    1.99e+29 * x1539 * x858 + x172 * x5557 - x318 * x5557 - x5551;
  x588 =
    1.99e+29 * sc[15] * x588 * x788 * x858 +
    5.31e+38 * ((sc[8]) * (sc[8])) * x10295 * exp(x2361) -
    1.77e+38 * x10287 * x10305 * (0.84 * x10288 * x691 + 6.0 * x10329 * x691) -
    5.31e+38 * x10295 * x1539 * x2362 + 4.4333490566037699e+66 * x10301 -
    4.4333490566037699e+66 * x10311 +
    x10335 * x11878 * (0.84 * x10288 * x691 + 6.0 * x10329 * x691) +
    5.97e+29 * x1206 - 5.97e+29 * x1539 * x858 -
    1.99e+29 * x2139 * x324 * x588 * x773 - 2.2802879078694799e+47 * x601 +
    2.2802879078694799e+47 * x914;
  x10286 = -x1364 * x2142 - x1364 * x699 + x857;
  x10299 = 300000.0 * sc[6] * x1789 + x10149 + x10859 + x1789 * x1808 +
           x1789 * x2050 + x1789 * x2142 + x1789 * x2270 + x1789 * x2326 +
           x1789 * x699 + x1789 * x883 + x1978 + x8035 + x8728 + x9677;
  x10331 = 5.38e+16 * x1042 - x11070 * x11075 + x11070 * x11084 -
           5.38e+16 * x11087 + 2.89444e+25 * x1513 * x831 - 2.89444e+25 * x835;
  x10396 = 2.69e+16 * x1042 - x11075 * x11153 + x11084 * x11153 -
           2.69e+16 * x11087 + 1.44722e+25 * x1513 * x831 - 1.44722e+25 * x835;
  x1401 = -8.07e+16 * refC * sc[16] * x11038 * x1401 + 8.07e+16 * x1042 -
          x11031 * x11075 + x11031 * x11084 + 4.34166e+25 * x1513 * x831 -
          4.34166e+25 * x835;
  x11038 = 50000000.0 * sc[16] * x1080 + 30000000.0 * sc[16] * x1083 + x10396 -
           x1080 * x11039 - x1845 * x816;
  x11153 = -1.7866913580246899e+37 * x11089 * x11092 +
           1.7866913580246899e+37 * x11089 * x11095 - 5.38e+21 * x240 +
           5.38e+21 * x489 + x771 - x782;
  x11100 =
    -8.9334567901234601e+36 * x11089 * x11092 +
    8.9334567901234601e+36 * x11089 * x11095 -
    x11159 * (2.0 * x11100 * x691 + 0.28 * x11101 * x691) - 2.69e+21 * x240 +
    x245 * (2.0 * x11100 * x691 + 0.28 * x11101 * x691) + 2.69e+21 * x489;
  x11101 = 140000.0 * sc[3] * x1905 + x11100 + x1905 * x2060 + x1905 * x341 +
           x1905 * x888;
  x11031 = 20000000.0 * sc[1] * x173 * x2054 +
           20000000.0 * sc[2] * x173 * x2054 + 140000.0 * sc[3] * x173 +
           x11153 + x173 * x341;
  x11033 = 140000.0 * sc[3] * x791 - x11033 * x11159 + x11033 * x245 -
           2.6800370370370399e+37 * x11089 * x11092 +
           2.6800370370370399e+37 * x11089 * x11095 + x2060 * x791 -
           8.07e+21 * x240 + x341 * x791 + 8.07e+21 * x489 + x791 * x888;
  const amrex::Real x11908 = -x1080 * x508 - x1083 * x814;
  x964 = sc[18] * x10317 * x1229 - sc[8] * x10317 * x367 +
         5.3777777777777799e+65 * x10255 * x1570 -
         5.3777777777777799e+65 * x10323 + 4.4e+36 * x10326 +
         5.408e+47 * x1487 * x967 - 1.04e+28 * x1490 * x2140 -
         4.4e+36 * x1568 * x2371 - 5.408e+47 * x232 - x720 * x964 +
         1.04e+28 * x783 + x964 * x988;
  x715 = -5.2e+27 * refC * sc[18] * x1190 * x2140 +
         sc[18] * x1192 * x180 * x2140 - sc[1] * x176 * x180 +
         2.6888888888888899e+65 * x10255 * x1570 -
         2.6888888888888899e+65 * x10323 - x10375 * x10376 + x10375 * x371 +
         2.704e+47 * x1487 * x967 - 2.2e+36 * x1568 * x2371 - 2.704e+47 * x232 +
         2.2e+36 * x2371 * x435 * x715 + 5.2e+27 * x783;
  x774 = 8.0666666666666698e+65 * x10255 * x1570 -
         8.0666666666666698e+65 * x10323 + 6.6e+36 * x10326 - x10376 * x2369 +
         8.112e+47 * x1487 * x967 - 1.56e+28 * x1490 * x2140 -
         6.6e+36 * x1568 * x2371 - 8.112e+47 * x209 * x774 * x967 -
         x2127 * x720 + x2127 * x988 + x2146 * x791 + x2369 * x371 +
         1.56e+28 * x783;
  x2127 = -80200000.0 * sc[2] * x1364 - x1549 * x1843;
  x10317 = -sc[19] * x10292 + sc[8] * x10347;
  x10375 = 60000000.0 * sc[19] * x1843 + x10317 - x1845 * x2043 + x6093;
  x736 = 8.54e+46 * x10259 + x10268 * x10273 - x10268 * x10308 -
         1.7689e+88 * x1062 * x428 + 1.458632e+86 * x123 * x1477 -
         1.458632e+86 * x123 * x233 * x736 - 8.54e+46 * x1474 * x2363 +
         1.7689e+88 * x236 * x428 -
         x321 * (4.0 * x691 * x889 + 0.56 * x691 * x975) - 2.66e+48 * x583 +
         x589 * (4.0 * x691 * x889 + 0.56 * x691 * x975) + 2.66e+48 * x887;
  x10268 = x10273 * x10380 - x10308 * x10380 - 7.29316e+85 * x10378 -
           8.8445e+87 * x1062 * x428 + 7.29316e+85 * x123 * x1477 -
           4.27e+46 * x1474 * x2363 + 4.27e+46 * x233 * x2363 * x748 +
           8.8445e+87 * x236 * x428 -
           x321 * (2.0 * x691 * x889 + 0.28 * x691 * x975) - 1.33e+48 * x583 +
           x589 * (2.0 * x691 * x889 + 0.28 * x691 * x975) + 1.33e+48 * x887;
  x20 = 6.26e+26 * refC * x1989 * x20 * x2192 * exp(x524 + x543) +
        1800000.0 * sc[1] * x1989 + 90000.0 * sc[3] * x1989 +
        11000000.0 * sc[8] * x1989 + x9295;
  x524 = sc[20] * x1114 * x2370 - sc[8] * x119 * x2370 + 1.281e+47 * x10259 -
         2.187948e+86 * x10378 - 2.65335e+88 * x1062 * x428 +
         2.187948e+86 * x123 * x1477 - 1.281e+47 * x1474 * x2363 +
         2.65335e+88 * x236 * x428 -
         x321 * (6.0 * x691 * x889 + 0.84 * x691 * x975) - 3.99e+48 * x583 +
         x589 * (6.0 * x691 * x889 + 0.84 * x691 * x975) + 3.99e+48 * x887;
  x543 = x10268 + x1647 - x1845 * x2364 + x20;
  // Write the full Jacobian expression...
  J[0] = -180000.0 * refC * sc[0] * exp(-0.6 * tc[0] + x442) -
         550000000.0 * refC * sc[11] * exp(-2.0 * tc[0] + x442) -
         60000000.0 * refC * sc[5] * exp(-1.25 * tc[0] + x442) -
         1000000.0 * refC * x602 * exp(-tc[0] + x442) -
         7.0e+44 * refCinv * x2046 * x40 * x607 + 70000000.0 * sc[0] * x1014 -
         70000000.0 * sc[0] * x987 - 20000000.0 * sc[12] * x1383 -
         30000000.0 * sc[13] * x1124 - 32000000.0 * sc[13] * x1456 -
         2000000.0 * sc[14] * x1310 - 50000000.0 * sc[16] * x256 -
         20000000.0 * sc[17] * x666 - sc[19] * x261 +
         90000.0 * ((sc[1]) * (sc[1])) * exp(-0.6 * tc[0]) -
         30000000.0 * sc[1] * x1014 + 20000000.0 * sc[1] * x1887 +
         20000000.0 * sc[1] * x2054 * x657 + 1800000.0 * sc[1] * x520 +
         90000000.0 * sc[1] * x760 - 90000000.0 * sc[1] * x823 +
         2000000.0 * sc[1] * x927 - 2000000.0 * sc[1] * x956 +
         30000000.0 * sc[1] * x987 - 1800000.0 * sc[20] * x1277 - sc[2] * x878 -
         sc[3] * x866 - sc[6] * x277 - sc[8] * x75 - x1032 + x1462 +
         x1465 * x441 + x1465 * x662 - x1657 * x435 - x2024 * x827 +
         x2024 * x961 - x2029 * x233 - x2031 * x760 + x2031 * x823 +
         x2034 * x644 - x2034 * x855 - x2037 * x644 + x2037 * x855 -
         x2038 * x819 - x2047 * x819 - x2049 * x324 - x2050 * x927 +
         x2050 * x956 - x441 * x972 - x518 * x559 - 30000000.0 * x518 * x592 -
         70000000.0 * x597 - 60000000.0 * x607 * x8 -
         0.5 * x645 * exp(-3638.25649376812 * invT + 2.0 * tc[0]) -
         x662 * x972 + x767 +
         (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
          73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
          15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 +
          x2034 * x674 - x2037 * x674) *
           (-x1465 + x972) +
         (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
          73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
          15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 +
          x2038 * x658 + x2047 * x658) *
           (x644 - x855 + (x674) * (-x1465 + x972)) +
         (x2038 * x65 + x2047 * x65 - x2060 * x230) *
           (x760 - x823 + (-x680) * (-x1465 + x972) +
            (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
            (x682) *
              (x827 - x961 + (x677) * (-x1465 + x972) +
               (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
               (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                         (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
         (-1800000.0 * sc[1] * x555) *
           (x927 - x956 +
            (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
            (-x561) *
              (x827 - x961 + (x677) * (-x1465 + x972) +
               (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
               (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                         (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
         (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
          73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 +
          x2047 * x599 + x2050 * x603) *
           (-x1014 + x987 + (x675) * (-x1465 + x972) +
            (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
         (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
          x2050 * x561 - x2060 * x437) *
           (x827 - x961 + (x677) * (-x1465 + x972) +
            (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
            (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                      (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[23] =
    180000.0 * sc[0] * sc[1] * exp(-0.6 * tc[0]) - 70000000.0 * sc[0] * x1211 +
    70000000.0 * sc[0] * x1389 + 1100000000.0 * sc[11] * sc[1] * x879 +
    sc[12] * x856 + sc[14] * x268 + sc[15] * x868 + 50000000.0 * sc[17] * x768 +
    120000000.0 * sc[1] * sc[5] * exp(-1.25 * tc[0]) +
    90000000.0 * sc[1] * x1030 + 30000000.0 * sc[1] * x1211 +
    20000000.0 * sc[1] * x1370 - 30000000.0 * sc[1] * x1389 -
    90000000.0 * sc[1] * x1508 + 2000000.0 * sc[1] * x1561 -
    2000000.0 * sc[1] * x494 + 1800000.0 * sc[1] * x540 +
    2000000.0 * sc[1] * x602 * x874 + sc[4] * x862 + sc[5] * x247 +
    sc[6] * x46 + sc[7] * x806 + 70000000.0 * sc[8] * x1345 + sc[8] * x904 -
    x1030 * x2031 - x1064 * x2024 + x1200 * x2060 - 1800000.0 * x1284 -
    20000000.0 * x1387 + x1508 * x2031 - x1561 * x2050 - x1637 * x2038 -
    x1637 * x2047 - x1649 * x441 - x1649 * x662 + x1694 * x441 + x1694 * x662 +
    x2024 * x969 + x2032 * x645 + x2034 * x893 - x2034 * x899 - x2037 * x893 +
    x2037 * x899 + x2050 * x494 + 90000000.0 * x233 + 2000000.0 * x324 -
    20000000.0 * x473 - 1800000.0 * x478 + x487 + x56 + 30000000.0 * x597 +
    x775 + x785 + x825 + x921 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1649 - x1694) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[46] = -70000000.0 * sc[0] * x1419 + 70000000.0 * sc[0] * x1461 -
          sc[0] * x878 + 20000000.0 * sc[1] * x1075 * x2054 +
          1800000.0 * sc[1] * x1208 + 30000000.0 * sc[1] * x1419 -
          30000000.0 * sc[1] * x1461 + 90000000.0 * sc[1] * x1639 +
          73400000.0 * sc[1] * x1640 - 90000000.0 * sc[1] * x1643 +
          2000000.0 * sc[1] * x1660 + 20000000.0 * sc[1] * x1674 -
          2000000.0 * sc[1] * x1726 - 73400000.0 * sc[1] * x718 -
          x1639 * x2031 - x1640 * x2024 + x1643 * x2031 - x1660 * x2050 -
          x1709 * x2038 - x1709 * x2047 + x1726 * x2050 - x1772 * x441 -
          x1772 * x662 + x1785 * x441 + x1785 * x662 + x2024 * x718 +
          x2034 * x970 - x2034 * x973 - x2037 * x970 + x2037 * x973 + x56 +
          x921 + x997 +
          (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
           73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
           15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 +
           x2034 * x674 - x2037 * x674) *
            (x1772 - x1785) +
          (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
           73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
           15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 +
           x2038 * x658 + x2047 * x658) *
            (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x2038 * x65 + x2047 * x65 - x2060 * x230) *
            (x1639 - x1643 + (-x680) * (x1772 - x1785) +
             (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x682) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (-1800000.0 * sc[1] * x555) *
            (x1660 - x1726 +
             (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                        (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
             (-x561) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
           73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 +
           x2047 * x599 + x2050 * x603) *
            (x1419 - x1461 + (x675) * (x1772 - x1785) +
             (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
          (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 -
           x2031 * x682 + x2050 * x561 - x2060 * x437) *
            (x1640 - x718 + (x677) * (x1772 - x1785) +
             (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[69] = 70000000.0 * sc[0] * x1517 - 70000000.0 * sc[0] * x854 -
          sc[0] * x866 - 30000000.0 * sc[1] * x1517 +
          1800000.0 * sc[1] * x1658 - 73400000.0 * sc[1] * x1661 +
          73400000.0 * sc[1] * x1662 + 90000000.0 * sc[1] * x1673 -
          90000000.0 * sc[1] * x1685 + 2000000.0 * sc[1] * x1757 -
          2000000.0 * sc[1] * x1759 + 20000000.0 * sc[1] * x1766 +
          30000000.0 * sc[1] * x854 - 15000000.0 * sc[2] * x1517 +
          15000000.0 * sc[2] * x854 + x1661 * x2024 - x1662 * x2024 -
          x1673 * x2031 + x1685 * x2031 + x1708 * x2060 - x1744 * x2038 -
          x1744 * x2047 - x1757 * x2050 + x1759 * x2050 - x1822 * x441 -
          x1822 * x662 + x1852 * x441 + x1852 * x662 + x2034 * x977 -
          x2034 * x978 - x2037 * x977 + x2037 * x978 + x56 + x921 +
          (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
           73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
           15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 +
           x2034 * x674 - x2037 * x674) *
            (x1822 - x1852) +
          (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
           73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
           15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 +
           x2038 * x658 + x2047 * x658) *
            (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x2038 * x65 + x2047 * x65 - x2060 * x230) *
            (x1673 - x1685 + (-x680) * (x1822 - x1852) +
             (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x682) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (-1800000.0 * sc[1] * x555) *
            (x1757 - x1759 +
             (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                        (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
             (-x561) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
           73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 +
           x2047 * x599 + x2050 * x603) *
            (-x1517 + x854 + (x675) * (x1822 - x1852) +
             (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
          (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 -
           x2031 * x682 + x2050 * x561 - x2060 * x437) *
            (-x1661 + x1662 + (x677) * (x1822 - x1852) +
             (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[92] = -70000000.0 * sc[0] * x1519 + 70000000.0 * sc[0] * x1521 +
          30000000.0 * sc[1] * x1519 - 30000000.0 * sc[1] * x1521 -
          90000000.0 * sc[1] * x1680 - 73400000.0 * sc[1] * x1687 +
          90000000.0 * sc[1] * x1710 + 2000000.0 * sc[1] * x1790 +
          1800000.0 * sc[1] * x182 - 2000000.0 * sc[1] * x1824 +
          20000000.0 * sc[1] * x1889 + 73400000.0 * sc[1] * x345 +
          sc[1] * x862 + 15000000.0 * sc[2] * x1519 -
          15000000.0 * sc[2] * x1521 + x1680 * x2031 + x1687 * x2024 -
          x1710 * x2031 + x1745 * x2060 - x1774 * x2038 - x1774 * x2047 -
          x1790 * x2050 + x1824 * x2050 - x1875 * x441 - x1875 * x662 +
          x1903 * x441 + x1903 * x662 - x2024 * x345 + x2034 * x980 -
          x2034 * x981 - x2037 * x980 + x2037 * x981 + x56 - x626 + x921 +
          (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
           73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
           15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 +
           x2034 * x674 - x2037 * x674) *
            (x1875 - x1903) +
          (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
           73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
           15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 +
           x2038 * x658 + x2047 * x658) *
            (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x2038 * x65 + x2047 * x65 - x2060 * x230) *
            (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
             (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
             (x682) *
               (-x1687 + x345 + (x677) * (x1875 - x1903) +
                (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
                (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                          (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
          (-1800000.0 * sc[1] * x555) *
            (x1790 - x1824 +
             (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                        (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
             (-x561) *
               (-x1687 + x345 + (x677) * (x1875 - x1903) +
                (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
                (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                          (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
          (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
           73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 +
           x2047 * x599 + x2050 * x603) *
            (x1519 - x1521 + (x675) * (x1875 - x1903) +
             (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
          (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 -
           x2031 * x682 + x2050 * x561 - x2060 * x437) *
            (-x1687 + x345 + (x677) * (x1875 - x1903) +
             (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
             (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[115] =
    -60000000.0 * refC * sc[0] * exp(-1.25 * tc[0] + x442) -
    70000000.0 * sc[0] * x1523 + 70000000.0 * sc[0] * x1533 +
    4.2e+45 * sc[14] * x1388 +
    60000000.0 * ((sc[1]) * (sc[1])) * exp(-1.25 * tc[0]) +
    30000000.0 * sc[1] * x1523 - 30000000.0 * sc[1] * x1533 +
    90000000.0 * sc[1] * x1748 - 90000000.0 * sc[1] * x1756 +
    20000000.0 * sc[1] * x1781 * x2054 + 2000000.0 * sc[1] * x1829 -
    2000000.0 * sc[1] * x1860 + 20000000.0 * sc[1] * x1891 +
    1800000.0 * sc[1] * x1897 + sc[1] * x247 +
    x1076 * x43 * (1.68 * x671 * x691 + 12.0 * x672 * x691) - 4.2e+45 * x1210 +
    3.675e+77 * x1329 * x33 - 3.675e+77 * x1329 * x427 + x1669 * x2024 -
    x1748 * x2031 - x1751 * x2024 + x1756 * x2031 - x1829 * x2050 -
    x1840 * x2038 - x1840 * x2047 + x1860 * x2050 - x1946 * x441 -
    x1946 * x662 + x1986 * x441 + x1986 * x662 + x2034 * x989 - x2034 * x990 -
    x2037 * x989 + x2037 * x990 -
    x320 * (1.68 * x671 * x691 + 12.0 * x672 * x691) + x792 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1946 - x1986) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[138] =
    -70000000.0 * sc[0] * x1534 + 70000000.0 * sc[0] * x1535 - sc[0] * x277 +
    20000000.0 * sc[1] * x1366 + 30000000.0 * sc[1] * x1534 -
    30000000.0 * sc[1] * x1535 - 73400000.0 * sc[1] * x1760 +
    73400000.0 * sc[1] * x1762 - 90000000.0 * sc[1] * x1764 +
    2000000.0 * sc[1] * x1881 - 2000000.0 * sc[1] * x1885 +
    1800000.0 * sc[1] * x1953 + 90000000.0 * sc[1] * x323 + sc[1] * x46 +
    15000000.0 * sc[2] * x1534 - 15000000.0 * sc[2] * x1535 + x1008 * x2034 -
    x1008 * x2037 - x1010 * x2034 + x1010 * x2037 + x1760 * x2024 -
    x1762 * x2024 + x1764 * x2031 + x1839 * x2060 - x1881 * x2050 +
    x1885 * x2050 - x2026 * x441 - x2026 * x662 - x2031 * x323 + x2051 * x441 +
    x2051 * x662 + x30 + x921 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x2026 - x2051) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[161] =
    -70000000.0 * sc[0] * x1563 + 70000000.0 * sc[0] * x1573 +
    30000000.0 * sc[1] * x1563 - 30000000.0 * sc[1] * x1573 -
    90000000.0 * sc[1] * x1773 + 2000000.0 * sc[1] * x1911 -
    2000000.0 * sc[1] * x1951 + 90000000.0 * sc[1] * x225 + sc[1] * x806 +
    x1011 * x2034 - x1011 * x2037 - x1013 * x2034 + x1013 * x2037 + x171 +
    x1768 * x2024 - x1769 * x2024 + x1773 * x2031 - x1911 * x2050 +
    x1951 * x2050 - x2031 * x225 - x2093 * x441 - x2093 * x662 + x2104 * x441 +
    x2104 * x662 + x798 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x2093 - x2104) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[184] =
    -70000000.0 * sc[0] * x1574 + 70000000.0 * sc[0] * x1575 - sc[0] * x75 +
    20000000.0 * sc[1] * x1197 * x2054 + 70000000.0 * sc[1] * x1345 +
    30000000.0 * sc[1] * x1574 - 30000000.0 * sc[1] * x1575 -
    73400000.0 * sc[1] * x1775 + 73400000.0 * sc[1] * x1776 +
    90000000.0 * sc[1] * x1779 - 90000000.0 * sc[1] * x1784 +
    2000000.0 * sc[1] * x1954 - 2000000.0 * sc[1] * x1957 +
    1800000.0 * sc[1] * x447 + 20000000.0 * sc[1] * x839 + sc[1] * x904 +
    15000000.0 * sc[2] * x1574 - 15000000.0 * sc[2] * x1575 + x1017 * x2034 -
    x1017 * x2037 - x1018 * x2034 + x1018 * x2037 - x1449 * x441 -
    x1449 * x662 + x1775 * x2024 - x1776 * x2024 - x1779 * x2031 +
    x1784 * x2031 - x1954 * x2050 + x1957 * x2050 + x2150 * x441 +
    x2150 * x662 + x30 + x921 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1449 - x2150) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[207] =
    -70000000.0 * sc[0] * x796 + 70000000.0 * sc[0] * x986 +
    2000000.0 * ((sc[1]) * (sc[1])) * x874 + 20000000.0 * sc[1] * x173 * x2054 +
    90000000.0 * sc[1] * x1821 - 90000000.0 * sc[1] * x1856 +
    2000000.0 * sc[1] * x1960 - 2000000.0 * sc[1] * x1966 +
    1800000.0 * sc[1] * x2003 + 20000000.0 * sc[1] * x639 +
    30000000.0 * sc[1] * x796 - 30000000.0 * sc[1] * x986 + x1019 * x2034 -
    x1019 * x2037 - x1020 * x2034 + x1020 * x2037 + x1462 + x1778 * x2024 -
    x1780 * x2024 - x1821 * x2031 + x1856 * x2031 - x1960 * x2050 +
    x1966 * x2050 - x1994 * x2038 - x1994 * x2047 - x2145 * x441 -
    x2145 * x662 + x2193 * x441 + x2193 * x662 - 2000000.0 * x37 + x813 + x950 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x2145 - x2193) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[230] =
    -70000000.0 * sc[0] * x1584 + 70000000.0 * sc[0] * x1586 +
    1.05e+45 * sc[14] * x1388 + 1000000.0 * ((sc[1]) * (sc[1])) * x874 +
    20000000.0 * sc[1] * x1002 + 30000000.0 * sc[1] * x1584 -
    30000000.0 * sc[1] * x1586 + 90000000.0 * sc[1] * x1836 -
    90000000.0 * sc[1] * x1841 + 2000000.0 * sc[1] * x1971 -
    2000000.0 * sc[1] * x1973 + 1800000.0 * sc[1] * x1981 +
    20000000.0 * sc[1] * x2054 * x436 + x1023 * x2034 - x1023 * x2037 -
    x1025 * x2034 + x1025 * x2037 + x1044 +
    x1076 * x43 * (0.42 * x671 * x691 + 3.0 * x672 * x691) - 1.05e+45 * x1210 +
    9.1875e+76 * x1329 * x33 - 9.1875e+76 * x1329 * x427 - x1678 * x2024 +
    x1797 * x2024 - x1836 * x2031 + x1841 * x2031 - x1971 * x2050 +
    x1973 * x2050 - x1974 * x2038 - x1974 * x2047 + x2275 * x441 +
    x2275 * x662 - x320 * (0.42 * x671 * x691 + 3.0 * x672 * x691) -
    1000000.0 * x37 - x441 * x468 - x468 * x662 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (-x2275 + x468) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[253] =
    -550000000.0 * refC * sc[0] * exp(-2.0 * tc[0] + x442) -
    70000000.0 * sc[0] * x1587 + 70000000.0 * sc[0] * x1588 +
    550000000.0 * ((sc[1]) * (sc[1])) * x879 + 30000000.0 * sc[1] * x1587 -
    30000000.0 * sc[1] * x1588 + 20000000.0 * sc[1] * x173 * x2054 -
    90000000.0 * sc[1] * x1876 - 2000000.0 * sc[1] * x1983 +
    20000000.0 * sc[1] * x639 + 90000000.0 * sc[1] * x758 +
    2000000.0 * sc[1] * x926 + 1800000.0 * sc[1] * x951 + x1027 * x2034 -
    x1027 * x2037 - x1031 * x2034 + x1031 * x2037 + x1121 + x1462 -
    x1516 * x441 - x1516 * x662 - x1663 * x2024 + x1750 * x2024 +
    x1876 * x2031 + x1983 * x2050 - x2031 * x758 - x2038 * x818 - x2047 * x818 -
    x2050 * x926 + x2331 * x441 + x2331 * x662 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1516 - x2331) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[276] =
    -20000000.0 * sc[0] * x1383 + 70000000.0 * sc[0] * x1459 -
    70000000.0 * sc[0] * x1589 - 30000000.0 * sc[1] * x1459 +
    20000000.0 * sc[1] * x1531 + 1800000.0 * sc[1] * x1559 +
    30000000.0 * sc[1] * x1589 + 90000000.0 * sc[1] * x1879 -
    90000000.0 * sc[1] * x1894 + 2000000.0 * sc[1] * x1984 -
    2000000.0 * sc[1] * x652 + sc[1] * x856 + x1063 * x2034 - x1063 * x2037 -
    x1065 * x2034 + x1065 * x2037 + x1131 - x1407 * x441 - x1407 * x662 +
    x1761 * x2024 - x1765 * x2024 - x1879 * x2031 + x1894 * x2031 -
    x1984 * x2050 + x2050 * x652 + x2060 * x790 + x2367 * x441 + x2367 * x662 +
    x30 + x921 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1407 - x2367) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[299] =
    -30000000.0 * sc[0] * x1124 - 32000000.0 * sc[0] * x1456 -
    70000000.0 * sc[0] * x884 + 70000000.0 * sc[0] * x890 +
    90000000.0 * sc[1] * x1896 - 90000000.0 * sc[1] * x1901 +
    1800000.0 * sc[1] * x1989 + 2000000.0 * sc[1] * x1996 -
    2000000.0 * sc[1] * x1998 + 30000000.0 * sc[1] * x884 -
    30000000.0 * sc[1] * x890 + x1005 + x1050 * x441 + x1050 * x662 +
    x1068 * x2034 - x1068 * x2037 - x1069 * x2034 + x1069 * x2037 -
    x1506 * x2038 - x1506 * x2047 + x1830 * x2024 - x1831 * x2024 -
    x1896 * x2031 + x1901 * x2031 - x1996 * x2050 + x1998 * x2050 -
    x441 * x754 + x585 - x662 * x754 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (-x1050 + x754) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[322] =
    -2000000.0 * sc[0] * x1310 + 70000000.0 * sc[0] * x1648 -
    70000000.0 * sc[0] * x898 - 30000000.0 * sc[1] * x1648 -
    90000000.0 * sc[1] * x1901 - 2000000.0 * sc[1] * x1998 + sc[1] * x268 +
    1800000.0 * sc[1] * x553 + 90000000.0 * sc[1] * x566 +
    30000000.0 * sc[1] * x898 + 2000000.0 * sc[1] * x909 + x1005 + x1012 -
    x1036 * x441 - x1036 * x662 + x1070 * x2034 - x1070 * x2037 +
    7.0e+44 * x1388 * x40 + x1834 * x2024 - x1835 * x2024 + x1901 * x2031 -
    x1980 * x2038 - x1980 * x2047 + x1998 * x2050 - x2031 * x566 -
    x2034 * x668 + x2037 * x668 - x2050 * x909 + x441 * x622 + x622 * x662 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1036 - x622) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[345] =
    -70000000.0 * sc[0] * x1666 + 70000000.0 * sc[0] * x1671 +
    2000000.0 * sc[1] * x1059 + 30000000.0 * sc[1] * x1666 -
    30000000.0 * sc[1] * x1671 + 1800000.0 * sc[1] * x1724 -
    90000000.0 * sc[1] * x1823 + 90000000.0 * sc[1] * x1908 -
    2000000.0 * sc[1] * x600 + sc[1] * x868 - x1 * x2038 - x1 * x2047 + x1005 -
    x1059 * x2050 + x1074 * x2034 - x1074 * x2037 - x1077 * x2034 +
    x1077 * x2037 + x1136 - x1297 * x441 - x1297 * x662 + x130 * x441 +
    x130 * x662 + x1823 * x2031 + x1838 * x2024 - x1842 * x2024 -
    x1908 * x2031 + x2050 * x600 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1297 - x130) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-1800000.0 * sc[1] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[368] =
    -70000000.0 * sc[0] * x1677 - 50000000.0 * sc[0] * x256 +
    30000000.0 * sc[1] * x1677 + 90000000.0 * sc[1] * x169 +
    73400000.0 * sc[1] * x1848 + 15000000.0 * sc[2] * x1677 + x1078 * x2034 -
    x1078 * x2037 - x1081 * x2034 + x1081 * x2037 + x1252 + x1338 -
    x169 * x2031 + x171 - x1848 * x2024 + x441 * x504 - x441 * x846 +
    x504 * x662 - x662 * x846 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (-x504 + x846) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[391] =
    -70000000.0 * sc[0] * x1689 - 20000000.0 * sc[0] * x666 +
    20000000.0 * sc[1] * x1494 * x2054 + 30000000.0 * sc[1] * x1689 +
    73400000.0 * sc[1] * x1850 + 90000000.0 * sc[1] * x1892 +
    50000000.0 * sc[1] * x768 + 15000000.0 * sc[2] * x1689 + x1082 * x2034 -
    x1082 * x2037 + x1252 + x149 - x1850 * x2024 - x1892 * x2031 -
    x2038 * x598 - x2047 * x598 - x441 * x849 + x56 - x662 * x849 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (-x1080 + x849) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[414] =
    -70000000.0 * sc[0] * x1692 + 30000000.0 * sc[1] * x1692 +
    73400000.0 * sc[1] * x1855 + 90000000.0 * sc[1] * x1888 +
    2000000.0 * sc[1] * x1898 + 20000000.0 * sc[1] * x191 * x2054 +
    15000000.0 * sc[2] * x1692 + x1085 * x2034 - x1085 * x2037 + x1155 + x1246 +
    x149 - x1782 * x441 - x1782 * x662 + x1843 * x2024 - x1855 * x2024 -
    x1888 * x2031 - x1898 * x2050 + x30 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (-x1080 + x1782) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[437] =
    70000000.0 * sc[0] * x1720 - 70000000.0 * sc[0] * x184 - sc[0] * x261 -
    30000000.0 * sc[1] * x1720 - 73400000.0 * sc[1] * x1825 +
    73400000.0 * sc[1] * x1827 + 30000000.0 * sc[1] * x184 +
    20000000.0 * sc[1] * x1893 + 90000000.0 * sc[1] * x1900 +
    2000000.0 * sc[1] * x1959 + 1800000.0 * sc[1] * x1989 -
    15000000.0 * sc[2] * x1720 + 15000000.0 * sc[2] * x184 - x1033 * x441 -
    x1033 * x662 + x1086 * x2034 - x1086 * x2037 - x1087 * x2034 +
    x1087 * x2037 + x1155 + x1246 + x1825 * x2024 - x1827 * x2024 -
    x1900 * x2031 + x1905 * x2060 - x1959 * x2050 - x2038 * x63 - x2047 * x63 +
    x441 * x971 + x56 + x662 * x971 + x921 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x1033 - x971) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[460] =
    -1800000.0 * sc[0] * x1277 - 70000000.0 * sc[0] * x1730 +
    1800000.0 * sc[1] * x1283 + 30000000.0 * sc[1] * x1730 +
    73400000.0 * sc[1] * x1832 + 20000000.0 * sc[1] * x1893 +
    90000000.0 * sc[1] * x1943 + 2000000.0 * sc[1] * x557 +
    15000000.0 * sc[2] * x1730 + x1080 * x441 + x1080 * x662 - x1083 * x2034 +
    x1083 * x2037 + x1090 * x2034 - x1090 * x2037 + x1155 + x1173 + x1246 +
    x1338 - x1832 * x2024 + x1843 * x2024 + x1905 * x2060 - x1943 * x2031 -
    x2050 * x557 + x30 - x441 * x929 - x662 * x929 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (-x1080 + x929) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[483] =
    -70000000.0 * sc[0] * x1631 + 70000000.0 * sc[0] * x1670 +
    30000000.0 * sc[1] * x1631 - 30000000.0 * sc[1] * x1670 +
    90000000.0 * sc[1] * x1944 + x1099 * x2034 - x1099 * x2037 - x1104 * x2034 +
    x1104 * x2037 + x1252 + x171 - x1846 * x2024 - x1944 * x2031 - x441 * x568 +
    x441 * x892 - x568 * x662 + x662 * x892 + x97 +
    (-70000000.0 * sc[0] * x675 + 30000000.0 * sc[1] * x675 +
     73400000.0 * sc[1] * x677 - 90000000.0 * sc[1] * x680 +
     15000000.0 * sc[2] * x675 - x2024 * x677 + x2031 * x680 + x2034 * x674 -
     x2037 * x674) *
      (x568 - x892) +
    (-70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x676 +
     73400000.0 * sc[1] * x678 + 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 - x2024 * x678 - x2031 * x681 + x2038 * x658 +
     x2047 * x658) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (x2038 * x65 + x2047 * x65 - x2060 * x230) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-1800000.0 * sc[1] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-2000000.0 * sc[1] * x603 - 20000000.0 * sc[1] * x642 +
     73400000.0 * sc[1] * x679 - x2024 * x679 + x2038 * x599 + x2047 * x599 +
     x2050 * x603) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-2000000.0 * sc[1] * x561 + 90000000.0 * sc[1] * x682 - x2031 * x682 +
     x2050 * x561 - x2060 * x437) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[1] =
    360000.0 * refC * sc[0] * exp(-0.6 * tc[0] + x442) +
    1100000000.0 * refC * sc[11] * exp(-2.0 * tc[0] + x442) +
    120000000.0 * refC * sc[5] * exp(-1.25 * tc[0] + x442) +
    2000000.0 * refC * x602 * exp(-tc[0] + x442) + 73400000.0 * sc[10] * x1221 +
    20000000.0 * sc[12] * x1383 + 30000000.0 * sc[13] * x1124 +
    2000000.0 * sc[14] * x1310 + 20000000.0 * sc[17] * x666 + sc[19] * x261 -
    180000.0 * ((sc[1]) * (sc[1])) * exp(-0.6 * tc[0]) +
    30000000.0 * sc[1] * x1014 - 68000000.0 * sc[1] * x1887 -
    20000000.0 * sc[1] * x2054 * x657 - 1800000.0 * sc[1] * x520 -
    90000000.0 * sc[1] * x657 - 30000000.0 * sc[1] * x760 * x83 -
    90000000.0 * sc[1] * x760 + 30000000.0 * sc[1] * x823 * x83 +
    90000000.0 * sc[1] * x823 - 73400000.0 * sc[1] * x827 -
    2000000.0 * sc[1] * x927 + 2000000.0 * sc[1] * x956 +
    73400000.0 * sc[1] * x961 - 30000000.0 * sc[1] * x987 +
    1800000.0 * sc[20] * x1277 - 15000000.0 * sc[2] * x1014 +
    80000000.0 * sc[2] * x644 - 80000000.0 * sc[2] * x855 +
    80200000.0 * sc[2] * x927 - 80200000.0 * sc[2] * x956 +
    15000000.0 * sc[2] * x987 + sc[3] * x866 - 30000000.0 * sc[4] * x1465 +
    30000000.0 * sc[4] * x972 + sc[6] * x277 - 30000000.0 * sc[8] * x1465 +
    sc[8] * x75 + 30000000.0 * sc[8] * x972 - x1014 * x2083 - x1014 * x231 +
    x1032 + x1053 + x1054 + x1161 - x1465 * x441 - x1465 * x662 + x1500 +
    x1652 + x1654 + x1849 - x1982 * x827 + x1982 * x961 - x2034 * x644 +
    x2034 * x855 + x2038 * x819 + x2049 * x324 + x2050 * x927 - x2050 * x956 +
    x2071 * x760 - x2071 * x823 - x2082 * x827 + x2082 * x961 + x2083 * x987 +
    x2087 - x2089 * x760 + x2089 * x823 + x2090 * x827 - x2090 * x961 +
    x2094 * x644 - x2094 * x855 - x2095 * x827 + x2095 * x961 - x2098 * x827 +
    x2098 * x961 - x2110 * x644 + x2110 * x855 - x2142 * x927 + x2142 * x956 -
    x2146 * x657 + x2148 * x927 - x2148 * x956 - x2154 * x927 + x2154 * x956 -
    x2183 * x520 + x2197 * x520 + x231 * x987 + x34 + x441 * x972 +
    x518 * x559 + 30000000.0 * x518 * x592 + 60000000.0 * x607 * x8 +
    x662 * x972 + x842 + x936 + x937 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x1465 + x972) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[24] =
    -360000.0 * sc[0] * sc[1] * exp(-0.6 * tc[0]) -
    10560000.0 * sc[11] * sc[1] * x2088 - 2200000000.0 * sc[11] * sc[1] * x879 -
    sc[15] * x868 - sc[16] * x2106 - 100000000.0 * sc[16] -
    80200000.0 * sc[18] * x1299 -
    240000000.0 * sc[1] * sc[5] * exp(-1.25 * tc[0]) -
    30000000.0 * sc[1] * x1030 * x83 - 90000000.0 * sc[1] * x1030 -
    73400000.0 * sc[1] * x1064 - 90000000.0 * sc[1] * x1200 -
    30000000.0 * sc[1] * x1211 - 68000000.0 * sc[1] * x1370 +
    30000000.0 * sc[1] * x1389 + 30000000.0 * sc[1] * x1508 * x83 +
    90000000.0 * sc[1] * x1508 - 2000000.0 * sc[1] * x1561 +
    2000000.0 * sc[1] * x494 - 1800000.0 * sc[1] * x540 -
    4000000.0 * sc[1] * x602 * x874 + 73400000.0 * sc[1] * x969 +
    15000000.0 * sc[2] * x1211 - 15000000.0 * sc[2] * x1389 +
    80200000.0 * sc[2] * x1561 - 500000.0 * sc[2] * x40 * x874 -
    80200000.0 * sc[2] * x494 + 80000000.0 * sc[2] * x893 -
    80000000.0 * sc[2] * x899 + 30000000.0 * sc[4] * x1649 -
    30000000.0 * sc[4] * x1694 - sc[5] * x247 - sc[7] * x2103 - sc[7] * x806 +
    30000000.0 * sc[8] * x1649 - 30000000.0 * sc[8] * x1694 + x100 -
    x1030 * x2089 + x1060 - x1064 * x1982 - x1064 * x2082 + x1064 * x2090 -
    x1064 * x2095 - x1064 * x2098 - 28000000.0 * x1177 * x1355 - x1200 * x2060 -
    x1200 * x2146 + 90000000.0 * x1209 + x1211 * x2083 + x1211 * x231 +
    1800000.0 * x1284 + 68000000.0 * x1387 - x1389 * x2083 - x1389 * x231 -
    x139 * x2182 - 1350000000000.0 * x1410 * x40 + x1508 * x2089 +
    x1561 * x2050 - x1561 * x2142 + x1561 * x2148 - x1561 * x2154 +
    x1637 * x2038 + x1649 * x441 + x1649 * x662 - x1694 * x441 - x1694 * x662 -
    x176 + x1982 * x969 - x2032 * x645 - x2034 * x893 + x2034 * x899 -
    x2050 * x494 + x2082 * x969 - x2090 * x969 + x2094 * x893 - x2094 * x899 +
    x2095 * x969 + x2098 * x969 - 100000000.0 * x2099 * x2100 + x2101 -
    x2108 * x40 * x645 - x2110 * x893 + x2110 * x899 + x2133 -
    1.99e+29 * x2139 * x324 * x40 + x2142 * x494 - x2148 * x494 -
    4990000.0 * x2149 * x324 + x2154 * x494 + x218 - x2183 * x540 + x2185 +
    x2189 - 30000000.0 * x233 * x83 - 90000000.0 * x233 - 2000000.0 * x324 -
    30000000.0 * x392 * x435 - 1.4e+18 * x40 * x762 - 80000000.0 * x401 * x435 -
    15000000.0 * x404 * x435 + x422 - 73400000.0 * x435 + 68000000.0 * x473 +
    1800000.0 * x478 + x483 + x5601 - 30000000.0 * x597 + x618 + x631 +
    90000000.0 * x778 - x785 - x825 + x852 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1649 - x1694) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[47] =
    70000000.0 * sc[0] * x1419 - 70000000.0 * sc[0] * x1461 + sc[0] * x878 +
    16.32 * sc[13] * exp(x2138) + 100000000.0 * sc[16] -
    20000000.0 * sc[1] * x1075 * x2054 - 90000000.0 * sc[1] * x1075 -
    1800000.0 * sc[1] * x1208 - 30000000.0 * sc[1] * x1419 +
    30000000.0 * sc[1] * x1461 - 30000000.0 * sc[1] * x1639 * x83 -
    90000000.0 * sc[1] * x1639 - 73400000.0 * sc[1] * x1640 +
    30000000.0 * sc[1] * x1643 * x83 + 90000000.0 * sc[1] * x1643 -
    2000000.0 * sc[1] * x1660 - 68000000.0 * sc[1] * x1674 +
    2000000.0 * sc[1] * x1726 - 500000.0 * sc[1] * x40 * x874 +
    73400000.0 * sc[1] * x718 + 80200000.0 * sc[2] * x1660 -
    80200000.0 * sc[2] * x1726 + 80000000.0 * sc[2] * x970 -
    80000000.0 * sc[2] * x973 + 28000000.0 * sc[3] * x1419 -
    28000000.0 * sc[3] * x1461 + 30000000.0 * sc[4] * x1772 -
    30000000.0 * sc[4] * x1785 + sc[4] * x5606 + sc[5] * x5604 +
    30000000.0 * sc[8] * x1772 - 30000000.0 * sc[8] * x1785 - x1075 * x2146 -
    x1208 * x2183 + x1208 * x2197 + x1419 * x2083 + x1419 * x231 -
    x1461 * x2083 - x1461 * x231 + x1639 * x2071 - x1639 * x2089 -
    x1640 * x1982 - x1640 * x2082 + x1640 * x2090 - x1640 * x2095 -
    x1640 * x2098 - x1643 * x2071 + x1643 * x2089 + x1660 * x2050 -
    x1660 * x2142 + x1660 * x2148 - x1660 * x2154 + x1709 * x2038 -
    x1726 * x2050 + x1726 * x2142 - x1726 * x2148 + x1726 * x2154 +
    x1772 * x441 + x1772 * x662 - x1785 * x441 - x1785 * x662 + x1982 * x718 -
    x2034 * x970 + x2034 * x973 + x2037 * x970 - x2037 * x973 + x2082 * x718 -
    x2090 * x718 + x2094 * x970 - x2094 * x973 + x2095 * x718 + x2098 * x718 -
    x2110 * x970 + x2110 * x973 + 80200000.0 * x324 + x5601 + x5656 + x5665 +
    x5673 + x5681 + x5686 + 80000000.0 * x645 + x997 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1772 - x1785) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[70] =
    -70000000.0 * sc[0] * x1517 + 70000000.0 * sc[0] * x854 + sc[0] * x866 +
    30000000.0 * sc[1] * x1517 - 1800000.0 * sc[1] * x1658 +
    73400000.0 * sc[1] * x1661 - 73400000.0 * sc[1] * x1662 -
    30000000.0 * sc[1] * x1673 * x83 - 90000000.0 * sc[1] * x1673 +
    30000000.0 * sc[1] * x1685 * x83 + 90000000.0 * sc[1] * x1685 -
    90000000.0 * sc[1] * x1708 - 2000000.0 * sc[1] * x1757 +
    2000000.0 * sc[1] * x1759 - 68000000.0 * sc[1] * x1766 -
    30000000.0 * sc[1] * x854 - 15000000.0 * sc[2] * x1517 +
    80200000.0 * sc[2] * x1757 - 80200000.0 * sc[2] * x1759 +
    15000000.0 * sc[2] * x854 + 80000000.0 * sc[2] * x977 -
    80000000.0 * sc[2] * x978 - 28000000.0 * sc[3] * x1517 +
    28000000.0 * sc[3] * x854 + 30000000.0 * sc[4] * x1822 -
    30000000.0 * sc[4] * x1852 + 30000000.0 * sc[8] * x1822 -
    30000000.0 * sc[8] * x1852 + x1061 - x1517 * x2083 - x1517 * x231 + x1647 -
    x1658 * x2183 + x1658 * x2197 + x1661 * x1982 + x1661 * x2082 -
    x1661 * x2090 + x1661 * x2095 + x1661 * x2098 - x1662 * x1982 -
    x1662 * x2082 + x1662 * x2090 - x1662 * x2095 - x1662 * x2098 +
    x1673 * x2071 - x1673 * x2089 - x1685 * x2071 + x1685 * x2089 -
    x1708 * x2060 - x1708 * x2146 + x1744 * x2038 + x1757 * x2050 -
    x1757 * x2142 + x1757 * x2148 - x1757 * x2154 - x1759 * x2050 +
    x1759 * x2142 - x1759 * x2148 + x1759 * x2154 + x1822 * x441 +
    x1822 * x662 - x1852 * x441 - x1852 * x662 - x2034 * x977 + x2034 * x978 +
    x2037 * x977 - x2037 * x978 + x2068 + x2083 * x854 + x2094 * x977 -
    x2094 * x978 - x2110 * x977 + x2110 * x978 + x2137 + x231 * x854 + x425 +
    x532 + x5500 + x5510 + x5734 + x5739 + x5748 + x5757 + x5764 + x5765 +
    x5769 + 28000000.0 * x597 +
    5280000.0 * x645 * exp(-754.82499870708 * invT) +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1822 - x1852) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[93] =
    70000000.0 * sc[0] * x1519 - 70000000.0 * sc[0] * x1521 -
    30000000.0 * sc[1] * x1519 + 30000000.0 * sc[1] * x1521 +
    30000000.0 * sc[1] * x1680 * x83 + 90000000.0 * sc[1] * x1680 +
    73400000.0 * sc[1] * x1687 - 30000000.0 * sc[1] * x1710 * x83 -
    90000000.0 * sc[1] * x1710 - 90000000.0 * sc[1] * x1745 -
    2000000.0 * sc[1] * x1790 - 1800000.0 * sc[1] * x182 +
    2000000.0 * sc[1] * x1824 - 68000000.0 * sc[1] * x1889 -
    73400000.0 * sc[1] * x345 + 15000000.0 * sc[2] * x1519 -
    15000000.0 * sc[2] * x1521 + 80200000.0 * sc[2] * x1790 -
    80200000.0 * sc[2] * x1824 + sc[2] * x5606 + 80000000.0 * sc[2] * x980 -
    80000000.0 * sc[2] * x981 + 30000000.0 * sc[4] * x1875 -
    30000000.0 * sc[4] * x1903 + sc[5] * x5771 + 32000000.0 * sc[8] * x1372 +
    30000000.0 * sc[8] * x1875 - 30000000.0 * sc[8] * x1903 +
    500000.0 * x1073 * x40 - 28000000.0 * x1248 * x1355 + x1519 * x2083 +
    x1519 * x231 - x1521 * x2083 - x1521 * x231 - x1680 * x2071 +
    x1680 * x2089 + x1687 * x1982 + x1687 * x2082 - x1687 * x2090 +
    x1687 * x2095 + x1687 * x2098 + x1710 * x2071 - x1710 * x2089 -
    x1745 * x2060 - x1745 * x2146 + x1774 * x2038 + x1790 * x2050 -
    x1790 * x2142 + x1790 * x2148 - x1790 * x2154 - x182 * x2183 +
    x182 * x2197 - x1824 * x2050 + x1824 * x2142 - x1824 * x2148 +
    x1824 * x2154 + x1875 * x441 + x1875 * x662 - x1903 * x441 - x1903 * x662 -
    x1982 * x345 - x2034 * x980 + x2034 * x981 + x2037 * x980 - x2037 * x981 -
    x2082 * x345 + x2090 * x345 + x2094 * x980 - x2094 * x981 - x2095 * x345 -
    x2098 * x345 - x2110 * x980 + x2110 * x981 + 30000000.0 * x518 + x5601 +
    x5774 + 141600000.0 * x5778 + x5829 + x5839 + x5847 + x5854 + x5858 +
    x5861 + x626 + 20000000.0 * x645 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1875 - x1903) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[116] =
    120000000.0 * refC * sc[0] * exp(-1.25 * tc[0] + x442) +
    refC * sc[6] * x5969 - 1350000000000.0 * sc[12] * x1509 * x348 * x788 -
    1.4e+18 * sc[14] * x142 * x382 * x788 -
    120000000.0 * ((sc[1]) * (sc[1])) * exp(-1.25 * tc[0]) -
    sc[1] * sc[3] * x127 - 8100000000000.0 * sc[1] * x1410 -
    30000000.0 * sc[1] * x1523 + 30000000.0 * sc[1] * x1533 +
    73400000.0 * sc[1] * x1669 - 30000000.0 * sc[1] * x1748 * x83 -
    90000000.0 * sc[1] * x1748 - 73400000.0 * sc[1] * x1751 +
    30000000.0 * sc[1] * x1756 * x83 + 90000000.0 * sc[1] * x1756 -
    20000000.0 * sc[1] * x1781 * x2054 - 90000000.0 * sc[1] * x1781 -
    2000000.0 * sc[1] * x1829 + 2000000.0 * sc[1] * x1860 -
    68000000.0 * sc[1] * x1891 - 1800000.0 * sc[1] * x1897 - sc[1] * x247 -
    8.4e+18 * sc[1] * x762 + 15000000.0 * sc[2] * x1523 -
    15000000.0 * sc[2] * x1533 + 80200000.0 * sc[2] * x1829 -
    80200000.0 * sc[2] * x1860 + sc[2] * x5604 + 80000000.0 * sc[2] * x989 -
    80000000.0 * sc[2] * x990 + 30000000.0 * sc[4] * x1946 -
    30000000.0 * sc[4] * x1986 + sc[4] * x5771 + 30000000.0 * sc[8] * x1946 -
    30000000.0 * sc[8] * x1986 + x1058 * x5879 + 2.4576e+21 * x1091 * x266 -
    1.9342105263157899e+30 * x1135 * x286 + 1.92e+16 * x1186 -
    1.194e+30 * x1206 - 1.0032110091743101e+19 * x1251 * x934 +
    1350000000000.0 * x1410 * x348 * x773 + 1.4e+18 * x142 * x762 * x773 -
    2.4576e+21 * x1446 * x266 + 8.4e+18 * x1468 * x382 -
    1.6224e+48 * x1487 * x967 + 3.12e+28 * x1490 * x2140 +
    8100000000000.0 * x1509 * x1564 + x1523 * x2083 + x1523 * x231 -
    x1533 * x2083 - x1533 * x231 + 1.194e+30 * x1539 * x858 + x1669 * x1982 +
    x1669 * x2082 - x1669 * x2090 + x1669 * x2095 + x1669 * x2098 +
    3000000.0 * x1688 - x172 * x2048 - x1748 * x2089 - x1751 * x1982 -
    x1751 * x2082 + x1751 * x2090 - x1751 * x2095 - x1751 * x2098 +
    1.9342105263157899e+30 * x1753 * x286 + x1756 * x2089 - x1781 * x2146 +
    x1829 * x2050 - x1829 * x2142 + x1829 * x2148 - x1829 * x2154 +
    x1840 * x2038 - x1860 * x2050 + x1860 * x2142 - x1860 * x2148 +
    x1860 * x2154 - x1897 * x2183 + x1946 * x441 + x1946 * x662 - x1986 * x441 -
    x1986 * x662 - x2034 * x989 + x2034 * x990 + x2048 * x318 + x2084 +
    x2094 * x989 - x2094 * x990 - x2110 * x989 + x2110 * x990 +
    1.6224e+48 * x232 - 3000000.0 * x263 - x5518 * x5879 +
    16000000.0 * x578 * x597 + x5919 * x720 - x5919 * x988 + x5955 + x5961 +
    x5964 + x5967 + x5997 + x6001 + x6009 + 4.5605758157389599e+47 * x601 -
    3.12e+28 * x783 - 4.5605758157389599e+47 * x914 + x931 +
    1.0032110091743101e+19 * x934 * x965 - 1.92e+16 * x966 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1946 - x1986) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[139] =
    70000000.0 * sc[0] * x1534 - 70000000.0 * sc[0] * x1535 + sc[0] * x277 -
    68000000.0 * sc[1] * x1366 - 30000000.0 * sc[1] * x1534 +
    30000000.0 * sc[1] * x1535 + 73400000.0 * sc[1] * x1760 -
    73400000.0 * sc[1] * x1762 + 30000000.0 * sc[1] * x1764 * x83 +
    90000000.0 * sc[1] * x1764 - 90000000.0 * sc[1] * x1839 -
    2000000.0 * sc[1] * x1881 + 2000000.0 * sc[1] * x1885 -
    1800000.0 * sc[1] * x1953 - 30000000.0 * sc[1] * x323 * x83 -
    90000000.0 * sc[1] * x323 + 80000000.0 * sc[2] * x1008 -
    80000000.0 * sc[2] * x1010 + 15000000.0 * sc[2] * x1534 -
    15000000.0 * sc[2] * x1535 + 80200000.0 * sc[2] * x1881 -
    80200000.0 * sc[2] * x1885 + 28000000.0 * sc[3] * x1534 -
    28000000.0 * sc[3] * x1535 + 30000000.0 * sc[4] * x2026 -
    30000000.0 * sc[4] * x2051 + 30000000.0 * sc[8] * x2026 -
    30000000.0 * sc[8] * x2051 - x1008 * x2034 + x1008 * x2037 + x1008 * x2094 -
    x1008 * x2110 + x1010 * x2034 - x1010 * x2037 - x1010 * x2094 +
    x1010 * x2110 + x1061 + x1534 * x2083 + x1534 * x231 - x1535 * x2083 -
    x1535 * x231 + x1647 + x1760 * x1982 + x1760 * x2082 - x1760 * x2090 +
    x1760 * x2095 + x1760 * x2098 - x1762 * x1982 - x1762 * x2082 +
    x1762 * x2090 - x1762 * x2095 - x1762 * x2098 - x1764 * x2071 +
    x1764 * x2089 - x1839 * x2060 - x1839 * x2146 + x1839 * x2180 +
    x1881 * x2050 - x1881 * x2142 + x1881 * x2148 - x1881 * x2154 -
    x1885 * x2050 + x1885 * x2142 - x1885 * x2148 + x1885 * x2154 -
    x1953 * x2183 + x1953 * x2197 + x2026 * x441 + x2026 * x508 + x2026 * x662 -
    x2051 * x441 - x2051 * x508 - x2051 * x662 + x2071 * x323 - x2089 * x323 +
    x6053 + x6056 + x6066 + x6073 + x6075 + x6082 + x6086 + x6095 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x2026 - x2051) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[162] =
    5.2e+27 * refC * sc[18] * x1190 * x2140 + 70000000.0 * sc[0] * x1563 -
    70000000.0 * sc[0] * x1573 - sc[18] * x1192 * x180 * x2140 -
    2000000.0 * ((sc[1]) * (sc[1])) * x874 - 1350000000000.0 * sc[1] * x1410 -
    30000000.0 * sc[1] * x1563 + 30000000.0 * sc[1] * x1573 +
    sc[1] * x176 * x180 + 73400000.0 * sc[1] * x1768 -
    73400000.0 * sc[1] * x1769 + 30000000.0 * sc[1] * x1773 * x83 +
    90000000.0 * sc[1] * x1773 - 2000000.0 * sc[1] * x1911 +
    2000000.0 * sc[1] * x1951 - sc[1] * x2103 - sc[1] * x2108 * x645 -
    30000000.0 * sc[1] * x225 * x83 - 90000000.0 * sc[1] * x225 -
    1.4e+18 * sc[1] * x762 - sc[1] * x806 + 80000000.0 * sc[2] * x1011 -
    80000000.0 * sc[2] * x1013 + 15000000.0 * sc[2] * x1563 -
    15000000.0 * sc[2] * x1573 + 80200000.0 * sc[2] * x1911 -
    80200000.0 * sc[2] * x1951 + 28000000.0 * sc[3] * x1563 -
    28000000.0 * sc[3] * x1573 + 30000000.0 * sc[4] * x2093 -
    30000000.0 * sc[4] * x2104 + 30000000.0 * sc[8] * x2093 -
    30000000.0 * sc[8] * x2104 - x1011 * x2034 + x1011 * x2037 + x1011 * x2094 -
    x1011 * x2110 + x1013 * x2034 - x1013 * x2037 - x1013 * x2094 +
    x1013 * x2110 - x1022 * x5527 + x1058 * x5517 + 4.096e+20 * x1091 * x266 -
    3.2236842105263198e+29 * x1135 * x286 + x1161 + 3200000000000000.0 * x1186 -
    1.99e+29 * x1206 - 1.67201834862385e+18 * x1251 * x934 - x1313 -
    4.096e+20 * x1446 * x266 + 1.4e+18 * x1468 * x382 -
    2.704e+47 * x1487 * x967 + 1350000000000.0 * x1509 * x1564 +
    1.99e+29 * x1539 * x858 + x1563 * x2083 + x1563 * x231 - x1573 * x2083 -
    x1573 * x231 + 500000.0 * x1688 - x172 * x5557 +
    3.2236842105263198e+29 * x1753 * x286 + x1768 * x1982 + x1768 * x2082 -
    x1768 * x2090 + x1768 * x2095 + x1768 * x2098 - x1769 * x1982 -
    x1769 * x2082 + x1769 * x2090 - x1769 * x2095 - x1769 * x2098 -
    x1773 * x2071 + x1773 * x2089 + x1911 * x2050 - x1911 * x2142 +
    x1911 * x2148 - x1911 * x2154 - x1951 * x2050 + x1951 * x2142 -
    x1951 * x2148 + x1951 * x2154 + x1970 + x2038 * x411 + x2071 * x225 -
    x2089 * x225 + x2093 * x441 + x2093 * x508 + x2093 * x662 - x2104 * x441 -
    x2104 * x508 - x2104 * x662 + 2.704e+47 * x232 - 500000.0 * x263 +
    x318 * x5557 + 2000000.0 * x37 + x425 + x5500 + x5510 - x5517 * x5518 +
    x5527 * x837 + x5532 * x795 - x5532 * x900 + x5551 + x6093 + x6136 + x6138 +
    x6141 + x6153 + x6154 + x6161 + x6162 + x6166 + x6178 - 5.2e+27 * x783 +
    1.67201834862385e+18 * x934 * x965 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x2093 - x2104) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[185] =
    sc[0] * x75 + 50000000.0 * sc[14] * x1574 - 50000000.0 * sc[14] * x1575 +
    sc[14] * x6237 - 20000000.0 * sc[1] * x1197 * x2054 -
    90000000.0 * sc[1] * x1197 - 30000000.0 * sc[1] * x1574 +
    30000000.0 * sc[1] * x1575 + 73400000.0 * sc[1] * x1775 -
    73400000.0 * sc[1] * x1776 - 30000000.0 * sc[1] * x1779 * x83 -
    90000000.0 * sc[1] * x1779 + 30000000.0 * sc[1] * x1784 * x83 +
    90000000.0 * sc[1] * x1784 - 2000000.0 * sc[1] * x1954 +
    2000000.0 * sc[1] * x1957 - 1800000.0 * sc[1] * x447 -
    68000000.0 * sc[1] * x839 + 80000000.0 * sc[2] * x1017 -
    80000000.0 * sc[2] * x1018 + 57000000.0 * sc[2] * x1449 +
    15000000.0 * sc[2] * x1574 - 15000000.0 * sc[2] * x1575 +
    80200000.0 * sc[2] * x1954 - 80200000.0 * sc[2] * x1957 -
    57000000.0 * sc[2] * x2150 + 28000000.0 * sc[3] * x1574 -
    28000000.0 * sc[3] * x1575 + 32000000.0 * sc[4] * x1372 +
    30000000.0 * sc[4] * x1449 - 30000000.0 * sc[4] * x2150 +
    30000000.0 * sc[8] * x1449 - 30000000.0 * sc[8] * x2150 +
    9980000.0 * sc[8] * exp(-5334.0966575300299 * invT + 0.1 * tc[0]) -
    x1017 * x2034 + x1017 * x2094 - x1017 * x2110 + x1018 * x2034 -
    x1018 * x2094 + x1018 * x2110 + x1061 + x1079 - x1197 * x2146 +
    x1449 * x441 + x1449 * x662 + x1574 * x2083 + x1574 * x231 - x1575 * x2083 -
    x1575 * x231 + x1647 + x1775 * x1982 + x1775 * x2082 - x1775 * x2090 +
    x1775 * x2095 - x1775 * x2096 + x1775 * x2098 - x1776 * x1982 -
    x1776 * x2082 + x1776 * x2090 - x1776 * x2095 + x1776 * x2096 -
    x1776 * x2098 + x1779 * x2071 - x1779 * x2089 - x1784 * x2071 +
    x1784 * x2089 + x1954 * x2050 - x1954 * x2142 + x1954 * x2148 -
    x1954 * x2154 - x1957 * x2050 + x1957 * x2142 - x1957 * x2148 +
    x1957 * x2154 + x2143 * x324 - x2150 * x441 - x2150 * x662 - x2183 * x447 +
    x2197 * x447 + 90000000.0 * x332 * x435 + 30000000.0 * x518 + x6095 +
    x6227 + x6236 + x6251 + x6259 + x6260 + x6266 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1449 - x2150) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[208] =
    50000000.0 * sc[14] * x796 - 50000000.0 * sc[14] * x986 -
    4000000.0 * ((sc[1]) * (sc[1])) * x874 + 73400000.0 * sc[1] * x1778 -
    73400000.0 * sc[1] * x1780 - 30000000.0 * sc[1] * x1821 * x83 -
    90000000.0 * sc[1] * x1821 + 30000000.0 * sc[1] * x1856 * x83 +
    90000000.0 * sc[1] * x1856 - 2000000.0 * sc[1] * x1960 +
    2000000.0 * sc[1] * x1966 - 1800000.0 * sc[1] * x2003 -
    30000000.0 * sc[1] * x796 + 30000000.0 * sc[1] * x986 +
    80000000.0 * sc[2] * x1019 - 80000000.0 * sc[2] * x1020 +
    80200000.0 * sc[2] * x1960 - 80200000.0 * sc[2] * x1966 +
    15000000.0 * sc[2] * x796 - 15000000.0 * sc[2] * x986 +
    30000000.0 * sc[4] * x2145 - 30000000.0 * sc[4] * x2193 +
    30000000.0 * sc[8] * x2145 - 30000000.0 * sc[8] * x2193 - x1019 * x2034 +
    x1019 * x2094 - x1019 * x2110 + x1020 * x2034 - x1020 * x2094 +
    x1020 * x2110 + x1161 + x1654 + x1778 * x1982 + x1778 * x2082 -
    x1778 * x2090 + x1778 * x2095 + x1778 * x2098 - x1780 * x1982 -
    x1780 * x2082 + x1780 * x2090 - x1780 * x2095 - x1780 * x2098 +
    x1821 * x2071 - x1821 * x2089 - x1856 * x2071 + x1856 * x2089 +
    x1960 * x2050 - x1960 * x2142 + x1960 * x2148 - x1960 * x2154 -
    x1966 * x2050 + x1966 * x2142 - x1966 * x2148 + x1966 * x2154 +
    x1994 * x2038 - x2003 * x2183 + x2003 * x2197 + x2083 * x796 -
    x2083 * x986 + x2087 + x2145 * x441 + x2145 * x662 - x2193 * x441 -
    x2193 * x662 + x231 * x796 - x231 * x986 + x34 + 4000000.0 * x37 + x6312 +
    x6318 + x6328 + x6336 + x6340 + x6343 + x6344 + x6347 - x813 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x2145 - x2193) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[231] =
    73400000.0 * sc[0] * x1221 - 2000000.0 * ((sc[1]) * (sc[1])) * x874 -
    68000000.0 * sc[1] * x1002 - 28000000.0 * sc[1] * x1355 * x66 -
    2025000000000.0 * sc[1] * x1410 - 30000000.0 * sc[1] * x1584 +
    30000000.0 * sc[1] * x1586 - 73400000.0 * sc[1] * x1678 +
    73400000.0 * sc[1] * x1797 - 30000000.0 * sc[1] * x1836 * x83 -
    90000000.0 * sc[1] * x1836 + 30000000.0 * sc[1] * x1841 * x83 +
    90000000.0 * sc[1] * x1841 - 2000000.0 * sc[1] * x1971 +
    2000000.0 * sc[1] * x1973 - 1800000.0 * sc[1] * x1981 -
    20000000.0 * sc[1] * x2054 * x436 - 90000000.0 * sc[1] * x436 -
    2.1e+18 * sc[1] * x762 + 80000000.0 * sc[2] * x1023 -
    80000000.0 * sc[2] * x1025 + 15000000.0 * sc[2] * x1584 -
    15000000.0 * sc[2] * x1586 + 80200000.0 * sc[2] * x1971 -
    80200000.0 * sc[2] * x1973 + 28000000.0 * sc[3] * x1584 -
    28000000.0 * sc[3] * x1586 - 30000000.0 * sc[4] * x2275 +
    30000000.0 * sc[4] * x468 - 30000000.0 * sc[8] * x2275 +
    30000000.0 * sc[8] * x468 -
    x1022 * (0.42 * x1437 * x691 + 3.0 * x686 * x691) - x1023 * x2034 +
    x1023 * x2094 - x1023 * x2110 + x1025 * x2034 - x1025 * x2094 +
    x1025 * x2110 + x1058 * x6356 + 6.144e+20 * x1091 * x266 -
    4.8355263157894698e+29 * x1135 * x286 + 4800000000000000.0 * x1186 -
    2.985e+29 * x1206 - 200000000.0 * x1248 * x2099 -
    2.5080275229357798e+18 * x1251 * x934 - 6.144e+20 * x1446 * x266 +
    2.1e+18 * x1468 * x382 - 4.056e+47 * x1487 * x967 +
    7.8e+27 * x1490 * x2140 + 2025000000000.0 * x1509 * x1564 +
    2.985e+29 * x1539 * x858 + x1584 * x2083 + x1584 * x231 - x1586 * x2083 -
    x1586 * x231 - x1678 * x1982 - x1678 * x2082 + x1678 * x2090 -
    x1678 * x2095 - x1678 * x2098 + 750000.0 * x1688 - x172 * x6418 +
    4.8355263157894698e+29 * x1753 * x286 + x1797 * x1982 + x1797 * x2082 -
    x1797 * x2090 + x1797 * x2095 + x1797 * x2098 - x1836 * x2089 +
    x1841 * x2089 + x1971 * x2050 - x1971 * x2142 + x1971 * x2148 -
    x1971 * x2154 - x1973 * x2050 + x1973 * x2142 - x1973 * x2148 +
    x1973 * x2154 + x1974 * x2038 - x1981 * x2183 - 2100000.0 * x2045 + x2125 -
    x2146 * x436 + x2157 - x2275 * x441 - x2275 * x662 + 4.056e+47 * x232 -
    750000.0 * x263 + x318 * x6418 + 2000000.0 * x37 + x441 * x468 +
    x468 * x662 + x476 + x5500 - x5518 * x6356 + 100000000.0 * x574 * x597 +
    1.14014395393474e+47 * x601 + x6348 + x6380 * x795 - x6380 * x900 +
    x6384 * x720 - x6384 * x988 + x6437 + x6444 + x6451 + x6454 + x6491 +
    2100000.0 * x660 - 7.8e+27 * x783 +
    x837 * (0.42 * x1437 * x691 + 3.0 * x686 * x691) -
    1.14014395393474e+47 * x914 + 2.5080275229357798e+18 * x934 * x965 -
    4800000000000000.0 * x966 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x2275 + x468) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[254] =
    1100000000.0 * refC * sc[0] * exp(-2.0 * tc[0] + x442) -
    5280000.0 * ((sc[1]) * (sc[1])) * x2088 -
    1100000000.0 * ((sc[1]) * (sc[1])) * x879 - 30000000.0 * sc[1] * x1234 -
    30000000.0 * sc[1] * x1587 + 30000000.0 * sc[1] * x1588 -
    73400000.0 * sc[1] * x1663 + 73400000.0 * sc[1] * x1750 +
    30000000.0 * sc[1] * x1876 * x83 + 90000000.0 * sc[1] * x1876 +
    2000000.0 * sc[1] * x1983 - sc[1] * x471 - 30000000.0 * sc[1] * x758 * x83 -
    90000000.0 * sc[1] * x758 - 2000000.0 * sc[1] * x926 -
    1800000.0 * sc[1] * x951 + 80000000.0 * sc[2] * x1027 -
    80000000.0 * sc[2] * x1031 + 15000000.0 * sc[2] * x1587 -
    15000000.0 * sc[2] * x1588 - 80200000.0 * sc[2] * x1983 +
    80200000.0 * sc[2] * x926 + 28000000.0 * sc[3] * x1587 -
    28000000.0 * sc[3] * x1588 + 30000000.0 * sc[4] * x1516 -
    30000000.0 * sc[4] * x2331 + 30000000.0 * sc[8] * x1516 -
    30000000.0 * sc[8] * x2331 - x1027 * x2034 + x1027 * x2094 - x1027 * x2110 +
    x1031 * x2034 - x1031 * x2094 + x1031 * x2110 + x1055 + x1516 * x441 +
    x1516 * x662 + x1587 * x2083 + x1587 * x231 - x1588 * x2083 - x1588 * x231 +
    x1654 - x1663 * x1982 - x1663 * x2082 + x1663 * x2090 - x1663 * x2095 -
    x1663 * x2098 + x1750 * x1982 + x1750 * x2082 - x1750 * x2090 +
    x1750 * x2095 + x1750 * x2098 + x187 - x1876 * x2071 + x1876 * x2089 -
    x1983 * x2050 + x1983 * x2142 - x1983 * x2148 + x1983 * x2154 +
    x2038 * x818 - 4200000.0 * x2045 + x2050 * x926 + x2071 * x758 -
    x2089 * x758 - x2142 * x926 + x2148 * x926 - x2154 * x926 - x2183 * x951 +
    x2197 * x951 - x2331 * x441 - x2331 * x662 + x34 + x439 + x5500 + x6347 +
    x6534 + x6555 + x6567 + 4200000.0 * x660 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1516 - x2331) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[277] =
    20000000.0 * sc[0] * x1383 - 70000000.0 * sc[0] * x1459 +
    70000000.0 * sc[0] * x1589 + 30000000.0 * sc[1] * x1459 -
    68000000.0 * sc[1] * x1531 - 1800000.0 * sc[1] * x1559 -
    30000000.0 * sc[1] * x1589 + 73400000.0 * sc[1] * x1761 -
    73400000.0 * sc[1] * x1765 - 30000000.0 * sc[1] * x1879 * x83 -
    90000000.0 * sc[1] * x1879 + 30000000.0 * sc[1] * x1894 * x83 +
    90000000.0 * sc[1] * x1894 - 2000000.0 * sc[1] * x1984 +
    2000000.0 * sc[1] * x652 - 90000000.0 * sc[1] * x790 +
    80000000.0 * sc[2] * x1063 - 80000000.0 * sc[2] * x1065 +
    57000000.0 * sc[2] * x1407 - 15000000.0 * sc[2] * x1459 +
    15000000.0 * sc[2] * x1589 + 80200000.0 * sc[2] * x1984 -
    57000000.0 * sc[2] * x2367 - 80200000.0 * sc[2] * x652 -
    28000000.0 * sc[3] * x1459 + 28000000.0 * sc[3] * x1589 +
    30000000.0 * sc[4] * x1407 - 30000000.0 * sc[4] * x2367 +
    30000000.0 * sc[8] * x1407 - 30000000.0 * sc[8] * x2367 + x1061 -
    x1063 * x2034 + x1063 * x2037 + x1063 * x2094 - x1063 * x2110 +
    x1065 * x2034 - x1065 * x2037 - x1065 * x2094 + x1065 * x2110 +
    x1407 * x441 + x1407 * x662 - x1459 * x2083 - x1459 * x231 +
    1350000000000.0 * x1509 * x788 - x1559 * x2183 + x1559 * x2197 +
    x1589 * x2083 + x1589 * x231 + x1647 + x1761 * x1982 + x1761 * x2082 -
    x1761 * x2090 + x1761 * x2095 - x1761 * x2096 + x1761 * x2098 -
    x1765 * x1982 - x1765 * x2082 + x1765 * x2090 - x1765 * x2095 +
    x1765 * x2096 - x1765 * x2098 + x1879 * x2071 - x1879 * x2089 -
    x1894 * x2071 + x1894 * x2089 + x1984 * x2050 - x1984 * x2142 +
    x1984 * x2148 - x1984 * x2154 - x2050 * x652 - x2060 * x790 + x2142 * x652 -
    x2146 * x790 - x2148 * x652 + x2154 * x652 - x2367 * x441 - x2367 * x662 +
    x6095 + x6606 + x6612 + x6618 + x6627 + x6642 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1407 - x2367) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[300] =
    30000000.0 * sc[0] * x1124 + 73400000.0 * sc[1] * x1830 -
    73400000.0 * sc[1] * x1831 - 30000000.0 * sc[1] * x1896 * x83 -
    90000000.0 * sc[1] * x1896 - 2000000.0 * sc[1] * x1996 -
    30000000.0 * sc[1] * x884 + 30000000.0 * sc[1] * x890 +
    80000000.0 * sc[2] * x1068 - 80000000.0 * sc[2] * x1069 +
    80200000.0 * sc[2] * x1996 - 80200000.0 * sc[2] * x1998 +
    15000000.0 * sc[2] * x884 - 15000000.0 * sc[2] * x890 +
    16.32 * sc[2] * exp(x2138) - 30000000.0 * sc[4] * x1050 +
    30000000.0 * sc[4] * x754 - 30000000.0 * sc[8] * x1050 +
    30000000.0 * sc[8] * x754 - x1050 * x441 - x1050 * x662 + x1056 -
    x1068 * x2034 + x1068 * x2094 - x1068 * x2110 + x1069 * x2034 -
    x1069 * x2094 + x1069 * x2110 + x1314 + x1412 + x1430 + x1506 * x2038 +
    x1830 * x1982 + x1830 * x2082 - x1830 * x2090 + x1830 * x2095 +
    x1830 * x2098 - x1831 * x1982 - x1831 * x2082 + x1831 * x2090 -
    x1831 * x2095 - x1831 * x2098 - x1896 * x2089 + x1996 * x2050 -
    x1996 * x2142 + x1996 * x2148 - x1996 * x2154 - x1998 * x2050 +
    x2083 * x884 - x2083 * x890 + x2131 + x231 * x884 - x231 * x890 +
    x441 * x754 + x617 + x6177 + x662 * x754 + x6680 + x6687 + x960 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x1050 + x754) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[323] =
    2000000.0 * sc[0] * x1310 + 30000000.0 * sc[1] * x1648 +
    73400000.0 * sc[1] * x1834 - 73400000.0 * sc[1] * x1835 -
    1800000.0 * sc[1] * x553 - 30000000.0 * sc[1] * x566 * x83 -
    90000000.0 * sc[1] * x566 - 30000000.0 * sc[1] * x898 -
    2000000.0 * sc[1] * x909 + 80000000.0 * sc[2] * x1070 -
    15000000.0 * sc[2] * x1648 - 80200000.0 * sc[2] * x1998 -
    80000000.0 * sc[2] * x668 + 15000000.0 * sc[2] * x898 +
    80200000.0 * sc[2] * x909 + 30000000.0 * sc[4] * x1036 +
    20000000.0 * sc[4] * x1980 - 30000000.0 * sc[4] * x622 +
    30000000.0 * sc[8] * x1036 - 30000000.0 * sc[8] * x622 + sc[8] * x6237 +
    x1028 + x1036 * x441 + x1036 * x508 + x1036 * x662 + x105 - x1070 * x2034 +
    x1070 * x2094 - x1070 * x2110 + x1314 + x1647 - x1648 * x2083 -
    x1648 * x231 + x1834 * x1982 + x1834 * x2082 - x1834 * x2090 +
    x1834 * x2095 + x1834 * x2098 - x1835 * x1982 - x1835 * x2082 +
    x1835 * x2090 - x1835 * x2095 - x1835 * x2098 - x1901 * x2071 +
    x1980 * x2038 - x1998 * x2050 + x201 + x2034 * x668 + x2050 * x909 + x207 +
    x2071 * x566 + x2083 * x898 - x2089 * x566 - x2094 * x668 + x2110 * x668 +
    x214 - x2142 * x909 + x2148 * x909 - x2154 * x909 - x2183 * x553 +
    x2197 * x553 + x231 * x898 + 1.4e+18 * x382 * x788 - x441 * x622 -
    x508 * x622 - x622 * x662 + x983 + x985 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1036 - x622) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[346] =
    -2000000.0 * sc[1] * x1059 - 30000000.0 * sc[1] * x1666 +
    30000000.0 * sc[1] * x1671 - 1800000.0 * sc[1] * x1724 +
    30000000.0 * sc[1] * x1823 * x83 + 90000000.0 * sc[1] * x1823 +
    73400000.0 * sc[1] * x1838 - 73400000.0 * sc[1] * x1842 -
    30000000.0 * sc[1] * x1908 * x83 - 90000000.0 * sc[1] * x1908 +
    2000000.0 * sc[1] * x600 - sc[1] * x868 + 80200000.0 * sc[2] * x1059 +
    80000000.0 * sc[2] * x1074 - 80000000.0 * sc[2] * x1077 +
    15000000.0 * sc[2] * x1666 - 15000000.0 * sc[2] * x1671 -
    80200000.0 * sc[2] * x600 + 30000000.0 * sc[4] * x1297 -
    30000000.0 * sc[4] * x130 + 30000000.0 * sc[8] * x1297 -
    30000000.0 * sc[8] * x130 + x1 * x2038 + x1059 * x2050 - x1059 * x2142 +
    x1059 * x2148 - x1059 * x2154 - x1074 * x2034 + x1074 * x2094 -
    x1074 * x2110 + x1077 * x2034 - x1077 * x2094 + x1077 * x2110 +
    x1297 * x441 + x1297 * x662 - x130 * x441 - x130 * x662 + x1505 + x1554 +
    x1666 * x2083 + x1666 * x231 - x1671 * x2083 - x1671 * x231 + x1682 +
    x1683 - x1724 * x2183 - x1823 * x2071 + x1823 * x2089 + x1838 * x1982 +
    x1838 * x2082 - x1838 * x2090 + x1838 * x2095 + x1838 * x2098 -
    x1842 * x1982 - x1842 * x2082 + x1842 * x2090 - x1842 * x2095 -
    x1842 * x2098 + x1908 * x2071 - x1908 * x2089 - 4200000.0 * x2045 -
    x2050 * x600 + x2069 + x2142 * x600 - x2148 * x600 + x2154 * x600 + x52 +
    x545 + x624 + 4200000.0 * x660 + 1.99e+29 * x788 * x858 + x968 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1297 - x130) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[369] =
    50000000.0 * sc[0] * x256 + 50000000.0 * sc[14] * x1677 -
    30000000.0 * sc[1] * x1677 - 30000000.0 * sc[1] * x169 * x83 -
    90000000.0 * sc[1] * x169 - 73400000.0 * sc[1] * x1848 - sc[1] * x2106 -
    100000000.0 * sc[1] + 80000000.0 * sc[2] * x1078 -
    80000000.0 * sc[2] * x1081 + 15000000.0 * sc[2] * x1677 +
    48000000.0 * sc[2] * x169 + 30000000.0 * sc[2] * x1848 -
    57000000.0 * sc[2] * x504 + 57000000.0 * sc[2] * x846 +
    100000000.0 * sc[2] + 28000000.0 * sc[3] * x1677 -
    30000000.0 * sc[4] * x504 + 30000000.0 * sc[4] * x846 -
    30000000.0 * sc[8] * x504 + 30000000.0 * sc[8] * x846 + x1026 -
    x1078 * x2034 + x1078 * x2094 - x1078 * x2110 + x1078 * x2112 +
    x1081 * x2034 - x1081 * x2094 + x1081 * x2110 - x1081 * x2112 + x1203 +
    x1636 + x1677 * x2083 + x1677 * x231 + x169 * x2043 + x169 * x2071 -
    x169 * x2089 - x1843 * x2096 - x1848 * x1982 - x1848 * x2082 +
    x1848 * x2090 - x1848 * x2095 + x1848 * x2096 - x1848 * x2098 + x1877 +
    x1886 + x1958 + x1963 + x228 - x441 * x504 + x441 * x846 + x497 -
    x504 * x508 - x504 * x662 + x508 * x846 + x6138 + x662 * x846 + x896 +
    x957 + x98 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x504 + x846) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[392] =
    70000000.0 * sc[0] * x1689 + 20000000.0 * sc[0] * x666 -
    20000000.0 * sc[1] * x1494 * x2054 - 90000000.0 * sc[1] * x1494 -
    30000000.0 * sc[1] * x1689 + 73400000.0 * sc[1] * x1843 -
    73400000.0 * sc[1] * x1850 - 30000000.0 * sc[1] * x1892 * x83 -
    90000000.0 * sc[1] * x1892 + 80000000.0 * sc[2] * x1082 -
    80200000.0 * sc[2] * x1364 + 15000000.0 * sc[2] * x1689 +
    30000000.0 * sc[2] * x1850 + 57000000.0 * sc[2] * x849 +
    28000000.0 * sc[3] * x1689 + 20000000.0 * sc[4] * x1082 +
    30000000.0 * sc[4] * x1689 + 30000000.0 * sc[4] * x849 +
    16000000.0 * sc[5] * x1689 * x578 + 40000000.0 * sc[8] * x1082 +
    30000000.0 * sc[8] * x849 + 60000000.0 * sc[9] * x849 + x1026 -
    x1082 * x2034 + x1082 * x2037 + x1082 * x2094 - x1082 * x2110 + x1203 -
    x1494 * x2146 + x1636 + x1689 * x2091 + x1689 * x231 + x1843 * x1982 +
    x1843 * x2082 - x1843 * x2090 + x1843 * x2095 + x1843 * x2098 -
    x1850 * x1982 + x1850 * x2024 - x1850 * x2082 + x1850 * x2090 -
    x1850 * x2095 + x1850 * x2096 - x1850 * x2098 + x1892 * x2031 +
    x1892 * x2071 - x1892 * x2089 + x2027 + x2038 * x598 + x2044 + x2068 +
    x2080 + x2086 + x228 + x441 * x849 + x5514 + x662 * x849 + x849 * x954 +
    x894 + x98 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x1080 + x849) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[415] =
    70000000.0 * sc[0] * x1692 + 50000000.0 * sc[14] * x1692 -
    80200000.0 * sc[1] * x1299 - 30000000.0 * sc[1] * x1692 -
    73400000.0 * sc[1] * x1855 - 30000000.0 * sc[1] * x1888 * x83 -
    90000000.0 * sc[1] * x1888 - 2000000.0 * sc[1] * x1898 -
    20000000.0 * sc[1] * x191 * x2054 - 90000000.0 * sc[1] * x191 +
    80000000.0 * sc[2] * x1085 + 15000000.0 * sc[2] * x1692 +
    57000000.0 * sc[2] * x1782 + 30000000.0 * sc[2] * x1855 +
    48000000.0 * sc[2] * x1888 + 80200000.0 * sc[2] * x1898 +
    28000000.0 * sc[3] * x1692 + 20000000.0 * sc[4] * x1085 +
    30000000.0 * sc[4] * x1692 + 30000000.0 * sc[4] * x1782 +
    40000000.0 * sc[8] * x1085 + 30000000.0 * sc[8] * x1782 +
    60000000.0 * sc[9] * x1782 + x1026 - x1083 * x2112 - x1085 * x2034 +
    x1085 * x2037 + x1085 * x2094 - x1085 * x2110 + x1085 * x2112 + x1175 +
    x1192 * x2140 + x1203 + x1636 - x1681 * x2091 + x1692 * x2083 +
    x1692 * x2091 + x1692 * x231 + x1782 * x441 + x1782 * x508 + x1782 * x662 +
    x1782 * x954 - x1855 * x1982 + x1855 * x2024 - x1855 * x2082 +
    x1855 * x2090 - x1855 * x2095 + x1855 * x2096 - x1855 * x2098 +
    x1888 * x2031 + x1888 * x2043 + x1888 * x2071 - x1888 * x2089 +
    x1898 * x2050 + x1898 * x2132 - x1898 * x2142 + x1898 * x2148 -
    x1898 * x2154 - x191 * x2146 + x191 * x2180 + x1955 + x1963 + x1978 +
    x2044 + x2080 + x2086 + x6090 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x1080 + x1782) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[438] =
    -70000000.0 * sc[0] * x1720 + 70000000.0 * sc[0] * x184 + sc[0] * x261 -
    50000000.0 * sc[14] * x1720 + 50000000.0 * sc[14] * x184 +
    30000000.0 * sc[1] * x1720 + 73400000.0 * sc[1] * x1825 -
    73400000.0 * sc[1] * x1827 - 30000000.0 * sc[1] * x184 -
    30000000.0 * sc[1] * x1900 * x83 - 90000000.0 * sc[1] * x1900 -
    2000000.0 * sc[1] * x1959 + 57000000.0 * sc[2] * x1033 +
    80000000.0 * sc[2] * x1086 - 80000000.0 * sc[2] * x1087 -
    80200000.0 * sc[2] * x1364 - 15000000.0 * sc[2] * x1720 +
    15000000.0 * sc[2] * x184 + 80200000.0 * sc[2] * x1959 -
    57000000.0 * sc[2] * x971 - 28000000.0 * sc[3] * x1720 +
    28000000.0 * sc[3] * x184 + 30000000.0 * sc[4] * x1033 -
    30000000.0 * sc[4] * x971 + 30000000.0 * sc[8] * x1033 -
    30000000.0 * sc[8] * x971 + x1033 * x441 + x1033 * x662 - x1086 * x2034 +
    x1086 * x2037 + x1086 * x2094 - x1086 * x2110 + x1087 * x2034 -
    x1087 * x2037 - x1087 * x2094 + x1087 * x2110 + x1161 + x1289 + x1369 -
    x1720 * x2083 - x1720 * x231 + x1825 * x1982 + x1825 * x2082 -
    x1825 * x2090 + x1825 * x2095 - x1825 * x2096 + x1825 * x2098 -
    x1827 * x1982 - x1827 * x2082 + x1827 * x2090 - x1827 * x2095 +
    x1827 * x2096 - x1827 * x2098 + x184 * x2083 + x184 * x231 + x1900 * x2071 -
    x1900 * x2089 + x1959 * x2050 - x1959 * x2142 + x1959 * x2148 -
    x1959 * x2154 + x1978 + x2038 * x63 + x2039 + x2068 + x2175 - x441 * x971 +
    x492 + x5500 + x5510 + x5514 + x6154 - x662 * x971 + x932 + x957 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x1033 - x971) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[461] =
    1800000.0 * sc[0] * x1277 + 70000000.0 * sc[0] * x1730 +
    50000000.0 * sc[14] * x1730 - 1800000.0 * sc[1] * x1283 +
    2000000.0 * sc[1] * x1364 - 30000000.0 * sc[1] * x1730 -
    73400000.0 * sc[1] * x1832 + 90000000.0 * sc[1] * x1845 -
    68000000.0 * sc[1] * x1893 - 90000000.0 * sc[1] * x1905 -
    30000000.0 * sc[1] * x1943 * x83 - 90000000.0 * sc[1] * x1943 -
    2000000.0 * sc[1] * x557 - 80000000.0 * sc[2] * x1083 +
    80000000.0 * sc[2] * x1090 + 15000000.0 * sc[2] * x1730 +
    30000000.0 * sc[2] * x1832 + 48000000.0 * sc[2] * x1943 +
    80200000.0 * sc[2] * x557 + sc[2] * x5661 + 57000000.0 * sc[2] * x929 +
    28000000.0 * sc[3] * x1730 - 30000000.0 * sc[4] * x1080 +
    20000000.0 * sc[4] * x1090 + 30000000.0 * sc[4] * x1730 +
    30000000.0 * sc[4] * x929 - 30000000.0 * sc[8] * x1080 +
    40000000.0 * sc[8] * x1090 + 30000000.0 * sc[8] * x929 +
    60000000.0 * sc[9] * x929 + x1026 - x1080 * x441 - x1080 * x508 -
    x1080 * x662 + x1083 * x2034 - x1083 * x2094 + x1083 * x2110 -
    x1083 * x2112 - x1090 * x2034 + x1090 * x2037 + x1090 * x2094 -
    x1090 * x2110 + x1090 * x2112 + x1175 + x1203 - x1283 * x2183 +
    x1364 * x2142 - x1364 * x2148 + x1364 * x2154 + x137 + x1636 + x1647 -
    x1681 * x2091 + x1730 * x2083 + x1730 * x2091 + x1730 * x231 -
    x1832 * x1982 + x1832 * x2024 - x1832 * x2082 + x1832 * x2090 -
    x1832 * x2095 + x1832 * x2096 - x1832 * x2098 + x1845 * x2089 -
    x1905 * x2060 - x1905 * x2146 + x1943 * x2031 + x1943 * x2043 +
    x1943 * x2071 - x1943 * x2089 + x1955 + x1958 + x1963 + x1978 + x2044 +
    x2050 * x557 + x2080 + x2132 * x557 - x2142 * x557 + x2148 * x557 -
    x2154 * x557 + x315 + x441 * x929 + x470 + x497 + x508 * x929 + x526 +
    x529 + x6138 + x662 * x929 + x929 * x954 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (-x1080 + x929) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[484] =
    refC * sc[6] * x6063 - sc[1] * sc[3] * x1041 - 30000000.0 * sc[1] * x1631 +
    30000000.0 * sc[1] * x1670 - 73400000.0 * sc[1] * x1846 -
    30000000.0 * sc[1] * x1944 * x83 - 90000000.0 * sc[1] * x1944 +
    80000000.0 * sc[2] * x1099 - 80000000.0 * sc[2] * x1104 +
    15000000.0 * sc[2] * x1631 - 15000000.0 * sc[2] * x1670 +
    30000000.0 * sc[2] * x1846 + 48000000.0 * sc[2] * x1944 +
    57000000.0 * sc[2] * x568 - 57000000.0 * sc[2] * x892 +
    28000000.0 * sc[3] * x1631 - 28000000.0 * sc[3] * x1670 +
    30000000.0 * sc[4] * x568 - 30000000.0 * sc[4] * x892 +
    30000000.0 * sc[8] * x568 - 30000000.0 * sc[8] * x892 + x1026 -
    x1099 * x2034 + x1099 * x2094 - x1099 * x2110 + x1104 * x2034 -
    x1104 * x2094 + x1104 * x2110 + x1631 * x2083 + x1631 * x231 -
    x1670 * x2083 - x1670 * x231 - x1843 * x2096 - x1846 * x1982 -
    x1846 * x2082 + x1846 * x2090 - x1846 * x2095 + x1846 * x2096 -
    x1846 * x2098 + x1944 * x2071 - x1944 * x2089 + x1955 + x1963 + x2039 +
    x441 * x568 - x441 * x892 + x508 * x568 - x508 * x892 + x5500 +
    x568 * x662 + x6138 - x662 * x892 + x7287 + x7303 + x7310 + x7316 + x957 +
    x98 +
    (70000000.0 * sc[0] * x675 + 50000000.0 * sc[14] * x675 -
     30000000.0 * sc[1] * x675 - 73400000.0 * sc[1] * x677 +
     30000000.0 * sc[1] * x680 * x83 + 90000000.0 * sc[1] * x680 +
     80000000.0 * sc[2] * x674 + 15000000.0 * sc[2] * x675 +
     30000000.0 * sc[2] * x677 - 48000000.0 * sc[2] * x680 +
     28000000.0 * sc[3] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 40000000.0 * sc[8] * x674 - x1982 * x677 +
     x2024 * x677 - x2031 * x680 - x2034 * x674 + x2037 * x674 - x2043 * x680 -
     x2071 * x680 - x2082 * x677 + x2083 * x675 + x2089 * x680 + x2090 * x677 +
     x2091 * x675 + x2094 * x674 - x2095 * x677 + x2096 * x677 - x2098 * x677 -
     x2110 * x674 + x2112 * x674 + x231 * x675) *
      (x568 - x892) +
    (70000000.0 * sc[0] * x676 + 50000000.0 * sc[14] * x676 -
     30000000.0 * sc[1] * x676 - 73400000.0 * sc[1] * x678 -
     30000000.0 * sc[1] * x681 * x83 - 90000000.0 * sc[1] * x681 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 28000000.0 * sc[3] * x676 -
     20000000.0 * sc[4] * x658 + 30000000.0 * sc[4] * x676 - x1982 * x678 +
     x2024 * x678 + x2031 * x681 - x2038 * x658 + x2043 * x681 + x2071 * x681 -
     x2082 * x678 + x2083 * x676 - x2089 * x681 + x2090 * x678 + x2091 * x676 -
     x2095 * x678 + x2096 * x678 - x2097 * x658 - x2098 * x678 + x231 * x676) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (90000000.0 * sc[1] * x230 - 20000000.0 * sc[4] * x65 - x2038 * x65 +
     x2060 * x230 - x2097 * x65 + x2146 * x230 - x2180 * x230) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (1800000.0 * sc[1] * x555 + x2183 * x555 - x2197 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (2000000.0 * sc[1] * x603 + 68000000.0 * sc[1] * x642 -
     73400000.0 * sc[1] * x679 - 80200000.0 * sc[2] * x603 +
     30000000.0 * sc[2] * x679 - 20000000.0 * sc[4] * x599 - x1982 * x679 +
     x2024 * x679 - x2038 * x599 - x2050 * x603 - x2082 * x679 + x2090 * x679 -
     x2095 * x679 + x2096 * x679 - x2097 * x599 - x2098 * x679 - x2124 * x642 -
     x2132 * x603 + x2142 * x603 - x2148 * x603 + x2154 * x603) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (90000000.0 * sc[1] * x437 + 2000000.0 * sc[1] * x561 -
     30000000.0 * sc[1] * x682 * x83 - 90000000.0 * sc[1] * x682 -
     80200000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 + x2031 * x682 +
     x2043 * x682 - x2050 * x561 + x2060 * x437 + x2071 * x682 - x2089 * x682 -
     x2132 * x561 + x2142 * x561 + x2146 * x437 - x2148 * x561 + x2154 * x561 -
     x2180 * x437) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[2] =
    15000000.0 * sc[10] * x1352 + 30000000.0 * sc[2] * x1014 +
    57000000.0 * sc[2] * x1465 - 10000000.0 * sc[2] * x1887 -
    20000000.0 * sc[2] * x2054 * x657 - 96000000.0 * sc[2] * x520 -
    80000000.0 * sc[2] * x644 - 96000000.0 * sc[2] * x760 -
    100000000.0 * sc[2] * x819 + 96000000.0 * sc[2] * x823 -
    60000000.0 * sc[2] * x827 + 80000000.0 * sc[2] * x855 - sc[2] * x878 -
    96240000.0 * sc[2] * x927 + 96240000.0 * sc[2] * x956 +
    60000000.0 * sc[2] * x961 - 57000000.0 * sc[2] * x972 -
    30000000.0 * sc[2] * x987 - 33000000.0 * sc[3] * x1465 +
    33000000.0 * sc[3] * x972 + 1000000.0 * x1688 - x1887 * x2272 +
    x1982 * x827 - x1982 * x961 + x2095 * x827 - x2095 * x961 + x2123 * x644 -
    x2123 * x855 + x2179 * x827 - x2179 * x961 + x2187 * x760 - x2187 * x823 +
    x2191 * x644 - x2191 * x855 + x2270 * x927 - x2270 * x956 + x2271 * x927 -
    x2271 * x956 - x2284 * x657 - 1000000.0 * x263 + x644 * x732 - x732 * x855 +
    576000.0 * x7331 - 576000.0 * x7332 - 1204.0 * x7349 + 1204.0 * x7352 +
    x7365 - x827 * x882 + x882 * x961 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x1465 + x972) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (96000000.0 * sc[2] * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[25] =
    57000000.0 * sc[10] * x1396 + 30000000.0 * sc[11] * x1234 + sc[12] * x562 +
    sc[16] * x2106 + 48000000.0 * sc[17] * x1150 + 80200000.0 * sc[18] * x1299 -
    96000000.0 * sc[2] * x1030 - 60000000.0 * sc[2] * x1064 -
    30000000.0 * sc[2] * x1211 - 10000000.0 * sc[2] * x1370 +
    30000000.0 * sc[2] * x1389 + 96000000.0 * sc[2] * x1508 -
    96240000.0 * sc[2] * x1561 - 100000000.0 * sc[2] * x1637 -
    57000000.0 * sc[2] * x1649 + 57000000.0 * sc[2] * x1694 -
    500000.0 * sc[2] * x40 * x874 + 96240000.0 * sc[2] * x494 -
    96000000.0 * sc[2] * x540 - 80000000.0 * sc[2] * x893 +
    80000000.0 * sc[2] * x899 + 60000000.0 * sc[2] * x969 +
    33000000.0 * sc[3] * x1649 - 33000000.0 * sc[3] * x1694 + sc[3] * x28 +
    sc[4] * x862 + sc[6] * x2190 + x1030 * x2187 + x1064 * x1982 +
    x1064 * x2095 + x1064 * x2179 - x1064 * x882 - x1200 * x2284 -
    x1200 * x888 - x1370 * x2272 - x1508 * x2187 + x1561 * x2270 +
    x1561 * x2271 - x1982 * x969 - x2095 * x969 + 100000000.0 * x2099 * x2100 +
    x2123 * x893 - x2123 * x899 + x2176 - x2179 * x969 + x2191 * x893 -
    x2191 * x899 - x2270 * x494 - x2271 * x494 + 80000000.0 * x401 * x435 +
    15000000.0 * x404 * x435 + x732 * x893 - x732 * x899 + x7397 + x7407 +
    x882 * x969 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1649 - x1694) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (96000000.0 * sc[2] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[48] =
    -sc[0] * x878 - sc[10] * x7347 * x7423 - sc[11] * x7413 - sc[12] * x7488 -
    20.4 * sc[13] * exp(x2138) - sc[15] * x7459 - 100000000.0 * sc[16] -
    500000.0 * sc[1] * x40 * x874 - 20000000.0 * sc[2] * x1075 * x2054 -
    96000000.0 * sc[2] * x1208 - 30000000.0 * sc[2] * x1419 +
    30000000.0 * sc[2] * x1461 - 96000000.0 * sc[2] * x1639 -
    60000000.0 * sc[2] * x1640 + 96000000.0 * sc[2] * x1643 -
    96240000.0 * sc[2] * x1660 - 10000000.0 * sc[2] * x1674 -
    480000.0 * sc[2] * x17 * x874 - 100000000.0 * sc[2] * x1709 +
    96240000.0 * sc[2] * x1726 - 57000000.0 * sc[2] * x1772 +
    57000000.0 * sc[2] * x1785 + 60000000.0 * sc[2] * x718 -
    80000000.0 * sc[2] * x970 + 80000000.0 * sc[2] * x973 +
    33000000.0 * sc[3] * x1772 - 33000000.0 * sc[3] * x1785 - sc[4] * x5606 -
    sc[5] * x5604 - 0.0357 * sc[5] * x7471 - 20000000.0 * sc[6] -
    sc[7] * x7409 - 84300000.0 * sc[8] - sc[9] * x7417 - x1075 * x2284 +
    100000000.0 * x1176 + 96000000.0 * x1284 + 10000000.0 * x1387 +
    x1639 * x2187 + x1640 * x1982 + x1640 * x2095 + x1640 * x2179 -
    x1640 * x882 - x1643 * x2187 + x1660 * x2270 + x1660 * x2271 -
    x1674 * x2272 - x1726 * x2270 - x1726 * x2271 - x1982 * x718 -
    x209 * x2278 - x2095 * x718 - x2179 * x718 + x2191 * x970 - x2191 * x973 -
    96000000.0 * x233 - 96240000.0 * x324 - 33000000.0 * x385 * x435 -
    60000000.0 * x435 + 10000000.0 * x473 + 96000000.0 * x478 -
    57000000.0 * x518 + 100000000.0 * x564 - 30000000.0 * x597 - x611 * x901 -
    80000000.0 * x645 + x718 * x882 + x732 * x970 - x732 * x973 + x7397 +
    x7458 + x7469 + x7487 - x785 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1772 - x1785) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (96000000.0 * sc[2] * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[71] =
    240000.0 * refC * x17 * x7330 + sc[1] * x28 + 30000000.0 * sc[2] * x1517 -
    96000000.0 * sc[2] * x1658 + 60000000.0 * sc[2] * x1661 -
    60000000.0 * sc[2] * x1662 - 96000000.0 * sc[2] * x1673 +
    96000000.0 * sc[2] * x1685 - 100000000.0 * sc[2] * x1744 -
    96240000.0 * sc[2] * x1757 + 96240000.0 * sc[2] * x1759 -
    10000000.0 * sc[2] * x1766 - 57000000.0 * sc[2] * x1822 +
    57000000.0 * sc[2] * x1852 - 30000000.0 * sc[2] * x854 -
    80000000.0 * sc[2] * x977 + 80000000.0 * sc[2] * x978 +
    33000000.0 * sc[3] * x1822 - 33000000.0 * sc[3] * x1852 + sc[8] * x7511 -
    x1661 * x1982 - x1661 * x2095 - x1661 * x2179 + x1661 * x882 +
    x1662 * x1982 + x1662 * x2095 + x1662 * x2179 - x1662 * x882 +
    x1673 * x2187 - x1685 * x2187 + 500000.0 * x1688 - x1708 * x2284 -
    x1708 * x888 + x1757 * x2270 + x1757 * x2271 - x1759 * x2270 -
    x1759 * x2271 - x1766 * x2272 + x2123 * x977 - x2123 * x978 + x2186 * x233 +
    x2191 * x977 - x2191 * x978 - 500000.0 * x263 + 33000000.0 * x518 +
    x732 * x977 - x732 * x978 + 240000.0 * x7331 - 240000.0 * x7332 -
    3612.0 * x7349 + 3612.0 * x7352 + x7494 + x7496 + x7540 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1822 - x1852) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (96000000.0 * sc[2] * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[94] =
    30000000.0 * sc[10] * x1217 + 10000000.0 * sc[12] * x1379 + sc[16] * x166 +
    20000000.0 * sc[17] * x7551 + sc[19] * x7546 + sc[1] * x862 -
    30000000.0 * sc[2] * x1519 + 30000000.0 * sc[2] * x1521 +
    96000000.0 * sc[2] * x1680 + 60000000.0 * sc[2] * x1687 -
    96000000.0 * sc[2] * x1710 - 100000000.0 * sc[2] * x1774 -
    96240000.0 * sc[2] * x1790 - 96000000.0 * sc[2] * x182 +
    96240000.0 * sc[2] * x1824 - 57000000.0 * sc[2] * x1875 -
    10000000.0 * sc[2] * x1889 + 57000000.0 * sc[2] * x1903 -
    60000000.0 * sc[2] * x345 - sc[2] * x5606 - 80000000.0 * sc[2] * x980 +
    80000000.0 * sc[2] * x981 + 33000000.0 * sc[3] * x1875 -
    33000000.0 * sc[3] * x1903 + sc[6] * x7541 + sc[8] * x7543 +
    500000.0 * x1073 * x40 - x1680 * x2187 - x1687 * x1982 - x1687 * x2095 -
    x1687 * x2179 + x1687 * x882 + x1710 * x2187 - x1745 * x2284 -
    x1745 * x888 + x1790 * x2270 + x1790 * x2271 - x1824 * x2270 -
    x1824 * x2271 - x1889 * x2272 + x1982 * x345 + x2095 * x345 + x2123 * x980 -
    x2123 * x981 + x2179 * x345 + x2191 * x980 - x2191 * x981 + x220 * x435 +
    x2262 * x324 - x345 * x882 + x732 * x980 - x732 * x981 + x7397 + x7548 +
    0.0714 * x7549 + x7594 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1875 - x1903) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (96000000.0 * sc[2] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[117] =
    -30000000.0 * sc[2] * x1523 + 30000000.0 * sc[2] * x1533 +
    60000000.0 * sc[2] * x1669 - 96000000.0 * sc[2] * x1748 -
    60000000.0 * sc[2] * x1751 + 96000000.0 * sc[2] * x1756 -
    20000000.0 * sc[2] * x1781 * x2054 - 96240000.0 * sc[2] * x1829 -
    100000000.0 * sc[2] * x1840 + 96240000.0 * sc[2] * x1860 -
    10000000.0 * sc[2] * x1891 - 96000000.0 * sc[2] * x1897 -
    57000000.0 * sc[2] * x1946 + 57000000.0 * sc[2] * x1986 - sc[2] * x5604 -
    0.0357 * sc[2] * x7471 - 80000000.0 * sc[2] * x989 +
    80000000.0 * sc[2] * x990 + 33000000.0 * sc[3] * x1946 -
    33000000.0 * sc[3] * x1986 - x1669 * x1982 - x1669 * x2095 - x1669 * x2179 +
    x1669 * x882 + 3000000.0 * x1688 + x1748 * x2187 + x1751 * x1982 +
    x1751 * x2095 + x1751 * x2179 - x1751 * x882 - x1756 * x2187 -
    x1781 * x2284 + x1829 * x2270 + x1829 * x2271 - x1860 * x2270 -
    x1860 * x2271 - x1891 * x2272 + x2123 * x989 - x2123 * x990 + x2191 * x989 -
    x2191 * x990 - 3000000.0 * x263 + x732 * x989 - x732 * x990 +
    3696000.0 * x7331 - 3696000.0 * x7332 - 3612.0 * x7349 + 3612.0 * x7352 +
    x7634 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1946 - x1986) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (96000000.0 * sc[2] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[140] =
    sc[1] * x2190 - 80000000.0 * sc[2] * x1008 + 80000000.0 * sc[2] * x1010 -
    10000000.0 * sc[2] * x1366 - 30000000.0 * sc[2] * x1534 +
    30000000.0 * sc[2] * x1535 + 60000000.0 * sc[2] * x1760 -
    60000000.0 * sc[2] * x1762 + 96000000.0 * sc[2] * x1764 -
    96240000.0 * sc[2] * x1881 + 96240000.0 * sc[2] * x1885 -
    96000000.0 * sc[2] * x1953 - 57000000.0 * sc[2] * x2026 +
    57000000.0 * sc[2] * x2051 - 96000000.0 * sc[2] * x323 -
    20000000.0 * sc[2] + 33000000.0 * sc[3] * x2026 -
    33000000.0 * sc[3] * x2051 + sc[4] * x7541 + x1008 * x2123 + x1008 * x2191 +
    x1008 * x732 - x1010 * x2123 - x1010 * x2191 - x1010 * x732 -
    x1366 * x2272 - x1760 * x1982 - x1760 * x2095 - x1760 * x2179 +
    x1760 * x882 + x1762 * x1982 + x1762 * x2095 + x1762 * x2179 -
    x1762 * x882 - x1764 * x2187 - x1839 * x2284 - x1839 * x888 +
    x1881 * x2270 + x1881 * x2271 - x1885 * x2270 - x1885 * x2271 +
    x2187 * x323 + x7662 + x7672 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x2026 - x2051) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (96000000.0 * sc[2] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[163] =
    -80000000.0 * sc[2] * x1011 + 80000000.0 * sc[2] * x1013 -
    30000000.0 * sc[2] * x1563 + 30000000.0 * sc[2] * x1573 +
    60000000.0 * sc[2] * x1768 - 60000000.0 * sc[2] * x1769 +
    96000000.0 * sc[2] * x1773 - 96240000.0 * sc[2] * x1911 +
    96240000.0 * sc[2] * x1951 - 57000000.0 * sc[2] * x2093 +
    57000000.0 * sc[2] * x2104 - 96000000.0 * sc[2] * x225 - sc[2] * x7409 +
    33000000.0 * sc[3] * x2093 - 33000000.0 * sc[3] * x2104 + x1011 * x2123 +
    x1011 * x2191 + x1011 * x732 - x1013 * x2123 - x1013 * x2191 -
    x1013 * x732 - x1768 * x1982 - x1768 * x2095 - x1768 * x2179 +
    x1768 * x882 + x1769 * x1982 + x1769 * x2095 + x1769 * x2179 -
    x1769 * x882 - x1773 * x2187 + x1911 * x2270 + x1911 * x2271 -
    x1951 * x2270 - x1951 * x2271 + x2187 * x225 + x7704 + x7714 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x2093 - x2104) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (96000000.0 * sc[2] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[186] =
    48000000.0 * sc[10] * x1142 + 16040000.0 * sc[12] * x1293 -
    80000000.0 * sc[2] * x1017 + 80000000.0 * sc[2] * x1018 -
    20000000.0 * sc[2] * x1197 * x2054 - 57000000.0 * sc[2] * x1449 -
    30000000.0 * sc[2] * x1574 + 30000000.0 * sc[2] * x1575 +
    60000000.0 * sc[2] * x1775 - 60000000.0 * sc[2] * x1776 -
    96000000.0 * sc[2] * x1779 + 96000000.0 * sc[2] * x1784 -
    96240000.0 * sc[2] * x1954 + 96240000.0 * sc[2] * x1957 +
    57000000.0 * sc[2] * x2150 - 96000000.0 * sc[2] * x447 -
    10000000.0 * sc[2] * x839 - 84300000.0 * sc[2] +
    33000000.0 * sc[3] * x1449 - 33000000.0 * sc[3] * x2150 + sc[3] * x7511 +
    sc[4] * x7543 + x1017 * x2123 + x1017 * x2191 + x1017 * x732 -
    x1018 * x2123 - x1018 * x2191 - x1018 * x732 - x1197 * x2284 -
    x1775 * x1982 - x1775 * x2095 - x1775 * x2179 + x1775 * x882 +
    x1776 * x1982 + x1776 * x2095 + x1776 * x2179 - x1776 * x882 +
    x1779 * x2187 - x1784 * x2187 + x1954 * x2270 + x1954 * x2271 -
    x1957 * x2270 - x1957 * x2271 - x2272 * x839 + x6233 + x7662 + x7755 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1449 - x2150) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (96000000.0 * sc[2] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[209] =
    -80000000.0 * sc[2] * x1019 + 80000000.0 * sc[2] * x1020 +
    60000000.0 * sc[2] * x1778 - 60000000.0 * sc[2] * x1780 -
    96000000.0 * sc[2] * x1821 + 96000000.0 * sc[2] * x1856 -
    96240000.0 * sc[2] * x1960 + 96240000.0 * sc[2] * x1966 -
    100000000.0 * sc[2] * x1994 - 96000000.0 * sc[2] * x2003 -
    57000000.0 * sc[2] * x2145 + 57000000.0 * sc[2] * x2193 - sc[2] * x7417 -
    30000000.0 * sc[2] * x796 + 30000000.0 * sc[2] * x986 +
    33000000.0 * sc[3] * x2145 - 33000000.0 * sc[3] * x2193 + x1019 * x2123 +
    x1019 * x2191 + x1019 * x732 - x1020 * x2123 - x1020 * x2191 -
    x1020 * x732 + 1000000.0 * x1688 - x1778 * x1982 - x1778 * x2095 -
    x1778 * x2179 + x1778 * x882 + x1780 * x1982 + x1780 * x2095 +
    x1780 * x2179 - x1780 * x882 + x1821 * x2187 - x1856 * x2187 +
    x1960 * x2270 + x1960 * x2271 - x1966 * x2270 - x1966 * x2271 -
    1000000.0 * x263 + 480000.0 * x7331 - 480000.0 * x7332 - 1204.0 * x7349 +
    1204.0 * x7352 + x7786 + x7793 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x2145 - x2193) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (96000000.0 * sc[2] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[232] =
    15000000.0 * sc[0] * x1352 + 57000000.0 * sc[1] * x1396 -
    10000000.0 * sc[2] * x1002 - 80000000.0 * sc[2] * x1023 +
    80000000.0 * sc[2] * x1025 - 30000000.0 * sc[2] * x1584 +
    30000000.0 * sc[2] * x1586 - 60000000.0 * sc[2] * x1678 +
    60000000.0 * sc[2] * x1797 - 96000000.0 * sc[2] * x1836 +
    96000000.0 * sc[2] * x1841 - 96240000.0 * sc[2] * x1971 +
    96240000.0 * sc[2] * x1973 - 100000000.0 * sc[2] * x1974 -
    96000000.0 * sc[2] * x1981 - 20000000.0 * sc[2] * x2054 * x436 +
    57000000.0 * sc[2] * x2275 - 57000000.0 * sc[2] * x468 -
    sc[2] * x7347 * x7423 - 33000000.0 * sc[3] * x2275 +
    33000000.0 * sc[3] * x468 + 30000000.0 * sc[4] * x1217 +
    48000000.0 * sc[8] * x1142 - x1002 * x2272 + x1023 * x2123 + x1023 * x2191 +
    x1023 * x732 - x1025 * x2123 - x1025 * x2191 - x1025 * x732 +
    200000000.0 * x1248 * x2099 + x1678 * x1982 + x1678 * x2095 +
    x1678 * x2179 - x1678 * x882 + 750000.0 * x1688 - x1797 * x1982 -
    x1797 * x2095 - x1797 * x2179 + x1797 * x882 + x1836 * x2187 -
    x1841 * x2187 + x1971 * x2270 + x1971 * x2271 - x1973 * x2270 -
    x1973 * x2271 + x2144 * x645 - x2284 * x436 - 750000.0 * x263 +
    100000000.0 * x290 * x645 + 420000.0 * x7331 - 420000.0 * x7332 -
    903.0 * x7349 + 903.0 * x7352 + x7794 + x7837 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x2275 + x468) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (96000000.0 * sc[2] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[255] =
    30000000.0 * sc[1] * x1234 - 80000000.0 * sc[2] * x1027 +
    80000000.0 * sc[2] * x1031 - 57000000.0 * sc[2] * x1516 -
    30000000.0 * sc[2] * x1587 + 30000000.0 * sc[2] * x1588 -
    60000000.0 * sc[2] * x1663 + 60000000.0 * sc[2] * x1750 +
    96000000.0 * sc[2] * x1876 + 96240000.0 * sc[2] * x1983 +
    57000000.0 * sc[2] * x2331 - sc[2] * x7413 - 96000000.0 * sc[2] * x758 -
    100000000.0 * sc[2] * x818 - 96240000.0 * sc[2] * x926 -
    96000000.0 * sc[2] * x951 + 33000000.0 * sc[3] * x1516 -
    33000000.0 * sc[3] * x2331 + x1027 * x2123 + x1027 * x2191 + x1027 * x732 -
    x1031 * x2123 - x1031 * x2191 - x1031 * x732 + x1663 * x1982 +
    x1663 * x2095 + x1663 * x2179 - x1663 * x882 + 1000000.0 * x1688 -
    x1750 * x1982 - x1750 * x2095 - x1750 * x2179 + x1750 * x882 -
    x1876 * x2187 - x1983 * x2270 - x1983 * x2271 + x2187 * x758 +
    x2202 * x645 + x2270 * x926 + x2271 * x926 - 1000000.0 * x263 +
    864000.0 * x7331 - 864000.0 * x7332 - 2107.0 * x7349 + x7351 * x7423 +
    2107.0 * x7352 + x7786 + x7875 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1516 - x2331) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[278] =
    sc[1] * x562 - 80000000.0 * sc[2] * x1063 + 80000000.0 * sc[2] * x1065 -
    57000000.0 * sc[2] * x1407 + 30000000.0 * sc[2] * x1459 -
    10000000.0 * sc[2] * x1531 - 96000000.0 * sc[2] * x1559 -
    30000000.0 * sc[2] * x1589 + 60000000.0 * sc[2] * x1761 -
    60000000.0 * sc[2] * x1765 - 96000000.0 * sc[2] * x1879 +
    96000000.0 * sc[2] * x1894 - 96240000.0 * sc[2] * x1984 +
    57000000.0 * sc[2] * x2367 + 96240000.0 * sc[2] * x652 - sc[2] * x7488 +
    33000000.0 * sc[3] * x1407 - 33000000.0 * sc[3] * x2367 +
    10000000.0 * sc[4] * x1379 + 16040000.0 * sc[8] * x1293 + x1063 * x2123 +
    x1063 * x2191 + x1063 * x732 - x1065 * x2123 - x1065 * x2191 -
    x1065 * x732 - x1531 * x2272 - x1761 * x1982 - x1761 * x2095 -
    x1761 * x2179 + x1761 * x882 + x1765 * x1982 + x1765 * x2095 +
    x1765 * x2179 - x1765 * x882 + x1879 * x2187 - x1894 * x2187 +
    x1984 * x2270 + x1984 * x2271 - x2270 * x652 - x2271 * x652 - x2284 * x790 +
    96000000.0 * x324 * x512 + x7662 - x790 * x888 + x7914 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1407 - x2367) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (96000000.0 * sc[2] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[301] =
    57000000.0 * sc[2] * x1050 - 80000000.0 * sc[2] * x1068 +
    80000000.0 * sc[2] * x1069 - 100000000.0 * sc[2] * x1506 +
    60000000.0 * sc[2] * x1830 - 60000000.0 * sc[2] * x1831 -
    96000000.0 * sc[2] * x1896 - 96000000.0 * sc[2] * x1989 -
    96240000.0 * sc[2] * x1996 - 57000000.0 * sc[2] * x754 -
    30000000.0 * sc[2] * x884 + 30000000.0 * sc[2] * x890 -
    20.4 * sc[2] * exp(x2138) - 33000000.0 * sc[3] * x1050 +
    33000000.0 * sc[3] * x754 + x1068 * x2123 + x1068 * x2191 + x1068 * x732 -
    x1069 * x2123 - x1069 * x2191 - x1069 * x732 - x1830 * x1982 -
    x1830 * x2095 - x1830 * x2179 + x1830 * x882 + x1831 * x1982 +
    x1831 * x2095 + x1831 * x2179 - x1831 * x882 + x1896 * x2187 +
    x1996 * x2270 + x1996 * x2271 - x1998 * x2270 + x7949 + x7955 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x1050 + x754) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (96000000.0 * sc[2] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[324] =
    -57000000.0 * sc[2] * x1036 - 80000000.0 * sc[2] * x1070 +
    30000000.0 * sc[2] * x1648 + 60000000.0 * sc[2] * x1834 -
    60000000.0 * sc[2] * x1835 - 100000000.0 * sc[2] * x1980 -
    96000000.0 * sc[2] * x553 - 96000000.0 * sc[2] * x566 +
    57000000.0 * sc[2] * x622 + 80000000.0 * sc[2] * x668 -
    30000000.0 * sc[2] * x898 - 96240000.0 * sc[2] * x909 +
    33000000.0 * sc[3] * x1036 - 33000000.0 * sc[3] * x622 + x1070 * x2123 +
    x1070 * x2191 + x1070 * x732 - x1834 * x1982 - x1834 * x2095 -
    x1834 * x2179 + x1834 * x882 + x1835 * x1982 + x1835 * x2095 +
    x1835 * x2179 - x1835 * x882 - x1998 * x2270 - x2123 * x668 + x2187 * x566 -
    x2191 * x668 + x2270 * x909 + x2271 * x909 - x668 * x732 + x7949 + x7984 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1036 - x622) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[347] =
    -100000000.0 * sc[2] * x1 - 96240000.0 * sc[2] * x1059 -
    80000000.0 * sc[2] * x1074 + 80000000.0 * sc[2] * x1077 -
    57000000.0 * sc[2] * x1297 + 57000000.0 * sc[2] * x130 -
    30000000.0 * sc[2] * x1666 + 30000000.0 * sc[2] * x1671 -
    96000000.0 * sc[2] * x1724 + 96000000.0 * sc[2] * x1823 +
    60000000.0 * sc[2] * x1838 - 60000000.0 * sc[2] * x1842 -
    96000000.0 * sc[2] * x1908 + 96240000.0 * sc[2] * x600 - sc[2] * x7459 +
    33000000.0 * sc[3] * x1297 - 33000000.0 * sc[3] * x130 + x1059 * x2270 +
    x1059 * x2271 + x1074 * x2123 + x1074 * x2191 + x1074 * x732 -
    x1077 * x2123 - x1077 * x2191 - x1077 * x732 - x1823 * x2187 -
    x1838 * x1982 - x1838 * x2095 - x1838 * x2179 + x1838 * x882 +
    x1842 * x1982 + x1842 * x2095 + x1842 * x2179 - x1842 * x882 +
    x1908 * x2187 - x2270 * x600 - x2271 * x600 + x7948 + x8016 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1297 - x130) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (96000000.0 * sc[2] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[370] =
    sc[1] * x2106 - 80000000.0 * sc[2] * x1078 + 80000000.0 * sc[2] * x1081 -
    30000000.0 * sc[2] * x1677 + 30000000.0 * sc[2] * x1681 -
    96000000.0 * sc[2] * x169 - 60000000.0 * sc[2] * x1848 +
    57000000.0 * sc[2] * x504 - 57000000.0 * sc[2] * x846 -
    100000000.0 * sc[2] - 33000000.0 * sc[3] * x504 +
    33000000.0 * sc[3] * x846 + sc[4] * x166 + x1078 * x2123 + x1078 * x2191 +
    x1078 * x2258 + x1078 * x732 - x1081 * x2123 - x1081 * x2191 -
    x1081 * x2258 - x1081 * x732 + x169 * x2187 + x169 * x2261 + x1848 * x1982 +
    x1848 * x2095 + x1848 * x2179 + x1848 * x2253 - x1848 * x882 + x7704 +
    x8042 + x8045 + x8055 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x504 + x846) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[393] =
    48000000.0 * sc[1] * x1150 - 80000000.0 * sc[2] * x1082 -
    20000000.0 * sc[2] * x1494 * x2054 - 30000000.0 * sc[2] * x1689 -
    60000000.0 * sc[2] * x1850 - 96000000.0 * sc[2] * x1892 -
    100000000.0 * sc[2] * x598 - sc[2] * x7466 - 10000000.0 * sc[2] * x768 -
    57000000.0 * sc[2] * x849 + 33000000.0 * sc[3] * x849 +
    20000000.0 * sc[4] * x7551 + x1082 * x2123 + x1082 * x2191 + x1082 * x2258 +
    x1082 * x732 - x1494 * x2284 + x1850 * x1982 + x1850 * x2095 +
    x1850 * x2179 + x1850 * x2253 - x1850 * x882 + x1892 * x2187 +
    x1892 * x2261 + x343 + x7397 + x8042 + x8045 + x8066 + x8073 + x8077 +
    x8079 + x8081 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x1080 + x849) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[416] =
    80200000.0 * sc[1] * x1299 - 80000000.0 * sc[2] * x1085 -
    30000000.0 * sc[2] * x1692 - 57000000.0 * sc[2] * x1782 -
    60000000.0 * sc[2] * x1855 - 96000000.0 * sc[2] * x1888 -
    96240000.0 * sc[2] * x1898 - 20000000.0 * sc[2] * x191 * x2054 +
    33000000.0 * sc[3] * x1782 + x1085 * x2123 + x1085 * x2191 + x1085 * x2258 +
    x1085 * x732 + x1855 * x1982 + x1855 * x2095 + x1855 * x2179 +
    x1855 * x2253 - x1855 * x882 + x1888 * x2187 + x1888 * x2261 +
    x1898 * x2270 + x1898 * x2271 - x191 * x2284 + x7662 + x8035 + x8041 +
    x8045 + x8066 + x8073 + x8077 + x8079 + x8081 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x1080 + x1782) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[439] =
    -57000000.0 * sc[2] * x1033 - 80000000.0 * sc[2] * x1086 +
    80000000.0 * sc[2] * x1087 + 96240000.0 * sc[2] * x1364 +
    30000000.0 * sc[2] * x1720 + 60000000.0 * sc[2] * x1825 -
    60000000.0 * sc[2] * x1827 - 30000000.0 * sc[2] * x184 +
    96000000.0 * sc[2] * x1845 - 96000000.0 * sc[2] * x1900 -
    96240000.0 * sc[2] * x1959 - 100000000.0 * sc[2] * x63 +
    57000000.0 * sc[2] * x971 + 33000000.0 * sc[3] * x1033 -
    33000000.0 * sc[3] * x971 + sc[4] * x7546 + x1086 * x2123 + x1086 * x2191 +
    x1086 * x732 - x1087 * x2123 - x1087 * x2191 - x1087 * x732 -
    x1364 * x2271 - x1825 * x1982 - x1825 * x2095 - x1825 * x2179 +
    x1825 * x882 + x1827 * x1982 + x1827 * x2095 + x1827 * x2179 -
    x1827 * x882 - x1845 * x2187 + x1900 * x2187 - x1905 * x2284 -
    x1905 * x888 + x1959 * x2270 + x1959 * x2271 + x7397 + x8035 + x8073 +
    x8136 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x1033 - x971) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[462] =
    -80000000.0 * sc[2] * x1090 - 96000000.0 * sc[2] * x1283 -
    30000000.0 * sc[2] * x1730 - 60000000.0 * sc[2] * x1832 -
    10000000.0 * sc[2] * x1893 - 96000000.0 * sc[2] * x1943 -
    96240000.0 * sc[2] * x557 - 57000000.0 * sc[2] * x929 +
    33000000.0 * sc[3] * x929 + x1090 * x2123 + x1090 * x2191 + x1090 * x2258 +
    x1090 * x732 + x1832 * x1982 + x1832 * x2095 + x1832 * x2179 +
    x1832 * x2253 - x1832 * x882 - x1905 * x2284 - x1905 * x888 +
    x1943 * x2187 + x1943 * x2261 + x2270 * x557 + x2271 * x557 + x7662 -
    x7694 + x8035 + x8041 + x8045 + x8066 + x8077 + x8079 + x8081 + x8149 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (-x1080 + x929) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[485] =
    -80000000.0 * sc[2] * x1099 + 80000000.0 * sc[2] * x1104 -
    30000000.0 * sc[2] * x1631 + 30000000.0 * sc[2] * x1670 -
    60000000.0 * sc[2] * x1846 - 96000000.0 * sc[2] * x1944 -
    57000000.0 * sc[2] * x568 + 57000000.0 * sc[2] * x892 +
    33000000.0 * sc[3] * x568 - 33000000.0 * sc[3] * x892 + x1099 * x2123 +
    x1099 * x2191 + x1099 * x2258 + x1099 * x732 - x1104 * x2123 -
    x1104 * x2191 - x1104 * x2258 - x1104 * x732 + x1846 * x1982 +
    x1846 * x2095 + x1846 * x2179 + x1846 * x2253 - x1846 * x882 +
    x1944 * x2187 + x1944 * x2261 + x7704 + x8042 + x8045 + x8055 +
    (-80000000.0 * sc[2] * x674 - 30000000.0 * sc[2] * x675 -
     60000000.0 * sc[2] * x677 + 96000000.0 * sc[2] * x680 + x1982 * x677 +
     x2095 * x677 + x2123 * x674 + x2179 * x677 - x2187 * x680 + x2191 * x674 +
     x2253 * x677 + x2258 * x674 - x2261 * x680 + x674 * x732 - x677 * x882) *
      (x568 - x892) +
    (100000000.0 * sc[2] * x658 - 30000000.0 * sc[2] * x676 -
     60000000.0 * sc[2] * x678 - 96000000.0 * sc[2] * x681 + x1982 * x678 +
     x2095 * x678 + x2179 * x678 + x2187 * x681 + x2253 * x678 + x2261 * x681 -
     x678 * x882) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (100000000.0 * sc[2] * x65 + x2284 * x230 + x230 * x888) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (96000000.0 * sc[2] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (100000000.0 * sc[2] * x599 + 96240000.0 * sc[2] * x603 +
     10000000.0 * sc[2] * x642 - 60000000.0 * sc[2] * x679 + x1982 * x679 +
     x2095 * x679 + x2179 * x679 + x2253 * x679 - x2270 * x603 - x2271 * x603 +
     x2272 * x642 - x679 * x882) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (96240000.0 * sc[2] * x561 - 96000000.0 * sc[2] * x682 + x2187 * x682 +
     x2261 * x682 - x2270 * x561 - x2271 * x561 + x2284 * x437 + x437 * x888) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[3] = 40000000.0 * sc[3] * x1014 + 33000000.0 * sc[3] * x1465 -
         90000.0 * sc[3] * x520 - 158000.0 * sc[3] * x657 -
         10000000.0 * sc[3] * x819 - sc[3] * x866 - 20000.0 * sc[3] * x927 +
         20000.0 * sc[3] * x956 - 33000000.0 * sc[3] * x972 -
         40000000.0 * sc[3] * x987 + x1161 + x1470 * x760 - x1470 * x823 +
         x1557 * x644 - x1557 * x855 + x1887 * x2272 - x1887 * x2324 +
         x2147 * x827 - x2147 * x961 - x2187 * x760 + x2187 * x823 -
         x2256 * x760 + x2256 * x823 - x2257 * x644 + x2257 * x855 +
         x2284 * x657 + x242 * x827 - x242 * x961 - x351 * x827 + x351 * x961 -
         x373 * x760 + x373 * x823 + x694 * x827 - x694 * x961 -
         288000.0 * x7331 + 288000.0 * x7332 + x8199 + x827 * x882 -
         x882 * x961 +
         (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 +
          x2147 * x677 + x2187 * x680 + x2256 * x680 - x2257 * x674 +
          x242 * x677 - x351 * x677 + x373 * x680 + x677 * x694 + x677 * x882) *
           (-x1465 + x972) +
         (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
          x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 -
          x351 * x678 - x373 * x681 + x678 * x694 + x678 * x882) *
           (x644 - x855 + (x674) * (-x1465 + x972)) +
         (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
           (x760 - x823 + (-x680) * (-x1465 + x972) +
            (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
            (x682) *
              (x827 - x961 + (x677) * (-x1465 + x972) +
               (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
               (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                         (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
         (90000.0 * sc[3] * x555) *
           (x927 - x956 +
            (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
            (-x561) *
              (x827 - x961 + (x677) * (-x1465 + x972) +
               (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
               (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                         (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
         (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
          300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
          x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
           (-x1014 + x987 + (x675) * (-x1465 + x972) +
            (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
         (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
          300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
          x2284 * x437 - x373 * x682) *
           (x827 - x961 + (x677) * (-x1465 + x972) +
            (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
            (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                      (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[26] =
    5280000.0 * sc[11] * sc[1] * x2088 - 158000.0 * sc[3] * x1200 -
    40000000.0 * sc[3] * x1211 + 40000000.0 * sc[3] * x1389 -
    20000.0 * sc[3] * x1561 - 10000000.0 * sc[3] * x1637 -
    33000000.0 * sc[3] * x1649 + 33000000.0 * sc[3] * x1694 +
    20000.0 * sc[3] * x494 - 90000.0 * sc[3] * x540 + sc[6] * x46 +
    x1030 * x1470 - x1030 * x2187 - x1030 * x2256 - x1030 * x373 +
    x1064 * x2147 + x1064 * x242 - x1064 * x351 + x1064 * x694 + x1064 * x882 +
    x1161 + 28000000.0 * x1177 * x1355 + x1200 * x2284 + x1370 * x2272 -
    x1370 * x2324 - x1470 * x1508 + x1508 * x2187 + x1508 * x2256 +
    x1508 * x373 + x1557 * x893 - x1557 * x899 - x2147 * x969 + x218 -
    x2257 * x893 + x2257 * x899 - x242 * x969 + x351 * x969 - x694 * x969 +
    x8221 + x8228 - x882 * x969 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1649 - x1694) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (90000.0 * sc[3] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[49] =
    sc[11] * x7413 + 240000.0 * sc[2] * x17 * x874 - 158000.0 * sc[3] * x1075 -
    90000.0 * sc[3] * x1208 - 40000000.0 * sc[3] * x1419 +
    40000000.0 * sc[3] * x1461 - 20000.0 * sc[3] * x1660 -
    10000000.0 * sc[3] * x1709 + 20000.0 * sc[3] * x1726 -
    33000000.0 * sc[3] * x1772 + 33000000.0 * sc[3] * x1785 + sc[4] * x5606 +
    20000000.0 * sc[6] + x1075 * x2284 + x1161 + x1470 * x1639 - x1470 * x1643 +
    x1557 * x970 - x1557 * x973 - x1639 * x2187 - x1639 * x2256 - x1639 * x373 +
    x1640 * x2147 + x1640 * x242 - x1640 * x351 + x1640 * x694 + x1640 * x882 +
    x1643 * x2187 + x1643 * x2256 + x1643 * x373 + x1674 * x2272 -
    x1674 * x2324 + x209 * x2278 - x2147 * x718 - x2257 * x970 + x2257 * x973 -
    x242 * x718 + x351 * x718 + 33000000.0 * x385 * x435 + x611 * x901 -
    x694 * x718 - x718 * x882 + x8221 + x8255 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1772 - x1785) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (90000.0 * sc[3] * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[72] =
    -120000.0 * refC * x17 * x7330 - sc[0] * x866 - sc[12] * x8321 -
    sc[14] * x8316 - 300000.0 * sc[15] * x1321 - 1600000.0 * sc[16] * x8258 -
    sc[20] * x8265 + 40000000.0 * sc[3] * x1517 - 90000.0 * sc[3] * x1658 -
    158000.0 * sc[3] * x1708 - 10000000.0 * sc[3] * x1744 -
    20000.0 * sc[3] * x1757 + 20000.0 * sc[3] * x1759 -
    33000000.0 * sc[3] * x1822 + 33000000.0 * sc[3] * x1852 -
    40000000.0 * sc[3] * x854 - sc[5] * x1320 - 130000.0 * sc[7] * x8307 -
    420000000.0 * sc[7] * x8310 - sc[8] * x7511 - sc[8] * x8325 -
    sc[9] * x8262 + 10000000.0 * x1176 + 158000.0 * x1209 + 90000.0 * x1284 +
    x1470 * x1673 - x1470 * x1685 + x1557 * x977 - x1557 * x978 -
    x1661 * x2147 - x1661 * x242 + x1661 * x351 - x1661 * x694 - x1661 * x882 +
    x1662 * x2147 + x1662 * x242 - x1662 * x351 + x1662 * x694 + x1662 * x882 -
    x1673 * x2187 - x1673 * x2256 - x1673 * x373 + x1685 * x2187 +
    x1685 * x2256 + x1685 * x373 + x1708 * x2284 + x1766 * x2272 -
    x1766 * x2324 - x2186 * x233 - x2255 * x233 - x2257 * x977 + x2257 * x978 -
    x2273 * x901 - x233 * x353 - 20000.0 * x324 -
    7600000.0 * x435 * exp(-201.28666632188799 * invT) + 90000.0 * x478 -
    33000000.0 * x518 + 10000000.0 * x564 + x5757 - 40000000.0 * x597 -
    13200000.0 * x645 * exp(-754.82499870708 * invT) - x7494 - x7496 +
    158000.0 * x778 + x8221 + x8312 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1822 - x1852) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (90000.0 * sc[3] * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[95] =
    18000.0 * sc[10] * x1178 * x1833 + sc[12] * x8359 + sc[2] * x5606 -
    40000000.0 * sc[3] * x1519 + 40000000.0 * sc[3] * x1521 -
    158000.0 * sc[3] * x1745 - 10000000.0 * sc[3] * x1774 -
    20000.0 * sc[3] * x1790 - 90000.0 * sc[3] * x182 + 20000.0 * sc[3] * x1824 -
    33000000.0 * sc[3] * x1875 + 33000000.0 * sc[3] * x1903 + sc[6] * x8349 +
    x1161 + 28000000.0 * x1248 * x1355 - x1470 * x1680 + x1470 * x1710 +
    x1557 * x980 - x1557 * x981 + x1680 * x2187 + x1680 * x2256 + x1680 * x373 -
    x1687 * x2147 - x1687 * x242 + x1687 * x351 - x1687 * x694 - x1687 * x882 -
    x1710 * x2187 - x1710 * x2256 - x1710 * x373 + x1745 * x2284 +
    x1889 * x2272 - x1889 * x2324 + 1600000.0 * x2100 * x8328 + x2147 * x345 +
    x2178 * x435 - x2257 * x980 + x2257 * x981 + x242 * x345 - x345 * x351 +
    x345 * x694 + x345 * x882 - x7548 + x8221 + x8364 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1875 - x1903) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (90000.0 * sc[3] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[118] =
    refC * sc[6] * x5969 + 12000000.0 * sc[10] * x1361 - sc[1] * sc[3] * x127 -
    sc[3] * x1320 - 40000000.0 * sc[3] * x1523 + 40000000.0 * sc[3] * x1533 -
    158000.0 * sc[3] * x1781 - 20000.0 * sc[3] * x1829 -
    10000000.0 * sc[3] * x1840 + 20000.0 * sc[3] * x1860 -
    90000.0 * sc[3] * x1897 - 33000000.0 * sc[3] * x1946 +
    33000000.0 * sc[3] * x1986 + x1470 * x1748 - x1470 * x1756 + x1557 * x989 -
    x1557 * x990 - x1669 * x2147 - x1669 * x242 + x1669 * x351 - x1669 * x694 -
    x1669 * x882 - x1748 * x2187 - x1748 * x2256 - x1748 * x373 +
    x1751 * x2147 + x1751 * x242 - x1751 * x351 + x1751 * x694 + x1751 * x882 +
    x1756 * x2187 + x1756 * x2256 + x1756 * x373 + x1781 * x2284 +
    x1891 * x2272 - x1891 * x2324 - x2257 * x989 + x2257 * x990 -
    1848000.0 * x7331 + 1848000.0 * x7332 + x8393 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1946 - x1986) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (90000.0 * sc[3] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[141] =
    sc[10] * x90 + sc[12] * x8425 + sc[13] * x114 + 20000.0 * sc[14] * x1307 +
    140000.0 * sc[17] * x1182 + 2660000.0 * sc[19] + sc[1] * x46 +
    90000.0 * sc[20] * x1280 + 20000000.0 * sc[2] - 40000000.0 * sc[3] * x1534 +
    40000000.0 * sc[3] * x1535 - 158000.0 * sc[3] * x1839 -
    20000.0 * sc[3] * x1881 + 20000.0 * sc[3] * x1885 -
    90000.0 * sc[3] * x1953 - 33000000.0 * sc[3] * x2026 +
    33000000.0 * sc[3] * x2051 + sc[4] * x8349 + 1000000.0 * sc[8] +
    x1008 * x1557 - x1008 * x2257 - x1010 * x1557 + x1010 * x2257 +
    x1366 * x2272 - x1366 * x2324 - x1470 * x1764 + x1470 * x323 +
    x1597 * x435 - x1760 * x2147 - x1760 * x242 + x1760 * x351 - x1760 * x694 -
    x1760 * x882 + x1762 * x2147 + x1762 * x242 - x1762 * x351 + x1762 * x694 +
    x1762 * x882 + x1764 * x2187 + x1764 * x2256 + x1764 * x373 +
    x1839 * x2284 - x2187 * x323 - x2256 * x323 + x233 * x753 - x323 * x373 +
    x6066 + x8430 + x8433 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x2026 - x2051) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (90000.0 * sc[3] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[164] =
    -40000000.0 * sc[3] * x1563 + 40000000.0 * sc[3] * x1573 -
    20000.0 * sc[3] * x1911 + 20000.0 * sc[3] * x1951 -
    33000000.0 * sc[3] * x2093 + 33000000.0 * sc[3] * x2104 -
    130000.0 * sc[3] * x8307 - 420000000.0 * sc[3] * x8310 + x1011 * x1557 -
    x1011 * x2257 - x1013 * x1557 + x1013 * x2257 - x1470 * x1773 +
    x1470 * x225 - x1768 * x2147 - x1768 * x242 + x1768 * x351 - x1768 * x694 -
    x1768 * x882 + x1769 * x2147 + x1769 * x242 - x1769 * x351 + x1769 * x694 +
    x1769 * x882 + x1773 * x2187 + x1773 * x2256 + x1773 * x373 - x2187 * x225 -
    x225 * x2256 - x225 * x373 + x8458 + x8464 + x8465 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x2093 - x2104) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (90000.0 * sc[3] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[187] =
    -158000.0 * sc[3] * x1197 - 33000000.0 * sc[3] * x1449 -
    40000000.0 * sc[3] * x1574 + 40000000.0 * sc[3] * x1575 -
    20000.0 * sc[3] * x1954 + 20000.0 * sc[3] * x1957 +
    33000000.0 * sc[3] * x2150 - 90000.0 * sc[3] * x447 - sc[3] * x7511 -
    sc[3] * x8325 + 1000000.0 * sc[6] + x1017 * x1557 - x1017 * x2257 -
    x1018 * x1557 + x1018 * x2257 + x1197 * x2284 + x1470 * x1779 -
    x1470 * x1784 - x1775 * x2147 - x1775 * x242 + x1775 * x351 - x1775 * x694 -
    x1775 * x882 + x1776 * x2147 + x1776 * x242 - x1776 * x351 + x1776 * x694 +
    x1776 * x882 - x1779 * x2187 - x1779 * x2256 - x1779 * x373 +
    x1784 * x2187 + x1784 * x2256 + x1784 * x373 + x2272 * x839 - x2324 * x839 +
    x8433 + x8496 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1449 - x2150) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (90000.0 * sc[3] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[210] =
    -158000.0 * sc[3] * x173 - 20000.0 * sc[3] * x1960 +
    20000.0 * sc[3] * x1966 - 10000000.0 * sc[3] * x1994 -
    90000.0 * sc[3] * x2003 - 33000000.0 * sc[3] * x2145 +
    33000000.0 * sc[3] * x2193 - 40000000.0 * sc[3] * x796 - sc[3] * x8262 +
    40000000.0 * sc[3] * x986 + x1019 * x1557 - x1019 * x2257 - x1020 * x1557 +
    x1020 * x2257 + x1161 + x1470 * x1821 - x1470 * x1856 + x173 * x2284 -
    x1778 * x2147 - x1778 * x242 + x1778 * x351 - x1778 * x694 - x1778 * x882 +
    x1780 * x2147 + x1780 * x242 - x1780 * x351 + x1780 * x694 + x1780 * x882 -
    x1821 * x2187 - x1821 * x2256 - x1821 * x373 + x1856 * x2187 +
    x1856 * x2256 + x1856 * x373 + x2272 * x639 - x2324 * x639 -
    240000.0 * x7331 + 240000.0 * x7332 + x8525 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x2145 - x2193) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (90000.0 * sc[3] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[233] =
    18000.0 * sc[12] * x1178 * x66 + 28000000.0 * sc[1] * x1355 * x66 -
    40000000.0 * sc[3] * x1584 + 40000000.0 * sc[3] * x1586 -
    20000.0 * sc[3] * x1971 + 20000.0 * sc[3] * x1973 -
    10000000.0 * sc[3] * x1974 - 90000.0 * sc[3] * x1981 +
    33000000.0 * sc[3] * x2275 - 158000.0 * sc[3] * x436 -
    33000000.0 * sc[3] * x468 + 12000000.0 * sc[5] * x1361 + sc[6] * x90 +
    x1002 * x2272 - x1002 * x2324 + x1023 * x1557 - x1023 * x2257 -
    x1025 * x1557 + x1025 * x2257 + 3200000.0 * x1177 * x8328 + x1470 * x1836 -
    x1470 * x1841 + x1678 * x2147 + x1678 * x242 - x1678 * x351 + x1678 * x694 +
    x1678 * x882 - x1797 * x2147 - x1797 * x242 + x1797 * x351 - x1797 * x694 -
    x1797 * x882 - x1836 * x2187 - x1836 * x2256 - x1836 * x373 +
    x1841 * x2187 + x1841 * x2256 + x1841 * x373 - 2100000.0 * x2045 +
    x2284 * x436 + 2100000.0 * x660 - 210000.0 * x7331 + 210000.0 * x7332 -
    x7794 + x8559 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (-x2275 + x468) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (90000.0 * sc[3] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[256] =
    2640000.0 * ((sc[1]) * (sc[1])) * x2088 + sc[2] * x7413 -
    33000000.0 * sc[3] * x1516 - 40000000.0 * sc[3] * x1587 +
    40000000.0 * sc[3] * x1588 - 158000.0 * sc[3] * x173 +
    20000.0 * sc[3] * x1983 + 33000000.0 * sc[3] * x2331 -
    10000000.0 * sc[3] * x818 - 20000.0 * sc[3] * x926 -
    90000.0 * sc[3] * x951 + x1027 * x1557 - x1027 * x2257 - x1031 * x1557 +
    x1031 * x2257 - x1470 * x1876 + x1470 * x758 + x1663 * x2147 +
    x1663 * x242 - x1663 * x351 + x1663 * x694 + x1663 * x882 + x173 * x2284 -
    x1750 * x2147 - x1750 * x242 + x1750 * x351 - x1750 * x694 - x1750 * x882 +
    x1876 * x2187 + x1876 * x2256 + x1876 * x373 - 4200000.0 * x2045 -
    x2187 * x758 - x2256 * x758 + x2272 * x639 - x2324 * x639 +
    10000000.0 * x312 * x645 - x373 * x758 + 4200000.0 * x660 -
    432000.0 * x7331 + 432000.0 * x7332 + x8586 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1516 - x2331) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (90000.0 * sc[3] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[279] =
    -33000000.0 * sc[3] * x1407 + 40000000.0 * sc[3] * x1459 -
    90000.0 * sc[3] * x1559 - 40000000.0 * sc[3] * x1589 -
    20000.0 * sc[3] * x1984 + 33000000.0 * sc[3] * x2367 +
    20000.0 * sc[3] * x652 - 158000.0 * sc[3] * x790 - sc[3] * x8321 +
    sc[4] * x8359 + sc[6] * x8425 + x1063 * x1557 - x1063 * x2257 -
    x1065 * x1557 + x1065 * x2257 + 18000.0 * x1177 * x1178 + x1470 * x1879 -
    x1470 * x1894 + x1531 * x2272 - x1531 * x2324 - x1761 * x2147 -
    x1761 * x242 + x1761 * x351 - x1761 * x694 - x1761 * x882 + x1765 * x2147 +
    x1765 * x242 - x1765 * x351 + x1765 * x694 + x1765 * x882 - x1879 * x2187 -
    x1879 * x2256 - x1879 * x373 + x1894 * x2187 + x1894 * x2256 +
    x1894 * x373 + x2284 * x790 + x375 * x435 + x8433 + x8613 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1407 - x2367) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (90000.0 * sc[3] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[302] =
    33000000.0 * sc[3] * x1050 - 10000000.0 * sc[3] * x1506 -
    90000.0 * sc[3] * x1989 - 20000.0 * sc[3] * x1996 -
    33000000.0 * sc[3] * x754 - 40000000.0 * sc[3] * x884 +
    40000000.0 * sc[3] * x890 + sc[6] * x114 + x1068 * x1557 - x1068 * x2257 -
    x1069 * x1557 + x1069 * x2257 + x1470 * x1896 - x1470 * x1901 -
    x1830 * x2147 - x1830 * x242 + x1830 * x351 - x1830 * x694 - x1830 * x882 +
    x1831 * x2147 + x1831 * x242 - x1831 * x351 + x1831 * x694 + x1831 * x882 -
    x1896 * x2187 - x1896 * x2256 - x1896 * x373 + x8641 + x8648 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (-x1050 + x754) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (90000.0 * sc[3] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[325] =
    -33000000.0 * sc[3] * x1036 + 40000000.0 * sc[3] * x1648 -
    10000000.0 * sc[3] * x1980 - 90000.0 * sc[3] * x553 +
    33000000.0 * sc[3] * x622 - sc[3] * x8316 - 40000000.0 * sc[3] * x898 -
    20000.0 * sc[3] * x909 + 20000.0 * sc[6] * x1307 + x1070 * x1557 -
    x1070 * x2257 - x1470 * x1901 + x1470 * x566 - x1557 * x668 -
    x1834 * x2147 - x1834 * x242 + x1834 * x351 - x1834 * x694 - x1834 * x882 +
    x1835 * x2147 + x1835 * x242 - x1835 * x351 + x1835 * x694 + x1835 * x882 -
    x2187 * x566 - x2256 * x566 + x2257 * x668 - x373 * x566 + x8648 + x8665 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1036 - x622) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (90000.0 * sc[3] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[348] =
    -10000000.0 * sc[3] * x1 - 20000.0 * sc[3] * x1059 -
    33000000.0 * sc[3] * x1297 + 33000000.0 * sc[3] * x130 -
    300000.0 * sc[3] * x1321 - 40000000.0 * sc[3] * x1666 +
    40000000.0 * sc[3] * x1671 - 90000.0 * sc[3] * x1724 +
    20000.0 * sc[3] * x600 + x1074 * x1557 - x1074 * x2257 - x1077 * x1557 +
    x1077 * x2257 - x1470 * x1823 + x1470 * x1908 + x1823 * x2187 +
    x1823 * x2256 + x1823 * x373 - x1838 * x2147 - x1838 * x242 + x1838 * x351 -
    x1838 * x694 - x1838 * x882 + x1842 * x2147 + x1842 * x242 - x1842 * x351 +
    x1842 * x694 + x1842 * x882 - x1908 * x2187 - x1908 * x2256 - x1908 * x373 -
    4200000.0 * x2045 + 4200000.0 * x660 + x8647 + x8691 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1297 - x130) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (90000.0 * sc[3] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[371] =
    -40000000.0 * sc[3] * x1677 + 40000000.0 * sc[3] * x1681 -
    20000.0 * sc[3] * x1789 + 33000000.0 * sc[3] * x504 -
    1600000.0 * sc[3] * x8258 - 33000000.0 * sc[3] * x846 + x1078 * x1557 -
    x1078 * x2257 - x1081 * x1557 + x1081 * x2257 + x1470 * x169 -
    x169 * x2187 - x169 * x2256 - x169 * x373 + x1848 * x2147 + x1848 * x242 -
    x1848 * x351 + x1848 * x694 + x1848 * x882 + x8464 + x8465 + x8722 + x8725 +
    x8730 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (-x504 + x846) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (90000.0 * sc[3] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[394] =
    -158000.0 * sc[3] * x1494 + 40000000.0 * sc[3] * x1681 -
    40000000.0 * sc[3] * x1689 - 20000.0 * sc[3] * x1789 -
    90000.0 * sc[3] * x1989 - 10000000.0 * sc[3] * x598 -
    33000000.0 * sc[3] * x849 + 140000.0 * sc[6] * x1182 + x1082 * x1557 -
    x1082 * x2257 + x1161 + x1470 * x1892 + x1494 * x2284 + x1850 * x2147 +
    x1850 * x242 - x1850 * x351 + x1850 * x694 + x1850 * x882 - x1892 * x2187 -
    x1892 * x2256 - x1892 * x373 - x1893 * x2324 + x7694 + x8221 + x8722 +
    x8725 + x8730 + x8745 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (-x1080 + x849) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (90000.0 * sc[3] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[417] =
    40000000.0 * sc[3] * x1681 - 40000000.0 * sc[3] * x1692 -
    33000000.0 * sc[3] * x1782 - 20000.0 * sc[3] * x1898 -
    158000.0 * sc[3] * x191 + 300000.0 * sc[6] * x1898 + x1085 * x1557 -
    x1085 * x2257 + x1470 * x1888 + x1855 * x2147 + x1855 * x242 -
    x1855 * x351 + x1855 * x694 + x1855 * x882 - x1888 * x2187 - x1888 * x2256 -
    x1888 * x373 + x191 * x2284 + x8464 + x8722 + x8725 + x8727 + x8728 +
    x8745 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (-x1080 + x1782) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (90000.0 * sc[3] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[440] =
    -33000000.0 * sc[3] * x1033 + 20000.0 * sc[3] * x1364 +
    40000000.0 * sc[3] * x1720 - 40000000.0 * sc[3] * x184 -
    20000.0 * sc[3] * x1959 - 90000.0 * sc[3] * x1989 -
    10000000.0 * sc[3] * x63 + 33000000.0 * sc[3] * x971 +
    300000.0 * sc[6] * x1959 + 2660000.0 * sc[6] + x1086 * x1557 -
    x1086 * x2257 - x1087 * x1557 + x1087 * x2257 + x1161 + x1470 * x1900 -
    x1825 * x2147 - x1825 * x242 + x1825 * x351 - x1825 * x694 - x1825 * x882 +
    x1827 * x2147 + x1827 * x242 - x1827 * x351 + x1827 * x694 + x1827 * x882 +
    x1845 * x2187 + x1845 * x2256 + x1845 * x373 - x1893 * x2324 -
    x1900 * x2187 - x1900 * x2256 - x1900 * x373 + x7694 + x8221 + x8465 +
    x8727 + x8728 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x1033 - x971) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (90000.0 * sc[3] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[463] =
    -90000.0 * sc[3] * x1283 + 40000000.0 * sc[3] * x1681 -
    40000000.0 * sc[3] * x1730 - 20000.0 * sc[3] * x557 - sc[3] * x8265 -
    33000000.0 * sc[3] * x929 + 90000.0 * sc[6] * x1280 +
    300000.0 * sc[6] * x557 + x1090 * x1557 - x1090 * x2257 + x1470 * x1943 +
    x1832 * x2147 + x1832 * x242 - x1832 * x351 + x1832 * x694 + x1832 * x882 -
    x1893 * x2324 - x1943 * x2187 - x1943 * x2256 - x1943 * x373 + x7694 +
    x8433 + x8465 + x8722 + x8725 + x8727 + x8728 + x8745 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (-x1080 + x929) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (90000.0 * sc[3] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[486] =
    refC * sc[6] * x6063 - sc[1] * sc[3] * x1041 - 40000000.0 * sc[3] * x1631 +
    40000000.0 * sc[3] * x1670 - 20000.0 * sc[3] * x1789 -
    90000.0 * sc[3] * x1989 - 10000000.0 * sc[3] * x411 -
    33000000.0 * sc[3] * x568 + 33000000.0 * sc[3] * x892 + x1099 * x1557 -
    x1099 * x2257 - x1104 * x1557 + x1104 * x2257 + x1470 * x1944 +
    x1846 * x2147 + x1846 * x242 - x1846 * x351 + x1846 * x694 + x1846 * x882 -
    x1893 * x2324 - x1944 * x2187 - x1944 * x2256 - x1944 * x373 + x7694 +
    x8221 + x8465 + x8722 + x8725 + x8730 +
    (-40000000.0 * sc[3] * x675 - x1470 * x680 + x1557 * x674 + x2147 * x677 +
     x2187 * x680 + x2256 * x680 - x2257 * x674 + x242 * x677 - x351 * x677 +
     x373 * x680 + x677 * x694 + x677 * x882) *
      (x568 - x892) +
    (10000000.0 * sc[3] * x658 - 40000000.0 * sc[3] * x676 + x1470 * x681 +
     x2147 * x678 - x2187 * x681 - x2256 * x681 + x242 * x678 - x351 * x678 -
     x373 * x681 + x678 * x694 + x678 * x882) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (158000.0 * sc[3] * x230 + 10000000.0 * sc[3] * x65 - x2284 * x230) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (90000.0 * sc[3] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (10000000.0 * sc[3] * x599 + 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 + x2147 * x679 - x2272 * x642 + x2324 * x642 +
     x242 * x679 - x351 * x679 + x679 * x694 + x679 * x882) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (158000.0 * sc[3] * x437 + 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 - x2187 * x682 - x2256 * x682 -
     x2284 * x437 - x373 * x682) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[4] =
    20000000.0 * sc[2] * x2054 * x657 + 18000.0 * sc[3] * x657 +
    30000000.0 * sc[4] * x1014 + 30000000.0 * sc[4] * x1465 -
    5000000.0 * sc[4] * x1887 - 24000000.0 * sc[4] * x520 -
    20000000.0 * sc[4] * x644 - 30110000.0 * sc[4] * x760 -
    20000000.0 * sc[4] * x819 + 30110000.0 * sc[4] * x823 -
    50000000.0 * sc[4] * x827 + 20000000.0 * sc[4] * x855 +
    50000000.0 * sc[4] * x961 - 30000000.0 * sc[4] * x972 -
    30000000.0 * sc[4] * x987 + 10000000.0 * sc[6] * x760 -
    10000000.0 * sc[6] * x823 + 24000000.0 * sc[6] * x927 -
    24000000.0 * sc[6] * x956 - x1032 - x107 * x644 + x107 * x855 -
    x1465 * x8818 + x1500 - x1887 * x872 + x2098 * x827 - x2098 * x961 -
    x2179 * x827 + x2179 * x961 - x2261 * x760 + x2261 * x823 - x2266 * x657 -
    x2270 * x927 + x2270 * x956 + x2328 * x760 - x2328 * x823 + x2330 * x644 -
    x2330 * x855 - x242 * x827 + x242 * x961 - x341 * x657 + x8818 * x972 +
    x883 * x927 - x883 * x956 + x8850 + x8855 + x8863 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x1465 + x972) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[27] =
    sc[11] * x471 + 30000000.0 * sc[12] * x1342 + 20000000.0 * sc[12] * x1425 +
    20000000.0 * sc[17] * x1164 + sc[17] * x2174 + 30000000.0 * sc[2] * x1064 +
    500000.0 * sc[2] * x40 * x874 - 30000000.0 * sc[2] * x969 +
    18000.0 * sc[3] * x1200 + sc[3] * x28 - 30110000.0 * sc[4] * x1030 -
    50000000.0 * sc[4] * x1064 - 30000000.0 * sc[4] * x1211 -
    5000000.0 * sc[4] * x1370 + 30000000.0 * sc[4] * x1389 +
    30110000.0 * sc[4] * x1508 - 20000000.0 * sc[4] * x1637 -
    30000000.0 * sc[4] * x1649 + 30000000.0 * sc[4] * x1694 -
    24000000.0 * sc[4] * x540 - 20000000.0 * sc[4] * x893 +
    20000000.0 * sc[4] * x899 + 50000000.0 * sc[4] * x969 + sc[5] * x247 +
    10000000.0 * sc[6] * x1030 - 10000000.0 * sc[6] * x1508 +
    24000000.0 * sc[6] * x1561 - 24000000.0 * sc[6] * x494 +
    141600000.0 * sc[6] * exp(-150.96499974141599 * invT) + sc[7] * x2103 -
    x1030 * x2261 + x1030 * x2328 + x1060 + x1064 * x2098 - x1064 * x2179 -
    x1064 * x242 - x107 * x893 + x107 * x899 - 28000000.0 * x1177 * x1355 -
    x1200 * x2266 - x1200 * x341 + x1200 * x888 - x1370 * x872 + x1508 * x2261 -
    x1508 * x2328 - x1561 * x2270 + x1561 * x883 + x1649 * x8818 -
    x1694 * x8818 - x2098 * x969 + x2179 * x969 + x2270 * x494 + x2330 * x893 -
    x2330 * x899 + x242 * x969 + 30000000.0 * x392 * x435 - x494 * x883 +
    x5500 + x8930 + x8935 + x8942 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1649 - x1694) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[50] =
    sc[0] * x878 + sc[12] * x7488 + sc[14] * x7480 + sc[15] * x7459 +
    10000000.0 * sc[17] * x768 + 500000.0 * sc[1] * x40 * x874 +
    20000000.0 * sc[2] * x1075 * x2054 + 18000.0 * sc[3] * x1075 +
    28000000.0 * sc[3] * x1419 - 28000000.0 * sc[3] * x1461 -
    24000000.0 * sc[4] * x1208 - 30000000.0 * sc[4] * x1419 +
    30000000.0 * sc[4] * x1461 - 30110000.0 * sc[4] * x1639 -
    50000000.0 * sc[4] * x1640 + 30110000.0 * sc[4] * x1643 -
    5000000.0 * sc[4] * x1674 - 20000000.0 * sc[4] * x1709 -
    30000000.0 * sc[4] * x1772 + 30000000.0 * sc[4] * x1785 - sc[4] * x5606 +
    50000000.0 * sc[4] * x718 - 20000000.0 * sc[4] * x970 +
    20000000.0 * sc[4] * x973 + 0.0714 * sc[5] * x7471 +
    10000000.0 * sc[6] * x1639 - 10000000.0 * sc[6] * x1643 +
    24000000.0 * sc[6] * x1660 - 24000000.0 * sc[6] * x1726 +
    20000000.0 * sc[6] + sc[7] * x7409 - x107 * x970 + x107 * x973 -
    x1075 * x2266 - x1075 * x341 - x1639 * x2261 + x1639 * x2328 +
    x1640 * x2098 - x1640 * x2179 - x1640 * x242 + x1643 * x2261 -
    x1643 * x2328 - x1660 * x2270 + x1660 * x883 - x1674 * x872 +
    x1726 * x2270 - x1726 * x883 + x1772 * x8818 - x1785 * x8818 -
    x2098 * x718 + x2179 * x718 + x2330 * x970 - x2330 * x973 + x242 * x718 +
    x38 + x5500 + x5685 + x785 + x8935 + x8978 + x8983 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1772 - x1785) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[73] =
    1600000.0 * sc[16] * x8258 + sc[1] * x28 - 28000000.0 * sc[3] * x1517 +
    18000.0 * sc[3] * x1708 + 28000000.0 * sc[3] * x854 +
    30000000.0 * sc[4] * x1517 - 24000000.0 * sc[4] * x1658 +
    50000000.0 * sc[4] * x1661 - 50000000.0 * sc[4] * x1662 -
    30110000.0 * sc[4] * x1673 + 30110000.0 * sc[4] * x1685 -
    20000000.0 * sc[4] * x1744 - 5000000.0 * sc[4] * x1766 -
    30000000.0 * sc[4] * x1822 + 30000000.0 * sc[4] * x1852 -
    30000000.0 * sc[4] * x854 - 20000000.0 * sc[4] * x977 +
    20000000.0 * sc[4] * x978 + sc[5] * x1320 + 10000000.0 * sc[6] * x1673 -
    10000000.0 * sc[6] * x1685 + 24000000.0 * sc[6] * x1757 -
    24000000.0 * sc[6] * x1759 - x107 * x977 + x107 * x978 - 18000.0 * x1209 -
    x1661 * x2098 + x1661 * x2179 + x1661 * x242 + x1662 * x2098 -
    x1662 * x2179 - x1662 * x242 - x1673 * x2261 + x1673 * x2328 +
    x1685 * x2261 - x1685 * x2328 - x1708 * x2266 - x1708 * x341 +
    x1708 * x888 - x1757 * x2270 + x1757 * x883 + x1759 * x2270 - x1759 * x883 -
    x1766 * x872 + x1822 * x8818 - x1852 * x8818 + x2330 * x977 - x2330 * x978 +
    x5500 + x5765 + 28000000.0 * x597 +
    10560000.0 * x645 * exp(-754.82499870708 * invT) - x7496 - 18000.0 * x778 +
    x8935 + x9020 + x9025 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1822 - x1852) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[96] =
    -18000.0 * sc[10] * x1178 * x1833 - 30000000.0 * sc[10] * x1217 -
    sc[11] * x9081 - sc[13] * x5835 - sc[13] * x9093 - sc[14] * x9097 -
    sc[15] * x9086 - sc[16] * x166 - 7500000.0 * sc[17] * x415 -
    20000000.0 * sc[17] * x7551 - sc[18] * x9026 - sc[19] * x7546 -
    sc[20] * x9036 - 30000000.0 * sc[2] * x1687 + 30000000.0 * sc[2] * x345 -
    sc[2] * x5606 + 18000.0 * sc[3] * x1745 - 30000000.0 * sc[4] * x1519 +
    30000000.0 * sc[4] * x1521 + 30110000.0 * sc[4] * x1680 +
    50000000.0 * sc[4] * x1687 - 30110000.0 * sc[4] * x1710 -
    20000000.0 * sc[4] * x1774 - 24000000.0 * sc[4] * x182 -
    30000000.0 * sc[4] * x1875 - 5000000.0 * sc[4] * x1889 +
    30000000.0 * sc[4] * x1903 - 50000000.0 * sc[4] * x345 -
    9200000.0 * sc[4] * x40 * x8873 *
      exp(855.46833186802303 * invT - 0.9 * tc[0]) -
    20000000.0 * sc[4] * x980 + 20000000.0 * sc[4] * x981 - sc[5] * x5771 -
    10000000.0 * sc[6] * x1680 + 10000000.0 * sc[6] * x1710 +
    24000000.0 * sc[6] * x1790 - 24000000.0 * sc[6] * x1824 - sc[6] * x7541 -
    sc[6] * x8349 - sc[7] * x9074 - sc[7] * x9077 -
    24000000.0 * sc[8] * x1325 * x1833 - x107 * x980 + x107 * x981 -
    500000.0 * x1073 * x40 + 20000000.0 * x1176 - 28000000.0 * x1248 * x1355 +
    24000000.0 * x1284 + 5000000.0 * x1387 + x1680 * x2261 - x1680 * x2328 -
    x1687 * x2098 + x1687 * x2179 + x1687 * x242 - x1710 * x2261 +
    x1710 * x2328 - x1745 * x2266 - x1745 * x341 + x1745 * x888 -
    x1790 * x2270 + x1790 * x883 + x1824 * x2270 - x1824 * x883 +
    x1875 * x8818 - x1889 * x872 - x1903 * x8818 - 10000000.0 * x196 * x209 -
    10000000.0 * x209 * x415 + x2098 * x345 - 1600000.0 * x2100 * x8328 -
    x2178 * x435 - x2179 * x345 - x220 * x435 - x2260 * x233 - x2262 * x324 -
    30110000.0 * x233 + x2330 * x980 - x2330 * x981 - x242 * x345 -
    50000000.0 * x435 + 5000000.0 * x473 + 24000000.0 * x478 -
    30000000.0 * x518 + x5500 + 20000000.0 * x564 - x5774 -
    283200000.0 * x5778 + x5861 - 30000000.0 * x597 - 13400000.0 * x614 * x901 -
    x626 - 11.3 * x645 * exp(-1509.64999741416 * invT + 2.0 * tc[0]) -
    20000000.0 * x645 - x7548 - 0.1428 * x7549 + x8935 - x9033 + x9122 + x9131 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1875 - x1903) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[119] =
    50000000.0 * sc[10] * x1224 + 5000000.0 * sc[12] * x1376 +
    30110000.0 * sc[13] * x1145 + sc[16] * x162 + sc[17] * x9150 +
    sc[19] * x9134 + sc[1] * x247 + 24000000.0 * sc[20] * x1270 -
    30000000.0 * sc[2] * x1669 + 30000000.0 * sc[2] * x1751 +
    20000000.0 * sc[2] * x1781 * x2054 + 0.0714 * sc[2] * x7471 +
    sc[3] * x1320 + 18000.0 * sc[3] * x1781 - 30000000.0 * sc[4] * x1523 +
    30000000.0 * sc[4] * x1533 + 50000000.0 * sc[4] * x1669 -
    30110000.0 * sc[4] * x1748 - 50000000.0 * sc[4] * x1751 +
    30110000.0 * sc[4] * x1756 - 20000000.0 * sc[4] * x1840 -
    5000000.0 * sc[4] * x1891 - 24000000.0 * sc[4] * x1897 -
    30000000.0 * sc[4] * x1946 + 30000000.0 * sc[4] * x1986 - sc[4] * x5771 -
    20000000.0 * sc[4] * x989 + 20000000.0 * sc[4] * x990 +
    10000000.0 * sc[6] * x1748 - 10000000.0 * sc[6] * x1756 +
    24000000.0 * sc[6] * x1829 - 24000000.0 * sc[6] * x1860 + sc[6] * x9166 +
    sc[6] * x9168 + sc[8] * x9132 - x107 * x989 + x107 * x990 + x1593 * x324 -
    x1669 * x2098 + x1669 * x2179 + x1669 * x242 - 3000000.0 * x1688 -
    x1748 * x2261 + x1748 * x2328 + x1751 * x2098 - x1751 * x2179 -
    x1751 * x242 + x1756 * x2261 - x1756 * x2328 - x1781 * x2266 -
    x1781 * x341 - x1829 * x2270 + x1829 * x883 + x1860 * x2270 - x1860 * x883 -
    x1891 * x872 + x1946 * x8818 - x1986 * x8818 + x2327 * x233 + x2330 * x989 -
    x2330 * x990 + 3000000.0 * x263 + x518 * x8817 + x6001 -
    857837.83783783799 * x8858 * x8860 + 857837.83783783799 * x8859 -
    27600000.0 * x8875 + x8879 * (1.68 * x691 * x8864 + 12.0 * x691 * x8866) -
    x8885 * (1.68 * x691 * x8864 + 12.0 * x691 * x8866) + 27600000.0 * x8887 +
    x9192 + x9199 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1946 - x1986) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[142] =
    sc[10] * x9222 + sc[14] * x9200 +
    141600000.0 * sc[1] * exp(-150.96499974141599 * invT) -
    30000000.0 * sc[2] * x1760 + 30000000.0 * sc[2] * x1762 +
    20000000.0 * sc[2] + 28000000.0 * sc[3] * x1534 -
    28000000.0 * sc[3] * x1535 + 18000.0 * sc[3] * x1839 -
    20000000.0 * sc[4] * x1008 + 20000000.0 * sc[4] * x1010 -
    5000000.0 * sc[4] * x1366 - 30000000.0 * sc[4] * x1534 +
    30000000.0 * sc[4] * x1535 + 50000000.0 * sc[4] * x1760 -
    50000000.0 * sc[4] * x1762 + 30110000.0 * sc[4] * x1764 -
    24000000.0 * sc[4] * x1953 - 30000000.0 * sc[4] * x2026 +
    30000000.0 * sc[4] * x2051 - 30110000.0 * sc[4] * x323 - sc[4] * x7541 -
    sc[4] * x8349 + sc[5] * x9166 + sc[5] * x9168 - 10000000.0 * sc[6] * x1764 +
    24000000.0 * sc[6] * x1881 - 24000000.0 * sc[6] * x1885 +
    10000000.0 * sc[6] * x323 + 13400000.0 * sc[8] - x1008 * x107 +
    x1008 * x2330 + x1010 * x107 - x1010 * x2330 - x1366 * x872 -
    x1760 * x2098 + x1760 * x2179 + x1760 * x242 + x1762 * x2098 -
    x1762 * x2179 - x1762 * x242 + x1764 * x2261 - x1764 * x2328 -
    x1839 * x2266 - x1839 * x341 + x1839 * x888 - x1881 * x2270 + x1881 * x883 +
    x1885 * x2270 - x1885 * x883 + x2026 * x8818 - x2051 * x8818 -
    x2261 * x323 + x2328 * x323 + 10000000.0 * x233 + 24000000.0 * x324 +
    x5500 + 20000000.0 * x645 + x9245 + x9246 + x9252 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x2026 - x2051) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[165] =
    sc[1] * x2103 + sc[2] * x7409 + 28000000.0 * sc[3] * x1563 -
    28000000.0 * sc[3] * x1573 - 20000000.0 * sc[4] * x1011 +
    20000000.0 * sc[4] * x1013 - 30000000.0 * sc[4] * x1563 +
    30000000.0 * sc[4] * x1573 + 50000000.0 * sc[4] * x1768 -
    50000000.0 * sc[4] * x1769 + 30110000.0 * sc[4] * x1773 -
    30000000.0 * sc[4] * x2093 + 30000000.0 * sc[4] * x2104 -
    30110000.0 * sc[4] * x225 - sc[4] * x9074 - sc[4] * x9077 -
    10000000.0 * sc[6] * x1773 + 24000000.0 * sc[6] * x1911 -
    24000000.0 * sc[6] * x1951 + 10000000.0 * sc[6] * x225 - x1011 * x107 +
    x1011 * x1599 + x1011 * x2330 + x1013 * x107 - x1013 * x1599 -
    x1013 * x2330 + x1444 * x1563 - x1444 * x1573 - x1768 * x2098 +
    x1768 * x2179 + x1768 * x242 + x1769 * x2098 - x1769 * x2179 -
    x1769 * x242 + x1773 * x2261 - x1773 * x2328 - x1911 * x2270 +
    x1911 * x883 + x1951 * x2270 - x1951 * x883 + x2093 * x8818 -
    x2104 * x8818 - x225 * x2261 + x225 * x2328 + x6162 +
    4600000.0 * x788 * x8881 + x9275 + x9284 + x9297 + x9299 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x2093 - x2104) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[188] =
    sc[10] * x9305 + 20000000.0 * sc[2] * x1197 * x2054 +
    18000.0 * sc[3] * x1197 + 28000000.0 * sc[3] * x1574 -
    28000000.0 * sc[3] * x1575 - 20000000.0 * sc[4] * x1017 +
    20000000.0 * sc[4] * x1018 - 24000000.0 * sc[4] * x1325 * x1833 -
    30000000.0 * sc[4] * x1449 - 30000000.0 * sc[4] * x1574 +
    30000000.0 * sc[4] * x1575 + 50000000.0 * sc[4] * x1775 -
    50000000.0 * sc[4] * x1776 - 30110000.0 * sc[4] * x1779 +
    30110000.0 * sc[4] * x1784 + 30000000.0 * sc[4] * x2150 -
    24000000.0 * sc[4] * x447 - 5000000.0 * sc[4] * x839 + sc[5] * x9132 +
    10000000.0 * sc[6] * x1779 - 10000000.0 * sc[6] * x1784 +
    24000000.0 * sc[6] * x1954 - 24000000.0 * sc[6] * x1957 +
    13400000.0 * sc[6] - x1017 * x107 + x1017 * x2330 + x1018 * x107 -
    x1018 * x2330 - x1197 * x2266 - x1197 * x341 + x1449 * x8818 -
    x1775 * x2098 + x1775 * x2179 + x1775 * x242 + x1776 * x2098 -
    x1776 * x2179 - x1776 * x242 - x1779 * x2261 + x1779 * x2328 +
    x1784 * x2261 - x1784 * x2328 - x1954 * x2270 + x1954 * x883 +
    x1957 * x2270 - x1957 * x883 - x2150 * x8818 + x5500 + x6260 - x839 * x872 +
    x9246 + x9344 + x9351 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1449 - x2150) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[211] =
    -20000000.0 * sc[4] * x1019 + 20000000.0 * sc[4] * x1020 +
    50000000.0 * sc[4] * x1778 - 50000000.0 * sc[4] * x1780 -
    30110000.0 * sc[4] * x1821 + 30110000.0 * sc[4] * x1856 -
    20000000.0 * sc[4] * x1994 - 24000000.0 * sc[4] * x2003 -
    30000000.0 * sc[4] * x2145 + 30000000.0 * sc[4] * x2193 -
    30000000.0 * sc[4] * x796 + 30000000.0 * sc[4] * x986 +
    10000000.0 * sc[6] * x1821 - 10000000.0 * sc[6] * x1856 +
    24000000.0 * sc[6] * x1960 - 24000000.0 * sc[6] * x1966 - x1019 * x107 +
    x1019 * x2330 + x1020 * x107 - x1020 * x2330 - x1778 * x2098 +
    x1778 * x2179 + x1778 * x242 + x1780 * x2098 - x1780 * x2179 -
    x1780 * x242 - x1821 * x2261 + x1821 * x2328 + x1856 * x2261 -
    x1856 * x2328 - x1960 * x2270 + x1960 * x883 + x1966 * x2270 -
    x1966 * x883 + x2145 * x8818 - x2193 * x8818 + x6340 - x9352 + x9385 +
    x9391 + x9396 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x2145 - x2193) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[234] =
    -18000.0 * sc[12] * x1178 * x66 - 28000000.0 * sc[1] * x1355 * x66 +
    30000000.0 * sc[2] * x1678 - 30000000.0 * sc[2] * x1797 +
    20000000.0 * sc[2] * x2054 * x436 + 28000000.0 * sc[3] * x1584 -
    28000000.0 * sc[3] * x1586 + 18000.0 * sc[3] * x436 -
    5000000.0 * sc[4] * x1002 - 20000000.0 * sc[4] * x1023 +
    20000000.0 * sc[4] * x1025 - 30000000.0 * sc[4] * x1217 -
    30000000.0 * sc[4] * x1584 + 30000000.0 * sc[4] * x1586 -
    50000000.0 * sc[4] * x1678 + 50000000.0 * sc[4] * x1797 -
    30110000.0 * sc[4] * x1836 + 30110000.0 * sc[4] * x1841 -
    20000000.0 * sc[4] * x1974 - 24000000.0 * sc[4] * x1981 +
    30000000.0 * sc[4] * x2275 - 30000000.0 * sc[4] * x468 +
    50000000.0 * sc[5] * x1224 + 10000000.0 * sc[6] * x1836 -
    10000000.0 * sc[6] * x1841 + 24000000.0 * sc[6] * x1971 -
    24000000.0 * sc[6] * x1973 + sc[6] * x9222 + sc[8] * x9305 - x1002 * x872 -
    x1023 * x107 + x1023 * x2330 + x1025 * x107 - x1025 * x2330 -
    3200000.0 * x1177 * x8328 + x1678 * x2098 - x1678 * x2179 - x1678 * x242 -
    750000.0 * x1688 - x1797 * x2098 + x1797 * x2179 + x1797 * x242 -
    x1836 * x2261 + x1836 * x2328 + x1841 * x2261 - x1841 * x2328 -
    x1971 * x2270 + x1971 * x883 + x1973 * x2270 - x1973 * x883 - x2266 * x436 -
    x2275 * x8818 + 750000.0 * x263 - x341 * x436 + x468 * x8818 + x5500 -
    x6348 - 214459.459459459 * x8858 * x8860 + 214459.459459459 * x8859 -
    6900000.0 * x8875 + x8879 * (0.42 * x691 * x8864 + 3.0 * x691 * x8866) -
    x8885 * (0.42 * x691 * x8864 + 3.0 * x691 * x8866) + 6900000.0 * x8887 +
    x9441 + x9447 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x2275 + x468) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[257] =
    sc[1] * x471 + 30000000.0 * sc[2] * x1663 - 30000000.0 * sc[2] * x1750 +
    28000000.0 * sc[3] * x1587 - 28000000.0 * sc[3] * x1588 -
    20000000.0 * sc[4] * x1027 + 20000000.0 * sc[4] * x1031 -
    30000000.0 * sc[4] * x1516 - 30000000.0 * sc[4] * x1587 +
    30000000.0 * sc[4] * x1588 - 50000000.0 * sc[4] * x1663 +
    50000000.0 * sc[4] * x1750 + 30110000.0 * sc[4] * x1876 +
    30000000.0 * sc[4] * x2331 - 30110000.0 * sc[4] * x758 -
    20000000.0 * sc[4] * x818 - sc[4] * x9081 - 24000000.0 * sc[4] * x951 -
    10000000.0 * sc[6] * x1876 - 24000000.0 * sc[6] * x1983 +
    10000000.0 * sc[6] * x758 + 24000000.0 * sc[6] * x926 - x1027 * x107 +
    x1027 * x2330 + x1031 * x107 - x1031 * x2330 + x1516 * x8818 +
    x1663 * x2098 - x1663 * x2179 - x1663 * x242 - x1750 * x2098 +
    x1750 * x2179 + x1750 * x242 + x1876 * x2261 - x1876 * x2328 +
    x1983 * x2270 - x1983 * x883 - x2261 * x758 - x2270 * x926 + x2328 * x758 -
    x2331 * x8818 + x5500 + x883 * x926 + x9396 + x9478 + x9483 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1516 - x2331) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[280] =
    30000000.0 * sc[1] * x1342 + 20000000.0 * sc[1] * x1425 + sc[2] * x7488 -
    28000000.0 * sc[3] * x1459 + 28000000.0 * sc[3] * x1589 +
    18000.0 * sc[3] * x790 - 20000000.0 * sc[4] * x1063 +
    20000000.0 * sc[4] * x1065 - 30000000.0 * sc[4] * x1407 +
    30000000.0 * sc[4] * x1459 - 5000000.0 * sc[4] * x1531 -
    24000000.0 * sc[4] * x1559 - 30000000.0 * sc[4] * x1589 +
    50000000.0 * sc[4] * x1761 - 50000000.0 * sc[4] * x1765 -
    30110000.0 * sc[4] * x1879 + 30110000.0 * sc[4] * x1894 +
    30000000.0 * sc[4] * x2367 + 5000000.0 * sc[5] * x1376 +
    10000000.0 * sc[6] * x1879 - 10000000.0 * sc[6] * x1894 - x1063 * x107 +
    x1063 * x2330 + x1065 * x107 - x1065 * x2330 - 18000.0 * x1177 * x1178 +
    x1407 * x8818 - x1531 * x872 - x1761 * x2098 + x1761 * x2179 +
    x1761 * x242 + x1765 * x2098 - x1765 * x2179 - x1765 * x242 -
    x1879 * x2261 + x1879 * x2328 + x1894 * x2261 - x1894 * x2328 -
    x1984 * x2270 + x1984 * x883 - x2266 * x790 + x2270 * x652 - x2367 * x8818 -
    x341 * x790 + x5500 - x652 * x883 + x6606 + x790 * x888 + x9246 + x9517 +
    x9531 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1407 - x2367) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[303] =
    30000000.0 * sc[4] * x1050 - 20000000.0 * sc[4] * x1068 +
    20000000.0 * sc[4] * x1069 - 20000000.0 * sc[4] * x1506 +
    50000000.0 * sc[4] * x1830 - 50000000.0 * sc[4] * x1831 -
    30110000.0 * sc[4] * x1896 - sc[4] * x5835 - 30000000.0 * sc[4] * x754 -
    30000000.0 * sc[4] * x884 + 30000000.0 * sc[4] * x890 - sc[4] * x9093 +
    30110000.0 * sc[5] * x1145 + 10000000.0 * sc[6] * x1896 +
    24000000.0 * sc[6] * x1996 - x1050 * x8818 + x1056 - x1068 * x107 +
    x1068 * x2330 + x1069 * x107 - x1069 * x2330 - x1830 * x2098 +
    x1830 * x2179 + x1830 * x242 + x1831 * x2098 - x1831 * x2179 -
    x1831 * x242 - x1896 * x2261 + x1896 * x2328 - x1901 * x2328 -
    x1996 * x2270 + x1996 * x883 - x1998 * x883 + x754 * x8818 + x9296 + x9563 +
    x9569 + x9583 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x1050 + x754) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[326] =
    sc[2] * x7480 - 30000000.0 * sc[4] * x1036 - 20000000.0 * sc[4] * x1070 +
    30000000.0 * sc[4] * x1648 + 50000000.0 * sc[4] * x1834 -
    50000000.0 * sc[4] * x1835 - 20000000.0 * sc[4] * x1980 -
    24000000.0 * sc[4] * x553 - 30110000.0 * sc[4] * x566 +
    30000000.0 * sc[4] * x622 + 20000000.0 * sc[4] * x668 -
    30000000.0 * sc[4] * x898 - sc[4] * x9097 + 10000000.0 * sc[6] * x566 +
    24000000.0 * sc[6] * x909 + sc[6] * x9200 + x1036 * x8818 - x107 * x1070 +
    x107 * x668 + x1070 * x2330 - x1834 * x2098 + x1834 * x2179 + x1834 * x242 +
    x1835 * x2098 - x1835 * x2179 - x1835 * x242 - x1901 * x2328 -
    x1998 * x883 + x201 - x2261 * x566 - x2270 * x909 + x2328 * x566 -
    x2330 * x668 - x622 * x8818 + x883 * x909 + x9583 + x9605 + x9613 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1036 - x622) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[349] =
    sc[2] * x7459 - 20000000.0 * sc[4] * x1 - 20000000.0 * sc[4] * x1074 +
    20000000.0 * sc[4] * x1077 - 30000000.0 * sc[4] * x1297 +
    30000000.0 * sc[4] * x130 - 30000000.0 * sc[4] * x1666 +
    30000000.0 * sc[4] * x1671 - 24000000.0 * sc[4] * x1724 +
    30110000.0 * sc[4] * x1823 + 50000000.0 * sc[4] * x1838 -
    50000000.0 * sc[4] * x1842 - 30110000.0 * sc[4] * x1908 - sc[4] * x9086 +
    24000000.0 * sc[6] * x1059 - 10000000.0 * sc[6] * x1823 +
    10000000.0 * sc[6] * x1908 - 24000000.0 * sc[6] * x600 - x1059 * x2270 +
    x1059 * x883 - x107 * x1074 + x107 * x1077 + x1074 * x2330 - x1077 * x2330 +
    x1297 * x8818 - x130 * x8818 + x1823 * x2261 - x1823 * x2328 -
    x1838 * x2098 + x1838 * x2179 + x1838 * x242 + x1842 * x2098 -
    x1842 * x2179 - x1842 * x242 - x1908 * x2261 + x1908 * x2328 +
    x2270 * x600 - x600 * x883 + x9582 + x9644 + x9649 + x968 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1297 - x130) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[372] =
    30000000.0 * sc[2] * x1848 + 28000000.0 * sc[3] * x1677 +
    1600000.0 * sc[3] * x8258 - 20000000.0 * sc[4] * x1078 +
    20000000.0 * sc[4] * x1081 - sc[4] * x166 - 30000000.0 * sc[4] * x1677 +
    30000000.0 * sc[4] * x1681 - 30110000.0 * sc[4] * x169 -
    50000000.0 * sc[4] * x1848 + 30000000.0 * sc[4] * x504 -
    30000000.0 * sc[4] * x846 + sc[5] * x162 + 10000000.0 * sc[6] * x169 +
    x1026 - x107 * x1078 + x107 * x1081 + x1078 * x1599 + x1078 * x2330 -
    x1081 * x1599 - x1081 * x2330 + x1203 + x1444 * x1677 - x1444 * x1681 -
    x169 * x2261 + x169 * x2328 + x1848 * x2098 - x1848 * x2179 - x1848 * x242 -
    x504 * x8818 + x846 * x8818 + x9297 + x9299 + x9653 + x9674 + x9686 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x504 + x846) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[395] =
    20000000.0 * sc[1] * x1164 + sc[1] * x2174 +
    20000000.0 * sc[2] * x1494 * x2054 + 30000000.0 * sc[2] * x1850 +
    10000000.0 * sc[2] * x1893 + 10000000.0 * sc[2] * x768 +
    18000.0 * sc[3] * x1494 + 28000000.0 * sc[3] * x1689 +
    30000000.0 * sc[4] * x1080 - 20000000.0 * sc[4] * x1082 +
    20000000.0 * sc[4] * x1083 + 30000000.0 * sc[4] * x1681 -
    30000000.0 * sc[4] * x1689 - 50000000.0 * sc[4] * x1850 -
    30110000.0 * sc[4] * x1892 - 7500000.0 * sc[4] * x415 -
    20000000.0 * sc[4] * x598 - 20000000.0 * sc[4] * x7551 -
    30000000.0 * sc[4] * x849 + 25010000.0 * sc[5] * x1689 * x576 +
    sc[5] * x9150 + 20000000.0 * sc[6] * x1082 - 20000000.0 * sc[6] * x1083 +
    10000000.0 * sc[6] * x1892 + x1026 - x107 * x1082 + x107 * x1083 -
    x1080 * x8818 + x1082 * x1599 + x1082 * x2330 - x1083 * x2330 + x1203 -
    x1494 * x2266 - x1494 * x341 + x1507 * x1850 - x1789 * x2188 +
    x1850 * x2098 - x1850 * x2179 - x1850 * x242 - x1892 * x2261 +
    x1892 * x2328 - x1892 * x556 + x849 * x8818 + x8935 - x9285 - x9287 +
    x9296 + x9299 + x9653 + x9671 + x9686 + x9721 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x1080 + x849) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[418] =
    30000000.0 * sc[2] * x1855 + 10000000.0 * sc[2] * x1893 +
    20000000.0 * sc[2] * x191 * x2054 + 28000000.0 * sc[3] * x1692 +
    18000.0 * sc[3] * x191 - 20000000.0 * sc[4] * x1085 -
    30000000.0 * sc[4] * x1692 - 30000000.0 * sc[4] * x1782 -
    50000000.0 * sc[4] * x1855 - 30110000.0 * sc[4] * x1888 - sc[4] * x9026 +
    20000000.0 * sc[6] * x1085 + 10000000.0 * sc[6] * x1888 +
    24000000.0 * sc[6] * x1898 + x1026 - x107 * x1085 + x1085 * x1599 +
    x1085 * x2330 + x1203 + x1444 * x1692 + x1507 * x1855 + x1782 * x8818 +
    x1855 * x2098 - x1855 * x2179 - x1855 * x242 - x1888 * x2261 +
    x1888 * x2328 - x1888 * x556 - x1898 * x2188 - x1898 * x2270 +
    x1898 * x883 - x191 * x2266 - x191 * x341 - x9285 - x9287 + x9296 + x9299 +
    x9653 + x9671 + x9677 + x9721 + x9749 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x1080 + x1782) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[441] =
    -28000000.0 * sc[3] * x1720 + 28000000.0 * sc[3] * x184 -
    30000000.0 * sc[4] * x1033 - 20000000.0 * sc[4] * x1086 +
    20000000.0 * sc[4] * x1087 + 30000000.0 * sc[4] * x1720 +
    50000000.0 * sc[4] * x1825 - 50000000.0 * sc[4] * x1827 -
    30000000.0 * sc[4] * x184 - 30110000.0 * sc[4] * x1900 -
    20000000.0 * sc[4] * x63 - sc[4] * x7546 + 30000000.0 * sc[4] * x971 +
    sc[5] * x9134 + 10000000.0 * sc[6] * x1900 + 24000000.0 * sc[6] * x1959 +
    x1033 * x8818 - x107 * x1086 + x107 * x1087 + x1086 * x1599 +
    x1086 * x2330 - x1087 * x1599 - x1087 * x2330 - x1444 * x1720 +
    x1444 * x184 - x1825 * x2098 + x1825 * x2179 + x1825 * x242 +
    x1827 * x2098 - x1827 * x2179 - x1827 * x242 - x1900 * x2261 +
    x1900 * x2328 - x1905 * x2266 - x1905 * x341 + x1905 * x888 -
    x1959 * x2270 + x1959 * x883 - x8818 * x971 + x8935 + x9275 - x9285 -
    x9287 + x9296 + x9299 + x932 + x9653 + x9677 + x9684 + x9770 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x1033 - x971) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[464] =
    30000000.0 * sc[2] * x1832 + 28000000.0 * sc[3] * x1730 -
    20000000.0 * sc[4] * x1090 - 24000000.0 * sc[4] * x1283 -
    30000000.0 * sc[4] * x1730 - 50000000.0 * sc[4] * x1832 -
    30110000.0 * sc[4] * x1943 - sc[4] * x9036 - 30000000.0 * sc[4] * x929 +
    24000000.0 * sc[5] * x1270 + 10000000.0 * sc[6] * x1943 +
    24000000.0 * sc[6] * x557 + x1026 - x107 * x1090 + x1090 * x1599 +
    x1090 * x2330 + x1203 + x1444 * x1730 + x1832 * x2098 - x1832 * x2179 -
    x1832 * x242 - x1905 * x2266 - x1905 * x341 + x1905 * x888 - x1943 * x2261 +
    x1943 * x2328 - x2270 * x557 + x557 * x883 + x8148 + x8818 * x929 - x9285 -
    x9287 + x9299 + x9653 + x9677 + x9721 + x9749 + x9797 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (-x1080 + x929) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[487] =
    30000000.0 * sc[2] * x1846 + 28000000.0 * sc[3] * x1631 -
    28000000.0 * sc[3] * x1670 - 20000000.0 * sc[4] * x1099 +
    20000000.0 * sc[4] * x1104 - 30000000.0 * sc[4] * x1631 +
    30000000.0 * sc[4] * x1670 - 50000000.0 * sc[4] * x1846 -
    30110000.0 * sc[4] * x1944 - 30000000.0 * sc[4] * x568 +
    30000000.0 * sc[4] * x892 + 10000000.0 * sc[6] * x1944 + x1026 -
    x107 * x1099 + x107 * x1104 + x1099 * x2330 - x1104 * x2330 +
    x1846 * x2098 - x1846 * x2179 - x1846 * x242 - x1944 * x2261 +
    x1944 * x2328 + x5500 + x568 * x8818 - x8818 * x892 + x9297 + x9653 +
    x9686 + x9814 + x9819 +
    (30000000.0 * sc[2] * x677 + 28000000.0 * sc[3] * x675 -
     20000000.0 * sc[4] * x674 - 30000000.0 * sc[4] * x675 -
     50000000.0 * sc[4] * x677 + 30110000.0 * sc[4] * x680 +
     20000000.0 * sc[6] * x674 - 10000000.0 * sc[6] * x680 - x107 * x674 +
     x1444 * x675 + x1507 * x677 + x1599 * x674 + x2098 * x677 - x2179 * x677 +
     x2261 * x680 - x2328 * x680 + x2330 * x674 - x242 * x677 + x556 * x680) *
      (x568 - x892) +
    (30000000.0 * sc[2] * x678 + 28000000.0 * sc[3] * x676 +
     20000000.0 * sc[4] * x658 - 30000000.0 * sc[4] * x676 -
     50000000.0 * sc[4] * x678 - 30110000.0 * sc[4] * x681 +
     10000000.0 * sc[6] * x681 + x1444 * x676 + x1507 * x678 + x2098 * x678 -
     x2179 * x678 - x2261 * x681 + x2328 * x681 - x242 * x678 - x556 * x681) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-18000.0 * sc[3] * x230 + 20000000.0 * sc[4] * x65 + x2266 * x230 +
     x230 * x341 - x230 * x888) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (24000000.0 * sc[4] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-32000000.0 * sc[1] * x642 - 10000000.0 * sc[2] * x642 +
     30000000.0 * sc[2] * x679 + 20000000.0 * sc[4] * x599 +
     5000000.0 * sc[4] * x642 - 50000000.0 * sc[4] * x679 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2098 * x679 - x2179 * x679 +
     x2188 * x603 + x2270 * x603 - x242 * x679 - x603 * x883 + x642 * x872) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-18000.0 * sc[3] * x437 - 30110000.0 * sc[4] * x682 -
     24000000.0 * sc[6] * x561 + 10000000.0 * sc[6] * x682 + x2188 * x561 -
     x2261 * x682 + x2266 * x437 + x2270 * x561 + x2328 * x682 + x341 * x437 -
     x437 * x888 - x556 * x682 - x561 * x883) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[5] =
    16000000.0 * sc[1] * x1887 - 12000000.0 * sc[3] * x1014 +
    12000000.0 * sc[3] * x987 + 5000000.0 * sc[4] * x1887 +
    24000000.0 * sc[4] * x520 + 30110000.0 * sc[4] * x760 -
    30110000.0 * sc[4] * x823 + 50000000.0 * sc[4] * x827 -
    50000000.0 * sc[4] * x961 + x1014 * x1444 + x1014 * x2083 + x1032 +
    x107 * x644 - x107 * x855 - x1444 * x987 + x1465 * x8818 + x1465 * x954 -
    16060000000.0 * x1493 - x1507 * x827 + x1507 * x961 - x1599 * x644 +
    x1599 * x855 - x2083 * x987 - x2328 * x760 + x2328 * x823 + x341 * x657 -
    x8818 * x972 - x883 * x927 + x883 * x956 + 16060000000.0 * x897 -
    x954 * x972 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x1465 + x972) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-x230 * x341) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-24000000.0 * sc[4] * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[28] =
    sc[12] * x1528 + 16000000.0 * sc[1] * x1370 + 12000000.0 * sc[3] * x1211 -
    12000000.0 * sc[3] * x1389 + 30110000.0 * sc[4] * x1030 +
    50000000.0 * sc[4] * x1064 + 5000000.0 * sc[4] * x1370 -
    30110000.0 * sc[4] * x1508 + sc[4] * x1547 * x879 +
    24000000.0 * sc[4] * x540 - 50000000.0 * sc[4] * x969 - sc[5] * x247 +
    sc[6] * x2190 + sc[7] * x2103 - x1030 * x2328 - x1064 * x1507 +
    x107 * x893 - x107 * x899 + x1200 * x341 - x1211 * x1444 - x1211 * x2083 -
    16000000.0 * x1387 + x1389 * x1444 + x1389 * x2083 + x1507 * x969 +
    x1508 * x2328 - x1561 * x883 - x1599 * x893 + x1599 * x899 - x1649 * x8818 -
    x1649 * x954 + x1694 * x8818 + x1694 * x954 - 16000000.0 * x473 +
    x494 * x883 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1649 - x1694) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-x230 * x341) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[51] =
    16000000.0 * sc[1] * x1674 + 12000000.0 * sc[3] * x1419 -
    12000000.0 * sc[3] * x1461 + 24000000.0 * sc[4] * x1208 +
    30110000.0 * sc[4] * x1639 + 50000000.0 * sc[4] * x1640 -
    30110000.0 * sc[4] * x1643 + 5000000.0 * sc[4] * x1674 -
    50000000.0 * sc[4] * x718 - sc[5] * x5604 - 0.0357 * sc[5] * x7471 +
    x107 * x970 - x107 * x973 + x1075 * x341 - x1419 * x1444 - x1419 * x2083 +
    x1444 * x1461 + x1461 * x2083 - x1507 * x1640 + x1507 * x718 -
    x1599 * x970 + x1599 * x973 - x1639 * x2328 + x1643 * x2328 - x1660 * x883 +
    x1726 * x883 - x1772 * x8818 - x1772 * x954 + x1785 * x8818 + x1785 * x954 +
    x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1772 - x1785) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-x230 * x341) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[74] =
    16000000.0 * sc[1] * x1766 - 12000000.0 * sc[3] * x1517 +
    12000000.0 * sc[3] * x854 + 24000000.0 * sc[4] * x1658 -
    50000000.0 * sc[4] * x1661 + 50000000.0 * sc[4] * x1662 +
    30110000.0 * sc[4] * x1673 - 30110000.0 * sc[4] * x1685 +
    5000000.0 * sc[4] * x1766 - sc[5] * x1320 + x107 * x977 - x107 * x978 +
    x1444 * x1517 - x1444 * x854 + x1507 * x1661 - x1507 * x1662 +
    x1517 * x2083 - x1599 * x977 + x1599 * x978 - x1673 * x2328 +
    x1685 * x2328 + x1708 * x341 - x1757 * x883 + x1759 * x883 - x1822 * x8818 -
    x1822 * x954 + x1852 * x8818 + x1852 * x954 - x2083 * x854 +
    12000000.0 * x597 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1822 - x1852) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-x230 * x341) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[97] =
    sc[12] * x9116 + sc[14] * x9097 + sc[15] * x9086 +
    7500000.0 * sc[17] * x415 + sc[1] * x1547 * x879 +
    16000000.0 * sc[1] * x1889 + sc[20] * x9036 + 12000000.0 * sc[3] * x1519 -
    12000000.0 * sc[3] * x1521 - 30110000.0 * sc[4] * x1680 -
    50000000.0 * sc[4] * x1687 + 30110000.0 * sc[4] * x1710 +
    24000000.0 * sc[4] * x182 + 5000000.0 * sc[4] * x1889 +
    50000000.0 * sc[4] * x345 - sc[5] * x5771 + sc[6] * x8349 + sc[7] * x9074 +
    sc[7] * x9077 + sc[8] * x9127 + 25010000.0 * sc[8] + x107 * x980 -
    x107 * x981 - 24000000.0 * x1284 - 5000000.0 * x1387 - x1444 * x1519 +
    x1444 * x1521 + x1507 * x1687 - x1507 * x345 - x1519 * x2083 +
    x1521 * x2083 - x1599 * x980 + x1599 * x981 + x1680 * x2328 -
    x1710 * x2328 + x1745 * x341 - x1790 * x883 + x1824 * x883 - x1875 * x8818 -
    x1875 * x954 + x1903 * x8818 + x1903 * x954 + 10000000.0 * x209 * x415 +
    30110000.0 * x233 + 50000000.0 * x435 - 5000000.0 * x473 -
    24000000.0 * x478 + x626 +
    11.3 * x645 * exp(-1509.64999741416 * invT + 2.0 * tc[0]) + 0.0714 * x7549 +
    x9033 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1875 - x1903) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-x230 * x341) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[120] =
    -refC * x1066 * x1547 - 5000000.0 * sc[12] * x1376 -
    30110000.0 * sc[13] * x1145 - sc[16] * x162 - sc[17] * x9150 -
    sc[19] * x9134 + 16000000.0 * sc[1] * x1891 - sc[1] * x247 -
    24000000.0 * sc[20] * x1270 - sc[2] * x5604 - 0.0357 * sc[2] * x7471 -
    sc[3] * x1320 + 12000000.0 * sc[3] * x1523 - 12000000.0 * sc[3] * x1533 +
    30110000.0 * sc[4] * x1748 - 30110000.0 * sc[4] * x1756 +
    5000000.0 * sc[4] * x1891 + 24000000.0 * sc[4] * x1897 - sc[4] * x5771 -
    sc[6] * x9166 - sc[6] * x9168 - sc[8] * x9132 + x107 * x989 - x107 * x990 -
    x1444 * x1523 + x1444 * x1533 - 80300000000.0 * x1493 + x1507 * x1669 -
    x1507 * x1751 - x1523 * x2083 + x1533 * x2083 - x1572 * x645 -
    x1593 * x324 - x1599 * x989 + x1599 * x990 - x1748 * x2328 + x1756 * x2328 +
    x1781 * x341 - x1829 * x883 + x1860 * x883 - x1946 * x8818 - x1946 * x954 +
    x1986 * x8818 + x1986 * x954 - x2327 * x233 - x435 * x717 - x518 * x8817 -
    5710000.0 * x518 * exp(379.92858268256299 * invT) -
    25010000.0 * x576 * x597 - 16000000.0 * x578 * x597 + 80300000000.0 * x897 +
    x9843 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1946 - x1986) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-x230 * x341) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[143] =
    16000000.0 * sc[1] * x1366 + sc[1] * x2190 + 12000000.0 * sc[3] * x1534 -
    12000000.0 * sc[3] * x1535 + 5000000.0 * sc[4] * x1366 -
    50000000.0 * sc[4] * x1760 + 50000000.0 * sc[4] * x1762 -
    30110000.0 * sc[4] * x1764 + 24000000.0 * sc[4] * x1953 +
    30110000.0 * sc[4] * x323 + sc[4] * x8349 - sc[5] * x9166 - sc[5] * x9168 +
    x1008 * x107 - x1008 * x1599 - x1010 * x107 + x1010 * x1599 -
    x1444 * x1534 + x1444 * x1535 + x1507 * x1760 - x1507 * x1762 -
    x1534 * x2083 + x1535 * x2083 + x1764 * x2328 + x1839 * x341 -
    x1881 * x883 + x1885 * x883 - x2026 * x8818 - x2026 * x954 + x2051 * x8818 +
    x2051 * x954 - x2328 * x323 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x2026 - x2051) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-x230 * x341) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[166] =
    16000000.0 * sc[1] * x1893 + sc[1] * x2103 + 12000000.0 * sc[3] * x1563 -
    12000000.0 * sc[3] * x1573 - 50000000.0 * sc[4] * x1768 +
    50000000.0 * sc[4] * x1769 - 30110000.0 * sc[4] * x1773 +
    30110000.0 * sc[4] * x225 + sc[4] * x9074 + sc[4] * x9077 + x1011 * x107 -
    x1011 * x1599 - x1013 * x107 + x1013 * x1599 - x1444 * x1563 +
    x1444 * x1573 + x1507 * x1768 - x1507 * x1769 - x1563 * x2083 +
    x1573 * x2083 + x1773 * x2328 + x1905 * x341 - x1911 * x883 + x1951 * x883 -
    x2093 * x8818 - x2093 * x954 + x2104 * x8818 + x2104 * x954 - x225 * x2328 +
    x9287 + x9295 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x2093 - x2104) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-x230 * x341) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[189] =
    16000000.0 * sc[1] * x839 + 12000000.0 * sc[3] * x1574 -
    12000000.0 * sc[3] * x1575 - 50000000.0 * sc[4] * x1775 +
    50000000.0 * sc[4] * x1776 + 30110000.0 * sc[4] * x1779 -
    30110000.0 * sc[4] * x1784 + 24000000.0 * sc[4] * x447 +
    5000000.0 * sc[4] * x839 + sc[4] * x9127 + 25010000.0 * sc[4] -
    sc[5] * x9132 + x1017 * x107 - x1017 * x1599 - x1018 * x107 +
    x1018 * x1599 + x1197 * x341 - x1444 * x1574 + x1444 * x1575 -
    x1449 * x8818 - x1449 * x954 + x1507 * x1775 - x1507 * x1776 -
    x1574 * x2083 + x1575 * x2083 - x1779 * x2328 + x1784 * x2328 -
    x1954 * x883 + x1957 * x883 + x2150 * x8818 + x2150 * x954 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1449 - x2150) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-x230 * x341) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[212] =
    16000000.0 * sc[1] * x639 + 12000000.0 * sc[3] * x796 -
    12000000.0 * sc[3] * x986 - 50000000.0 * sc[4] * x1778 +
    50000000.0 * sc[4] * x1780 + 30110000.0 * sc[4] * x1821 -
    30110000.0 * sc[4] * x1856 + 24000000.0 * sc[4] * x2003 +
    5000000.0 * sc[4] * x639 + x1019 * x107 - x1019 * x1599 - x1020 * x107 +
    x1020 * x1599 - x1444 * x796 + x1444 * x986 - 44000000000.0 * x1493 +
    x1507 * x1778 - x1507 * x1780 + x173 * x341 - x1821 * x2328 +
    x1856 * x2328 - x1960 * x883 + x1966 * x883 - x2083 * x796 + x2083 * x986 -
    x2145 * x8818 - x2145 * x954 + x2193 * x8818 + x2193 * x954 +
    44000000000.0 * x897 + x9352 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x2145 - x2193) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-x230 * x341) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[235] =
    16000000.0 * sc[1] * x1002 + 12000000.0 * sc[3] * x1584 -
    12000000.0 * sc[3] * x1586 + 5000000.0 * sc[4] * x1002 +
    30110000.0 * sc[4] * x1836 - 30110000.0 * sc[4] * x1841 +
    24000000.0 * sc[4] * x1981 + x1023 * x107 - x1023 * x1599 - x1025 * x107 +
    x1025 * x1599 - x1444 * x1584 + x1444 * x1586 - x1507 * x1678 +
    x1507 * x1797 - x1584 * x2083 + x1586 * x2083 - x1836 * x2328 +
    x1841 * x2328 - x1971 * x883 + x1973 * x883 + x2275 * x8818 + x2275 * x954 +
    x341 * x436 - x468 * x8818 - x468 * x954 + x9822 + x9859 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x2275 + x468) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-x230 * x341) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[258] =
    16000000.0 * sc[1] * x639 + 12000000.0 * sc[3] * x1587 -
    12000000.0 * sc[3] * x1588 + 50000000.0 * sc[4] * x1663 -
    50000000.0 * sc[4] * x1750 - 30110000.0 * sc[4] * x1876 +
    5000000.0 * sc[4] * x639 + 30110000.0 * sc[4] * x758 +
    24000000.0 * sc[4] * x951 + x1027 * x107 - x1027 * x1599 - x1031 * x107 +
    x1031 * x1599 - x1444 * x1587 + x1444 * x1588 - x1507 * x1663 +
    x1507 * x1750 - x1516 * x8818 - x1516 * x954 - x1587 * x2083 +
    x1588 * x2083 + x173 * x341 + x1876 * x2328 + x1983 * x883 - x2328 * x758 +
    x2331 * x8818 + x2331 * x954 - x883 * x926 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1516 - x2331) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-x230 * x341) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[281] =
    sc[1] * x1528 + 16000000.0 * sc[1] * x1531 - 12000000.0 * sc[3] * x1459 +
    12000000.0 * sc[3] * x1589 + 5000000.0 * sc[4] * x1531 +
    24000000.0 * sc[4] * x1559 - 50000000.0 * sc[4] * x1761 +
    50000000.0 * sc[4] * x1765 + 30110000.0 * sc[4] * x1879 -
    30110000.0 * sc[4] * x1894 + sc[4] * x9116 - 5000000.0 * sc[5] * x1376 +
    x1063 * x107 - x1063 * x1599 - x1065 * x107 + x1065 * x1599 -
    x1407 * x8818 - x1407 * x954 + x1444 * x1459 - x1444 * x1589 +
    x1459 * x2083 + x1507 * x1761 - x1507 * x1765 - x1589 * x2083 -
    x1879 * x2328 + x1894 * x2328 - x1984 * x883 + x2367 * x8818 +
    x2367 * x954 + x341 * x790 + x652 * x883 + x9822 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1407 - x2367) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-x230 * x341) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[304] =
    12000000.0 * sc[3] * x884 - 12000000.0 * sc[3] * x890 -
    50000000.0 * sc[4] * x1830 + 50000000.0 * sc[4] * x1831 +
    30110000.0 * sc[4] * x1896 - 30110000.0 * sc[4] * x1901 -
    30110000.0 * sc[5] * x1145 + x1050 * x8818 + x1050 * x954 + x1068 * x107 -
    x1068 * x1599 - x1069 * x107 + x1069 * x1599 - x1444 * x884 + x1444 * x890 +
    x1507 * x1830 - x1507 * x1831 - x1896 * x2328 + x1901 * x2328 -
    x1996 * x883 + x1998 * x883 - x2083 * x884 + x2083 * x890 - x754 * x8818 -
    x754 * x954 + x9295 + x9865 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x1050 + x754) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-x230 * x341) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[327] =
    -12000000.0 * sc[3] * x1648 + 12000000.0 * sc[3] * x898 -
    50000000.0 * sc[4] * x1834 + 50000000.0 * sc[4] * x1835 -
    30110000.0 * sc[4] * x1901 + 24000000.0 * sc[4] * x553 +
    30110000.0 * sc[4] * x566 + sc[4] * x9097 - x1036 * x8818 - x1036 * x954 +
    x107 * x1070 - x107 * x668 - x1070 * x1599 + x1444 * x1648 - x1444 * x898 +
    x1507 * x1834 - x1507 * x1835 + x1599 * x668 + x1648 * x2083 +
    x1901 * x2328 + x1998 * x883 - x2083 * x898 - x2328 * x566 + x622 * x8818 +
    x622 * x954 - x883 * x909 + x9865 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1036 - x622) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-x230 * x341) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[350] =
    12000000.0 * sc[3] * x1666 - 12000000.0 * sc[3] * x1671 +
    24000000.0 * sc[4] * x1724 - 30110000.0 * sc[4] * x1823 -
    50000000.0 * sc[4] * x1838 + 50000000.0 * sc[4] * x1842 +
    30110000.0 * sc[4] * x1908 + sc[4] * x9086 - x1059 * x883 + x107 * x1074 -
    x107 * x1077 - x1074 * x1599 + x1077 * x1599 - x1297 * x8818 -
    x1297 * x954 + x130 * x8818 + x130 * x954 - x1444 * x1666 + x1444 * x1671 +
    x1507 * x1838 - x1507 * x1842 - x1666 * x2083 + x1671 * x2083 +
    x1823 * x2328 - x1908 * x2328 + x600 * x883 + x9865 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1297 - x130) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-x230 * x341) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-24000000.0 * sc[4] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[373] =
    12000000.0 * sc[3] * x1677 + 30110000.0 * sc[4] * x169 +
    50000000.0 * sc[4] * x1848 - sc[5] * x162 + x107 * x1078 - x107 * x1081 -
    x1078 * x1599 + x1081 * x1599 - x1444 * x1677 + x1507 * x1843 -
    x1507 * x1848 - x1677 * x2083 - x169 * x2328 - x1789 * x883 + x504 * x8818 +
    x504 * x954 - x846 * x8818 - x846 * x954 + x9875 + x9878 + x9879 + x9880 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x504 + x846) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-x230 * x341) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[396] =
    12000000.0 * sc[3] * x1689 + 50000000.0 * sc[4] * x1850 +
    30110000.0 * sc[4] * x1892 + 7500000.0 * sc[4] * x415 -
    25010000.0 * sc[5] * x1689 * x576 - 16000000.0 * sc[5] * x1689 * x578 -
    sc[5] * x9150 + x107 * x1082 - x1082 * x1599 + x1494 * x341 +
    x1507 * x1843 - x1507 * x1850 - x1789 * x883 - x1892 * x2328 -
    x849 * x8818 - x849 * x954 + x9879 + x9880 + x9884 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x1080 + x849) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-x230 * x341) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[419] =
    12000000.0 * sc[3] * x1692 + 50000000.0 * sc[4] * x1855 +
    30110000.0 * sc[4] * x1888 + x107 * x1085 - x1085 * x1599 - x1444 * x1692 +
    x1507 * x1843 - x1507 * x1855 - x1692 * x2083 - x1782 * x8818 -
    x1782 * x954 - x1888 * x2328 - x1898 * x883 + x191 * x341 + x9879 + x9880 +
    x9884 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x1080 + x1782) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-x230 * x341) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[442] =
    -12000000.0 * sc[3] * x1720 + 12000000.0 * sc[3] * x184 -
    50000000.0 * sc[4] * x1825 + 50000000.0 * sc[4] * x1827 +
    30110000.0 * sc[4] * x1900 - sc[5] * x9134 - x1033 * x8818 - x1033 * x954 +
    x107 * x1086 - x107 * x1087 - x1086 * x1599 + x1087 * x1599 +
    x1444 * x1720 - x1444 * x184 + x1507 * x1825 - x1507 * x1827 +
    x1720 * x2083 - x184 * x2083 - x1900 * x2328 - x1959 * x883 + x8818 * x971 +
    x954 * x971 + x9875 + x9879 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x1033 - x971) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-x230 * x341) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[465] =
    16000000.0 * sc[1] * x1893 + 12000000.0 * sc[3] * x1730 +
    24000000.0 * sc[4] * x1283 + 50000000.0 * sc[4] * x1832 +
    30110000.0 * sc[4] * x1943 + sc[4] * x9036 - 24000000.0 * sc[5] * x1270 -
    x107 * x1083 + x107 * x1090 + x1080 * x8818 + x1080 * x954 + x1083 * x1599 -
    x1090 * x1599 + x1364 * x883 - x1444 * x1730 - x1507 * x1832 +
    x1507 * x1843 - x1730 * x2083 + x1845 * x2328 + x1905 * x341 -
    x1943 * x2328 - x557 * x883 - x8818 * x929 + x9287 - x929 * x954 + x9822 +
    x9878 + x9879 + x9880 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (-x1080 + x929) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-x230 * x341) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[488] =
    12000000.0 * sc[3] * x1631 - 12000000.0 * sc[3] * x1670 +
    50000000.0 * sc[4] * x1846 + 30110000.0 * sc[4] * x1944 + x107 * x1099 -
    x107 * x1104 - x1099 * x1599 + x1104 * x1599 - x1444 * x1631 +
    x1444 * x1670 + x1507 * x1843 - x1507 * x1846 - x1631 * x2083 +
    x1670 * x2083 - x1789 * x883 - x1944 * x2328 - x568 * x8818 - x568 * x954 +
    x8818 * x892 + x892 * x954 + x9875 + x9879 + x9880 +
    (12000000.0 * sc[3] * x675 + 50000000.0 * sc[4] * x677 -
     30110000.0 * sc[4] * x680 + x107 * x674 - x1444 * x675 - x1507 * x677 -
     x1599 * x674 - x2083 * x675 + x2328 * x680) *
      (x568 - x892) +
    (12000000.0 * sc[3] * x676 + 50000000.0 * sc[4] * x678 +
     30110000.0 * sc[4] * x681 - x1444 * x676 - x1507 * x678 - x2083 * x676 -
     x2328 * x681) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-x230 * x341) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-24000000.0 * sc[4] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-16000000.0 * sc[1] * x642 - 5000000.0 * sc[4] * x642 +
     50000000.0 * sc[4] * x679 - x1507 * x679 + x603 * x883) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (30110000.0 * sc[4] * x682 - x2328 * x682 - x341 * x437 + x561 * x883) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[6] =
    90000.0 * sc[3] * x520 + 140000.0 * sc[3] * x657 + sc[3] * x866 +
    20000.0 * sc[3] * x927 - 20000.0 * sc[3] * x956 - sc[6] * x277 -
    24000000.0 * sc[6] * x520 - 20000000.0 * sc[6] * x644 -
    10000000.0 * sc[6] * x760 + 10000000.0 * sc[6] * x823 +
    20000000.0 * sc[6] * x855 - 24600000.0 * sc[6] * x927 +
    24600000.0 * sc[6] * x956 - x1470 * x760 + x1470 * x823 + x1887 * x2324 +
    x1887 * x872 - x2147 * x827 + x2147 * x961 + x2188 * x927 - x2188 * x956 +
    x2256 * x760 - x2256 * x823 + x2266 * x657 + x2268 * x760 - x2268 * x823 +
    x2325 * x827 - x2325 * x961 + x2326 * x927 - x2326 * x956 + x351 * x827 -
    x351 * x961 + x556 * x760 - x556 * x823 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x1465 + x972) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[29] =
    sc[21] * sc[3] * x1041 +
    300000000.0 * ((sc[3]) * (sc[3])) * exp(-1.72 * tc[0]) +
    sc[3] * sc[5] * x127 + 140000.0 * sc[3] * x1200 +
    sc[3] * x125 * exp(-0.86 * tc[0]) + 20000.0 * sc[3] * x1561 -
    20000.0 * sc[3] * x494 + 90000.0 * sc[3] * x540 -
    10000000.0 * sc[6] * x1030 + 10000000.0 * sc[6] * x1508 -
    24600000.0 * sc[6] * x1561 + 24600000.0 * sc[6] * x494 -
    24000000.0 * sc[6] * x540 - 20000000.0 * sc[6] * x893 +
    20000000.0 * sc[6] * x899 + sc[7] * x806 - x1030 * x1470 + x1030 * x2256 +
    x1030 * x2268 + x1030 * x556 - x1064 * x2147 + x1064 * x2325 +
    x1064 * x351 + x1200 * x2266 + x1370 * x2324 + x1370 * x872 +
    x1470 * x1508 - x1508 * x2256 - x1508 * x2268 - x1508 * x556 +
    x1561 * x2188 + x1561 * x2326 + x2147 * x969 - x2188 * x494 - x2325 * x969 -
    x2326 * x494 - x351 * x969 + x852 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1649 - x1694) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[52] =
    140000.0 * sc[3] * x1075 + 90000.0 * sc[3] * x1208 +
    20000.0 * sc[3] * x1660 - 20000.0 * sc[3] * x1726 + sc[5] * x5604 -
    24000000.0 * sc[6] * x1208 - 10000000.0 * sc[6] * x1639 +
    10000000.0 * sc[6] * x1643 - 24600000.0 * sc[6] * x1660 +
    24600000.0 * sc[6] * x1726 - 20000000.0 * sc[6] * x970 +
    20000000.0 * sc[6] * x973 - 20000000.0 * sc[6] + sc[7] * x7409 +
    x1075 * x2266 - x1470 * x1639 + x1470 * x1643 + x1639 * x2256 +
    x1639 * x2268 + x1639 * x556 - x1640 * x2147 + x1640 * x2325 +
    x1640 * x351 - x1643 * x2256 - x1643 * x2268 - x1643 * x556 +
    x1660 * x2188 + x1660 * x2326 + x1674 * x2324 + x1674 * x872 -
    x1726 * x2188 - x1726 * x2326 + x2147 * x718 - x2325 * x718 - x351 * x718 +
    x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1772 - x1785) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[75] =
    -refC * sc[6] * x5749 + sc[0] * x866 + sc[12] * x8321 + sc[14] * x8316 +
    300000.0 * sc[15] * x1321 + sc[1] * sc[21] * x1041 +
    600000000.0 * sc[1] * sc[3] * exp(-1.72 * tc[0]) + sc[1] * sc[5] * x127 +
    sc[1] * x125 * exp(-0.86 * tc[0]) + sc[20] * x8265 +
    90000.0 * sc[3] * x1658 + 140000.0 * sc[3] * x1708 + sc[5] * x1320 -
    24000000.0 * sc[6] * x1658 - 10000000.0 * sc[6] * x1673 +
    10000000.0 * sc[6] * x1685 - 24600000.0 * sc[6] * x1757 +
    24600000.0 * sc[6] * x1759 - 20000000.0 * sc[6] * x977 +
    20000000.0 * sc[6] * x978 + 260000.0 * sc[7] * x8307 +
    840000000.0 * sc[7] * x8310 + sc[9] * x8262 - 140000.0 * x1209 -
    90000.0 * x1284 - x1470 * x1673 + x1470 * x1685 + x1661 * x2147 -
    x1661 * x2325 - x1661 * x351 - x1662 * x2147 + x1662 * x2325 +
    x1662 * x351 + x1673 * x2256 + x1673 * x556 - x1685 * x2256 - x1685 * x556 +
    x1708 * x2266 + x1757 * x2188 + x1757 * x2326 - x1759 * x2188 -
    x1759 * x2326 + x1766 * x2324 + x1766 * x872 + x2255 * x233 + x2273 * x901 +
    7600000.0 * x435 * exp(-201.28666632188799 * invT) - 90000.0 * x478 +
    x7496 - 140000.0 * x778 + x9950 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1822 - x1852) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[98] =
    sc[11] * x9081 + 20000000.0 * sc[12] * x1422 + 140000.0 * sc[3] * x1745 +
    90000.0 * sc[3] * x182 + 10000000.0 * sc[6] * x1680 -
    10000000.0 * sc[6] * x1710 - 24600000.0 * sc[6] * x1790 -
    24000000.0 * sc[6] * x182 + 24600000.0 * sc[6] * x1824 - sc[6] * x7541 -
    sc[6] * x8349 - 20000000.0 * sc[6] * x980 + 20000000.0 * sc[6] * x981 +
    sc[7] * x9074 + sc[7] * x9077 + 24000000.0 * sc[8] * x1325 * x1833 +
    x1470 * x1680 - x1470 * x1710 - x1680 * x2256 - x1680 * x556 +
    x1687 * x2147 - x1687 * x2325 - x1687 * x351 + x1710 * x2256 +
    x1710 * x556 + x1745 * x2266 + x1790 * x2188 + x1790 * x2326 -
    x1824 * x2188 - x1824 * x2326 + 6600000.0 * x1833 * x233 * x72 +
    24000000.0 * x1833 * x324 * x452 + x1889 * x2324 + x1889 * x872 +
    10000000.0 * x196 * x209 - x2147 * x345 + x2325 * x345 + x345 * x351 +
    141600000.0 * x5778 + 13400000.0 * x614 * x901 + x7548 + x9899 + x9964 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1875 - x1903) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[121] =
    -refC * sc[6] * x5969 + sc[1] * sc[3] * x127 + sc[2] * x5604 +
    sc[3] * x1320 + 140000.0 * sc[3] * x1781 + 20000.0 * sc[3] * x1829 -
    20000.0 * sc[3] * x1860 + 90000.0 * sc[3] * x1897 -
    10000000.0 * sc[6] * x1748 + 10000000.0 * sc[6] * x1756 -
    24600000.0 * sc[6] * x1829 + 24600000.0 * sc[6] * x1860 -
    24000000.0 * sc[6] * x1897 - sc[6] * x9166 - sc[6] * x9168 -
    20000000.0 * sc[6] * x989 + 20000000.0 * sc[6] * x990 - x1470 * x1748 +
    x1470 * x1756 + x1669 * x2147 - x1669 * x2325 - x1669 * x351 +
    x1748 * x2256 + x1748 * x2268 + x1748 * x556 - x1751 * x2147 +
    x1751 * x2325 + x1751 * x351 - x1756 * x2256 - x1756 * x2268 -
    x1756 * x556 + x1781 * x2266 + x1829 * x2188 + x1829 * x2326 -
    x1860 * x2188 - x1860 * x2326 + x1891 * x2324 + x1891 * x872 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1946 - x1986) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[144] =
    -refC * sc[21] * x6063 - refC * sc[3] * x5749 - refC * sc[5] * x5969 -
    refC * x125 * exp(-0.86 * tc[0] + x2040) - sc[0] * x277 - sc[13] * x114 -
    sc[15] * x9990 - 140000.0 * sc[17] * x1182 - 9260000.0 * sc[19] -
    90000.0 * sc[20] * x1280 - 20000000.0 * sc[2] + 140000.0 * sc[3] * x1839 +
    90000.0 * sc[3] * x1953 - sc[4] * x7541 - sc[4] * x8349 - sc[5] * x9166 -
    sc[5] * x9168 - 20000000.0 * sc[6] * x1008 + 20000000.0 * sc[6] * x1010 +
    10000000.0 * sc[6] * x1764 - 24600000.0 * sc[6] * x1881 +
    24600000.0 * sc[6] * x1885 - 24000000.0 * sc[6] * x1953 -
    10000000.0 * sc[6] * x323 -
    520000.0 * sc[6] * exp(820.24316526169298 * invT) -
    1680000000.0 * sc[6] * exp(-6038.59998965664 * invT) - 14400000.0 * sc[8] -
    sc[9] * x9979 + x10000 + x10004 + 24000000.0 * x1284 + x1366 * x872 +
    x1470 * x1764 - x1470 * x323 - x1597 * x435 + x1760 * x2147 -
    x1762 * x2147 - x1764 * x2256 - x1764 * x556 + x1839 * x2266 +
    x1881 * x2188 + x1881 * x2326 - x1885 * x2188 - x1885 * x2326 +
    x2256 * x323 - x233 * x753 - 10000000.0 * x233 + x323 * x556 -
    24600000.0 * x324 + 24000000.0 * x478 + x6075 - 20000000.0 * x645 + x9899 -
    x9986 + x9998 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x2026 - x2051) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[167] =
    300000.0 * sc[14] * x1304 + sc[19] * x10007 + sc[1] * x806 + sc[2] * x7409 +
    140000.0 * sc[3] * x1905 + 260000.0 * sc[3] * x8307 +
    840000000.0 * sc[3] * x8310 + sc[4] * x9074 + sc[4] * x9077 -
    20000000.0 * sc[6] * x1011 + 20000000.0 * sc[6] * x1013 +
    10000000.0 * sc[6] * x1773 - 24600000.0 * sc[6] * x1911 +
    24600000.0 * sc[6] * x1951 - 10000000.0 * sc[6] * x225 + x10006 + x10018 +
    x10028 + x1049 * x435 + x1470 * x1773 - x1470 * x225 + x1768 * x2147 -
    x1768 * x2325 - x1768 * x351 - x1769 * x2147 + x1769 * x2325 +
    x1769 * x351 - x1773 * x2256 - x1773 * x556 + x1893 * x2324 +
    x1905 * x2266 + x1911 * x2188 + x1911 * x2326 - x1951 * x2188 -
    x1951 * x2326 + x225 * x2256 + x225 * x556 +
    8700.0 * x324 * exp(-490.13303249379697 * invT) + x9285 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x2093 - x2104) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[190] =
    140000.0 * sc[3] * x1197 + 20000.0 * sc[3] * x1954 -
    20000.0 * sc[3] * x1957 + 90000.0 * sc[3] * x447 +
    24000000.0 * sc[4] * x1325 * x1833 - 20000000.0 * sc[6] * x1017 +
    20000000.0 * sc[6] * x1018 - 10000000.0 * sc[6] * x1779 +
    10000000.0 * sc[6] * x1784 - 24600000.0 * sc[6] * x1954 +
    24600000.0 * sc[6] * x1957 - 24000000.0 * sc[6] * x447 -
    14400000.0 * sc[6] + x10030 + x1197 * x2266 - x1470 * x1779 +
    x1470 * x1784 + x1775 * x2147 - x1775 * x2325 - x1775 * x351 -
    x1776 * x2147 + x1776 * x2325 + x1776 * x351 + x1779 * x2256 +
    x1779 * x2268 + x1779 * x556 - x1784 * x2256 - x1784 * x2268 -
    x1784 * x556 + x1954 * x2188 + x1954 * x2326 - x1957 * x2188 -
    x1957 * x2326 + x2324 * x839 + x839 * x872 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1449 - x2150) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[213] =
    140000.0 * sc[3] * x173 + 20000.0 * sc[3] * x1960 -
    20000.0 * sc[3] * x1966 + 90000.0 * sc[3] * x2003 + sc[3] * x8262 -
    20000000.0 * sc[6] * x1019 + 20000000.0 * sc[6] * x1020 -
    10000000.0 * sc[6] * x1821 + 10000000.0 * sc[6] * x1856 -
    24600000.0 * sc[6] * x1960 + 24600000.0 * sc[6] * x1966 -
    24000000.0 * sc[6] * x2003 - sc[6] * x9979 - x1470 * x1821 + x1470 * x1856 +
    x173 * x2266 + x1778 * x2147 - x1778 * x2325 - x1778 * x351 -
    x1780 * x2147 + x1780 * x2325 + x1780 * x351 + x1821 * x2256 +
    x1821 * x2268 + x1821 * x556 - x1856 * x2256 - x1856 * x2268 -
    x1856 * x556 + x1960 * x2188 + x1960 * x2326 - x1966 * x2188 -
    x1966 * x2326 + x2324 * x639 + x639 * x872 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x2145 - x2193) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[236] =
    20000.0 * sc[3] * x1971 - 20000.0 * sc[3] * x1973 +
    90000.0 * sc[3] * x1981 + 140000.0 * sc[3] * x436 -
    20000000.0 * sc[6] * x1023 + 20000000.0 * sc[6] * x1025 -
    10000000.0 * sc[6] * x1836 + 10000000.0 * sc[6] * x1841 -
    24600000.0 * sc[6] * x1971 + 24600000.0 * sc[6] * x1973 -
    24000000.0 * sc[6] * x1981 + x1002 * x2324 + x1002 * x872 + x10072 -
    x1470 * x1836 + x1470 * x1841 - x1678 * x2147 + x1678 * x2325 +
    x1797 * x2147 - x1797 * x2325 + x1836 * x2256 + x1836 * x2268 +
    x1836 * x556 - x1841 * x2256 - x1841 * x2268 - x1841 * x556 +
    x1971 * x2188 + x1971 * x2326 - x1973 * x2188 - x1973 * x2326 +
    2100000.0 * x2045 + x2266 * x436 - 2100000.0 * x660 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x2275 + x468) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[259] =
    140000.0 * sc[3] * x173 - 20000.0 * sc[3] * x1983 + 20000.0 * sc[3] * x926 +
    90000.0 * sc[3] * x951 + sc[4] * x9081 - 20000000.0 * sc[6] * x1027 +
    20000000.0 * sc[6] * x1031 + 10000000.0 * sc[6] * x1876 +
    24600000.0 * sc[6] * x1983 - 10000000.0 * sc[6] * x758 -
    24600000.0 * sc[6] * x926 - 24000000.0 * sc[6] * x951 + x1470 * x1876 -
    x1470 * x758 - x1663 * x2147 + x1663 * x2325 + x1663 * x351 + x173 * x2266 +
    x1750 * x2147 - x1750 * x2325 - x1750 * x351 - x1876 * x2256 -
    x1876 * x2268 - x1876 * x556 - x1983 * x2188 - x1983 * x2326 +
    4200000.0 * x2045 + x2188 * x926 + x2256 * x758 + x2268 * x758 +
    x2324 * x639 + x2326 * x926 + x556 * x758 + x639 * x872 - 4200000.0 * x660 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1516 - x2331) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[282] =
    24000000.0 * refCinv * sc[4] * sc[8] * x1325 + 90000.0 * sc[3] * x1559 +
    20000.0 * sc[3] * x1984 - 20000.0 * sc[3] * x652 + 140000.0 * sc[3] * x790 +
    sc[3] * x8321 + 20000000.0 * sc[4] * x1422 - 20000000.0 * sc[6] * x1063 +
    20000000.0 * sc[6] * x1065 - 24000000.0 * sc[6] * x1559 -
    10000000.0 * sc[6] * x1879 + 10000000.0 * sc[6] * x1894 -
    24600000.0 * sc[6] * x1984 + 24600000.0 * sc[6] * x652 + x10099 -
    x1470 * x1879 + x1470 * x1894 + x1531 * x872 + x1761 * x2147 -
    x1761 * x351 - x1765 * x2147 + x1765 * x351 + x1879 * x2256 +
    x1879 * x2268 + x1879 * x556 - x1894 * x2256 - x1894 * x2268 -
    x1894 * x556 + x1984 * x2188 + x1984 * x2326 - x2188 * x652 + x2266 * x790 -
    x2326 * x652 + 6600000.0 * x233 * x66 * x72 +
    24000000.0 * x324 * x452 * x66 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1407 - x2367) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[305] =
    20000.0 * sc[3] * x1996 - 20000000.0 * sc[6] * x1068 +
    20000000.0 * sc[6] * x1069 - sc[6] * x114 - 10000000.0 * sc[6] * x1896 -
    24600000.0 * sc[6] * x1996 + x10018 + x10114 + x10118 + x1386 * x2324 -
    x1470 * x1896 + x1830 * x2147 - x1830 * x2325 - x1830 * x351 -
    x1831 * x2147 + x1831 * x2325 + x1831 * x351 + x1896 * x2256 +
    x1896 * x2268 + x1896 * x556 - x1901 * x2256 - x1901 * x556 +
    x1996 * x2188 + x1996 * x2326 - x1998 * x2326 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x1050 + x754) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[328] =
    90000.0 * sc[3] * x553 + sc[3] * x8316 - 20000000.0 * sc[6] * x1070 -
    24000000.0 * sc[6] * x553 - 10000000.0 * sc[6] * x566 +
    20000000.0 * sc[6] * x668 - 24600000.0 * sc[6] * x909 +
    300000.0 * sc[7] * x1304 + x10118 + x10130 + x1386 * x2324 - x1470 * x566 +
    x1834 * x2147 - x1834 * x2325 - x1834 * x351 - x1835 * x2147 +
    x1835 * x2325 + x1835 * x351 - x1901 * x2256 - x1901 * x556 -
    x1998 * x2326 + x2188 * x909 + x2256 * x566 + x2326 * x909 + x556 * x566 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1036 - x622) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[351] =
    20000.0 * sc[3] * x1059 + 300000.0 * sc[3] * x1321 +
    90000.0 * sc[3] * x1724 - 20000.0 * sc[3] * x600 + 140000.0 * sc[3] * x791 -
    24600000.0 * sc[6] * x1059 - 20000000.0 * sc[6] * x1074 +
    20000000.0 * sc[6] * x1077 - 24000000.0 * sc[6] * x1724 +
    10000000.0 * sc[6] * x1823 - 10000000.0 * sc[6] * x1908 +
    24600000.0 * sc[6] * x600 - sc[6] * x9990 + x1059 * x2188 + x1059 * x2326 +
    x1386 * x2324 + x1386 * x872 + x1470 * x1823 - x1470 * x1908 -
    x1823 * x2256 - x1823 * x2268 - x1823 * x556 + x1838 * x2147 -
    x1838 * x2325 - x1838 * x351 - x1842 * x2147 + x1842 * x2325 +
    x1842 * x351 + x1908 * x2256 + x1908 * x2268 + x1908 * x556 +
    4200000.0 * x2045 - x2188 * x600 + x2266 * x791 - x2326 * x600 -
    4200000.0 * x660 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1297 - x130) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[374] =
    -20000000.0 * sc[6] * x1078 + 20000000.0 * sc[6] * x1081 -
    10000000.0 * sc[6] * x169 + x10146 + x10151 + x10156 + x10160 + x10162 +
    x10164 + x10165 - x1470 * x169 + x169 * x2256 + x169 * x2268 + x169 * x556 -
    x1848 * x2147 + x1848 * x2325 + x1848 * x351 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x504 + x846) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[397] =
    140000.0 * sc[3] * x1494 - 20000000.0 * sc[6] * x1082 -
    140000.0 * sc[6] * x1182 - 10000000.0 * sc[6] * x1892 + x10151 + x10156 +
    x10160 + x10162 + x10164 + x10165 + x10174 - x1470 * x1892 + x1494 * x2266 -
    x1850 * x2147 + x1850 * x2325 + x1850 * x351 + x1892 * x2256 +
    x1892 * x2268 + x1892 * x556 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x1080 + x849) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[420] =
    20000.0 * sc[3] * x1898 + 140000.0 * sc[3] * x191 + sc[4] * x9026 -
    20000000.0 * sc[6] * x1085 - 10000000.0 * sc[6] * x1888 -
    24600000.0 * sc[6] * x1898 + x10149 + x10155 + x10160 + x10162 + x10164 +
    x10165 + x10174 - x1470 * x1888 + x1843 * x2147 - x1855 * x2147 +
    x1855 * x2325 + x1855 * x351 + x1888 * x2256 + x1888 * x2268 +
    x1888 * x556 + x1898 * x2188 + x1898 * x2326 + x191 * x2266 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x1080 + x1782) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[443] =
    20000.0 * sc[3] * x1959 - 20000000.0 * sc[6] * x1086 +
    20000000.0 * sc[6] * x1087 - 10000000.0 * sc[6] * x1900 -
    24600000.0 * sc[6] * x1959 - 9260000.0 * sc[6] + sc[7] * x10007 + x10146 +
    x10149 + x10155 + x10164 + x10165 - x1470 * x1900 + x1825 * x2147 -
    x1825 * x2325 - x1825 * x351 - x1827 * x2147 + x1827 * x2325 +
    x1827 * x351 + x1893 * x2324 + x1900 * x2256 + x1900 * x2268 +
    x1900 * x556 + x1959 * x2188 + x1959 * x2326 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x1033 - x971) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[466] =
    90000.0 * sc[3] * x1283 + 140000.0 * sc[3] * x1905 +
    20000.0 * sc[3] * x557 + sc[3] * x8265 + 20000000.0 * sc[6] * x1083 -
    20000000.0 * sc[6] * x1090 - 90000.0 * sc[6] * x1280 -
    24000000.0 * sc[6] * x1283 + 24600000.0 * sc[6] * x1364 +
    10000000.0 * sc[6] * x1845 - 10000000.0 * sc[6] * x1943 -
    24600000.0 * sc[6] * x557 + x10149 + x10155 + x10160 + x10162 + x10164 +
    x10165 - x10201 - x1364 * x2188 + x1470 * x1845 - x1470 * x1943 -
    x1832 * x2147 + x1832 * x2325 + x1832 * x351 + x1843 * x2147 +
    x1905 * x2266 + x1943 * x2256 + x1943 * x2268 + x1943 * x556 +
    x2188 * x557 + x2326 * x557 + x9285 + x9899 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (-x1080 + x929) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[489] =
    -refC * sc[6] * x6063 + sc[1] * sc[3] * x1041 - 20000000.0 * sc[6] * x1099 +
    20000000.0 * sc[6] * x1104 - 10000000.0 * sc[6] * x1944 + x10146 + x10151 +
    x10156 + x10160 + x10162 + x10164 + x10165 - x1470 * x1944 - x1846 * x2147 +
    x1846 * x2325 + x1846 * x351 + x1944 * x2256 + x1944 * x2268 +
    x1944 * x556 +
    (-20000000.0 * sc[6] * x674 + 10000000.0 * sc[6] * x680 + x1470 * x680 -
     x2147 * x677 - x2256 * x680 - x2268 * x680 + x2325 * x677 + x351 * x677 -
     x556 * x680) *
      (x568 - x892) +
    (-10000000.0 * sc[6] * x681 - x1470 * x681 - x2147 * x678 + x2256 * x681 +
     x2268 * x681 + x2325 * x678 + x351 * x678 + x556 * x681) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-140000.0 * sc[3] * x230 - x2266 * x230) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-90000.0 * sc[3] * x555 + 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-20000.0 * sc[3] * x603 + 24600000.0 * sc[6] * x603 - x2147 * x679 -
     x2188 * x603 - x2324 * x642 + x2325 * x679 - x2326 * x603 + x351 * x679 -
     x642 * x872) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-140000.0 * sc[3] * x437 - 20000.0 * sc[3] * x561 +
     24600000.0 * sc[6] * x561 - 10000000.0 * sc[6] * x682 - x1470 * x682 -
     x2188 * x561 + x2256 * x682 - x2266 * x437 + x2268 * x682 - x2326 * x561 +
     x556 * x682) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[7] =
    sc[6] * x277 + x10217 - x2268 * x760 + x2268 * x823 - x2325 * x827 +
    x2325 * x961 - x2326 * x927 + x2326 * x956 + x8199 +
    (x2268 * x680 - x2325 * x677) * (-x1465 + x972) +
    (-x2268 * x681 - x2325 * x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[30] =
    -sc[7] * x2103 - sc[7] * x806 + x10219 - x1030 * x2268 - x1064 * x2325 +
    x1508 * x2268 - x1561 * x2326 + x2325 * x969 + x2326 * x494 + x8228 +
    (x2268 * x680 - x2325 * x677) * (x1649 - x1694) +
    (-x2268 * x681 - x2325 * x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[53] =
    -sc[7] * x7409 + x10219 - x1639 * x2268 - x1640 * x2325 + x1643 * x2268 -
    x1660 * x2326 + x1726 * x2326 + x2325 * x718 + x8255 +
    (x2268 * x680 - x2325 * x677) * (x1772 - x1785) +
    (-x2268 * x681 - x2325 * x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[76] =
    -130000.0 * sc[7] * x8307 - 420000000.0 * sc[7] * x8310 + x10219 +
    x1661 * x2325 - x1662 * x2325 - x1673 * x2268 + x1685 * x2268 -
    x1757 * x2326 + x1759 * x2326 + x8312 +
    (x2268 * x680 - x2325 * x677) * (x1822 - x1852) +
    (-x2268 * x681 - x2325 * x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[99] =
    4600000.0 * sc[4] * x40 * x8873 *
      exp(855.46833186802303 * invT - 0.9 * tc[0]) +
    sc[5] * x5771 + sc[6] * x7541 - sc[7] * x9074 - sc[7] * x9077 + x10219 +
    x1680 * x2268 + x1687 * x2325 - x1710 * x2268 - x1790 * x2326 +
    x1824 * x2326 - x2325 * x345 + x8364 +
    (x2268 * x680 - x2325 * x677) * (x1875 - x1903) +
    (-x2268 * x681 - x2325 * x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[122] =
    sc[4] * x5771 + sc[6] * x9166 + sc[6] * x9168 +
    x10214 * (1.68 * x691 * x8864 + 12.0 * x691 * x8866) + x1669 * x2325 -
    x1748 * x2268 - x1751 * x2325 + x1756 * x2268 - x1829 * x2326 +
    x1860 * x2326 + x8393 + 428918.91891891899 * x8858 * x8860 -
    428918.91891891899 * x8859 + 13800000.0 * x8875 -
    x8877 * (1.68 * x691 * x8864 + 12.0 * x691 * x8866) - 13800000.0 * x8887 +
    (x2268 * x680 - x2325 * x677) * (x1946 - x1986) +
    (-x2268 * x681 - x2325 * x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[145] = sc[0] * x277 + 1000000.0 * sc[12] * x768 + sc[14] * x1153 +
           sc[15] * x9990 + sc[4] * x7541 + sc[5] * x9166 + sc[5] * x9168 +
           sc[9] * x9979 + x10219 + x1760 * x2325 - x1762 * x2325 +
           x1764 * x2268 - x1881 * x2326 + x1885 * x2326 - x2268 * x323 +
           x8430 + x9986 + (x2268 * x680 - x2325 * x677) * (x2026 - x2051) +
           (-x2268 * x681 - x2325 * x678) *
             (x1008 - x1010 + (x674) * (x2026 - x2051)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x1534 - x1535 + (x675) * (x2026 - x2051) +
              (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1760 + x1762 + (x677) * (x2026 - x2051) +
              (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
              (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                        (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[168] = -300000.0 * sc[14] * x1304 - sc[19] * x10007 - sc[1] * x2103 -
           sc[1] * x806 - sc[2] * x7409 - 130000.0 * sc[3] * x8307 -
           420000000.0 * sc[3] * x8310 - sc[4] * x9074 - sc[4] * x9077 -
           x10006 + x10219 - x1049 * x435 + x1768 * x2325 - x1769 * x2325 +
           x1773 * x2268 - x1911 * x2326 + x1951 * x2326 - x225 * x2268 -
           12100.0 * x233 * exp(299.91713281961302 * invT) -
           8700.0 * x324 * exp(-490.13303249379697 * invT) -
           2300000.0 * x788 * x8881 + x8458 +
           (x2268 * x680 - x2325 * x677) * (x2093 - x2104) +
           (-x2268 * x681 - x2325 * x678) *
             (x1011 - x1013 + (x674) * (x2093 - x2104)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x1563 - x1573 + (x675) * (x2093 - x2104) +
              (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1768 + x1769 + (x677) * (x2093 - x2104) +
              (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
              (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                        (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[191] = -x10030 + x10219 + x1775 * x2325 - x1776 * x2325 - x1779 * x2268 +
           x1784 * x2268 - x1954 * x2326 + x1957 * x2326 + x8496 +
           (x2268 * x680 - x2325 * x677) * (x1449 - x2150) +
           (-x2268 * x681 - x2325 * x678) *
             (x1017 - x1018 + (x674) * (x1449 - x2150)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x1574 - x1575 + (x675) * (x1449 - x2150) +
              (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1775 + x1776 + (x677) * (x1449 - x2150) +
              (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
              (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                        (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[214] = sc[6] * x9979 + x10217 + x1778 * x2325 - x1780 * x2325 -
           x1821 * x2268 + x1856 * x2268 - x1960 * x2326 + x1966 * x2326 +
           x8525 + (x2268 * x680 - x2325 * x677) * (x2145 - x2193) +
           (-x2268 * x681 - x2325 * x678) *
             (x1019 - x1020 + (x674) * (x2145 - x2193)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x796 - x986 + (x675) * (x2145 - x2193) +
              (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1778 + x1780 + (x677) * (x2145 - x2193) +
              (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
              (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                        (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[237] = x10214 * (0.42 * x691 * x8864 + 3.0 * x691 * x8866) - x1678 * x2325 +
           x1797 * x2325 - x1836 * x2268 + x1841 * x2268 - x1971 * x2326 +
           x1973 * x2326 + x8559 + 107229.72972973 * x8858 * x8860 -
           107229.72972973 * x8859 + 3450000.0 * x8875 -
           x8877 * (0.42 * x691 * x8864 + 3.0 * x691 * x8866) -
           3450000.0 * x8887 + (x2268 * x680 - x2325 * x677) * (-x2275 + x468) +
           (-x2268 * x681 - x2325 * x678) *
             (x1023 - x1025 + (x674) * (-x2275 + x468)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x1584 - x1586 + (x675) * (-x2275 + x468) +
              (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (x1678 - x1797 + (x677) * (-x2275 + x468) +
              (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
              (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                        (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[260] = x10217 - x1663 * x2325 + x1750 * x2325 + x1876 * x2268 +
           x1983 * x2326 - x2268 * x758 - x2326 * x926 + x8586 +
           (x2268 * x680 - x2325 * x677) * (x1516 - x2331) +
           (-x2268 * x681 - x2325 * x678) *
             (x1027 - x1031 + (x674) * (x1516 - x2331)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x1587 - x1588 + (x675) * (x1516 - x2331) +
              (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (x1663 - x1750 + (x677) * (x1516 - x2331) +
              (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
              (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                        (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[283] = 1000000.0 * sc[6] * x768 + x10219 + x1761 * x2325 - x1765 * x2325 -
           x1879 * x2268 + x1894 * x2268 - x1984 * x2326 + x2326 * x652 +
           x8613 + (x2268 * x680 - x2325 * x677) * (x1407 - x2367) +
           (-x2268 * x681 - x2325 * x678) *
             (x1063 - x1065 + (x674) * (x1407 - x2367)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (-x1459 + x1589 + (x675) * (x1407 - x2367) +
              (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1761 + x1765 + (x677) * (x1407 - x2367) +
              (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
              (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                        (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[306] = x10224 + x1830 * x2325 - x1831 * x2325 - x1896 * x2268 +
           x1901 * x2268 - x1996 * x2326 + x1998 * x2326 + x8641 +
           (x2268 * x680 - x2325 * x677) * (-x1050 + x754) +
           (-x2268 * x681 - x2325 * x678) *
             (x1068 - x1069 + (x674) * (-x1050 + x754)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (x884 - x890 + (x675) * (-x1050 + x754) +
              (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1830 + x1831 + (x677) * (-x1050 + x754) +
              (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
              (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                        (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[329] =
    sc[6] * x1153 - 300000.0 * sc[7] * x1304 + x10224 + x1834 * x2325 -
    x1835 * x2325 + x1901 * x2268 + x1998 * x2326 - x2268 * x566 -
    x2326 * x909 + x8665 + (x2268 * x680 - x2325 * x677) * (x1036 - x622) +
    (-x2268 * x681 - x2325 * x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[352] =
    sc[6] * x9990 + x10224 - x1059 * x2326 + x1823 * x2268 + x1838 * x2325 -
    x1842 * x2325 - x1908 * x2268 + x2326 * x600 + x8691 +
    (x2268 * x680 - x2325 * x677) * (x1297 - x130) +
    (-x2268 * x681 - x2325 * x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[375] =
    x10229 - x169 * x2268 - x1848 * x2325 +
    (x2268 * x680 - x2325 * x677) * (-x504 + x846) +
    (-x2268 * x681 - x2325 * x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[398] = x10229 - x1850 * x2325 - x1892 * x2268 +
           (x2268 * x680 - x2325 * x677) * (-x1080 + x849) +
           (-x2268 * x681 - x2325 * x678) *
             (x1082 - x1083 + (x674) * (-x1080 + x849)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (-x1681 + x1689 + (x675) * (-x1080 + x849) +
              (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1843 + x1850 + (x677) * (-x1080 + x849) +
              (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
              (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                        (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[421] = 300000.0 * sc[6] * x1898 + x10228 - x1855 * x2325 - x1888 * x2268 -
           x1898 * x2326 + x8728 +
           (x2268 * x680 - x2325 * x677) * (-x1080 + x1782) +
           (-x2268 * x681 - x2325 * x678) *
             (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
              (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
              (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
              (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                        (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[444] =
    300000.0 * sc[6] * x1959 - sc[7] * x10007 + x10219 + x1364 * x2326 +
    x1825 * x2325 - x1827 * x2325 + x1845 * x2268 - x1900 * x2268 -
    x1959 * x2326 + x8728 + (x2268 * x680 - x2325 * x677) * (x1033 - x971) +
    (-x2268 * x681 - x2325 * x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[467] = 300000.0 * sc[6] * x557 + x10201 + x10228 - x1832 * x2325 -
           x1943 * x2268 - x2326 * x557 + x8728 +
           (x2268 * x680 - x2325 * x677) * (-x1080 + x929) +
           (-x2268 * x681 - x2325 * x678) *
             (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
           (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
             (-x1681 + x1730 + (x675) * (-x1080 + x929) +
              (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
           (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
             (x1832 - x1843 + (x677) * (-x1080 + x929) +
              (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
              (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                        (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[490] =
    x10229 - x1846 * x2325 - x1944 * x2268 +
    (x2268 * x680 - x2325 * x677) * (x568 - x892) +
    (-x2268 * x681 - x2325 * x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-300000.0 * sc[6] * x603 - x2325 * x679 + x2326 * x603) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-300000.0 * sc[6] * x561 - x2268 * x682 + x2326 * x561) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[8] =
    90000000.0 * sc[1] * x657 + 30000000.0 * sc[1] * x760 * x83 -
    30000000.0 * sc[1] * x823 * x83 + 48000000.0 * sc[2] * x760 -
    48000000.0 * sc[2] * x823 + 30000000.0 * sc[8] * x1465 -
    11000000.0 * sc[8] * x520 - 40000000.0 * sc[8] * x644 - sc[8] * x75 -
    392000.0 * sc[8] * x760 + 392000.0 * sc[8] * x823 -
    8480000.0 * sc[8] * x827 + 40000000.0 * sc[8] * x855 +
    8480000.0 * sc[8] * x961 - 30000000.0 * sc[8] * x972 + x1014 * x2091 -
    x1014 * x2365 - x1014 * x2366 + x10253 + x110 * x520 - x1549 * x827 +
    x1549 * x961 + x1652 + x1705 + x1808 * x927 - x1808 * x956 + x1887 * x2272 +
    x1887 * x872 - x2043 * x760 + x2043 * x823 - x2090 * x827 + x2090 * x961 -
    x2091 * x987 + x2110 * x644 - x2110 * x855 - x2148 * x927 + x2148 * x956 +
    x2183 * x520 - x2253 * x827 + x2253 * x961 + x2329 * x760 - x2329 * x823 +
    x2360 * x644 - x2360 * x855 - x2364 * x760 + x2364 * x823 + x2365 * x987 +
    x2366 * x987 + x359 * x927 - x359 * x956 + x657 * x714 - x699 * x927 +
    x699 * x956 + x8855 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x1465 + x972) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[31] =
    sc[12] * x562 + 40000000.0 * sc[14] * x1439 + sc[14] * x696 +
    sc[17] * x202 + sc[19] * x2128 + 30000000.0 * sc[1] * x1030 * x83 +
    90000000.0 * sc[1] * x1200 - 30000000.0 * sc[1] * x1508 * x83 +
    sc[20] * x2136 + 48000000.0 * sc[2] * x1030 - 48000000.0 * sc[2] * x1508 -
    392000.0 * sc[8] * x1030 - 8480000.0 * sc[8] * x1064 +
    392000.0 * sc[8] * x1508 - 30000000.0 * sc[8] * x1649 +
    30000000.0 * sc[8] * x1694 - 11000000.0 * sc[8] * x540 -
    40000000.0 * sc[8] * x893 + 40000000.0 * sc[8] * x899 +
    8480000.0 * sc[8] * x969 - x1030 * x2043 + x1030 * x2329 - x1030 * x2364 +
    x10372 + x10400 - x1064 * x1549 - x1064 * x2090 - x1064 * x2253 +
    x110 * x540 + x1200 * x714 - 90000000.0 * x1209 - x1211 * x2091 +
    x1211 * x2365 + x1211 * x2366 + x1370 * x2272 + x1370 * x872 +
    x1389 * x2091 - x1389 * x2365 - x1389 * x2366 + x139 * x2182 +
    x1508 * x2043 - x1508 * x2329 + x1508 * x2364 + x1549 * x969 +
    x1561 * x1808 - x1561 * x2148 + x1561 * x359 - x1561 * x699 - x1808 * x494 +
    x2090 * x969 + x2108 * x40 * x645 + x2110 * x893 - x2110 * x899 +
    x2148 * x494 + 9980000.0 * x2149 * x324 - x2176 + x2183 * x540 +
    x2253 * x969 + 30000000.0 * x233 * x83 + x2360 * x893 - x2360 * x899 -
    x359 * x494 + x422 + x494 * x699 - 90000000.0 * x778 + x825 + x8942 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1649 - x1694) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[54] =
    70000000.0 * sc[0] * x1419 - 70000000.0 * sc[0] * x1461 +
    19.2 * sc[14] * exp(x943) + 90000000.0 * sc[1] * x1075 +
    30000000.0 * sc[1] * x1639 * x83 - 30000000.0 * sc[1] * x1643 * x83 +
    sc[20] * x5661 - 11000000.0 * sc[8] * x1208 - 392000.0 * sc[8] * x1639 -
    8480000.0 * sc[8] * x1640 + 392000.0 * sc[8] * x1643 -
    30000000.0 * sc[8] * x1772 + 30000000.0 * sc[8] * x1785 +
    8480000.0 * sc[8] * x718 - 40000000.0 * sc[8] * x970 +
    40000000.0 * sc[8] * x973 - 84300000.0 * sc[8] + x10400 + x10424 +
    x1075 * x714 + x110 * x1208 + x1208 * x2183 - x1419 * x2091 +
    x1419 * x2365 + x1419 * x2366 + x1461 * x2091 - x1461 * x2365 -
    x1461 * x2366 - x1549 * x1640 + x1549 * x718 - x1639 * x2043 +
    x1639 * x2329 - x1639 * x2364 - x1640 * x2090 - x1640 * x2253 +
    x1643 * x2043 - x1643 * x2329 + x1643 * x2364 + x1660 * x1808 -
    x1660 * x2148 + x1660 * x359 - x1660 * x699 + x1674 * x2272 + x1674 * x872 -
    x1726 * x1808 + x1726 * x2148 - x1726 * x359 + x1726 * x699 + x2037 * x970 -
    x2037 * x973 + x2090 * x718 + x2110 * x970 - x2110 * x973 + x2253 * x718 +
    x2360 * x970 - x2360 * x973 + x5663 + x611 * x901 + x8983 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1772 - x1785) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[77] =
    -70000000.0 * sc[0] * x1517 + 70000000.0 * sc[0] * x854 +
    30000000.0 * sc[1] * x1673 * x83 - 30000000.0 * sc[1] * x1685 * x83 +
    90000000.0 * sc[1] * x1708 + 48000000.0 * sc[2] * x1673 -
    48000000.0 * sc[2] * x1685 - 11000000.0 * sc[8] * x1658 +
    8480000.0 * sc[8] * x1661 - 8480000.0 * sc[8] * x1662 -
    392000.0 * sc[8] * x1673 + 392000.0 * sc[8] * x1685 -
    30000000.0 * sc[8] * x1822 + 30000000.0 * sc[8] * x1852 - sc[8] * x7511 -
    sc[8] * x8325 - 40000000.0 * sc[8] * x977 + 40000000.0 * sc[8] * x978 +
    sc[9] * x8262 + x10400 + x10446 + x110 * x1658 + x1517 * x2091 -
    x1517 * x2365 - x1517 * x2366 + x1549 * x1661 - x1549 * x1662 +
    x1658 * x2183 + x1661 * x2090 + x1661 * x2253 - x1662 * x2090 -
    x1662 * x2253 - x1673 * x2043 + x1673 * x2329 - x1673 * x2364 +
    x1685 * x2043 - x1685 * x2329 + x1685 * x2364 + x1708 * x714 +
    x1757 * x1808 - x1757 * x2148 + x1757 * x359 - x1757 * x699 -
    x1759 * x1808 + x1759 * x2148 - x1759 * x359 + x1759 * x699 +
    x1766 * x2272 + x1766 * x872 + x2037 * x977 - x2037 * x978 - x2091 * x854 +
    x2110 * x977 - x2110 * x978 + x2360 * x977 - x2360 * x978 + x2365 * x854 +
    x2366 * x854 + x9025 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1822 - x1852) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[100] =
    70000000.0 * sc[0] * x1519 - 70000000.0 * sc[0] * x1521 + sc[12] * x8359 +
    sc[13] * x9093 - 30000000.0 * sc[1] * x1680 * x83 +
    30000000.0 * sc[1] * x1710 * x83 + 90000000.0 * sc[1] * x1745 -
    48000000.0 * sc[2] * x1680 + 48000000.0 * sc[2] * x1710 +
    392000.0 * sc[8] * x1680 + 8480000.0 * sc[8] * x1687 -
    392000.0 * sc[8] * x1710 - 11000000.0 * sc[8] * x182 -
    30000000.0 * sc[8] * x1875 + 30000000.0 * sc[8] * x1903 -
    8480000.0 * sc[8] * x345 - 40000000.0 * sc[8] * x980 +
    40000000.0 * sc[8] * x981 + x10400 + x10469 + x110 * x182 - x1519 * x2091 +
    x1519 * x2365 + x1519 * x2366 + x1521 * x2091 - x1521 * x2365 -
    x1521 * x2366 + x1549 * x1687 - x1549 * x345 + x1680 * x2043 -
    x1680 * x2329 + x1680 * x2364 + x1687 * x2090 + x1687 * x2253 -
    x1710 * x2043 + x1710 * x2329 - x1710 * x2364 + x1745 * x714 +
    x1790 * x1808 - x1790 * x2148 + x1790 * x359 - x1790 * x699 -
    x1808 * x1824 + x182 * x2183 + x1824 * x2148 - x1824 * x359 + x1824 * x699 +
    x1889 * x2272 + x1889 * x872 + x2037 * x980 - x2037 * x981 - x2090 * x345 +
    x2110 * x980 - x2110 * x981 - x2253 * x345 + x2360 * x980 - x2360 * x981 +
    13400000.0 * x614 * x901 + x9033 + x9131 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1875 - x1903) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[123] =
    30000000.0 * sc[1] * x1748 * x83 - 30000000.0 * sc[1] * x1756 * x83 +
    90000000.0 * sc[1] * x1781 + 48000000.0 * sc[2] * x1748 -
    48000000.0 * sc[2] * x1756 + 8480000.0 * sc[8] * x1669 -
    392000.0 * sc[8] * x1748 - 8480000.0 * sc[8] * x1751 +
    392000.0 * sc[8] * x1756 - 11000000.0 * sc[8] * x1897 -
    30000000.0 * sc[8] * x1946 + 30000000.0 * sc[8] * x1986 - sc[8] * x9132 -
    40000000.0 * sc[8] * x989 + 40000000.0 * sc[8] * x990 -
    1.61333333333333e+66 * x10255 * x1570 +
    1.61333333333333e+66 * x10255 * x435 * x702 - x10273 * x10476 +
    3.54e+38 * x10287 * x10305 * (1.68 * x10288 * x691 + 12.0 * x10329 * x691) +
    2.124e+39 * x10297 - 1.77333962264151e+67 * x10301 - 2.124e+39 * x10305 +
    x10308 * x10476 + 1.77333962264151e+67 * x10311 - 1.32e+37 * x10326 -
    x10333 * x10335 * (1.68 * x10288 * x691 + 12.0 * x10329 * x691) + x10349 +
    x10376 * x10471 + 4.375896e+86 * x10378 - x10471 * x371 + x10509 -
    x1058 * x5879 - 2.4576e+21 * x1091 * x266 + x110 * x1897 -
    1.92e+16 * x1186 - 4.375896e+86 * x123 * x1477 + 2.4576e+21 * x1446 * x266 +
    2.562e+47 * x1474 * x2363 - x1523 * x2091 + x1523 * x2365 + x1523 * x2366 +
    x1533 * x2091 - x1533 * x2365 - x1533 * x2366 + x1549 * x1669 -
    x1549 * x1751 + 1.32e+37 * x1568 * x2371 + x1669 * x2090 + x1669 * x2253 -
    x1748 * x2043 + x1748 * x2329 - x1748 * x2364 - x1751 * x2090 -
    x1751 * x2253 + x1756 * x2043 - x1756 * x2329 + x1756 * x2364 +
    x1781 * x714 + x1808 * x1829 - x1808 * x1860 - x1829 * x2148 +
    x1829 * x359 - x1829 * x699 + x1860 * x2148 - x1860 * x359 + x1860 * x699 +
    x1891 * x2272 + x1891 * x872 + x1897 * x2183 + x2110 * x989 - x2110 * x990 -
    2.562e+47 * x233 * x2363 * x748 + x2360 * x989 - x2360 * x990 +
    x5518 * x5879 + x6009 + x9199 + 1.92e+16 * x966 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1946 - x1986) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[146] =
    70000000.0 * sc[0] * x1534 - 70000000.0 * sc[0] * x1535 -
    30000000.0 * sc[1] * x1764 * x83 + 90000000.0 * sc[1] * x1839 +
    30000000.0 * sc[1] * x323 * x83 - 40000000.0 * sc[8] * x1008 +
    40000000.0 * sc[8] * x1010 + 8480000.0 * sc[8] * x1760 -
    8480000.0 * sc[8] * x1762 + 392000.0 * sc[8] * x1764 -
    11000000.0 * sc[8] * x1953 - 30000000.0 * sc[8] * x2026 +
    30000000.0 * sc[8] * x2051 - 392000.0 * sc[8] * x323 - 14400000.0 * sc[8] +
    sc[9] * x9979 + x1008 * x2037 + x1008 * x2110 + x1008 * x2360 -
    x1010 * x2037 - x1010 * x2110 - x1010 * x2360 + x10400 + x10532 +
    x110 * x1953 + x1366 * x2272 + x1366 * x872 - x1534 * x2091 +
    x1534 * x2365 + x1534 * x2366 + x1535 * x2091 - x1535 * x2365 -
    x1535 * x2366 + x1549 * x1760 - x1549 * x1762 + x1760 * x2090 +
    x1760 * x2253 - x1762 * x2090 - x1762 * x2253 + x1764 * x2043 -
    x1764 * x2329 + x1764 * x2364 + x1808 * x1881 - x1808 * x1885 +
    x1839 * x714 - x1881 * x2148 + x1881 * x359 - x1881 * x699 + x1885 * x2148 -
    x1885 * x359 + x1885 * x699 + x1953 * x2183 - x2043 * x323 + x2329 * x323 -
    x2364 * x323 + x6056 + x9252 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x2026 - x2051) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[169] =
    refC * x1989 * x92 + 70000000.0 * sc[0] * x1563 -
    70000000.0 * sc[0] * x1573 - 30000000.0 * sc[1] * x1773 * x83 +
    32000000.0 * sc[1] * x1893 + 90000000.0 * sc[1] * x1905 +
    30000000.0 * sc[1] * x225 * x83 - 40000000.0 * sc[8] * x1011 +
    40000000.0 * sc[8] * x1013 + 8480000.0 * sc[8] * x1768 -
    8480000.0 * sc[8] * x1769 + 392000.0 * sc[8] * x1773 -
    30000000.0 * sc[8] * x2093 + 30000000.0 * sc[8] * x2104 -
    392000.0 * sc[8] * x225 - x10006 + x1011 * x1599 + x1011 * x2037 +
    x1011 * x2110 + x1011 * x2360 - x1013 * x1599 - x1013 * x2037 -
    x1013 * x2110 - x1013 * x2360 + x10398 + x10555 + x10559 + x1444 * x1563 -
    x1444 * x1573 + x1549 * x1768 - x1549 * x1769 - x1563 * x2091 +
    x1563 * x2365 + x1563 * x2366 + x1573 * x2091 - x1573 * x2365 -
    x1573 * x2366 + x1768 * x2090 + x1768 * x2253 - x1769 * x2090 -
    x1769 * x2253 + x1773 * x2043 - x1773 * x2329 + x1773 * x2364 +
    x1808 * x1911 - x1808 * x1951 + x1905 * x714 - x1911 * x2148 +
    x1911 * x359 - x1911 * x699 + x1951 * x2148 - x1951 * x359 + x1951 * x699 -
    x2043 * x225 + x225 * x2329 - x225 * x2364 + x5510 + x6141 + x7694 + x9285 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x2093 - x2104) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[192] =
    -sc[0] * x75 - sc[15] * x10594 - 50000000.0 * sc[16] - sc[19] * x10563 +
    90000000.0 * sc[1] * x1197 + 30000000.0 * sc[1] * x1779 * x83 -
    30000000.0 * sc[1] * x1784 * x83 - sc[20] * x10566 +
    48000000.0 * sc[2] * x1779 - 48000000.0 * sc[2] * x1784 -
    84300000.0 * sc[2] - sc[3] * x7511 - sc[3] * x8325 - sc[5] * x9132 -
    14400000.0 * sc[6] - 40000000.0 * sc[8] * x1017 +
    40000000.0 * sc[8] * x1018 - 7.08e+38 * sc[8] * x10295 * x40 * exp(x2361) -
    30000000.0 * sc[8] * x1449 + 8480000.0 * sc[8] * x1775 -
    8480000.0 * sc[8] * x1776 - 392000.0 * sc[8] * x1779 +
    392000.0 * sc[8] * x1784 + 30000000.0 * sc[8] * x2150 -
    11000000.0 * sc[8] * x447 -
    19960000.0 * sc[8] * exp(-5334.0966575300299 * invT + 0.1 * tc[0]) -
    9.84 * sc[8] * exp(-g_RT_qss[1] - x1332 + x2359) -
    64000000.0 * sc[8] * exp(-g_RT_qss[2] + 286.83349950869001 * invT - x1332) -
    x10030 + x1017 * x2110 + x1017 * x2360 - x1018 * x2110 - x1018 * x2360 -
    x10347 * x16 + x10400 + x10603 + x10608 + x10610 - x1079 - x119 +
    11000000.0 * x1284 + x1549 * x1775 - x1549 * x1776 - x1574 * x2091 +
    x1574 * x2365 + x1574 * x2366 + x1575 * x2091 - x1575 * x2365 -
    x1575 * x2366 + x1775 * x2090 + x1775 * x2253 - x1776 * x2090 -
    x1776 * x2253 - x1779 * x2043 - x1779 * x2364 + x1784 * x2043 +
    x1784 * x2364 + x1808 * x1954 - x1808 * x1957 - x1954 * x2148 +
    x1954 * x359 - x1954 * x699 + x1957 * x2148 - x1957 * x359 + x1957 * x699 -
    x2035 * x233 - 12000000.0 * x2117 * x597 - x2143 * x324 + x2183 * x447 -
    x2252 * x435 + x2272 * x839 - 392000.0 * x233 - 40000000.0 * x324 * x449 -
    90000000.0 * x332 * x435 - x367 - 8480000.0 * x435 + 11000000.0 * x478 -
    30000000.0 * x518 - x6233 + x6266 - 40000000.0 * x645 + x839 * x872 +
    x9351 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1449 - x2150) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[215] =
    8480000.0 * sc[10] * x1213 + 392000.0 * sc[13] * x1158 + sc[19] * x86 +
    90000000.0 * sc[1] * x173 + 30000000.0 * sc[1] * x1821 * x83 -
    30000000.0 * sc[1] * x1856 * x83 + 11000000.0 * sc[20] * x1266 +
    48000000.0 * sc[2] * x1821 - 48000000.0 * sc[2] * x1856 + sc[3] * x8262 +
    sc[6] * x9979 - 40000000.0 * sc[8] * x1019 + 40000000.0 * sc[8] * x1020 +
    8480000.0 * sc[8] * x1778 - 8480000.0 * sc[8] * x1780 -
    392000.0 * sc[8] * x1821 + 392000.0 * sc[8] * x1856 -
    11000000.0 * sc[8] * x2003 - 30000000.0 * sc[8] * x2145 +
    30000000.0 * sc[8] * x2193 + x1019 * x2110 + x1019 * x2360 - x1020 * x2110 -
    x1020 * x2360 + x10642 + x110 * x2003 + x1549 * x1778 - x1549 * x1780 +
    x1582 * x324 + x1705 + x173 * x714 + x1778 * x2090 + x1778 * x2253 -
    x1780 * x2090 - x1780 * x2253 + x1808 * x1960 - x1808 * x1966 -
    x1821 * x2043 + x1821 * x2329 - x1821 * x2364 + x1856 * x2043 -
    x1856 * x2329 + x1856 * x2364 - x1960 * x2148 + x1960 * x359 -
    x1960 * x699 + x1966 * x2148 - x1966 * x359 + x1966 * x699 + x2003 * x2183 -
    x2091 * x796 + x2091 * x986 + 32000000.0 * x2117 * x597 + x2272 * x639 +
    x233 * x76 + x2365 * x796 - x2365 * x986 + x2366 * x796 - x2366 * x986 +
    x6344 + x639 * x872 + 4.92 * x645 * exp(x2359) + x813 + x9352 + x9391 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x2145 - x2193) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[238] =
    sc[14] * x10646 + 30000000.0 * sc[1] * x1836 * x83 -
    30000000.0 * sc[1] * x1841 * x83 + 90000000.0 * sc[1] * x436 -
    5.31e+38 * ((sc[8]) * (sc[8])) * x10295 * exp(x2361) -
    40000000.0 * sc[8] * x1023 + 40000000.0 * sc[8] * x1025 -
    8480000.0 * sc[8] * x1678 + 8480000.0 * sc[8] * x1797 -
    392000.0 * sc[8] * x1836 + 392000.0 * sc[8] * x1841 -
    11000000.0 * sc[8] * x1981 + 30000000.0 * sc[8] * x2275 -
    30000000.0 * sc[8] * x468 + 8480000.0 * sc[9] * x1213 + x1002 * x2272 +
    x1002 * x872 + x1023 * x2110 + x1023 * x2360 - x1025 * x2110 -
    x1025 * x2360 - 4.0333333333333298e+65 * x10255 * x1570 -
    6.405e+46 * x10259 - x10273 * x10667 +
    3.54e+38 * x10287 * x10305 * (0.42 * x10288 * x691 + 3.0 * x10329 * x691) +
    5.31e+38 * x10295 * x1539 * x2362 - 4.4333490566037699e+66 * x10301 +
    x10308 * x10667 + 4.4333490566037699e+66 * x10311 +
    4.0333333333333298e+65 * x10323 - 3.3e+36 * x10326 -
    x10333 * x10335 * (0.42 * x10288 * x691 + 3.0 * x10329 * x691) + x10349 +
    x10376 * x10653 + 1.093974e+86 * x10378 - x1058 * x6356 - x10653 * x371 +
    x10690 - 6.144e+20 * x1091 * x266 + x110 * x1981 -
    4800000000000000.0 * x1186 - 1.093974e+86 * x123 * x1477 +
    6.144e+20 * x1446 * x266 + 6.405e+46 * x1474 * x2363 - x1549 * x1678 +
    x1549 * x1797 + 3.3e+36 * x1568 * x2371 - x1584 * x2091 + x1584 * x2365 +
    x1584 * x2366 + x1586 * x2091 - x1586 * x2365 - x1586 * x2366 -
    x1678 * x2090 - x1678 * x2253 + x1797 * x2090 + x1797 * x2253 +
    x1808 * x1971 - x1808 * x1973 - x1836 * x2043 + x1836 * x2329 -
    x1836 * x2364 + x1841 * x2043 - x1841 * x2329 + x1841 * x2364 -
    x1971 * x2148 + x1971 * x359 - x1971 * x699 + x1973 * x2148 - x1973 * x359 +
    x1973 * x699 + x1981 * x2183 + x2125 + x5518 * x6356 + x6230 + x9447 +
    4800000000000000.0 * x966 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x2275 + x468) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[261] =
    90000000.0 * sc[1] * x173 - 30000000.0 * sc[1] * x1876 * x83 +
    30000000.0 * sc[1] * x758 * x83 - 48000000.0 * sc[2] * x1876 +
    48000000.0 * sc[2] * x758 - 40000000.0 * sc[8] * x1027 +
    40000000.0 * sc[8] * x1031 - 30000000.0 * sc[8] * x1516 -
    8480000.0 * sc[8] * x1663 + 8480000.0 * sc[8] * x1750 +
    392000.0 * sc[8] * x1876 + 30000000.0 * sc[8] * x2331 -
    392000.0 * sc[8] * x758 - 11000000.0 * sc[8] * x951 + x1027 * x2110 +
    x1027 * x2360 - x1031 * x2110 - x1031 * x2360 + x10713 + x110 * x951 -
    x1549 * x1663 + x1549 * x1750 - x1587 * x2091 + x1587 * x2365 +
    x1587 * x2366 + x1588 * x2091 - x1588 * x2365 - x1588 * x2366 -
    x1663 * x2090 - x1663 * x2253 + x1705 + x173 * x714 + x1750 * x2090 +
    x1750 * x2253 - x1808 * x1983 + x1808 * x926 + x1876 * x2043 -
    x1876 * x2329 + x1876 * x2364 + x1983 * x2148 - x1983 * x359 +
    x1983 * x699 - x2043 * x758 - x2148 * x926 + x2183 * x951 + x2272 * x639 +
    x2329 * x758 - x2364 * x758 + x359 * x926 + x439 + x639 * x872 -
    x699 * x926 + x9483 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1516 - x2331) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[284] =
    -70000000.0 * sc[0] * x1459 + 70000000.0 * sc[0] * x1589 +
    30000000.0 * sc[1] * x1879 * x83 - 30000000.0 * sc[1] * x1894 * x83 +
    sc[1] * x562 + 90000000.0 * sc[1] * x790 + 48000000.0 * sc[2] * x1879 -
    48000000.0 * sc[2] * x1894 + sc[4] * x8359 - 40000000.0 * sc[8] * x1063 +
    40000000.0 * sc[8] * x1065 - 30000000.0 * sc[8] * x1407 -
    11000000.0 * sc[8] * x1559 + 8480000.0 * sc[8] * x1761 -
    8480000.0 * sc[8] * x1765 - 392000.0 * sc[8] * x1879 +
    392000.0 * sc[8] * x1894 + 30000000.0 * sc[8] * x2367 + x10400 +
    x1063 * x2037 + x1063 * x2110 + x1063 * x2360 - x1065 * x2037 -
    x1065 * x2110 - x1065 * x2360 + x10738 + x110 * x1559 + x1459 * x2091 -
    x1459 * x2365 - x1459 * x2366 + x1531 * x2272 + x1531 * x872 +
    x1549 * x1761 - x1549 * x1765 + x1559 * x2183 - x1589 * x2091 +
    x1589 * x2365 + x1589 * x2366 + x1761 * x2090 + x1761 * x2253 -
    x1765 * x2090 - x1765 * x2253 + x1808 * x1984 - x1808 * x652 -
    x1879 * x2043 + x1879 * x2329 - x1879 * x2364 + x1894 * x2043 -
    x1894 * x2329 + x1894 * x2364 - x1984 * x2148 + x1984 * x359 -
    x1984 * x699 + x2148 * x652 - x359 * x652 + x652 * x699 + x714 * x790 +
    x9517 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1407 - x2367) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[307] =
    refC * x1989 * x92 + 30000000.0 * sc[1] * x1896 * x83 +
    48000000.0 * sc[2] * x1896 - 48000000.0 * sc[2] * x1901 + sc[4] * x9093 +
    30000000.0 * sc[8] * x1050 - 40000000.0 * sc[8] * x1068 +
    40000000.0 * sc[8] * x1069 + 8480000.0 * sc[8] * x1830 -
    8480000.0 * sc[8] * x1831 - 392000.0 * sc[8] * x1896 -
    30000000.0 * sc[8] * x754 + 392000.0 * sc[9] * x1158 + x10265 + x10559 +
    x1068 * x2110 + x1068 * x2360 - x1069 * x2110 - x1069 * x2360 - x10739 +
    x10762 + x1549 * x1830 - x1549 * x1831 + x1808 * x1996 - x1808 * x1998 +
    x1830 * x2090 + x1830 * x2253 - x1831 * x2090 - x1831 * x2253 -
    x1896 * x2043 + x1896 * x2329 - x1896 * x2364 - x1901 * x2329 -
    x1996 * x2148 + x1996 * x359 - x1996 * x699 - x2091 * x884 + x2091 * x890 +
    x2177 + x2365 * x884 - x2365 * x890 + x2366 * x884 - x2366 * x890 +
    x714 * x791 + x9569 + x960 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x1050 + x754) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[330] =
    sc[10] * x10646 + 40000000.0 * sc[1] * x1439 +
    30000000.0 * sc[1] * x566 * x83 + sc[1] * x696 + 19.2 * sc[2] * exp(x943) -
    30000000.0 * sc[8] * x1036 - 40000000.0 * sc[8] * x1070 +
    8480000.0 * sc[8] * x1834 - 8480000.0 * sc[8] * x1835 -
    11000000.0 * sc[8] * x553 - 392000.0 * sc[8] * x566 +
    30000000.0 * sc[8] * x622 + 40000000.0 * sc[8] * x668 + x10265 + x10267 +
    x10269 + x10349 + x1070 * x2110 + x1070 * x2360 + x1549 * x1834 -
    x1549 * x1835 + x1648 * x2091 - x1648 * x2365 - x1648 * x2366 -
    x1808 * x1998 + x1808 * x909 + x1834 * x2090 + x1834 * x2253 -
    x1835 * x2090 - x1835 * x2253 - x2043 * x566 + x207 - x2091 * x898 -
    x2110 * x668 - x2148 * x909 + x2177 + x2183 * x553 - x2360 * x668 -
    x2364 * x566 + x2365 * x898 + x2366 * x898 + x359 * x909 - x699 * x909 +
    x714 * x791 + x9613 + x985 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1036 - x622) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[353] =
    -30000000.0 * sc[1] * x1823 * x83 + 30000000.0 * sc[1] * x1908 * x83 -
    48000000.0 * sc[2] * x1823 + 48000000.0 * sc[2] * x1908 - sc[8] * x10594 -
    40000000.0 * sc[8] * x1074 + 40000000.0 * sc[8] * x1077 -
    30000000.0 * sc[8] * x1297 + 30000000.0 * sc[8] * x130 -
    11000000.0 * sc[8] * x1724 + 392000.0 * sc[8] * x1823 +
    8480000.0 * sc[8] * x1838 - 8480000.0 * sc[8] * x1842 -
    392000.0 * sc[8] * x1908 + x10314 + x10333 + x10349 + x1059 * x1808 -
    x1059 * x2148 + x1059 * x359 - x1059 * x699 + x1074 * x2110 +
    x1074 * x2360 - x1077 * x2110 - x1077 * x2360 + x110 * x1724 + x1505 +
    x1549 * x1838 - x1549 * x1842 - x1666 * x2091 + x1666 * x2365 +
    x1666 * x2366 + x1671 * x2091 - x1671 * x2365 - x1671 * x2366 +
    x1724 * x2183 - x1808 * x600 + x1823 * x2043 - x1823 * x2329 +
    x1823 * x2364 + x1838 * x2090 + x1838 * x2253 - x1842 * x2090 -
    x1842 * x2253 - x1908 * x2043 + x1908 * x2329 - x1908 * x2364 +
    x2148 * x600 + x2177 - x359 * x600 +
    40000000.0 * x597 * exp(276.769166192596 * invT) + x600 * x699 +
    x714 * x791 + x9649 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1297 - x130) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[376] =
    30000000.0 * sc[1] * x169 * x83 + 48000000.0 * sc[2] * x169 -
    40000000.0 * sc[8] * x1078 + 40000000.0 * sc[8] * x1081 -
    392000.0 * sc[8] * x169 - 8480000.0 * sc[8] * x1848 +
    30000000.0 * sc[8] * x504 - 30000000.0 * sc[8] * x846 - 50000000.0 * sc[8] +
    x1078 * x1599 + x1078 * x2110 + x1078 * x2360 - x1081 * x1599 -
    x1081 * x2110 - x1081 * x2360 + x10848 + x10855 + x10864 + x10873 +
    x1444 * x1677 - x1444 * x1681 - x1549 * x1848 - x1677 * x2091 +
    x1677 * x2365 + x1677 * x2366 - x169 * x2043 + x169 * x2329 - x169 * x2364 -
    x1848 * x2090 - x1848 * x2253 + x1848 * x2358 + x1877 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x504 + x846) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[399] =
    70000000.0 * sc[0] * x1689 + 90000000.0 * sc[1] * x1494 +
    30000000.0 * sc[1] * x1892 * x83 + sc[1] * x202 +
    48000000.0 * sc[2] * x1892 + 25010000.0 * sc[5] * x1689 * x576 -
    40000000.0 * sc[8] * x1082 - 8480000.0 * sc[8] * x1850 -
    392000.0 * sc[8] * x1892 - 30000000.0 * sc[8] * x849 + x1082 * x1599 +
    x1082 * x2037 + x1082 * x2110 + x1082 * x2360 + x10848 + x10864 + x10871 +
    x10886 + x10887 + x1494 * x714 - x1549 * x1850 - x1689 * x2091 +
    x1689 * x2365 + x1689 * x2366 - x1850 * x2090 - x1850 * x2253 +
    x1850 * x2358 - x1892 * x2043 + x1892 * x2329 - x1892 * x2364 - x343 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x1080 + x849) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[422] =
    70000000.0 * sc[0] * x1692 + 30000000.0 * sc[1] * x1888 * x83 +
    90000000.0 * sc[1] * x191 + 48000000.0 * sc[2] * x1888 +
    16040000.0 * sc[2] * x1898 + 24000000.0 * sc[6] * x1898 -
    40000000.0 * sc[8] * x1085 - 30000000.0 * sc[8] * x1782 -
    8480000.0 * sc[8] * x1855 - 392000.0 * sc[8] * x1888 + x10847 +
    x1085 * x1599 + x1085 * x2037 + x1085 * x2110 + x1085 * x2360 + x10859 +
    x10863 + x10873 + x10886 + x1229 + x1444 * x1692 - x1549 * x1855 -
    x1692 * x2091 + x1692 * x2365 + x1692 * x2366 + x1808 * x1898 -
    x1855 * x2090 - x1855 * x2253 + x1855 * x2358 - x1888 * x2043 +
    x1888 * x2329 - x1888 * x2364 - x1898 * x2148 + x1898 * x359 -
    x1898 * x699 + x191 * x714 + x1955 + x2080 + x9721 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x1080 + x1782) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[445] =
    -70000000.0 * sc[0] * x1720 + 70000000.0 * sc[0] * x184 +
    32000000.0 * sc[1] * x1893 + 30000000.0 * sc[1] * x1900 * x83 +
    sc[1] * x2128 + 48000000.0 * sc[2] * x1900 - 30000000.0 * sc[8] * x1033 -
    sc[8] * x10563 - 40000000.0 * sc[8] * x1086 + 40000000.0 * sc[8] * x1087 +
    8480000.0 * sc[8] * x1825 - 8480000.0 * sc[8] * x1827 -
    392000.0 * sc[8] * x1900 + 30000000.0 * sc[8] * x971 + sc[9] * x86 +
    x10292 * x16 + x10855 + x10859 + x1086 * x1599 + x1086 * x2037 +
    x1086 * x2110 + x1086 * x2360 - x1087 * x1599 - x1087 * x2037 -
    x1087 * x2110 - x1087 * x2360 + x10871 + x10917 - x1444 * x1720 +
    x1444 * x184 + x1549 * x1825 - x1549 * x1827 + x1720 * x2091 -
    x1720 * x2365 - x1720 * x2366 + x1808 * x1959 + x1825 * x2090 +
    x1825 * x2253 - x1827 * x2090 - x1827 * x2253 - x184 * x2091 +
    x184 * x2365 + x184 * x2366 - x1900 * x2043 + x1900 * x2329 -
    x1900 * x2364 + x1955 - x1959 * x2148 + x1959 * x359 - x1959 * x699 +
    x5510 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x1033 - x971) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[468] =
    70000000.0 * sc[0] * x1730 + 90000000.0 * sc[1] * x1905 +
    30000000.0 * sc[1] * x1943 * x83 + sc[1] * x2136 +
    48000000.0 * sc[2] * x1943 + 16040000.0 * sc[2] * x557 + sc[2] * x5661 +
    24000000.0 * sc[6] * x557 - sc[8] * x10566 + 30000000.0 * sc[8] * x1080 +
    40000000.0 * sc[8] * x1083 - 40000000.0 * sc[8] * x1090 -
    11000000.0 * sc[8] * x1283 - 8480000.0 * sc[8] * x1832 +
    392000.0 * sc[8] * x1845 - 392000.0 * sc[8] * x1943 -
    30000000.0 * sc[8] * x929 + 11000000.0 * sc[9] * x1266 + x10349 + x10398 -
    x1083 * x2110 - x1083 * x2360 + x10847 + x10859 + x10863 + x10887 +
    x1090 * x1599 + x1090 * x2037 + x1090 * x2110 + x1090 * x2360 +
    x110 * x1283 + x1114 + x1283 * x2183 + x1364 * x2148 - x1364 * x359 +
    x1364 * x699 + x1444 * x1730 - x1549 * x1832 - x1730 * x2091 +
    x1730 * x2365 + x1730 * x2366 + x1808 * x557 - x1832 * x2090 -
    x1832 * x2253 + x1832 * x2358 + x1845 * x2043 - x1845 * x2329 +
    x1845 * x2364 + x1905 * x714 - x1943 * x2043 + x1943 * x2329 -
    x1943 * x2364 - x2148 * x557 + x359 * x557 - x529 - x557 * x699 + x7694 +
    x9285 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (-x1080 + x929) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[491] =
    30000000.0 * sc[1] * x1944 * x83 + 48000000.0 * sc[2] * x1944 -
    40000000.0 * sc[8] * x1099 + 40000000.0 * sc[8] * x1104 -
    12000000.0 * sc[8] * x1631 * x2117 - 8480000.0 * sc[8] * x1846 -
    392000.0 * sc[8] * x1944 - 30000000.0 * sc[8] * x568 +
    30000000.0 * sc[8] * x892 + x10848 + x10855 + x10864 + x10871 +
    x1099 * x2110 + x1099 * x2360 - x1104 * x2110 - x1104 * x2360 -
    x1549 * x1846 + x1631 * x2365 + x1631 * x2366 + x1670 * x2091 -
    x1670 * x2365 - x1670 * x2366 - x1846 * x2090 - x1846 * x2253 +
    x1846 * x2358 - x1944 * x2043 + x1944 * x2329 - x1944 * x2364 + x1955 +
    x7316 + x9819 +
    (70000000.0 * sc[0] * x675 - 30000000.0 * sc[1] * x680 * x83 -
     48000000.0 * sc[2] * x680 - 40000000.0 * sc[8] * x674 -
     8480000.0 * sc[8] * x677 + 392000.0 * sc[8] * x680 + x1444 * x675 -
     x1549 * x677 + x1599 * x674 + x2037 * x674 + x2043 * x680 - x2090 * x677 -
     x2091 * x675 + x2110 * x674 - x2253 * x677 - x2329 * x680 + x2358 * x677 +
     x2360 * x674 + x2364 * x680 + x2365 * x675 + x2366 * x675) *
      (x568 - x892) +
    (70000000.0 * sc[0] * x676 + 30000000.0 * sc[1] * x681 * x83 +
     48000000.0 * sc[2] * x681 - 8480000.0 * sc[8] * x678 -
     392000.0 * sc[8] * x681 + x1444 * x676 - x1549 * x678 - x2043 * x681 -
     x2090 * x678 - x2091 * x676 - x2253 * x678 + x2329 * x681 + x2358 * x678 -
     x2364 * x681 + x2365 * x676 + x2366 * x676) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-90000000.0 * sc[1] * x230 - x230 * x714) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (11000000.0 * sc[8] * x555 - x110 * x555 - x2183 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-32000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     24000000.0 * sc[6] * x603 - 8480000.0 * sc[8] * x679 - x1549 * x679 -
     x1808 * x603 - x2090 * x679 + x2148 * x603 - x2253 * x679 - x2272 * x642 +
     x2358 * x679 - x359 * x603 + x603 * x699 - x642 * x872) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-90000000.0 * sc[1] * x437 + 30000000.0 * sc[1] * x682 * x83 -
     16040000.0 * sc[2] * x561 + 48000000.0 * sc[2] * x682 -
     24000000.0 * sc[6] * x561 - 392000.0 * sc[8] * x682 - x1808 * x561 -
     x2043 * x682 + x2148 * x561 + x2329 * x682 - x2364 * x682 - x359 * x561 -
     x437 * x714 + x561 * x699) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[9] = -50000000.0 * sc[14] * x1014 + 50000000.0 * sc[14] * x987 +
         11000000.0 * sc[8] * x520 + sc[8] * x75 + 392000.0 * sc[8] * x760 -
         392000.0 * sc[8] * x823 + 8480000.0 * sc[8] * x827 -
         8480000.0 * sc[8] * x961 + 60000000.0 * sc[9] * x1465 -
         60000000.0 * sc[9] * x972 + x1014 * x153 - x153 * x987 + x1537 -
         x1808 * x927 + x1808 * x956 - x2097 * x819 - x2329 * x760 +
         x2329 * x823 - x2358 * x827 + x2358 * x961 - x57 * x644 + x57 * x855 -
         x728 * x819 +
         (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
          392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
          x57 * x674) *
           (-x1465 + x972) +
         (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
          392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
          x2358 * x678 + x658 * x728) *
           (x644 - x855 + (x674) * (-x1465 + x972)) +
         (x2097 * x65 + x65 * x728) *
           (x760 - x823 + (-x680) * (-x1465 + x972) +
            (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
            (x682) *
              (x827 - x961 + (x677) * (-x1465 + x972) +
               (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
               (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                         (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
         (-11000000.0 * sc[8] * x555) *
           (x927 - x956 +
            (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
            (-x561) *
              (x827 - x961 + (x677) * (-x1465 + x972) +
               (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
               (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                         (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
         (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 -
          x2358 * x679 + x599 * x728) *
           (-x1014 + x987 + (x675) * (-x1465 + x972) +
            (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
         (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
           (x827 - x961 + (x677) * (-x1465 + x972) +
            (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
            (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                      (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[32] = 50000000.0 * sc[14] * x1211 - 50000000.0 * sc[14] * x1389 +
          60000000.0 * sc[14] * x1393 + 20000000.0 * sc[19] * x415 +
          392000.0 * sc[8] * x1030 + 8480000.0 * sc[8] * x1064 -
          392000.0 * sc[8] * x1508 +
          2.477e+21 * sc[8] * x356 * x40 * exp(x252) +
          11000000.0 * sc[8] * x540 - 8480000.0 * sc[8] * x969 -
          60000000.0 * sc[9] * x1649 + 60000000.0 * sc[9] * x1694 -
          x1030 * x2329 - x1064 * x2358 - x1211 * x153 + x1389 * x153 +
          x1508 * x2329 - x1561 * x1808 - x1637 * x2097 - x1637 * x728 +
          x1808 * x494 + x2358 * x969 + x5501 - x57 * x893 + x57 * x899 - x825 +
          (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
           392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
           x57 * x674) *
            (x1649 - x1694) +
          (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
           392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
           x2358 * x678 + x658 * x728) *
            (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x2097 * x65 + x65 * x728) *
            (x1030 - x1508 + (-x680) * (x1649 - x1694) +
             (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x682) *
               (x1064 - x969 + (x677) * (x1649 - x1694) +
                (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
                (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                          (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
          (-11000000.0 * sc[8] * x555) *
            (x1561 - x494 +
             (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                        (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
             (-x561) *
               (x1064 - x969 + (x677) * (x1649 - x1694) +
                (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
                (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                          (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
          (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 -
           x2358 * x679 + x599 * x728) *
            (x1211 - x1389 + (x675) * (x1649 - x1694) +
             (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
          (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
            (x1064 - x969 + (x677) * (x1649 - x1694) +
             (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[55] = 50000000.0 * sc[14] * x1419 - 50000000.0 * sc[14] * x1461 +
          11000000.0 * sc[8] * x1208 + 392000.0 * sc[8] * x1639 +
          8480000.0 * sc[8] * x1640 - 392000.0 * sc[8] * x1643 -
          8480000.0 * sc[8] * x718 - 60000000.0 * sc[9] * x1772 +
          60000000.0 * sc[9] * x1785 - sc[9] * x7417 - x1419 * x153 +
          x1461 * x153 - x1639 * x2329 - x1640 * x2358 + x1643 * x2329 -
          x1660 * x1808 - x1709 * x2097 - x1709 * x728 + x1726 * x1808 +
          x2358 * x718 + x5501 - x57 * x970 + x57 * x973 +
          (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
           392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
           x57 * x674) *
            (x1772 - x1785) +
          (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
           392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
           x2358 * x678 + x658 * x728) *
            (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x2097 * x65 + x65 * x728) *
            (x1639 - x1643 + (-x680) * (x1772 - x1785) +
             (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x682) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (-11000000.0 * sc[8] * x555) *
            (x1660 - x1726 +
             (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                        (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
             (-x561) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 -
           x2358 * x679 + x599 * x728) *
            (x1419 - x1461 + (x675) * (x1772 - x1785) +
             (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
          (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
            (x1640 - x718 + (x677) * (x1772 - x1785) +
             (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[78] = -50000000.0 * sc[14] * x1517 + 50000000.0 * sc[14] * x854 +
          11000000.0 * sc[8] * x1658 - 8480000.0 * sc[8] * x1661 +
          8480000.0 * sc[8] * x1662 + 392000.0 * sc[8] * x1673 -
          392000.0 * sc[8] * x1685 - 60000000.0 * sc[9] * x1822 +
          60000000.0 * sc[9] * x1852 - sc[9] * x8262 + x1517 * x153 -
          x153 * x854 + x1661 * x2358 - x1662 * x2358 - x1673 * x2329 +
          x1685 * x2329 - x1744 * x2097 - x1744 * x728 - x1757 * x1808 +
          x1759 * x1808 + x5501 - x57 * x977 + x57 * x978 +
          (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
           392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
           x57 * x674) *
            (x1822 - x1852) +
          (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
           392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
           x2358 * x678 + x658 * x728) *
            (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x2097 * x65 + x65 * x728) *
            (x1673 - x1685 + (-x680) * (x1822 - x1852) +
             (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x682) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (-11000000.0 * sc[8] * x555) *
            (x1757 - x1759 +
             (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                        (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
             (-x561) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 -
           x2358 * x679 + x599 * x728) *
            (-x1517 + x854 + (x675) * (x1822 - x1852) +
             (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
          (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
            (-x1661 + x1662 + (x677) * (x1822 - x1852) +
             (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[101] =
    50000000.0 * sc[14] * x1519 - 50000000.0 * sc[14] * x1521 -
    392000.0 * sc[8] * x1680 - 8480000.0 * sc[8] * x1687 +
    392000.0 * sc[8] * x1710 + 11000000.0 * sc[8] * x182 +
    8480000.0 * sc[8] * x345 + sc[8] * x7543 - 60000000.0 * sc[9] * x1875 +
    60000000.0 * sc[9] * x1903 - x1519 * x153 + x1521 * x153 + x1680 * x2329 +
    x1687 * x2358 - x1710 * x2329 - x1774 * x2097 - x1774 * x728 -
    x1790 * x1808 + x1808 * x1824 - x2358 * x345 + x5501 - x57 * x980 +
    x57 * x981 - x9033 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1875 - x1903) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (x2097 * x65 + x65 * x728) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[124] =
    50000000.0 * sc[14] * x1523 - 50000000.0 * sc[14] * x1533 -
    8480000.0 * sc[8] * x1669 + 392000.0 * sc[8] * x1748 +
    8480000.0 * sc[8] * x1751 - 392000.0 * sc[8] * x1756 +
    11000000.0 * sc[8] * x1897 + sc[8] * x9132 - 60000000.0 * sc[9] * x1946 +
    60000000.0 * sc[9] * x1986 - 1.4862e+22 * x1052 * x356 +
    x1328 * (1.68 * x378 * x691 + 12.0 * x537 * x691) +
    2.8986751181102398e+33 * x1416 * x273 - x1523 * x153 + x153 * x1533 +
    1.4862e+22 * x1595 + x1669 * x2358 - x1748 * x2329 - x1751 * x2358 +
    x1756 * x2329 - x1808 * x1829 + x1808 * x1860 - x1840 * x2097 -
    x1840 * x728 - 2.8986751181102398e+33 * x273 * x648 -
    x5502 * (1.68 * x378 * x691 + 12.0 * x537 * x691) - x57 * x989 +
    x57 * x990 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1946 - x1986) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (x2097 * x65 + x65 * x728) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[147] =
    50000000.0 * sc[14] * x1534 - 50000000.0 * sc[14] * x1535 -
    8480000.0 * sc[8] * x1760 + 8480000.0 * sc[8] * x1762 -
    392000.0 * sc[8] * x1764 + 11000000.0 * sc[8] * x1953 +
    392000.0 * sc[8] * x323 + 1000000.0 * sc[8] - 60000000.0 * sc[9] * x2026 +
    60000000.0 * sc[9] * x2051 - sc[9] * x9979 - x1008 * x57 + x1010 * x57 +
    x10966 - x153 * x1534 + x153 * x1535 + x1760 * x2358 - x1762 * x2358 +
    x1764 * x2329 - x1808 * x1881 + x1808 * x1885 - x2329 * x323 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x2026 - x2051) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (x2097 * x65 + x65 * x728) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[170] =
    50000000.0 * sc[14] * x1563 - 50000000.0 * sc[14] * x1573 -
    8480000.0 * sc[8] * x1768 + 8480000.0 * sc[8] * x1769 -
    392000.0 * sc[8] * x1773 + 11000000.0 * sc[8] * x1989 +
    392000.0 * sc[8] * x225 - 60000000.0 * sc[9] * x2093 +
    60000000.0 * sc[9] * x2104 + x10006 - x1011 * x57 + x1013 * x57 + x10966 -
    x153 * x1563 + x153 * x1573 + x1768 * x2358 - x1769 * x2358 +
    x1773 * x2329 - x1808 * x1911 + x1808 * x1951 - x225 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x2093 - x2104) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (x2097 * x65 + x65 * x728) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[193] =
    sc[0] * x75 + sc[12] * x10604 + sc[14] * x10599 +
    50000000.0 * sc[14] * x1574 - 50000000.0 * sc[14] * x1575 +
    sc[15] * x10594 + sc[20] * x10566 + sc[4] * x7543 + sc[5] * x9132 +
    1000000.0 * sc[6] - 8480000.0 * sc[8] * x1775 + 8480000.0 * sc[8] * x1776 +
    392000.0 * sc[8] * x1779 - 392000.0 * sc[8] * x1784 +
    11000000.0 * sc[8] * x447 +
    4.92 * sc[8] * exp(-g_RT_qss[1] - x1332 + x2359) +
    32000000.0 * sc[8] * exp(-g_RT_qss[2] + 286.83349950869001 * invT - x1332) -
    60000000.0 * sc[9] * x1449 + 60000000.0 * sc[9] * x2150 + x10030 -
    x1017 * x57 + x1018 * x57 + x10966 - 11000000.0 * x1284 - x153 * x1574 +
    x153 * x1575 + x1775 * x2358 - x1776 * x2358 - x1779 * x2329 +
    x1784 * x2329 - x1808 * x1954 + x1808 * x1957 + 392000.0 * x233 +
    2.477e+21 * x356 * x773 * exp(x252) + 8480000.0 * x435 - 11000000.0 * x478 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1449 - x2150) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (x2097 * x65 + x65 * x728) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[216] =
    -8480000.0 * sc[10] * x1213 - 392000.0 * sc[13] * x1158 +
    50000000.0 * sc[14] * x796 - 50000000.0 * sc[14] * x986 - sc[19] * x86 -
    11000000.0 * sc[20] * x1266 - sc[2] * x7417 - sc[3] * x8262 -
    sc[6] * x9979 - 8480000.0 * sc[8] * x1778 + 8480000.0 * sc[8] * x1780 +
    392000.0 * sc[8] * x1821 - 392000.0 * sc[8] * x1856 +
    11000000.0 * sc[8] * x2003 - 60000000.0 * sc[9] * x2145 +
    60000000.0 * sc[9] * x2193 - x1019 * x57 + x1020 * x57 -
    50000000.0 * x12 * x607 - x153 * x796 + x153 * x986 + x1537 - x1582 * x324 -
    x1638 + x1778 * x2358 - x1780 * x2358 - x1808 * x1960 + x1808 * x1966 -
    x1821 * x2329 + x1856 * x2329 - x1994 * x2097 - x1994 * x728 -
    16000000.0 * x2117 * x597 - x233 * x76 - x388 * x435 - x4 * x607 -
    60000000.0 * x518 - 2.46 * x645 * exp(x2359) - x813 - x9352 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x2145 - x2193) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (x2097 * x65 + x65 * x728) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[239] =
    50000000.0 * sc[14] * x1584 - 50000000.0 * sc[14] * x1586 +
    8480000.0 * sc[8] * x1678 - 8480000.0 * sc[8] * x1797 +
    392000.0 * sc[8] * x1836 - 392000.0 * sc[8] * x1841 +
    11000000.0 * sc[8] * x1981 - 8480000.0 * sc[9] * x1213 +
    60000000.0 * sc[9] * x2275 - 60000000.0 * sc[9] * x468 - x1023 * x57 +
    x1025 * x57 - 3.7155e+21 * x1052 * x356 +
    x1328 * (0.42 * x378 * x691 + 3.0 * x537 * x691) +
    7.2466877952755894e+32 * x1416 * x273 - x153 * x1584 + x153 * x1586 +
    3.7155e+21 * x1595 - x1678 * x2358 + x1797 * x2358 - x1808 * x1971 +
    x1808 * x1973 - x1836 * x2329 + x1841 * x2329 - x1974 * x2097 -
    x1974 * x728 - 7.2466877952755894e+32 * x273 * x648 -
    x5502 * (0.42 * x378 * x691 + 3.0 * x537 * x691) +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (-x2275 + x468) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (x2097 * x65 + x65 * x728) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[262] =
    50000000.0 * sc[14] * x1587 - 50000000.0 * sc[14] * x1588 +
    8480000.0 * sc[8] * x1663 - 8480000.0 * sc[8] * x1750 -
    392000.0 * sc[8] * x1876 + 392000.0 * sc[8] * x758 +
    11000000.0 * sc[8] * x951 - 60000000.0 * sc[9] * x1516 +
    60000000.0 * sc[9] * x2331 - x1027 * x57 + x1031 * x57 - x153 * x1587 +
    x153 * x1588 + x1537 - x1663 * x2358 + x1750 * x2358 + x1808 * x1983 -
    x1808 * x926 + x1876 * x2329 - x2097 * x818 - x2329 * x758 - x728 * x818 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1516 - x2331) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (x2097 * x65 + x65 * x728) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[285] =
    -50000000.0 * sc[14] * x1459 + 50000000.0 * sc[14] * x1589 +
    sc[8] * x10604 + 11000000.0 * sc[8] * x1559 - 8480000.0 * sc[8] * x1761 +
    8480000.0 * sc[8] * x1765 + 392000.0 * sc[8] * x1879 -
    392000.0 * sc[8] * x1894 - 60000000.0 * sc[9] * x1407 +
    60000000.0 * sc[9] * x2367 - x1063 * x57 + x1065 * x57 + x10966 +
    x1459 * x153 - x153 * x1589 + x1761 * x2358 - x1765 * x2358 -
    x1808 * x1984 + x1808 * x652 - x1879 * x2329 + x1894 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1407 - x2367) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (x2097 * x65 + x65 * x728) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[308] =
    50000000.0 * sc[14] * x884 - 50000000.0 * sc[14] * x890 -
    8480000.0 * sc[8] * x1830 + 8480000.0 * sc[8] * x1831 +
    392000.0 * sc[8] * x1896 - 392000.0 * sc[8] * x1901 +
    11000000.0 * sc[8] * x1989 + 60000000.0 * sc[9] * x1050 -
    392000.0 * sc[9] * x1158 - 60000000.0 * sc[9] * x754 - x1068 * x57 +
    x1069 * x57 + x10994 - x1506 * x2097 - x1506 * x728 - x153 * x884 +
    x153 * x890 - x1808 * x1996 + x1808 * x1998 + x1830 * x2358 -
    x1831 * x2358 - x1896 * x2329 + x1901 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (-x1050 + x754) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (x2097 * x65 + x65 * x728) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[331] =
    -50000000.0 * sc[14] * x1648 + 50000000.0 * sc[14] * x898 +
    60000000.0 * sc[1] * x1393 + sc[8] * x10599 - 8480000.0 * sc[8] * x1834 +
    8480000.0 * sc[8] * x1835 - 392000.0 * sc[8] * x1901 +
    11000000.0 * sc[8] * x553 + 392000.0 * sc[8] * x566 -
    60000000.0 * sc[9] * x1036 + 60000000.0 * sc[9] * x622 - x1070 * x57 +
    x10994 + x153 * x1648 - x153 * x898 + x1808 * x1998 - x1808 * x909 +
    x1834 * x2358 - x1835 * x2358 + x1901 * x2329 - x1980 * x2097 -
    x1980 * x728 - x2329 * x566 + x57 * x668 + 50000000.0 * x597 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1036 - x622) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (x2097 * x65 + x65 * x728) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[354] =
    50000000.0 * sc[14] * x1666 - 50000000.0 * sc[14] * x1671 + sc[8] * x10594 +
    11000000.0 * sc[8] * x1724 - 392000.0 * sc[8] * x1823 -
    8480000.0 * sc[8] * x1838 + 8480000.0 * sc[8] * x1842 +
    392000.0 * sc[8] * x1908 - 60000000.0 * sc[9] * x1297 +
    60000000.0 * sc[9] * x130 - x1 * x2097 - x1 * x728 - x1059 * x1808 -
    x1074 * x57 + x1077 * x57 + x10994 - x153 * x1666 + x153 * x1671 +
    x1808 * x600 + x1823 * x2329 + x1838 * x2358 - x1842 * x2358 -
    x1908 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1297 - x130) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (x2097 * x65 + x65 * x728) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-11000000.0 * sc[8] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[377] =
    50000000.0 * sc[14] * x1677 + 392000.0 * sc[8] * x169 +
    8480000.0 * sc[8] * x1848 + 60000000.0 * sc[9] * x504 -
    60000000.0 * sc[9] * x846 - x1078 * x57 + x1081 * x57 + x11006 + x11007 +
    x11008 - x153 * x1677 + x153 * x1681 + x1636 - x169 * x2329 -
    x1789 * x1808 - x1848 * x2358 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (-x504 + x846) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (x2097 * x65 + x65 * x728) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[400] =
    50000000.0 * sc[14] * x1689 + 8480000.0 * sc[8] * x1850 +
    392000.0 * sc[8] * x1892 + 11000000.0 * sc[8] * x1989 -
    60000000.0 * sc[9] * x849 - x1082 * x57 + x11007 + x11008 + x11015 +
    x1364 * x1808 - x153 * x1689 + x1636 - x1789 * x1808 + x1843 * x2358 +
    x1845 * x2329 - x1850 * x2358 - x1892 * x2329 - x2097 * x598 + x5501 -
    x598 * x728 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (-x1080 + x849) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (x2097 * x65 + x65 * x728) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[423] =
    50000000.0 * sc[14] * x1692 + 8480000.0 * sc[8] * x1855 +
    392000.0 * sc[8] * x1888 - 60000000.0 * sc[9] * x1782 - x1085 * x57 +
    x11006 + x11007 + x11008 + x11015 - x153 * x1692 + x1636 - x1808 * x1898 -
    x1855 * x2358 - x1888 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (-x1080 + x1782) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (x2097 * x65 + x65 * x728) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[446] =
    -50000000.0 * sc[14] * x1720 + 50000000.0 * sc[14] * x184 +
    20000000.0 * sc[1] * x415 - 8480000.0 * sc[8] * x1825 +
    8480000.0 * sc[8] * x1827 + 392000.0 * sc[8] * x1900 +
    11000000.0 * sc[8] * x1989 - 60000000.0 * sc[9] * x1033 - sc[9] * x86 +
    60000000.0 * sc[9] * x971 - x1086 * x57 + x1087 * x57 + x11007 +
    x1364 * x1808 + x153 * x1720 - x153 * x184 - x1808 * x1959 + x1825 * x2358 -
    x1827 * x2358 + x1845 * x2329 - x1900 * x2329 - x2097 * x63 + x5501 -
    x63 * x728 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x1033 - x971) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (x2097 * x65 + x65 * x728) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[469] =
    50000000.0 * sc[14] * x1730 + sc[8] * x10566 + 11000000.0 * sc[8] * x1283 +
    8480000.0 * sc[8] * x1832 + 392000.0 * sc[8] * x1943 -
    11000000.0 * sc[9] * x1266 - 60000000.0 * sc[9] * x929 - x1090 * x57 +
    x10966 + x11007 + x11008 + x11015 + x1364 * x1808 - x153 * x1730 + x1636 -
    x1808 * x557 - x1832 * x2358 + x1843 * x2358 + x1845 * x2329 -
    x1943 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (-x1080 + x929) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (x2097 * x65 + x65 * x728) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[492] =
    50000000.0 * sc[14] * x1631 - 50000000.0 * sc[14] * x1670 +
    8480000.0 * sc[8] * x1846 + 392000.0 * sc[8] * x1944 -
    16000000.0 * sc[9] * x1631 * x2117 - 60000000.0 * sc[9] * x568 +
    60000000.0 * sc[9] * x892 - x1099 * x57 + x11006 + x11007 + x11008 +
    x1104 * x57 + x153 * x1670 - x1789 * x1808 - x1846 * x2358 - x1944 * x2329 +
    (50000000.0 * sc[14] * x675 + 8480000.0 * sc[8] * x677 -
     392000.0 * sc[8] * x680 - x153 * x675 + x2329 * x680 - x2358 * x677 -
     x57 * x674) *
      (x568 - x892) +
    (50000000.0 * sc[14] * x676 + 8480000.0 * sc[8] * x678 +
     392000.0 * sc[8] * x681 - x153 * x676 + x2097 * x658 - x2329 * x681 -
     x2358 * x678 + x658 * x728) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (x2097 * x65 + x65 * x728) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-11000000.0 * sc[8] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (8480000.0 * sc[8] * x679 + x1808 * x603 + x2097 * x599 - x2358 * x679 +
     x599 * x728) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (392000.0 * sc[8] * x682 + x1808 * x561 - x2329 * x682) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[10] = -14000000.0 * sc[11] * x1014 + 14000000.0 * sc[11] * x987 -
          50000000.0 * sc[16] * x1465 + 30000000.0 * sc[16] * x644 -
          30000000.0 * sc[16] * x855 + 50000000.0 * sc[16] * x972 +
          60000000.0 * sc[19] * x827 - 60000000.0 * sc[19] * x961 +
          48000000.0 * sc[2] * x760 + 100000000.0 * sc[2] * x819 -
          48000000.0 * sc[2] * x823 + 30000000.0 * sc[2] * x827 -
          30000000.0 * sc[2] * x961 - 40000000.0 * sc[3] * x1014 +
          18000.0 * sc[3] * x657 + 40000000.0 * sc[3] * x987 +
          50000000.0 * sc[4] * x827 - 50000000.0 * sc[4] * x961 +
          8480000.0 * sc[8] * x827 - 8480000.0 * sc[8] * x961 + x1014 * x231 -
          x11027 * x1465 + x11027 * x972 + x11039 * x1465 - x11039 * x972 -
          x2191 * x644 + x2191 * x855 - x231 * x987 + x351 * x827 -
          x351 * x961 - x637 * x927 + x637 * x956 - x644 * x732 - x644 * x814 +
          x657 * x714 + x732 * x855 + 10.0 * x744 * x827 - 10.0 * x744 * x961 -
          x747 * x760 + x747 * x823 + 10.0 * x757 * x827 - 10.0 * x757 * x961 -
          x760 * x816 + x767 + x789 + x814 * x855 + x816 * x823 - x827 * x908 +
          x842 + x908 * x961 +
          (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
           60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
           15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
           48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
           50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
           x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 -
           x674 * x814 + 10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 +
           x680 * x747 + x680 * x816) *
            (-x1465 + x972) +
          (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
           73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
           15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
           48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
           50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
           x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
           x678 * x908 - x681 * x747 - x681 * x816) *
            (x644 - x855 + (x674) * (-x1465 + x972)) +
          (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
            (x760 - x823 + (-x680) * (-x1465 + x972) +
             (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x682) *
               (x827 - x961 + (x677) * (-x1465 + x972) +
                (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
                (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                          (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
          (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
           100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
           50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
           x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
           x679 * x908) *
            (-x1014 + x987 + (x675) * (-x1465 + x972) +
             (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
          (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
           x561 * x637 - x682 * x747 - x682 * x816) *
            (x827 - x961 + (x677) * (-x1465 + x972) +
             (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[33] =
    14000000.0 * sc[11] * x1211 - 14000000.0 * sc[11] * x1389 + sc[11] * x471 +
    50000000.0 * sc[16] * x1649 - 50000000.0 * sc[16] * x1694 +
    30000000.0 * sc[16] * x893 - 30000000.0 * sc[16] * x899 +
    100000000.0 * sc[16] + sc[17] * x202 + 60000000.0 * sc[19] * x1064 -
    60000000.0 * sc[19] * x969 + 48000000.0 * sc[2] * x1030 +
    30000000.0 * sc[2] * x1064 - 48000000.0 * sc[2] * x1508 +
    100000000.0 * sc[2] * x1637 - 30000000.0 * sc[2] * x969 +
    18000.0 * sc[3] * x1200 + 40000000.0 * sc[3] * x1211 -
    40000000.0 * sc[3] * x1389 + 50000000.0 * sc[4] * x1064 -
    50000000.0 * sc[4] * x969 + 8480000.0 * sc[8] * x1064 -
    8480000.0 * sc[8] * x969 - x1030 * x747 - x1030 * x816 + x1064 * x351 +
    10.0 * x1064 * x744 + 10.0 * x1064 * x757 - x1064 * x908 + x11027 * x1649 -
    x11027 * x1694 - x11039 * x1649 + x11039 * x1694 + x11169 -
    28000000.0 * x1177 * x1355 + x1200 * x714 - x1211 * x231 + x1389 * x231 +
    x1508 * x747 + x1508 * x816 - x1561 * x637 - 200000000.0 * x2099 * x2100 -
    x2191 * x893 + x2191 * x899 - x351 * x969 + x483 + x487 + x494 * x637 +
    x5514 - x732 * x893 + x732 * x899 - 10.0 * x744 * x969 -
    10.0 * x757 * x969 - x814 * x893 + x814 * x899 + x908 * x969 + x921 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1649 - x1694) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[56] = -sc[10] * x7347 * x7423 + 14000000.0 * sc[11] * x1419 -
          14000000.0 * sc[11] * x1461 + sc[11] * x7413 +
          4.08 * sc[13] * exp(x2138) + 50000000.0 * sc[16] * x1772 -
          50000000.0 * sc[16] * x1785 + 30000000.0 * sc[16] * x970 -
          30000000.0 * sc[16] * x973 + 200000000.0 * sc[16] +
          60000000.0 * sc[19] * x1640 - 60000000.0 * sc[19] * x718 +
          73400000.0 * sc[1] * x1640 - 73400000.0 * sc[1] * x718 +
          100000000.0 * sc[2] * x1709 + 18000.0 * sc[3] * x1075 +
          40000000.0 * sc[3] * x1419 - 40000000.0 * sc[3] * x1461 +
          50000000.0 * sc[4] * x1640 - 50000000.0 * sc[4] * x718 +
          8480000.0 * sc[8] * x1640 - 8480000.0 * sc[8] * x718 + x1075 * x714 +
          x11027 * x1772 - x11027 * x1785 - x11039 * x1772 + x11039 * x1785 +
          x11169 - 100000000.0 * x1176 - x1419 * x231 + x1461 * x231 -
          x1639 * x747 - x1639 * x816 + x1640 * x351 + 10.0 * x1640 * x744 +
          10.0 * x1640 * x757 - x1640 * x908 + x1643 * x747 + x1643 * x816 -
          x1660 * x637 + x1726 * x637 - x2191 * x970 + x2191 * x973 -
          x351 * x718 + x5514 - 100000000.0 * x564 + x5663 + x5686 -
          10.0 * x718 * x744 - 10.0 * x718 * x757 + x718 * x908 - x732 * x970 +
          x732 * x973 - x814 * x970 + x814 * x973 + x921 + x997 +
          (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
           60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
           15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
           48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
           50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
           x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 -
           x674 * x814 + 10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 +
           x680 * x747 + x680 * x816) *
            (x1772 - x1785) +
          (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
           73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
           15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
           48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
           50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
           x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
           x678 * x908 - x681 * x747 - x681 * x816) *
            (x970 - x973 + (x674) * (x1772 - x1785)) +
          (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
            (x1639 - x1643 + (-x680) * (x1772 - x1785) +
             (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x682) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
           100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
           50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
           x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
           x679 * x908) *
            (x1419 - x1461 + (x675) * (x1772 - x1785) +
             (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
          (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
           x561 * x637 - x682 * x747 - x682 * x816) *
            (x1640 - x718 + (x677) * (x1772 - x1785) +
             (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[79] =
    50000000.0 * sc[16] * x1822 - 50000000.0 * sc[16] * x1852 +
    3200000.0 * sc[16] * x8258 + 30000000.0 * sc[16] * x977 -
    30000000.0 * sc[16] * x978 - 60000000.0 * sc[19] * x1661 +
    60000000.0 * sc[19] * x1662 - 73400000.0 * sc[1] * x1661 +
    73400000.0 * sc[1] * x1662 - 15000000.0 * sc[2] * x1517 +
    48000000.0 * sc[2] * x1673 - 48000000.0 * sc[2] * x1685 +
    100000000.0 * sc[2] * x1744 + 15000000.0 * sc[2] * x854 -
    40000000.0 * sc[3] * x1517 + 40000000.0 * sc[3] * x854 -
    50000000.0 * sc[4] * x1661 + 50000000.0 * sc[4] * x1662 -
    8480000.0 * sc[8] * x1661 + 8480000.0 * sc[8] * x1662 + x11027 * x1822 -
    x11027 * x1852 - x11039 * x1822 + x11039 * x1852 + x11168 + x11231 +
    x1517 * x231 - x1661 * x351 - 10.0 * x1661 * x744 - 10.0 * x1661 * x757 +
    x1661 * x908 + x1662 * x351 + 10.0 * x1662 * x744 + 10.0 * x1662 * x757 -
    x1662 * x908 - x1673 * x747 - x1673 * x816 + x1685 * x747 + x1685 * x816 +
    x1708 * x714 - x1757 * x637 + x1759 * x637 - x2191 * x977 + x2191 * x978 -
    x231 * x854 + 7600000.0 * x435 * exp(-201.28666632188799 * invT) + x5765 +
    x5769 + 40000000.0 * x597 - x732 * x977 + x732 * x978 - 3612.0 * x7349 +
    3612.0 * x7352 - x7494 - x814 * x977 + x814 * x978 + x921 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1822 - x1852) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[102] =
    -30000000.0 * sc[10] * x1217 + sc[11] * x9081 + sc[13] * x9093 +
    50000000.0 * sc[16] * x1875 - 50000000.0 * sc[16] * x1903 +
    30000000.0 * sc[16] * x980 - 30000000.0 * sc[16] * x981 -
    60000000.0 * sc[19] * x1687 + 60000000.0 * sc[19] * x345 -
    73400000.0 * sc[1] * x1687 + 73400000.0 * sc[1] * x345 +
    15000000.0 * sc[2] * x1519 - 15000000.0 * sc[2] * x1521 -
    48000000.0 * sc[2] * x1680 + 48000000.0 * sc[2] * x1710 +
    100000000.0 * sc[2] * x1774 + 40000000.0 * sc[3] * x1519 -
    40000000.0 * sc[3] * x1521 - 50000000.0 * sc[4] * x1687 +
    50000000.0 * sc[4] * x345 - 8480000.0 * sc[8] * x1687 +
    8480000.0 * sc[8] * x345 + x11027 * x1875 - x11027 * x1903 -
    x11039 * x1875 + x11039 * x1903 + x11169 + x11260 -
    28000000.0 * x1248 * x1355 - x1519 * x231 + x1521 * x231 + x1680 * x747 +
    x1680 * x816 - x1687 * x351 - 10.0 * x1687 * x744 - 10.0 * x1687 * x757 +
    x1687 * x908 - x1710 * x747 - x1710 * x816 + x1745 * x714 - x1790 * x637 +
    x1824 * x637 - 3200000.0 * x2100 * x8328 - x2191 * x980 + x2191 * x981 +
    x345 * x351 + 10.0 * x345 * x744 + 10.0 * x345 * x757 - x345 * x908 +
    50000000.0 * x435 + x5514 - x5774 + x5858 - x732 * x980 + x732 * x981 -
    x814 * x980 + x814 * x981 + x921 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1875 - x1903) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[125] =
    14000000.0 * sc[11] * x1523 - 14000000.0 * sc[11] * x1533 +
    50000000.0 * sc[16] * x1946 - 50000000.0 * sc[16] * x1986 +
    30000000.0 * sc[16] * x989 - 30000000.0 * sc[16] * x990 -
    60000000.0 * sc[19] * x1669 + 60000000.0 * sc[19] * x1751 +
    48000000.0 * sc[2] * x1748 - 48000000.0 * sc[2] * x1756 +
    100000000.0 * sc[2] * x1840 + 40000000.0 * sc[3] * x1523 -
    40000000.0 * sc[3] * x1533 + 18000.0 * sc[3] * x1781 -
    8480000.0 * sc[8] * x1669 + 8480000.0 * sc[8] * x1751 - 1.614e+17 * x1042 +
    x11027 * x1946 - x11027 * x1986 - x11039 * x1946 + x11039 * x1986 +
    x11075 * x11265 - x11084 * x11265 + 1.614e+17 * x11087 +
    5.3600740740740798e+37 * x11089 * x11092 -
    5.3600740740740798e+37 * x11089 * x11095 + x11159 * x11269 - x11269 * x245 -
    8.68332e+25 * x1513 * x831 - x1523 * x231 + x1533 * x231 - x1669 * x351 -
    10.0 * x1669 * x744 - 10.0 * x1669 * x757 + x1669 * x908 - x1748 * x747 -
    x1748 * x816 + x1751 * x351 + 10.0 * x1751 * x744 + 10.0 * x1751 * x757 -
    x1751 * x908 + x1756 * x747 + x1756 * x816 + x1781 * x714 - x1829 * x637 +
    x1860 * x637 - x2191 * x989 + x2191 * x990 + 1.614e+22 * x240 -
    1.614e+22 * x489 + x5997 - x732 * x989 + x732 * x990 - 3612.0 * x7349 +
    3612.0 * x7352 + x792 - x814 * x989 + x814 * x990 + 8.68332e+25 * x835 +
    x9843 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1946 - x1986) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[148] =
    14000000.0 * sc[11] * x1534 - 14000000.0 * sc[11] * x1535 +
    30000000.0 * sc[16] * x1008 - 30000000.0 * sc[16] * x1010 +
    50000000.0 * sc[16] * x2026 - 50000000.0 * sc[16] * x2051 -
    60000000.0 * sc[19] * x1760 + 60000000.0 * sc[19] * x1762 -
    73400000.0 * sc[1] * x1760 + 73400000.0 * sc[1] * x1762 +
    15000000.0 * sc[2] * x1534 - 15000000.0 * sc[2] * x1535 +
    100000000.0 * sc[2] * x411 + 40000000.0 * sc[3] * x1534 -
    40000000.0 * sc[3] * x1535 + 18000.0 * sc[3] * x1839 -
    50000000.0 * sc[4] * x1760 + 50000000.0 * sc[4] * x1762 -
    8480000.0 * sc[8] * x1760 + 8480000.0 * sc[8] * x1762 + x10000 -
    x1008 * x2191 - x1008 * x732 - x1008 * x814 + x1010 * x2191 + x1010 * x732 +
    x1010 * x814 + x11027 * x2026 - x11027 * x2051 - x11039 * x2026 +
    x11039 * x2051 + x11169 - x1534 * x231 + x1535 * x231 -
    10.0 * x1760 * x744 - 10.0 * x1760 * x757 + x1760 * x908 +
    10.0 * x1762 * x744 + 10.0 * x1762 * x757 - x1762 * x908 + x1764 * x747 +
    x1764 * x816 + x1839 * x714 - x1881 * x637 + x1885 * x637 - x323 * x747 -
    x323 * x816 + x5514 + x6056 + x6086 + x921 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x2026 - x2051) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[171] =
    14000000.0 * sc[11] * x1563 - 14000000.0 * sc[11] * x1573 +
    30000000.0 * sc[16] * x1011 - 30000000.0 * sc[16] * x1013 +
    50000000.0 * sc[16] * x2093 - 50000000.0 * sc[16] * x2104 -
    60000000.0 * sc[19] * x1768 + 60000000.0 * sc[19] * x1769 +
    40000000.0 * sc[3] * x1563 - 40000000.0 * sc[3] * x1573 -
    50000000.0 * sc[4] * x1768 + 50000000.0 * sc[4] * x1769 -
    8480000.0 * sc[8] * x1768 + 8480000.0 * sc[8] * x1769 - x1011 * x2191 -
    x1011 * x732 - x1011 * x814 + x1013 * x2191 + x1013 * x732 + x1013 * x814 +
    x11027 * x2093 - x11027 * x2104 - x11039 * x2093 + x11039 * x2104 + x11365 -
    x1563 * x231 + x1573 * x231 - x1768 * x351 - 10.0 * x1768 * x744 -
    10.0 * x1768 * x757 + x1768 * x908 + x1769 * x351 + 10.0 * x1769 * x744 +
    10.0 * x1769 * x757 - x1769 * x908 + x1773 * x747 + x1773 * x816 +
    x1905 * x714 - x1911 * x637 + x1951 * x637 - x225 * x747 - x225 * x816 +
    x6141 + x6162 + x6166 + x798 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x2093 - x2104) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[194] =
    14000000.0 * sc[11] * x1574 - 14000000.0 * sc[11] * x1575 +
    30000000.0 * sc[16] * x1017 - 30000000.0 * sc[16] * x1018 +
    50000000.0 * sc[16] * x1449 - 50000000.0 * sc[16] * x2150 +
    50000000.0 * sc[16] - 60000000.0 * sc[19] * x1775 +
    60000000.0 * sc[19] * x1776 - 73400000.0 * sc[1] * x1775 +
    73400000.0 * sc[1] * x1776 + 57000000.0 * sc[2] * x1449 +
    15000000.0 * sc[2] * x1574 - 15000000.0 * sc[2] * x1575 +
    48000000.0 * sc[2] * x1779 - 48000000.0 * sc[2] * x1784 -
    57000000.0 * sc[2] * x2150 + 100000000.0 * sc[2] * x411 +
    18000.0 * sc[3] * x1197 + 40000000.0 * sc[3] * x1574 -
    40000000.0 * sc[3] * x1575 - 50000000.0 * sc[4] * x1775 +
    50000000.0 * sc[4] * x1776 - 8480000.0 * sc[8] * x1775 +
    8480000.0 * sc[8] * x1776 - x1017 * x2191 - x1017 * x732 - x1017 * x814 +
    x1018 * x2191 + x1018 * x732 + x1018 * x814 + x10610 + x11027 * x1449 -
    x11027 * x2150 - x11039 * x1449 + x11039 * x2150 + x11169 - x1574 * x231 +
    x1575 * x231 - x1775 * x2096 - x1775 * x351 - 10.0 * x1775 * x744 -
    10.0 * x1775 * x757 + x1775 * x908 + x1776 * x2096 + x1776 * x351 +
    10.0 * x1776 * x744 + 10.0 * x1776 * x757 - x1776 * x908 - x1779 * x747 -
    x1779 * x816 + x1784 * x747 + x1784 * x816 - x1954 * x637 + x1957 * x637 +
    8480000.0 * x435 + x5514 + x6260 + x921 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1449 - x2150) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[217] =
    -8480000.0 * sc[10] * x1213 + 14000000.0 * sc[11] * x796 -
    14000000.0 * sc[11] * x986 + 30000000.0 * sc[16] * x1019 -
    30000000.0 * sc[16] * x1020 + 50000000.0 * sc[16] * x2145 -
    50000000.0 * sc[16] * x2193 - 60000000.0 * sc[19] * x1778 +
    60000000.0 * sc[19] * x1780 - 30000000.0 * sc[2] * x1778 +
    30000000.0 * sc[2] * x1780 + 48000000.0 * sc[2] * x1821 -
    48000000.0 * sc[2] * x1856 + 100000000.0 * sc[2] * x1994 +
    18000.0 * sc[3] * x173 + 40000000.0 * sc[3] * x796 -
    40000000.0 * sc[3] * x986 - 50000000.0 * sc[4] * x1778 +
    50000000.0 * sc[4] * x1780 - 8480000.0 * sc[8] * x1778 +
    8480000.0 * sc[8] * x1780 - x1019 * x2191 - x1019 * x732 - x1019 * x814 +
    x1020 * x2191 + x1020 * x732 + x1020 * x814 + x11027 * x2145 -
    x11027 * x2193 - x11039 * x2145 + x11039 * x2193 + x173 * x714 -
    x1778 * x351 - 10.0 * x1778 * x744 - 10.0 * x1778 * x757 + x1778 * x908 +
    x1780 * x351 + 10.0 * x1780 * x744 + 10.0 * x1780 * x757 - x1780 * x908 -
    x1821 * x747 - x1821 * x816 + x1856 * x747 + x1856 * x816 - x1960 * x637 +
    x1966 * x637 - x231 * x796 + x231 * x986 + x6343 + x789 + x950 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x2145 - x2193) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[240] =
    4.035e+21 * refC * sc[17] * x1434 -
    40000000.0 * refCinv * sc[10] * sc[13] * x11449 + sc[10] * x11071 * x11073 -
    50000000.0 * sc[13] * x1390 - sc[14] * x10646 -
    90330000.0 * sc[14] * x1108 - 120000000.0 * sc[15] * x1260 +
    30000000.0 * sc[16] * x1023 - 30000000.0 * sc[16] * x1025 -
    sc[16] * x11071 * x11082 - 50000000.0 * sc[16] * x2275 +
    50000000.0 * sc[16] * x468 + 60000000.0 * sc[19] * x1678 -
    60000000.0 * sc[19] * x1797 - 28000000.0 * sc[1] * x1355 * x66 -
    60000000.0 * sc[20] * x1238 + 100000000.0 * sc[2] * x1974 -
    sc[2] * x7347 * x7423 + 40000000.0 * sc[3] * x1584 -
    40000000.0 * sc[3] * x1586 - 30000000.0 * sc[4] * x1217 +
    8480000.0 * sc[8] * x1678 - 8480000.0 * sc[8] * x1797 -
    8480000.0 * sc[9] * x1213 + x10072 - x1023 * x2191 - x1023 * x732 -
    x1023 * x814 + x1025 * x2191 + x1025 * x732 + x1025 * x814 -
    4.035e+16 * x1042 + x1044 + 2.17083e+25 * x1047 * x518 * x831 -
    x11027 * x2275 + x11027 * x468 + x11039 * x2275 - x11039 * x468 - x11073 +
    4.035e+16 * x11087 + 1.34001851851852e+37 * x11089 * x11092 -
    1.34001851851852e+37 * x11089 * x11095 + x11159 * x11447 - x11447 * x245 +
    x11486 - 6400000.0 * x1177 * x8328 - 400000000.0 * x1248 * x2099 -
    2.17083e+25 * x1513 * x831 - 30000000.0 * x158 * x233 - x1584 * x231 +
    x1586 * x231 + 10.0 * x1678 * x744 + 10.0 * x1678 * x757 - x1678 * x908 -
    10.0 * x1797 * x744 - 10.0 * x1797 * x757 + x1797 * x908 - x1836 * x747 -
    x1836 * x816 + x1841 * x747 + x1841 * x816 - x1971 * x637 + x1973 * x637 -
    x2144 * x645 - x233 * x433 - 100000000.0 * x290 * x645 - x324 * x912 -
    x40 * x645 * x810 - x435 * x664 - 4.035e+21 * x489 -
    100000000.0 * x574 * x597 + x6230 - x6348 + x6491 - 903.0 * x7349 +
    903.0 * x7352 - x7794 + x9859 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (-x2275 + x468) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[263] =
    14000000.0 * sc[11] * x1587 - 14000000.0 * sc[11] * x1588 +
    30000000.0 * sc[16] * x1027 - 30000000.0 * sc[16] * x1031 +
    50000000.0 * sc[16] * x1516 - 50000000.0 * sc[16] * x2331 +
    60000000.0 * sc[19] * x1663 - 60000000.0 * sc[19] * x1750 + sc[1] * x471 -
    48000000.0 * sc[2] * x1876 + sc[2] * x7413 + 48000000.0 * sc[2] * x758 +
    100000000.0 * sc[2] * x818 + 40000000.0 * sc[3] * x1587 -
    40000000.0 * sc[3] * x1588 + 18000.0 * sc[3] * x173 +
    50000000.0 * sc[4] * x1663 - 50000000.0 * sc[4] * x1750 + sc[4] * x9081 +
    8480000.0 * sc[8] * x1663 - 8480000.0 * sc[8] * x1750 - x1027 * x2191 -
    x1027 * x732 - x1027 * x814 + x1031 * x2191 + x1031 * x732 + x1031 * x814 -
    5.38e+16 * x1042 + x11027 * x1516 - x11027 * x2331 - x11039 * x1516 +
    x11039 * x2331 + x11070 * x11075 - x11070 * x11084 + 5.38e+16 * x11087 +
    1.7866913580246899e+37 * x11089 * x11092 -
    1.7866913580246899e+37 * x11089 * x11095 + x1121 -
    2.89444e+25 * x1513 * x831 - x1587 * x231 + x1588 * x231 + x1663 * x351 +
    10.0 * x1663 * x744 + 10.0 * x1663 * x757 - x1663 * x908 + x173 * x714 -
    x1750 * x351 - 10.0 * x1750 * x744 - 10.0 * x1750 * x757 + x1750 * x908 +
    x1876 * x747 + x1876 * x816 + x1983 * x637 + 5.38e+21 * x240 -
    5.38e+21 * x489 + 3400000.0 * x518 * exp(-347.21949940525701 * invT) +
    14000000.0 * x597 - x637 * x926 + x6567 - 2107.0 * x7349 + x7351 * x7423 +
    2107.0 * x7352 - x747 * x758 - x758 * x816 - x771 + x782 +
    2.89444e+25 * x835 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1516 - x2331) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[286] =
    -14000000.0 * sc[10] * x1358 - 14000000.0 * sc[11] * x1459 +
    14000000.0 * sc[11] * x1589 + 30000000.0 * sc[16] * x1063 -
    30000000.0 * sc[16] * x1065 + 50000000.0 * sc[16] * x1407 -
    50000000.0 * sc[16] * x2367 - 60000000.0 * sc[19] * x1761 +
    60000000.0 * sc[19] * x1765 + 57000000.0 * sc[2] * x1407 +
    48000000.0 * sc[2] * x1879 - 48000000.0 * sc[2] * x1894 -
    57000000.0 * sc[2] * x2367 + 100000000.0 * sc[2] * x411 -
    40000000.0 * sc[3] * x1459 + 40000000.0 * sc[3] * x1589 +
    18000.0 * sc[3] * x790 - 50000000.0 * sc[4] * x1761 +
    50000000.0 * sc[4] * x1765 - 8480000.0 * sc[8] * x1761 +
    8480000.0 * sc[8] * x1765 - x1063 * x2191 - x1063 * x732 - x1063 * x814 +
    x1065 * x2191 + x1065 * x732 + x1065 * x814 + x11027 * x1407 -
    x11027 * x2367 - x11039 * x1407 + x11039 * x2367 + x11169 + x1131 -
    18000.0 * x1177 * x1178 + x1459 * x231 - x1589 * x231 - x1761 * x2096 -
    x1761 * x351 - 10.0 * x1761 * x744 - 10.0 * x1761 * x757 + x1761 * x908 +
    x1765 * x2096 + x1765 * x351 + 10.0 * x1765 * x744 + 10.0 * x1765 * x757 -
    x1765 * x908 - x1879 * x747 - x1879 * x816 + x1894 * x747 + x1894 * x816 -
    x1984 * x637 + x5514 + x637 * x652 + x6606 + x714 * x790 + x921 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1407 - x2367) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[309] =
    -50000000.0 * sc[10] * x1390 + 14000000.0 * sc[11] * x884 -
    14000000.0 * sc[11] * x890 - 50000000.0 * sc[16] * x1050 +
    30000000.0 * sc[16] * x1068 - 30000000.0 * sc[16] * x1069 +
    50000000.0 * sc[16] * x754 - 60000000.0 * sc[19] * x1830 +
    60000000.0 * sc[19] * x1831 + 100000000.0 * sc[2] * x1506 -
    30000000.0 * sc[2] * x1830 + 30000000.0 * sc[2] * x1831 +
    48000000.0 * sc[2] * x1896 - 48000000.0 * sc[2] * x1901 +
    4.08 * sc[2] * exp(x2138) + 40000000.0 * sc[3] * x884 -
    40000000.0 * sc[3] * x890 - 50000000.0 * sc[4] * x1830 +
    50000000.0 * sc[4] * x1831 + sc[4] * x9093 - 8480000.0 * sc[8] * x1830 +
    8480000.0 * sc[8] * x1831 - x1050 * x11027 + x1050 * x11039 -
    x1068 * x2191 - x1068 * x732 - x1068 * x814 + x1069 * x2191 + x1069 * x732 +
    x1069 * x814 + x11027 * x754 - x11039 * x754 + x11069 -
    20000000.0 * x11449 * x2100 - x1830 * x351 - 10.0 * x1830 * x744 -
    10.0 * x1830 * x757 + x1830 * x908 + x1831 * x351 + 10.0 * x1831 * x744 +
    10.0 * x1831 * x757 - x1831 * x908 - x1896 * x747 - x1896 * x816 +
    x1901 * x747 + x1901 * x816 - x1996 * x637 + x1998 * x637 - x231 * x884 +
    x231 * x890 + 10.0 * x435 * exp(-3019.29999482832 * invT + 2.0 * tc[0]) +
    x585 + x617 + x714 * x791 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (-x1050 + x754) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[332] =
    -sc[10] * x10646 - 90330000.0 * sc[10] * x1108 -
    14000000.0 * sc[11] * x1648 + 14000000.0 * sc[11] * x898 +
    50000000.0 * sc[16] * x1036 + 30000000.0 * sc[16] * x1070 -
    50000000.0 * sc[16] * x622 - 30000000.0 * sc[16] * x668 -
    60000000.0 * sc[19] * x1834 + 60000000.0 * sc[19] * x1835 -
    30000000.0 * sc[2] * x1834 + 30000000.0 * sc[2] * x1835 +
    100000000.0 * sc[2] * x1980 - 40000000.0 * sc[3] * x1648 +
    40000000.0 * sc[3] * x898 - 50000000.0 * sc[4] * x1834 +
    50000000.0 * sc[4] * x1835 - 8480000.0 * sc[8] * x1834 +
    8480000.0 * sc[8] * x1835 + x1012 + x1036 * x11027 - x1036 * x11039 -
    x1070 * x2191 - x1070 * x732 - x1070 * x814 - x11027 * x622 +
    x11039 * x622 + x11069 + x1648 * x231 - x1834 * x351 - 10.0 * x1834 * x744 -
    10.0 * x1834 * x757 + x1834 * x908 + x1835 * x351 + 10.0 * x1835 * x744 +
    10.0 * x1835 * x757 - x1835 * x908 + x1901 * x747 + x1901 * x816 +
    x1998 * x637 + x207 + x214 + x2191 * x668 - x231 * x898 +
    10.0 * x435 * exp(-4025.7333264377598 * invT + 2.0 * tc[0]) - x566 * x747 -
    x566 * x816 - x637 * x909 + x668 * x732 + x668 * x814 + x714 * x791 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1036 - x622) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[355] =
    -120000000.0 * sc[10] * x1260 + 14000000.0 * sc[11] * x1666 -
    14000000.0 * sc[11] * x1671 + 30000000.0 * sc[16] * x1074 -
    30000000.0 * sc[16] * x1077 + 50000000.0 * sc[16] * x1297 -
    50000000.0 * sc[16] * x130 - 60000000.0 * sc[19] * x1838 +
    60000000.0 * sc[19] * x1842 + 100000000.0 * sc[2] * x1 -
    48000000.0 * sc[2] * x1823 - 30000000.0 * sc[2] * x1838 +
    30000000.0 * sc[2] * x1842 + 48000000.0 * sc[2] * x1908 +
    40000000.0 * sc[3] * x1666 - 40000000.0 * sc[3] * x1671 -
    50000000.0 * sc[4] * x1838 + 50000000.0 * sc[4] * x1842 -
    8480000.0 * sc[8] * x1838 + 8480000.0 * sc[8] * x1842 - x1059 * x637 -
    x1074 * x2191 - x1074 * x732 - x1074 * x814 + x1077 * x2191 + x1077 * x732 +
    x1077 * x814 + x11027 * x1297 - x11027 * x130 - x11039 * x1297 +
    x11039 * x130 + x11069 + x1136 - x1666 * x231 + x1671 * x231 +
    x1823 * x747 + x1823 * x816 - x1838 * x351 - 10.0 * x1838 * x744 -
    10.0 * x1838 * x757 + x1838 * x908 + x1842 * x351 + 10.0 * x1842 * x744 +
    10.0 * x1842 * x757 - x1842 * x908 - x1908 * x747 - x1908 * x816 + x52 +
    x600 * x637 + x714 * x791 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1297 - x130) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[378] =
    14000000.0 * sc[11] * x1677 + 30000000.0 * sc[16] * x1078 -
    30000000.0 * sc[16] * x1081 - 50000000.0 * sc[16] * x504 +
    50000000.0 * sc[16] * x846 + 40000000.0 * sc[16] +
    60000000.0 * sc[19] * x1848 + 73400000.0 * sc[1] * x1848 +
    100000000.0 * sc[1] + 15000000.0 * sc[2] * x1677 +
    48000000.0 * sc[2] * x169 + 30000000.0 * sc[2] * x1848 -
    57000000.0 * sc[2] * x504 + 57000000.0 * sc[2] * x846 +
    200000000.0 * sc[2] + 40000000.0 * sc[3] * x1677 +
    3200000.0 * sc[3] * x8258 + 50000000.0 * sc[4] * x1848 +
    8480000.0 * sc[8] * x1848 + 50000000.0 * sc[8] + x10162 + x1026 -
    x1078 * x2191 - x1078 * x732 - x1078 * x814 + x1081 * x2191 + x1081 * x732 +
    x1081 * x814 + x11008 - x11027 * x504 + x11027 * x846 + x11039 * x504 -
    x11039 * x846 + x11082 + x11365 + x11680 + x11694 - x1677 * x231 -
    x169 * x747 - x169 * x816 - x1789 * x637 - x1843 * x2096 + x1848 * x2096 +
    x1848 * x351 + 10.0 * x1848 * x744 + 10.0 * x1848 * x757 - x1848 * x908 +
    x1905 * x714 + x1955 + 50000000.0 * x518 + x5514 + 30000000.0 * x645 +
    x9880 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (-x504 + x846) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[401] =
    14000000.0 * sc[11] * x1689 + 30000000.0 * sc[16] * x1082 +
    50000000.0 * sc[16] * x849 + 60000000.0 * sc[19] * x1850 +
    73400000.0 * sc[1] * x1850 + sc[1] * x202 + 15000000.0 * sc[2] * x1689 +
    30000000.0 * sc[2] * x1850 + 48000000.0 * sc[2] * x1892 +
    100000000.0 * sc[2] * x598 + 57000000.0 * sc[2] * x849 +
    18000.0 * sc[3] * x1494 + 40000000.0 * sc[3] * x1689 +
    50000000.0 * sc[4] * x1850 + 8480000.0 * sc[8] * x1850 + x10162 + x1026 -
    x1082 * x2191 - x1082 * x732 - x1082 * x814 + x11008 + x11027 * x849 -
    x11039 * x849 + x11169 + x11680 + x11694 + x11708 + x11717 +
    2.69e+21 * x1434 * x788 + x1494 * x714 - x1689 * x231 - x1789 * x637 +
    x1850 * x2096 + x1850 * x351 + 10.0 * x1850 * x744 + 10.0 * x1850 * x757 -
    x1850 * x908 - x1892 * x747 - x1892 * x816 + x1955 + x2044 + x5514 + x9880 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (-x1080 + x849) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[424] =
    14000000.0 * sc[11] * x1692 + 30000000.0 * sc[16] * x1085 +
    50000000.0 * sc[16] * x1782 + 60000000.0 * sc[19] * x1855 +
    73400000.0 * sc[1] * x1855 + 15000000.0 * sc[2] * x1692 +
    57000000.0 * sc[2] * x1782 + 30000000.0 * sc[2] * x1855 +
    48000000.0 * sc[2] * x1888 + 100000000.0 * sc[2] * x411 +
    40000000.0 * sc[3] * x1692 + 18000.0 * sc[3] * x191 +
    50000000.0 * sc[4] * x1855 + 8480000.0 * sc[8] * x1855 + x10162 + x1026 -
    x1085 * x2191 - x1085 * x732 - x1085 * x814 + x11008 + x11027 * x1782 -
    x11039 * x1782 + x11169 + x11680 + x11694 + x11708 + x11717 - x1692 * x231 +
    x1855 * x2096 + x1855 * x351 + 10.0 * x1855 * x744 + 10.0 * x1855 * x757 -
    x1855 * x908 - x1888 * x747 - x1888 * x816 - x1898 * x637 + x191 * x714 +
    x1955 + x2044 + x5514 + x9880 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (-x1080 + x1782) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[447] =
    -14000000.0 * sc[11] * x1720 + 14000000.0 * sc[11] * x184 +
    50000000.0 * sc[16] * x1033 + 30000000.0 * sc[16] * x1086 -
    30000000.0 * sc[16] * x1087 - 50000000.0 * sc[16] * x971 -
    60000000.0 * sc[19] * x1825 + 60000000.0 * sc[19] * x1827 -
    73400000.0 * sc[1] * x1825 + 73400000.0 * sc[1] * x1827 +
    57000000.0 * sc[2] * x1033 - 15000000.0 * sc[2] * x1720 +
    15000000.0 * sc[2] * x184 + 48000000.0 * sc[2] * x1900 +
    100000000.0 * sc[2] * x63 - 57000000.0 * sc[2] * x971 -
    40000000.0 * sc[3] * x1720 + 40000000.0 * sc[3] * x184 +
    18000.0 * sc[3] * x1905 - 50000000.0 * sc[4] * x1825 +
    50000000.0 * sc[4] * x1827 - 8480000.0 * sc[8] * x1825 +
    8480000.0 * sc[8] * x1827 + x1033 * x11027 - x1033 * x11039 -
    x1086 * x2191 - x1086 * x732 - x1086 * x814 + x1087 * x2191 + x1087 * x732 +
    x1087 * x814 - x11027 * x971 + x11039 * x971 + x11169 + x1364 * x637 +
    x1720 * x231 - x1825 * x2096 - x1825 * x351 - 10.0 * x1825 * x744 -
    10.0 * x1825 * x757 + x1825 * x908 + x1827 * x2096 + x1827 * x351 +
    10.0 * x1827 * x744 + 10.0 * x1827 * x757 - x1827 * x908 - x184 * x231 +
    x1845 * x747 + x1845 * x816 - x1900 * x747 - x1900 * x816 + x1905 * x714 +
    x1955 - x1959 * x637 + 60000000.0 * x435 + x5514 + x921 + x932 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x1033 - x971) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[470] =
    -60000000.0 * sc[10] * x1238 + 14000000.0 * sc[11] * x1730 +
    30000000.0 * sc[16] * x1090 + 50000000.0 * sc[16] * x929 +
    60000000.0 * sc[19] * x1832 + 73400000.0 * sc[1] * x1832 +
    15000000.0 * sc[2] * x1730 + 30000000.0 * sc[2] * x1832 +
    48000000.0 * sc[2] * x1943 + 57000000.0 * sc[2] * x929 -
    40000000.0 * sc[3] * x1681 + 40000000.0 * sc[3] * x1730 +
    50000000.0 * sc[4] * x1832 + 8480000.0 * sc[8] * x1832 + x10162 + x1026 -
    x1090 * x2191 - x1090 * x732 - x1090 * x814 + x11008 + x11027 * x929 -
    x11039 * x929 + x11365 + x11680 + x11684 + x11693 + x11708 + x11717 +
    x1264 + x1681 * x231 - x1730 * x231 + x1832 * x2096 + x1832 * x351 +
    10.0 * x1832 * x744 + 10.0 * x1832 * x757 - x1832 * x908 + x1905 * x714 -
    x1943 * x747 - x1943 * x816 + x1955 + x2044 + x5514 - x557 * x637 + x9880 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (-x1080 + x929) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[493] =
    14000000.0 * sc[11] * x1631 - 14000000.0 * sc[11] * x1670 +
    30000000.0 * sc[16] * x1099 - 30000000.0 * sc[16] * x1104 +
    50000000.0 * sc[16] * x568 - 50000000.0 * sc[16] * x892 +
    60000000.0 * sc[19] * x1846 + 30000000.0 * sc[2] * x1846 +
    48000000.0 * sc[2] * x1944 + 57000000.0 * sc[2] * x568 -
    57000000.0 * sc[2] * x892 + 40000000.0 * sc[3] * x1631 -
    40000000.0 * sc[3] * x1670 + 50000000.0 * sc[4] * x1846 +
    8480000.0 * sc[8] * x1846 + x10162 + x1026 - x1099 * x2191 - x1099 * x732 -
    x1099 * x814 + x11008 + x11027 * x568 - x11027 * x892 - x11039 * x568 +
    x11039 * x892 + x1104 * x2191 + x1104 * x732 + x1104 * x814 + x11365 +
    x11684 + x11693 - x1631 * x231 + x1670 * x231 - x1789 * x637 -
    x1843 * x2096 + x1846 * x2096 + x1846 * x351 + 10.0 * x1846 * x744 +
    10.0 * x1846 * x757 - x1846 * x908 + x1905 * x714 - x1944 * x747 -
    x1944 * x816 + x1955 + x5514 + x97 + x9880 +
    (14000000.0 * sc[11] * x675 + 30000000.0 * sc[16] * x674 +
     60000000.0 * sc[19] * x677 + 73400000.0 * sc[1] * x677 +
     15000000.0 * sc[2] * x675 + 30000000.0 * sc[2] * x677 -
     48000000.0 * sc[2] * x680 + 40000000.0 * sc[3] * x675 +
     50000000.0 * sc[4] * x677 + 8480000.0 * sc[8] * x677 + x2096 * x677 -
     x2191 * x674 - x231 * x675 + x351 * x677 - x674 * x732 - x674 * x814 +
     10.0 * x677 * x744 + 10.0 * x677 * x757 - x677 * x908 + x680 * x747 +
     x680 * x816) *
      (x568 - x892) +
    (14000000.0 * sc[11] * x676 + 60000000.0 * sc[19] * x678 +
     73400000.0 * sc[1] * x678 - 100000000.0 * sc[2] * x658 +
     15000000.0 * sc[2] * x676 + 30000000.0 * sc[2] * x678 +
     48000000.0 * sc[2] * x681 + 40000000.0 * sc[3] * x676 +
     50000000.0 * sc[4] * x678 + 8480000.0 * sc[8] * x678 + x2096 * x678 -
     x231 * x676 + x351 * x678 + 10.0 * x678 * x744 + 10.0 * x678 * x757 -
     x678 * x908 - x681 * x747 - x681 * x816) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-100000000.0 * sc[2] * x65 - 18000.0 * sc[3] * x230 - x230 * x714) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (60000000.0 * sc[19] * x679 + 73400000.0 * sc[1] * x679 -
     100000000.0 * sc[2] * x599 + 30000000.0 * sc[2] * x679 +
     50000000.0 * sc[4] * x679 + 8480000.0 * sc[8] * x679 + x2096 * x679 +
     x351 * x679 + x603 * x637 + 10.0 * x679 * x744 + 10.0 * x679 * x757 -
     x679 * x908) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (48000000.0 * sc[2] * x682 - 18000.0 * sc[3] * x437 - x437 * x714 +
     x561 * x637 - x682 * x747 - x682 * x816) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[11] =
    14000000.0 * sc[11] * x1014 - 14000000.0 * sc[11] * x987 +
    30000000.0 * sc[2] * x827 - 30000000.0 * sc[2] * x961 +
    10000000.0 * sc[3] * x819 + x11027 * x1465 - x11027 * x972 - x1557 * x644 +
    x1557 * x855 - x2123 * x644 + x2123 * x855 + x644 * x925 + 1204.0 * x7349 -
    1204.0 * x7352 + x827 * x908 - x855 * x925 - x908 * x961 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x1465 + x972) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-10000000.0 * sc[3] * x65) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972)));
  J[34] =
    -5280000.0 * sc[11] * sc[1] * x2088 - 14000000.0 * sc[11] * x1211 +
    14000000.0 * sc[11] * x1389 + 10000000.0 * sc[3] * x1637 + x1064 * x908 -
    x11027 * x1649 + x11027 * x1694 + x11801 - x1557 * x893 + x1557 * x899 +
    x2101 - x2123 * x893 + x2123 * x899 + x893 * x925 - x899 * x925 -
    x908 * x969 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1649 - x1694) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-10000000.0 * sc[3] * x65) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694)));
  J[57] =
    sc[10] * x7347 * x7423 - 14000000.0 * sc[11] * x1419 +
    14000000.0 * sc[11] * x1461 - sc[11] * x7413 + sc[17] * x7466 +
    10000000.0 * sc[3] * x1709 - x11027 * x1772 + x11027 * x1785 + x11801 -
    x1557 * x970 + x1557 * x973 + x1640 * x908 - x2123 * x970 + x2123 * x973 +
    x5685 - x718 * x908 + x925 * x970 - x925 * x973 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1772 - x1785) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-10000000.0 * sc[3] * x65) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785)));
  J[80] =
    14000000.0 * sc[11] * x1517 - 14000000.0 * sc[11] * x854 +
    10000000.0 * sc[3] * x1744 - x11027 * x1822 + x11027 * x1852 -
    10000000.0 * x1176 - x1557 * x977 + x1557 * x978 - x1661 * x908 +
    x1662 * x908 - x2123 * x977 + x2123 * x978 - 10000000.0 * x564 + x5765 +
    2640000.0 * x645 * exp(-754.82499870708 * invT) + 3612.0 * x7349 -
    3612.0 * x7352 + x7494 + x925 * x977 - x925 * x978 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1822 - x1852) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-10000000.0 * sc[3] * x65) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852)));
  J[103] =
    -14000000.0 * sc[11] * x1519 + 14000000.0 * sc[11] * x1521 -
    sc[11] * x9081 - 30000000.0 * sc[2] * x1687 + 30000000.0 * sc[2] * x345 +
    10000000.0 * sc[3] * x1774 - x11027 * x1875 + x11027 * x1903 + x11801 -
    x1557 * x980 + x1557 * x981 - x1687 * x908 - x2123 * x980 + x2123 * x981 +
    x345 * x908 + x5774 + x925 * x980 - x925 * x981 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1875 - x1903) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903)));
  J[126] =
    -14000000.0 * sc[11] * x1523 + 14000000.0 * sc[11] * x1533 -
    30000000.0 * sc[2] * x1669 + 30000000.0 * sc[2] * x1751 +
    10000000.0 * sc[3] * x1840 - x11027 * x1946 + x11027 * x1986 -
    x1557 * x989 + x1557 * x990 - x1669 * x908 + x1751 * x908 - x2123 * x989 +
    x2123 * x990 + 3612.0 * x7349 - 3612.0 * x7352 + x925 * x989 - x925 * x990 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1946 - x1986) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-10000000.0 * sc[3] * x65) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986)));
  J[149] =
    sc[10] * x9222 - 14000000.0 * sc[11] * x1534 + 14000000.0 * sc[11] * x1535 -
    30000000.0 * sc[2] * x1760 + 30000000.0 * sc[2] * x1762 - x1008 * x1557 -
    x1008 * x2123 + x1008 * x925 + x1010 * x1557 + x1010 * x2123 -
    x1010 * x925 - x11027 * x2026 + x11027 * x2051 + x11803 - x1760 * x908 +
    x1762 * x908 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x2026 - x2051) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051)));
  J[172] =
    -14000000.0 * sc[11] * x1563 + 14000000.0 * sc[11] * x1573 - x1011 * x1557 -
    x1011 * x2123 + x1011 * x925 + x1013 * x1557 + x1013 * x2123 -
    x1013 * x925 - x11027 * x2093 + x11027 * x2104 + x11803 - x1768 * x908 +
    x1769 * x908 + x6162 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x2093 - x2104) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104)));
  J[195] =
    -14000000.0 * sc[11] * x1574 + 14000000.0 * sc[11] * x1575 - x1017 * x1557 -
    x1017 * x2123 + x1017 * x925 + x1018 * x1557 + x1018 * x2123 -
    x1018 * x925 - x11027 * x1449 + x11027 * x2150 + x11803 - x1775 * x908 +
    x1776 * x908 + x6260 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1449 - x2150) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-10000000.0 * sc[3] * x65) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150)));
  J[218] =
    -14000000.0 * sc[11] * x796 + 14000000.0 * sc[11] * x986 -
    30000000.0 * sc[2] * x1778 + 30000000.0 * sc[2] * x1780 +
    10000000.0 * sc[3] * x1994 - x1019 * x1557 - x1019 * x2123 + x1019 * x925 +
    x1020 * x1557 + x1020 * x2123 - x1020 * x925 - x11027 * x2145 +
    x11027 * x2193 - x1778 * x908 + x1780 * x908 + 1204.0 * x7349 -
    1204.0 * x7352 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x2145 - x2193) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-10000000.0 * sc[3] * x65) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193)));
  J[241] =
    -14000000.0 * sc[11] * x1584 + 14000000.0 * sc[11] * x1586 +
    14000000.0 * sc[12] * x1358 + 30000000.0 * sc[2] * x1678 -
    30000000.0 * sc[2] * x1797 + sc[2] * x7347 * x7423 +
    10000000.0 * sc[3] * x1974 + sc[6] * x9222 - x1023 * x1557 - x1023 * x2123 +
    x1023 * x925 + x1025 * x1557 + x1025 * x2123 - x1025 * x925 +
    x11027 * x2275 - x11027 * x468 + x1678 * x908 - x1797 * x908 + x435 * x664 +
    x6348 + 903.0 * x7349 - 903.0 * x7352 + x7794 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x2275 + x468) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-10000000.0 * sc[3] * x65) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468)));
  J[264] =
    -14000000.0 * sc[11] * x1587 + 14000000.0 * sc[11] * x1588 -
    2640000.0 * ((sc[1]) * (sc[1])) * x2088 - 30000000.0 * sc[1] * x1234 -
    sc[1] * x471 + 30000000.0 * sc[2] * x1663 - 30000000.0 * sc[2] * x1750 -
    sc[2] * x7413 + 10000000.0 * sc[3] * x818 - sc[4] * x9081 - x1027 * x1557 -
    x1027 * x2123 + x1027 * x925 + x1031 * x1557 + x1031 * x2123 -
    x1031 * x925 - x11027 * x1516 + x11027 * x2331 + x1663 * x908 -
    x1750 * x908 - x2202 * x645 - 10000000.0 * x312 * x645 -
    3400000.0 * x518 * exp(-347.21949940525701 * invT) - 14000000.0 * x597 +
    2107.0 * x7349 - x7351 * x7423 - 2107.0 * x7352 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1516 - x2331) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331)));
  J[287] =
    14000000.0 * sc[10] * x1358 + 14000000.0 * sc[11] * x1459 -
    14000000.0 * sc[11] * x1589 - x1063 * x1557 - x1063 * x2123 + x1063 * x925 +
    x1065 * x1557 + x1065 * x2123 - x1065 * x925 - x11027 * x1407 +
    x11027 * x2367 + x11803 - x1761 * x908 + x1765 * x908 + x6606 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1407 - x2367) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-10000000.0 * sc[3] * x65) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367)));
  J[310] =
    -14000000.0 * sc[11] * x884 + 14000000.0 * sc[11] * x890 -
    30000000.0 * sc[2] * x1830 + 30000000.0 * sc[2] * x1831 +
    10000000.0 * sc[3] * x1506 + x1050 * x11027 - x1068 * x1557 -
    x1068 * x2123 + x1068 * x925 + x1069 * x1557 + x1069 * x2123 -
    x1069 * x925 - x11027 * x754 - x1830 * x908 + x1831 * x908 +
    1806.0 * x7349 - 1806.0 * x7352 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x1050 + x754) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-10000000.0 * sc[3] * x65) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754)));
  J[333] =
    14000000.0 * sc[11] * x1648 - 14000000.0 * sc[11] * x898 -
    30000000.0 * sc[2] * x1834 + 30000000.0 * sc[2] * x1835 +
    10000000.0 * sc[3] * x1980 - x1036 * x11027 - x1070 * x1557 -
    x1070 * x2123 + x1070 * x925 + x11027 * x622 + x1557 * x668 - x1834 * x908 +
    x1835 * x908 + x2123 * x668 - x668 * x925 + 1806.0 * x7349 -
    1806.0 * x7352 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1036 - x622) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622)));
  J[356] =
    -14000000.0 * sc[11] * x1666 + 14000000.0 * sc[11] * x1671 -
    30000000.0 * sc[2] * x1838 + 30000000.0 * sc[2] * x1842 +
    10000000.0 * sc[3] * x1 - x1074 * x1557 - x1074 * x2123 + x1074 * x925 +
    x1077 * x1557 + x1077 * x2123 - x1077 * x925 - x11027 * x1297 +
    x11027 * x130 - x1838 * x908 + x1842 * x908 + 1806.0 * x7349 -
    1806.0 * x7352 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1297 - x130) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130)));
  J[379] =
    -14000000.0 * sc[11] * x1677 + 30000000.0 * sc[2] * x1848 + x1026 -
    x1078 * x1557 - x1078 * x2123 + x1078 * x925 + x1081 * x1557 +
    x1081 * x2123 - x1081 * x925 + x11027 * x504 - x11027 * x846 + x11807 +
    x1848 * x908 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x504 + x846) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-10000000.0 * sc[3] * x65) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846)));
  J[402] =
    14000000.0 * sc[11] * x1681 - 14000000.0 * sc[11] * x1689 +
    30000000.0 * sc[2] * x1850 + sc[2] * x7466 + 10000000.0 * sc[3] * x598 +
    x1026 - x1082 * x1557 - x1082 * x2123 + x1082 * x925 - x11027 * x849 +
    x11801 + x11808 - x1843 * x908 + x1850 * x908 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x1080 + x849) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849)));
  J[425] =
    -14000000.0 * sc[11] * x1692 + 30000000.0 * sc[2] * x1855 + x1026 -
    x1085 * x1557 - x1085 * x2123 + x1085 * x925 - x11027 * x1782 + x11807 +
    x11808 + x1855 * x908 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x1080 + x1782) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)));
  J[448] =
    14000000.0 * sc[11] * x1720 - 14000000.0 * sc[11] * x184 +
    10000000.0 * sc[3] * x63 - x1033 * x11027 - x1086 * x1557 - x1086 * x2123 +
    x1086 * x925 + x1087 * x1557 + x1087 * x2123 - x1087 * x925 +
    x11027 * x971 + x11801 - x1825 * x908 + x1827 * x908 + x932 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x1033 - x971) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971)));
  J[471] =
    -14000000.0 * sc[11] * x1730 + 30000000.0 * sc[2] * x1832 + x1026 -
    x1090 * x1557 - x1090 * x2123 + x1090 * x925 - x11027 * x929 + x11807 +
    x11808 + x1832 * x908 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (-x1080 + x929) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929)));
  J[494] =
    -14000000.0 * sc[11] * x1631 + 14000000.0 * sc[11] * x1670 +
    30000000.0 * sc[2] * x1846 + x1026 - x1099 * x1557 - x1099 * x2123 +
    x1099 * x925 - x11027 * x568 + x11027 * x892 + x1104 * x1557 +
    x1104 * x2123 - x1104 * x925 + x11803 - x1843 * x908 + x1846 * x908 +
    (-14000000.0 * sc[11] * x675 + 30000000.0 * sc[2] * x677 - x1557 * x674 -
     x2123 * x674 + x674 * x925 + x677 * x908) *
      (x568 - x892) +
    (-14000000.0 * sc[11] * x676 + 30000000.0 * sc[2] * x678 -
     10000000.0 * sc[3] * x658 + x678 * x908) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-10000000.0 * sc[3] * x65) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (30000000.0 * sc[2] * x679 - 10000000.0 * sc[3] * x599 + x679 * x908) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892)));
  J[12] =
    5070000000000000.0 * sc[10] * x40 * x723 - 14000000.0 * sc[11] * x1014 +
    14000000.0 * sc[11] * x987 - 20000000.0 * sc[12] * x1383 +
    20000000.0 * sc[1] * x1887 + 96000000.0 * sc[2] * x520 +
    18000.0 * sc[3] * x657 + 5000000.0 * sc[4] * x1887 + x10253 + x1053 +
    x11810 + x1465 * x508 + x1887 * x2324 + x2082 * x827 - x2082 * x961 +
    x2147 * x827 - x2147 * x961 + x2179 * x827 - x2179 * x961 - x2258 * x644 +
    x2258 * x855 - x2271 * x927 + x2271 * x956 + x2325 * x827 - x2325 * x961 +
    x373 * x760 - x373 * x823 - x508 * x972 - x694 * x827 + x694 * x961 +
    x8850 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x1465 + x972) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-18000.0 * sc[3] * x230) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[35] =
    14000000.0 * sc[11] * x1211 - 14000000.0 * sc[11] * x1389 + sc[17] * x458 +
    20000000.0 * sc[1] * x1370 + 96000000.0 * sc[2] * x540 +
    18000.0 * sc[3] * x1200 + 5000000.0 * sc[4] * x1370 + x1030 * x373 +
    x10372 + x1061 + x1064 * x2082 + x1064 * x2147 + x1064 * x2179 +
    x1064 * x2325 - x1064 * x694 + x11811 + x1370 * x2324 - 20000000.0 * x1387 +
    1350000000000.0 * x1410 * x40 - x1508 * x373 - x1561 * x2271 -
    x1649 * x508 + x1694 * x508 - x2082 * x969 - x2147 * x969 - x2179 * x969 -
    x2258 * x893 + x2258 * x899 + x2271 * x494 - x2325 * x969 -
    20000000.0 * x473 + x631 + x694 * x969 + x8930 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1649 - x1694) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-18000.0 * sc[3] * x230) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[58] =
    14000000.0 * sc[11] * x1419 - 14000000.0 * sc[11] * x1461 - sc[12] * x7488 +
    0.384 * sc[14] * exp(x943) + 20000000.0 * sc[1] * x1674 +
    96000000.0 * sc[2] * x1208 + 18000.0 * sc[3] * x1075 +
    5000000.0 * sc[4] * x1674 + x10424 + x1061 + x11811 - 96000000.0 * x1284 +
    x1639 * x373 + x1640 * x2082 + x1640 * x2147 + x1640 * x2179 +
    x1640 * x2325 - x1640 * x694 - x1643 * x373 - x1660 * x2271 +
    x1674 * x2324 + x1726 * x2271 - x1772 * x508 + x1785 * x508 - x2082 * x718 -
    x2147 * x718 - x2179 * x718 - x2258 * x970 + x2258 * x973 - x2325 * x718 -
    96000000.0 * x478 + x5681 + x694 * x718 + x8978 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1772 - x1785) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-18000.0 * sc[3] * x230) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[81] =
    -sc[12] * x8321 + 20000000.0 * sc[1] * x1766 + 96000000.0 * sc[2] * x1658 +
    5000000.0 * sc[4] * x1766 + x10446 + x1061 + x11231 + x11811 -
    x1661 * x2082 - x1661 * x2147 - x1661 * x2179 - x1661 * x2325 +
    x1661 * x694 + x1662 * x2082 + x1662 * x2147 + x1662 * x2179 +
    x1662 * x2325 - x1662 * x694 + x1673 * x373 - x1685 * x373 - x1757 * x2271 +
    x1759 * x2271 + x1766 * x2324 - x1822 * x508 + x1852 * x508 - x2258 * x977 +
    x2258 * x978 + x2273 * x901 + x233 * x353 + x5764 + x9020 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1822 - x1852) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-18000.0 * sc[3] * x230) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[104] =
    20000000.0 * sc[1] * x1889 + 96000000.0 * sc[2] * x182 +
    5000000.0 * sc[4] * x1889 + x10469 + x1061 + x11260 + x11811 -
    5000000.0 * x1387 - x1680 * x373 - x1687 * x2082 - x1687 * x2147 -
    x1687 * x2179 - x1687 * x2325 + x1687 * x694 + x1710 * x373 -
    x1790 * x2271 + x1824 * x2271 - x1875 * x508 + x1889 * x2324 +
    x1903 * x508 + x2082 * x345 + x2147 * x345 + x2179 * x345 + x220 * x435 -
    x2258 * x980 + x2258 * x981 + x2325 * x345 - x345 * x694 -
    5000000.0 * x473 + x5854 + 20000000.0 * x645 + x9122 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1875 - x1903) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-18000.0 * sc[3] * x230) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[127] =
    14000000.0 * sc[11] * x1523 - 14000000.0 * sc[11] * x1533 -
    5000000.0 * sc[12] * x1376 +
    1350000000000.0 * sc[12] * x1509 * x348 * x788 +
    8100000000000.0 * sc[1] * x1410 + 20000000.0 * sc[1] * x1891 +
    96000000.0 * sc[2] * x1897 + 18000.0 * sc[3] * x1781 +
    5000000.0 * sc[4] * x1891 + x10509 + 1.0032110091743101e+19 * x1251 * x934 -
    1350000000000.0 * x1410 * x348 * x773 - 8100000000000.0 * x1509 * x1564 -
    3.042e+16 * x1564 * x703 - x1669 * x2082 - x1669 * x2147 - x1669 * x2179 -
    x1669 * x2325 + x1669 * x694 + x1748 * x373 + x1751 * x2082 +
    x1751 * x2147 + x1751 * x2179 + x1751 * x2325 - x1751 * x694 -
    x1756 * x373 - x1829 * x2271 + x1860 * x2271 + x1891 * x2324 -
    x1946 * x508 + x1986 * x508 - x2258 * x989 + x2258 * x990 +
    3.5867302325581401e+30 * x424 * x635 -
    3.5867302325581401e+30 * x424 * x737 + x707 * (1.68 * x144 + 12.0 * x693) -
    x729 * (1.68 * x144 + 12.0 * x693) + 3.042e+16 * x740 + x9192 + x931 -
    1.0032110091743101e+19 * x934 * x965 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1946 - x1986) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-18000.0 * sc[3] * x230) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[150] =
    14000000.0 * sc[11] * x1534 - 14000000.0 * sc[11] * x1535 +
    20000000.0 * sc[1] * x1366 + 96000000.0 * sc[2] * x1953 +
    18000.0 * sc[3] * x1839 + 5000000.0 * sc[4] * x1366 + x10004 -
    x1008 * x2258 + x1010 * x2258 + x10532 + x1061 + x11811 + x1597 * x435 -
    x1760 * x2082 - x1760 * x2147 - x1760 * x2179 + x1760 * x694 +
    x1762 * x2082 + x1762 * x2147 + x1762 * x2179 - x1762 * x694 -
    x1764 * x373 - x1881 * x2271 + x1885 * x2271 - x2026 * x508 + x2051 * x508 +
    x323 * x373 + x6082 + 20000000.0 * x645 + x9245 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x2026 - x2051) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-18000.0 * sc[3] * x230) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[173] =
    14000000.0 * sc[11] * x1563 - 14000000.0 * sc[11] * x1573 +
    20000000.0 * sc[1] * x1893 + 96000000.0 * sc[2] * x1989 +
    24000000.0 * sc[6] * x1989 - x1011 * x2258 + x1013 * x2258 + x1049 * x435 +
    x10555 + x11811 - x1768 * x2082 - x1768 * x2147 - x1768 * x2179 -
    x1768 * x2325 + x1768 * x694 + x1769 * x2082 + x1769 * x2147 +
    x1769 * x2179 + x1769 * x2325 - x1769 * x694 - x1773 * x373 +
    x1893 * x2324 - x1911 * x2271 + x1951 * x2271 - x2093 * x508 +
    x2104 * x508 + x225 * x373 + x6154 + x6161 + x9275 + x9284 + x9287 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x2093 - x2104) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-18000.0 * sc[3] * x230) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[196] =
    14000000.0 * sc[11] * x1574 - 14000000.0 * sc[11] * x1575 +
    20000000.0 * sc[1] * x839 + 96000000.0 * sc[2] * x447 +
    18000.0 * sc[3] * x1197 + 5000000.0 * sc[4] * x839 - x1017 * x2258 +
    x1018 * x2258 + x10608 + x1061 + x11811 - x1449 * x508 - x1775 * x2082 -
    x1775 * x2147 - x1775 * x2179 - x1775 * x2325 + x1775 * x694 +
    x1776 * x2082 + x1776 * x2147 + x1776 * x2179 + x1776 * x2325 -
    x1776 * x694 + x1779 * x373 - x1784 * x373 - x1954 * x2271 + x1957 * x2271 +
    x2150 * x508 + x2324 * x839 + x6259 + x9344 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1449 - x2150) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-18000.0 * sc[3] * x230) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[219] =
    14000000.0 * sc[11] * x796 - 14000000.0 * sc[11] * x986 +
    20000000.0 * sc[1] * x639 + 96000000.0 * sc[2] * x2003 +
    5000000.0 * sc[4] * x639 - x1019 * x2258 + x1020 * x2258 + x10642 + x11810 -
    x1778 * x2082 - x1778 * x2147 - x1778 * x2179 - x1778 * x2325 +
    x1778 * x694 + x1780 * x2082 + x1780 * x2147 + x1780 * x2179 +
    x1780 * x2325 - x1780 * x694 + x1821 * x373 - x1856 * x373 - x1960 * x2271 +
    x1966 * x2271 - x2145 * x508 + x2193 * x508 + x2324 * x639 + x6336 + x9385 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x2145 - x2193) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-18000.0 * sc[3] * x230) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[242] =
    -sc[10] * x1037 * x711 + 5070000000000000.0 * sc[12] * x1037 * x703 * x788 +
    20000000.0 * sc[1] * x1002 + 2025000000000.0 * sc[1] * x1410 +
    96000000.0 * sc[2] * x1981 + 5000000.0 * sc[4] * x1002 + x1002 * x2324 +
    x1022 * (0.42 * x1437 * x691 + 3.0 * x686 * x691) - x1023 * x2258 +
    x1025 * x2258 + x10690 + x11486 + 2.5080275229357798e+18 * x1251 * x934 -
    2025000000000.0 * x1509 * x1564 - 7605000000000000.0 * x1564 * x703 +
    x1678 * x2082 + x1678 * x2147 + x1678 * x2179 + x1678 * x2325 -
    x1678 * x694 - x1797 * x2082 - x1797 * x2147 - x1797 * x2179 -
    x1797 * x2325 + x1797 * x694 + x1836 * x373 - x1841 * x373 - x1971 * x2271 +
    x1973 * x2271 + x2157 + x2275 * x508 +
    8.9668255813953501e+29 * x424 * x635 -
    8.9668255813953501e+29 * x424 * x737 - x468 * x508 + x711 +
    7605000000000000.0 * x740 -
    x837 * (0.42 * x1437 * x691 + 3.0 * x686 * x691) -
    2.5080275229357798e+18 * x934 * x965 + x9441 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x2275 + x468) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-18000.0 * sc[3] * x230) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[265] =
    14000000.0 * sc[11] * x1587 - 14000000.0 * sc[11] * x1588 +
    20000000.0 * sc[1] * x639 + 96000000.0 * sc[2] * x951 +
    5000000.0 * sc[4] * x639 - x1027 * x2258 + x1031 * x2258 + x10713 + x11810 -
    x1516 * x508 + x1663 * x2082 + x1663 * x2147 + x1663 * x2179 +
    x1663 * x2325 - x1663 * x694 - x1750 * x2082 - x1750 * x2147 -
    x1750 * x2179 - x1750 * x2325 + x1750 * x694 + x187 - x1876 * x373 +
    x1983 * x2271 - x2271 * x926 + x2324 * x639 + x2331 * x508 + x373 * x758 +
    14000000.0 * x597 + x9478 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1516 - x2331) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-18000.0 * sc[3] * x230) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[288] =
    -24000000.0 * refCinv * sc[4] * sc[8] * x1325 - 20000000.0 * sc[0] * x1383 -
    14000000.0 * sc[10] * x1358 - 14000000.0 * sc[11] * x1459 +
    14000000.0 * sc[11] * x1589 + 20000000.0 * sc[1] * x1531 +
    96000000.0 * sc[2] * x1559 - sc[2] * x7488 + 18000.0 * sc[3] * x790 -
    sc[3] * x8321 + 5000000.0 * sc[4] * x1531 - 5000000.0 * sc[5] * x1376 +
    24000000.0 * sc[6] * x1984 - 24000000.0 * sc[6] * x652 + x10099 + x1061 -
    x1063 * x2258 + x1065 * x2258 + x10738 - 18000.0 * x1177 * x1178 + x11811 -
    x1407 * x508 - 1350000000000.0 * x1509 * x788 - x1761 * x2082 -
    x1761 * x2147 - x1761 * x2179 + x1761 * x694 + x1765 * x2082 +
    x1765 * x2147 + x1765 * x2179 - x1765 * x694 + x1879 * x373 - x1894 * x373 -
    x1984 * x2271 - x2254 * x645 + x2271 * x652 + x2367 * x508 -
    96000000.0 * x324 * x512 - x375 * x435 -
    94600000.0 * x518 * exp(259.15658288943098 * invT) + x6642 -
    5070000000000000.0 * x703 * x788 + x9531 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1407 - x2367) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-18000.0 * sc[3] * x230) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[311] =
    14000000.0 * sc[11] * x884 - 14000000.0 * sc[11] * x890 +
    96000000.0 * sc[2] * x1989 + 24000000.0 * sc[6] * x1989 + x1050 * x508 -
    x1068 * x2258 + x1069 * x2258 + x10762 + x11818 + x1386 * x2324 + x1430 -
    x1830 * x2082 - x1830 * x2147 - x1830 * x2179 - x1830 * x2325 +
    x1830 * x694 + x1831 * x2082 + x1831 * x2147 + x1831 * x2179 +
    x1831 * x2325 - x1831 * x694 + x1896 * x373 - x1901 * x373 - x1996 * x2271 +
    x1998 * x2271 - x508 * x754 + x9563 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x1050 + x754) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-18000.0 * sc[3] * x230) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[334] =
    -14000000.0 * sc[11] * x1648 + 14000000.0 * sc[11] * x898 +
    96000000.0 * sc[2] * x553 + 0.384 * sc[2] * exp(x943) + x10267 -
    x1036 * x508 + x105 - x1070 * x2258 + x11818 + x1386 * x2324 -
    x1834 * x2082 - x1834 * x2147 - x1834 * x2179 - x1834 * x2325 +
    x1834 * x694 + x1835 * x2082 + x1835 * x2147 + x1835 * x2179 +
    x1835 * x2325 - x1835 * x694 - x1901 * x373 + x1998 * x2271 + x2258 * x668 -
    x2271 * x909 + x373 * x566 + x508 * x622 + x9605 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1036 - x622) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-18000.0 * sc[3] * x230) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[357] =
    14000000.0 * sc[11] * x1666 - 14000000.0 * sc[11] * x1671 +
    96000000.0 * sc[2] * x1724 + x10314 - x1059 * x2271 - x1074 * x2258 +
    x1077 * x2258 + x11818 - x1297 * x508 + x130 * x508 + x1386 * x2324 +
    x1683 - x1823 * x373 - x1838 * x2082 - x1838 * x2147 - x1838 * x2179 -
    x1838 * x2325 + x1838 * x694 + x1842 * x2082 + x1842 * x2147 +
    x1842 * x2179 + x1842 * x2325 - x1842 * x694 + x1908 * x373 + x2271 * x600 +
    x9644 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1297 - x130) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-18000.0 * sc[3] * x230) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[380] =
    14000000.0 * sc[11] * x1677 + x10160 - x1078 * x2258 + x1081 * x2258 +
    x10848 + x11680 + x11824 + x169 * x373 + x1848 * x2082 + x1848 * x2147 +
    x1848 * x2179 + x1848 * x2325 + x1848 * x2358 - x1848 * x694 + x504 * x508 -
    x508 * x846 + x8045 + x8725 + x896 + x9674 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x504 + x846) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-18000.0 * sc[3] * x230) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[403] =
    14000000.0 * sc[11] * x1689 + sc[1] * x458 + 10000000.0 * sc[2] * x1893 +
    18000.0 * sc[3] * x1494 + 20000000.0 * sc[4] * x1082 +
    30000000.0 * sc[4] * x1689 + 20000000.0 * sc[6] * x1082 + x10160 -
    x1082 * x2258 + x10848 + x11680 + x11824 + x11826 + x1507 * x1850 -
    x1789 * x2188 + x1850 * x2024 + x1850 * x2082 + x1850 * x2147 +
    x1850 * x2179 + x1850 * x2325 + x1850 * x2358 - x1850 * x694 +
    x1892 * x373 - x1892 * x556 - x508 * x849 + x8045 + x849 * x954 + x8725 +
    x9671 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x1080 + x849) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-18000.0 * sc[3] * x230) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[426] =
    14000000.0 * sc[11] * x1692 + 10000000.0 * sc[2] * x1893 +
    16040000.0 * sc[2] * x1898 + 18000.0 * sc[3] * x191 +
    20000000.0 * sc[4] * x1085 + 30000000.0 * sc[4] * x1692 +
    20000000.0 * sc[6] * x1085 + 24000000.0 * sc[6] * x1898 + x10160 + x10847 -
    x1085 * x2258 + x11680 + x11821 + x11826 + x1507 * x1855 - x1782 * x508 +
    x1782 * x954 - x1843 * x2082 + x1843 * x694 + x1855 * x2024 +
    x1855 * x2082 + x1855 * x2147 + x1855 * x2179 + x1855 * x2325 +
    x1855 * x2358 - x1855 * x694 + x1888 * x373 - x1888 * x556 - x1898 * x2188 -
    x1898 * x2271 + x8045 + x8725 + x9671 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x1080 + x1782) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-18000.0 * sc[3] * x230) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[449] =
    -14000000.0 * sc[11] * x1720 + 14000000.0 * sc[11] * x184 - x1033 * x508 -
    x1086 * x2258 + x1087 * x2258 + x10917 + x11821 + x1369 - x1825 * x2082 -
    x1825 * x2147 - x1825 * x2179 - x1825 * x2325 + x1825 * x694 +
    x1827 * x2082 + x1827 * x2147 + x1827 * x2179 + x1827 * x2325 -
    x1827 * x694 + x1893 * x2324 + x1900 * x373 - x1959 * x2271 + x508 * x971 +
    x6154 + x9275 + x9770 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x1033 - x971) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-18000.0 * sc[3] * x230) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[472] =
    14000000.0 * sc[11] * x1730 + 20000000.0 * sc[1] * x1893 +
    96000000.0 * sc[2] * x1283 + 16040000.0 * sc[2] * x557 +
    20000000.0 * sc[4] * x1090 + 30000000.0 * sc[4] * x1730 +
    24000000.0 * sc[6] * x557 + x10160 + x10847 - x1090 * x2258 + x11680 +
    x11811 + x11826 + x1364 * x2271 + x1832 * x2024 + x1832 * x2082 +
    x1832 * x2147 + x1832 * x2179 + x1832 * x2325 + x1832 * x2358 -
    x1832 * x694 - x1843 * x2082 + x1843 * x694 - x1845 * x373 + x1943 * x373 -
    x2271 * x557 - x508 * x929 + x8045 + x8725 + x9287 + x929 * x954 + x9797 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (-x1080 + x929) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-18000.0 * sc[3] * x230) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[495] =
    14000000.0 * sc[11] * x1631 - 14000000.0 * sc[11] * x1670 + x10160 +
    x10848 - x1099 * x2258 + x1104 * x2258 + x11824 + x1846 * x2082 +
    x1846 * x2147 + x1846 * x2179 + x1846 * x2325 + x1846 * x2358 -
    x1846 * x694 + x1944 * x373 - x508 * x568 + x508 * x892 + x7310 + x8045 +
    x8725 + x9814 +
    (14000000.0 * sc[11] * x675 + 20000000.0 * sc[4] * x674 +
     30000000.0 * sc[4] * x675 + 20000000.0 * sc[6] * x674 + x1507 * x677 +
     x2024 * x677 + x2082 * x677 + x2147 * x677 + x2179 * x677 - x2258 * x674 +
     x2325 * x677 + x2358 * x677 - x373 * x680 + x556 * x680 - x677 * x694) *
      (x568 - x892) +
    (14000000.0 * sc[11] * x676 + 30000000.0 * sc[4] * x676 + x1507 * x678 +
     x2024 * x678 + x2082 * x678 + x2147 * x678 + x2179 * x678 + x2325 * x678 +
     x2358 * x678 + x373 * x681 - x556 * x681 - x678 * x694) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-18000.0 * sc[3] * x230) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-96000000.0 * sc[2] * x555 - 24000000.0 * sc[6] * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-20000000.0 * sc[1] * x642 - 16040000.0 * sc[2] * x603 -
     10000000.0 * sc[2] * x642 - 5000000.0 * sc[4] * x642 -
     24000000.0 * sc[6] * x603 + x1507 * x679 + x2024 * x679 + x2082 * x679 -
     x2124 * x642 + x2147 * x679 + x2179 * x679 + x2188 * x603 + x2271 * x603 -
     x2324 * x642 + x2325 * x679 + x2358 * x679 - x679 * x694) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-16040000.0 * sc[2] * x561 - 18000.0 * sc[3] * x437 -
     24000000.0 * sc[6] * x561 + x2188 * x561 + x2271 * x561 + x373 * x682 -
     x556 * x682) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[13] =
    -30000000.0 * sc[13] * x1124 - 32000000.0 * sc[13] * x1456 -
    50000000.0 * sc[16] * x1465 + 50000000.0 * sc[16] * x972 +
    30000000.0 * sc[1] * x760 + 100000000.0 * sc[1] * x819 -
    30000000.0 * sc[1] * x823 + 30110000.0 * sc[4] * x760 -
    30110000.0 * sc[4] * x823 + 392000.0 * sc[8] * x760 -
    392000.0 * sc[8] * x823 + x1001 * x819 + x11839 + x2071 * x760 -
    x2071 * x823 + x2256 * x760 - x2256 * x823 + x34 + x644 * x732 -
    x732 * x855 - 10.0 * x744 * x827 + 10.0 * x744 * x961 + x747 * x760 -
    x747 * x823 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x1465 + x972) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[36] =
    -100000000.0 * sc[13] * x1167 + 50000000.0 * sc[16] * x1649 -
    50000000.0 * sc[16] * x1694 + sc[16] * x2106 + sc[17] * x2174 +
    30000000.0 * sc[1] * x1030 - 30000000.0 * sc[1] * x1508 +
    100000000.0 * sc[1] * x1637 + 30110000.0 * sc[4] * x1030 -
    30110000.0 * sc[4] * x1508 + 392000.0 * sc[8] * x1030 -
    392000.0 * sc[8] * x1508 + x1001 * x1637 + x1030 * x2256 + x1030 * x747 -
    10.0 * x1064 * x744 - 100000000.0 * x1176 + x11841 - x1508 * x2256 -
    x1508 * x747 + x1970 + x2189 + 30000000.0 * x233 - 100000000.0 * x564 +
    x732 * x893 - x732 * x899 + 10.0 * x744 * x969 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1649 - x1694) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[59] =
    -20.4 * sc[13] * exp(x2138) + 50000000.0 * sc[16] * x1772 -
    50000000.0 * sc[16] * x1785 + 30000000.0 * sc[1] * x1639 -
    30000000.0 * sc[1] * x1643 + 100000000.0 * sc[1] * x1709 +
    30110000.0 * sc[4] * x1639 - 30110000.0 * sc[4] * x1643 +
    392000.0 * sc[8] * x1639 - 392000.0 * sc[8] * x1643 + x1001 * x1709 +
    x11841 + x1639 * x2071 + x1639 * x2256 + x1639 * x747 -
    10.0 * x1640 * x744 - x1643 * x2071 - x1643 * x2256 - x1643 * x747 + x1970 +
    10.0 * x718 * x744 + x732 * x970 - x732 * x973 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1772 - x1785) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[82] =
    50000000.0 * sc[16] * x1822 - 50000000.0 * sc[16] * x1852 +
    30000000.0 * sc[1] * x1673 - 30000000.0 * sc[1] * x1685 +
    100000000.0 * sc[1] * x1744 + 30110000.0 * sc[4] * x1673 -
    30110000.0 * sc[4] * x1685 + 392000.0 * sc[8] * x1673 -
    392000.0 * sc[8] * x1685 + x1001 * x1744 + x11841 + 10.0 * x1661 * x744 -
    10.0 * x1662 * x744 + x1673 * x2071 + x1673 * x2256 + x1673 * x747 -
    x1685 * x2071 - x1685 * x2256 - x1685 * x747 + x1970 + x2255 * x233 +
    x732 * x977 - x732 * x978 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1822 - x1852) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[105] =
    -sc[13] * x5835 - sc[13] * x9093 + 50000000.0 * sc[16] * x1875 -
    50000000.0 * sc[16] * x1903 - 30000000.0 * sc[1] * x1680 +
    30000000.0 * sc[1] * x1710 + 100000000.0 * sc[1] * x1774 -
    30110000.0 * sc[4] * x1680 + 30110000.0 * sc[4] * x1710 -
    392000.0 * sc[8] * x1680 + 392000.0 * sc[8] * x1710 + x1001 * x1774 +
    x11841 - x1680 * x2071 - x1680 * x2256 - x1680 * x747 +
    10.0 * x1687 * x744 + x1710 * x2071 + x1710 * x2256 + x1710 * x747 + x1970 +
    30110000.0 * x233 - 10.0 * x345 * x744 + x732 * x980 - x732 * x981 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1875 - x1903) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[128] =
    -30110000.0 * sc[13] * x1145 - 14700000000.0 * sc[13] * exp(x994) / x24 +
    50000000.0 * sc[16] * x1946 - 50000000.0 * sc[16] * x1986 +
    30000000.0 * sc[1] * x1748 - 30000000.0 * sc[1] * x1756 +
    100000000.0 * sc[1] * x1840 + 30110000.0 * sc[4] * x1748 -
    30110000.0 * sc[4] * x1756 + 392000.0 * sc[8] * x1748 -
    392000.0 * sc[8] * x1756 + x1001 * x1840 + x10349 - 45018.75 * x11831 +
    45018.75 * x11836 + 10.0 * x1669 * x744 + x1748 * x2256 + x1748 * x747 -
    10.0 * x1751 * x744 - x1756 * x2256 - x1756 * x747 + x5967 + x732 * x989 -
    x732 * x990 + 14700000000.0 * x607 * exp(x23 + x994) / x24 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1946 - x1986) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[151] =
    -sc[13] * x114 + 50000000.0 * sc[16] * x2026 - 50000000.0 * sc[16] * x2051 -
    30000000.0 * sc[1] * x1764 + 30000000.0 * sc[1] * x323 -
    30110000.0 * sc[4] * x1764 + 30110000.0 * sc[4] * x323 -
    392000.0 * sc[8] * x1764 + 392000.0 * sc[8] * x323 + x1008 * x732 -
    x1010 * x732 + x11845 + 10.0 * x1760 * x744 - 10.0 * x1762 * x744 -
    x1764 * x2071 - x1764 * x2256 - x1764 * x747 + x2071 * x323 + x2256 * x323 +
    x323 * x747 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x2026 - x2051) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[174] =
    50000000.0 * sc[16] * x2093 - 50000000.0 * sc[16] * x2104 -
    30000000.0 * sc[1] * x1773 + 30000000.0 * sc[1] * x225 +
    100000000.0 * sc[1] * x411 - 30110000.0 * sc[4] * x1773 +
    30110000.0 * sc[4] * x225 - 392000.0 * sc[8] * x1773 +
    392000.0 * sc[8] * x225 + x1001 * x411 + x1011 * x732 - x1013 * x732 +
    x11841 + 10.0 * x1768 * x744 - 10.0 * x1769 * x744 - x1773 * x2071 -
    x1773 * x2256 - x1773 * x747 + x1970 + x2071 * x225 + x225 * x2256 +
    x225 * x747 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x2093 - x2104) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[197] =
    sc[10] * x9305 + 50000000.0 * sc[16] * x1449 - 50000000.0 * sc[16] * x2150 +
    30000000.0 * sc[1] * x1779 - 30000000.0 * sc[1] * x1784 +
    30110000.0 * sc[4] * x1779 - 30110000.0 * sc[4] * x1784 +
    392000.0 * sc[8] * x1779 - 392000.0 * sc[8] * x1784 + x1017 * x732 -
    x1018 * x732 - x10347 * x16 + x11845 + 10.0 * x1775 * x744 -
    10.0 * x1776 * x744 + x1779 * x2071 + x1779 * x2256 + x1779 * x747 -
    x1784 * x2071 - x1784 * x2256 - x1784 * x747 + 392000.0 * x233 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1449 - x2150) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[220] =
    -392000.0 * sc[13] * x1158 + 50000000.0 * sc[16] * x2145 -
    50000000.0 * sc[16] * x2193 + 30000000.0 * sc[1] * x1821 -
    30000000.0 * sc[1] * x1856 + 100000000.0 * sc[1] * x1994 +
    30110000.0 * sc[4] * x1821 - 30110000.0 * sc[4] * x1856 +
    392000.0 * sc[8] * x1821 - 392000.0 * sc[8] * x1856 + x1001 * x1994 +
    x1019 * x732 - x1020 * x732 + x11839 + 10.0 * x1778 * x744 -
    10.0 * x1780 * x744 + x1821 * x2071 + x1821 * x2256 + x1821 * x747 -
    x1856 * x2071 - x1856 * x2256 - x1856 * x747 + x34 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x2145 - x2193) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[243] =
    -20000000.0 * refCinv * sc[10] * sc[13] * x11449 -
    50000000.0 * sc[13] * x1390 +
    11254.6875 * sc[13] * x22 * exp(x11829) / ((x24) * (x24)) -
    50000000.0 * sc[16] * x2275 + 50000000.0 * sc[16] * x468 +
    30000000.0 * sc[1] * x1836 - 30000000.0 * sc[1] * x1841 +
    100000000.0 * sc[1] * x1974 + 30110000.0 * sc[4] * x1836 -
    30110000.0 * sc[4] * x1841 + 392000.0 * sc[8] * x1836 -
    392000.0 * sc[8] * x1841 + sc[8] * x9305 + x1001 * x1974 + x1023 * x732 -
    x1025 * x732 + x10349 - 3675000000.0 * x11834 + 3675000000.0 * x11838 -
    10.0 * x1678 * x744 + 10.0 * x1797 * x744 + x1836 * x2256 + x1836 * x747 -
    x1841 * x2256 - x1841 * x747 + x2144 * x645 -
    11254.6875 * x22 * x607 * exp(x11829 + x23) / ((x24) * (x24)) +
    x233 * x433 + x6454 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x2275 + x468) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[266] =
    50000000.0 * sc[16] * x1516 - 50000000.0 * sc[16] * x2331 -
    30000000.0 * sc[1] * x1876 + 30000000.0 * sc[1] * x758 +
    100000000.0 * sc[1] * x818 - 30110000.0 * sc[4] * x1876 +
    30110000.0 * sc[4] * x758 - 392000.0 * sc[8] * x1876 +
    392000.0 * sc[8] * x758 + x1001 * x818 + x1027 * x732 - x1031 * x732 +
    x11839 - 10.0 * x1663 * x744 + 10.0 * x1750 * x744 - x1876 * x2071 -
    x1876 * x2256 - x1876 * x747 + x2071 * x758 + x2256 * x758 + x34 +
    x747 * x758 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1516 - x2331) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[289] =
    50000000.0 * sc[16] * x1407 - 50000000.0 * sc[16] * x2367 +
    30000000.0 * sc[1] * x1879 - 30000000.0 * sc[1] * x1894 +
    30110000.0 * sc[4] * x1879 - 30110000.0 * sc[4] * x1894 +
    392000.0 * sc[8] * x1879 - 392000.0 * sc[8] * x1894 + x1063 * x732 -
    x1065 * x732 + x11845 + 10.0 * x1761 * x744 - 10.0 * x1765 * x744 +
    x1879 * x2071 + x1879 * x2256 + x1879 * x747 - x1894 * x2071 -
    x1894 * x2256 - x1894 * x747 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1407 - x2367) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[312] =
    -30000000.0 * sc[0] * x1124 - 32000000.0 * sc[0] * x1456 -
    50000000.0 * sc[10] * x1390 - 50000000.0 * sc[16] * x1050 +
    50000000.0 * sc[16] * x754 - 100000000.0 * sc[1] * x1167 +
    100000000.0 * sc[1] * x1506 + 30000000.0 * sc[1] * x1896 -
    20.4 * sc[2] * exp(x2138) + 30110000.0 * sc[4] * x1896 -
    30110000.0 * sc[4] * x1901 - sc[4] * x5835 - sc[4] * x9093 -
    30110000.0 * sc[5] * x1145 - sc[6] * x114 + 392000.0 * sc[8] * x1896 -
    392000.0 * sc[8] * x1901 - 392000.0 * sc[9] * x1158 + x1001 * x1506 +
    x1068 * x732 - x1069 * x732 - x10739 - 10000000.0 * x11449 * x2100 +
    x11848 + x1412 + 10.0 * x1830 * x744 - 10.0 * x1831 * x744 + x1896 * x2256 +
    x1896 * x747 - x1901 * x2256 - 2450000000.0 * x22 * exp(x994) / x24 -
    10.0 * x435 * exp(-3019.29999482832 * invT + 2.0 * tc[0]) +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x1050 + x754) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[335] =
    50000000.0 * sc[16] * x1036 - 50000000.0 * sc[16] * x622 +
    100000000.0 * sc[1] * x1980 + 30000000.0 * sc[1] * x566 -
    30110000.0 * sc[4] * x1901 + 30110000.0 * sc[4] * x566 -
    392000.0 * sc[8] * x1901 + 392000.0 * sc[8] * x566 + x1001 * x1980 +
    x1070 * x732 + x11848 + 10.0 * x1834 * x744 - 10.0 * x1835 * x744 -
    x1901 * x2071 - x1901 * x2256 + x2071 * x566 + x2256 * x566 + x566 * x747 -
    x668 * x732 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1036 - x622) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[358] =
    50000000.0 * sc[16] * x1297 - 50000000.0 * sc[16] * x130 +
    100000000.0 * sc[1] * x1 - 30000000.0 * sc[1] * x1823 +
    30000000.0 * sc[1] * x1908 - 30110000.0 * sc[4] * x1823 +
    30110000.0 * sc[4] * x1908 - 392000.0 * sc[8] * x1823 +
    392000.0 * sc[8] * x1908 + x1 * x1001 + x10349 + x1074 * x732 -
    x1077 * x732 + x1128 - 22509.375 * x11831 - 7350000000.0 * x11834 +
    22509.375 * x11836 + 7350000000.0 * x11838 - x1823 * x2071 - x1823 * x2256 -
    x1823 * x747 + 10.0 * x1838 * x744 - 10.0 * x1842 * x744 + x1908 * x2071 +
    x1908 * x2256 + x1908 * x747 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1297 - x130) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[381] =
    -50000000.0 * sc[16] * x504 + 50000000.0 * sc[16] * x846 +
    20000000.0 * sc[16] + 30000000.0 * sc[1] * x169 + sc[1] * x2106 +
    30110000.0 * sc[4] * x169 + 392000.0 * sc[8] * x169 + x10165 +
    x1078 * x732 - x1081 * x732 + x11007 + x11845 + x11850 + x169 * x2071 +
    x169 * x2256 + x169 * x747 - 10.0 * x1848 * x744 + x2039 +
    50000000.0 * x518 + x9879 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x504 + x846) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[404] =
    50000000.0 * sc[16] * x849 + 30000000.0 * sc[1] * x1892 + sc[1] * x2174 +
    100000000.0 * sc[1] * x598 + 30110000.0 * sc[4] * x1892 +
    392000.0 * sc[8] * x1892 + x1001 * x598 + x10165 + x1082 * x732 + x11007 +
    x11708 + x11841 + x11850 - 10.0 * x1850 * x744 + x1892 * x2071 +
    x1892 * x2256 + x1892 * x747 + x1970 + x2039 + x8066 + x9879 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x1080 + x849) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[427] =
    50000000.0 * sc[16] * x1782 + 30000000.0 * sc[1] * x1888 +
    30110000.0 * sc[4] * x1888 + 392000.0 * sc[8] * x1888 + x10165 +
    x1085 * x732 + x11007 + x11708 + x11845 + x11850 - 10.0 * x1855 * x744 +
    x1888 * x2071 + x1888 * x2256 + x1888 * x747 + x2039 + x8066 + x9879 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x1080 + x1782) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[450] =
    50000000.0 * sc[16] * x1033 - 50000000.0 * sc[16] * x971 -
    30000000.0 * sc[1] * x1845 + 30000000.0 * sc[1] * x1900 +
    100000000.0 * sc[1] * x63 + 30110000.0 * sc[4] * x1900 +
    392000.0 * sc[8] * x1900 + x1001 * x63 + x10165 + x10292 * x16 +
    x1086 * x732 - x1087 * x732 + x11007 + x11841 + 10.0 * x1825 * x744 -
    10.0 * x1827 * x744 - x1845 * x747 + x1900 * x2071 + x1900 * x2256 +
    x1900 * x747 + x1970 + x2039 + x9879 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x1033 - x971) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[473] =
    50000000.0 * sc[16] * x929 + 30000000.0 * sc[1] * x1943 +
    30110000.0 * sc[4] * x1943 + 392000.0 * sc[8] * x1943 + x10165 +
    x1090 * x732 + x11007 + x11708 + x11845 + x11850 - 10.0 * x1832 * x744 +
    x1943 * x2071 + x1943 * x2256 + x1943 * x747 + x2039 + x8066 + x9879 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (-x1080 + x929) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[496] =
    50000000.0 * sc[16] * x568 - 50000000.0 * sc[16] * x892 +
    30000000.0 * sc[1] * x1944 + 30110000.0 * sc[4] * x1944 +
    392000.0 * sc[8] * x1944 + x10165 + x1099 * x732 + x11007 - x1104 * x732 +
    x11845 + x11850 - 10.0 * x1846 * x744 + x1944 * x2071 + x1944 * x2256 +
    x1944 * x747 + x2039 + x9879 +
    (-30000000.0 * sc[1] * x680 - 30110000.0 * sc[4] * x680 -
     392000.0 * sc[8] * x680 - x2071 * x680 - x2256 * x680 + x674 * x732 -
     10.0 * x677 * x744 - x680 * x747) *
      (x568 - x892) +
    (-100000000.0 * sc[1] * x658 + 30000000.0 * sc[1] * x681 +
     30110000.0 * sc[4] * x681 + 392000.0 * sc[8] * x681 - x1001 * x658 +
     x2071 * x681 + x2256 * x681 - 10.0 * x678 * x744 + x681 * x747) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-100000000.0 * sc[1] * x65 - x1001 * x65) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-100000000.0 * sc[1] * x599 - x1001 * x599 - 10.0 * x679 * x744) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (30000000.0 * sc[1] * x682 + 30110000.0 * sc[4] * x682 +
     392000.0 * sc[8] * x682 + x2071 * x682 + x2256 * x682 + x682 * x747) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[14] =
    7.0e+44 * refCinv * x2046 * x40 * x607 + 100000000.0 * sc[14] * x1014 -
    2000000.0 * sc[14] * x1310 - 100000000.0 * sc[14] * x987 +
    2000000.0 * sc[1] * x927 - 2000000.0 * sc[1] * x956 +
    20000.0 * sc[3] * x927 - 20000.0 * sc[3] * x956 + x110 * x520 +
    x1470 * x760 - x1470 * x823 + x1793 + x2047 * x819 + x2087 + x2089 * x760 -
    x2089 * x823 - x2112 * x644 + x2112 * x855 + x2268 * x760 - x2268 * x823 +
    x2328 * x760 - x2328 * x823 + x2329 * x760 - x2329 * x823 + x637 * x927 -
    x637 * x956 + x728 * x819 + x7365 - 10.0 * x757 * x827 +
    10.0 * x757 * x961 + x8199 + x936 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x1465 + x972) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-x2047 * x65 - x65 * x728) *
      (x760 - x823 + (-x680) * (-x1465 + x972) +
       (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x682) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-x110 * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[37] =
    -100000000.0 * sc[14] * x1211 + 100000000.0 * sc[14] * x1389 +
    50000000.0 * sc[19] * x1349 + 20000000.0 * sc[19] * x2130 +
    2000000.0 * sc[1] * x1561 - 2000000.0 * sc[1] * x494 + sc[20] * x2136 +
    20000.0 * sc[3] * x1561 - 20000.0 * sc[3] * x494 + x100 + x1030 * x1470 +
    x1030 * x2089 + x1030 * x2268 + x1030 * x2328 + x1030 * x2329 -
    10.0 * x1064 * x757 + x110 * x540 - x1470 * x1508 - x1508 * x2089 -
    x1508 * x2268 - x1508 * x2328 - x1508 * x2329 + x1561 * x637 +
    x1637 * x2047 + x1637 * x728 - x2112 * x893 + x2112 * x899 +
    2000000.0 * x324 + 1.4e+18 * x40 * x762 + x425 - x494 * x637 + x499 +
    x7407 + 10.0 * x757 * x969 + x8228 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1649 - x1694) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-x2047 * x65 - x65 * x728) *
      (x1030 - x1508 + (-x680) * (x1649 - x1694) +
       (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x682) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-x110 * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[60] =
    -100000000.0 * sc[14] * x1419 + 100000000.0 * sc[14] * x1461 +
    2000000.0 * sc[1] * x1660 - 2000000.0 * sc[1] * x1726 +
    20000.0 * sc[3] * x1660 - 20000.0 * sc[3] * x1726 + x110 * x1208 +
    x1470 * x1639 - x1470 * x1643 + x1639 * x2089 + x1639 * x2268 +
    x1639 * x2328 + x1639 * x2329 - 10.0 * x1640 * x757 - x1643 * x2089 -
    x1643 * x2268 - x1643 * x2328 - x1643 * x2329 + x1660 * x637 +
    x1709 * x2047 + x1709 * x728 - x1726 * x637 - x2112 * x970 + x2112 * x973 +
    x425 + x499 + x5673 + 10.0 * x718 * x757 + x7487 + x8255 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1772 - x1785) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-x2047 * x65 - x65 * x728) *
      (x1639 - x1643 + (-x680) * (x1772 - x1785) +
       (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x682) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-x110 * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[83] =
    100000000.0 * sc[14] * x1517 - sc[14] * x8316 -
    100000000.0 * sc[14] * x854 + 2000000.0 * sc[1] * x1757 -
    2000000.0 * sc[1] * x1759 + x110 * x1658 + x1470 * x1673 - x1470 * x1685 +
    10.0 * x1661 * x757 - 10.0 * x1662 * x757 + x1673 * x2089 + x1673 * x2328 +
    x1673 * x2329 - x1685 * x2089 - x1685 * x2328 - x1685 * x2329 +
    x1744 * x2047 + x1744 * x728 + x1757 * x637 - x1759 * x637 - x2112 * x977 +
    x2112 * x978 + x425 + x499 + x5748 + x7540 + x8312 + x9950 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1822 - x1852) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-x2047 * x65 - x65 * x728) *
      (x1673 - x1685 + (-x680) * (x1822 - x1852) +
       (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x682) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-x110 * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[106] =
    -100000000.0 * sc[14] * x1519 + 100000000.0 * sc[14] * x1521 -
    sc[14] * x9097 + 2000000.0 * sc[1] * x1790 - 2000000.0 * sc[1] * x1824 +
    x110 * x182 - x1470 * x1680 + x1470 * x1710 - x1680 * x2089 -
    x1680 * x2328 - x1680 * x2329 + 10.0 * x1687 * x757 + x1710 * x2089 +
    x1710 * x2328 + x1710 * x2329 + x1774 * x2047 + x1774 * x728 +
    x1790 * x637 - x1824 * x637 - x2112 * x980 + x2112 * x981 -
    10.0 * x345 * x757 + x425 + x499 + x5847 + x7594 + x8364 + x9964 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1875 - x1903) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-x110 * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[129] =
    -4.2e+45 * sc[14] * x1388 + 1.4e+18 * sc[14] * x142 * x382 * x788 -
    100000000.0 * sc[14] * x1523 + 100000000.0 * sc[14] * x1533 +
    2000000.0 * sc[1] * x1829 - 2000000.0 * sc[1] * x1860 +
    8.4e+18 * sc[1] * x762 + 20000.0 * sc[3] * x1829 - 20000.0 * sc[3] * x1860 -
    x1076 * x43 * (1.68 * x671 * x691 + 12.0 * x672 * x691) + x110 * x1897 +
    1.9342105263157899e+30 * x1135 * x286 + 4.2e+45 * x1210 -
    3.675e+77 * x1329 * x33 + 3.675e+77 * x1329 * x427 -
    1.4e+18 * x142 * x762 * x773 - 8.4e+18 * x1468 * x382 + x1470 * x1748 -
    x1470 * x1756 + 10.0 * x1669 * x757 + x1748 * x2089 + x1748 * x2268 +
    x1748 * x2328 + x1748 * x2329 - 10.0 * x1751 * x757 -
    1.9342105263157899e+30 * x1753 * x286 - x1756 * x2089 - x1756 * x2268 -
    x1756 * x2328 - x1756 * x2329 + x1829 * x637 + x1840 * x2047 +
    x1840 * x728 - x1860 * x637 + x2084 - x2112 * x989 + x2112 * x990 +
    x2327 * x233 + x320 * (1.68 * x671 * x691 + 12.0 * x672 * x691) + x7634 +
    x8393 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1946 - x1986) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-x2047 * x65 - x65 * x728) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-x110 * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[152] =
    -100000000.0 * sc[14] * x1534 + 100000000.0 * sc[14] * x1535 +
    2000000.0 * sc[1] * x1881 - 2000000.0 * sc[1] * x1885 - x1008 * x2112 +
    x1010 * x2112 + x1057 + x110 * x1953 - x1470 * x1764 + x1470 * x323 +
    10.0 * x1760 * x757 - 10.0 * x1762 * x757 - x1764 * x2089 - x1764 * x2328 -
    x1764 * x2329 + x1881 * x637 - x1885 * x637 + x2089 * x323 + x2328 * x323 +
    x2329 * x323 + x233 * x753 + x425 + x6073 + x7672 + x8429 + x9998 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x2026 - x2051) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-x110 * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[175] =
    refC * x1989 * x92 - 300000.0 * sc[14] * x1304 -
    100000000.0 * sc[14] * x1563 + 100000000.0 * sc[14] * x1573 +
    2000000.0 * sc[1] * x1911 - 2000000.0 * sc[1] * x1951 + x10028 -
    x1011 * x2112 + x1013 * x2112 + x1057 - x1470 * x1773 + x1470 * x225 +
    10.0 * x1768 * x757 - 10.0 * x1769 * x757 - x1773 * x2089 - x1773 * x2328 -
    x1773 * x2329 + x1911 * x637 - x1951 * x637 + x2089 * x225 + x225 * x2328 +
    x225 * x2329 + x425 + x6153 + x7714 + x8458 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x2093 - x2104) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-x110 * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[198] =
    -100000000.0 * sc[14] * x1574 + 100000000.0 * sc[14] * x1575 +
    50000000.0 * sc[16] + 2000000.0 * sc[1] * x1954 -
    2000000.0 * sc[1] * x1957 + 20000.0 * sc[3] * x1954 -
    20000.0 * sc[3] * x1957 - x1017 * x2112 + x1018 * x2112 + x1057 + x10603 +
    x1470 * x1779 - x1470 * x1784 + 10.0 * x1775 * x757 - 10.0 * x1776 * x757 +
    x1779 * x2089 + x1779 * x2268 + x1779 * x2328 - x1784 * x2089 -
    x1784 * x2268 - x1784 * x2328 + x1954 * x637 - x1957 * x637 + x425 + x6251 +
    x7755 + x8496 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1449 - x2150) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-x2047 * x65 - x65 * x728) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-x110 * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[221] =
    -100000000.0 * sc[14] * x796 + 100000000.0 * sc[14] * x986 +
    2000000.0 * sc[1] * x1960 - 2000000.0 * sc[1] * x1966 +
    20000.0 * sc[3] * x1960 - 20000.0 * sc[3] * x1966 - x1019 * x2112 +
    x1020 * x2112 + x110 * x2003 + 50000000.0 * x12 * x607 + x1470 * x1821 -
    x1470 * x1856 + 10.0 * x1778 * x757 - 10.0 * x1780 * x757 + x1793 +
    x1821 * x2089 + x1821 * x2268 + x1821 * x2328 + x1821 * x2329 -
    x1856 * x2089 - x1856 * x2268 - x1856 * x2328 - x1856 * x2329 +
    x1960 * x637 - x1966 * x637 + x1994 * x2047 + x1994 * x728 + x2087 +
    x233 * x76 + x6328 + x7793 + x8525 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x2145 - x2193) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-x2047 * x65 - x65 * x728) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-x110 * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[244] =
    -sc[14] * x10646 - 90330000.0 * sc[14] * x1108 - 1.05e+45 * sc[14] * x1388 -
    100000000.0 * sc[14] * x1584 + 100000000.0 * sc[14] * x1586 +
    2000000.0 * sc[1] * x1971 - 2000000.0 * sc[1] * x1973 +
    2.1e+18 * sc[1] * x762 + 20000.0 * sc[3] * x1971 - 20000.0 * sc[3] * x1973 -
    x1023 * x2112 + x1025 * x2112 -
    x1076 * x43 * (0.42 * x671 * x691 + 3.0 * x672 * x691) + x110 * x1981 +
    4.8355263157894698e+29 * x1135 * x286 + 1.05e+45 * x1210 -
    9.1875e+76 * x1329 * x33 + 9.1875e+76 * x1329 * x427 -
    2.1e+18 * x1468 * x382 + x1470 * x1836 - x1470 * x1841 -
    10.0 * x1678 * x757 - 4.8355263157894698e+29 * x1753 * x286 +
    10.0 * x1797 * x757 + x1836 * x2089 + x1836 * x2268 + x1836 * x2328 +
    x1836 * x2329 - x1841 * x2089 - x1841 * x2268 - x1841 * x2328 -
    x1841 * x2329 + x1971 * x637 - x1973 * x637 + x1974 * x2047 + x1974 * x728 +
    x320 * (0.42 * x671 * x691 + 3.0 * x672 * x691) + x324 * x912 + x476 -
    x6380 * x795 + x6380 * x900 + x7837 + x8559 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x2275 + x468) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-x2047 * x65 - x65 * x728) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-x110 * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[267] =
    -100000000.0 * sc[14] * x1587 + 100000000.0 * sc[14] * x1588 -
    2000000.0 * sc[1] * x1983 + 2000000.0 * sc[1] * x926 -
    20000.0 * sc[3] * x1983 + 20000.0 * sc[3] * x926 - x1027 * x2112 +
    x1031 * x2112 + x110 * x951 - x1470 * x1876 + x1470 * x758 -
    10.0 * x1663 * x757 + 10.0 * x1750 * x757 + x1793 - x1876 * x2089 -
    x1876 * x2268 - x1876 * x2328 - x1876 * x2329 - x1983 * x637 +
    x2047 * x818 + x2089 * x758 + x2268 * x758 + x2328 * x758 + x2329 * x758 +
    x637 * x926 + x6555 + x728 * x818 + x7875 + x8586 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1516 - x2331) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-x110 * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[290] =
    100000000.0 * sc[14] * x1459 - 100000000.0 * sc[14] * x1589 +
    2000000.0 * sc[1] * x1984 - 2000000.0 * sc[1] * x652 +
    20000.0 * sc[3] * x1984 - 20000.0 * sc[3] * x652 + x1057 - x1063 * x2112 +
    x1065 * x2112 + x110 * x1559 + x1470 * x1879 - x1470 * x1894 +
    10.0 * x1761 * x757 - 10.0 * x1765 * x757 + x1879 * x2089 + x1879 * x2268 +
    x1879 * x2328 + x1879 * x2329 - x1894 * x2089 - x1894 * x2268 -
    x1894 * x2328 - x1894 * x2329 + x1984 * x637 + x425 - x637 * x652 + x6627 +
    x7914 + x8613 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1407 - x2367) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-x2047 * x65 - x65 * x728) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-x110 * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[313] =
    refC * x1989 * x92 - 100000000.0 * sc[14] * x884 +
    100000000.0 * sc[14] * x890 + 2000000.0 * sc[1] * x1996 -
    2000000.0 * sc[1] * x1998 + 20000.0 * sc[3] * x1996 + x10114 -
    x1068 * x2112 + x1069 * x2112 + x1470 * x1896 - x1470 * x1901 +
    x1506 * x2047 + x1506 * x728 + 10.0 * x1830 * x757 - 10.0 * x1831 * x757 +
    x1896 * x2089 + x1896 * x2268 + x1896 * x2328 + x1896 * x2329 -
    x1901 * x2089 - x1901 * x2261 - x1901 * x2328 - x1901 * x2329 +
    x1996 * x637 - x1998 * x637 + x2131 + x7955 + x8641 + x946 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x1050 + x754) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-x2047 * x65 - x65 * x728) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-x110 * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[336] =
    -2000000.0 * sc[0] * x1310 - sc[10] * x10646 - 90330000.0 * sc[10] * x1108 +
    100000000.0 * sc[14] * x1648 - 100000000.0 * sc[14] * x898 -
    2000000.0 * sc[1] * x1998 + 2000000.0 * sc[1] * x909 - sc[3] * x8316 -
    sc[4] * x9097 - 300000.0 * sc[7] * x1304 + x10130 + x10269 - x1070 * x2112 -
    7.0e+44 * x1388 * x40 - x1470 * x1901 + x1470 * x566 + 10.0 * x1834 * x757 -
    10.0 * x1835 * x757 - x1901 * x2089 - x1901 * x2261 - x1901 * x2328 +
    x1980 * x2047 + x1980 * x728 - x1998 * x637 + x2089 * x566 + x2112 * x668 +
    x2328 * x566 - 1.4e+18 * x382 * x788 -
    10.0 * x435 * exp(-4025.7333264377598 * invT + 2.0 * tc[0]) -
    100000000.0 * x597 + x637 * x909 -
    20000000.0 * x645 * exp(-3019.29999482832 * invT) + x7984 + x8665 + x946 +
    x983 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1036 - x622) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-x110 * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[359] =
    -100000000.0 * sc[14] * x1666 + 100000000.0 * sc[14] * x1671 +
    2000000.0 * sc[1] * x1059 - 2000000.0 * sc[1] * x600 +
    20000.0 * sc[3] * x1059 - 20000.0 * sc[3] * x600 + x1 * x2047 + x1 * x728 +
    x1059 * x637 - x1074 * x2112 + x1077 * x2112 + x110 * x1724 -
    x1470 * x1823 + x1470 * x1908 + x1554 - x1823 * x2089 - x1823 * x2268 -
    x1823 * x2328 - x1823 * x2329 + 10.0 * x1838 * x757 - 10.0 * x1842 * x757 +
    x1908 * x2089 + x1908 * x2268 + x1908 * x2328 + x1908 * x2329 -
    x600 * x637 + x8016 + x8691 + x946 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1297 - x130) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-x110 * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[382] =
    -100000000.0 * sc[14] * x1677 + 100000000.0 * sc[14] * x1681 +
    2000000.0 * sc[1] * x1789 + 50000000.0 * sc[8] + x10156 + x1057 -
    x1078 * x2112 + x1078 * x2258 + x1081 * x2112 - x1081 * x2258 + x10871 +
    x1155 + x11864 + x1470 * x169 + x169 * x2089 + x169 * x2261 + x169 * x2268 +
    x169 * x2328 + x169 * x2329 + x1789 * x637 + 10.0 * x1843 * x757 +
    x1848 * x2253 - 10.0 * x1848 * x757 + x1886 + x228 + x8055 + x8730 + x9653 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x504 + x846) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-x2047 * x65 - x65 * x728) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-x110 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[405] =
    100000000.0 * sc[14] * x1681 - 100000000.0 * sc[14] * x1689 +
    2000000.0 * sc[1] * x1789 + 40000000.0 * sc[8] * x1082 +
    60000000.0 * sc[9] * x849 + x10156 - x1082 * x2112 + x1082 * x2258 +
    x1083 * x2112 + x10871 + x1155 + x11864 + x1470 * x1892 + x1689 * x2091 +
    x1789 * x637 + 10.0 * x1843 * x757 + x1850 * x2253 - 10.0 * x1850 * x757 +
    x1892 * x2031 + x1892 * x2089 + x1892 * x2261 + x1892 * x2268 +
    x1892 * x2328 + x1892 * x2329 + x2047 * x598 + x228 + x470 + x499 +
    x598 * x728 + x8081 + x8730 + x9653 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x1080 + x849) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-x110 * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[428] =
    100000000.0 * sc[14] * x1681 - 100000000.0 * sc[14] * x1692 +
    2000000.0 * sc[1] * x1898 + 20000.0 * sc[3] * x1898 + sc[4] * x9026 +
    300000.0 * sc[6] * x1898 + 40000000.0 * sc[8] * x1085 +
    60000000.0 * sc[9] * x1782 + x10155 + x1057 + x1083 * x2112 -
    x1085 * x2112 + x1085 * x2258 + x10871 + x1155 + x1175 + x11864 +
    x1470 * x1888 - x1681 * x2091 + x1692 * x2091 + 10.0 * x1843 * x757 +
    x1855 * x2253 - 10.0 * x1855 * x757 + x1888 * x2031 + x1888 * x2089 +
    x1888 * x2261 + x1888 * x2268 + x1888 * x2328 + x1888 * x2329 +
    x1898 * x2132 + x1898 * x637 + x470 + x8081 + x8727 + x8728 + x9653 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x1080 + x1782) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-x110 * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[451] =
    100000000.0 * sc[14] * x1720 - 100000000.0 * sc[14] * x184 +
    50000000.0 * sc[1] * x1349 + 2000000.0 * sc[1] * x1959 +
    20000000.0 * sc[1] * x2130 + 20000.0 * sc[3] * x1959 +
    300000.0 * sc[6] * x1959 + x10155 - x1086 * x2112 + x1087 * x2112 + x10871 +
    x1155 + x11864 + x1289 + x1470 * x1900 + 10.0 * x1825 * x757 -
    10.0 * x1827 * x757 + x1900 * x2089 + x1900 * x2268 + x1900 * x2328 +
    x1900 * x2329 + x1959 * x637 + x2047 * x63 + x499 + x63 * x728 + x8136 +
    x8727 + x8728 + x9653 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x1033 - x971) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-x110 * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[474] =
    100000000.0 * sc[14] * x1681 - 100000000.0 * sc[14] * x1730 +
    sc[1] * x2136 + 2000000.0 * sc[1] * x557 + 20000.0 * sc[3] * x557 +
    300000.0 * sc[6] * x557 + 40000000.0 * sc[8] * x1090 +
    60000000.0 * sc[9] * x929 + x10155 + x1057 + x1083 * x2112 - x1090 * x2112 +
    x1090 * x2258 + x110 * x1283 + x1155 + x1175 + x11864 + x1470 * x1943 -
    x1681 * x2091 + x1730 * x2091 + x1832 * x2253 - 10.0 * x1832 * x757 +
    10.0 * x1843 * x757 - x1845 * x2329 + x1943 * x2031 + x1943 * x2089 +
    x1943 * x2261 + x1943 * x2268 + x1943 * x2328 + x1943 * x2329 +
    x2132 * x557 + x470 + x557 * x637 + x8081 + x8727 + x8728 + x9653 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (-x1080 + x929) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-x110 * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[497] =
    -100000000.0 * sc[14] * x1631 + 100000000.0 * sc[14] * x1670 +
    2000000.0 * sc[1] * x1789 + x10156 + x1057 + x10871 - x1099 * x2112 +
    x1099 * x2258 + x1104 * x2112 - x1104 * x2258 + x1155 + x11864 +
    x1470 * x1944 + x1789 * x637 + 10.0 * x1843 * x757 + x1846 * x2253 -
    10.0 * x1846 * x757 + x1944 * x2089 + x1944 * x2261 + x1944 * x2268 +
    x1944 * x2328 + x1944 * x2329 + x7303 + x8055 + x8730 + x9653 +
    (-100000000.0 * sc[14] * x675 + 40000000.0 * sc[8] * x674 - x1470 * x680 -
     x2031 * x680 - x2089 * x680 + x2091 * x675 - x2112 * x674 + x2253 * x677 +
     x2258 * x674 - x2261 * x680 - x2268 * x680 - x2328 * x680 - x2329 * x680 -
     10.0 * x677 * x757) *
      (x568 - x892) +
    (-100000000.0 * sc[14] * x676 + x1470 * x681 + x2031 * x681 - x2047 * x658 +
     x2089 * x681 + x2091 * x676 + x2253 * x678 + x2261 * x681 + x2268 * x681 +
     x2328 * x681 + x2329 * x681 - x658 * x728 - 10.0 * x678 * x757) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-x2047 * x65 - x65 * x728) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-x110 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-2000000.0 * sc[1] * x603 - 20000.0 * sc[3] * x603 -
     300000.0 * sc[6] * x603 - x2047 * x599 - x2132 * x603 + x2253 * x679 -
     x599 * x728 - x603 * x637 - 10.0 * x679 * x757) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-2000000.0 * sc[1] * x561 - 20000.0 * sc[3] * x561 -
     300000.0 * sc[6] * x561 + x1470 * x682 + x2031 * x682 + x2089 * x682 -
     x2132 * x561 + x2261 * x682 + x2268 * x682 + x2328 * x682 + x2329 * x682 -
     x561 * x637) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[15] =
    x1014 * x2366 + x1808 * x927 - x1808 * x956 + x2049 * x324 + x2050 * x927 -
    x2050 * x956 + x2142 * x927 - x2142 * x956 + x2270 * x927 - x2270 * x956 +
    x2326 * x927 - x2326 * x956 - x2366 * x987 + x699 * x927 - x699 * x956 +
    x8199 + x826 + x883 * x927 - x883 * x956 +
    (-x2366 * x675) * (-x1465 + x972) +
    (-x2366 * x676) * (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[38] =
    -sc[15] * x868 - x1211 * x2366 + x1389 * x2366 + x1561 * x1808 +
    x1561 * x2050 + x1561 * x2142 + x1561 * x2270 + x1561 * x2326 +
    x1561 * x699 + x1561 * x883 - x1808 * x494 - x2050 * x494 +
    1.99e+29 * x2139 * x324 * x40 - x2142 * x494 - x2270 * x494 - x2326 * x494 -
    x494 * x699 - x494 * x883 + x8228 + x857 +
    (-x2366 * x675) * (x1649 - x1694) +
    (-x2366 * x676) * (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[61] =
    -sc[15] * x7459 - x1419 * x2366 + x1461 * x2366 + x1660 * x1808 +
    x1660 * x2050 + x1660 * x2142 + x1660 * x2270 + x1660 * x2326 +
    x1660 * x699 + x1660 * x883 - x1726 * x1808 - x1726 * x2050 -
    x1726 * x2142 - x1726 * x2270 - x1726 * x2326 - x1726 * x699 -
    x1726 * x883 + x8255 + x857 + (-x2366 * x675) * (x1772 - x1785) +
    (-x2366 * x676) * (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[84] =
    -300000.0 * sc[15] * x1321 + x1517 * x2366 + x1757 * x1808 + x1757 * x2050 +
    x1757 * x2142 + x1757 * x2270 + x1757 * x2326 + x1757 * x699 +
    x1757 * x883 - x1759 * x1808 - x1759 * x2050 - x1759 * x2142 -
    x1759 * x2270 - x1759 * x2326 - x1759 * x699 - x1759 * x883 - x2366 * x854 +
    x8312 + x857 + (-x2366 * x675) * (x1822 - x1852) +
    (-x2366 * x676) * (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[107] =
    -sc[15] * x9086 - x1519 * x2366 + x1521 * x2366 + x1790 * x1808 +
    x1790 * x2050 + x1790 * x2142 + x1790 * x2270 + x1790 * x2326 +
    x1790 * x699 + x1790 * x883 - x1808 * x1824 - x1824 * x2050 -
    x1824 * x2142 - x1824 * x2270 - x1824 * x2326 - x1824 * x699 -
    x1824 * x883 + x2262 * x324 + x8364 + x857 +
    (-x2366 * x675) * (x1875 - x1903) +
    (-x2366 * x676) * (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[130] =
    -1.77e+38 * x10287 * x10305 *
      (1.68 * x10288 * x691 + 12.0 * x10329 * x691) -
    1.062e+39 * x10297 + 8.8666981132075502e+66 * x10301 + 1.062e+39 * x10305 -
    8.8666981132075502e+66 * x10311 +
    x10335 * x11878 * (1.68 * x10288 * x691 + 12.0 * x10329 * x691) +
    1.194e+30 * x1206 - x1523 * x2366 + x1533 * x2366 -
    1.194e+30 * x1539 * x858 + x1593 * x324 + x172 * x2048 + x1808 * x1829 -
    x1808 * x1860 + x1829 * x2050 + x1829 * x2142 + x1829 * x2270 +
    x1829 * x2326 + x1829 * x699 + x1829 * x883 - x1860 * x2050 -
    x1860 * x2142 - x1860 * x2270 - x1860 * x2326 - x1860 * x699 -
    x1860 * x883 - x2048 * x318 - 4.5605758157389599e+47 * x601 + x8393 +
    4.5605758157389599e+47 * x914 + (-x2366 * x675) * (x1946 - x1986) +
    (-x2366 * x676) * (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[153] =
    -sc[15] * x9990 - x1534 * x2366 + x1535 * x2366 + x1808 * x1881 -
    x1808 * x1885 + x1881 * x2050 + x1881 * x2142 + x1881 * x2270 +
    x1881 * x2326 + x1881 * x699 + x1881 * x883 - x1885 * x2050 -
    x1885 * x2142 - x1885 * x2270 - x1885 * x2326 - x1885 * x699 -
    x1885 * x883 + x8429 + x857 + (-x2366 * x675) * (x2026 - x2051) +
    (-x2366 * x676) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[176] =
    -x1563 * x2366 + x1573 * x2366 + x1808 * x1911 - x1808 * x1951 +
    x1911 * x2050 + x1911 * x2142 + x1911 * x2270 + x1911 * x2326 +
    x1911 * x699 + x1911 * x883 - x1951 * x2050 - x1951 * x2142 -
    x1951 * x2270 - x1951 * x2326 - x1951 * x699 - x1951 * x883 +
    8700.0 * x324 * exp(-490.13303249379697 * invT) + x8458 + x857 +
    (-x2366 * x675) * (x2093 - x2104) +
    (-x2366 * x676) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[199] =
    -sc[15] * x10594 + 3.54e+38 * sc[8] * x10295 * x40 * exp(x2361) -
    x1574 * x2366 + x1575 * x2366 + x1808 * x1954 - x1808 * x1957 +
    x1954 * x2050 + x1954 * x2142 + x1954 * x2270 + x1954 * x2326 +
    x1954 * x699 + x1954 * x883 - x1957 * x2050 - x1957 * x2142 -
    x1957 * x2270 - x1957 * x2326 - x1957 * x699 - x1957 * x883 +
    40000000.0 * x324 * x449 + x8496 + x857 +
    (-x2366 * x675) * (x1449 - x2150) +
    (-x2366 * x676) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[222] =
    x1582 * x324 + x1808 * x1960 - x1808 * x1966 + x1960 * x2050 +
    x1960 * x2142 + x1960 * x2270 + x1960 * x2326 + x1960 * x699 +
    x1960 * x883 - x1966 * x2050 - x1966 * x2142 - x1966 * x2270 -
    x1966 * x2326 - x1966 * x699 - x1966 * x883 - x2366 * x796 + x2366 * x986 +
    x826 + x8525 + (-x2366 * x675) * (x2145 - x2193) +
    (-x2366 * x676) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[245] =
    -120000000.0 * sc[15] * x1260 -
    1.77e+38 * x10287 * x10305 * (0.42 * x10288 * x691 + 3.0 * x10329 * x691) -
    2.655e+38 * x10297 + 2.2166745283018902e+66 * x10301 + 2.655e+38 * x10305 -
    2.2166745283018902e+66 * x10311 +
    x10335 * x11878 * (0.42 * x10288 * x691 + 3.0 * x10329 * x691) +
    2.985e+29 * x1206 - 2.985e+29 * x1539 * x858 - x1584 * x2366 +
    x1586 * x2366 + x172 * x6418 + x1808 * x1971 - x1808 * x1973 +
    x1971 * x2050 + x1971 * x2142 + x1971 * x2270 + x1971 * x2326 +
    x1971 * x699 + x1971 * x883 - x1973 * x2050 - x1973 * x2142 -
    x1973 * x2270 - x1973 * x2326 - x1973 * x699 - x1973 * x883 - x318 * x6418 -
    1.14014395393474e+47 * x601 + x8559 + 1.14014395393474e+47 * x914 +
    (-x2366 * x675) * (-x2275 + x468) +
    (-x2366 * x676) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[268] =
    -x1587 * x2366 + x1588 * x2366 - x1808 * x1983 + x1808 * x926 -
    x1983 * x2050 - x1983 * x2142 - x1983 * x2270 - x1983 * x2326 -
    x1983 * x699 - x1983 * x883 + x2050 * x926 + x2142 * x926 + x2270 * x926 +
    x2326 * x926 + x699 * x926 + x826 + x8586 + x883 * x926 +
    (-x2366 * x675) * (x1516 - x2331) +
    (-x2366 * x676) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[291] =
    x1459 * x2366 - x1589 * x2366 + x1808 * x1984 - x1808 * x652 +
    x1984 * x2050 + x1984 * x2142 + x1984 * x2270 + x1984 * x2326 +
    x1984 * x699 + x1984 * x883 - x2050 * x652 - x2142 * x652 - x2270 * x652 -
    x2326 * x652 - x652 * x699 - x652 * x883 + x857 + x8613 +
    (-x2366 * x675) * (x1407 - x2367) +
    (-x2366 * x676) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[314] =
    x1808 * x1996 - x1808 * x1998 + x1996 * x2050 + x1996 * x2142 +
    x1996 * x2270 + x1996 * x2326 + x1996 * x699 + x1996 * x883 -
    x1998 * x2050 - x1998 * x2142 - x1998 * x2270 - x1998 * x2326 -
    x1998 * x699 - x1998 * x883 - x2366 * x884 + x2366 * x890 + x588 + x8641 +
    (-x2366 * x675) * (-x1050 + x754) +
    (-x2366 * x676) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[337] =
    x1648 * x2366 - x1808 * x1998 + x1808 * x909 - x1998 * x2050 -
    x1998 * x2142 - x1998 * x2270 - x1998 * x2326 - x1998 * x699 -
    x1998 * x883 + x2050 * x909 + x2142 * x909 + x2270 * x909 + x2326 * x909 -
    x2366 * x898 + x588 + x699 * x909 + x8665 + x883 * x909 +
    (-x2366 * x675) * (x1036 - x622) +
    (-x2366 * x676) * (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[360] =
    -120000000.0 * sc[10] * x1260 - sc[1] * x868 - sc[2] * x7459 -
    300000.0 * sc[3] * x1321 - sc[4] * x9086 - sc[6] * x9990 - sc[8] * x10594 +
    x1059 * x1808 + x1059 * x2050 + x1059 * x2142 + x1059 * x2270 +
    x1059 * x2326 + x1059 * x699 + x1059 * x883 - x11878 - x1666 * x2366 +
    x1671 * x2366 - x1808 * x600 - x2050 * x600 - x2142 * x600 - x2270 * x600 -
    x2326 * x600 + x588 - 40000000.0 * x597 * exp(276.769166192596 * invT) -
    x600 * x699 - x600 * x883 - 1.99e+29 * x788 * x858 + x8691 +
    (-x2366 * x675) * (x1297 - x130) +
    (-x2366 * x676) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[383] =
    x10286 + x10299 - x1677 * x2366 + x1681 * x2366 +
    (-x2366 * x675) * (-x504 + x846) +
    (-x2366 * x676) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[406] =
    x10286 + x10299 + x1681 * x2366 - x1689 * x2366 +
    (-x2366 * x675) * (-x1080 + x849) +
    (-x2366 * x676) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[429] =
    300000.0 * sc[6] * x1898 + x10149 + x10286 + x10859 + x1681 * x2366 -
    x1692 * x2366 + x1808 * x1898 + x1898 * x2050 + x1898 * x2142 +
    x1898 * x2270 + x1898 * x2326 + x1898 * x699 + x1898 * x883 + x1978 +
    x8035 + x8728 + x9677 + (-x2366 * x675) * (-x1080 + x1782) +
    (-x2366 * x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[452] =
    300000.0 * sc[6] * x1959 + x10149 + x10286 + x10859 + x1720 * x2366 +
    x1808 * x1959 - x184 * x2366 + x1959 * x2050 + x1959 * x2142 +
    x1959 * x2270 + x1959 * x2326 + x1959 * x699 + x1959 * x883 + x1978 +
    x8035 + x8728 + x9677 + (-x2366 * x675) * (x1033 - x971) +
    (-x2366 * x676) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[475] =
    300000.0 * sc[6] * x557 + x10149 + x10286 + x10859 + x1681 * x2366 -
    x1730 * x2366 + x1808 * x557 + x1978 + x2050 * x557 + x2142 * x557 +
    x2270 * x557 + x2326 * x557 + x557 * x699 + x557 * x883 + x8035 + x8728 +
    x9677 + (-x2366 * x675) * (-x1080 + x929) +
    (-x2366 * x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[498] =
    x10286 + x10299 - x1631 * x2366 + x1670 * x2366 +
    (-x2366 * x675) * (x568 - x892) +
    (-x2366 * x676) * (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-300000.0 * sc[6] * x603 - x1808 * x603 - x2050 * x603 - x2142 * x603 -
     x2270 * x603 - x2326 * x603 - x603 * x699 - x603 * x883) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-300000.0 * sc[6] * x561 - x1808 * x561 - x2050 * x561 - x2142 * x561 -
     x2270 * x561 - x2326 * x561 - x561 * x699 - x561 * x883) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[16] =
    50000000.0 * sc[16] * x1465 - 50000000.0 * sc[16] * x256 -
    30000000.0 * sc[16] * x644 + 30000000.0 * sc[16] * x855 -
    50000000.0 * sc[16] * x972 - x1014 * x231 + x10331 - x11039 * x1465 +
    x11039 * x972 + x231 * x987 + x760 * x816 - x816 * x823 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (-x1465 + x972) +
    (x231 * x676 + x681 * x816) * (x644 - x855 + (x674) * (-x1465 + x972)) +
    (x682 * x816) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[39] =
    -50000000.0 * sc[16] * x1649 + 50000000.0 * sc[16] * x1694 -
    sc[16] * x2106 - 30000000.0 * sc[16] * x893 + 30000000.0 * sc[16] * x899 -
    100000000.0 * sc[16] + 50000000.0 * sc[17] * x768 + x1030 * x816 + x10396 +
    x11039 * x1649 - x11039 * x1694 + x1211 * x231 - x1389 * x231 -
    x1508 * x816 + 100000000.0 * x2099 * x2100 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1649 - x1694) +
    (x231 * x676 + x681 * x816) * (x893 - x899 + (x674) * (x1649 - x1694)) +
    (x682 * x816) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[62] =
    16.32 * sc[13] * exp(x2138) - 50000000.0 * sc[16] * x1772 +
    50000000.0 * sc[16] * x1785 - 30000000.0 * sc[16] * x970 +
    30000000.0 * sc[16] * x973 - 100000000.0 * sc[16] +
    10000000.0 * sc[17] * x768 + x10396 + x11039 * x1772 - x11039 * x1785 +
    x1419 * x231 - x1461 * x231 + x1639 * x816 - x1643 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1772 - x1785) +
    (x231 * x676 + x681 * x816) * (x970 - x973 + (x674) * (x1772 - x1785)) +
    (x682 * x816) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[85] =
    -50000000.0 * sc[16] * x1822 + 50000000.0 * sc[16] * x1852 -
    1600000.0 * sc[16] * x8258 - 30000000.0 * sc[16] * x977 +
    30000000.0 * sc[16] * x978 + x10396 + x11039 * x1822 - x11039 * x1852 -
    x1517 * x231 + x1673 * x816 - x1685 * x816 + x231 * x854 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1822 - x1852) +
    (x231 * x676 + x681 * x816) * (x977 - x978 + (x674) * (x1822 - x1852)) +
    (x682 * x816) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[108] =
    -sc[16] * x166 - 50000000.0 * sc[16] * x1875 + 50000000.0 * sc[16] * x1903 -
    30000000.0 * sc[16] * x980 + 30000000.0 * sc[16] * x981 +
    7500000.0 * sc[17] * x415 + x10396 + x11039 * x1875 - x11039 * x1903 +
    x1519 * x231 - x1521 * x231 - x1680 * x816 + x1710 * x816 +
    1600000.0 * x2100 * x8328 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1875 - x1903) +
    (x231 * x676 + x681 * x816) * (x980 - x981 + (x674) * (x1875 - x1903)) +
    (x682 * x816) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[131] =
    -sc[16] * x162 - 50000000.0 * sc[16] * x1946 + 50000000.0 * sc[16] * x1986 -
    30000000.0 * sc[16] * x989 + 30000000.0 * sc[16] * x990 +
    1.614e+17 * x1042 + x11039 * x1946 - x11039 * x1986 - x11075 * x11265 +
    x11084 * x11265 - 1.614e+17 * x11087 + 8.68332e+25 * x1513 * x831 +
    x1523 * x231 - x1533 * x231 + x1748 * x816 - x1756 * x816 -
    8.68332e+25 * x835 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1946 - x1986) +
    (x231 * x676 + x681 * x816) * (x989 - x990 + (x674) * (x1946 - x1986)) +
    (x682 * x816) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[154] =
    -30000000.0 * sc[16] * x1008 + 30000000.0 * sc[16] * x1010 -
    50000000.0 * sc[16] * x2026 + 50000000.0 * sc[16] * x2051 + x10396 +
    x11039 * x2026 - x11039 * x2051 + x1534 * x231 - x1535 * x231 -
    x1764 * x816 + x323 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x2026 - x2051) +
    (x231 * x676 + x681 * x816) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (x682 * x816) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[177] =
    -30000000.0 * sc[16] * x1011 + 30000000.0 * sc[16] * x1013 -
    50000000.0 * sc[16] * x2093 + 50000000.0 * sc[16] * x2104 + x10396 +
    x11039 * x2093 - x11039 * x2104 + x1563 * x231 - x1573 * x231 -
    x1773 * x816 + x225 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x2093 - x2104) +
    (x231 * x676 + x681 * x816) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (x682 * x816) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[200] =
    -30000000.0 * sc[16] * x1017 + 30000000.0 * sc[16] * x1018 -
    50000000.0 * sc[16] * x1449 + 50000000.0 * sc[16] * x2150 -
    50000000.0 * sc[16] + x10396 + x11039 * x1449 - x11039 * x2150 +
    x1574 * x231 - x1575 * x231 + x1779 * x816 - x1784 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1449 - x2150) +
    (x231 * x676 + x681 * x816) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (x682 * x816) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[223] =
    -30000000.0 * sc[16] * x1019 + 30000000.0 * sc[16] * x1020 -
    50000000.0 * sc[16] * x2145 + 50000000.0 * sc[16] * x2193 + x10331 +
    x11039 * x2145 - x11039 * x2193 + x1821 * x816 - x1856 * x816 +
    x231 * x796 - x231 * x986 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x2145 - x2193) +
    (x231 * x676 + x681 * x816) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (x682 * x816) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[246] =
    40000000.0 * refCinv * sc[10] * sc[13] * x11449 - sc[10] * x11071 * x11073 +
    50000000.0 * sc[13] * x1390 + sc[14] * x10646 -
    30000000.0 * sc[16] * x1023 + 30000000.0 * sc[16] * x1025 +
    sc[16] * x11071 * x11082 + 50000000.0 * sc[16] * x2275 -
    50000000.0 * sc[16] * x468 + 4.035e+16 * x1042 -
    2.17083e+25 * x1047 * x518 * x831 - x11039 * x2275 + x11039 * x468 +
    x11073 - 4.035e+16 * x11087 + 3200000.0 * x1177 * x8328 +
    200000000.0 * x1248 * x2099 + 2.17083e+25 * x1513 * x831 +
    30000000.0 * x158 * x233 + x1584 * x231 - x1586 * x231 + x1836 * x816 -
    x1841 * x816 + 100000000.0 * x574 * x597 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (-x2275 + x468) +
    (x231 * x676 + x681 * x816) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (x682 * x816) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[269] =
    -30000000.0 * sc[16] * x1027 + 30000000.0 * sc[16] * x1031 -
    50000000.0 * sc[16] * x1516 + 50000000.0 * sc[16] * x2331 + x10331 +
    x11039 * x1516 - x11039 * x2331 + x1587 * x231 - x1588 * x231 -
    x1876 * x816 + x758 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1516 - x2331) +
    (x231 * x676 + x681 * x816) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (x682 * x816) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[292] =
    -30000000.0 * sc[16] * x1063 + 30000000.0 * sc[16] * x1065 -
    50000000.0 * sc[16] * x1407 + 50000000.0 * sc[16] * x2367 + x10396 +
    x11039 * x1407 - x11039 * x2367 - x1459 * x231 + x1589 * x231 +
    x1879 * x816 - x1894 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (x1407 - x2367) +
    (x231 * x676 + x681 * x816) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (x682 * x816) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[315] =
    50000000.0 * sc[10] * x1390 + 50000000.0 * sc[16] * x1050 -
    30000000.0 * sc[16] * x1068 + 30000000.0 * sc[16] * x1069 -
    50000000.0 * sc[16] * x754 + 16.32 * sc[2] * exp(x2138) - x1050 * x11039 +
    x11039 * x754 + 20000000.0 * x11449 * x2100 + x1401 + x1896 * x816 -
    x1901 * x816 + x231 * x884 - x231 * x890 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (-x1050 + x754) +
    (x231 * x676 + x681 * x816) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (x682 * x816) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[338] =
    sc[10] * x10646 - 50000000.0 * sc[16] * x1036 -
    30000000.0 * sc[16] * x1070 + 50000000.0 * sc[16] * x622 +
    30000000.0 * sc[16] * x668 + x1036 * x11039 - x11039 * x622 + x1401 -
    x1648 * x231 - x1901 * x816 + x231 * x898 + x566 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) * (x1036 - x622) +
    (x231 * x676 + x681 * x816) * (x1070 - x668 + (x674) * (x1036 - x622)) +
    (x682 * x816) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[361] =
    -30000000.0 * sc[16] * x1074 + 30000000.0 * sc[16] * x1077 -
    50000000.0 * sc[16] * x1297 + 50000000.0 * sc[16] * x130 + x11039 * x1297 -
    x11039 * x130 + x1401 + x1666 * x231 - x1671 * x231 - x1823 * x816 +
    x1908 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) * (x1297 - x130) +
    (x231 * x676 + x681 * x816) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (x682 * x816) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[384] =
    -50000000.0 * sc[0] * x256 - 30000000.0 * sc[16] * x1078 +
    30000000.0 * sc[16] * x1081 + 50000000.0 * sc[16] * x504 -
    50000000.0 * sc[16] * x846 - 40000000.0 * sc[16] - sc[1] * x2106 -
    100000000.0 * sc[1] - 100000000.0 * sc[2] - 1600000.0 * sc[3] * x8258 -
    sc[4] * x166 - sc[5] * x162 - 50000000.0 * sc[8] + x10396 - x11039 * x504 +
    x11039 * x846 - x11082 + x1677 * x231 + x169 * x816 - x1845 * x816 + x497 -
    50000000.0 * x518 - 30000000.0 * x645 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) * (-x504 + x846) +
    (x231 * x676 + x681 * x816) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (x682 * x816) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[407] =
    -30000000.0 * sc[16] * x1082 - 50000000.0 * sc[16] * x849 +
    50000000.0 * sc[1] * x768 + 10000000.0 * sc[2] * x768 +
    7500000.0 * sc[4] * x415 + x11038 + x11039 * x849 + x1689 * x231 +
    x1892 * x816 + x497 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (-x1080 + x849) +
    (x231 * x676 + x681 * x816) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (x682 * x816) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[430] =
    -30000000.0 * sc[16] * x1085 - 50000000.0 * sc[16] * x1782 + x11038 +
    x11039 * x1782 + x1692 * x231 + x1888 * x816 + x497 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (-x1080 + x1782) +
    (x231 * x676 + x681 * x816) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (x682 * x816) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[453] =
    -50000000.0 * sc[16] * x1033 - 30000000.0 * sc[16] * x1086 +
    30000000.0 * sc[16] * x1087 + 50000000.0 * sc[16] * x971 + x1033 * x11039 +
    x10396 - x11039 * x971 - x1720 * x231 + x184 * x231 - x1845 * x816 +
    x1900 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) * (x1033 - x971) +
    (x231 * x676 + x681 * x816) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (x682 * x816) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[476] =
    -30000000.0 * sc[16] * x1090 - 50000000.0 * sc[16] * x929 + x11038 +
    x11039 * x929 + x1730 * x231 + x1943 * x816 + x497 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) *
      (-x1080 + x929) +
    (x231 * x676 + x681 * x816) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (x682 * x816) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[499] =
    -30000000.0 * sc[16] * x1099 + 30000000.0 * sc[16] * x1104 -
    50000000.0 * sc[16] * x568 + 50000000.0 * sc[16] * x892 + x10396 +
    x11039 * x568 - x11039 * x892 + x1631 * x231 - x1670 * x231 - x1845 * x816 +
    x1944 * x816 +
    (-30000000.0 * sc[16] * x674 + x231 * x675 - x680 * x816) * (x568 - x892) +
    (x231 * x676 + x681 * x816) * (x1099 - x1104 + (x674) * (x568 - x892)) +
    (x682 * x816) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[17] = -20000000.0 * sc[17] * x666 + 20000000.0 * sc[1] * x2054 * x657 +
          20000000.0 * sc[2] * x2054 * x657 + 140000.0 * sc[3] * x657 + x1054 +
          x11153 + x2123 * x644 - x2123 * x855 + x341 * x657 + x644 * x814 -
          x814 * x855 +
          (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
            (-x1465 + x972) +
          (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
            (x644 - x855 + (x674) * (-x1465 + x972)) +
          (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
           x2180 * x230 - x230 * x341 - x230 * x888) *
            (x760 - x823 + (-x680) * (-x1465 + x972) +
             (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x682) *
               (x827 - x961 + (x677) * (-x1465 + x972) +
                (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
                (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                          (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
          (-20000000.0 * sc[4] * x599) *
            (-x1014 + x987 + (x675) * (-x1465 + x972) +
             (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
          (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
           x2180 * x437 - x341 * x437 - x437 * x888) *
            (x827 - x961 + (x677) * (-x1465 + x972) +
             (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[40] = 140000.0 * sc[3] * x1200 + x11100 + x1200 * x2060 + x1200 * x341 +
          x1200 * x888 + x2123 * x893 - x2123 * x899 + x2185 + x532 + x785 +
          x814 * x893 - x814 * x899 +
          (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
            (x1649 - x1694) +
          (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
            (x893 - x899 + (x674) * (x1649 - x1694)) +
          (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
           x2180 * x230 - x230 * x341 - x230 * x888) *
            (x1030 - x1508 + (-x680) * (x1649 - x1694) +
             (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x682) *
               (x1064 - x969 + (x677) * (x1649 - x1694) +
                (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
                (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                          (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
          (-20000000.0 * sc[4] * x599) *
            (x1211 - x1389 + (x675) * (x1649 - x1694) +
             (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
          (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
           x2180 * x437 - x341 * x437 - x437 * x888) *
            (x1064 - x969 + (x677) * (x1649 - x1694) +
             (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[63] = 20000000.0 * sc[1] * x1075 * x2054 +
          20000000.0 * sc[2] * x1075 * x2054 + 140000.0 * sc[3] * x1075 +
          x1075 * x341 + x11100 + x532 + x5665 + x7469 + x785 + x814 * x970 -
          x814 * x973 +
          (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
            (x1772 - x1785) +
          (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
            (x970 - x973 + (x674) * (x1772 - x1785)) +
          (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
           x2180 * x230 - x230 * x341 - x230 * x888) *
            (x1639 - x1643 + (-x680) * (x1772 - x1785) +
             (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x682) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (-20000000.0 * sc[4] * x599) *
            (x1419 - x1461 + (x675) * (x1772 - x1785) +
             (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
          (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
           x2180 * x437 - x341 * x437 - x437 * x888) *
            (x1640 - x718 + (x677) * (x1772 - x1785) +
             (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[86] = 140000.0 * sc[3] * x1708 + x11100 - 140000.0 * x1209 + x1708 * x2060 +
          x1708 * x341 + x1708 * x888 + x2123 * x977 - x2123 * x978 + x532 +
          x5739 - 140000.0 * x778 + x814 * x977 - x814 * x978 +
          (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
            (x1822 - x1852) +
          (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
            (x977 - x978 + (x674) * (x1822 - x1852)) +
          (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
           x2180 * x230 - x230 * x341 - x230 * x888) *
            (x1673 - x1685 + (-x680) * (x1822 - x1852) +
             (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x682) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (-20000000.0 * sc[4] * x599) *
            (-x1517 + x854 + (x675) * (x1822 - x1852) +
             (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
          (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
           x2180 * x437 - x341 * x437 - x437 * x888) *
            (-x1661 + x1662 + (x677) * (x1822 - x1852) +
             (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[109] =
    sc[16] * x166 - 7500000.0 * sc[17] * x415 - 20000000.0 * sc[17] * x7551 +
    140000.0 * sc[3] * x1745 + x11100 + x1745 * x2060 + x1745 * x341 +
    x1745 * x888 + 10000000.0 * x209 * x415 + x2123 * x980 - x2123 * x981 +
    x532 + x5839 + x814 * x980 - x814 * x981 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x1875 - x1903) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[132] =
    sc[16] * x162 - sc[17] * x9150 + 20000000.0 * sc[1] * x1781 * x2054 +
    20000000.0 * sc[2] * x1781 * x2054 + 140000.0 * sc[3] * x1781 -
    5.3600740740740798e+37 * x11089 * x11092 +
    5.3600740740740798e+37 * x11089 * x11095 - x11159 * x11269 + x11269 * x245 +
    x1781 * x341 + x2123 * x989 - x2123 * x990 - 1.614e+22 * x240 +
    1.614e+22 * x489 + x5961 + x814 * x989 - x814 * x990 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x1946 - x1986) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[155] =
    -140000.0 * sc[17] * x1182 + 140000.0 * sc[3] * x1839 + x1008 * x2123 +
    x1008 * x814 - x1010 * x2123 - x1010 * x814 + x11100 + x1839 * x2060 +
    x1839 * x2180 + x1839 * x341 + x1839 * x888 + x2026 * x508 - x2051 * x508 +
    x6056 + x6090 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x2026 - x2051) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[178] =
    x1011 * x2123 + x1011 * x814 - x1013 * x2123 - x1013 * x814 + x11101 +
    x2093 * x508 - x2104 * x508 + x6138 + x6141 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x2093 - x2104) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[201] =
    20000000.0 * sc[1] * x1197 * x2054 + 20000000.0 * sc[2] * x1197 * x2054 +
    140000.0 * sc[3] * x1197 + x1017 * x2123 + x1017 * x814 - x1018 * x2123 -
    x1018 * x814 + x11100 + x1197 * x341 + x6090 + x6236 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x1449 - x2150) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[224] =
    x1019 * x2123 + x1019 * x814 - x1020 * x2123 - x1020 * x814 + x11031 +
    x6318 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x2145 - x2193) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-20000000.0 * sc[4] * x599) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[247] =
    -4.035e+21 * refC * sc[17] * x1434 + 20000000.0 * sc[1] * x2054 * x436 +
    20000000.0 * sc[2] * x2054 * x436 + 140000.0 * sc[3] * x436 +
    x1023 * x2123 + x1023 * x814 - x1025 * x2123 - x1025 * x814 -
    1.34001851851852e+37 * x11089 * x11092 +
    1.34001851851852e+37 * x11089 * x11095 - x11159 * x11447 + x11447 * x245 +
    x341 * x436 + x40 * x645 * x810 + 4.035e+21 * x489 + x6451 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (-x2275 + x468) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[270] =
    x1027 * x2123 + x1027 * x814 - x1031 * x2123 - x1031 * x814 + x1055 +
    x11031 + x2202 * x645 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x1516 - x2331) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[293] =
    140000.0 * sc[3] * x790 + x1063 * x2123 + x1063 * x814 - x1065 * x2123 -
    x1065 * x814 + x11100 + x2060 * x790 + x341 * x790 + x6090 + x6618 +
    x790 * x888 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (x1407 - x2367) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-20000000.0 * sc[4] * x599) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[316] =
    x1068 * x2123 + x1068 * x814 - x1069 * x2123 - x1069 * x814 + x11033 +
    x1199 + x6687 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (-x1050 + x754) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-20000000.0 * sc[4] * x599) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[339] =
    20000000.0 * sc[4] * x1980 + x1036 * x508 + x1070 * x2123 + x1070 * x814 +
    x11033 + x1199 + x207 - x2123 * x668 - x508 * x622 - x668 * x814 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) * (x1036 - x622) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-20000000.0 * sc[4] * x599) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[362] =
    x1074 * x2123 + x1074 * x814 - x1077 * x2123 - x1077 * x814 + x11033 +
    x1682 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) * (x1297 - x130) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[385] =
    50000000.0 * sc[0] * x256 + 48000000.0 * sc[2] * x169 + sc[4] * x166 +
    sc[5] * x162 + x1078 * x2123 + x1078 * x814 - x1081 * x2123 - x1081 * x814 +
    x11101 + x1955 - x504 * x508 + x508 * x846 + x6138 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) * (-x504 + x846) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[408] =
    -20000000.0 * sc[0] * x666 + 20000000.0 * sc[1] * x1494 * x2054 +
    20000000.0 * sc[2] * x1494 * x2054 - sc[2] * x7466 -
    10000000.0 * sc[2] * x768 + 140000.0 * sc[3] * x1494 -
    7500000.0 * sc[4] * x415 - 20000000.0 * sc[4] * x7551 - sc[5] * x9150 -
    140000.0 * sc[6] * x1182 + x1082 * x2123 + x1082 * x814 + x11100 + x11908 -
    2.69e+21 * x1434 * x788 + x1494 * x341 + x8079 + x894 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (-x1080 + x849) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-20000000.0 * sc[4] * x599) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[431] =
    20000000.0 * sc[1] * x191 * x2054 + 48000000.0 * sc[2] * x1888 +
    20000000.0 * sc[2] * x191 * x2054 + 140000.0 * sc[3] * x191 +
    x1085 * x2123 + x1085 * x814 + x11100 + x11908 + x1782 * x508 +
    x191 * x2180 + x191 * x341 + x1955 + x6090 + x8079 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (-x1080 + x1782) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-20000000.0 * sc[4] * x599) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[454] =
    x1086 * x2123 + x1086 * x814 - x1087 * x2123 - x1087 * x814 + x11101 +
    x2175 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) * (x1033 - x971) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-20000000.0 * sc[4] * x599) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[477] =
    48000000.0 * sc[2] * x1943 + sc[2] * x5661 + x1090 * x2123 + x1090 * x814 +
    x11101 + x11908 + x1955 + x508 * x929 + x6138 + x8079 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) *
      (-x1080 + x929) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-20000000.0 * sc[4] * x599) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[500] =
    48000000.0 * sc[2] * x1944 + x1099 * x2123 + x1099 * x814 - x1104 * x2123 -
    x1104 * x814 + x11101 + x1955 + x508 * x568 - x508 * x892 + x6138 +
    (-48000000.0 * sc[2] * x680 + x2123 * x674 + x674 * x814) * (x568 - x892) +
    (48000000.0 * sc[2] * x681 - 20000000.0 * sc[4] * x658) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-140000.0 * sc[3] * x230 - 20000000.0 * sc[4] * x65 - x2060 * x230 -
     x2180 * x230 - x230 * x341 - x230 * x888) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-20000000.0 * sc[4] * x599) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (48000000.0 * sc[2] * x682 - 140000.0 * sc[3] * x437 - x2060 * x437 -
     x2180 * x437 - x341 * x437 - x437 * x888) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[18] = 80200000.0 * sc[2] * x927 - 80200000.0 * sc[2] * x956 + x1549 * x827 -
          x1549 * x961 + x2146 * x657 + x964 +
          (x1549 * x677) * (-x1465 + x972) +
          (x1549 * x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (-x2146 * x230) *
            (x760 - x823 + (-x680) * (-x1465 + x972) +
             (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x682) *
               (x827 - x961 + (x677) * (-x1465 + x972) +
                (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
                (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                          (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
          (-80200000.0 * sc[2] * x603 + x1549 * x679) *
            (-x1014 + x987 + (x675) * (-x1465 + x972) +
             (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
          (-80200000.0 * sc[2] * x561 - x2146 * x437) *
            (x827 - x961 + (x677) * (-x1465 + x972) +
             (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[41] = -80200000.0 * sc[18] * x1299 + 80200000.0 * sc[2] * x1561 -
          80200000.0 * sc[2] * x494 + x1064 * x1549 + x1200 * x2146 -
          x1549 * x969 + x176 + x715 + (x1549 * x677) * (x1649 - x1694) +
          (x1549 * x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (-x2146 * x230) *
            (x1030 - x1508 + (-x680) * (x1649 - x1694) +
             (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x682) *
               (x1064 - x969 + (x677) * (x1649 - x1694) +
                (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
                (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                          (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
          (-80200000.0 * sc[2] * x603 + x1549 * x679) *
            (x1211 - x1389 + (x675) * (x1649 - x1694) +
             (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
          (-80200000.0 * sc[2] * x561 - x2146 * x437) *
            (x1064 - x969 + (x677) * (x1649 - x1694) +
             (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[64] = 80200000.0 * sc[2] * x1660 - 80200000.0 * sc[2] * x1726 +
          x1075 * x2146 + x1549 * x1640 - x1549 * x718 + 80200000.0 * x324 +
          x715 + (x1549 * x677) * (x1772 - x1785) +
          (x1549 * x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (-x2146 * x230) *
            (x1639 - x1643 + (-x680) * (x1772 - x1785) +
             (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x682) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (-80200000.0 * sc[2] * x603 + x1549 * x679) *
            (x1419 - x1461 + (x675) * (x1772 - x1785) +
             (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
          (-80200000.0 * sc[2] * x561 - x2146 * x437) *
            (x1640 - x718 + (x677) * (x1772 - x1785) +
             (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[87] = 80200000.0 * sc[2] * x1757 - 80200000.0 * sc[2] * x1759 -
          x1549 * x1661 + x1549 * x1662 + x1708 * x2146 + x715 +
          (x1549 * x677) * (x1822 - x1852) +
          (x1549 * x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (-x2146 * x230) *
            (x1673 - x1685 + (-x680) * (x1822 - x1852) +
             (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x682) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (-80200000.0 * sc[2] * x603 + x1549 * x679) *
            (-x1517 + x854 + (x675) * (x1822 - x1852) +
             (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
          (-80200000.0 * sc[2] * x561 - x2146 * x437) *
            (-x1661 + x1662 + (x677) * (x1822 - x1852) +
             (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[110] =
    -sc[18] * x9026 + 80200000.0 * sc[2] * x1790 - 80200000.0 * sc[2] * x1824 -
    x1549 * x1687 + x1549 * x345 + x1745 * x2146 + x715 +
    (x1549 * x677) * (x1875 - x1903) +
    (x1549 * x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-x2146 * x230) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[133] =
    80200000.0 * sc[2] * x1829 - 80200000.0 * sc[2] * x1860 +
    1.61333333333333e+66 * x10255 * x1570 -
    1.61333333333333e+66 * x10255 * x435 * x702 + 1.32e+37 * x10326 -
    x10376 * x10471 + x10471 * x371 + 1.6224e+48 * x1487 * x967 -
    3.12e+28 * x1490 * x2140 - x1549 * x1669 + x1549 * x1751 -
    1.32e+37 * x1568 * x2371 + x1781 * x2146 - 1.6224e+48 * x232 -
    x5919 * x720 + x5919 * x988 + 3.12e+28 * x783 +
    (x1549 * x677) * (x1946 - x1986) +
    (x1549 * x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-x2146 * x230) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[156] =
    sc[14] * x9200 + 80200000.0 * sc[2] * x1881 - 80200000.0 * sc[2] * x1885 -
    x1549 * x1760 + x1549 * x1762 + x1839 * x2146 + x715 +
    (x1549 * x677) * (x2026 - x2051) +
    (x1549 * x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-x2146 * x230) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[179] =
    80200000.0 * sc[2] * x1911 - 80200000.0 * sc[2] * x1951 - x1549 * x1768 +
    x1549 * x1769 + x1905 * x2146 + x715 + (x1549 * x677) * (x2093 - x2104) +
    (x1549 * x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-x2146 * x230) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[202] =
    80200000.0 * sc[2] * x1954 - 80200000.0 * sc[2] * x1957 + x1197 * x2146 -
    x1549 * x1775 + x1549 * x1776 + x367 + x715 +
    (x1549 * x677) * (x1449 - x2150) +
    (x1549 * x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-x2146 * x230) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[225] =
    80200000.0 * sc[2] * x1960 - 80200000.0 * sc[2] * x1966 - x1549 * x1778 +
    x1549 * x1780 + x173 * x2146 + x964 + (x1549 * x677) * (x2145 - x2193) +
    (x1549 * x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-x2146 * x230) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[248] =
    80200000.0 * sc[2] * x1971 - 80200000.0 * sc[2] * x1973 +
    4.0333333333333298e+65 * x10255 * x1570 - 4.0333333333333298e+65 * x10323 +
    3.3e+36 * x10326 - x10376 * x10653 + x10653 * x371 +
    4.056e+47 * x1487 * x967 - 7.8e+27 * x1490 * x2140 + x1549 * x1678 -
    x1549 * x1797 - 3.3e+36 * x1568 * x2371 + x2146 * x436 - 4.056e+47 * x232 -
    x6384 * x720 + x6384 * x988 + 7.8e+27 * x783 +
    (x1549 * x677) * (-x2275 + x468) +
    (x1549 * x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-x2146 * x230) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[271] =
    -80200000.0 * sc[2] * x1983 + 80200000.0 * sc[2] * x926 + x1549 * x1663 -
    x1549 * x1750 + x173 * x2146 + x964 + (x1549 * x677) * (x1516 - x2331) +
    (x1549 * x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-x2146 * x230) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[294] =
    80200000.0 * sc[2] * x1984 - 80200000.0 * sc[2] * x652 - x1549 * x1761 +
    x1549 * x1765 + x2146 * x790 + x715 + (x1549 * x677) * (x1407 - x2367) +
    (x1549 * x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-x2146 * x230) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[317] =
    80200000.0 * sc[2] * x1996 - 80200000.0 * sc[2] * x1998 - x1549 * x1830 +
    x1549 * x1831 + x774 + (x1549 * x677) * (-x1050 + x754) +
    (x1549 * x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-x2146 * x230) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[340] =
    -80200000.0 * sc[2] * x1998 + 80200000.0 * sc[2] * x909 + sc[6] * x9200 -
    x1549 * x1834 + x1549 * x1835 + x774 + (x1549 * x677) * (x1036 - x622) +
    (x1549 * x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-x2146 * x230) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[363] =
    80200000.0 * sc[2] * x1059 - 80200000.0 * sc[2] * x600 - x1549 * x1838 +
    x1549 * x1842 + x774 + (x1549 * x677) * (x1297 - x130) +
    (x1549 * x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-x2146 * x230) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[386] =
    80200000.0 * sc[2] * x1789 + x1549 * x1848 + x1905 * x2146 + x2127 + x715 +
    (x1549 * x677) * (-x504 + x846) +
    (x1549 * x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-x2146 * x230) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[409] =
    80200000.0 * sc[2] * x1789 + x1494 * x2146 + x1549 * x1850 + x2127 + x715 +
    (x1549 * x677) * (-x1080 + x849) +
    (x1549 * x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-x2146 * x230) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[432] =
    -80200000.0 * sc[1] * x1299 + 80200000.0 * sc[2] * x1898 - sc[4] * x9026 -
    x1192 * x2140 - x1229 + x1549 * x1855 + x191 * x2146 + x2127 + x715 +
    (x1549 * x677) * (-x1080 + x1782) +
    (x1549 * x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-x2146 * x230) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[455] =
    -80200000.0 * sc[2] * x1364 + 80200000.0 * sc[2] * x1959 - x1549 * x1825 +
    x1549 * x1827 + x1905 * x2146 + x715 + (x1549 * x677) * (x1033 - x971) +
    (x1549 * x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-x2146 * x230) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[478] =
    80200000.0 * sc[2] * x557 + x1549 * x1832 + x1905 * x2146 + x2127 + x715 +
    (x1549 * x677) * (-x1080 + x929) +
    (x1549 * x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-x2146 * x230) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[501] =
    80200000.0 * sc[2] * x1789 + x1549 * x1846 + x1905 * x2146 + x2127 + x715 +
    (x1549 * x677) * (x568 - x892) +
    (x1549 * x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-x2146 * x230) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-80200000.0 * sc[2] * x603 + x1549 * x679) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (-80200000.0 * sc[2] * x561 - x2146 * x437) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[19] = -sc[19] * x261 - 60000000.0 * sc[19] * x827 +
          60000000.0 * sc[19] * x961 + x10317 + x556 * x760 - x556 * x823 +
          x649 + x937 +
          (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 -
           x2043 * x680 + x2112 * x674 - x556 * x680) *
            (-x1465 + x972) +
          (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 +
           x2043 * x681 - x2097 * x658 + x556 * x681) *
            (x644 - x855 + (x674) * (-x1465 + x972)) +
          (-x2097 * x65) *
            (x760 - x823 + (-x680) * (-x1465 + x972) +
             (x681) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x682) *
               (x827 - x961 + (x677) * (-x1465 + x972) +
                (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
                (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                          (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
          (-60000000.0 * sc[19] * x679 - x2097 * x599) *
            (-x1014 + x987 + (x675) * (-x1465 + x972) +
             (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
          (x2043 * x682 + x556 * x682) *
            (x827 - x961 + (x677) * (-x1465 + x972) +
             (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
             (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[42] = -60000000.0 * sc[19] * x1064 + 60000000.0 * sc[19] * x969 +
          x1030 * x556 + x10317 - x1508 * x556 + x2133 + x2137 + x775 +
          (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 -
           x2043 * x680 + x2112 * x674 - x556 * x680) *
            (x1649 - x1694) +
          (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 +
           x2043 * x681 - x2097 * x658 + x556 * x681) *
            (x893 - x899 + (x674) * (x1649 - x1694)) +
          (-x2097 * x65) *
            (x1030 - x1508 + (-x680) * (x1649 - x1694) +
             (x681) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x682) *
               (x1064 - x969 + (x677) * (x1649 - x1694) +
                (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
                (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                          (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
          (-60000000.0 * sc[19] * x679 - x2097 * x599) *
            (x1211 - x1389 + (x675) * (x1649 - x1694) +
             (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
          (x2043 * x682 + x556 * x682) *
            (x1064 - x969 + (x677) * (x1649 - x1694) +
             (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
             (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[65] = -60000000.0 * sc[19] * x1640 + 60000000.0 * sc[19] * x718 + x10317 +
          x1639 * x556 - x1643 * x556 + x2137 + x38 + x5656 +
          (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 -
           x2043 * x680 + x2112 * x674 - x556 * x680) *
            (x1772 - x1785) +
          (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 +
           x2043 * x681 - x2097 * x658 + x556 * x681) *
            (x970 - x973 + (x674) * (x1772 - x1785)) +
          (-x2097 * x65) *
            (x1639 - x1643 + (-x680) * (x1772 - x1785) +
             (x681) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x682) *
               (x1640 - x718 + (x677) * (x1772 - x1785) +
                (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
                (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                          (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
          (-60000000.0 * sc[19] * x679 - x2097 * x599) *
            (x1419 - x1461 + (x675) * (x1772 - x1785) +
             (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
          (x2043 * x682 + x556 * x682) *
            (x1640 - x718 + (x677) * (x1772 - x1785) +
             (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
             (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[88] = 60000000.0 * sc[19] * x1661 - 60000000.0 * sc[19] * x1662 +
          sc[20] * x8265 + x10317 + x1673 * x556 - x1685 * x556 + x2137 +
          x5734 +
          (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 -
           x2043 * x680 + x2112 * x674 - x556 * x680) *
            (x1822 - x1852) +
          (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 +
           x2043 * x681 - x2097 * x658 + x556 * x681) *
            (x977 - x978 + (x674) * (x1822 - x1852)) +
          (-x2097 * x65) *
            (x1673 - x1685 + (-x680) * (x1822 - x1852) +
             (x681) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x682) *
               (-x1661 + x1662 + (x677) * (x1822 - x1852) +
                (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
                (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                          (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
          (-60000000.0 * sc[19] * x679 - x2097 * x599) *
            (-x1517 + x854 + (x675) * (x1822 - x1852) +
             (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
          (x2043 * x682 + x556 * x682) *
            (-x1661 + x1662 + (x677) * (x1822 - x1852) +
             (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
             (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[111] =
    60000000.0 * sc[19] * x1687 - 60000000.0 * sc[19] * x345 - sc[19] * x7546 +
    sc[20] * x9036 + x10317 - x1680 * x556 + x1710 * x556 +
    6600000.0 * x1833 * x233 * x72 + x2137 + x5829 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1875 - x1903) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-x2097 * x65) *
      (-x1680 + x1710 + (-x680) * (x1875 - x1903) +
       (x681) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x682) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (x2043 * x682 + x556 * x682) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[134] =
    60000000.0 * sc[19] * x1669 - 60000000.0 * sc[19] * x1751 - sc[19] * x9134 +
    x10317 + x1748 * x556 - x1756 * x556 + x5955 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1946 - x1986) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-x2097 * x65) *
      (x1748 - x1756 + (-x680) * (x1946 - x1986) +
       (x681) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x682) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (x2043 * x682 + x556 * x682) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[157] =
    60000000.0 * sc[19] * x1760 - 60000000.0 * sc[19] * x1762 -
    9260000.0 * sc[19] + x10317 - x1764 * x556 + x323 * x556 + x6053 + x6093 +
    x9986 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x2026 - x2051) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-x2097 * x65) *
      (-x1764 + x323 + (-x680) * (x2026 - x2051) +
       (x681) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x682) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (x2043 * x682 + x556 * x682) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[180] =
    -sc[19] * x10007 + 60000000.0 * sc[19] * x1768 -
    60000000.0 * sc[19] * x1769 + x10317 - x1773 * x556 + x225 * x556 + x6093 +
    x6136 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x2093 - x2104) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-x2097 * x65) *
      (-x1773 + x225 + (-x680) * (x2093 - x2104) +
       (x681) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x682) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (x2043 * x682 + x556 * x682) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[203] =
    50000000.0 * sc[14] * x1574 - 50000000.0 * sc[14] * x1575 -
    sc[19] * x10563 + 60000000.0 * sc[19] * x1775 -
    60000000.0 * sc[19] * x1776 + sc[20] * x10566 + x10317 + x10347 * x16 +
    x1779 * x556 - x1784 * x556 + x6093 + x6227 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1449 - x2150) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-x2097 * x65) *
      (x1779 - x1784 + (-x680) * (x1449 - x2150) +
       (x681) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x682) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (x2043 * x682 + x556 * x682) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[226] =
    50000000.0 * sc[14] * x796 - 50000000.0 * sc[14] * x986 +
    60000000.0 * sc[19] * x1778 - 60000000.0 * sc[19] * x1780 - sc[19] * x86 +
    x10317 + x1821 * x556 - x1856 * x556 + x6312 + x649 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x2145 - x2193) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-x2097 * x65) *
      (x1821 - x1856 + (-x680) * (x2145 - x2193) +
       (x681) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x682) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (x2043 * x682 + x556 * x682) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[249] =
    -60000000.0 * sc[19] * x1678 + 60000000.0 * sc[19] * x1797 +
    60000000.0 * sc[20] * x1238 + x10317 + x1836 * x556 - x1841 * x556 + x6437 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (-x2275 + x468) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-x2097 * x65) *
      (x1836 - x1841 + (-x680) * (-x2275 + x468) +
       (x681) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x682) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (x2043 * x682 + x556 * x682) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[272] =
    -60000000.0 * sc[19] * x1663 + 60000000.0 * sc[19] * x1750 + x10317 -
    x1876 * x556 + x556 * x758 + x649 + x6534 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1516 - x2331) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-x2097 * x65) *
      (-x1876 + x758 + (-x680) * (x1516 - x2331) +
       (x681) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x682) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (x2043 * x682 + x556 * x682) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[295] =
    60000000.0 * sc[19] * x1761 - 60000000.0 * sc[19] * x1765 + x10317 +
    x1879 * x556 - x1894 * x556 + 6600000.0 * x233 * x66 * x72 + x6093 + x6612 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1407 - x2367) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-x2097 * x65) *
      (x1879 - x1894 + (-x680) * (x1407 - x2367) +
       (x681) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x682) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (x2043 * x682 + x556 * x682) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[318] =
    60000000.0 * sc[19] * x1830 - 60000000.0 * sc[19] * x1831 + x10317 +
    x10739 + x1896 * x556 - x1901 * x2043 - x1901 * x556 + x2135 + x6680 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (-x1050 + x754) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-x2097 * x65) *
      (x1896 - x1901 + (-x680) * (-x1050 + x754) +
       (x681) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x682) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (x2043 * x682 + x556 * x682) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[341] =
    60000000.0 * sc[19] * x1834 - 60000000.0 * sc[19] * x1835 + x1028 + x10317 -
    x1901 * x2043 - x1901 * x556 + x2135 + x556 * x566 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1036 - x622) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-x2097 * x65) *
      (-x1901 + x566 + (-x680) * (x1036 - x622) +
       (x681) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x682) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (x2043 * x682 + x556 * x682) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[364] =
    60000000.0 * sc[19] * x1838 - 60000000.0 * sc[19] * x1842 + x10317 -
    x1823 * x556 + x1908 * x556 + x2135 + x624 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1297 - x130) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-x2097 * x65) *
      (-x1823 + x1908 + (-x680) * (x1297 - x130) +
       (x681) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x682) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (x2043 * x682 + x556 * x682) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[387] =
    50000000.0 * sc[14] * x1677 - 60000000.0 * sc[19] * x1848 + x10164 +
    x10375 + x1078 * x2112 - x1081 * x2112 + x1636 + x169 * x2043 +
    x169 * x556 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (-x504 + x846) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-x2097 * x65) *
      (x169 - x1845 + (-x680) * (-x504 + x846) +
       (x681) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x682) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (x2043 * x682 + x556 * x682) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[410] =
    60000000.0 * sc[19] * x1843 - 60000000.0 * sc[19] * x1850 + x10164 +
    x10317 + x1636 + x1892 * x556 + x2027 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (-x1080 + x849) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-x2097 * x65) *
      (-x1845 + x1892 + (-x680) * (-x1080 + x849) +
       (x681) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x682) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (x2043 * x682 + x556 * x682) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[433] =
    50000000.0 * sc[14] * x1692 - 60000000.0 * sc[19] * x1855 + x10164 +
    x10375 - x1083 * x2112 + x1085 * x2112 + x1636 + x1888 * x2043 +
    x1888 * x556 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (-x1080 + x1782) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-x2097 * x65) *
      (-x1845 + x1888 + (-x680) * (-x1080 + x1782) +
       (x681) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x682) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (x2043 * x682 + x556 * x682) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[456] =
    -sc[0] * x261 - 50000000.0 * sc[14] * x1720 + 50000000.0 * sc[14] * x184 +
    60000000.0 * sc[19] * x1825 - 60000000.0 * sc[19] * x1827 - sc[4] * x7546 -
    sc[5] * x9134 - 9260000.0 * sc[6] - sc[7] * x10007 - sc[8] * x10563 -
    sc[9] * x86 + x10164 - x10292 * x16 + x10317 + x1900 * x556 -
    60000000.0 * x435 + x492 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x1033 - x971) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-x2097 * x65) *
      (-x1845 + x1900 + (-x680) * (x1033 - x971) +
       (x681) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x682) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (x2043 * x682 + x556 * x682) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[479] =
    60000000.0 * sc[10] * x1238 + 50000000.0 * sc[14] * x1730 -
    60000000.0 * sc[19] * x1832 + sc[3] * x8265 + sc[4] * x9036 +
    sc[8] * x10566 + x10164 + x10201 + x10375 - x1083 * x2112 + x1090 * x2112 +
    x1173 + x1636 + x1943 * x2043 + x1943 * x556 + x315 + x8148 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (-x1080 + x929) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-x2097 * x65) *
      (-x1845 + x1943 + (-x680) * (-x1080 + x929) +
       (x681) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x682) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (x2043 * x682 + x556 * x682) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[502] =
    -60000000.0 * sc[19] * x1846 + x10164 + x10375 + x1944 * x556 + x7287 +
    (50000000.0 * sc[14] * x675 - 60000000.0 * sc[19] * x677 - x2043 * x680 +
     x2112 * x674 - x556 * x680) *
      (x568 - x892) +
    (50000000.0 * sc[14] * x676 - 60000000.0 * sc[19] * x678 + x2043 * x681 -
     x2097 * x658 + x556 * x681) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-x2097 * x65) *
      (-x1845 + x1944 + (-x680) * (x568 - x892) +
       (x681) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x682) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (-60000000.0 * sc[19] * x679 - x2097 * x599) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (x2043 * x682 + x556 * x682) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[20] =
    sc[19] * x261 + 60000000.0 * sc[19] * x827 - 60000000.0 * sc[19] * x961 +
    1800000.0 * sc[1] * x520 - 1800000.0 * sc[20] * x1277 +
    90000.0 * sc[3] * x520 + 24000000.0 * sc[4] * x520 +
    11000000.0 * sc[8] * x520 + x1654 + x2197 * x520 + x2364 * x760 -
    x2364 * x823 + x736 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x1465 + x972) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x644 - x855 + (x674) * (-x1465 + x972)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x927 - x956 +
       (-x603) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                  (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
       (-x561) *
         (x827 - x961 + (x677) * (-x1465 + x972) +
          (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
          (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                    (x676) * (x644 - x855 + (x674) * (-x1465 + x972))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1014 + x987 + (x675) * (-x1465 + x972) +
       (x676) * (x644 - x855 + (x674) * (-x1465 + x972))) +
    (x2364 * x682) *
      (x827 - x961 + (x677) * (-x1465 + x972) +
       (x678) * (x644 - x855 + (x674) * (-x1465 + x972)) +
       (x679) * (-x1014 + x987 + (x675) * (-x1465 + x972) +
                 (x676) * (x644 - x855 + (x674) * (-x1465 + x972))));
  J[43] =
    60000000.0 * sc[19] * x1064 - 60000000.0 * sc[19] * x969 +
    1800000.0 * sc[1] * x540 + 90000.0 * sc[3] * x540 +
    24000000.0 * sc[4] * x540 + 11000000.0 * sc[8] * x540 + x10268 +
    x1030 * x2364 - 1800000.0 * x1284 - x1508 * x2364 + x1647 + x2176 -
    1800000.0 * x478 + x608 + x618 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1649 - x1694) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x893 - x899 + (x674) * (x1649 - x1694)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1561 - x494 +
       (-x603) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                  (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
       (-x561) *
         (x1064 - x969 + (x677) * (x1649 - x1694) +
          (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
          (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                    (x676) * (x893 - x899 + (x674) * (x1649 - x1694))))) +
    (60000000.0 * sc[19] * x679) *
      (x1211 - x1389 + (x675) * (x1649 - x1694) +
       (x676) * (x893 - x899 + (x674) * (x1649 - x1694))) +
    (x2364 * x682) *
      (x1064 - x969 + (x677) * (x1649 - x1694) +
       (x678) * (x893 - x899 + (x674) * (x1649 - x1694)) +
       (x679) * (x1211 - x1389 + (x675) * (x1649 - x1694) +
                 (x676) * (x893 - x899 + (x674) * (x1649 - x1694))));
  J[66] =
    60000000.0 * sc[19] * x1640 - 60000000.0 * sc[19] * x718 +
    1800000.0 * sc[1] * x1208 + 90000.0 * sc[3] * x1208 +
    24000000.0 * sc[4] * x1208 + 11000000.0 * sc[8] * x1208 + x10268 +
    x1208 * x2197 + x1639 * x2364 - x1643 * x2364 + x1647 + x7458 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1772 - x1785) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x970 - x973 + (x674) * (x1772 - x1785)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1660 - x1726 +
       (-x603) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                  (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
       (-x561) *
         (x1640 - x718 + (x677) * (x1772 - x1785) +
          (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
          (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                    (x676) * (x970 - x973 + (x674) * (x1772 - x1785))))) +
    (60000000.0 * sc[19] * x679) *
      (x1419 - x1461 + (x675) * (x1772 - x1785) +
       (x676) * (x970 - x973 + (x674) * (x1772 - x1785))) +
    (x2364 * x682) *
      (x1640 - x718 + (x677) * (x1772 - x1785) +
       (x678) * (x970 - x973 + (x674) * (x1772 - x1785)) +
       (x679) * (x1419 - x1461 + (x675) * (x1772 - x1785) +
                 (x676) * (x970 - x973 + (x674) * (x1772 - x1785))));
  J[89] =
    -60000000.0 * sc[19] * x1661 + 60000000.0 * sc[19] * x1662 +
    1800000.0 * sc[1] * x1658 - sc[20] * x8265 + 90000.0 * sc[3] * x1658 +
    24000000.0 * sc[4] * x1658 + 11000000.0 * sc[8] * x1658 + x10268 -
    90000.0 * x1284 + x1647 + x1658 * x2197 + x1673 * x2364 - x1685 * x2364 -
    90000.0 * x478 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1822 - x1852) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x977 - x978 + (x674) * (x1822 - x1852)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1757 - x1759 +
       (-x603) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                  (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
       (-x561) *
         (-x1661 + x1662 + (x677) * (x1822 - x1852) +
          (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
          (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                    (x676) * (x977 - x978 + (x674) * (x1822 - x1852))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1517 + x854 + (x675) * (x1822 - x1852) +
       (x676) * (x977 - x978 + (x674) * (x1822 - x1852))) +
    (x2364 * x682) *
      (-x1661 + x1662 + (x677) * (x1822 - x1852) +
       (x678) * (x977 - x978 + (x674) * (x1822 - x1852)) +
       (x679) * (-x1517 + x854 + (x675) * (x1822 - x1852) +
                 (x676) * (x977 - x978 + (x674) * (x1822 - x1852))));
  J[112] =
    -60000000.0 * sc[19] * x1687 + 60000000.0 * sc[19] * x345 + sc[19] * x7546 +
    1800000.0 * sc[1] * x182 - sc[20] * x9036 + 90000.0 * sc[3] * x182 +
    24000000.0 * sc[4] * x182 + 11000000.0 * sc[8] * x182 + x10268 -
    24000000.0 * x1284 + x1647 - x1680 * x2364 + x1710 * x2364 + x182 * x2197 -
    24000000.0 * x478 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1875 - x1903) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x980 - x981 + (x674) * (x1875 - x1903)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1790 - x1824 +
       (-x603) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                  (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
       (-x561) *
         (-x1687 + x345 + (x677) * (x1875 - x1903) +
          (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
          (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                    (x676) * (x980 - x981 + (x674) * (x1875 - x1903))))) +
    (60000000.0 * sc[19] * x679) *
      (x1519 - x1521 + (x675) * (x1875 - x1903) +
       (x676) * (x980 - x981 + (x674) * (x1875 - x1903))) +
    (x2364 * x682) *
      (-x1687 + x345 + (x677) * (x1875 - x1903) +
       (x678) * (x980 - x981 + (x674) * (x1875 - x1903)) +
       (x679) * (x1519 - x1521 + (x675) * (x1875 - x1903) +
                 (x676) * (x980 - x981 + (x674) * (x1875 - x1903))));
  J[135] =
    -60000000.0 * sc[19] * x1669 + 60000000.0 * sc[19] * x1751 +
    sc[19] * x9134 + 1800000.0 * sc[1] * x1897 - 24000000.0 * sc[20] * x1270 +
    90000.0 * sc[3] * x1897 + 24000000.0 * sc[4] * x1897 +
    11000000.0 * sc[8] * x1897 + x10273 * x10476 - x10308 * x10476 -
    4.375896e+86 * x10378 - 5.3067e+88 * x1062 * x428 +
    4.375896e+86 * x123 * x1477 - 2.562e+47 * x1474 * x2363 + x1748 * x2364 -
    x1756 * x2364 + 2.562e+47 * x233 * x2363 * x748 + 5.3067e+88 * x236 * x428 -
    x321 * (12.0 * x691 * x889 + 1.68 * x691 * x975) - 7.98e+48 * x583 +
    x589 * (12.0 * x691 * x889 + 1.68 * x691 * x975) + x5964 + 7.98e+48 * x887 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1946 - x1986) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x989 - x990 + (x674) * (x1946 - x1986)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1829 - x1860 +
       (-x603) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                  (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
       (-x561) *
         (-x1669 + x1751 + (x677) * (x1946 - x1986) +
          (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
          (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                    (x676) * (x989 - x990 + (x674) * (x1946 - x1986))))) +
    (60000000.0 * sc[19] * x679) *
      (x1523 - x1533 + (x675) * (x1946 - x1986) +
       (x676) * (x989 - x990 + (x674) * (x1946 - x1986))) +
    (x2364 * x682) *
      (-x1669 + x1751 + (x677) * (x1946 - x1986) +
       (x678) * (x989 - x990 + (x674) * (x1946 - x1986)) +
       (x679) * (x1523 - x1533 + (x675) * (x1946 - x1986) +
                 (x676) * (x989 - x990 + (x674) * (x1946 - x1986))));
  J[158] =
    -60000000.0 * sc[19] * x1760 + 60000000.0 * sc[19] * x1762 +
    2660000.0 * sc[19] + 1800000.0 * sc[1] * x1953 - 90000.0 * sc[20] * x1280 +
    90000.0 * sc[3] * x1953 + 24000000.0 * sc[4] * x1953 +
    11000000.0 * sc[8] * x1953 + x10268 + x1647 - x1764 * x2364 +
    x1953 * x2197 + x2364 * x323 - x9986 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x2026 - x2051) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1008 - x1010 + (x674) * (x2026 - x2051)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1881 - x1885 +
       (-x603) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                  (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
       (-x561) *
         (-x1760 + x1762 + (x677) * (x2026 - x2051) +
          (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
          (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                    (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))))) +
    (60000000.0 * sc[19] * x679) *
      (x1534 - x1535 + (x675) * (x2026 - x2051) +
       (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))) +
    (x2364 * x682) *
      (-x1760 + x1762 + (x677) * (x2026 - x2051) +
       (x678) * (x1008 - x1010 + (x674) * (x2026 - x2051)) +
       (x679) * (x1534 - x1535 + (x675) * (x2026 - x2051) +
                 (x676) * (x1008 - x1010 + (x674) * (x2026 - x2051))));
  J[181] =
    sc[19] * x10007 - 60000000.0 * sc[19] * x1768 +
    60000000.0 * sc[19] * x1769 + x10268 + x1647 - x1773 * x2364 + x20 +
    x225 * x2364 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x2093 - x2104) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1011 - x1013 + (x674) * (x2093 - x2104)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1911 - x1951 +
       (-x603) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                  (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
       (-x561) *
         (-x1768 + x1769 + (x677) * (x2093 - x2104) +
          (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
          (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                    (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))))) +
    (60000000.0 * sc[19] * x679) *
      (x1563 - x1573 + (x675) * (x2093 - x2104) +
       (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))) +
    (x2364 * x682) *
      (-x1768 + x1769 + (x677) * (x2093 - x2104) +
       (x678) * (x1011 - x1013 + (x674) * (x2093 - x2104)) +
       (x679) * (x1563 - x1573 + (x675) * (x2093 - x2104) +
                 (x676) * (x1011 - x1013 + (x674) * (x2093 - x2104))));
  J[204] =
    sc[14] * x6237 - 60000000.0 * sc[19] * x1775 + 60000000.0 * sc[19] * x1776 +
    1800000.0 * sc[1] * x447 - sc[20] * x10566 + 90000.0 * sc[3] * x447 +
    24000000.0 * sc[4] * x447 + 11000000.0 * sc[8] * x447 + x10268 + x119 -
    11000000.0 * x1284 + x1647 + x1779 * x2364 - x1784 * x2364 + x2197 * x447 -
    11000000.0 * x478 + x6233 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1449 - x2150) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1017 - x1018 + (x674) * (x1449 - x2150)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1954 - x1957 +
       (-x603) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                  (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
       (-x561) *
         (-x1775 + x1776 + (x677) * (x1449 - x2150) +
          (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
          (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                    (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))))) +
    (60000000.0 * sc[19] * x679) *
      (x1574 - x1575 + (x675) * (x1449 - x2150) +
       (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))) +
    (x2364 * x682) *
      (-x1775 + x1776 + (x677) * (x1449 - x2150) +
       (x678) * (x1017 - x1018 + (x674) * (x1449 - x2150)) +
       (x679) * (x1574 - x1575 + (x675) * (x1449 - x2150) +
                 (x676) * (x1017 - x1018 + (x674) * (x1449 - x2150))));
  J[227] =
    -60000000.0 * sc[19] * x1778 + 60000000.0 * sc[19] * x1780 + sc[19] * x86 +
    1800000.0 * sc[1] * x2003 - 11000000.0 * sc[20] * x1266 +
    90000.0 * sc[3] * x2003 + 24000000.0 * sc[4] * x2003 +
    11000000.0 * sc[8] * x2003 + x1654 + x1821 * x2364 - x1856 * x2364 +
    x2003 * x2197 + x736 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x2145 - x2193) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1019 - x1020 + (x674) * (x2145 - x2193)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1960 - x1966 +
       (-x603) * (x796 - x986 + (x675) * (x2145 - x2193) +
                  (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
       (-x561) *
         (-x1778 + x1780 + (x677) * (x2145 - x2193) +
          (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
          (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                    (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))))) +
    (60000000.0 * sc[19] * x679) *
      (x796 - x986 + (x675) * (x2145 - x2193) +
       (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))) +
    (x2364 * x682) *
      (-x1778 + x1780 + (x677) * (x2145 - x2193) +
       (x678) * (x1019 - x1020 + (x674) * (x2145 - x2193)) +
       (x679) * (x796 - x986 + (x675) * (x2145 - x2193) +
                 (x676) * (x1019 - x1020 + (x674) * (x2145 - x2193))));
  J[250] =
    60000000.0 * sc[19] * x1678 - 60000000.0 * sc[19] * x1797 +
    1800000.0 * sc[1] * x1981 - sc[1] * x608 * x828 -
    60000000.0 * sc[20] * x1238 + sc[20] * x315 * x828 +
    90000.0 * sc[3] * x1981 + 24000000.0 * sc[4] * x1981 +
    11000000.0 * sc[8] * x1981 + 6.405e+46 * x10259 + x10273 * x10667 -
    x10308 * x10667 - 1.093974e+86 * x10378 - 1.326675e+88 * x1062 * x428 +
    1.093974e+86 * x123 * x1477 - 6.405e+46 * x1474 * x2363 + x1836 * x2364 -
    x1841 * x2364 + 1.326675e+88 * x236 * x428 - 1.995e+48 * x583 + x6444 +
    1.995e+48 * x887 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x2275 + x468) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1023 - x1025 + (x674) * (-x2275 + x468)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1971 - x1973 +
       (-x603) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                  (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
       (-x561) *
         (x1678 - x1797 + (x677) * (-x2275 + x468) +
          (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
          (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                    (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))))) +
    (60000000.0 * sc[19] * x679) *
      (x1584 - x1586 + (x675) * (-x2275 + x468) +
       (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))) +
    (x2364 * x682) *
      (x1678 - x1797 + (x677) * (-x2275 + x468) +
       (x678) * (x1023 - x1025 + (x674) * (-x2275 + x468)) +
       (x679) * (x1584 - x1586 + (x675) * (-x2275 + x468) +
                 (x676) * (x1023 - x1025 + (x674) * (-x2275 + x468))));
  J[273] =
    60000000.0 * sc[19] * x1663 - 60000000.0 * sc[19] * x1750 +
    1800000.0 * sc[1] * x951 + 90000.0 * sc[3] * x951 +
    24000000.0 * sc[4] * x951 + 11000000.0 * sc[8] * x951 + x1654 -
    x1876 * x2364 + x2197 * x951 + x2364 * x758 + x736 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1516 - x2331) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1027 - x1031 + (x674) * (x1516 - x2331)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1983 + x926 +
       (-x603) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                  (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
       (-x561) *
         (x1663 - x1750 + (x677) * (x1516 - x2331) +
          (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
          (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                    (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))))) +
    (60000000.0 * sc[19] * x679) *
      (x1587 - x1588 + (x675) * (x1516 - x2331) +
       (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))) +
    (x2364 * x682) *
      (x1663 - x1750 + (x677) * (x1516 - x2331) +
       (x678) * (x1027 - x1031 + (x674) * (x1516 - x2331)) +
       (x679) * (x1587 - x1588 + (x675) * (x1516 - x2331) +
                 (x676) * (x1027 - x1031 + (x674) * (x1516 - x2331))));
  J[296] =
    -60000000.0 * sc[19] * x1761 + 60000000.0 * sc[19] * x1765 +
    1800000.0 * sc[1] * x1559 + 90000.0 * sc[3] * x1559 +
    24000000.0 * sc[4] * x1559 + 11000000.0 * sc[8] * x1559 + x10268 +
    x1559 * x2197 + x1647 + x1879 * x2364 - x1894 * x2364 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1407 - x2367) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1063 - x1065 + (x674) * (x1407 - x2367)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1984 - x652 +
       (-x603) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                  (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
       (-x561) *
         (-x1761 + x1765 + (x677) * (x1407 - x2367) +
          (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
          (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                    (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1459 + x1589 + (x675) * (x1407 - x2367) +
       (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))) +
    (x2364 * x682) *
      (-x1761 + x1765 + (x677) * (x1407 - x2367) +
       (x678) * (x1063 - x1065 + (x674) * (x1407 - x2367)) +
       (x679) * (-x1459 + x1589 + (x675) * (x1407 - x2367) +
                 (x676) * (x1063 - x1065 + (x674) * (x1407 - x2367))));
  J[319] =
    -60000000.0 * sc[19] * x1830 + 60000000.0 * sc[19] * x1831 + x1647 +
    x1896 * x2364 - x1901 * x2364 + x20 + x524 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x1050 + x754) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1068 - x1069 + (x674) * (-x1050 + x754)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1996 - x1998 +
       (-x603) * (x884 - x890 + (x675) * (-x1050 + x754) +
                  (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
       (-x561) *
         (-x1830 + x1831 + (x677) * (-x1050 + x754) +
          (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
          (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                    (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))))) +
    (60000000.0 * sc[19] * x679) *
      (x884 - x890 + (x675) * (-x1050 + x754) +
       (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))) +
    (x2364 * x682) *
      (-x1830 + x1831 + (x677) * (-x1050 + x754) +
       (x678) * (x1068 - x1069 + (x674) * (-x1050 + x754)) +
       (x679) * (x884 - x890 + (x675) * (-x1050 + x754) +
                 (x676) * (x1068 - x1069 + (x674) * (-x1050 + x754))));
  J[342] =
    -60000000.0 * sc[19] * x1834 + 60000000.0 * sc[19] * x1835 +
    1800000.0 * sc[1] * x553 + 90000.0 * sc[3] * x553 +
    24000000.0 * sc[4] * x553 + 11000000.0 * sc[8] * x553 + sc[8] * x6237 +
    x1647 - x1901 * x2364 + x2197 * x553 + x2364 * x566 + x524 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1036 - x622) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1070 - x668 + (x674) * (x1036 - x622)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1998 + x909 +
       (-x603) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                  (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
       (-x561) *
         (-x1834 + x1835 + (x677) * (x1036 - x622) +
          (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
          (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                    (x676) * (x1070 - x668 + (x674) * (x1036 - x622))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1648 + x898 + (x675) * (x1036 - x622) +
       (x676) * (x1070 - x668 + (x674) * (x1036 - x622))) +
    (x2364 * x682) *
      (-x1834 + x1835 + (x677) * (x1036 - x622) +
       (x678) * (x1070 - x668 + (x674) * (x1036 - x622)) +
       (x679) * (-x1648 + x898 + (x675) * (x1036 - x622) +
                 (x676) * (x1070 - x668 + (x674) * (x1036 - x622))));
  J[365] =
    -60000000.0 * sc[19] * x1838 + 60000000.0 * sc[19] * x1842 +
    1800000.0 * sc[1] * x1724 + 90000.0 * sc[3] * x1724 +
    24000000.0 * sc[4] * x1724 + 11000000.0 * sc[8] * x1724 - x1823 * x2364 +
    x1908 * x2364 + x524 + x545 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1297 - x130) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1074 - x1077 + (x674) * (x1297 - x130)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (x1059 - x600 +
       (-x603) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                  (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
       (-x561) *
         (-x1838 + x1842 + (x677) * (x1297 - x130) +
          (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
          (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                    (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))))) +
    (60000000.0 * sc[19] * x679) *
      (x1666 - x1671 + (x675) * (x1297 - x130) +
       (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))) +
    (x2364 * x682) *
      (-x1838 + x1842 + (x677) * (x1297 - x130) +
       (x678) * (x1074 - x1077 + (x674) * (x1297 - x130)) +
       (x679) * (x1666 - x1671 + (x675) * (x1297 - x130) +
                 (x676) * (x1074 - x1077 + (x674) * (x1297 - x130))));
  J[388] =
    60000000.0 * sc[19] * x1848 + x11684 + x169 * x2364 + x543 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x504 + x846) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1078 - x1081 + (x674) * (-x504 + x846)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                  (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
       (-x561) *
         (-x1843 + x1848 + (x677) * (-x504 + x846) +
          (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
          (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                    (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))))) +
    (60000000.0 * sc[19] * x679) *
      (x1677 - x1681 + (x675) * (-x504 + x846) +
       (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))) +
    (x2364 * x682) *
      (-x1843 + x1848 + (x677) * (-x504 + x846) +
       (x678) * (x1078 - x1081 + (x674) * (-x504 + x846)) +
       (x679) * (x1677 - x1681 + (x675) * (-x504 + x846) +
                 (x676) * (x1078 - x1081 + (x674) * (-x504 + x846))));
  J[411] =
    60000000.0 * sc[19] * x1850 + x11684 + x1892 * x2364 + x343 + x543 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x1080 + x849) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1082 - x1083 + (x674) * (-x1080 + x849)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1364 + x1789 +
       (-x603) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                  (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
       (-x561) *
         (-x1843 + x1850 + (x677) * (-x1080 + x849) +
          (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
          (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                    (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1681 + x1689 + (x675) * (-x1080 + x849) +
       (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))) +
    (x2364 * x682) *
      (-x1843 + x1850 + (x677) * (-x1080 + x849) +
       (x678) * (x1082 - x1083 + (x674) * (-x1080 + x849)) +
       (x679) * (-x1681 + x1689 + (x675) * (-x1080 + x849) +
                 (x676) * (x1082 - x1083 + (x674) * (-x1080 + x849))));
  J[434] =
    60000000.0 * sc[19] * x1855 + x11684 + x1888 * x2364 + x543 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x1080 + x1782) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1364 + x1898 +
       (-x603) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                  (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
       (-x561) *
         (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
          (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
          (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                    (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
       (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))) +
    (x2364 * x682) *
      (-x1843 + x1855 + (x677) * (-x1080 + x1782) +
       (x678) * (-x1083 + x1085 + (x674) * (-x1080 + x1782)) +
       (x679) * (-x1681 + x1692 + (x675) * (-x1080 + x1782) +
                 (x676) * (-x1083 + x1085 + (x674) * (-x1080 + x1782))));
  J[457] =
    sc[0] * x261 - 60000000.0 * sc[19] * x1825 + 60000000.0 * sc[19] * x1827 +
    1.33e+48 * sc[1] * x134 * x886 + sc[4] * x7546 + sc[5] * x9134 +
    2660000.0 * sc[6] + sc[7] * x10007 + sc[9] * x86 + x1900 * x2364 +
    60000000.0 * x435 + x543 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x1033 - x971) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1086 - x1087 + (x674) * (x1033 - x971)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1364 + x1959 +
       (-x603) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                  (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
       (-x561) *
         (-x1825 + x1827 + (x677) * (x1033 - x971) +
          (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
          (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                    (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1720 + x184 + (x675) * (x1033 - x971) +
       (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))) +
    (x2364 * x682) *
      (-x1825 + x1827 + (x677) * (x1033 - x971) +
       (x678) * (x1086 - x1087 + (x674) * (x1033 - x971)) +
       (x679) * (-x1720 + x184 + (x675) * (x1033 - x971) +
                 (x676) * (x1086 - x1087 + (x674) * (x1033 - x971))));
  J[480] =
    -1800000.0 * sc[0] * x1277 - 60000000.0 * sc[10] * x1238 +
    60000000.0 * sc[19] * x1832 + 1800000.0 * sc[1] * x1283 +
    90000.0 * sc[3] * x1283 - sc[3] * x8265 + 24000000.0 * sc[4] * x1283 -
    sc[4] * x9036 - 24000000.0 * sc[5] * x1270 - 90000.0 * sc[6] * x1280 -
    sc[8] * x10566 + 11000000.0 * sc[8] * x1283 - 11000000.0 * sc[9] * x1266 -
    x10201 + x10268 - x1114 + x11684 + x1647 - x1845 * x2364 + x1943 * x2364 -
    x315 + x526 + x8149 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (-x1080 + x929) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1364 + x557 +
       (-x603) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                  (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
       (-x561) *
         (x1832 - x1843 + (x677) * (-x1080 + x929) +
          (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
          (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                    (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))))) +
    (60000000.0 * sc[19] * x679) *
      (-x1681 + x1730 + (x675) * (-x1080 + x929) +
       (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))) +
    (x2364 * x682) *
      (x1832 - x1843 + (x677) * (-x1080 + x929) +
       (x678) * (-x1083 + x1090 + (x674) * (-x1080 + x929)) +
       (x679) * (-x1681 + x1730 + (x675) * (-x1080 + x929) +
                 (x676) * (-x1083 + x1090 + (x674) * (-x1080 + x929))));
  J[503] =
    60000000.0 * sc[19] * x1846 + x11684 + x1944 * x2364 + x543 +
    (60000000.0 * sc[19] * x677 - x2364 * x680) * (x568 - x892) +
    (60000000.0 * sc[19] * x678 + x2364 * x681) *
      (x1099 - x1104 + (x674) * (x568 - x892)) +
    (-1800000.0 * sc[1] * x555 - 90000.0 * sc[3] * x555 -
     24000000.0 * sc[4] * x555 - 11000000.0 * sc[8] * x555 - x2197 * x555) *
      (-x1364 + x1789 +
       (-x603) * (x1631 - x1670 + (x675) * (x568 - x892) +
                  (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
       (-x561) *
         (-x1843 + x1846 + (x677) * (x568 - x892) +
          (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
          (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                    (x676) * (x1099 - x1104 + (x674) * (x568 - x892))))) +
    (60000000.0 * sc[19] * x679) *
      (x1631 - x1670 + (x675) * (x568 - x892) +
       (x676) * (x1099 - x1104 + (x674) * (x568 - x892))) +
    (x2364 * x682) *
      (-x1843 + x1846 + (x677) * (x568 - x892) +
       (x678) * (x1099 - x1104 + (x674) * (x568 - x892)) +
       (x679) * (x1631 - x1670 + (x675) * (x568 - x892) +
                 (x676) * (x1099 - x1104 + (x674) * (x568 - x892))));
  J[21] = 0;
  J[44] = 0;
  J[67] = 0;
  J[90] = 0;
  J[113] = 0;
  J[136] = 0;
  J[159] = 0;
  J[182] = 0;
  J[205] = 0;
  J[228] = 0;
  J[251] = 0;
  J[274] = 0;
  J[297] = 0;
  J[320] = 0;
  J[343] = 0;
  J[366] = 0;
  J[389] = 0;
  J[412] = 0;
  J[435] = 0;
  J[458] = 0;
  J[481] = 0;
  J[504] = 0;

  for (int k = 0; k < 22; k++) {
    J[506 + k] = (wdot_pert1[k] - wdot[k]) / (pertT);
  }
  amrex::Real c_R[22], dcRdT[22], e_RT[22];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 22; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[506 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 22; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 22; ++m) {
      dehmixdc += eh_RT[m] * J[k * 23 + m];
    }
    J[k * 23 + 22] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[528] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[22];

  for (int k = 0; k < 22; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 22; k++) {
    J[506 + k] *= 1.e-6;
    J[k * 23 + 22] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 90;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 9966;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 22;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 2.01600000E+00;
  WT[1] = 1.00800000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 3.19980000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 1.80150000E+01;
  WT[6] = 3.30060000E+01;
  WT[7] = 3.40140000E+01;
  WT[8] = 1.50350000E+01;
  WT[9] = 1.60430000E+01;
  WT[10] = 2.80100000E+01;
  WT[11] = 4.40090000E+01;
  WT[12] = 3.00260000E+01;
  WT[13] = 2.60380000E+01;
  WT[14] = 2.80540000E+01;
  WT[15] = 3.00700000E+01;
  WT[16] = 4.10290000E+01;
  WT[17] = 4.20370000E+01;
  WT[18] = 4.40530000E+01;
  WT[19] = 4.10730000E+01;
  WT[20] = 4.20810000E+01;
  WT[21] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 3.80000000E+01;
  EPS[1] = 1.45000000E+02;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 1.07400000E+02;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 5.72400000E+02;
  EPS[6] = 1.07400000E+02;
  EPS[7] = 1.07400000E+02;
  EPS[8] = 1.44000000E+02;
  EPS[9] = 1.41400000E+02;
  EPS[10] = 9.81000000E+01;
  EPS[11] = 2.44000000E+02;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 2.09000000E+02;
  EPS[14] = 2.80800000E+02;
  EPS[15] = 2.52300000E+02;
  EPS[16] = 1.50000000E+02;
  EPS[17] = 4.36000000E+02;
  EPS[18] = 4.36000000E+02;
  EPS[19] = 2.66800000E+02;
  EPS[20] = 2.66800000E+02;
  EPS[21] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 2.92000000E+00;
  SIG[1] = 2.05000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 3.45800000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 2.60500000E+00;
  SIG[6] = 3.45800000E+00;
  SIG[7] = 3.45800000E+00;
  SIG[8] = 3.80000000E+00;
  SIG[9] = 3.74600000E+00;
  SIG[10] = 3.65000000E+00;
  SIG[11] = 3.76300000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 4.10000000E+00;
  SIG[14] = 3.97100000E+00;
  SIG[15] = 4.30200000E+00;
  SIG[16] = 2.50000000E+00;
  SIG[17] = 3.97000000E+00;
  SIG[18] = 3.97000000E+00;
  SIG[19] = 4.98200000E+00;
  SIG[20] = 4.98200000E+00;
  SIG[21] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 1.84400000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 7.90000000E-01;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 1.60000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 2.60000000E+00;
  POL[10] = 1.95000000E+00;
  POL[11] = 2.65000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 2.80000000E+02;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 3.80000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 4.00000000E+00;
  ZROT[6] = 1.00000000E+00;
  ZROT[7] = 3.80000000E+00;
  ZROT[8] = 0.00000000E+00;
  ZROT[9] = 1.30000000E+01;
  ZROT[10] = 1.80000000E+00;
  ZROT[11] = 2.10000000E+00;
  ZROT[12] = 2.00000000E+00;
  ZROT[13] = 2.50000000E+00;
  ZROT[14] = 1.50000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 1.00000000E+00;
  ZROT[17] = 2.00000000E+00;
  ZROT[18] = 2.00000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 1.00000000E+00;
  ZROT[21] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 1;
  NLIN[1] = 0;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 2;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 1;
  NLIN[11] = 1;
  NLIN[12] = 2;
  NLIN[13] = 1;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.38347555E+01;
  COFETA[1] = 1.00106621E+00;
  COFETA[2] = -4.98105694E-02;
  COFETA[3] = 2.31450475E-03;
  COFETA[4] = -2.04078253E+01;
  COFETA[5] = 3.65436395E+00;
  COFETA[6] = -3.98339635E-01;
  COFETA[7] = 1.75883009E-02;
  COFETA[8] = -1.50926370E+01;
  COFETA[9] = 1.92606504E+00;
  COFETA[10] = -1.73487476E-01;
  COFETA[11] = 7.82572931E-03;
  COFETA[12] = -1.71618439E+01;
  COFETA[13] = 2.68036374E+00;
  COFETA[14] = -2.72570227E-01;
  COFETA[15] = 1.21650964E-02;
  COFETA[16] = -1.50620876E+01;
  COFETA[17] = 1.92606504E+00;
  COFETA[18] = -1.73487476E-01;
  COFETA[19] = 7.82572931E-03;
  COFETA[20] = -1.05420930E+01;
  COFETA[21] = -1.37777266E+00;
  COFETA[22] = 4.20502561E-01;
  COFETA[23] = -2.40627344E-02;
  COFETA[24] = -1.71463359E+01;
  COFETA[25] = 2.68036374E+00;
  COFETA[26] = -2.72570227E-01;
  COFETA[27] = 1.21650964E-02;
  COFETA[28] = -1.71312945E+01;
  COFETA[29] = 2.68036374E+00;
  COFETA[30] = -2.72570227E-01;
  COFETA[31] = 1.21650964E-02;
  COFETA[32] = -2.02316522E+01;
  COFETA[33] = 3.63241793E+00;
  COFETA[34] = -3.95581049E-01;
  COFETA[35] = 1.74725495E-02;
  COFETA[36] = -2.00094678E+01;
  COFETA[37] = 3.57220167E+00;
  COFETA[38] = -3.87936446E-01;
  COFETA[39] = 1.71483254E-02;
  COFETA[40] = -1.66188439E+01;
  COFETA[41] = 2.40307799E+00;
  COFETA[42] = -2.36167638E-01;
  COFETA[43] = 1.05714061E-02;
  COFETA[44] = -2.40015087E+01;
  COFETA[45] = 5.14359547E+00;
  COFETA[46] = -5.74269731E-01;
  COFETA[47] = 2.44937679E-02;
  COFETA[48] = -1.98330663E+01;
  COFETA[49] = 2.69480162E+00;
  COFETA[50] = -1.65880845E-01;
  COFETA[51] = 3.14504769E-03;
  COFETA[52] = -2.33666497E+01;
  COFETA[53] = 4.80350223E+00;
  COFETA[54] = -5.38341336E-01;
  COFETA[55] = 2.32747213E-02;
  COFETA[56] = -2.50655480E+01;
  COFETA[57] = 5.33982977E+00;
  COFETA[58] = -5.89982992E-01;
  COFETA[59] = 2.47780650E-02;
  COFETA[60] = -2.46410962E+01;
  COFETA[61] = 5.19497183E+00;
  COFETA[62] = -5.78827339E-01;
  COFETA[63] = 2.46050921E-02;
  COFETA[64] = -1.92183918E+01;
  COFETA[65] = 3.75164499E+00;
  COFETA[66] = -4.10390993E-01;
  COFETA[67] = 1.80861665E-02;
  COFETA[68] = -2.23395728E+01;
  COFETA[69] = 3.86433912E+00;
  COFETA[70] = -3.41553983E-01;
  COFETA[71] = 1.17083447E-02;
  COFETA[72] = -2.23161511E+01;
  COFETA[73] = 3.86433912E+00;
  COFETA[74] = -3.41553983E-01;
  COFETA[75] = 1.17083447E-02;
  COFETA[76] = -2.51527894E+01;
  COFETA[77] = 5.30723075E+00;
  COFETA[78] = -5.89742369E-01;
  COFETA[79] = 2.49294033E-02;
  COFETA[80] = -2.51406667E+01;
  COFETA[81] = 5.30723075E+00;
  COFETA[82] = -5.89742369E-01;
  COFETA[83] = 2.49294033E-02;
  COFETA[84] = -1.65695492E+01;
  COFETA[85] = 2.39056562E+00;
  COFETA[86] = -2.34558144E-01;
  COFETA[87] = 1.05024037E-02;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 9.24082480E+00;
  COFLAM[1] = -4.69567526E-01;
  COFLAM[2] = 1.15980102E-01;
  COFLAM[3] = -2.61033156E-03;
  COFLAM[4] = -8.57944636E-01;
  COFLAM[5] = 3.65436395E+00;
  COFLAM[6] = -3.98339635E-01;
  COFLAM[7] = 1.75883009E-02;
  COFLAM[8] = 1.69268564E+00;
  COFLAM[9] = 1.92606504E+00;
  COFLAM[10] = -1.73487476E-01;
  COFLAM[11] = 7.82572931E-03;
  COFLAM[12] = -1.93717634E+00;
  COFLAM[13] = 2.89110257E+00;
  COFLAM[14] = -2.71096988E-01;
  COFLAM[15] = 1.15344939E-02;
  COFLAM[16] = 1.41666231E+01;
  COFLAM[17] = -3.24630273E+00;
  COFLAM[18] = 5.33877875E-01;
  COFLAM[19] = -2.32905027E-02;
  COFLAM[20] = 2.33729836E+01;
  COFLAM[21] = -8.96536178E+00;
  COFLAM[22] = 1.52828630E+00;
  COFLAM[23] = -7.58551616E-02;
  COFLAM[24] = -1.12959874E+00;
  COFLAM[25] = 2.34014328E+00;
  COFLAM[26] = -1.63245076E-01;
  COFLAM[27] = 5.80319843E-03;
  COFLAM[28] = 8.84006318E-01;
  COFLAM[29] = 1.31525455E+00;
  COFLAM[30] = 1.91773906E-02;
  COFLAM[31] = -4.41642314E-03;
  COFLAM[32] = 1.39937895E+01;
  COFLAM[33] = -4.64256403E+00;
  COFLAM[34] = 9.07728510E-01;
  COFLAM[35] = -4.77274380E-02;
  COFLAM[36] = 1.33091614E+01;
  COFLAM[37] = -4.96140250E+00;
  COFLAM[38] = 1.03295495E+00;
  COFLAM[39] = -5.63420011E-02;
  COFLAM[40] = 1.18777275E+01;
  COFLAM[41] = -3.15463597E+00;
  COFLAM[42] = 6.01972754E-01;
  COFLAM[43] = -3.03211015E-02;
  COFLAM[44] = -1.13649201E+01;
  COFLAM[45] = 5.88177354E+00;
  COFLAM[46] = -5.68651792E-01;
  COFLAM[47] = 2.03561484E-02;
  COFLAM[48] = 5.39305623E+00;
  COFLAM[49] = -2.39312259E+00;
  COFLAM[50] = 7.39585006E-01;
  COFLAM[51] = -4.58435469E-02;
  COFLAM[52] = -7.70164041E+00;
  COFLAM[53] = 4.56884430E+00;
  COFLAM[54] = -4.04747578E-01;
  COFLAM[55] = 1.40841066E-02;
  COFLAM[56] = -1.46152767E+01;
  COFLAM[57] = 6.36251222E+00;
  COFLAM[58] = -5.03831917E-01;
  COFLAM[59] = 1.26120967E-02;
  COFLAM[60] = -1.09902158E+01;
  COFLAM[61] = 4.70647555E+00;
  COFLAM[62] = -2.52272322E-01;
  COFLAM[63] = 1.75186734E-04;
  COFLAM[64] = -5.96382011E+00;
  COFLAM[65] = 4.39355990E+00;
  COFLAM[66] = -3.97598235E-01;
  COFLAM[67] = 1.39749618E-02;
  COFLAM[68] = -8.32870491E+00;
  COFLAM[69] = 3.97067241E+00;
  COFLAM[70] = -2.21252281E-01;
  COFLAM[71] = 1.47870386E-03;
  COFLAM[72] = -9.88396235E+00;
  COFLAM[73] = 4.13890943E+00;
  COFLAM[74] = -1.74918796E-01;
  COFLAM[75] = -3.28392968E-03;
  COFLAM[76] = -2.14189910E+01;
  COFLAM[77] = 9.40840962E+00;
  COFLAM[78] = -9.66247319E-01;
  COFLAM[79] = 3.55085303E-02;
  COFLAM[80] = -1.70514626E+01;
  COFLAM[81] = 7.35906672E+00;
  COFLAM[82] = -6.52820712E-01;
  COFLAM[83] = 1.99982085E-02;
  COFLAM[84] = 1.29305954E+01;
  COFLAM[85] = -3.52816965E+00;
  COFLAM[86] = 6.45498434E-01;
  COFLAM[87] = -3.19375023E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.03270769E+01;
  COFD[1] = 2.19285409E+00;
  COFD[2] = -7.54492786E-02;
  COFD[3] = 3.51398213E-03;
  COFD[4] = -1.14366544E+01;
  COFD[5] = 2.78323501E+00;
  COFD[6] = -1.51214064E-01;
  COFD[7] = 6.75150012E-03;
  COFD[8] = -1.09595844E+01;
  COFD[9] = 2.30836460E+00;
  COFD[10] = -8.76339315E-02;
  COFD[11] = 3.90878445E-03;
  COFD[12] = -1.18989101E+01;
  COFD[13] = 2.57507000E+00;
  COFD[14] = -1.24033737E-01;
  COFD[15] = 5.56694959E-03;
  COFD[16] = -1.09629118E+01;
  COFD[17] = 2.30836460E+00;
  COFD[18] = -8.76339315E-02;
  COFD[19] = 3.90878445E-03;
  COFD[20] = -1.71983144E+01;
  COFD[21] = 4.63881440E+00;
  COFD[22] = -3.86139677E-01;
  COFD[23] = 1.66955099E-02;
  COFD[24] = -1.18998160E+01;
  COFD[25] = 2.57507000E+00;
  COFD[26] = -1.24033737E-01;
  COFD[27] = 5.56694959E-03;
  COFD[28] = -1.19006697E+01;
  COFD[29] = 2.57507000E+00;
  COFD[30] = -1.24033737E-01;
  COFD[31] = 5.56694959E-03;
  COFD[32] = -1.25141403E+01;
  COFD[33] = 2.77873601E+00;
  COFD[34] = -1.50637360E-01;
  COFD[35] = 6.72684281E-03;
  COFD[36] = -1.24693714E+01;
  COFD[37] = 2.76686648E+00;
  COFD[38] = -1.49120141E-01;
  COFD[39] = 6.66220432E-03;
  COFD[40] = -1.17159884E+01;
  COFD[41] = 2.48123210E+00;
  COFD[42] = -1.11322604E-01;
  COFD[43] = 4.99282389E-03;
  COFD[44] = -1.37794466E+01;
  COFD[45] = 3.23973858E+00;
  COFD[46] = -2.09989036E-01;
  COFD[47] = 9.27667906E-03;
  COFD[48] = -1.60528433E+01;
  COFD[49] = 4.11188603E+00;
  COFD[50] = -3.21540884E-01;
  COFD[51] = 1.40482564E-02;
  COFD[52] = -1.34709956E+01;
  COFD[53] = 3.09379603E+00;
  COFD[54] = -1.91268635E-01;
  COFD[55] = 8.47480224E-03;
  COFD[56] = -1.42229344E+01;
  COFD[57] = 3.38669384E+00;
  COFD[58] = -2.28784122E-01;
  COFD[59] = 1.00790953E-02;
  COFD[60] = -1.39924933E+01;
  COFD[61] = 3.26384506E+00;
  COFD[62] = -2.12947087E-01;
  COFD[63] = 9.39743888E-03;
  COFD[64] = -1.22004476E+01;
  COFD[65] = 2.80725489E+00;
  COFD[66] = -1.54291406E-01;
  COFD[67] = 6.88290911E-03;
  COFD[68] = -1.57035004E+01;
  COFD[69] = 3.93614244E+00;
  COFD[70] = -2.99111497E-01;
  COFD[71] = 1.30888229E-02;
  COFD[72] = -1.57045486E+01;
  COFD[73] = 3.93614244E+00;
  COFD[74] = -2.99111497E-01;
  COFD[75] = 1.30888229E-02;
  COFD[76] = -1.43129867E+01;
  COFD[77] = 3.31177824E+00;
  COFD[78] = -2.18945280E-01;
  COFD[79] = 9.64764419E-03;
  COFD[80] = -1.43135474E+01;
  COFD[81] = 3.31177824E+00;
  COFD[82] = -2.18945280E-01;
  COFD[83] = 9.64764419E-03;
  COFD[84] = -1.16906458E+01;
  COFD[85] = 2.47469981E+00;
  COFD[86] = -1.10436257E-01;
  COFD[87] = 4.95273813E-03;
  COFD[88] = -1.14366544E+01;
  COFD[89] = 2.78323501E+00;
  COFD[90] = -1.51214064E-01;
  COFD[91] = 6.75150012E-03;
  COFD[92] = -1.47968875E+01;
  COFD[93] = 4.23027636E+00;
  COFD[94] = -3.36139991E-01;
  COFD[95] = 1.46507621E-02;
  COFD[96] = -1.34230419E+01;
  COFD[97] = 3.48624238E+00;
  COFD[98] = -2.41554467E-01;
  COFD[99] = 1.06263545E-02;
  COFD[100] = -1.46550238E+01;
  COFD[101] = 3.83606243E+00;
  COFD[102] = -2.86076532E-01;
  COFD[103] = 1.25205829E-02;
  COFD[104] = -1.34248014E+01;
  COFD[105] = 3.48624238E+00;
  COFD[106] = -2.41554467E-01;
  COFD[107] = 1.06263545E-02;
  COFD[108] = -1.95739720E+01;
  COFD[109] = 5.61113230E+00;
  COFD[110] = -4.90190187E-01;
  COFD[111] = 2.03260675E-02;
  COFD[112] = -1.46554904E+01;
  COFD[113] = 3.83606243E+00;
  COFD[114] = -2.86076532E-01;
  COFD[115] = 1.25205829E-02;
  COFD[116] = -1.46559297E+01;
  COFD[117] = 3.83606243E+00;
  COFD[118] = -2.86076532E-01;
  COFD[119] = 1.25205829E-02;
  COFD[120] = -1.57995045E+01;
  COFD[121] = 4.22225052E+00;
  COFD[122] = -3.35156428E-01;
  COFD[123] = 1.46104855E-02;
  COFD[124] = -1.57199190E+01;
  COFD[125] = 4.19936335E+00;
  COFD[126] = -3.32311009E-01;
  COFD[127] = 1.44921003E-02;
  COFD[128] = -1.43151328E+01;
  COFD[129] = 3.68038508E+00;
  COFD[130] = -2.65779346E-01;
  COFD[131] = 1.16360771E-02;
  COFD[132] = -1.76147183E+01;
  COFD[133] = 4.86049500E+00;
  COFD[134] = -4.12200578E-01;
  COFD[135] = 1.77160971E-02;
  COFD[136] = -1.97550243E+01;
  COFD[137] = 5.56931926E+00;
  COFD[138] = -4.89105511E-01;
  COFD[139] = 2.04493129E-02;
  COFD[140] = -1.72232379E+01;
  COFD[141] = 4.69060745E+00;
  COFD[142] = -3.92369888E-01;
  COFD[143] = 1.69459661E-02;
  COFD[144] = -1.82252070E+01;
  COFD[145] = 5.05237312E+00;
  COFD[146] = -4.35182396E-01;
  COFD[147] = 1.86363074E-02;
  COFD[148] = -1.79345106E+01;
  COFD[149] = 4.91373893E+00;
  COFD[150] = -4.18747629E-01;
  COFD[151] = 1.79856610E-02;
  COFD[152] = -1.54460977E+01;
  COFD[153] = 4.26819983E+00;
  COFD[154] = -3.40766379E-01;
  COFD[155] = 1.48393361E-02;
  COFD[156] = -1.94688845E+01;
  COFD[157] = 5.43830787E+00;
  COFD[158] = -4.75472880E-01;
  COFD[159] = 1.99909996E-02;
  COFD[160] = -1.94694206E+01;
  COFD[161] = 5.43830787E+00;
  COFD[162] = -4.75472880E-01;
  COFD[163] = 1.99909996E-02;
  COFD[164] = -1.83539845E+01;
  COFD[165] = 4.98756925E+00;
  COFD[166] = -4.27526072E-01;
  COFD[167] = 1.83341755E-02;
  COFD[168] = -1.83542714E+01;
  COFD[169] = 4.98756925E+00;
  COFD[170] = -4.27526072E-01;
  COFD[171] = 1.83341755E-02;
  COFD[172] = -1.42894603E+01;
  COFD[173] = 3.67490723E+00;
  COFD[174] = -2.65114792E-01;
  COFD[175] = 1.16092671E-02;
  COFD[176] = -1.09595844E+01;
  COFD[177] = 2.30836460E+00;
  COFD[178] = -8.76339315E-02;
  COFD[179] = 3.90878445E-03;
  COFD[180] = -1.34230419E+01;
  COFD[181] = 3.48624238E+00;
  COFD[182] = -2.41554467E-01;
  COFD[183] = 1.06263545E-02;
  COFD[184] = -1.32093517E+01;
  COFD[185] = 2.90778936E+00;
  COFD[186] = -1.67388544E-01;
  COFD[187] = 7.45220609E-03;
  COFD[188] = -1.43139120E+01;
  COFD[189] = 3.17651319E+00;
  COFD[190] = -2.02028974E-01;
  COFD[191] = 8.94232502E-03;
  COFD[192] = -1.32243932E+01;
  COFD[193] = 2.90778936E+00;
  COFD[194] = -1.67388544E-01;
  COFD[195] = 7.45220609E-03;
  COFD[196] = -1.94093476E+01;
  COFD[197] = 5.16013126E+00;
  COFD[198] = -4.46824543E-01;
  COFD[199] = 1.90464887E-02;
  COFD[200] = -1.43190281E+01;
  COFD[201] = 3.17651319E+00;
  COFD[202] = -2.02028974E-01;
  COFD[203] = 8.94232502E-03;
  COFD[204] = -1.43238892E+01;
  COFD[205] = 3.17651319E+00;
  COFD[206] = -2.02028974E-01;
  COFD[207] = 8.94232502E-03;
  COFD[208] = -1.50766073E+01;
  COFD[209] = 3.47945612E+00;
  COFD[210] = -2.40703722E-01;
  COFD[211] = 1.05907441E-02;
  COFD[212] = -1.50270285E+01;
  COFD[213] = 3.46140064E+00;
  COFD[214] = -2.38440092E-01;
  COFD[215] = 1.04960087E-02;
  COFD[216] = -1.40998907E+01;
  COFD[217] = 3.08120012E+00;
  COFD[218] = -1.89629903E-01;
  COFD[219] = 8.40361952E-03;
  COFD[220] = -1.70534750E+01;
  COFD[221] = 4.14240922E+00;
  COFD[222] = -3.25239774E-01;
  COFD[223] = 1.41980687E-02;
  COFD[224] = -1.94373032E+01;
  COFD[225] = 5.02567894E+00;
  COFD[226] = -4.32045169E-01;
  COFD[227] = 1.85132214E-02;
  COFD[228] = -1.65488277E+01;
  COFD[229] = 3.95035840E+00;
  COFD[230] = -3.00959418E-01;
  COFD[231] = 1.31692593E-02;
  COFD[232] = -1.74792034E+01;
  COFD[233] = 4.29676909E+00;
  COFD[234] = -3.44085306E-01;
  COFD[235] = 1.49671135E-02;
  COFD[236] = -1.72556425E+01;
  COFD[237] = 4.17889917E+00;
  COFD[238] = -3.29752510E-01;
  COFD[239] = 1.43850275E-02;
  COFD[240] = -1.49500258E+01;
  COFD[241] = 3.52327209E+00;
  COFD[242] = -2.46286208E-01;
  COFD[243] = 1.08285963E-02;
  COFD[244] = -1.90883170E+01;
  COFD[245] = 4.84384483E+00;
  COFD[246] = -4.10265575E-01;
  COFD[247] = 1.76414287E-02;
  COFD[248] = -1.90946650E+01;
  COFD[249] = 4.84384483E+00;
  COFD[250] = -4.10265575E-01;
  COFD[251] = 1.76414287E-02;
  COFD[252] = -1.76774947E+01;
  COFD[253] = 4.24719726E+00;
  COFD[254] = -3.38206061E-01;
  COFD[255] = 1.47350654E-02;
  COFD[256] = -1.76808635E+01;
  COFD[257] = 4.24719726E+00;
  COFD[258] = -3.38206061E-01;
  COFD[259] = 1.47350654E-02;
  COFD[260] = -1.40756909E+01;
  COFD[261] = 3.07549274E+00;
  COFD[262] = -1.88889344E-01;
  COFD[263] = 8.37152866E-03;
  COFD[264] = -1.18989101E+01;
  COFD[265] = 2.57507000E+00;
  COFD[266] = -1.24033737E-01;
  COFD[267] = 5.56694959E-03;
  COFD[268] = -1.46550238E+01;
  COFD[269] = 3.83606243E+00;
  COFD[270] = -2.86076532E-01;
  COFD[271] = 1.25205829E-02;
  COFD[272] = -1.43139120E+01;
  COFD[273] = 3.17651319E+00;
  COFD[274] = -2.02028974E-01;
  COFD[275] = 8.94232502E-03;
  COFD[276] = -1.55511233E+01;
  COFD[277] = 3.48070094E+00;
  COFD[278] = -2.40859499E-01;
  COFD[279] = 1.05972514E-02;
  COFD[280] = -1.43340695E+01;
  COFD[281] = 3.17651319E+00;
  COFD[282] = -2.02028974E-01;
  COFD[283] = 8.94232502E-03;
  COFD[284] = -2.12652444E+01;
  COFD[285] = 5.59961822E+00;
  COFD[286] = -4.91624856E-01;
  COFD[287] = 2.05035546E-02;
  COFD[288] = -1.55588172E+01;
  COFD[289] = 3.48070094E+00;
  COFD[290] = -2.40859499E-01;
  COFD[291] = 1.05972514E-02;
  COFD[292] = -1.55661647E+01;
  COFD[293] = 3.48070094E+00;
  COFD[294] = -2.40859499E-01;
  COFD[295] = 1.05972514E-02;
  COFD[296] = -1.63493305E+01;
  COFD[297] = 3.82388595E+00;
  COFD[298] = -2.84480724E-01;
  COFD[299] = 1.24506311E-02;
  COFD[300] = -1.62724429E+01;
  COFD[301] = 3.79163564E+00;
  COFD[302] = -2.80257365E-01;
  COFD[303] = 1.22656902E-02;
  COFD[304] = -1.52721010E+01;
  COFD[305] = 3.36790500E+00;
  COFD[306] = -2.26321740E-01;
  COFD[307] = 9.97135055E-03;
  COFD[308] = -1.84688303E+01;
  COFD[309] = 4.49330851E+00;
  COFD[310] = -3.68208715E-01;
  COFD[311] = 1.59565402E-02;
  COFD[312] = -2.08293167E+01;
  COFD[313] = 5.35267674E+00;
  COFD[314] = -4.69010505E-01;
  COFD[315] = 1.98979152E-02;
  COFD[316] = -1.78834868E+01;
  COFD[317] = 4.29613154E+00;
  COFD[318] = -3.44012526E-01;
  COFD[319] = 1.49643715E-02;
  COFD[320] = -1.89544717E+01;
  COFD[321] = 4.68595732E+00;
  COFD[322] = -3.91842840E-01;
  COFD[323] = 1.69262542E-02;
  COFD[324] = -1.86424488E+01;
  COFD[325] = 4.53572533E+00;
  COFD[326] = -3.73386925E-01;
  COFD[327] = 1.61678881E-02;
  COFD[328] = -1.64169341E+01;
  COFD[329] = 3.89309916E+00;
  COFD[330] = -2.93528188E-01;
  COFD[331] = 1.28463177E-02;
  COFD[332] = -2.05184780E+01;
  COFD[333] = 5.18417470E+00;
  COFD[334] = -4.49491573E-01;
  COFD[335] = 1.91438508E-02;
  COFD[336] = -2.05284666E+01;
  COFD[337] = 5.18417470E+00;
  COFD[338] = -4.49491573E-01;
  COFD[339] = 1.91438508E-02;
  COFD[340] = -1.91121670E+01;
  COFD[341] = 4.61801405E+00;
  COFD[342] = -3.83535652E-01;
  COFD[343] = 1.65862513E-02;
  COFD[344] = -1.91174394E+01;
  COFD[345] = 4.61801405E+00;
  COFD[346] = -3.83535652E-01;
  COFD[347] = 1.65862513E-02;
  COFD[348] = -1.52414498E+01;
  COFD[349] = 3.35922578E+00;
  COFD[350] = -2.25181399E-01;
  COFD[351] = 9.92132878E-03;
  COFD[352] = -1.09629118E+01;
  COFD[353] = 2.30836460E+00;
  COFD[354] = -8.76339315E-02;
  COFD[355] = 3.90878445E-03;
  COFD[356] = -1.34248014E+01;
  COFD[357] = 3.48624238E+00;
  COFD[358] = -2.41554467E-01;
  COFD[359] = 1.06263545E-02;
  COFD[360] = -1.32243932E+01;
  COFD[361] = 2.90778936E+00;
  COFD[362] = -1.67388544E-01;
  COFD[363] = 7.45220609E-03;
  COFD[364] = -1.43340695E+01;
  COFD[365] = 3.17651319E+00;
  COFD[366] = -2.02028974E-01;
  COFD[367] = 8.94232502E-03;
  COFD[368] = -1.32399011E+01;
  COFD[369] = 2.90778936E+00;
  COFD[370] = -1.67388544E-01;
  COFD[371] = 7.45220609E-03;
  COFD[372] = -1.94252948E+01;
  COFD[373] = 5.16013126E+00;
  COFD[374] = -4.46824543E-01;
  COFD[375] = 1.90464887E-02;
  COFD[376] = -1.43393972E+01;
  COFD[377] = 3.17651319E+00;
  COFD[378] = -2.02028974E-01;
  COFD[379] = 8.94232502E-03;
  COFD[380] = -1.43444614E+01;
  COFD[381] = 3.17651319E+00;
  COFD[382] = -2.02028974E-01;
  COFD[383] = 8.94232502E-03;
  COFD[384] = -1.50911746E+01;
  COFD[385] = 3.47945612E+00;
  COFD[386] = -2.40703722E-01;
  COFD[387] = 1.05907441E-02;
  COFD[388] = -1.50420909E+01;
  COFD[389] = 3.46140064E+00;
  COFD[390] = -2.38440092E-01;
  COFD[391] = 1.04960087E-02;
  COFD[392] = -1.41191170E+01;
  COFD[393] = 3.08120012E+00;
  COFD[394] = -1.89629903E-01;
  COFD[395] = 8.40361952E-03;
  COFD[396] = -1.70756953E+01;
  COFD[397] = 4.14240922E+00;
  COFD[398] = -3.25239774E-01;
  COFD[399] = 1.41980687E-02;
  COFD[400] = -1.94570202E+01;
  COFD[401] = 5.02567894E+00;
  COFD[402] = -4.32045169E-01;
  COFD[403] = 1.85132214E-02;
  COFD[404] = -1.65675292E+01;
  COFD[405] = 3.95035840E+00;
  COFD[406] = -3.00959418E-01;
  COFD[407] = 1.31692593E-02;
  COFD[408] = -1.74984410E+01;
  COFD[409] = 4.29676909E+00;
  COFD[410] = -3.44085306E-01;
  COFD[411] = 1.49671135E-02;
  COFD[412] = -1.72753698E+01;
  COFD[413] = 4.17889917E+00;
  COFD[414] = -3.29752510E-01;
  COFD[415] = 1.43850275E-02;
  COFD[416] = -1.49718147E+01;
  COFD[417] = 3.52327209E+00;
  COFD[418] = -2.46286208E-01;
  COFD[419] = 1.08285963E-02;
  COFD[420] = -1.91102567E+01;
  COFD[421] = 4.84384483E+00;
  COFD[422] = -4.10265575E-01;
  COFD[423] = 1.76414287E-02;
  COFD[424] = -1.91168913E+01;
  COFD[425] = 4.84384483E+00;
  COFD[426] = -4.10265575E-01;
  COFD[427] = 1.76414287E-02;
  COFD[428] = -1.76992903E+01;
  COFD[429] = 4.24719726E+00;
  COFD[430] = -3.38206061E-01;
  COFD[431] = 1.47350654E-02;
  COFD[432] = -1.77028097E+01;
  COFD[433] = 4.24719726E+00;
  COFD[434] = -3.38206061E-01;
  COFD[435] = 1.47350654E-02;
  COFD[436] = -1.40949183E+01;
  COFD[437] = 3.07549274E+00;
  COFD[438] = -1.88889344E-01;
  COFD[439] = 8.37152866E-03;
  COFD[440] = -1.71983144E+01;
  COFD[441] = 4.63881440E+00;
  COFD[442] = -3.86139677E-01;
  COFD[443] = 1.66955099E-02;
  COFD[444] = -1.95739720E+01;
  COFD[445] = 5.61113230E+00;
  COFD[446] = -4.90190187E-01;
  COFD[447] = 2.03260675E-02;
  COFD[448] = -1.94093476E+01;
  COFD[449] = 5.16013126E+00;
  COFD[450] = -4.46824543E-01;
  COFD[451] = 1.90464887E-02;
  COFD[452] = -2.12652444E+01;
  COFD[453] = 5.59961822E+00;
  COFD[454] = -4.91624856E-01;
  COFD[455] = 2.05035546E-02;
  COFD[456] = -1.94252948E+01;
  COFD[457] = 5.16013126E+00;
  COFD[458] = -4.46824543E-01;
  COFD[459] = 1.90464887E-02;
  COFD[460] = -1.19157788E+01;
  COFD[461] = 9.28952533E-01;
  COFD[462] = 2.42107483E-01;
  COFD[463] = -1.59824150E-02;
  COFD[464] = -2.06463656E+01;
  COFD[465] = 5.41688482E+00;
  COFD[466] = -4.73387188E-01;
  COFD[467] = 1.99280175E-02;
  COFD[468] = -2.06516251E+01;
  COFD[469] = 5.41688482E+00;
  COFD[470] = -4.73387188E-01;
  COFD[471] = 1.99280175E-02;
  COFD[472] = -2.12831283E+01;
  COFD[473] = 5.61184117E+00;
  COFD[474] = -4.90532156E-01;
  COFD[475] = 2.03507922E-02;
  COFD[476] = -2.14087360E+01;
  COFD[477] = 5.57281993E+00;
  COFD[478] = -4.76690860E-01;
  COFD[479] = 1.94000702E-02;
  COFD[480] = -2.11388255E+01;
  COFD[481] = 5.55529689E+00;
  COFD[482] = -4.87942530E-01;
  COFD[483] = 2.04249057E-02;
  COFD[484] = -2.07653629E+01;
  COFD[485] = 5.01091988E+00;
  COFD[486] = -3.77985581E-01;
  COFD[487] = 1.40968617E-02;
  COFD[488] = -1.77563175E+01;
  COFD[489] = 3.57475686E+00;
  COFD[490] = -1.56396297E-01;
  COFD[491] = 3.12157721E-03;
  COFD[492] = -2.15095920E+01;
  COFD[493] = 5.46737673E+00;
  COFD[494] = -4.55696085E-01;
  COFD[495] = 1.81982625E-02;
  COFD[496] = -2.08812277E+01;
  COFD[497] = 5.08859217E+00;
  COFD[498] = -3.90525428E-01;
  COFD[499] = 1.47376395E-02;
  COFD[500] = -2.12661812E+01;
  COFD[501] = 5.24930667E+00;
  COFD[502] = -4.17435088E-01;
  COFD[503] = 1.61434424E-02;
  COFD[504] = -2.10440599E+01;
  COFD[505] = 5.59806282E+00;
  COFD[506] = -4.87109535E-01;
  COFD[507] = 2.01370226E-02;
  COFD[508] = -1.87383877E+01;
  COFD[509] = 3.96926341E+00;
  COFD[510] = -2.16412264E-01;
  COFD[511] = 6.06012078E-03;
  COFD[512] = -1.87452995E+01;
  COFD[513] = 3.96926341E+00;
  COFD[514] = -2.16412264E-01;
  COFD[515] = 6.06012078E-03;
  COFD[516] = -2.13847376E+01;
  COFD[517] = 5.17440955E+00;
  COFD[518] = -4.04678430E-01;
  COFD[519] = 1.54706350E-02;
  COFD[520] = -2.13884026E+01;
  COFD[521] = 5.17440955E+00;
  COFD[522] = -4.04678430E-01;
  COFD[523] = 1.54706350E-02;
  COFD[524] = -2.10643264E+01;
  COFD[525] = 5.53614864E+00;
  COFD[526] = -4.86046753E-01;
  COFD[527] = 2.03659193E-02;
  COFD[528] = -1.18998160E+01;
  COFD[529] = 2.57507000E+00;
  COFD[530] = -1.24033737E-01;
  COFD[531] = 5.56694959E-03;
  COFD[532] = -1.46554904E+01;
  COFD[533] = 3.83606243E+00;
  COFD[534] = -2.86076532E-01;
  COFD[535] = 1.25205829E-02;
  COFD[536] = -1.43190281E+01;
  COFD[537] = 3.17651319E+00;
  COFD[538] = -2.02028974E-01;
  COFD[539] = 8.94232502E-03;
  COFD[540] = -1.55588172E+01;
  COFD[541] = 3.48070094E+00;
  COFD[542] = -2.40859499E-01;
  COFD[543] = 1.05972514E-02;
  COFD[544] = -1.43393972E+01;
  COFD[545] = 3.17651319E+00;
  COFD[546] = -2.02028974E-01;
  COFD[547] = 8.94232502E-03;
  COFD[548] = -2.06463656E+01;
  COFD[549] = 5.41688482E+00;
  COFD[550] = -4.73387188E-01;
  COFD[551] = 1.99280175E-02;
  COFD[552] = -1.55666313E+01;
  COFD[553] = 3.48070094E+00;
  COFD[554] = -2.40859499E-01;
  COFD[555] = 1.05972514E-02;
  COFD[556] = -1.55740954E+01;
  COFD[557] = 3.48070094E+00;
  COFD[558] = -2.40859499E-01;
  COFD[559] = 1.05972514E-02;
  COFD[560] = -1.63542358E+01;
  COFD[561] = 3.82388595E+00;
  COFD[562] = -2.84480724E-01;
  COFD[563] = 1.24506311E-02;
  COFD[564] = -1.62775683E+01;
  COFD[565] = 3.79163564E+00;
  COFD[566] = -2.80257365E-01;
  COFD[567] = 1.22656902E-02;
  COFD[568] = -1.52792799E+01;
  COFD[569] = 3.36790500E+00;
  COFD[570] = -2.26321740E-01;
  COFD[571] = 9.97135055E-03;
  COFD[572] = -1.84777509E+01;
  COFD[573] = 4.49330851E+00;
  COFD[574] = -3.68208715E-01;
  COFD[575] = 1.59565402E-02;
  COFD[576] = -2.08367641E+01;
  COFD[577] = 5.35267674E+00;
  COFD[578] = -4.69010505E-01;
  COFD[579] = 1.98979152E-02;
  COFD[580] = -1.78903850E+01;
  COFD[581] = 4.29613154E+00;
  COFD[582] = -3.44012526E-01;
  COFD[583] = 1.49643715E-02;
  COFD[584] = -1.89616566E+01;
  COFD[585] = 4.68595732E+00;
  COFD[586] = -3.91842840E-01;
  COFD[587] = 1.69262542E-02;
  COFD[588] = -1.86499019E+01;
  COFD[589] = 4.53572533E+00;
  COFD[590] = -3.73386925E-01;
  COFD[591] = 1.61678881E-02;
  COFD[592] = -1.64255877E+01;
  COFD[593] = 3.89309916E+00;
  COFD[594] = -2.93528188E-01;
  COFD[595] = 1.28463177E-02;
  COFD[596] = -2.05272244E+01;
  COFD[597] = 5.18417470E+00;
  COFD[598] = -4.49491573E-01;
  COFD[599] = 1.91438508E-02;
  COFD[600] = -2.05373910E+01;
  COFD[601] = 5.18417470E+00;
  COFD[602] = -4.49491573E-01;
  COFD[603] = 1.91438508E-02;
  COFD[604] = -1.91208247E+01;
  COFD[605] = 4.61801405E+00;
  COFD[606] = -3.83535652E-01;
  COFD[607] = 1.65862513E-02;
  COFD[608] = -1.91261897E+01;
  COFD[609] = 4.61801405E+00;
  COFD[610] = -3.83535652E-01;
  COFD[611] = 1.65862513E-02;
  COFD[612] = -1.52486292E+01;
  COFD[613] = 3.35922578E+00;
  COFD[614] = -2.25181399E-01;
  COFD[615] = 9.92132878E-03;
  COFD[616] = -1.19006697E+01;
  COFD[617] = 2.57507000E+00;
  COFD[618] = -1.24033737E-01;
  COFD[619] = 5.56694959E-03;
  COFD[620] = -1.46559297E+01;
  COFD[621] = 3.83606243E+00;
  COFD[622] = -2.86076532E-01;
  COFD[623] = 1.25205829E-02;
  COFD[624] = -1.43238892E+01;
  COFD[625] = 3.17651319E+00;
  COFD[626] = -2.02028974E-01;
  COFD[627] = 8.94232502E-03;
  COFD[628] = -1.55661647E+01;
  COFD[629] = 3.48070094E+00;
  COFD[630] = -2.40859499E-01;
  COFD[631] = 1.05972514E-02;
  COFD[632] = -1.43444614E+01;
  COFD[633] = 3.17651319E+00;
  COFD[634] = -2.02028974E-01;
  COFD[635] = 8.94232502E-03;
  COFD[636] = -2.06516251E+01;
  COFD[637] = 5.41688482E+00;
  COFD[638] = -4.73387188E-01;
  COFD[639] = 1.99280175E-02;
  COFD[640] = -1.55740954E+01;
  COFD[641] = 3.48070094E+00;
  COFD[642] = -2.40859499E-01;
  COFD[643] = 1.05972514E-02;
  COFD[644] = -1.55816727E+01;
  COFD[645] = 3.48070094E+00;
  COFD[646] = -2.40859499E-01;
  COFD[647] = 1.05972514E-02;
  COFD[648] = -1.63588948E+01;
  COFD[649] = 3.82388595E+00;
  COFD[650] = -2.84480724E-01;
  COFD[651] = 1.24506311E-02;
  COFD[652] = -1.62824385E+01;
  COFD[653] = 3.79163564E+00;
  COFD[654] = -2.80257365E-01;
  COFD[655] = 1.22656902E-02;
  COFD[656] = -1.52861287E+01;
  COFD[657] = 3.36790500E+00;
  COFD[658] = -2.26321740E-01;
  COFD[659] = 9.97135055E-03;
  COFD[660] = -1.84862906E+01;
  COFD[661] = 4.49330851E+00;
  COFD[662] = -3.68208715E-01;
  COFD[663] = 1.59565402E-02;
  COFD[664] = -2.08438728E+01;
  COFD[665] = 5.35267674E+00;
  COFD[666] = -4.69010505E-01;
  COFD[667] = 1.98979152E-02;
  COFD[668] = -1.78969625E+01;
  COFD[669] = 4.29613154E+00;
  COFD[670] = -3.44012526E-01;
  COFD[671] = 1.49643715E-02;
  COFD[672] = -1.89685112E+01;
  COFD[673] = 4.68595732E+00;
  COFD[674] = -3.91842840E-01;
  COFD[675] = 1.69262542E-02;
  COFD[676] = -1.86570161E+01;
  COFD[677] = 4.53572533E+00;
  COFD[678] = -3.73386925E-01;
  COFD[679] = 1.61678881E-02;
  COFD[680] = -1.64338675E+01;
  COFD[681] = 3.89309916E+00;
  COFD[682] = -2.93528188E-01;
  COFD[683] = 1.28463177E-02;
  COFD[684] = -2.05355943E+01;
  COFD[685] = 5.18417470E+00;
  COFD[686] = -4.49491573E-01;
  COFD[687] = 1.91438508E-02;
  COFD[688] = -2.05459343E+01;
  COFD[689] = 5.18417470E+00;
  COFD[690] = -4.49491573E-01;
  COFD[691] = 1.91438508E-02;
  COFD[692] = -1.91291085E+01;
  COFD[693] = 4.61801405E+00;
  COFD[694] = -3.83535652E-01;
  COFD[695] = 1.65862513E-02;
  COFD[696] = -1.91345636E+01;
  COFD[697] = 4.61801405E+00;
  COFD[698] = -3.83535652E-01;
  COFD[699] = 1.65862513E-02;
  COFD[700] = -1.52554785E+01;
  COFD[701] = 3.35922578E+00;
  COFD[702] = -2.25181399E-01;
  COFD[703] = 9.92132878E-03;
  COFD[704] = -1.25141403E+01;
  COFD[705] = 2.77873601E+00;
  COFD[706] = -1.50637360E-01;
  COFD[707] = 6.72684281E-03;
  COFD[708] = -1.57995045E+01;
  COFD[709] = 4.22225052E+00;
  COFD[710] = -3.35156428E-01;
  COFD[711] = 1.46104855E-02;
  COFD[712] = -1.50766073E+01;
  COFD[713] = 3.47945612E+00;
  COFD[714] = -2.40703722E-01;
  COFD[715] = 1.05907441E-02;
  COFD[716] = -1.63493305E+01;
  COFD[717] = 3.82388595E+00;
  COFD[718] = -2.84480724E-01;
  COFD[719] = 1.24506311E-02;
  COFD[720] = -1.50911746E+01;
  COFD[721] = 3.47945612E+00;
  COFD[722] = -2.40703722E-01;
  COFD[723] = 1.05907441E-02;
  COFD[724] = -2.12831283E+01;
  COFD[725] = 5.61184117E+00;
  COFD[726] = -4.90532156E-01;
  COFD[727] = 2.03507922E-02;
  COFD[728] = -1.63542358E+01;
  COFD[729] = 3.82388595E+00;
  COFD[730] = -2.84480724E-01;
  COFD[731] = 1.24506311E-02;
  COFD[732] = -1.63588948E+01;
  COFD[733] = 3.82388595E+00;
  COFD[734] = -2.84480724E-01;
  COFD[735] = 1.24506311E-02;
  COFD[736] = -1.73374523E+01;
  COFD[737] = 4.21416723E+00;
  COFD[738] = -3.34163932E-01;
  COFD[739] = 1.45697432E-02;
  COFD[740] = -1.72738845E+01;
  COFD[741] = 4.19029808E+00;
  COFD[742] = -3.31177076E-01;
  COFD[743] = 1.44446234E-02;
  COFD[744] = -1.59862997E+01;
  COFD[745] = 3.67388294E+00;
  COFD[746] = -2.64990709E-01;
  COFD[747] = 1.16042706E-02;
  COFD[748] = -1.93276406E+01;
  COFD[749] = 4.85015581E+00;
  COFD[750] = -4.10945109E-01;
  COFD[751] = 1.76651398E-02;
  COFD[752] = -2.14449532E+01;
  COFD[753] = 5.56531152E+00;
  COFD[754] = -4.88789821E-01;
  COFD[755] = 2.04437116E-02;
  COFD[756] = -1.88463801E+01;
  COFD[757] = 4.68393046E+00;
  COFD[758] = -3.91610863E-01;
  COFD[759] = 1.69174645E-02;
  COFD[760] = -1.98646724E+01;
  COFD[761] = 5.04367502E+00;
  COFD[762] = -4.34153325E-01;
  COFD[763] = 1.85956055E-02;
  COFD[764] = -1.95552136E+01;
  COFD[765] = 4.90255048E+00;
  COFD[766] = -4.17368501E-01;
  COFD[767] = 1.79287358E-02;
  COFD[768] = -1.72828280E+01;
  COFD[769] = 4.26063341E+00;
  COFD[770] = -3.39848064E-01;
  COFD[771] = 1.48021313E-02;
  COFD[772] = -2.11606942E+01;
  COFD[773] = 5.42846112E+00;
  COFD[774] = -4.74321870E-01;
  COFD[775] = 1.99459749E-02;
  COFD[776] = -2.11667588E+01;
  COFD[777] = 5.42846112E+00;
  COFD[778] = -4.74321870E-01;
  COFD[779] = 1.99459749E-02;
  COFD[780] = -1.99803480E+01;
  COFD[781] = 4.97875278E+00;
  COFD[782] = -4.26485475E-01;
  COFD[783] = 1.82931933E-02;
  COFD[784] = -1.99835677E+01;
  COFD[785] = 4.97875278E+00;
  COFD[786] = -4.26485475E-01;
  COFD[787] = 1.82931933E-02;
  COFD[788] = -1.59633426E+01;
  COFD[789] = 3.66853818E+00;
  COFD[790] = -2.64346221E-01;
  COFD[791] = 1.15784613E-02;
  COFD[792] = -1.24693714E+01;
  COFD[793] = 2.76686648E+00;
  COFD[794] = -1.49120141E-01;
  COFD[795] = 6.66220432E-03;
  COFD[796] = -1.57199190E+01;
  COFD[797] = 4.19936335E+00;
  COFD[798] = -3.32311009E-01;
  COFD[799] = 1.44921003E-02;
  COFD[800] = -1.50270285E+01;
  COFD[801] = 3.46140064E+00;
  COFD[802] = -2.38440092E-01;
  COFD[803] = 1.04960087E-02;
  COFD[804] = -1.62724429E+01;
  COFD[805] = 3.79163564E+00;
  COFD[806] = -2.80257365E-01;
  COFD[807] = 1.22656902E-02;
  COFD[808] = -1.50420909E+01;
  COFD[809] = 3.46140064E+00;
  COFD[810] = -2.38440092E-01;
  COFD[811] = 1.04960087E-02;
  COFD[812] = -2.14087360E+01;
  COFD[813] = 5.57281993E+00;
  COFD[814] = -4.76690860E-01;
  COFD[815] = 1.94000702E-02;
  COFD[816] = -1.62775683E+01;
  COFD[817] = 3.79163564E+00;
  COFD[818] = -2.80257365E-01;
  COFD[819] = 1.22656902E-02;
  COFD[820] = -1.62824385E+01;
  COFD[821] = 3.79163564E+00;
  COFD[822] = -2.80257365E-01;
  COFD[823] = 1.22656902E-02;
  COFD[824] = -1.72738845E+01;
  COFD[825] = 4.19029808E+00;
  COFD[826] = -3.31177076E-01;
  COFD[827] = 1.44446234E-02;
  COFD[828] = -1.72167712E+01;
  COFD[829] = 4.16886779E+00;
  COFD[830] = -3.28518156E-01;
  COFD[831] = 1.43341626E-02;
  COFD[832] = -1.59525075E+01;
  COFD[833] = 3.66023858E+00;
  COFD[834] = -2.63401043E-01;
  COFD[835] = 1.15432000E-02;
  COFD[836] = -1.92867532E+01;
  COFD[837] = 4.83375900E+00;
  COFD[838] = -4.09146560E-01;
  COFD[839] = 1.76006599E-02;
  COFD[840] = -2.14082433E+01;
  COFD[841] = 5.55346617E+00;
  COFD[842] = -4.87783156E-01;
  COFD[843] = 2.04210886E-02;
  COFD[844] = -1.87897289E+01;
  COFD[845] = 4.66162351E+00;
  COFD[846] = -3.88920477E-01;
  COFD[847] = 1.68089648E-02;
  COFD[848] = -1.98075051E+01;
  COFD[849] = 5.02169524E+00;
  COFD[850] = -4.31582804E-01;
  COFD[851] = 1.84953568E-02;
  COFD[852] = -1.94823661E+01;
  COFD[853] = 4.87333294E+00;
  COFD[854] = -4.13769241E-01;
  COFD[855] = 1.77802244E-02;
  COFD[856] = -1.72316133E+01;
  COFD[857] = 4.24011069E+00;
  COFD[858] = -3.37339810E-01;
  COFD[859] = 1.46996679E-02;
  COFD[860] = -2.11309194E+01;
  COFD[861] = 5.41773516E+00;
  COFD[862] = -4.73414338E-01;
  COFD[863] = 1.99258685E-02;
  COFD[864] = -2.11372801E+01;
  COFD[865] = 5.41773516E+00;
  COFD[866] = -4.73414338E-01;
  COFD[867] = 1.99258685E-02;
  COFD[868] = -1.99235836E+01;
  COFD[869] = 4.95514826E+00;
  COFD[870] = -4.23691395E-01;
  COFD[871] = 1.81828318E-02;
  COFD[872] = -1.99269591E+01;
  COFD[873] = 4.95514826E+00;
  COFD[874] = -4.23691395E-01;
  COFD[875] = 1.81828318E-02;
  COFD[876] = -1.59327344E+01;
  COFD[877] = 3.65620899E+00;
  COFD[878] = -2.62933804E-01;
  COFD[879] = 1.15253223E-02;
  COFD[880] = -1.17159884E+01;
  COFD[881] = 2.48123210E+00;
  COFD[882] = -1.11322604E-01;
  COFD[883] = 4.99282389E-03;
  COFD[884] = -1.43151328E+01;
  COFD[885] = 3.68038508E+00;
  COFD[886] = -2.65779346E-01;
  COFD[887] = 1.16360771E-02;
  COFD[888] = -1.40998907E+01;
  COFD[889] = 3.08120012E+00;
  COFD[890] = -1.89629903E-01;
  COFD[891] = 8.40361952E-03;
  COFD[892] = -1.52721010E+01;
  COFD[893] = 3.36790500E+00;
  COFD[894] = -2.26321740E-01;
  COFD[895] = 9.97135055E-03;
  COFD[896] = -1.41191170E+01;
  COFD[897] = 3.08120012E+00;
  COFD[898] = -1.89629903E-01;
  COFD[899] = 8.40361952E-03;
  COFD[900] = -2.11388255E+01;
  COFD[901] = 5.55529689E+00;
  COFD[902] = -4.87942530E-01;
  COFD[903] = 2.04249057E-02;
  COFD[904] = -1.52792799E+01;
  COFD[905] = 3.36790500E+00;
  COFD[906] = -2.26321740E-01;
  COFD[907] = 9.97135055E-03;
  COFD[908] = -1.52861287E+01;
  COFD[909] = 3.36790500E+00;
  COFD[910] = -2.26321740E-01;
  COFD[911] = 9.97135055E-03;
  COFD[912] = -1.59862997E+01;
  COFD[913] = 3.67388294E+00;
  COFD[914] = -2.64990709E-01;
  COFD[915] = 1.16042706E-02;
  COFD[916] = -1.59525075E+01;
  COFD[917] = 3.66023858E+00;
  COFD[918] = -2.63401043E-01;
  COFD[919] = 1.15432000E-02;
  COFD[920] = -1.50233391E+01;
  COFD[921] = 3.26660767E+00;
  COFD[922] = -2.13287177E-01;
  COFD[923] = 9.41137857E-03;
  COFD[924] = -1.81735675E+01;
  COFD[925] = 4.38391495E+00;
  COFD[926] = -3.54941287E-01;
  COFD[927] = 1.54195107E-02;
  COFD[928] = -2.05128629E+01;
  COFD[929] = 5.23843909E+00;
  COFD[930] = -4.55815614E-01;
  COFD[931] = 1.93898040E-02;
  COFD[932] = -1.76285583E+01;
  COFD[933] = 4.19935698E+00;
  COFD[934] = -3.32310212E-01;
  COFD[935] = 1.44920670E-02;
  COFD[936] = -1.86157710E+01;
  COFD[937] = 4.55689508E+00;
  COFD[938] = -3.75937921E-01;
  COFD[939] = 1.62703488E-02;
  COFD[940] = -1.83538331E+01;
  COFD[941] = 4.42828044E+00;
  COFD[942] = -3.60417833E-01;
  COFD[943] = 1.56455103E-02;
  COFD[944] = -1.60261598E+01;
  COFD[945] = 3.73312045E+00;
  COFD[946] = -2.72579779E-01;
  COFD[947] = 1.19290272E-02;
  COFD[948] = -2.02922626E+01;
  COFD[949] = 5.11106992E+00;
  COFD[950] = -4.42047129E-01;
  COFD[951] = 1.89042990E-02;
  COFD[952] = -2.03014971E+01;
  COFD[953] = 5.11106992E+00;
  COFD[954] = -4.42047129E-01;
  COFD[955] = 1.89042990E-02;
  COFD[956] = -1.87684982E+01;
  COFD[957] = 4.49191492E+00;
  COFD[958] = -3.68041771E-01;
  COFD[959] = 1.59498676E-02;
  COFD[960] = -1.87733780E+01;
  COFD[961] = 4.49191492E+00;
  COFD[962] = -3.68041771E-01;
  COFD[963] = 1.59498676E-02;
  COFD[964] = -1.50031706E+01;
  COFD[965] = 3.26223357E+00;
  COFD[966] = -2.12746642E-01;
  COFD[967] = 9.38912883E-03;
  COFD[968] = -1.37794466E+01;
  COFD[969] = 3.23973858E+00;
  COFD[970] = -2.09989036E-01;
  COFD[971] = 9.27667906E-03;
  COFD[972] = -1.76147183E+01;
  COFD[973] = 4.86049500E+00;
  COFD[974] = -4.12200578E-01;
  COFD[975] = 1.77160971E-02;
  COFD[976] = -1.70534750E+01;
  COFD[977] = 4.14240922E+00;
  COFD[978] = -3.25239774E-01;
  COFD[979] = 1.41980687E-02;
  COFD[980] = -1.84688303E+01;
  COFD[981] = 4.49330851E+00;
  COFD[982] = -3.68208715E-01;
  COFD[983] = 1.59565402E-02;
  COFD[984] = -1.70756953E+01;
  COFD[985] = 4.14240922E+00;
  COFD[986] = -3.25239774E-01;
  COFD[987] = 1.41980687E-02;
  COFD[988] = -2.07653629E+01;
  COFD[989] = 5.01091988E+00;
  COFD[990] = -3.77985581E-01;
  COFD[991] = 1.40968617E-02;
  COFD[992] = -1.84777509E+01;
  COFD[993] = 4.49330851E+00;
  COFD[994] = -3.68208715E-01;
  COFD[995] = 1.59565402E-02;
  COFD[996] = -1.84862906E+01;
  COFD[997] = 4.49330851E+00;
  COFD[998] = -3.68208715E-01;
  COFD[999] = 1.59565402E-02;
  COFD[1000] = -1.93276406E+01;
  COFD[1001] = 4.85015581E+00;
  COFD[1002] = -4.10945109E-01;
  COFD[1003] = 1.76651398E-02;
  COFD[1004] = -1.92867532E+01;
  COFD[1005] = 4.83375900E+00;
  COFD[1006] = -4.09146560E-01;
  COFD[1007] = 1.76006599E-02;
  COFD[1008] = -1.81735675E+01;
  COFD[1009] = 4.38391495E+00;
  COFD[1010] = -3.54941287E-01;
  COFD[1011] = 1.54195107E-02;
  COFD[1012] = -2.13425604E+01;
  COFD[1013] = 5.40460130E+00;
  COFD[1014] = -4.72718910E-01;
  COFD[1015] = 1.99362717E-02;
  COFD[1016] = -2.19317665E+01;
  COFD[1017] = 5.45216133E+00;
  COFD[1018] = -4.52916925E-01;
  COFD[1019] = 1.80456400E-02;
  COFD[1020] = -2.09191230E+01;
  COFD[1021] = 5.30153901E+00;
  COFD[1022] = -4.63335119E-01;
  COFD[1023] = 1.96897053E-02;
  COFD[1024] = -2.16802565E+01;
  COFD[1025] = 5.52918296E+00;
  COFD[1026] = -4.85360709E-01;
  COFD[1027] = 2.03448006E-02;
  COFD[1028] = -2.14326420E+01;
  COFD[1029] = 5.41729961E+00;
  COFD[1030] = -4.73400281E-01;
  COFD[1031] = 1.99269567E-02;
  COFD[1032] = -1.94485902E+01;
  COFD[1033] = 4.91446566E+00;
  COFD[1034] = -4.18837152E-01;
  COFD[1035] = 1.79893537E-02;
  COFD[1036] = -2.22116629E+01;
  COFD[1037] = 5.54251230E+00;
  COFD[1038] = -4.70946314E-01;
  COFD[1039] = 1.90785869E-02;
  COFD[1040] = -2.22235050E+01;
  COFD[1041] = 5.54251230E+00;
  COFD[1042] = -4.70946314E-01;
  COFD[1043] = 1.90785869E-02;
  COFD[1044] = -2.18590684E+01;
  COFD[1045] = 5.47368915E+00;
  COFD[1046] = -4.79424291E-01;
  COFD[1047] = 2.01372920E-02;
  COFD[1048] = -2.18653022E+01;
  COFD[1049] = 5.47368915E+00;
  COFD[1050] = -4.79424291E-01;
  COFD[1051] = 2.01372920E-02;
  COFD[1052] = -1.81432499E+01;
  COFD[1053] = 4.37565431E+00;
  COFD[1054] = -3.53906025E-01;
  COFD[1055] = 1.53760786E-02;
  COFD[1056] = -1.60528433E+01;
  COFD[1057] = 4.11188603E+00;
  COFD[1058] = -3.21540884E-01;
  COFD[1059] = 1.40482564E-02;
  COFD[1060] = -1.97550243E+01;
  COFD[1061] = 5.56931926E+00;
  COFD[1062] = -4.89105511E-01;
  COFD[1063] = 2.04493129E-02;
  COFD[1064] = -1.94373032E+01;
  COFD[1065] = 5.02567894E+00;
  COFD[1066] = -4.32045169E-01;
  COFD[1067] = 1.85132214E-02;
  COFD[1068] = -2.08293167E+01;
  COFD[1069] = 5.35267674E+00;
  COFD[1070] = -4.69010505E-01;
  COFD[1071] = 1.98979152E-02;
  COFD[1072] = -1.94570202E+01;
  COFD[1073] = 5.02567894E+00;
  COFD[1074] = -4.32045169E-01;
  COFD[1075] = 1.85132214E-02;
  COFD[1076] = -1.77563175E+01;
  COFD[1077] = 3.57475686E+00;
  COFD[1078] = -1.56396297E-01;
  COFD[1079] = 3.12157721E-03;
  COFD[1080] = -2.08367641E+01;
  COFD[1081] = 5.35267674E+00;
  COFD[1082] = -4.69010505E-01;
  COFD[1083] = 1.98979152E-02;
  COFD[1084] = -2.08438728E+01;
  COFD[1085] = 5.35267674E+00;
  COFD[1086] = -4.69010505E-01;
  COFD[1087] = 1.98979152E-02;
  COFD[1088] = -2.14449532E+01;
  COFD[1089] = 5.56531152E+00;
  COFD[1090] = -4.88789821E-01;
  COFD[1091] = 2.04437116E-02;
  COFD[1092] = -2.14082433E+01;
  COFD[1093] = 5.55346617E+00;
  COFD[1094] = -4.87783156E-01;
  COFD[1095] = 2.04210886E-02;
  COFD[1096] = -2.05128629E+01;
  COFD[1097] = 5.23843909E+00;
  COFD[1098] = -4.55815614E-01;
  COFD[1099] = 1.93898040E-02;
  COFD[1100] = -2.19317665E+01;
  COFD[1101] = 5.45216133E+00;
  COFD[1102] = -4.52916925E-01;
  COFD[1103] = 1.80456400E-02;
  COFD[1104] = -1.90499374E+01;
  COFD[1105] = 3.99221757E+00;
  COFD[1106] = -2.19854880E-01;
  COFD[1107] = 6.22736279E-03;
  COFD[1108] = -2.20036321E+01;
  COFD[1109] = 5.55935694E+00;
  COFD[1110] = -4.74154740E-01;
  COFD[1111] = 1.92584304E-02;
  COFD[1112] = -2.16379525E+01;
  COFD[1113] = 5.29019717E+00;
  COFD[1114] = -4.24502606E-01;
  COFD[1115] = 1.65197343E-02;
  COFD[1116] = -2.19399756E+01;
  COFD[1117] = 5.41841631E+00;
  COFD[1118] = -4.46818971E-01;
  COFD[1119] = 1.77127652E-02;
  COFD[1120] = -2.14303411E+01;
  COFD[1121] = 5.59268435E+00;
  COFD[1122] = -4.91232974E-01;
  COFD[1123] = 2.05064746E-02;
  COFD[1124] = -2.01015275E+01;
  COFD[1125] = 4.41511629E+00;
  COFD[1126] = -2.84086963E-01;
  COFD[1127] = 9.37586971E-03;
  COFD[1128] = -2.01111534E+01;
  COFD[1129] = 4.41511629E+00;
  COFD[1130] = -2.84086963E-01;
  COFD[1131] = 9.37586971E-03;
  COFD[1132] = -2.20947854E+01;
  COFD[1133] = 5.36053938E+00;
  COFD[1134] = -4.36434519E-01;
  COFD[1135] = 1.71484255E-02;
  COFD[1136] = -2.20998692E+01;
  COFD[1137] = 5.36053938E+00;
  COFD[1138] = -4.36434519E-01;
  COFD[1139] = 1.71484255E-02;
  COFD[1140] = -2.04833743E+01;
  COFD[1141] = 5.23112374E+00;
  COFD[1142] = -4.54967682E-01;
  COFD[1143] = 1.93570423E-02;
  COFD[1144] = -1.34709956E+01;
  COFD[1145] = 3.09379603E+00;
  COFD[1146] = -1.91268635E-01;
  COFD[1147] = 8.47480224E-03;
  COFD[1148] = -1.72232379E+01;
  COFD[1149] = 4.69060745E+00;
  COFD[1150] = -3.92369888E-01;
  COFD[1151] = 1.69459661E-02;
  COFD[1152] = -1.65488277E+01;
  COFD[1153] = 3.95035840E+00;
  COFD[1154] = -3.00959418E-01;
  COFD[1155] = 1.31692593E-02;
  COFD[1156] = -1.78834868E+01;
  COFD[1157] = 4.29613154E+00;
  COFD[1158] = -3.44012526E-01;
  COFD[1159] = 1.49643715E-02;
  COFD[1160] = -1.65675292E+01;
  COFD[1161] = 3.95035840E+00;
  COFD[1162] = -3.00959418E-01;
  COFD[1163] = 1.31692593E-02;
  COFD[1164] = -2.15095920E+01;
  COFD[1165] = 5.46737673E+00;
  COFD[1166] = -4.55696085E-01;
  COFD[1167] = 1.81982625E-02;
  COFD[1168] = -1.78903850E+01;
  COFD[1169] = 4.29613154E+00;
  COFD[1170] = -3.44012526E-01;
  COFD[1171] = 1.49643715E-02;
  COFD[1172] = -1.78969625E+01;
  COFD[1173] = 4.29613154E+00;
  COFD[1174] = -3.44012526E-01;
  COFD[1175] = 1.49643715E-02;
  COFD[1176] = -1.88463801E+01;
  COFD[1177] = 4.68393046E+00;
  COFD[1178] = -3.91610863E-01;
  COFD[1179] = 1.69174645E-02;
  COFD[1180] = -1.87897289E+01;
  COFD[1181] = 4.66162351E+00;
  COFD[1182] = -3.88920477E-01;
  COFD[1183] = 1.68089648E-02;
  COFD[1184] = -1.76285583E+01;
  COFD[1185] = 4.19935698E+00;
  COFD[1186] = -3.32310212E-01;
  COFD[1187] = 1.44920670E-02;
  COFD[1188] = -2.09191230E+01;
  COFD[1189] = 5.30153901E+00;
  COFD[1190] = -4.63335119E-01;
  COFD[1191] = 1.96897053E-02;
  COFD[1192] = -2.20036321E+01;
  COFD[1193] = 5.55935694E+00;
  COFD[1194] = -4.74154740E-01;
  COFD[1195] = 1.92584304E-02;
  COFD[1196] = -2.03766918E+01;
  COFD[1197] = 5.13263469E+00;
  COFD[1198] = -4.44457285E-01;
  COFD[1199] = 1.89932102E-02;
  COFD[1200] = -2.12121345E+01;
  COFD[1201] = 5.39823225E+00;
  COFD[1202] = -4.72294645E-01;
  COFD[1203] = 1.99340225E-02;
  COFD[1204] = -2.10944068E+01;
  COFD[1205] = 5.34286099E+00;
  COFD[1206] = -4.68100992E-01;
  COFD[1207] = 1.98731399E-02;
  COFD[1208] = -1.88646025E+01;
  COFD[1209] = 4.72476764E+00;
  COFD[1210] = -3.96306836E-01;
  COFD[1211] = 1.70964541E-02;
  COFD[1212] = -2.21065263E+01;
  COFD[1213] = 5.58360799E+00;
  COFD[1214] = -4.82701436E-01;
  COFD[1215] = 1.98437922E-02;
  COFD[1216] = -2.21153557E+01;
  COFD[1217] = 5.58360799E+00;
  COFD[1218] = -4.82701436E-01;
  COFD[1219] = 1.98437922E-02;
  COFD[1220] = -2.14323161E+01;
  COFD[1221] = 5.37331605E+00;
  COFD[1222] = -4.70491203E-01;
  COFD[1223] = 1.99134666E-02;
  COFD[1224] = -2.14369847E+01;
  COFD[1225] = 5.37331605E+00;
  COFD[1226] = -4.70491203E-01;
  COFD[1227] = 1.99134666E-02;
  COFD[1228] = -1.76002073E+01;
  COFD[1229] = 4.19171952E+00;
  COFD[1230] = -3.31354810E-01;
  COFD[1231] = 1.44520623E-02;
  COFD[1232] = -1.42229344E+01;
  COFD[1233] = 3.38669384E+00;
  COFD[1234] = -2.28784122E-01;
  COFD[1235] = 1.00790953E-02;
  COFD[1236] = -1.82252070E+01;
  COFD[1237] = 5.05237312E+00;
  COFD[1238] = -4.35182396E-01;
  COFD[1239] = 1.86363074E-02;
  COFD[1240] = -1.74792034E+01;
  COFD[1241] = 4.29676909E+00;
  COFD[1242] = -3.44085306E-01;
  COFD[1243] = 1.49671135E-02;
  COFD[1244] = -1.89544717E+01;
  COFD[1245] = 4.68595732E+00;
  COFD[1246] = -3.91842840E-01;
  COFD[1247] = 1.69262542E-02;
  COFD[1248] = -1.74984410E+01;
  COFD[1249] = 4.29676909E+00;
  COFD[1250] = -3.44085306E-01;
  COFD[1251] = 1.49671135E-02;
  COFD[1252] = -2.08812277E+01;
  COFD[1253] = 5.08859217E+00;
  COFD[1254] = -3.90525428E-01;
  COFD[1255] = 1.47376395E-02;
  COFD[1256] = -1.89616566E+01;
  COFD[1257] = 4.68595732E+00;
  COFD[1258] = -3.91842840E-01;
  COFD[1259] = 1.69262542E-02;
  COFD[1260] = -1.89685112E+01;
  COFD[1261] = 4.68595732E+00;
  COFD[1262] = -3.91842840E-01;
  COFD[1263] = 1.69262542E-02;
  COFD[1264] = -1.98646724E+01;
  COFD[1265] = 5.04367502E+00;
  COFD[1266] = -4.34153325E-01;
  COFD[1267] = 1.85956055E-02;
  COFD[1268] = -1.98075051E+01;
  COFD[1269] = 5.02169524E+00;
  COFD[1270] = -4.31582804E-01;
  COFD[1271] = 1.84953568E-02;
  COFD[1272] = -1.86157710E+01;
  COFD[1273] = 4.55689508E+00;
  COFD[1274] = -3.75937921E-01;
  COFD[1275] = 1.62703488E-02;
  COFD[1276] = -2.16802565E+01;
  COFD[1277] = 5.52918296E+00;
  COFD[1278] = -4.85360709E-01;
  COFD[1279] = 2.03448006E-02;
  COFD[1280] = -2.16379525E+01;
  COFD[1281] = 5.29019717E+00;
  COFD[1282] = -4.24502606E-01;
  COFD[1283] = 1.65197343E-02;
  COFD[1284] = -2.12121345E+01;
  COFD[1285] = 5.39823225E+00;
  COFD[1286] = -4.72294645E-01;
  COFD[1287] = 1.99340225E-02;
  COFD[1288] = -2.19327379E+01;
  COFD[1289] = 5.60638188E+00;
  COFD[1290] = -4.91272522E-01;
  COFD[1291] = 2.04396264E-02;
  COFD[1292] = -2.18273535E+01;
  COFD[1293] = 5.55753905E+00;
  COFD[1294] = -4.88136714E-01;
  COFD[1295] = 2.04294957E-02;
  COFD[1296] = -1.99081518E+01;
  COFD[1297] = 5.09311649E+00;
  COFD[1298] = -4.39965178E-01;
  COFD[1299] = 1.88238537E-02;
  COFD[1300] = -2.20453687E+01;
  COFD[1301] = 5.44448440E+00;
  COFD[1302] = -4.51529024E-01;
  COFD[1303] = 1.79698119E-02;
  COFD[1304] = -2.20546120E+01;
  COFD[1305] = 5.44448440E+00;
  COFD[1306] = -4.51529024E-01;
  COFD[1307] = 1.79698119E-02;
  COFD[1308] = -2.21885121E+01;
  COFD[1309] = 5.59472344E+00;
  COFD[1310] = -4.91421518E-01;
  COFD[1311] = 2.05117088E-02;
  COFD[1312] = -2.21933965E+01;
  COFD[1313] = 5.59472344E+00;
  COFD[1314] = -4.91421518E-01;
  COFD[1315] = 2.05117088E-02;
  COFD[1316] = -1.85864196E+01;
  COFD[1317] = 4.54915847E+00;
  COFD[1318] = -3.75000738E-01;
  COFD[1319] = 1.62324821E-02;
  COFD[1320] = -1.39924933E+01;
  COFD[1321] = 3.26384506E+00;
  COFD[1322] = -2.12947087E-01;
  COFD[1323] = 9.39743888E-03;
  COFD[1324] = -1.79345106E+01;
  COFD[1325] = 4.91373893E+00;
  COFD[1326] = -4.18747629E-01;
  COFD[1327] = 1.79856610E-02;
  COFD[1328] = -1.72556425E+01;
  COFD[1329] = 4.17889917E+00;
  COFD[1330] = -3.29752510E-01;
  COFD[1331] = 1.43850275E-02;
  COFD[1332] = -1.86424488E+01;
  COFD[1333] = 4.53572533E+00;
  COFD[1334] = -3.73386925E-01;
  COFD[1335] = 1.61678881E-02;
  COFD[1336] = -1.72753698E+01;
  COFD[1337] = 4.17889917E+00;
  COFD[1338] = -3.29752510E-01;
  COFD[1339] = 1.43850275E-02;
  COFD[1340] = -2.12661812E+01;
  COFD[1341] = 5.24930667E+00;
  COFD[1342] = -4.17435088E-01;
  COFD[1343] = 1.61434424E-02;
  COFD[1344] = -1.86499019E+01;
  COFD[1345] = 4.53572533E+00;
  COFD[1346] = -3.73386925E-01;
  COFD[1347] = 1.61678881E-02;
  COFD[1348] = -1.86570161E+01;
  COFD[1349] = 4.53572533E+00;
  COFD[1350] = -3.73386925E-01;
  COFD[1351] = 1.61678881E-02;
  COFD[1352] = -1.95552136E+01;
  COFD[1353] = 4.90255048E+00;
  COFD[1354] = -4.17368501E-01;
  COFD[1355] = 1.79287358E-02;
  COFD[1356] = -1.94823661E+01;
  COFD[1357] = 4.87333294E+00;
  COFD[1358] = -4.13769241E-01;
  COFD[1359] = 1.77802244E-02;
  COFD[1360] = -1.83538331E+01;
  COFD[1361] = 4.42828044E+00;
  COFD[1362] = -3.60417833E-01;
  COFD[1363] = 1.56455103E-02;
  COFD[1364] = -2.14326420E+01;
  COFD[1365] = 5.41729961E+00;
  COFD[1366] = -4.73400281E-01;
  COFD[1367] = 1.99269567E-02;
  COFD[1368] = -2.19399756E+01;
  COFD[1369] = 5.41841631E+00;
  COFD[1370] = -4.46818971E-01;
  COFD[1371] = 1.77127652E-02;
  COFD[1372] = -2.10944068E+01;
  COFD[1373] = 5.34286099E+00;
  COFD[1374] = -4.68100992E-01;
  COFD[1375] = 1.98731399E-02;
  COFD[1376] = -2.18273535E+01;
  COFD[1377] = 5.55753905E+00;
  COFD[1378] = -4.88136714E-01;
  COFD[1379] = 2.04294957E-02;
  COFD[1380] = -2.15746130E+01;
  COFD[1381] = 5.44803850E+00;
  COFD[1382] = -4.76610560E-01;
  COFD[1383] = 2.00355294E-02;
  COFD[1384] = -1.96408096E+01;
  COFD[1385] = 4.95923807E+00;
  COFD[1386] = -4.24176182E-01;
  COFD[1387] = 1.82020215E-02;
  COFD[1388] = -2.22159601E+01;
  COFD[1389] = 5.51722375E+00;
  COFD[1390] = -4.66081431E-01;
  COFD[1391] = 1.88044011E-02;
  COFD[1392] = -2.22255943E+01;
  COFD[1393] = 5.51722375E+00;
  COFD[1394] = -4.66081431E-01;
  COFD[1395] = 1.88044011E-02;
  COFD[1396] = -2.19982906E+01;
  COFD[1397] = 5.51276597E+00;
  COFD[1398] = -4.83701824E-01;
  COFD[1399] = 2.02915297E-02;
  COFD[1400] = -2.20033786E+01;
  COFD[1401] = 5.51276597E+00;
  COFD[1402] = -4.83701824E-01;
  COFD[1403] = 2.02915297E-02;
  COFD[1404] = -1.83249359E+01;
  COFD[1405] = 4.42045763E+00;
  COFD[1406] = -3.59451578E-01;
  COFD[1407] = 1.56056164E-02;
  COFD[1408] = -1.22004476E+01;
  COFD[1409] = 2.80725489E+00;
  COFD[1410] = -1.54291406E-01;
  COFD[1411] = 6.88290911E-03;
  COFD[1412] = -1.54460977E+01;
  COFD[1413] = 4.26819983E+00;
  COFD[1414] = -3.40766379E-01;
  COFD[1415] = 1.48393361E-02;
  COFD[1416] = -1.49500258E+01;
  COFD[1417] = 3.52327209E+00;
  COFD[1418] = -2.46286208E-01;
  COFD[1419] = 1.08285963E-02;
  COFD[1420] = -1.64169341E+01;
  COFD[1421] = 3.89309916E+00;
  COFD[1422] = -2.93528188E-01;
  COFD[1423] = 1.28463177E-02;
  COFD[1424] = -1.49718147E+01;
  COFD[1425] = 3.52327209E+00;
  COFD[1426] = -2.46286208E-01;
  COFD[1427] = 1.08285963E-02;
  COFD[1428] = -2.10440599E+01;
  COFD[1429] = 5.59806282E+00;
  COFD[1430] = -4.87109535E-01;
  COFD[1431] = 2.01370226E-02;
  COFD[1432] = -1.64255877E+01;
  COFD[1433] = 3.89309916E+00;
  COFD[1434] = -2.93528188E-01;
  COFD[1435] = 1.28463177E-02;
  COFD[1436] = -1.64338675E+01;
  COFD[1437] = 3.89309916E+00;
  COFD[1438] = -2.93528188E-01;
  COFD[1439] = 1.28463177E-02;
  COFD[1440] = -1.72828280E+01;
  COFD[1441] = 4.26063341E+00;
  COFD[1442] = -3.39848064E-01;
  COFD[1443] = 1.48021313E-02;
  COFD[1444] = -1.72316133E+01;
  COFD[1445] = 4.24011069E+00;
  COFD[1446] = -3.37339810E-01;
  COFD[1447] = 1.46996679E-02;
  COFD[1448] = -1.60261598E+01;
  COFD[1449] = 3.73312045E+00;
  COFD[1450] = -2.72579779E-01;
  COFD[1451] = 1.19290272E-02;
  COFD[1452] = -1.94485902E+01;
  COFD[1453] = 4.91446566E+00;
  COFD[1454] = -4.18837152E-01;
  COFD[1455] = 1.79893537E-02;
  COFD[1456] = -2.14303411E+01;
  COFD[1457] = 5.59268435E+00;
  COFD[1458] = -4.91232974E-01;
  COFD[1459] = 2.05064746E-02;
  COFD[1460] = -1.88646025E+01;
  COFD[1461] = 4.72476764E+00;
  COFD[1462] = -3.96306836E-01;
  COFD[1463] = 1.70964541E-02;
  COFD[1464] = -1.99081518E+01;
  COFD[1465] = 5.09311649E+00;
  COFD[1466] = -4.39965178E-01;
  COFD[1467] = 1.88238537E-02;
  COFD[1468] = -1.96408096E+01;
  COFD[1469] = 4.95923807E+00;
  COFD[1470] = -4.24176182E-01;
  COFD[1471] = 1.82020215E-02;
  COFD[1472] = -1.72414795E+01;
  COFD[1473] = 4.29808578E+00;
  COFD[1474] = -3.44235570E-01;
  COFD[1475] = 1.49727727E-02;
  COFD[1476] = -2.12621849E+01;
  COFD[1477] = 5.47935225E+00;
  COFD[1478] = -4.80056796E-01;
  COFD[1479] = 2.01607180E-02;
  COFD[1480] = -2.12736166E+01;
  COFD[1481] = 5.47935225E+00;
  COFD[1482] = -4.80056796E-01;
  COFD[1483] = 2.01607180E-02;
  COFD[1484] = -2.01223105E+01;
  COFD[1485] = 5.03101171E+00;
  COFD[1486] = -4.32665019E-01;
  COFD[1487] = 1.85372086E-02;
  COFD[1488] = -2.01283319E+01;
  COFD[1489] = 5.03101171E+00;
  COFD[1490] = -4.32665019E-01;
  COFD[1491] = 1.85372086E-02;
  COFD[1492] = -1.59884349E+01;
  COFD[1493] = 3.72220402E+00;
  COFD[1494] = -2.71150591E-01;
  COFD[1495] = 1.18665265E-02;
  COFD[1496] = -1.57035004E+01;
  COFD[1497] = 3.93614244E+00;
  COFD[1498] = -2.99111497E-01;
  COFD[1499] = 1.30888229E-02;
  COFD[1500] = -1.94688845E+01;
  COFD[1501] = 5.43830787E+00;
  COFD[1502] = -4.75472880E-01;
  COFD[1503] = 1.99909996E-02;
  COFD[1504] = -1.90883170E+01;
  COFD[1505] = 4.84384483E+00;
  COFD[1506] = -4.10265575E-01;
  COFD[1507] = 1.76414287E-02;
  COFD[1508] = -2.05184780E+01;
  COFD[1509] = 5.18417470E+00;
  COFD[1510] = -4.49491573E-01;
  COFD[1511] = 1.91438508E-02;
  COFD[1512] = -1.91102567E+01;
  COFD[1513] = 4.84384483E+00;
  COFD[1514] = -4.10265575E-01;
  COFD[1515] = 1.76414287E-02;
  COFD[1516] = -1.87383877E+01;
  COFD[1517] = 3.96926341E+00;
  COFD[1518] = -2.16412264E-01;
  COFD[1519] = 6.06012078E-03;
  COFD[1520] = -2.05272244E+01;
  COFD[1521] = 5.18417470E+00;
  COFD[1522] = -4.49491573E-01;
  COFD[1523] = 1.91438508E-02;
  COFD[1524] = -2.05355943E+01;
  COFD[1525] = 5.18417470E+00;
  COFD[1526] = -4.49491573E-01;
  COFD[1527] = 1.91438508E-02;
  COFD[1528] = -2.11606942E+01;
  COFD[1529] = 5.42846112E+00;
  COFD[1530] = -4.74321870E-01;
  COFD[1531] = 1.99459749E-02;
  COFD[1532] = -2.11309194E+01;
  COFD[1533] = 5.41773516E+00;
  COFD[1534] = -4.73414338E-01;
  COFD[1535] = 1.99258685E-02;
  COFD[1536] = -2.02922626E+01;
  COFD[1537] = 5.11106992E+00;
  COFD[1538] = -4.42047129E-01;
  COFD[1539] = 1.89042990E-02;
  COFD[1540] = -2.22116629E+01;
  COFD[1541] = 5.54251230E+00;
  COFD[1542] = -4.70946314E-01;
  COFD[1543] = 1.90785869E-02;
  COFD[1544] = -2.01015275E+01;
  COFD[1545] = 4.41511629E+00;
  COFD[1546] = -2.84086963E-01;
  COFD[1547] = 9.37586971E-03;
  COFD[1548] = -2.21065263E+01;
  COFD[1549] = 5.58360799E+00;
  COFD[1550] = -4.82701436E-01;
  COFD[1551] = 1.98437922E-02;
  COFD[1552] = -2.20453687E+01;
  COFD[1553] = 5.44448440E+00;
  COFD[1554] = -4.51529024E-01;
  COFD[1555] = 1.79698119E-02;
  COFD[1556] = -2.22159601E+01;
  COFD[1557] = 5.51722375E+00;
  COFD[1558] = -4.66081431E-01;
  COFD[1559] = 1.88044011E-02;
  COFD[1560] = -2.12621849E+01;
  COFD[1561] = 5.47935225E+00;
  COFD[1562] = -4.80056796E-01;
  COFD[1563] = 2.01607180E-02;
  COFD[1564] = -2.09002680E+01;
  COFD[1565] = 4.72895031E+00;
  COFD[1566] = -3.33332771E-01;
  COFD[1567] = 1.18431478E-02;
  COFD[1568] = -2.09118417E+01;
  COFD[1569] = 4.72895031E+00;
  COFD[1570] = -3.33332771E-01;
  COFD[1571] = 1.18431478E-02;
  COFD[1572] = -2.24554479E+01;
  COFD[1573] = 5.49330641E+00;
  COFD[1574] = -4.60498247E-01;
  COFD[1575] = 1.84639199E-02;
  COFD[1576] = -2.24615428E+01;
  COFD[1577] = 5.49330641E+00;
  COFD[1578] = -4.60498247E-01;
  COFD[1579] = 1.84639199E-02;
  COFD[1580] = -2.02646659E+01;
  COFD[1581] = 5.10426133E+00;
  COFD[1582] = -4.41256919E-01;
  COFD[1583] = 1.88737290E-02;
  COFD[1584] = -1.57045486E+01;
  COFD[1585] = 3.93614244E+00;
  COFD[1586] = -2.99111497E-01;
  COFD[1587] = 1.30888229E-02;
  COFD[1588] = -1.94694206E+01;
  COFD[1589] = 5.43830787E+00;
  COFD[1590] = -4.75472880E-01;
  COFD[1591] = 1.99909996E-02;
  COFD[1592] = -1.90946650E+01;
  COFD[1593] = 4.84384483E+00;
  COFD[1594] = -4.10265575E-01;
  COFD[1595] = 1.76414287E-02;
  COFD[1596] = -2.05284666E+01;
  COFD[1597] = 5.18417470E+00;
  COFD[1598] = -4.49491573E-01;
  COFD[1599] = 1.91438508E-02;
  COFD[1600] = -1.91168913E+01;
  COFD[1601] = 4.84384483E+00;
  COFD[1602] = -4.10265575E-01;
  COFD[1603] = 1.76414287E-02;
  COFD[1604] = -1.87452995E+01;
  COFD[1605] = 3.96926341E+00;
  COFD[1606] = -2.16412264E-01;
  COFD[1607] = 6.06012078E-03;
  COFD[1608] = -2.05373910E+01;
  COFD[1609] = 5.18417470E+00;
  COFD[1610] = -4.49491573E-01;
  COFD[1611] = 1.91438508E-02;
  COFD[1612] = -2.05459343E+01;
  COFD[1613] = 5.18417470E+00;
  COFD[1614] = -4.49491573E-01;
  COFD[1615] = 1.91438508E-02;
  COFD[1616] = -2.11667588E+01;
  COFD[1617] = 5.42846112E+00;
  COFD[1618] = -4.74321870E-01;
  COFD[1619] = 1.99459749E-02;
  COFD[1620] = -2.11372801E+01;
  COFD[1621] = 5.41773516E+00;
  COFD[1622] = -4.73414338E-01;
  COFD[1623] = 1.99258685E-02;
  COFD[1624] = -2.03014971E+01;
  COFD[1625] = 5.11106992E+00;
  COFD[1626] = -4.42047129E-01;
  COFD[1627] = 1.89042990E-02;
  COFD[1628] = -2.22235050E+01;
  COFD[1629] = 5.54251230E+00;
  COFD[1630] = -4.70946314E-01;
  COFD[1631] = 1.90785869E-02;
  COFD[1632] = -2.01111534E+01;
  COFD[1633] = 4.41511629E+00;
  COFD[1634] = -2.84086963E-01;
  COFD[1635] = 9.37586971E-03;
  COFD[1636] = -2.21153557E+01;
  COFD[1637] = 5.58360799E+00;
  COFD[1638] = -4.82701436E-01;
  COFD[1639] = 1.98437922E-02;
  COFD[1640] = -2.20546120E+01;
  COFD[1641] = 5.44448440E+00;
  COFD[1642] = -4.51529024E-01;
  COFD[1643] = 1.79698119E-02;
  COFD[1644] = -2.22255943E+01;
  COFD[1645] = 5.51722375E+00;
  COFD[1646] = -4.66081431E-01;
  COFD[1647] = 1.88044011E-02;
  COFD[1648] = -2.12736166E+01;
  COFD[1649] = 5.47935225E+00;
  COFD[1650] = -4.80056796E-01;
  COFD[1651] = 2.01607180E-02;
  COFD[1652] = -2.09118417E+01;
  COFD[1653] = 4.72895031E+00;
  COFD[1654] = -3.33332771E-01;
  COFD[1655] = 1.18431478E-02;
  COFD[1656] = -2.09236897E+01;
  COFD[1657] = 4.72895031E+00;
  COFD[1658] = -3.33332771E-01;
  COFD[1659] = 1.18431478E-02;
  COFD[1660] = -2.24668858E+01;
  COFD[1661] = 5.49330641E+00;
  COFD[1662] = -4.60498247E-01;
  COFD[1663] = 1.84639199E-02;
  COFD[1664] = -2.24731226E+01;
  COFD[1665] = 5.49330641E+00;
  COFD[1666] = -4.60498247E-01;
  COFD[1667] = 1.84639199E-02;
  COFD[1668] = -2.02739012E+01;
  COFD[1669] = 5.10426133E+00;
  COFD[1670] = -4.41256919E-01;
  COFD[1671] = 1.88737290E-02;
  COFD[1672] = -1.43129867E+01;
  COFD[1673] = 3.31177824E+00;
  COFD[1674] = -2.18945280E-01;
  COFD[1675] = 9.64764419E-03;
  COFD[1676] = -1.83539845E+01;
  COFD[1677] = 4.98756925E+00;
  COFD[1678] = -4.27526072E-01;
  COFD[1679] = 1.83341755E-02;
  COFD[1680] = -1.76774947E+01;
  COFD[1681] = 4.24719726E+00;
  COFD[1682] = -3.38206061E-01;
  COFD[1683] = 1.47350654E-02;
  COFD[1684] = -1.91121670E+01;
  COFD[1685] = 4.61801405E+00;
  COFD[1686] = -3.83535652E-01;
  COFD[1687] = 1.65862513E-02;
  COFD[1688] = -1.76992903E+01;
  COFD[1689] = 4.24719726E+00;
  COFD[1690] = -3.38206061E-01;
  COFD[1691] = 1.47350654E-02;
  COFD[1692] = -2.13847376E+01;
  COFD[1693] = 5.17440955E+00;
  COFD[1694] = -4.04678430E-01;
  COFD[1695] = 1.54706350E-02;
  COFD[1696] = -1.91208247E+01;
  COFD[1697] = 4.61801405E+00;
  COFD[1698] = -3.83535652E-01;
  COFD[1699] = 1.65862513E-02;
  COFD[1700] = -1.91291085E+01;
  COFD[1701] = 4.61801405E+00;
  COFD[1702] = -3.83535652E-01;
  COFD[1703] = 1.65862513E-02;
  COFD[1704] = -1.99803480E+01;
  COFD[1705] = 4.97875278E+00;
  COFD[1706] = -4.26485475E-01;
  COFD[1707] = 1.82931933E-02;
  COFD[1708] = -1.99235836E+01;
  COFD[1709] = 4.95514826E+00;
  COFD[1710] = -4.23691395E-01;
  COFD[1711] = 1.81828318E-02;
  COFD[1712] = -1.87684982E+01;
  COFD[1713] = 4.49191492E+00;
  COFD[1714] = -3.68041771E-01;
  COFD[1715] = 1.59498676E-02;
  COFD[1716] = -2.18590684E+01;
  COFD[1717] = 5.47368915E+00;
  COFD[1718] = -4.79424291E-01;
  COFD[1719] = 2.01372920E-02;
  COFD[1720] = -2.20947854E+01;
  COFD[1721] = 5.36053938E+00;
  COFD[1722] = -4.36434519E-01;
  COFD[1723] = 1.71484255E-02;
  COFD[1724] = -2.14323161E+01;
  COFD[1725] = 5.37331605E+00;
  COFD[1726] = -4.70491203E-01;
  COFD[1727] = 1.99134666E-02;
  COFD[1728] = -2.21885121E+01;
  COFD[1729] = 5.59472344E+00;
  COFD[1730] = -4.91421518E-01;
  COFD[1731] = 2.05117088E-02;
  COFD[1732] = -2.19982906E+01;
  COFD[1733] = 5.51276597E+00;
  COFD[1734] = -4.83701824E-01;
  COFD[1735] = 2.02915297E-02;
  COFD[1736] = -2.01223105E+01;
  COFD[1737] = 5.03101171E+00;
  COFD[1738] = -4.32665019E-01;
  COFD[1739] = 1.85372086E-02;
  COFD[1740] = -2.24554479E+01;
  COFD[1741] = 5.49330641E+00;
  COFD[1742] = -4.60498247E-01;
  COFD[1743] = 1.84639199E-02;
  COFD[1744] = -2.24668858E+01;
  COFD[1745] = 5.49330641E+00;
  COFD[1746] = -4.60498247E-01;
  COFD[1747] = 1.84639199E-02;
  COFD[1748] = -2.23842793E+01;
  COFD[1749] = 5.56066804E+00;
  COFD[1750] = -4.88405706E-01;
  COFD[1751] = 2.04357330E-02;
  COFD[1752] = -2.23903039E+01;
  COFD[1753] = 5.56066804E+00;
  COFD[1754] = -4.88405706E-01;
  COFD[1755] = 2.04357330E-02;
  COFD[1756] = -1.87434421E+01;
  COFD[1757] = 4.48550694E+00;
  COFD[1758] = -3.67277454E-01;
  COFD[1759] = 1.59194755E-02;
  COFD[1760] = -1.43135474E+01;
  COFD[1761] = 3.31177824E+00;
  COFD[1762] = -2.18945280E-01;
  COFD[1763] = 9.64764419E-03;
  COFD[1764] = -1.83542714E+01;
  COFD[1765] = 4.98756925E+00;
  COFD[1766] = -4.27526072E-01;
  COFD[1767] = 1.83341755E-02;
  COFD[1768] = -1.76808635E+01;
  COFD[1769] = 4.24719726E+00;
  COFD[1770] = -3.38206061E-01;
  COFD[1771] = 1.47350654E-02;
  COFD[1772] = -1.91174394E+01;
  COFD[1773] = 4.61801405E+00;
  COFD[1774] = -3.83535652E-01;
  COFD[1775] = 1.65862513E-02;
  COFD[1776] = -1.77028097E+01;
  COFD[1777] = 4.24719726E+00;
  COFD[1778] = -3.38206061E-01;
  COFD[1779] = 1.47350654E-02;
  COFD[1780] = -2.13884026E+01;
  COFD[1781] = 5.17440955E+00;
  COFD[1782] = -4.04678430E-01;
  COFD[1783] = 1.54706350E-02;
  COFD[1784] = -1.91261897E+01;
  COFD[1785] = 4.61801405E+00;
  COFD[1786] = -3.83535652E-01;
  COFD[1787] = 1.65862513E-02;
  COFD[1788] = -1.91345636E+01;
  COFD[1789] = 4.61801405E+00;
  COFD[1790] = -3.83535652E-01;
  COFD[1791] = 1.65862513E-02;
  COFD[1792] = -1.99835677E+01;
  COFD[1793] = 4.97875278E+00;
  COFD[1794] = -4.26485475E-01;
  COFD[1795] = 1.82931933E-02;
  COFD[1796] = -1.99269591E+01;
  COFD[1797] = 4.95514826E+00;
  COFD[1798] = -4.23691395E-01;
  COFD[1799] = 1.81828318E-02;
  COFD[1800] = -1.87733780E+01;
  COFD[1801] = 4.49191492E+00;
  COFD[1802] = -3.68041771E-01;
  COFD[1803] = 1.59498676E-02;
  COFD[1804] = -2.18653022E+01;
  COFD[1805] = 5.47368915E+00;
  COFD[1806] = -4.79424291E-01;
  COFD[1807] = 2.01372920E-02;
  COFD[1808] = -2.20998692E+01;
  COFD[1809] = 5.36053938E+00;
  COFD[1810] = -4.36434519E-01;
  COFD[1811] = 1.71484255E-02;
  COFD[1812] = -2.14369847E+01;
  COFD[1813] = 5.37331605E+00;
  COFD[1814] = -4.70491203E-01;
  COFD[1815] = 1.99134666E-02;
  COFD[1816] = -2.21933965E+01;
  COFD[1817] = 5.59472344E+00;
  COFD[1818] = -4.91421518E-01;
  COFD[1819] = 2.05117088E-02;
  COFD[1820] = -2.20033786E+01;
  COFD[1821] = 5.51276597E+00;
  COFD[1822] = -4.83701824E-01;
  COFD[1823] = 2.02915297E-02;
  COFD[1824] = -2.01283319E+01;
  COFD[1825] = 5.03101171E+00;
  COFD[1826] = -4.32665019E-01;
  COFD[1827] = 1.85372086E-02;
  COFD[1828] = -2.24615428E+01;
  COFD[1829] = 5.49330641E+00;
  COFD[1830] = -4.60498247E-01;
  COFD[1831] = 1.84639199E-02;
  COFD[1832] = -2.24731226E+01;
  COFD[1833] = 5.49330641E+00;
  COFD[1834] = -4.60498247E-01;
  COFD[1835] = 1.84639199E-02;
  COFD[1836] = -2.23903039E+01;
  COFD[1837] = 5.56066804E+00;
  COFD[1838] = -4.88405706E-01;
  COFD[1839] = 2.04357330E-02;
  COFD[1840] = -2.23964020E+01;
  COFD[1841] = 5.56066804E+00;
  COFD[1842] = -4.88405706E-01;
  COFD[1843] = 2.04357330E-02;
  COFD[1844] = -1.87483223E+01;
  COFD[1845] = 4.48550694E+00;
  COFD[1846] = -3.67277454E-01;
  COFD[1847] = 1.59194755E-02;
  COFD[1848] = -1.16906458E+01;
  COFD[1849] = 2.47469981E+00;
  COFD[1850] = -1.10436257E-01;
  COFD[1851] = 4.95273813E-03;
  COFD[1852] = -1.42894603E+01;
  COFD[1853] = 3.67490723E+00;
  COFD[1854] = -2.65114792E-01;
  COFD[1855] = 1.16092671E-02;
  COFD[1856] = -1.40756909E+01;
  COFD[1857] = 3.07549274E+00;
  COFD[1858] = -1.88889344E-01;
  COFD[1859] = 8.37152866E-03;
  COFD[1860] = -1.52414498E+01;
  COFD[1861] = 3.35922578E+00;
  COFD[1862] = -2.25181399E-01;
  COFD[1863] = 9.92132878E-03;
  COFD[1864] = -1.40949183E+01;
  COFD[1865] = 3.07549274E+00;
  COFD[1866] = -1.88889344E-01;
  COFD[1867] = 8.37152866E-03;
  COFD[1868] = -2.10643264E+01;
  COFD[1869] = 5.53614864E+00;
  COFD[1870] = -4.86046753E-01;
  COFD[1871] = 2.03659193E-02;
  COFD[1872] = -1.52486292E+01;
  COFD[1873] = 3.35922578E+00;
  COFD[1874] = -2.25181399E-01;
  COFD[1875] = 9.92132878E-03;
  COFD[1876] = -1.52554785E+01;
  COFD[1877] = 3.35922578E+00;
  COFD[1878] = -2.25181399E-01;
  COFD[1879] = 9.92132878E-03;
  COFD[1880] = -1.59633426E+01;
  COFD[1881] = 3.66853818E+00;
  COFD[1882] = -2.64346221E-01;
  COFD[1883] = 1.15784613E-02;
  COFD[1884] = -1.59327344E+01;
  COFD[1885] = 3.65620899E+00;
  COFD[1886] = -2.62933804E-01;
  COFD[1887] = 1.15253223E-02;
  COFD[1888] = -1.50031706E+01;
  COFD[1889] = 3.26223357E+00;
  COFD[1890] = -2.12746642E-01;
  COFD[1891] = 9.38912883E-03;
  COFD[1892] = -1.81432499E+01;
  COFD[1893] = 4.37565431E+00;
  COFD[1894] = -3.53906025E-01;
  COFD[1895] = 1.53760786E-02;
  COFD[1896] = -2.04833743E+01;
  COFD[1897] = 5.23112374E+00;
  COFD[1898] = -4.54967682E-01;
  COFD[1899] = 1.93570423E-02;
  COFD[1900] = -1.76002073E+01;
  COFD[1901] = 4.19171952E+00;
  COFD[1902] = -3.31354810E-01;
  COFD[1903] = 1.44520623E-02;
  COFD[1904] = -1.85864196E+01;
  COFD[1905] = 4.54915847E+00;
  COFD[1906] = -3.75000738E-01;
  COFD[1907] = 1.62324821E-02;
  COFD[1908] = -1.83249359E+01;
  COFD[1909] = 4.42045763E+00;
  COFD[1910] = -3.59451578E-01;
  COFD[1911] = 1.56056164E-02;
  COFD[1912] = -1.59884349E+01;
  COFD[1913] = 3.72220402E+00;
  COFD[1914] = -2.71150591E-01;
  COFD[1915] = 1.18665265E-02;
  COFD[1916] = -2.02646659E+01;
  COFD[1917] = 5.10426133E+00;
  COFD[1918] = -4.41256919E-01;
  COFD[1919] = 1.88737290E-02;
  COFD[1920] = -2.02739012E+01;
  COFD[1921] = 5.10426133E+00;
  COFD[1922] = -4.41256919E-01;
  COFD[1923] = 1.88737290E-02;
  COFD[1924] = -1.87434421E+01;
  COFD[1925] = 4.48550694E+00;
  COFD[1926] = -3.67277454E-01;
  COFD[1927] = 1.59194755E-02;
  COFD[1928] = -1.87483223E+01;
  COFD[1929] = 4.48550694E+00;
  COFD[1930] = -3.67277454E-01;
  COFD[1931] = 1.59194755E-02;
  COFD[1932] = -1.49828551E+01;
  COFD[1933] = 3.25781069E+00;
  COFD[1934] = -2.12199367E-01;
  COFD[1935] = 9.36657283E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 0;
  KTDIF[1] = 1;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 0.00000000E+00;
  COFTD[1] = 0.00000000E+00;
  COFTD[2] = 0.00000000E+00;
  COFTD[3] = 0.00000000E+00;
  COFTD[4] = -1.44152190E-01;
  COFTD[5] = -7.99993584E-05;
  COFTD[6] = 4.89707442E-08;
  COFTD[7] = -9.14277269E-12;
  COFTD[8] = 4.06676789E-01;
  COFTD[9] = 3.84699853E-05;
  COFTD[10] = -2.54843294E-08;
  COFTD[11] = 5.86294132E-12;
  COFTD[12] = 4.26576987E-01;
  COFTD[13] = 1.20406440E-04;
  COFTD[14] = -7.67293441E-08;
  COFTD[15] = 1.52089282E-11;
  COFTD[16] = 4.12890501E-01;
  COFTD[17] = 3.90577773E-05;
  COFTD[18] = -2.58737105E-08;
  COFTD[19] = 5.95252260E-12;
  COFTD[20] = 2.27466103E-02;
  COFTD[21] = 6.73071543E-04;
  COFTD[22] = -3.40932103E-07;
  COFTD[23] = 5.48493184E-11;
  COFTD[24] = 4.28228101E-01;
  COFTD[25] = 1.20872486E-04;
  COFTD[26] = -7.70263335E-08;
  COFTD[27] = 1.52677960E-11;
  COFTD[28] = 4.29786829E-01;
  COFTD[29] = 1.21312456E-04;
  COFTD[30] = -7.73067054E-08;
  COFTD[31] = 1.53233700E-11;
  COFTD[32] = 3.31188133E-01;
  COFTD[33] = 1.81325042E-04;
  COFTD[34] = -1.11095367E-07;
  COFTD[35] = 2.07634046E-11;
  COFTD[36] = 3.39554500E-01;
  COFTD[37] = 1.79333587E-04;
  COFTD[38] = -1.10134815E-07;
  COFTD[39] = 2.06425572E-11;
  COFTD[40] = 4.30602469E-01;
  COFTD[41] = 9.35955212E-05;
  COFTD[42] = -6.03979306E-08;
  COFTD[43] = 1.23114290E-11;
  COFTD[44] = 2.93190141E-01;
  COFTD[45] = 4.01428114E-04;
  COFTD[46] = -2.30704675E-07;
  COFTD[47] = 4.05174676E-11;
  COFTD[48] = 1.22692619E-01;
  COFTD[49] = 6.21274281E-04;
  COFTD[50] = -3.29963157E-07;
  COFTD[51] = 5.47158146E-11;
  COFTD[52] = 3.05611370E-01;
  COFTD[53] = 3.24503916E-04;
  COFTD[54] = -1.89888419E-07;
  COFTD[55] = 3.38661408E-11;
  COFTD[56] = 2.49016176E-01;
  COFTD[57] = 4.29034331E-04;
  COFTD[58] = -2.42667349E-07;
  COFTD[59] = 4.20799172E-11;
  COFTD[60] = 2.74035711E-01;
  COFTD[61] = 3.96247941E-04;
  COFTD[62] = -2.26856932E-07;
  COFTD[63] = 3.97175174E-11;
  COFTD[64] = 3.86105710E-01;
  COFTD[65] = 2.28759408E-04;
  COFTD[66] = -1.39424407E-07;
  COFTD[67] = 2.58988578E-11;
  COFTD[68] = 1.59288295E-01;
  COFTD[69] = 6.02831194E-04;
  COFTD[70] = -3.24836171E-07;
  COFTD[71] = 5.43906658E-11;
  COFTD[72] = 1.59990556E-01;
  COFTD[73] = 6.05488919E-04;
  COFTD[74] = -3.26268289E-07;
  COFTD[75] = 5.46304600E-11;
  COFTD[76] = 2.71945062E-01;
  COFTD[77] = 4.30812732E-04;
  COFTD[78] = -2.45083425E-07;
  COFTD[79] = 4.26911430E-11;
  COFTD[80] = 2.72586795E-01;
  COFTD[81] = 4.31829359E-04;
  COFTD[82] = -2.45661770E-07;
  COFTD[83] = 4.27918850E-11;
  COFTD[84] = 4.31330748E-01;
  COFTD[85] = 9.20535689E-05;
  COFTD[86] = -5.94508898E-08;
  COFTD[87] = 1.21437846E-11;
  COFTD[88] = 1.44152190E-01;
  COFTD[89] = 7.99993584E-05;
  COFTD[90] = -4.89707442E-08;
  COFTD[91] = 9.14277269E-12;
  COFTD[92] = 0.00000000E+00;
  COFTD[93] = 0.00000000E+00;
  COFTD[94] = 0.00000000E+00;
  COFTD[95] = 0.00000000E+00;
  COFTD[96] = 2.35281489E-01;
  COFTD[97] = 4.65667373E-04;
  COFTD[98] = -2.60938016E-07;
  COFTD[99] = 4.49268709E-11;
  COFTD[100] = 1.79839678E-01;
  COFTD[101] = 6.01720824E-04;
  COFTD[102] = -3.26432767E-07;
  COFTD[103] = 5.49110406E-11;
  COFTD[104] = 2.37051899E-01;
  COFTD[105] = 4.69171356E-04;
  COFTD[106] = -2.62901483E-07;
  COFTD[107] = 4.52649298E-11;
  COFTD[108] = -1.74351746E-01;
  COFTD[109] = 8.62242165E-04;
  COFTD[110] = -3.79543417E-07;
  COFTD[111] = 5.60259034E-11;
  COFTD[112] = 1.80186380E-01;
  COFTD[113] = 6.02880848E-04;
  COFTD[114] = -3.27062078E-07;
  COFTD[115] = 5.50169005E-11;
  COFTD[116] = 1.80513126E-01;
  COFTD[117] = 6.03974096E-04;
  COFTD[118] = -3.27655164E-07;
  COFTD[119] = 5.51166667E-11;
  COFTD[120] = 1.00038655E-01;
  COFTD[121] = 6.50465703E-04;
  COFTD[122] = -3.41777446E-07;
  COFTD[123] = 5.62776574E-11;
  COFTD[124] = 1.05123703E-01;
  COFTD[125] = 6.50663360E-04;
  COFTD[126] = -3.42563171E-07;
  COFTD[127] = 5.64801866E-11;
  COFTD[128] = 2.00119185E-01;
  COFTD[129] = 5.64791694E-04;
  COFTD[130] = -3.09444383E-07;
  COFTD[131] = 5.24137469E-11;
  COFTD[132] = -2.00308977E-02;
  COFTD[133] = 8.50438113E-04;
  COFTD[134] = -4.21063477E-07;
  COFTD[135] = 6.67958138E-11;
  COFTD[136] = -1.61357064E-01;
  COFTD[137] = 9.05917454E-04;
  COFTD[138] = -4.07877889E-07;
  COFTD[139] = 6.10624399E-11;
  COFTD[140] = 1.63244604E-02;
  COFTD[141] = 7.90131000E-04;
  COFTD[142] = -3.98291254E-07;
  COFTD[143] = 6.38849501E-11;
  COFTD[144] = -5.08743421E-02;
  COFTD[145] = 8.54340362E-04;
  COFTD[146] = -4.15925370E-07;
  COFTD[147] = 6.53061561E-11;
  COFTD[148] = -2.72323151E-02;
  COFTD[149] = 8.39182512E-04;
  COFTD[150] = -4.13848987E-07;
  COFTD[151] = 6.54926559E-11;
  COFTD[152] = 9.86932164E-02;
  COFTD[153] = 7.20973229E-04;
  COFTD[154] = -3.77134366E-07;
  COFTD[155] = 6.19201176E-11;
  COFTD[156] = -1.41640200E-01;
  COFTD[157] = 9.21402335E-04;
  COFTD[158] = -4.23209196E-07;
  COFTD[159] = 6.41398937E-11;
  COFTD[160] = -1.41951569E-01;
  COFTD[161] = 9.23427864E-04;
  COFTD[162] = -4.24139542E-07;
  COFTD[163] = 6.42808932E-11;
  COFTD[164] = -4.05264355E-02;
  COFTD[165] = 8.65034494E-04;
  COFTD[166] = -4.23754623E-07;
  COFTD[167] = 6.67873033E-11;
  COFTD[168] = -4.05741399E-02;
  COFTD[169] = 8.66052741E-04;
  COFTD[170] = -4.24253431E-07;
  COFTD[171] = 6.68659197E-11;
  COFTD[172] = 2.01521521E-01;
  COFTD[173] = 5.62743751E-04;
  COFTD[174] = -3.08519054E-07;
  COFTD[175] = 5.22805672E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[22];
  amrex::Real SIG[22];
  amrex::Real wt[22];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: H2
  // Imported from NIST
  Tci[0] = 33.145000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (2.015880 * 2.015880 * 12.964000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (2.015880 * 12.964000);
  acentric_i[0] = -0.219000;

  // species 1: H
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: O
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: O2
  // Imported from NIST
  Tci[3] = 154.581000;
  ai[3] = 1e6 * 0.42748 * Rcst * Rcst * Tci[3] * Tci[3] /
          (31.998800 * 31.998800 * 50.430466);
  bi[3] = 0.08664 * Rcst * Tci[3] / (31.998800 * 50.430466);
  acentric_i[3] = 0.022200;

  // species 4: OH
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: H2O
  // Imported from NIST
  Tci[5] = 647.096000;
  ai[5] = 1e6 * 0.42748 * Rcst * Rcst * Tci[5] * Tci[5] /
          (18.015340 * 18.015340 * 220.640000);
  bi[5] = 0.08664 * Rcst * Tci[5] / (18.015340 * 220.640000);
  acentric_i[5] = 0.344300;

  // species 6: HO2
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: H2O2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: CH3
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: CH4
  // Imported from NIST
  Tci[9] = 190.560000;
  ai[9] = 1e6 * 0.42748 * Rcst * Rcst * Tci[9] * Tci[9] /
          (16.043030 * 16.043030 * 45.990000);
  bi[9] = 0.08664 * Rcst * Tci[9] / (16.043030 * 45.990000);
  acentric_i[9] = 0.011000;

  // species 10: CO
  // Imported from NIST
  Tci[10] = 132.850000;
  ai[10] = 1e6 * 0.42748 * Rcst * Rcst * Tci[10] * Tci[10] /
           (28.010000 * 28.010000 * 34.940000);
  bi[10] = 0.08664 * Rcst * Tci[10] / (28.010000 * 34.940000);
  acentric_i[10] = 0.045000;

  // species 11: CO2
  // Imported from NIST
  Tci[11] = 304.120000;
  ai[11] = 1e6 * 0.42748 * Rcst * Rcst * Tci[11] * Tci[11] /
           (44.009950 * 44.009950 * 73.740000);
  bi[11] = 0.08664 * Rcst * Tci[11] / (44.009950 * 73.740000);
  acentric_i[11] = 0.225000;

  // species 12: CH2O
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: C2H2
  // Imported from NIST
  Tci[13] = 308.300000;
  ai[13] = 1e6 * 0.42748 * Rcst * Rcst * Tci[13] * Tci[13] /
           (26.038000 * 26.038000 * 61.140000);
  bi[13] = 0.08664 * Rcst * Tci[13] / (26.038000 * 61.140000);
  acentric_i[13] = 0.189000;

  // species 14: C2H4
  // Imported from NIST
  Tci[14] = 282.340000;
  ai[14] = 1e6 * 0.42748 * Rcst * Rcst * Tci[14] * Tci[14] /
           (28.054000 * 28.054000 * 50.410000);
  bi[14] = 0.08664 * Rcst * Tci[14] / (28.054000 * 50.410000);
  acentric_i[14] = 0.087000;

  // species 15: C2H6
  // Imported from NIST
  Tci[15] = 305.320000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (30.070120 * 30.070120 * 48.720000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (30.070120 * 48.720000);
  acentric_i[15] = 0.099000;

  // species 16: HCCO
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: CH2CO
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: CH3CHO
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: aC3H5
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C3H6
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: N2
  // Imported from NIST
  Tci[21] = 126.192000;
  ai[21] = 1e6 * 0.42748 * Rcst * Rcst * Tci[21] * Tci[21] /
           (28.013400 * 28.013400 * 33.958000);
  bi[21] = 0.08664 * Rcst * Tci[21] / (28.013400 * 33.958000);
  acentric_i[21] = 0.037200;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

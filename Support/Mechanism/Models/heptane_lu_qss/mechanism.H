#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  H
1  O
2  C
3  N
*/

// Species
#define h_ID 0
#define h2_ID 1
#define o_ID 2
#define o2_ID 3
#define oh_ID 4
#define h2o_ID 5
#define co_ID 6
#define co2_ID 7
#define ch3_ID 8
#define ch4_ID 9
#define ho2_ID 10
#define h2o2_ID 11
#define ch2o_ID 12
#define c2h6_ID 13
#define c2h4_ID 14
#define c2h5_ID 15
#define c2h2_ID 16
#define c2h3_ID 17
#define ch2co_ID 18
#define hcco_ID 19
#define ch3cho_ID 20
#define c3h4a_ID 21
#define c3h6_ID 22
#define c4h6_ID 23
#define nc3h7_ID 24
#define c4h7_ID 25
#define c4h81_ID 26
#define ch3coch2_ID 27
#define c2h5cho_ID 28
#define c5h9_ID 29
#define c5h101_ID 30
#define ch3o2_ID 31
#define ch3o2h_ID 32
#define c2h3co_ID 33
#define c2h3cho_ID 34
#define c4h8ooh13o2_ID 35
#define pc4h9o2_ID 36
#define c3h5a_ID 37
#define c3h3_ID 38
#define nc4ket13_ID 39
#define nc3h7cho_ID 40
#define c2h5coch2_ID 41
#define nc3h7coch2_ID 42
#define nc4h9cho_ID 43
#define nc4h9co_ID 44
#define nc7h16_ID 45
#define c7h15o21_ID 46
#define c7h15o22_ID 47
#define c7h15o23_ID 48
#define c7h15o24_ID 49
#define c7h14ooh43_ID 50
#define c7h14ooh13o2_ID 51
#define c7h14o13_ID 52
#define c7h14o24_ID 53
#define n2_ID 54

#define NUM_ELEMENTS 4
#define NUM_SPECIES 55
#define NUM_IONS 0
#define NUM_REACTIONS 724

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(int* i, int* nspec, int* ki, int* nu);
void CKKFKR(
  amrex::Real* P,
  amrex::Real* T,
  amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 55;
  ii = 724;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.9920634920634921;  // h
  imw_new[1] = 0.4960317460317460;  // h2
  imw_new[2] = 0.0625039064941559;  // o
  imw_new[3] = 0.0312519532470779;  // o2
  imw_new[4] = 0.0587993179279120;  // oh
  imw_new[5] = 0.0555092978073827;  // h2o
  imw_new[6] = 0.0357015351660121;  // co
  imw_new[7] = 0.0227226249176305;  // co2
  imw_new[8] = 0.0665114732291320;  // ch3
  imw_new[9] = 0.0623324814560868;  // ch4
  imw_new[10] = 0.0302975216627280; // ho2
  imw_new[11] = 0.0293996589639560; // h2o2
  imw_new[12] = 0.0333044694598015; // ch2o
  imw_new[13] = 0.0332557366145660; // c2h6
  imw_new[14] = 0.0356455407428531; // c2h4
  imw_new[15] = 0.0344091941366733; // c2h5
  imw_new[16] = 0.0384054074813734; // c2h2
  imw_new[17] = 0.0369740442209569; // c2h3
  imw_new[18] = 0.0237885672145967; // ch2co
  imw_new[19] = 0.0243730044602598; // hcco
  imw_new[20] = 0.0226999296302181; // ch3cho
  imw_new[21] = 0.0249594409085237; // c3h4-a
  imw_new[22] = 0.0237636938285687; // c3h6
  imw_new[23] = 0.0184870221104784; // c4h6
  imw_new[24] = 0.0232077792476038; // nc3h7
  imw_new[25] = 0.0181488203266788; // c4h7
  imw_new[26] = 0.0178227703714265; // c4h8-1
  imw_new[27] = 0.0175217269414073; // ch3coch2
  imw_new[28] = 0.0172176308539945; // c2h5cho
  imw_new[29] = 0.0144661275623128; // c5h9
  imw_new[30] = 0.0142582162971412; // c5h10-1
  imw_new[31] = 0.0212616673399528; // ch3o2
  imw_new[32] = 0.0208155533814866; // ch3o2h
  imw_new[33] = 0.0181633246149375; // c2h3co
  imw_new[34] = 0.0178367579908676; // c2h3cho
  imw_new[35] = 0.0082568201334302; // c4h8ooh1-3o2
  imw_new[36] = 0.0112215813452432; // pc4h9o2
  imw_new[37] = 0.0243468945535997; // c3h5-a
  imw_new[38] = 0.0256036049875823; // c3h3
  imw_new[39] = 0.0096056865664473; // nc4ket13
  imw_new[40] = 0.0138682790852483; // nc3h7cho
  imw_new[41] = 0.0140648954275025; // c2h5coch2
  imw_new[42] = 0.0117472922491366; // nc3h7coch2
  imw_new[43] = 0.0116098172614763; // nc4h9cho
  imw_new[44] = 0.0117472922491366; // nc4h9co
  imw_new[45] = 0.0099795419390250; // nc7h16
  imw_new[46] = 0.0076222417012843; // c7h15o2-1
  imw_new[47] = 0.0076222417012843; // c7h15o2-2
  imw_new[48] = 0.0076222417012843; // c7h15o2-3
  imw_new[49] = 0.0076222417012843; // c7h15o2-4
  imw_new[50] = 0.0076222417012843; // c7h14ooh4-3
  imw_new[51] = 0.0061277138112542; // c7h14ooh1-3o2
  imw_new[52] = 0.0087574876519424; // c7h14o1-3
  imw_new[53] = 0.0087574876519424; // c7h14o2-4
  imw_new[54] = 0.0356964374955379; // n2
}

//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 1.008000;    // h
  mw_new[1] = 2.016000;    // h2
  mw_new[2] = 15.999000;   // o
  mw_new[3] = 31.998000;   // o2
  mw_new[4] = 17.007000;   // oh
  mw_new[5] = 18.015000;   // h2o
  mw_new[6] = 28.010000;   // co
  mw_new[7] = 44.009000;   // co2
  mw_new[8] = 15.035000;   // ch3
  mw_new[9] = 16.043000;   // ch4
  mw_new[10] = 33.006000;  // ho2
  mw_new[11] = 34.014000;  // h2o2
  mw_new[12] = 30.026000;  // ch2o
  mw_new[13] = 30.070000;  // c2h6
  mw_new[14] = 28.054000;  // c2h4
  mw_new[15] = 29.062000;  // c2h5
  mw_new[16] = 26.038000;  // c2h2
  mw_new[17] = 27.046000;  // c2h3
  mw_new[18] = 42.037000;  // ch2co
  mw_new[19] = 41.029000;  // hcco
  mw_new[20] = 44.053000;  // ch3cho
  mw_new[21] = 40.065000;  // c3h4-a
  mw_new[22] = 42.081000;  // c3h6
  mw_new[23] = 54.092000;  // c4h6
  mw_new[24] = 43.089000;  // nc3h7
  mw_new[25] = 55.100000;  // c4h7
  mw_new[26] = 56.108000;  // c4h8-1
  mw_new[27] = 57.072000;  // ch3coch2
  mw_new[28] = 58.080000;  // c2h5cho
  mw_new[29] = 69.127000;  // c5h9
  mw_new[30] = 70.135000;  // c5h10-1
  mw_new[31] = 47.033000;  // ch3o2
  mw_new[32] = 48.041000;  // ch3o2h
  mw_new[33] = 55.056000;  // c2h3co
  mw_new[34] = 56.064000;  // c2h3cho
  mw_new[35] = 121.112000; // c4h8ooh1-3o2
  mw_new[36] = 89.114000;  // pc4h9o2
  mw_new[37] = 41.073000;  // c3h5-a
  mw_new[38] = 39.057000;  // c3h3
  mw_new[39] = 104.105000; // nc4ket13
  mw_new[40] = 72.107000;  // nc3h7cho
  mw_new[41] = 71.099000;  // c2h5coch2
  mw_new[42] = 85.126000;  // nc3h7coch2
  mw_new[43] = 86.134000;  // nc4h9cho
  mw_new[44] = 85.126000;  // nc4h9co
  mw_new[45] = 100.205000; // nc7h16
  mw_new[46] = 131.195000; // c7h15o2-1
  mw_new[47] = 131.195000; // c7h15o2-2
  mw_new[48] = 131.195000; // c7h15o2-3
  mw_new[49] = 131.195000; // c7h15o2-4
  mw_new[50] = 131.195000; // c7h14ooh4-3
  mw_new[51] = 163.193000; // c7h14ooh1-3o2
  mw_new[52] = 114.188000; // c7h14o1-3
  mw_new[53] = 114.188000; // c7h14o2-4
  mw_new[54] = 28.014000;  // n2
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[55] = {
  0.9920634920634921, // h
  0.4960317460317460, // h2
  0.0625039064941559, // o
  0.0312519532470779, // o2
  0.0587993179279120, // oh
  0.0555092978073827, // h2o
  0.0357015351660121, // co
  0.0227226249176305, // co2
  0.0665114732291320, // ch3
  0.0623324814560868, // ch4
  0.0302975216627280, // ho2
  0.0293996589639560, // h2o2
  0.0333044694598015, // ch2o
  0.0332557366145660, // c2h6
  0.0356455407428531, // c2h4
  0.0344091941366733, // c2h5
  0.0384054074813734, // c2h2
  0.0369740442209569, // c2h3
  0.0237885672145967, // ch2co
  0.0243730044602598, // hcco
  0.0226999296302181, // ch3cho
  0.0249594409085237, // c3h4-a
  0.0237636938285687, // c3h6
  0.0184870221104784, // c4h6
  0.0232077792476038, // nc3h7
  0.0181488203266788, // c4h7
  0.0178227703714265, // c4h8-1
  0.0175217269414073, // ch3coch2
  0.0172176308539945, // c2h5cho
  0.0144661275623128, // c5h9
  0.0142582162971412, // c5h10-1
  0.0212616673399528, // ch3o2
  0.0208155533814866, // ch3o2h
  0.0181633246149375, // c2h3co
  0.0178367579908676, // c2h3cho
  0.0082568201334302, // c4h8ooh1-3o2
  0.0112215813452432, // pc4h9o2
  0.0243468945535997, // c3h5-a
  0.0256036049875823, // c3h3
  0.0096056865664473, // nc4ket13
  0.0138682790852483, // nc3h7cho
  0.0140648954275025, // c2h5coch2
  0.0117472922491366, // nc3h7coch2
  0.0116098172614763, // nc4h9cho
  0.0117472922491366, // nc4h9co
  0.0099795419390250, // nc7h16
  0.0076222417012843, // c7h15o2-1
  0.0076222417012843, // c7h15o2-2
  0.0076222417012843, // c7h15o2-3
  0.0076222417012843, // c7h15o2-4
  0.0076222417012843, // c7h14ooh4-3
  0.0061277138112542, // c7h14ooh1-3o2
  0.0087574876519424, // c7h14o1-3
  0.0087574876519424, // c7h14o2-4
  0.0356964374955379, // n2
};
const amrex::Real h_global_imw[55] = {
  0.9920634920634921, // h
  0.4960317460317460, // h2
  0.0625039064941559, // o
  0.0312519532470779, // o2
  0.0587993179279120, // oh
  0.0555092978073827, // h2o
  0.0357015351660121, // co
  0.0227226249176305, // co2
  0.0665114732291320, // ch3
  0.0623324814560868, // ch4
  0.0302975216627280, // ho2
  0.0293996589639560, // h2o2
  0.0333044694598015, // ch2o
  0.0332557366145660, // c2h6
  0.0356455407428531, // c2h4
  0.0344091941366733, // c2h5
  0.0384054074813734, // c2h2
  0.0369740442209569, // c2h3
  0.0237885672145967, // ch2co
  0.0243730044602598, // hcco
  0.0226999296302181, // ch3cho
  0.0249594409085237, // c3h4-a
  0.0237636938285687, // c3h6
  0.0184870221104784, // c4h6
  0.0232077792476038, // nc3h7
  0.0181488203266788, // c4h7
  0.0178227703714265, // c4h8-1
  0.0175217269414073, // ch3coch2
  0.0172176308539945, // c2h5cho
  0.0144661275623128, // c5h9
  0.0142582162971412, // c5h10-1
  0.0212616673399528, // ch3o2
  0.0208155533814866, // ch3o2h
  0.0181633246149375, // c2h3co
  0.0178367579908676, // c2h3cho
  0.0082568201334302, // c4h8ooh1-3o2
  0.0112215813452432, // pc4h9o2
  0.0243468945535997, // c3h5-a
  0.0256036049875823, // c3h3
  0.0096056865664473, // nc4ket13
  0.0138682790852483, // nc3h7cho
  0.0140648954275025, // c2h5coch2
  0.0117472922491366, // nc3h7coch2
  0.0116098172614763, // nc4h9cho
  0.0117472922491366, // nc4h9co
  0.0099795419390250, // nc7h16
  0.0076222417012843, // c7h15o2-1
  0.0076222417012843, // c7h15o2-2
  0.0076222417012843, // c7h15o2-3
  0.0076222417012843, // c7h15o2-4
  0.0076222417012843, // c7h14ooh4-3
  0.0061277138112542, // c7h14ooh1-3o2
  0.0087574876519424, // c7h14o1-3
  0.0087574876519424, // c7h14o2-4
  0.0356964374955379, // n2
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[55] = {
  1.008000,   // h
  2.016000,   // h2
  15.999000,  // o
  31.998000,  // o2
  17.007000,  // oh
  18.015000,  // h2o
  28.010000,  // co
  44.009000,  // co2
  15.035000,  // ch3
  16.043000,  // ch4
  33.006000,  // ho2
  34.014000,  // h2o2
  30.026000,  // ch2o
  30.070000,  // c2h6
  28.054000,  // c2h4
  29.062000,  // c2h5
  26.038000,  // c2h2
  27.046000,  // c2h3
  42.037000,  // ch2co
  41.029000,  // hcco
  44.053000,  // ch3cho
  40.065000,  // c3h4-a
  42.081000,  // c3h6
  54.092000,  // c4h6
  43.089000,  // nc3h7
  55.100000,  // c4h7
  56.108000,  // c4h8-1
  57.072000,  // ch3coch2
  58.080000,  // c2h5cho
  69.127000,  // c5h9
  70.135000,  // c5h10-1
  47.033000,  // ch3o2
  48.041000,  // ch3o2h
  55.056000,  // c2h3co
  56.064000,  // c2h3cho
  121.112000, // c4h8ooh1-3o2
  89.114000,  // pc4h9o2
  41.073000,  // c3h5-a
  39.057000,  // c3h3
  104.105000, // nc4ket13
  72.107000,  // nc3h7cho
  71.099000,  // c2h5coch2
  85.126000,  // nc3h7coch2
  86.134000,  // nc4h9cho
  85.126000,  // nc4h9co
  100.205000, // nc7h16
  131.195000, // c7h15o2-1
  131.195000, // c7h15o2-2
  131.195000, // c7h15o2-3
  131.195000, // c7h15o2-4
  131.195000, // c7h14ooh4-3
  163.193000, // c7h14ooh1-3o2
  114.188000, // c7h14o1-3
  114.188000, // c7h14o2-4
  28.014000,  // n2
};
const amrex::Real h_global_mw[55] = {
  1.008000,   // h
  2.016000,   // h2
  15.999000,  // o
  31.998000,  // o2
  17.007000,  // oh
  18.015000,  // h2o
  28.010000,  // co
  44.009000,  // co2
  15.035000,  // ch3
  16.043000,  // ch4
  33.006000,  // ho2
  34.014000,  // h2o2
  30.026000,  // ch2o
  30.070000,  // c2h6
  28.054000,  // c2h4
  29.062000,  // c2h5
  26.038000,  // c2h2
  27.046000,  // c2h3
  42.037000,  // ch2co
  41.029000,  // hcco
  44.053000,  // ch3cho
  40.065000,  // c3h4-a
  42.081000,  // c3h6
  54.092000,  // c4h6
  43.089000,  // nc3h7
  55.100000,  // c4h7
  56.108000,  // c4h8-1
  57.072000,  // ch3coch2
  58.080000,  // c2h5cho
  69.127000,  // c5h9
  70.135000,  // c5h10-1
  47.033000,  // ch3o2
  48.041000,  // ch3o2h
  55.056000,  // c2h3co
  56.064000,  // c2h3cho
  121.112000, // c4h8ooh1-3o2
  89.114000,  // pc4h9o2
  41.073000,  // c3h5-a
  39.057000,  // c3h3
  104.105000, // nc4ket13
  72.107000,  // nc3h7cho
  71.099000,  // c2h5coch2
  85.126000,  // nc3h7coch2
  86.134000,  // nc4h9cho
  85.126000,  // nc4h9co
  100.205000, // nc7h16
  131.195000, // c7h15o2-1
  131.195000, // c7h15o2-2
  131.195000, // c7h15o2-3
  131.195000, // c7h15o2-4
  131.195000, // c7h14ooh4-3
  163.193000, // c7h14ooh1-3o2
  114.188000, // c7h14o1-3
  114.188000, // c7h14o2-4
  28.014000,  // n2
};

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +1.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4];
    // species 1: h2
    species[1] = +2.29812400e+00 + 8.24944200e-04 * tc[1] -
                 8.14301500e-07 * tc[2] - 9.47543400e-11 * tc[3] +
                 4.13487200e-13 * tc[4];
    // species 2: o
    species[2] = +1.94642900e+00 - 1.63816600e-03 * tc[1] +
                 2.42103200e-06 * tc[2] - 1.60284300e-09 * tc[3] +
                 3.89069600e-13 * tc[4];
    // species 3: o2
    species[3] = +2.21293600e+00 + 1.12748600e-03 * tc[1] -
                 5.75615000e-07 * tc[2] + 1.31387700e-09 * tc[3] -
                 8.76855400e-13 * tc[4];
    // species 5: h2o
    species[5] = +2.38684200e+00 + 3.47498200e-03 * tc[1] -
                 6.35469600e-06 * tc[2] + 6.96858100e-09 * tc[3] -
                 2.50658800e-12 * tc[4];
    // species 6: co
    species[6] = +2.26245200e+00 + 1.51194100e-03 * tc[1] -
                 3.88175500e-06 * tc[2] + 5.58194400e-09 * tc[3] -
                 2.47495100e-12 * tc[4];
    // species 7: co2
    species[7] = +1.27572500e+00 + 9.92207200e-03 * tc[1] -
                 1.04091100e-05 * tc[2] + 6.86668700e-09 * tc[3] -
                 2.11728000e-12 * tc[4];
    // species 8: ch3
    species[8] = +1.43044300e+00 + 1.11241000e-02 * tc[1] -
                 1.68022000e-05 * tc[2] + 1.62182900e-08 * tc[3] -
                 5.86495300e-12 * tc[4];
    // species 9: ch4
    species[9] = -2.21258500e-01 + 1.74766800e-02 * tc[1] -
                 2.78340900e-05 * tc[2] + 3.04970800e-08 * tc[3] -
                 1.22393100e-11 * tc[4];
    // species 11: h2o2
    species[11] = +2.38875400e+00 + 6.56922600e-03 * tc[1] -
                  1.48501300e-07 * tc[2] - 4.62580600e-09 * tc[3] +
                  2.47151500e-12 * tc[4];
    // species 12: ch2o
    species[12] = +6.52731000e-01 + 1.26314400e-02 * tc[1] -
                  1.88816800e-05 * tc[2] + 2.05003100e-08 * tc[3] -
                  8.41323700e-12 * tc[4];
    // species 14: c2h4
    species[14] = -1.86148800e+00 + 2.79616300e-02 * tc[1] -
                  3.38867700e-05 * tc[2] + 2.78515200e-08 * tc[3] -
                  9.73787900e-12 * tc[4];
    // species 15: c2h5
    species[15] = +1.69070200e+00 + 8.71913300e-03 * tc[1] +
                  4.41983900e-06 * tc[2] + 9.33870300e-10 * tc[3] -
                  3.92777300e-12 * tc[4];
    // species 16: c2h2
    species[16] = +1.01356200e+00 + 1.51904500e-02 * tc[1] -
                  1.61631900e-05 * tc[2] + 9.07899200e-09 * tc[3] -
                  1.91274600e-12 * tc[4];
    // species 17: c2h3
    species[17] = +1.45927600e+00 + 7.37147600e-03 * tc[1] +
                  2.10987300e-06 * tc[2] - 1.32164200e-09 * tc[3] -
                  1.18478400e-12 * tc[4];
    // species 18: ch2co
    species[18] = +1.97497100e+00 + 1.21187100e-02 * tc[1] -
                  2.34504600e-06 * tc[2] - 6.46668500e-09 * tc[3] +
                  3.90564900e-12 * tc[4];
    // species 19: hcco
    species[19] = +4.04796500e+00 + 4.45347800e-03 * tc[1] +
                  2.26828300e-07 * tc[2] - 1.48209500e-09 * tc[3] +
                  2.25074200e-13 * tc[4];
    // species 20: ch3cho
    species[20] = +1.50569500e+00 + 1.33699100e-02 * tc[1] +
                  4.67195300e-06 * tc[2] - 1.12814000e-08 * tc[3] +
                  4.26356600e-12 * tc[4];
    // species 24: nc3h7
    species[24] = +9.22537000e-01 + 2.47892700e-02 * tc[1] +
                  1.81024900e-06 * tc[2] - 1.78326600e-08 * tc[3] +
                  8.58299600e-12 * tc[4];
    // species 38: c3h3
    species[38] = +3.75420000e+00 + 1.10802800e-02 * tc[1] +
                  2.79332300e-07 * tc[2] - 5.47921200e-09 * tc[3] +
                  1.94962900e-12 * tc[4];
    // species 54: n2
    species[54] = +2.29867700e+00 + 1.40824000e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485500e-12 * tc[4];
  } else {
    // species 0: h
    species[0] = +1.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4];
    // species 1: h2
    species[1] = +1.99142300e+00 + 7.00064400e-04 * tc[1] -
                 5.63382900e-08 * tc[2] - 9.23157800e-12 * tc[3] +
                 1.58275200e-15 * tc[4];
    // species 2: o
    species[2] = +1.54206000e+00 - 2.75506200e-05 * tc[1] -
                 3.10280300e-09 * tc[2] + 4.55106700e-12 * tc[3] -
                 4.36805200e-16 * tc[4];
    // species 3: o2
    species[3] = +2.69757800e+00 + 6.13519700e-04 * tc[1] -
                 1.25884200e-07 * tc[2] + 1.77528100e-11 * tc[3] -
                 1.13643500e-15 * tc[4];
    // species 5: h2o
    species[5] = +1.67214600e+00 + 3.05629300e-03 * tc[1] -
                 8.73026000e-07 * tc[2] + 1.20099600e-10 * tc[3] -
                 6.39161800e-15 * tc[4];
    // species 6: co
    species[6] = +2.02507800e+00 + 1.44268900e-03 * tc[1] -
                 5.63082800e-07 * tc[2] + 1.01858100e-10 * tc[3] -
                 6.91095200e-15 * tc[4];
    // species 7: co2
    species[7] = +3.45362300e+00 + 3.14016900e-03 * tc[1] -
                 1.27841100e-06 * tc[2] + 2.39399700e-10 * tc[3] -
                 1.66903300e-14 * tc[4];
    // species 8: ch3
    species[8] = +1.84405200e+00 + 6.13797400e-03 * tc[1] -
                 2.23034500e-06 * tc[2] + 3.78516100e-10 * tc[3] -
                 2.45215900e-14 * tc[4];
    // species 9: ch4
    species[9] = +6.83479000e-01 + 1.02372400e-02 * tc[1] -
                 3.87512900e-06 * tc[2] + 6.78558500e-10 * tc[3] -
                 4.50342300e-14 * tc[4];
    // species 11: h2o2
    species[11] = +3.57316700e+00 + 4.33613600e-03 * tc[1] -
                  1.47468900e-06 * tc[2] + 2.34890400e-10 * tc[3] -
                  1.43165400e-14 * tc[4];
    // species 12: ch2o
    species[12] = +1.99560600e+00 + 6.68132100e-03 * tc[1] -
                  2.62895500e-06 * tc[2] + 4.73715300e-10 * tc[3] -
                  3.21251700e-14 * tc[4];
    // species 14: c2h4
    species[14] = +2.52841900e+00 + 1.14851800e-02 * tc[1] -
                  4.41838500e-06 * tc[2] + 7.84460100e-10 * tc[3] -
                  5.26684800e-14 * tc[4];
    // species 15: c2h5
    species[15] = +6.19048000e+00 + 6.48407700e-03 * tc[1] -
                  6.42806500e-07 * tc[2] - 2.34787900e-10 * tc[3] +
                  3.88087700e-14 * tc[4];
    // species 16: c2h2
    species[16] = +3.43677000e+00 + 5.37603900e-03 * tc[1] -
                  1.91281700e-06 * tc[2] + 3.28637900e-10 * tc[3] -
                  2.15671000e-14 * tc[4];
    // species 17: c2h3
    species[17] = +4.93346800e+00 + 4.01774600e-03 * tc[1] -
                  3.96674000e-07 * tc[2] - 1.44126700e-10 * tc[3] +
                  2.37864400e-14 * tc[4];
    // species 18: ch2co
    species[18] = +5.03881700e+00 + 5.80484000e-03 * tc[1] -
                  1.92095400e-06 * tc[2] + 2.79448500e-10 * tc[3] -
                  1.45886800e-14 * tc[4];
    // species 19: hcco
    species[19] = +5.75807300e+00 + 2.00040000e-03 * tc[1] -
                  2.02760700e-07 * tc[2] - 1.04113200e-10 * tc[3] +
                  1.96516500e-14 * tc[4];
    // species 20: ch3cho
    species[20] = +4.86865000e+00 + 1.07942400e-02 * tc[1] -
                  3.64553000e-06 * tc[2] + 5.41291200e-10 * tc[3] -
                  2.89684400e-14 * tc[4];
    // species 24: nc3h7
    species[24] = +6.97829100e+00 + 1.57611300e-02 * tc[1] -
                  5.17324300e-06 * tc[2] + 7.44389200e-10 * tc[3] -
                  3.82497800e-14 * tc[4];
    // species 38: c3h3
    species[38] = +7.83104700e+00 + 4.35719500e-03 * tc[1] -
                  4.10906700e-07 * tc[2] - 2.36872300e-10 * tc[3] +
                  4.37652000e-14 * tc[4];
    // species 54: n2
    species[54] = +1.92664000e+00 + 1.48797700e-03 * tc[1] -
                  5.68476100e-07 * tc[2] + 1.00970400e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +2.43586219e+00 + 2.02235804e-04 * tc[1] -
                 1.13546412e-07 * tc[2] + 2.42445149e-10 * tc[3] -
                 7.43651031e-14 * tc[4];
  } else {
    // species 4: oh
    species[4] = +1.62599754e+00 + 1.31992406e-03 * tc[1] -
                 3.59724670e-07 * tc[2] + 4.25630800e-11 * tc[3] -
                 1.82048016e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +2.18310656e+00 + 3.66767950e-03 * tc[1] -
                  9.32385122e-07 * tc[2] - 3.25852919e-10 * tc[3] +
                  1.51139912e-13 * tc[4];
    // species 32: ch3o2h
    species[32] = +2.23442817e+00 + 1.90129767e-02 * tc[1] -
                  1.13386287e-05 * tc[2] + 3.40306653e-09 * tc[3] -
                  4.11830222e-13 * tc[4];
    // species 47: c7h15o2-2
    species[47] = -6.44747083e-01 + 9.42381007e-02 * tc[1] -
                  6.66955106e-05 * tc[2] + 2.54795583e-08 * tc[3] -
                  4.13211105e-12 * tc[4];
    // species 48: c7h15o2-3
    species[48] = -6.44747083e-01 + 9.42381007e-02 * tc[1] -
                  6.66955106e-05 * tc[2] + 2.54795583e-08 * tc[3] -
                  4.13211105e-12 * tc[4];
    // species 49: c7h15o2-4
    species[49] = -6.44747083e-01 + 9.42381007e-02 * tc[1] -
                  6.66955106e-05 * tc[2] + 2.54795583e-08 * tc[3] -
                  4.13211105e-12 * tc[4];
  } else {
    // species 10: ho2
    species[10] = +3.10547423e+00 + 2.38452835e-03 * tc[1] -
                  8.06347989e-07 * tc[2] + 1.24191723e-10 * tc[3] -
                  7.16400108e-15 * tc[4];
    // species 32: ch3o2h
    species[32] = +7.43117091e+00 + 8.06817909e-03 * tc[1] -
                  2.77094921e-06 * tc[2] + 4.31332243e-10 * tc[3] -
                  2.50692146e-14 * tc[4];
    // species 47: c7h15o2-2
    species[47] = +2.50535640e+01 + 3.43831688e-02 * tc[1] -
                  1.18713247e-05 * tc[2] + 1.85450241e-09 * tc[3] -
                  1.08052399e-13 * tc[4];
    // species 48: c7h15o2-3
    species[48] = +2.50535640e+01 + 3.43831688e-02 * tc[1] -
                  1.18713247e-05 * tc[2] + 1.85450241e-09 * tc[3] -
                  1.08052399e-13 * tc[4];
    // species 49: c7h15o2-4
    species[49] = +2.50535640e+01 + 3.43831688e-02 * tc[1] -
                  1.18713247e-05 * tc[2] + 1.85450241e-09 * tc[3] -
                  1.08052399e-13 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -1.02528543e+00 + 2.40764754e-02 * tc[1] -
                  1.11893472e-05 * tc[2] + 2.08340901e-09 * tc[3] -
                  5.29868616e-14 * tc[4];
  } else {
    // species 13: c2h6
    species[13] = +5.10683385e+00 + 1.29236361e-02 * tc[1] -
                  4.42527196e-06 * tc[2] + 6.87391726e-10 * tc[3] -
                  3.98901732e-14 * tc[4];
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +1.53983100e+00 + 1.63343700e-02 * tc[1] -
                  1.76495000e-06 * tc[2] - 4.64736500e-09 * tc[3] +
                  1.72913100e-12 * tc[4];
  } else {
    // species 21: c3h4-a
    species[21] = +8.77625600e+00 + 5.30213800e-03 * tc[1] -
                  3.70111800e-07 * tc[2] - 3.02638600e-10 * tc[3] +
                  5.08958100e-14 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = -6.05384556e-01 + 2.89107662e-02 * tc[1] -
                  1.54886808e-05 * tc[2] + 3.88814209e-09 * tc[3] -
                  3.37890352e-13 * tc[4];
    // species 46: c7h15o2-1
    species[46] = +2.08885520e-01 + 8.84061706e-02 * tc[1] -
                  5.79861260e-05 * tc[2] + 2.03574689e-08 * tc[3] -
                  3.06460336e-12 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = +8.97180040e-01 + 1.06229796e-01 * tc[1] -
                  8.02770218e-05 * tc[2] + 3.23649093e-08 * tc[3] -
                  5.45850472e-12 * tc[4];
  } else {
    // species 22: c3h6
    species[22] = +7.01595958e+00 + 1.37023634e-02 * tc[1] -
                  4.66249733e-06 * tc[2] + 7.21254402e-10 * tc[3] -
                  4.17370126e-14 * tc[4];
    // species 46: c7h15o2-1
    species[46] = +2.42656556e+01 + 3.50803587e-02 * tc[1] -
                  1.21178801e-05 * tc[2] + 1.89360806e-09 * tc[3] -
                  1.10354125e-13 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = +3.10144349e+01 + 3.40055996e-02 * tc[1] -
                  1.18415856e-05 * tc[2] + 1.86060347e-09 * tc[3] -
                  1.08851012e-13 * tc[4];
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = -2.43095121e+00 + 4.78706062e-02 * tc[1] -
                  4.15446800e-05 * tc[2] + 1.91549552e-08 * tc[3] -
                  3.57158507e-12 * tc[4];
  } else {
    // species 23: c4h6
    species[23] = +1.01633789e+01 + 1.37163965e-02 * tc[1] -
                  4.69715783e-06 * tc[2] + 7.29693836e-10 * tc[3] -
                  4.23486203e-14 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = -1.35050835e+00 + 4.26511243e-02 * tc[1] -
                  2.90979373e-05 * tc[2] + 1.05403914e-08 * tc[3] -
                  1.60059854e-12 * tc[4];
    // species 26: c4h8-1
    species[26] = -1.83137209e+00 + 4.52580978e-02 * tc[1] -
                  2.93658559e-05 * tc[2] + 1.00220436e-08 * tc[3] -
                  1.43191680e-12 * tc[4];
    // species 29: c5h9
    species[29] = -2.38013950e+00 + 5.57608487e-02 * tc[1] -
                  3.70143928e-05 * tc[2] + 1.26883901e-08 * tc[3] -
                  1.78538835e-12 * tc[4];
    // species 30: c5h10-1
    species[30] = -2.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
  } else {
    // species 25: c4h7
    species[25] = +1.02103578e+01 + 1.60483196e-02 * tc[1] -
                  5.46502292e-06 * tc[2] + 8.45941053e-10 * tc[3] -
                  4.89772739e-14 * tc[4];
    // species 26: c4h8-1
    species[26] = +1.03508668e+01 + 1.80617877e-02 * tc[1] -
                  6.16093029e-06 * tc[2] + 9.54652959e-10 * tc[3] -
                  5.53089641e-14 * tc[4];
    // species 29: c5h9
    species[29] = +1.31860454e+01 + 2.07128899e-02 * tc[1] -
                  7.06960617e-06 * tc[2] + 1.09607133e-09 * tc[3] -
                  6.35322208e-14 * tc[4];
    // species 30: c5h10-1
    species[30] = +1.35851539e+01 + 2.24072471e-02 * tc[1] -
                  7.63348025e-06 * tc[2] + 1.18188966e-09 * tc[3] -
                  6.84385139e-14 * tc[4];
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = +8.03391870e-01 + 3.01407085e-02 * tc[1] -
                  1.93505552e-05 * tc[2] + 6.38199034e-09 * tc[3] -
                  8.66103180e-13 * tc[4];
    // species 45: nc7h16
    species[45] = -2.26836187e+00 + 8.54355820e-02 * tc[1] -
                  5.25346786e-05 * tc[2] + 1.62945721e-08 * tc[3] -
                  2.02394925e-12 * tc[4];
  } else {
    // species 27: ch3coch2
    species[27] = +9.23039750e+00 + 1.16494161e-02 * tc[1] -
                  4.01005537e-06 * tc[2] + 6.25205246e-10 * tc[3] -
                  3.63784362e-14 * tc[4];
    // species 45: nc7h16
    species[45] = +2.12148969e+01 + 3.47675750e-02 * tc[1] -
                  1.18407129e-05 * tc[2] + 1.83298478e-09 * tc[3] -
                  1.06130266e-13 * tc[4];
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = +1.16308444e+00 + 2.95501264e-02 * tc[1] -
                  1.52446252e-05 * tc[2] + 3.49503947e-09 * tc[3] -
                  2.38896627e-13 * tc[4];
    // species 40: nc3h7cho
    species[40] = +8.74159590e-01 + 4.19240315e-02 * tc[1] -
                  2.35148779e-05 * tc[2] + 6.26913673e-09 * tc[3] -
                  6.09443908e-13 * tc[4];
  } else {
    // species 28: c2h5cho
    species[28] = +9.24276950e+00 + 1.39641989e-02 * tc[1] -
                  4.76248001e-06 * tc[2] + 7.38105706e-10 * tc[3] -
                  4.27759503e-14 * tc[4];
    // species 40: nc3h7cho
    species[40] = +1.25988068e+01 + 1.81652474e-02 * tc[1] -
                  6.17844458e-06 * tc[2] + 9.55980208e-10 * tc[3] -
                  5.53442958e-14 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = +3.26146906e+00 + 1.00873599e-02 * tc[1] -
                  3.21506184e-06 * tc[2] + 2.09409267e-10 * tc[3] +
                  4.18339103e-14 * tc[4];
    // species 36: pc4h9o2
    species[36] = +9.43636500e-01 + 5.15513163e-02 * tc[1] -
                  3.28284400e-05 * tc[2] + 1.13064860e-08 * tc[3] -
                  1.70118606e-12 * tc[4];
  } else {
    // species 31: ch3o2
    species[31] = +4.95787891e+00 + 7.90728626e-03 * tc[1] -
                  2.68246234e-06 * tc[2] + 4.13891337e-10 * tc[3] -
                  2.39007330e-14 * tc[4];
    // species 36: pc4h9o2
    species[36] = +1.47845448e+01 + 2.15210910e-02 * tc[1] -
                  7.44909017e-06 * tc[2] + 1.16558071e-09 * tc[3] -
                  6.79885609e-14 * tc[4];
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +3.62420130e-01 + 3.15273972e-02 * tc[1] -
                  3.00218935e-05 * tc[2] + 1.48167112e-08 * tc[3] -
                  2.87971530e-12 * tc[4];
  } else {
    // species 33: c2h3co
    species[33] = +8.37467676e+00 + 7.91296900e-03 * tc[1] -
                  2.67198280e-06 * tc[2] + 4.11115430e-10 * tc[3] -
                  2.36978981e-14 * tc[4];
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = -7.07644838e-01 + 3.54321417e-02 * tc[1] -
                  2.94936324e-05 * tc[2] + 1.28100124e-08 * tc[3] -
                  2.26144108e-12 * tc[4];
  } else {
    // species 34: c2h3cho
    species[34] = +9.41849590e+00 + 9.48963321e-03 * tc[1] -
                  3.29310529e-06 * tc[2] + 5.16279203e-10 * tc[3] -
                  3.01587291e-14 * tc[4];
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = +1.22400728e+00 + 7.04994620e-02 * tc[1] -
                  5.66978827e-05 * tc[2] + 2.42627751e-08 * tc[3] -
                  4.29715459e-12 * tc[4];
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.13244015e+01 + 2.05474775e-02 * tc[1] -
                  7.19076348e-06 * tc[2] + 1.13361536e-09 * tc[3] -
                  6.64744383e-14 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = -1.52913196e+00 + 3.34559100e-02 * tc[1] -
                  2.53401027e-05 * tc[2] + 1.02865754e-08 * tc[3] -
                  1.73258340e-12 * tc[4];
  } else {
    // species 37: c3h5-a
    species[37] = +7.45883958e+00 + 1.12695483e-02 * tc[1] -
                  3.83792864e-06 * tc[2] + 5.94059119e-10 * tc[3] -
                  3.43918030e-14 * tc[4];
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = +1.74883461e+00 + 5.86936745e-02 * tc[1] -
                  4.49605895e-05 * tc[2] + 1.83200130e-08 * tc[3] -
                  3.11765369e-12 * tc[4];
  } else {
    // species 39: nc4ket13
    species[39] = +1.86430808e+01 + 1.80940566e-02 * tc[1] -
                  6.33063232e-06 * tc[2] + 9.97860399e-10 * tc[3] -
                  5.85076458e-14 * tc[4];
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = +5.40138560e-01 + 4.39486258e-02 * tc[1] -
                  2.97002421e-05 * tc[2] + 1.05495313e-08 * tc[3] -
                  1.58598769e-12 * tc[4];
  } else {
    // species 41: c2h5coch2
    species[41] = +1.32098738e+01 + 1.57866459e-02 * tc[1] -
                  5.50529183e-06 * tc[2] + 8.65870540e-10 * tc[3] -
                  5.06913329e-14 * tc[4];
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = -4.17007290e-02 + 5.68162532e-02 * tc[1] -
                  3.99112781e-05 * tc[2] + 1.52671514e-08 * tc[3] -
                  2.49221047e-12 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = -1.50213995e-01 + 9.25107196e-02 * tc[1] -
                  6.25359834e-05 * tc[2] + 2.17880390e-08 * tc[3] -
                  3.12720398e-12 * tc[4];
  } else {
    // species 42: nc3h7coch2
    species[42] = +1.51502419e+01 + 2.14093466e-02 * tc[1] -
                  7.36059614e-06 * tc[2] + 1.14656816e-09 * tc[3] -
                  6.66712722e-14 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = +2.64034778e+01 + 3.27527893e-02 * tc[1] -
                  1.12991770e-05 * tc[2] + 1.76444649e-09 * tc[3] -
                  1.02786945e-13 * tc[4];
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = +5.96634720e-01 + 5.43541416e-02 * tc[1] -
                  3.21020651e-05 * tc[2] + 9.35773559e-09 * tc[3] -
                  1.06688932e-12 * tc[4];
  } else {
    // species 43: nc4h9cho
    species[43] = +1.57965163e+01 + 2.25684519e-02 * tc[1] -
                  7.67631588e-06 * tc[2] + 1.18769369e-09 * tc[3] -
                  6.87545554e-14 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = +1.43530238e+00 + 4.93682376e-02 * tc[1] -
                  2.89883082e-05 * tc[2] + 8.42863812e-09 * tc[3] -
                  9.68287172e-13 * tc[4];
  } else {
    // species 44: nc4h9co
    species[44] = +1.51782939e+01 + 2.07991920e-02 * tc[1] -
                  7.11787892e-06 * tc[2] + 1.10559975e-09 * tc[3] -
                  6.41697187e-14 * tc[4];
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -6.50036450e+00 + 1.00155088e-01 * tc[1] -
                  7.29935857e-05 * tc[2] + 2.79344270e-08 * tc[3] -
                  4.42245696e-12 * tc[4];
  } else {
    // species 52: c7h14o1-3
    species[52] = +2.16918916e+01 + 3.32510472e-02 * tc[1] -
                  1.14457765e-05 * tc[2] + 1.78455535e-09 * tc[3] -
                  1.03841112e-13 * tc[4];
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -6.39477206e+00 + 1.01846577e-01 * tc[1] -
                  7.60046236e-05 * tc[2] + 2.96538020e-08 * tc[3] -
                  4.74854370e-12 * tc[4];
  } else {
    // species 53: c7h14o2-4
    species[53] = +2.22692731e+01 + 3.25585391e-02 * tc[1] -
                  1.11624906e-05 * tc[2] + 1.73573658e-09 * tc[3] -
                  1.00813215e-13 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +2.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4];
    // species 1: h2
    species[1] = +3.29812400e+00 + 8.24944200e-04 * tc[1] -
                 8.14301500e-07 * tc[2] - 9.47543400e-11 * tc[3] +
                 4.13487200e-13 * tc[4];
    // species 2: o
    species[2] = +2.94642900e+00 - 1.63816600e-03 * tc[1] +
                 2.42103200e-06 * tc[2] - 1.60284300e-09 * tc[3] +
                 3.89069600e-13 * tc[4];
    // species 3: o2
    species[3] = +3.21293600e+00 + 1.12748600e-03 * tc[1] -
                 5.75615000e-07 * tc[2] + 1.31387700e-09 * tc[3] -
                 8.76855400e-13 * tc[4];
    // species 5: h2o
    species[5] = +3.38684200e+00 + 3.47498200e-03 * tc[1] -
                 6.35469600e-06 * tc[2] + 6.96858100e-09 * tc[3] -
                 2.50658800e-12 * tc[4];
    // species 6: co
    species[6] = +3.26245200e+00 + 1.51194100e-03 * tc[1] -
                 3.88175500e-06 * tc[2] + 5.58194400e-09 * tc[3] -
                 2.47495100e-12 * tc[4];
    // species 7: co2
    species[7] = +2.27572500e+00 + 9.92207200e-03 * tc[1] -
                 1.04091100e-05 * tc[2] + 6.86668700e-09 * tc[3] -
                 2.11728000e-12 * tc[4];
    // species 8: ch3
    species[8] = +2.43044300e+00 + 1.11241000e-02 * tc[1] -
                 1.68022000e-05 * tc[2] + 1.62182900e-08 * tc[3] -
                 5.86495300e-12 * tc[4];
    // species 9: ch4
    species[9] = +7.78741500e-01 + 1.74766800e-02 * tc[1] -
                 2.78340900e-05 * tc[2] + 3.04970800e-08 * tc[3] -
                 1.22393100e-11 * tc[4];
    // species 11: h2o2
    species[11] = +3.38875400e+00 + 6.56922600e-03 * tc[1] -
                  1.48501300e-07 * tc[2] - 4.62580600e-09 * tc[3] +
                  2.47151500e-12 * tc[4];
    // species 12: ch2o
    species[12] = +1.65273100e+00 + 1.26314400e-02 * tc[1] -
                  1.88816800e-05 * tc[2] + 2.05003100e-08 * tc[3] -
                  8.41323700e-12 * tc[4];
    // species 14: c2h4
    species[14] = -8.61488000e-01 + 2.79616300e-02 * tc[1] -
                  3.38867700e-05 * tc[2] + 2.78515200e-08 * tc[3] -
                  9.73787900e-12 * tc[4];
    // species 15: c2h5
    species[15] = +2.69070200e+00 + 8.71913300e-03 * tc[1] +
                  4.41983900e-06 * tc[2] + 9.33870300e-10 * tc[3] -
                  3.92777300e-12 * tc[4];
    // species 16: c2h2
    species[16] = +2.01356200e+00 + 1.51904500e-02 * tc[1] -
                  1.61631900e-05 * tc[2] + 9.07899200e-09 * tc[3] -
                  1.91274600e-12 * tc[4];
    // species 17: c2h3
    species[17] = +2.45927600e+00 + 7.37147600e-03 * tc[1] +
                  2.10987300e-06 * tc[2] - 1.32164200e-09 * tc[3] -
                  1.18478400e-12 * tc[4];
    // species 18: ch2co
    species[18] = +2.97497100e+00 + 1.21187100e-02 * tc[1] -
                  2.34504600e-06 * tc[2] - 6.46668500e-09 * tc[3] +
                  3.90564900e-12 * tc[4];
    // species 19: hcco
    species[19] = +5.04796500e+00 + 4.45347800e-03 * tc[1] +
                  2.26828300e-07 * tc[2] - 1.48209500e-09 * tc[3] +
                  2.25074200e-13 * tc[4];
    // species 20: ch3cho
    species[20] = +2.50569500e+00 + 1.33699100e-02 * tc[1] +
                  4.67195300e-06 * tc[2] - 1.12814000e-08 * tc[3] +
                  4.26356600e-12 * tc[4];
    // species 24: nc3h7
    species[24] = +1.92253700e+00 + 2.47892700e-02 * tc[1] +
                  1.81024900e-06 * tc[2] - 1.78326600e-08 * tc[3] +
                  8.58299600e-12 * tc[4];
    // species 38: c3h3
    species[38] = +4.75420000e+00 + 1.10802800e-02 * tc[1] +
                  2.79332300e-07 * tc[2] - 5.47921200e-09 * tc[3] +
                  1.94962900e-12 * tc[4];
    // species 54: n2
    species[54] = +3.29867700e+00 + 1.40824000e-03 * tc[1] -
                  3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                  2.44485500e-12 * tc[4];
  } else {
    // species 0: h
    species[0] = +2.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4];
    // species 1: h2
    species[1] = +2.99142300e+00 + 7.00064400e-04 * tc[1] -
                 5.63382900e-08 * tc[2] - 9.23157800e-12 * tc[3] +
                 1.58275200e-15 * tc[4];
    // species 2: o
    species[2] = +2.54206000e+00 - 2.75506200e-05 * tc[1] -
                 3.10280300e-09 * tc[2] + 4.55106700e-12 * tc[3] -
                 4.36805200e-16 * tc[4];
    // species 3: o2
    species[3] = +3.69757800e+00 + 6.13519700e-04 * tc[1] -
                 1.25884200e-07 * tc[2] + 1.77528100e-11 * tc[3] -
                 1.13643500e-15 * tc[4];
    // species 5: h2o
    species[5] = +2.67214600e+00 + 3.05629300e-03 * tc[1] -
                 8.73026000e-07 * tc[2] + 1.20099600e-10 * tc[3] -
                 6.39161800e-15 * tc[4];
    // species 6: co
    species[6] = +3.02507800e+00 + 1.44268900e-03 * tc[1] -
                 5.63082800e-07 * tc[2] + 1.01858100e-10 * tc[3] -
                 6.91095200e-15 * tc[4];
    // species 7: co2
    species[7] = +4.45362300e+00 + 3.14016900e-03 * tc[1] -
                 1.27841100e-06 * tc[2] + 2.39399700e-10 * tc[3] -
                 1.66903300e-14 * tc[4];
    // species 8: ch3
    species[8] = +2.84405200e+00 + 6.13797400e-03 * tc[1] -
                 2.23034500e-06 * tc[2] + 3.78516100e-10 * tc[3] -
                 2.45215900e-14 * tc[4];
    // species 9: ch4
    species[9] = +1.68347900e+00 + 1.02372400e-02 * tc[1] -
                 3.87512900e-06 * tc[2] + 6.78558500e-10 * tc[3] -
                 4.50342300e-14 * tc[4];
    // species 11: h2o2
    species[11] = +4.57316700e+00 + 4.33613600e-03 * tc[1] -
                  1.47468900e-06 * tc[2] + 2.34890400e-10 * tc[3] -
                  1.43165400e-14 * tc[4];
    // species 12: ch2o
    species[12] = +2.99560600e+00 + 6.68132100e-03 * tc[1] -
                  2.62895500e-06 * tc[2] + 4.73715300e-10 * tc[3] -
                  3.21251700e-14 * tc[4];
    // species 14: c2h4
    species[14] = +3.52841900e+00 + 1.14851800e-02 * tc[1] -
                  4.41838500e-06 * tc[2] + 7.84460100e-10 * tc[3] -
                  5.26684800e-14 * tc[4];
    // species 15: c2h5
    species[15] = +7.19048000e+00 + 6.48407700e-03 * tc[1] -
                  6.42806500e-07 * tc[2] - 2.34787900e-10 * tc[3] +
                  3.88087700e-14 * tc[4];
    // species 16: c2h2
    species[16] = +4.43677000e+00 + 5.37603900e-03 * tc[1] -
                  1.91281700e-06 * tc[2] + 3.28637900e-10 * tc[3] -
                  2.15671000e-14 * tc[4];
    // species 17: c2h3
    species[17] = +5.93346800e+00 + 4.01774600e-03 * tc[1] -
                  3.96674000e-07 * tc[2] - 1.44126700e-10 * tc[3] +
                  2.37864400e-14 * tc[4];
    // species 18: ch2co
    species[18] = +6.03881700e+00 + 5.80484000e-03 * tc[1] -
                  1.92095400e-06 * tc[2] + 2.79448500e-10 * tc[3] -
                  1.45886800e-14 * tc[4];
    // species 19: hcco
    species[19] = +6.75807300e+00 + 2.00040000e-03 * tc[1] -
                  2.02760700e-07 * tc[2] - 1.04113200e-10 * tc[3] +
                  1.96516500e-14 * tc[4];
    // species 20: ch3cho
    species[20] = +5.86865000e+00 + 1.07942400e-02 * tc[1] -
                  3.64553000e-06 * tc[2] + 5.41291200e-10 * tc[3] -
                  2.89684400e-14 * tc[4];
    // species 24: nc3h7
    species[24] = +7.97829100e+00 + 1.57611300e-02 * tc[1] -
                  5.17324300e-06 * tc[2] + 7.44389200e-10 * tc[3] -
                  3.82497800e-14 * tc[4];
    // species 38: c3h3
    species[38] = +8.83104700e+00 + 4.35719500e-03 * tc[1] -
                  4.10906700e-07 * tc[2] - 2.36872300e-10 * tc[3] +
                  4.37652000e-14 * tc[4];
    // species 54: n2
    species[54] = +2.92664000e+00 + 1.48797700e-03 * tc[1] -
                  5.68476100e-07 * tc[2] + 1.00970400e-10 * tc[3] -
                  6.75335100e-15 * tc[4];
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.43586219e+00 + 2.02235804e-04 * tc[1] -
                 1.13546412e-07 * tc[2] + 2.42445149e-10 * tc[3] -
                 7.43651031e-14 * tc[4];
  } else {
    // species 4: oh
    species[4] = +2.62599754e+00 + 1.31992406e-03 * tc[1] -
                 3.59724670e-07 * tc[2] + 4.25630800e-11 * tc[3] -
                 1.82048016e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +3.18310656e+00 + 3.66767950e-03 * tc[1] -
                  9.32385122e-07 * tc[2] - 3.25852919e-10 * tc[3] +
                  1.51139912e-13 * tc[4];
    // species 32: ch3o2h
    species[32] = +3.23442817e+00 + 1.90129767e-02 * tc[1] -
                  1.13386287e-05 * tc[2] + 3.40306653e-09 * tc[3] -
                  4.11830222e-13 * tc[4];
    // species 47: c7h15o2-2
    species[47] = +3.55252917e-01 + 9.42381007e-02 * tc[1] -
                  6.66955106e-05 * tc[2] + 2.54795583e-08 * tc[3] -
                  4.13211105e-12 * tc[4];
    // species 48: c7h15o2-3
    species[48] = +3.55252917e-01 + 9.42381007e-02 * tc[1] -
                  6.66955106e-05 * tc[2] + 2.54795583e-08 * tc[3] -
                  4.13211105e-12 * tc[4];
    // species 49: c7h15o2-4
    species[49] = +3.55252917e-01 + 9.42381007e-02 * tc[1] -
                  6.66955106e-05 * tc[2] + 2.54795583e-08 * tc[3] -
                  4.13211105e-12 * tc[4];
  } else {
    // species 10: ho2
    species[10] = +4.10547423e+00 + 2.38452835e-03 * tc[1] -
                  8.06347989e-07 * tc[2] + 1.24191723e-10 * tc[3] -
                  7.16400108e-15 * tc[4];
    // species 32: ch3o2h
    species[32] = +8.43117091e+00 + 8.06817909e-03 * tc[1] -
                  2.77094921e-06 * tc[2] + 4.31332243e-10 * tc[3] -
                  2.50692146e-14 * tc[4];
    // species 47: c7h15o2-2
    species[47] = +2.60535640e+01 + 3.43831688e-02 * tc[1] -
                  1.18713247e-05 * tc[2] + 1.85450241e-09 * tc[3] -
                  1.08052399e-13 * tc[4];
    // species 48: c7h15o2-3
    species[48] = +2.60535640e+01 + 3.43831688e-02 * tc[1] -
                  1.18713247e-05 * tc[2] + 1.85450241e-09 * tc[3] -
                  1.08052399e-13 * tc[4];
    // species 49: c7h15o2-4
    species[49] = +2.60535640e+01 + 3.43831688e-02 * tc[1] -
                  1.18713247e-05 * tc[2] + 1.85450241e-09 * tc[3] -
                  1.08052399e-13 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -2.52854344e-02 + 2.40764754e-02 * tc[1] -
                  1.11893472e-05 * tc[2] + 2.08340901e-09 * tc[3] -
                  5.29868616e-14 * tc[4];
  } else {
    // species 13: c2h6
    species[13] = +6.10683385e+00 + 1.29236361e-02 * tc[1] -
                  4.42527196e-06 * tc[2] + 6.87391726e-10 * tc[3] -
                  3.98901732e-14 * tc[4];
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +2.53983100e+00 + 1.63343700e-02 * tc[1] -
                  1.76495000e-06 * tc[2] - 4.64736500e-09 * tc[3] +
                  1.72913100e-12 * tc[4];
  } else {
    // species 21: c3h4-a
    species[21] = +9.77625600e+00 + 5.30213800e-03 * tc[1] -
                  3.70111800e-07 * tc[2] - 3.02638600e-10 * tc[3] +
                  5.08958100e-14 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = +3.94615444e-01 + 2.89107662e-02 * tc[1] -
                  1.54886808e-05 * tc[2] + 3.88814209e-09 * tc[3] -
                  3.37890352e-13 * tc[4];
    // species 46: c7h15o2-1
    species[46] = +1.20888552e+00 + 8.84061706e-02 * tc[1] -
                  5.79861260e-05 * tc[2] + 2.03574689e-08 * tc[3] -
                  3.06460336e-12 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = +1.89718004e+00 + 1.06229796e-01 * tc[1] -
                  8.02770218e-05 * tc[2] + 3.23649093e-08 * tc[3] -
                  5.45850472e-12 * tc[4];
  } else {
    // species 22: c3h6
    species[22] = +8.01595958e+00 + 1.37023634e-02 * tc[1] -
                  4.66249733e-06 * tc[2] + 7.21254402e-10 * tc[3] -
                  4.17370126e-14 * tc[4];
    // species 46: c7h15o2-1
    species[46] = +2.52656556e+01 + 3.50803587e-02 * tc[1] -
                  1.21178801e-05 * tc[2] + 1.89360806e-09 * tc[3] -
                  1.10354125e-13 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = +3.20144349e+01 + 3.40055996e-02 * tc[1] -
                  1.18415856e-05 * tc[2] + 1.86060347e-09 * tc[3] -
                  1.08851012e-13 * tc[4];
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = -1.43095121e+00 + 4.78706062e-02 * tc[1] -
                  4.15446800e-05 * tc[2] + 1.91549552e-08 * tc[3] -
                  3.57158507e-12 * tc[4];
  } else {
    // species 23: c4h6
    species[23] = +1.11633789e+01 + 1.37163965e-02 * tc[1] -
                  4.69715783e-06 * tc[2] + 7.29693836e-10 * tc[3] -
                  4.23486203e-14 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = -3.50508352e-01 + 4.26511243e-02 * tc[1] -
                  2.90979373e-05 * tc[2] + 1.05403914e-08 * tc[3] -
                  1.60059854e-12 * tc[4];
    // species 26: c4h8-1
    species[26] = -8.31372089e-01 + 4.52580978e-02 * tc[1] -
                  2.93658559e-05 * tc[2] + 1.00220436e-08 * tc[3] -
                  1.43191680e-12 * tc[4];
    // species 29: c5h9
    species[29] = -1.38013950e+00 + 5.57608487e-02 * tc[1] -
                  3.70143928e-05 * tc[2] + 1.26883901e-08 * tc[3] -
                  1.78538835e-12 * tc[4];
    // species 30: c5h10-1
    species[30] = -1.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
  } else {
    // species 25: c4h7
    species[25] = +1.12103578e+01 + 1.60483196e-02 * tc[1] -
                  5.46502292e-06 * tc[2] + 8.45941053e-10 * tc[3] -
                  4.89772739e-14 * tc[4];
    // species 26: c4h8-1
    species[26] = +1.13508668e+01 + 1.80617877e-02 * tc[1] -
                  6.16093029e-06 * tc[2] + 9.54652959e-10 * tc[3] -
                  5.53089641e-14 * tc[4];
    // species 29: c5h9
    species[29] = +1.41860454e+01 + 2.07128899e-02 * tc[1] -
                  7.06960617e-06 * tc[2] + 1.09607133e-09 * tc[3] -
                  6.35322208e-14 * tc[4];
    // species 30: c5h10-1
    species[30] = +1.45851539e+01 + 2.24072471e-02 * tc[1] -
                  7.63348025e-06 * tc[2] + 1.18188966e-09 * tc[3] -
                  6.84385139e-14 * tc[4];
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = +1.80339187e+00 + 3.01407085e-02 * tc[1] -
                  1.93505552e-05 * tc[2] + 6.38199034e-09 * tc[3] -
                  8.66103180e-13 * tc[4];
    // species 45: nc7h16
    species[45] = -1.26836187e+00 + 8.54355820e-02 * tc[1] -
                  5.25346786e-05 * tc[2] + 1.62945721e-08 * tc[3] -
                  2.02394925e-12 * tc[4];
  } else {
    // species 27: ch3coch2
    species[27] = +1.02303975e+01 + 1.16494161e-02 * tc[1] -
                  4.01005537e-06 * tc[2] + 6.25205246e-10 * tc[3] -
                  3.63784362e-14 * tc[4];
    // species 45: nc7h16
    species[45] = +2.22148969e+01 + 3.47675750e-02 * tc[1] -
                  1.18407129e-05 * tc[2] + 1.83298478e-09 * tc[3] -
                  1.06130266e-13 * tc[4];
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = +2.16308444e+00 + 2.95501264e-02 * tc[1] -
                  1.52446252e-05 * tc[2] + 3.49503947e-09 * tc[3] -
                  2.38896627e-13 * tc[4];
    // species 40: nc3h7cho
    species[40] = +1.87415959e+00 + 4.19240315e-02 * tc[1] -
                  2.35148779e-05 * tc[2] + 6.26913673e-09 * tc[3] -
                  6.09443908e-13 * tc[4];
  } else {
    // species 28: c2h5cho
    species[28] = +1.02427695e+01 + 1.39641989e-02 * tc[1] -
                  4.76248001e-06 * tc[2] + 7.38105706e-10 * tc[3] -
                  4.27759503e-14 * tc[4];
    // species 40: nc3h7cho
    species[40] = +1.35988068e+01 + 1.81652474e-02 * tc[1] -
                  6.17844458e-06 * tc[2] + 9.55980208e-10 * tc[3] -
                  5.53442958e-14 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = +4.26146906e+00 + 1.00873599e-02 * tc[1] -
                  3.21506184e-06 * tc[2] + 2.09409267e-10 * tc[3] +
                  4.18339103e-14 * tc[4];
    // species 36: pc4h9o2
    species[36] = +1.94363650e+00 + 5.15513163e-02 * tc[1] -
                  3.28284400e-05 * tc[2] + 1.13064860e-08 * tc[3] -
                  1.70118606e-12 * tc[4];
  } else {
    // species 31: ch3o2
    species[31] = +5.95787891e+00 + 7.90728626e-03 * tc[1] -
                  2.68246234e-06 * tc[2] + 4.13891337e-10 * tc[3] -
                  2.39007330e-14 * tc[4];
    // species 36: pc4h9o2
    species[36] = +1.57845448e+01 + 2.15210910e-02 * tc[1] -
                  7.44909017e-06 * tc[2] + 1.16558071e-09 * tc[3] -
                  6.79885609e-14 * tc[4];
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +1.36242013e+00 + 3.15273972e-02 * tc[1] -
                  3.00218935e-05 * tc[2] + 1.48167112e-08 * tc[3] -
                  2.87971530e-12 * tc[4];
  } else {
    // species 33: c2h3co
    species[33] = +9.37467676e+00 + 7.91296900e-03 * tc[1] -
                  2.67198280e-06 * tc[2] + 4.11115430e-10 * tc[3] -
                  2.36978981e-14 * tc[4];
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = +2.92355162e-01 + 3.54321417e-02 * tc[1] -
                  2.94936324e-05 * tc[2] + 1.28100124e-08 * tc[3] -
                  2.26144108e-12 * tc[4];
  } else {
    // species 34: c2h3cho
    species[34] = +1.04184959e+01 + 9.48963321e-03 * tc[1] -
                  3.29310529e-06 * tc[2] + 5.16279203e-10 * tc[3] -
                  3.01587291e-14 * tc[4];
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.22400728e+00 + 7.04994620e-02 * tc[1] -
                  5.66978827e-05 * tc[2] + 2.42627751e-08 * tc[3] -
                  4.29715459e-12 * tc[4];
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.23244015e+01 + 2.05474775e-02 * tc[1] -
                  7.19076348e-06 * tc[2] + 1.13361536e-09 * tc[3] -
                  6.64744383e-14 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = -5.29131958e-01 + 3.34559100e-02 * tc[1] -
                  2.53401027e-05 * tc[2] + 1.02865754e-08 * tc[3] -
                  1.73258340e-12 * tc[4];
  } else {
    // species 37: c3h5-a
    species[37] = +8.45883958e+00 + 1.12695483e-02 * tc[1] -
                  3.83792864e-06 * tc[2] + 5.94059119e-10 * tc[3] -
                  3.43918030e-14 * tc[4];
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = +2.74883461e+00 + 5.86936745e-02 * tc[1] -
                  4.49605895e-05 * tc[2] + 1.83200130e-08 * tc[3] -
                  3.11765369e-12 * tc[4];
  } else {
    // species 39: nc4ket13
    species[39] = +1.96430808e+01 + 1.80940566e-02 * tc[1] -
                  6.33063232e-06 * tc[2] + 9.97860399e-10 * tc[3] -
                  5.85076458e-14 * tc[4];
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = +1.54013856e+00 + 4.39486258e-02 * tc[1] -
                  2.97002421e-05 * tc[2] + 1.05495313e-08 * tc[3] -
                  1.58598769e-12 * tc[4];
  } else {
    // species 41: c2h5coch2
    species[41] = +1.42098738e+01 + 1.57866459e-02 * tc[1] -
                  5.50529183e-06 * tc[2] + 8.65870540e-10 * tc[3] -
                  5.06913329e-14 * tc[4];
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = +9.58299271e-01 + 5.68162532e-02 * tc[1] -
                  3.99112781e-05 * tc[2] + 1.52671514e-08 * tc[3] -
                  2.49221047e-12 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = +8.49786005e-01 + 9.25107196e-02 * tc[1] -
                  6.25359834e-05 * tc[2] + 2.17880390e-08 * tc[3] -
                  3.12720398e-12 * tc[4];
  } else {
    // species 42: nc3h7coch2
    species[42] = +1.61502419e+01 + 2.14093466e-02 * tc[1] -
                  7.36059614e-06 * tc[2] + 1.14656816e-09 * tc[3] -
                  6.66712722e-14 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = +2.74034778e+01 + 3.27527893e-02 * tc[1] -
                  1.12991770e-05 * tc[2] + 1.76444649e-09 * tc[3] -
                  1.02786945e-13 * tc[4];
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = +1.59663472e+00 + 5.43541416e-02 * tc[1] -
                  3.21020651e-05 * tc[2] + 9.35773559e-09 * tc[3] -
                  1.06688932e-12 * tc[4];
  } else {
    // species 43: nc4h9cho
    species[43] = +1.67965163e+01 + 2.25684519e-02 * tc[1] -
                  7.67631588e-06 * tc[2] + 1.18769369e-09 * tc[3] -
                  6.87545554e-14 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = +2.43530238e+00 + 4.93682376e-02 * tc[1] -
                  2.89883082e-05 * tc[2] + 8.42863812e-09 * tc[3] -
                  9.68287172e-13 * tc[4];
  } else {
    // species 44: nc4h9co
    species[44] = +1.61782939e+01 + 2.07991920e-02 * tc[1] -
                  7.11787892e-06 * tc[2] + 1.10559975e-09 * tc[3] -
                  6.41697187e-14 * tc[4];
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -5.50036450e+00 + 1.00155088e-01 * tc[1] -
                  7.29935857e-05 * tc[2] + 2.79344270e-08 * tc[3] -
                  4.42245696e-12 * tc[4];
  } else {
    // species 52: c7h14o1-3
    species[52] = +2.26918916e+01 + 3.32510472e-02 * tc[1] -
                  1.14457765e-05 * tc[2] + 1.78455535e-09 * tc[3] -
                  1.03841112e-13 * tc[4];
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -5.39477206e+00 + 1.01846577e-01 * tc[1] -
                  7.60046236e-05 * tc[2] + 2.96538020e-08 * tc[3] -
                  4.74854370e-12 * tc[4];
  } else {
    // species 53: c7h14o2-4
    species[53] = +2.32692731e+01 + 3.25585391e-02 * tc[1] -
                  1.11624906e-05 * tc[2] + 1.73573658e-09 * tc[3] -
                  1.00813215e-13 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +2.547474660000000e+04 * invT + 2.966385537000000e+00 -
                 2.501044220000000e+00 * tc[0] - 0.000000000000000e+00 * tc[1] -
                 0.000000000000000e+00 * tc[2] - 0.000000000000000e+00 * tc[3] -
                 0.000000000000000e+00 * tc[4];
    // species 1: h2
    species[1] = -1.012521000000000e+03 * invT + 6.592218000000000e+00 -
                 3.298124000000000e+00 * tc[0] - 4.124721000000000e-04 * tc[1] +
                 1.357169166666667e-07 * tc[2] + 7.896194999999999e-12 * tc[3] -
                 2.067436000000000e-14 * tc[4];
    // species 2: o
    species[2] = +2.914764000000000e+04 * invT - 1.756599999999997e-02 -
                 2.946429000000000e+00 * tc[0] + 8.190830000000000e-04 * tc[1] -
                 4.035053333333333e-07 * tc[2] + 1.335702500000000e-10 * tc[3] -
                 1.945348000000000e-14 * tc[4];
    // species 3: o2
    species[3] = -1.005249000000000e+03 * invT - 2.821802000000000e+00 -
                 3.212936000000000e+00 * tc[0] - 5.637430000000000e-04 * tc[1] +
                 9.593583333333333e-08 * tc[2] - 1.094897500000000e-10 * tc[3] +
                 4.384277000000000e-14 * tc[4];
    // species 5: h2o
    species[5] = -3.020811000000000e+04 * invT + 7.966090000000001e-01 -
                 3.386842000000000e+00 * tc[0] - 1.737491000000000e-03 * tc[1] +
                 1.059116000000000e-06 * tc[2] - 5.807150833333333e-10 * tc[3] +
                 1.253294000000000e-13 * tc[4];
    // species 6: co
    species[6] = -1.431054000000000e+04 * invT - 1.586445000000000e+00 -
                 3.262452000000000e+00 * tc[0] - 7.559705000000000e-04 * tc[1] +
                 6.469591666666667e-07 * tc[2] - 4.651620000000000e-10 * tc[3] +
                 1.237475500000000e-13 * tc[4];
    // species 7: co2
    species[7] = -4.837314000000000e+04 * invT - 7.912765000000000e+00 -
                 2.275725000000000e+00 * tc[0] - 4.961036000000000e-03 * tc[1] +
                 1.734851666666667e-06 * tc[2] - 5.722239166666667e-10 * tc[3] +
                 1.058640000000000e-13 * tc[4];
    // species 8: ch3
    species[8] = +1.642378000000000e+04 * invT - 4.359351000000000e+00 -
                 2.430443000000000e+00 * tc[0] - 5.562050000000000e-03 * tc[1] +
                 2.800366666666666e-06 * tc[2] - 1.351524166666667e-09 * tc[3] +
                 2.932476500000000e-13 * tc[4];
    // species 9: ch4
    species[9] = -9.825228999999999e+03 * invT - 1.294344850000000e+01 -
                 7.787415000000000e-01 * tc[0] - 8.738340000000001e-03 * tc[1] +
                 4.639015000000000e-06 * tc[2] - 2.541423333333333e-09 * tc[3] +
                 6.119655000000000e-13 * tc[4];
    // species 11: h2o2
    species[11] = -1.766315000000000e+04 * invT - 3.396609000000000e+00 -
                  3.388754000000000e+00 * tc[0] -
                  3.284613000000000e-03 * tc[1] +
                  2.475021666666666e-08 * tc[2] +
                  3.854838333333333e-10 * tc[3] - 1.235757500000000e-13 * tc[4];
    // species 12: ch2o
    species[12] = -1.486540000000000e+04 * invT - 1.213208900000000e+01 -
                  1.652731000000000e+00 * tc[0] -
                  6.315720000000000e-03 * tc[1] +
                  3.146946666666667e-06 * tc[2] -
                  1.708359166666667e-09 * tc[3] + 4.206618500000000e-13 * tc[4];
    // species 14: c2h4
    species[14] = +5.573046000000000e+03 * invT - 2.507297800000000e+01 +
                  8.614880000000000e-01 * tc[0] -
                  1.398081500000000e-02 * tc[1] +
                  5.647795000000000e-06 * tc[2] -
                  2.320960000000000e-09 * tc[3] + 4.868939500000000e-13 * tc[4];
    // species 15: c2h5
    species[15] = +1.287040000000000e+04 * invT - 9.447498000000000e+00 -
                  2.690702000000000e+00 * tc[0] -
                  4.359566500000000e-03 * tc[1] -
                  7.366398333333332e-07 * tc[2] -
                  7.782252500000001e-11 * tc[3] + 1.963886500000000e-13 * tc[4];
    // species 16: c2h2
    species[16] = +2.612444000000000e+04 * invT - 6.791815999999999e+00 -
                  2.013562000000000e+00 * tc[0] -
                  7.595225000000000e-03 * tc[1] +
                  2.693865000000000e-06 * tc[2] -
                  7.565826666666667e-10 * tc[3] + 9.563730000000000e-14 * tc[4];
    // species 17: c2h3
    species[17] = +3.335225000000000e+04 * invT - 9.096924000000001e+00 -
                  2.459276000000000e+00 * tc[0] -
                  3.685738000000000e-03 * tc[1] -
                  3.516455000000000e-07 * tc[2] +
                  1.101368333333333e-10 * tc[3] + 5.923920000000000e-14 * tc[4];
    // species 18: ch2co
    species[18] = -7.632637000000000e+03 * invT - 5.698582000000000e+00 -
                  2.974971000000000e+00 * tc[0] -
                  6.059355000000000e-03 * tc[1] +
                  3.908410000000000e-07 * tc[2] +
                  5.388904166666666e-10 * tc[3] - 1.952824500000000e-13 * tc[4];
    // species 19: hcco
    species[19] = +1.965892000000000e+04 * invT + 4.566121099999999e+00 -
                  5.047965000000000e+00 * tc[0] -
                  2.226739000000000e-03 * tc[1] -
                  3.780471666666667e-08 * tc[2] +
                  1.235079166666667e-10 * tc[3] - 1.125371000000000e-14 * tc[4];
    // species 20: ch3cho
    species[20] = -2.124589000000000e+04 * invT - 1.084519500000000e+01 -
                  2.505695000000000e+00 * tc[0] -
                  6.684955000000000e-03 * tc[1] -
                  7.786588333333333e-07 * tc[2] +
                  9.401166666666668e-10 * tc[3] - 2.131783000000000e-13 * tc[4];
    // species 24: nc3h7
    species[24] = +9.713281000000001e+03 * invT - 1.207017300000000e+01 -
                  1.922537000000000e+00 * tc[0] -
                  1.239463500000000e-02 * tc[1] -
                  3.017081666666666e-07 * tc[2] +
                  1.486055000000000e-09 * tc[3] - 4.291498000000000e-13 * tc[4];
    // species 38: c3h3
    species[38] = +3.988883000000000e+04 * invT + 4.168745100000000e+00 -
                  4.754200000000000e+00 * tc[0] -
                  5.540140000000000e-03 * tc[1] -
                  4.655538333333333e-08 * tc[2] +
                  4.566010000000000e-10 * tc[3] - 9.748145000000000e-14 * tc[4];
    // species 54: n2
    species[54] = -1.020900000000000e+03 * invT - 6.516950000000001e-01 -
                  3.298677000000000e+00 * tc[0] -
                  7.041200000000000e-04 * tc[1] +
                  6.605369999999999e-07 * tc[2] -
                  4.701262500000001e-10 * tc[3] + 1.222427500000000e-13 * tc[4];
  } else {
    // species 0: h
    species[0] = +2.547474660000000e+04 * invT + 2.966385537000000e+00 -
                 2.501044220000000e+00 * tc[0] - 0.000000000000000e+00 * tc[1] -
                 0.000000000000000e+00 * tc[2] - 0.000000000000000e+00 * tc[3] -
                 0.000000000000000e+00 * tc[4];
    // species 1: h2
    species[1] = -8.350340000000000e+02 * invT + 4.346533000000000e+00 -
                 2.991423000000000e+00 * tc[0] - 3.500322000000000e-04 * tc[1] +
                 9.389715000000000e-09 * tc[2] + 7.692981666666667e-13 * tc[3] -
                 7.913760000000000e-17 * tc[4];
    // species 2: o
    species[2] = +2.923080000000000e+04 * invT - 2.378248000000000e+00 -
                 2.542060000000000e+00 * tc[0] + 1.377531000000000e-05 * tc[1] +
                 5.171338333333333e-10 * tc[2] - 3.792555833333334e-13 * tc[3] +
                 2.184026000000000e-17 * tc[4];
    // species 3: o2
    species[3] = -1.233930000000000e+03 * invT + 5.084119999999999e-01 -
                 3.697578000000000e+00 * tc[0] - 3.067598500000000e-04 * tc[1] +
                 2.098070000000000e-08 * tc[2] - 1.479400833333333e-12 * tc[3] +
                 5.682175000000001e-17 * tc[4];
    // species 5: h2o
    species[5] = -2.989921000000000e+04 * invT - 4.190671000000000e+00 -
                 2.672146000000000e+00 * tc[0] - 1.528146500000000e-03 * tc[1] +
                 1.455043333333333e-07 * tc[2] - 1.000830000000000e-11 * tc[3] +
                 3.195809000000000e-16 * tc[4];
    // species 6: co
    species[6] = -1.426835000000000e+04 * invT - 3.083140000000000e+00 -
                 3.025078000000000e+00 * tc[0] - 7.213445000000000e-04 * tc[1] +
                 9.384713333333334e-08 * tc[2] - 8.488174999999999e-12 * tc[3] +
                 3.455476000000000e-16 * tc[4];
    // species 7: co2
    species[7] = -4.896696000000000e+04 * invT + 5.409018900000000e+00 -
                 4.453623000000000e+00 * tc[0] - 1.570084500000000e-03 * tc[1] +
                 2.130685000000000e-07 * tc[2] - 1.994997500000000e-11 * tc[3] +
                 8.345165000000000e-16 * tc[4];
    // species 8: ch3
    species[8] = +1.643781000000000e+04 * invT - 2.608645000000000e+00 -
                 2.844052000000000e+00 * tc[0] - 3.068987000000000e-03 * tc[1] +
                 3.717241666666666e-07 * tc[2] - 3.154300833333333e-11 * tc[3] +
                 1.226079500000000e-15 * tc[4];
    // species 9: ch4
    species[9] = -1.008079000000000e+04 * invT - 7.939916000000000e+00 -
                 1.683479000000000e+00 * tc[0] - 5.118620000000000e-03 * tc[1] +
                 6.458548333333333e-07 * tc[2] - 5.654654166666667e-11 * tc[3] +
                 2.251711500000000e-15 * tc[4];
    // species 11: h2o2
    species[11] = -1.800696000000000e+04 * invT + 4.072030000000000e+00 -
                  4.573167000000000e+00 * tc[0] -
                  2.168068000000000e-03 * tc[1] +
                  2.457815000000000e-07 * tc[2] -
                  1.957420000000000e-11 * tc[3] + 7.158270000000000e-16 * tc[4];
    // species 12: ch2o
    species[12] = -1.532037000000000e+04 * invT - 3.916966000000000e+00 -
                  2.995606000000000e+00 * tc[0] -
                  3.340660500000000e-03 * tc[1] +
                  4.381591666666666e-07 * tc[2] -
                  3.947627500000000e-11 * tc[3] + 1.606258500000000e-15 * tc[4];
    // species 14: c2h4
    species[14] = +4.428289000000000e+03 * invT + 1.298030000000000e+00 -
                  3.528419000000000e+00 * tc[0] -
                  5.742590000000000e-03 * tc[1] +
                  7.363975000000000e-07 * tc[2] -
                  6.537167500000001e-11 * tc[3] + 2.633424000000000e-15 * tc[4];
    // species 15: c2h5
    species[15] = +1.067455000000000e+04 * invT + 2.197137000000000e+01 -
                  7.190480000000000e+00 * tc[0] -
                  3.242038500000000e-03 * tc[1] +
                  1.071344166666667e-07 * tc[2] +
                  1.956565833333333e-11 * tc[3] - 1.940438500000000e-15 * tc[4];
    // species 16: c2h2
    species[16] = +2.566766000000000e+04 * invT + 7.237108000000000e+00 -
                  4.436770000000000e+00 * tc[0] -
                  2.688019500000000e-03 * tc[1] +
                  3.188028333333333e-07 * tc[2] -
                  2.738649166666667e-11 * tc[3] + 1.078355000000000e-15 * tc[4];
    // species 17: c2h3
    species[17] = +3.185435000000000e+04 * invT + 1.446378100000000e+01 -
                  5.933468000000000e+00 * tc[0] -
                  2.008873000000000e-03 * tc[1] +
                  6.611233333333333e-08 * tc[2] +
                  1.201055833333333e-11 * tc[3] - 1.189322000000000e-15 * tc[4];
    // species 18: ch2co
    species[18] = -8.583402000000000e+03 * invT + 1.369639800000000e+01 -
                  6.038817000000000e+00 * tc[0] -
                  2.902420000000000e-03 * tc[1] +
                  3.201590000000000e-07 * tc[2] -
                  2.328737500000000e-11 * tc[3] + 7.294340000000000e-16 * tc[4];
    // species 19: hcco
    species[19] = +1.901513000000000e+04 * invT + 1.582933500000000e+01 -
                  6.758073000000000e+00 * tc[0] -
                  1.000200000000000e-03 * tc[1] +
                  3.379345000000000e-08 * tc[2] +
                  8.676100000000000e-12 * tc[3] - 9.825825000000000e-16 * tc[4];
    // species 20: ch3cho
    species[20] = -2.264569000000000e+04 * invT + 1.188159600000000e+01 -
                  5.868650000000000e+00 * tc[0] -
                  5.397120000000000e-03 * tc[1] +
                  6.075883333333333e-07 * tc[2] -
                  4.510760000000000e-11 * tc[3] + 1.448422000000000e-15 * tc[4];
    // species 24: nc3h7
    species[24] = +7.579402000000000e+03 * invT + 2.733440100000000e+01 -
                  7.978291000000000e+00 * tc[0] -
                  7.880565000000001e-03 * tc[1] +
                  8.622071666666666e-07 * tc[2] -
                  6.203243333333333e-11 * tc[3] + 1.912489000000000e-15 * tc[4];
    // species 38: c3h3
    species[38] = +3.847420000000000e+04 * invT + 3.061023700000000e+01 -
                  8.831047000000000e+00 * tc[0] -
                  2.178597500000000e-03 * tc[1] +
                  6.848445000000000e-08 * tc[2] +
                  1.973935833333333e-11 * tc[3] - 2.188260000000000e-15 * tc[4];
    // species 54: n2
    species[54] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                  2.926640000000000e+00 * tc[0] -
                  7.439885000000000e-04 * tc[1] +
                  9.474601666666666e-08 * tc[2] -
                  8.414199999999999e-12 * tc[3] + 3.376675500000000e-16 * tc[4];
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.743212520000000e+03 * invT + 9.857209199999999e-01 -
                 3.435862190000000e+00 * tc[0] - 1.011179020000000e-04 * tc[1] +
                 1.892440200000000e-08 * tc[2] - 2.020376241666666e-11 * tc[3] +
                 3.718255155000000e-15 * tc[4];
  } else {
    // species 4: oh
    species[4] = +4.120853740000000e+03 * invT - 4.480675530000000e+00 -
                 2.625997540000000e+00 * tc[0] - 6.599620300000000e-04 * tc[1] +
                 5.995411166666667e-08 * tc[2] - 3.546923333333333e-12 * tc[3] +
                 9.102400800000000e-17 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +8.091810130000000e+02 * invT - 5.210604430000000e+00 -
                  3.183106560000000e+00 * tc[0] -
                  1.833839750000000e-03 * tc[1] +
                  1.553975203333333e-07 * tc[2] +
                  2.715440991666667e-11 * tc[3] - 7.556995600000000e-15 * tc[4];
    // species 32: ch3o2h
    species[32] = -1.771979260000000e+04 * invT - 6.021811320000000e+00 -
                  3.234428170000000e+00 * tc[0] -
                  9.506488350000000e-03 * tc[1] +
                  1.889771450000000e-06 * tc[2] -
                  2.835888775000000e-10 * tc[3] + 2.059151110000000e-14 * tc[4];
    // species 47: c7h15o2-2
    species[47] = -2.157952540000000e+04 * invT - 3.258809058300000e+01 -
                  3.552529170000000e-01 * tc[0] -
                  4.711905035000000e-02 * tc[1] +
                  1.111591843333333e-05 * tc[2] -
                  2.123296525000000e-09 * tc[3] + 2.066055525000000e-13 * tc[4];
    // species 48: c7h15o2-3
    species[48] = -2.157952540000000e+04 * invT - 3.258809058300000e+01 -
                  3.552529170000000e-01 * tc[0] -
                  4.711905035000000e-02 * tc[1] +
                  1.111591843333333e-05 * tc[2] -
                  2.123296525000000e-09 * tc[3] + 2.066055525000000e-13 * tc[4];
    // species 49: c7h15o2-4
    species[49] = -2.157952540000000e+04 * invT - 3.189860898300000e+01 -
                  3.552529170000000e-01 * tc[0] -
                  4.711905035000000e-02 * tc[1] +
                  1.111591843333333e-05 * tc[2] -
                  2.123296525000000e-09 * tc[3] + 2.066055525000000e-13 * tc[4];
  } else {
    // species 10: ho2
    species[10] = +3.981276890000000e+02 * invT + 9.803158699999996e-01 -
                  4.105474230000000e+00 * tc[0] -
                  1.192264175000000e-03 * tc[1] +
                  1.343913315000000e-07 * tc[2] -
                  1.034931025000000e-11 * tc[3] + 3.582000540000000e-16 * tc[4];
    // species 32: ch3o2h
    species[32] = -1.966787710000000e+04 * invT + 2.754823381000000e+01 -
                  8.431170910000001e+00 * tc[0] -
                  4.034089545000000e-03 * tc[1] +
                  4.618248683333333e-07 * tc[2] -
                  3.594435358333333e-11 * tc[3] + 1.253460730000000e-15 * tc[4];
    // species 47: c7h15o2-2
    species[47] = -3.068420950000000e+04 * invT + 1.314611270000000e+02 -
                  2.605356400000000e+01 * tc[0] -
                  1.719158440000000e-02 * tc[1] +
                  1.978554116666667e-06 * tc[2] -
                  1.545418675000000e-10 * tc[3] + 5.402619949999999e-15 * tc[4];
    // species 48: c7h15o2-3
    species[48] = -3.068420950000000e+04 * invT + 1.314611270000000e+02 -
                  2.605356400000000e+01 * tc[0] -
                  1.719158440000000e-02 * tc[1] +
                  1.978554116666667e-06 * tc[2] -
                  1.545418675000000e-10 * tc[3] + 5.402619949999999e-15 * tc[4];
    // species 49: c7h15o2-4
    species[49] = -3.068420950000000e+04 * invT + 1.321506090000000e+02 -
                  2.605356400000000e+01 * tc[0] -
                  1.719158440000000e-02 * tc[1] +
                  1.978554116666667e-06 * tc[2] -
                  1.545418675000000e-10 * tc[3] + 5.402619949999999e-15 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -1.123455340000000e+04 * invT - 2.119016043440000e+01 +
                  2.528543440000000e-02 * tc[0] -
                  1.203823770000000e-02 * tc[1] +
                  1.864891200000000e-06 * tc[2] -
                  1.736174175000000e-10 * tc[3] + 2.649343080000000e-15 * tc[4];
  } else {
    // species 13: c2h6
    species[13] = -1.375000140000000e+04 * invT + 1.911495885000000e+01 -
                  6.106833850000000e+00 * tc[0] -
                  6.461818050000000e-03 * tc[1] +
                  7.375453266666666e-07 * tc[2] -
                  5.728264383333333e-11 * tc[3] + 1.994508660000000e-15 * tc[4];
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +2.251243000000000e+04 * invT - 7.395871000000000e+00 -
                  2.539831000000000e+00 * tc[0] -
                  8.167185000000000e-03 * tc[1] +
                  2.941583333333333e-07 * tc[2] +
                  3.872804166666666e-10 * tc[3] - 8.645655000000001e-14 * tc[4];
  } else {
    // species 21: c3h4-a
    species[21] = +1.954972000000000e+04 * invT + 4.054686600000000e+01 -
                  9.776256000000000e+00 * tc[0] -
                  2.651069000000000e-03 * tc[1] +
                  6.168530000000000e-08 * tc[2] +
                  2.521988333333334e-11 * tc[3] - 2.544790500000000e-15 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = +1.066881640000000e+03 * invT - 2.150575815600000e+01 -
                  3.946154440000000e-01 * tc[0] -
                  1.445538310000000e-02 * tc[1] +
                  2.581446800000000e-06 * tc[2] -
                  3.240118408333333e-10 * tc[3] + 1.689451760000000e-14 * tc[4];
    // species 46: c7h15o2-1
    species[46] = -1.929187650000000e+04 * invT - 2.860282418000000e+01 -
                  1.208885520000000e+00 * tc[0] -
                  4.420308530000000e-02 * tc[1] +
                  9.664354333333334e-06 * tc[2] -
                  1.696455741666667e-09 * tc[3] + 1.532301680000000e-13 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = -3.227902290000000e+04 * invT - 2.835028116000000e+01 -
                  1.897180040000000e+00 * tc[0] -
                  5.311489800000000e-02 * tc[1] +
                  1.337950363333333e-05 * tc[2] -
                  2.697075775000000e-09 * tc[3] + 2.729252360000000e-13 * tc[4];
  } else {
    // species 22: c3h6
    species[22] = -1.878212710000000e+03 * invT + 2.803202638000000e+01 -
                  8.015959580000001e+00 * tc[0] -
                  6.851181700000000e-03 * tc[1] +
                  7.770828883333333e-07 * tc[2] -
                  6.010453350000000e-11 * tc[3] + 2.086850630000000e-15 * tc[4];
    // species 46: c7h15o2-1
    species[46] = -2.811133920000000e+04 * invT + 1.259704496000000e+02 -
                  2.526565560000000e+01 * tc[0] -
                  1.754017935000000e-02 * tc[1] +
                  2.019646683333333e-06 * tc[2] -
                  1.578006716666667e-10 * tc[3] + 5.517706250000000e-15 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = -4.271718590000000e+04 * invT + 1.631326779000000e+02 -
                  3.201443490000000e+01 * tc[0] -
                  1.700279980000000e-02 * tc[1] +
                  1.973597600000000e-06 * tc[2] -
                  1.550502891666667e-10 * tc[3] + 5.442550600000000e-15 * tc[4];
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = +1.175513140000000e+04 * invT - 3.051353451000000e+01 +
                  1.430951210000000e+00 * tc[0] -
                  2.393530310000000e-02 * tc[1] +
                  6.924113333333333e-06 * tc[2] -
                  1.596246266666667e-09 * tc[3] + 1.785792535000000e-13 * tc[4];
  } else {
    // species 23: c4h6
    species[23] = +7.790397700000000e+03 * invT + 4.814817380000000e+01 -
                  1.116337890000000e+01 * tc[0] -
                  6.858198250000000e-03 * tc[1] +
                  7.828596383333334e-07 * tc[2] -
                  6.080781966666666e-11 * tc[3] + 2.117431015000000e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = +1.499335910000000e+04 * invT - 2.708007795200000e+01 +
                  3.505083520000000e-01 * tc[0] -
                  2.132556215000000e-02 * tc[1] +
                  4.849656216666667e-06 * tc[2] -
                  8.783659500000000e-10 * tc[3] + 8.002992699999999e-14 * tc[4];
    // species 26: c4h8-1
    species[26] = -1.578750350000000e+03 * invT - 3.033979568900000e+01 +
                  8.313720890000000e-01 * tc[0] -
                  2.262904890000000e-02 * tc[1] +
                  4.894309316666667e-06 * tc[2] -
                  8.351702999999999e-10 * tc[3] + 7.159584000000000e-14 * tc[4];
    // species 29: c5h9
    species[29] = +1.255898240000000e+04 * invT - 3.402426990000000e+01 +
                  1.380139500000000e+00 * tc[0] -
                  2.788042435000000e-02 * tc[1] +
                  6.169065466666666e-06 * tc[2] -
                  1.057365841666667e-09 * tc[3] + 8.926941750000000e-14 * tc[4];
    // species 30: c5h10-1
    species[30] = -4.465466660000000e+03 * invT - 3.333621381000000e+01 +
                  1.062234810000000e+00 * tc[0] -
                  2.871091470000000e-02 * tc[1] +
                  6.241448166666667e-06 * tc[2] -
                  1.061374908333333e-09 * tc[3] + 8.980489449999999e-14 * tc[4];
  } else {
    // species 25: c4h7
    species[25] = +1.090419370000000e+04 * invT + 4.676965930000000e+01 -
                  1.121035780000000e+01 * tc[0] -
                  8.024159800000000e-03 * tc[1] +
                  9.108371533333334e-07 * tc[2] -
                  7.049508775000000e-11 * tc[3] + 2.448863695000000e-15 * tc[4];
    // species 26: c4h8-1
    species[26] = -5.978710380000000e+03 * invT + 4.778781060000000e+01 -
                  1.135086680000000e+01 * tc[0] -
                  9.030893850000001e-03 * tc[1] +
                  1.026821715000000e-06 * tc[2] -
                  7.955441325000001e-11 * tc[3] + 2.765448205000000e-15 * tc[4];
    // species 29: c5h9
    species[29] = +7.004961350000000e+03 * invT + 6.563622270000000e+01 -
                  1.418604540000000e+01 * tc[0] -
                  1.035644495000000e-02 * tc[1] +
                  1.178267695000000e-06 * tc[2] -
                  9.133927750000000e-11 * tc[3] + 3.176611040000000e-15 * tc[4];
    // species 30: c5h10-1
    species[30] = -1.008982050000000e+04 * invT + 6.695354750000000e+01 -
                  1.458515390000000e+01 * tc[0] -
                  1.120362355000000e-02 * tc[1] +
                  1.272246708333333e-06 * tc[2] -
                  9.849080500000001e-11 * tc[3] + 3.421925695000000e-15 * tc[4];
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = -5.372332610000000e+03 * invT - 1.600124893000000e+01 -
                  1.803391870000000e+00 * tc[0] -
                  1.507035425000000e-02 * tc[1] +
                  3.225092533333333e-06 * tc[2] -
                  5.318325283333333e-10 * tc[3] + 4.330515900000000e-14 * tc[4];
    // species 45: nc7h16
    species[45] = -2.565865650000000e+04 * invT - 3.664165307000000e+01 +
                  1.268361870000000e+00 * tc[0] -
                  4.271779100000000e-02 * tc[1] +
                  8.755779766666667e-06 * tc[2] -
                  1.357881008333333e-09 * tc[3] + 1.011974625000000e-13 * tc[4];
  } else {
    // species 27: ch3coch2
    species[27] = -8.443804620000001e+03 * invT + 3.815011950000000e+01 -
                  1.023039750000000e+01 * tc[0] -
                  5.824708050000000e-03 * tc[1] +
                  6.683425616666666e-07 * tc[2] -
                  5.210043716666667e-11 * tc[3] + 1.818921810000000e-15 * tc[4];
    // species 45: nc7h16
    species[45] = -3.427600810000000e+04 * invT + 1.145189165000000e+02 -
                  2.221489690000000e+01 * tc[0] -
                  1.738378750000000e-02 * tc[1] +
                  1.973452150000000e-06 * tc[2] -
                  1.527487316666667e-10 * tc[3] + 5.306513300000000e-15 * tc[4];
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = -2.422601370000000e+04 * invT - 1.395225036000000e+01 -
                  2.163084440000000e+00 * tc[0] -
                  1.477506320000000e-02 * tc[1] +
                  2.540770866666666e-06 * tc[2] -
                  2.912532891666666e-10 * tc[3] + 1.194483135000000e-14 * tc[4];
    // species 40: nc3h7cho
    species[40] = -2.710321940000000e+04 * invT - 1.728269781000000e+01 -
                  1.874159590000000e+00 * tc[0] -
                  2.096201575000000e-02 * tc[1] +
                  3.919146316666667e-06 * tc[2] -
                  5.224280608333334e-10 * tc[3] + 3.047219540000000e-14 * tc[4];
  } else {
    // species 28: c2h5cho
    species[28] = -2.741431350000000e+04 * invT + 3.877745380000000e+01 -
                  1.024276950000000e+01 * tc[0] -
                  6.982099450000000e-03 * tc[1] +
                  7.937466683333333e-07 * tc[2] -
                  6.150880883333334e-11 * tc[3] + 2.138797515000000e-15 * tc[4];
    // species 40: nc3h7cho
    species[40] = -3.158453480000000e+04 * invT + 5.877782960000000e+01 -
                  1.359880680000000e+01 * tc[0] -
                  9.082623700000000e-03 * tc[1] +
                  1.029740763333333e-06 * tc[2] -
                  7.966501733333333e-11 * tc[3] + 2.767214790000000e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = -6.843942590000000e+02 * invT - 9.018341400000001e-01 -
                  4.261469060000000e+00 * tc[0] -
                  5.043679950000000e-03 * tc[1] +
                  5.358436400000000e-07 * tc[2] -
                  1.745077225000000e-11 * tc[3] - 2.091695515000000e-15 * tc[4];
    // species 36: pc4h9o2
    species[36] = -1.083581030000000e+04 * invT - 1.940667840000000e+01 -
                  1.943636500000000e+00 * tc[0] -
                  2.577565815000000e-02 * tc[1] +
                  5.471406666666667e-06 * tc[2] -
                  9.422071666666667e-10 * tc[3] + 8.505930300000000e-14 * tc[4];
  } else {
    // species 31: ch3o2
    species[31] = -1.535748380000000e+03 * invT + 1.067751777000000e+01 -
                  5.957878910000000e+00 * tc[0] -
                  3.953643130000000e-03 * tc[1] +
                  4.470770566666667e-07 * tc[2] -
                  3.449094475000000e-11 * tc[3] + 1.195036650000000e-15 * tc[4];
    // species 36: pc4h9o2
    species[36] = -1.601460540000000e+04 * invT + 6.982339730000000e+01 -
                  1.578454480000000e+01 * tc[0] -
                  1.076054550000000e-02 * tc[1] +
                  1.241515028333333e-06 * tc[2] -
                  9.713172583333334e-11 * tc[3] + 3.399428045000000e-15 * tc[4];
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +4.257702150000000e+03 * invT - 1.590023447000000e+01 -
                  1.362420130000000e+00 * tc[0] -
                  1.576369860000000e-02 * tc[1] +
                  5.003648916666666e-06 * tc[2] -
                  1.234725933333333e-09 * tc[3] + 1.439857650000000e-13 * tc[4];
  } else {
    // species 33: c2h3co
    species[33] = +1.929695140000000e+03 * invT + 3.346394636000000e+01 -
                  9.374676760000000e+00 * tc[0] -
                  3.956484500000000e-03 * tc[1] +
                  4.453304666666666e-07 * tc[2] -
                  3.425961916666666e-11 * tc[3] + 1.184894905000000e-15 * tc[4];
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = -1.165215840000000e+04 * invT - 2.259547283800000e+01 -
                  2.923551620000000e-01 * tc[0] -
                  1.771607085000000e-02 * tc[1] +
                  4.915605400000000e-06 * tc[2] -
                  1.067501033333333e-09 * tc[3] + 1.130720540000000e-13 * tc[4];
  } else {
    // species 34: c2h3cho
    species[34] = -1.496302810000000e+04 * invT + 4.114200200000001e+01 -
                  1.041849590000000e+01 * tc[0] -
                  4.744816605000000e-03 * tc[1] +
                  5.488508816666667e-07 * tc[2] -
                  4.302326691666667e-11 * tc[3] + 1.507936455000000e-15 * tc[4];
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = -2.373914900000000e+04 * invT - 2.161314602000000e+01 -
                  2.224007280000000e+00 * tc[0] -
                  3.524973100000000e-02 * tc[1] +
                  9.449647116666666e-06 * tc[2] -
                  2.021897925000000e-09 * tc[3] + 2.148577295000000e-13 * tc[4];
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = -3.054682770000000e+04 * invT + 1.055910085000000e+02 -
                  2.232440150000000e+01 * tc[0] -
                  1.027373875000000e-02 * tc[1] +
                  1.198460580000000e-06 * tc[2] -
                  9.446794666666667e-11 * tc[3] + 3.323721915000000e-15 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = +1.938342260000000e+04 * invT - 2.583584505800000e+01 +
                  5.291319580000000e-01 * tc[0] -
                  1.672795500000000e-02 * tc[1] +
                  4.223350450000001e-06 * tc[2] -
                  8.572146166666666e-10 * tc[3] + 8.662917000000000e-14 * tc[4];
  } else {
    // species 37: c3h5-a
    species[37] = +1.635760920000000e+04 * invT + 3.103978458000000e+01 -
                  8.458839579999999e+00 * tc[0] -
                  5.634774150000000e-03 * tc[1] +
                  6.396547733333333e-07 * tc[2] -
                  4.950492658333333e-11 * tc[3] + 1.719590150000000e-15 * tc[4];
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = -4.010658780000000e+04 * invT - 1.605837439000000e+01 -
                  2.748834610000000e+00 * tc[0] -
                  2.934683725000000e-02 * tc[1] +
                  7.493431583333333e-06 * tc[2] -
                  1.526667750000000e-09 * tc[3] + 1.558826845000000e-13 * tc[4];
  } else {
    // species 39: nc4ket13
    species[39] = -4.595888510000000e+04 * invT + 9.133359020000000e+01 -
                  1.964308080000000e+01 * tc[0] -
                  9.047028299999999e-03 * tc[1] +
                  1.055105386666667e-06 * tc[2] -
                  8.315503325000001e-11 * tc[3] + 2.925382290000000e-15 * tc[4];
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = -9.507965050000001e+03 * invT - 1.843052554000000e+01 -
                  1.540138560000000e+00 * tc[0] -
                  2.197431290000000e-02 * tc[1] +
                  4.950040350000000e-06 * tc[2] -
                  8.791276083333333e-10 * tc[3] + 7.929938449999999e-14 * tc[4];
  } else {
    // species 41: c2h5coch2
    species[41] = -1.412849510000000e+04 * invT + 6.292316490000000e+01 -
                  1.420987380000000e+01 * tc[0] -
                  7.893322950000000e-03 * tc[1] +
                  9.175486383333333e-07 * tc[2] -
                  7.215587833333333e-11 * tc[3] + 2.534566645000000e-15 * tc[4];
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = -1.230622380000000e+04 * invT - 2.245298912900000e+01 -
                  9.582992710000000e-01 * tc[0] -
                  2.840812660000000e-02 * tc[1] +
                  6.651879683333334e-06 * tc[2] -
                  1.272262616666667e-09 * tc[3] + 1.246105235000000e-13 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = -1.536406790000000e+04 * invT - 3.176048109500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
  } else {
    // species 42: nc3h7coch2
    species[42] = -1.769685610000000e+04 * invT + 7.453673030000000e+01 -
                  1.615024190000000e+01 * tc[0] -
                  1.070467330000000e-02 * tc[1] +
                  1.226766023333333e-06 * tc[2] -
                  9.554734666666667e-11 * tc[3] + 3.333563610000000e-15 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = -2.486366510000000e+04 * invT + 1.382949378000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = -2.998410250000000e+04 * invT - 2.053151508000000e+01 -
                  1.596634720000000e+00 * tc[0] -
                  2.717707080000000e-02 * tc[1] +
                  5.350344183333334e-06 * tc[2] -
                  7.798112991666667e-10 * tc[3] + 5.334446600000001e-14 * tc[4];
  } else {
    // species 43: nc4h9cho
    species[43] = -3.568260800000000e+04 * invT + 7.770284749999999e+01 -
                  1.679651630000000e+01 * tc[0] -
                  1.128422595000000e-02 * tc[1] +
                  1.279385980000000e-06 * tc[2] -
                  9.897447416666666e-11 * tc[3] + 3.437727770000000e-15 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = -1.146755410000000e+04 * invT - 1.683428552000000e+01 -
                  2.435302380000000e+00 * tc[0] -
                  2.468411880000000e-02 * tc[1] +
                  4.831384700000000e-06 * tc[2] -
                  7.023865100000001e-10 * tc[3] + 4.841435860000000e-14 * tc[4];
  } else {
    // species 44: nc4h9co
    species[44] = -1.665377520000000e+04 * invT + 7.207265180000000e+01 -
                  1.617829390000000e+01 * tc[0] -
                  1.039959600000000e-02 * tc[1] +
                  1.186313153333333e-06 * tc[2] -
                  9.213331249999999e-11 * tc[3] + 3.208485935000000e-15 * tc[4];
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -2.442922870000000e+04 * invT - 6.197721270000000e+01 +
                  5.500364500000000e+00 * tc[0] -
                  5.007754400000000e-02 * tc[1] +
                  1.216559761666667e-05 * tc[2] -
                  2.327868916666667e-09 * tc[3] + 2.211228480000000e-13 * tc[4];
  } else {
    // species 52: c7h14o1-3
    species[52] = -3.415914190000000e+04 * invT + 1.173265479000000e+02 -
                  2.269189160000000e+01 * tc[0] -
                  1.662552360000000e-02 * tc[1] +
                  1.907629416666667e-06 * tc[2] -
                  1.487129458333333e-10 * tc[3] + 5.192055600000000e-15 * tc[4];
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -2.671182950000000e+04 * invT - 6.056790396000000e+01 +
                  5.394772060000000e+00 * tc[0] -
                  5.092328850000000e-02 * tc[1] +
                  1.266743726666667e-05 * tc[2] -
                  2.471150166666667e-09 * tc[3] + 2.374271850000000e-13 * tc[4];
  } else {
    // species 53: c7h14o2-4
    species[53] = -3.643496640000000e+04 * invT + 1.212150009000000e+02 -
                  2.326927310000000e+01 * tc[0] -
                  1.627926955000000e-02 * tc[1] +
                  1.860415100000000e-06 * tc[2] -
                  1.446447150000000e-10 * tc[3] + 5.040660750000000e-15 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: hco
    species[0] = +4.159922000000000e+03 * invT - 6.085284000000000e+00 -
                 2.898330000000000e+00 * tc[0] - 3.099573500000000e-03 * tc[1] +
                 1.603847333333333e-06 * tc[2] - 9.081875000000000e-10 * tc[3] +
                 2.287442500000000e-13 * tc[4];
    // species 1: ch3o
    species[1] = +9.786011000000000e+02 * invT - 1.104597600000000e+01 -
                 2.106204000000000e+00 * tc[0] - 3.608297500000000e-03 * tc[1] -
                 8.897453333333333e-07 * tc[2] + 6.148030000000000e-10 * tc[3] -
                 1.037805500000000e-13 * tc[4];
    // species 2: ch3co
    species[2] = -4.108508000000000e+03 * invT - 8.103572000000000e+00 -
                 3.125278000000000e+00 * tc[0] - 4.889110000000000e-03 * tc[1] -
                 7.535746666666667e-07 * tc[2] + 7.507885000000000e-10 * tc[3] -
                 1.596859000000000e-13 * tc[4];
    // species 3: ch2cho
    species[3] = +1.521477000000000e+03 * invT - 6.149227999999999e+00 -
                 3.409062000000000e+00 * tc[0] - 5.369285000000000e-03 * tc[1] -
                 3.152486666666667e-07 * tc[2] + 5.965485833333333e-10 * tc[3] -
                 1.433692500000000e-13 * tc[4];
    // species 10: c3h2
    species[10] = +6.350421000000000e+04 * invT - 5.702732000000000e+00 -
                  3.166714000000000e+00 * tc[0] -
                  1.241286000000000e-02 * tc[1] +
                  7.652728333333333e-06 * tc[2] -
                  3.556682500000000e-09 * tc[3] + 7.410759999999999e-13 * tc[4];
    // species 11: ch2(s)
    species[11] = +4.989368000000000e+04 * invT + 3.913732930000000e+00 -
                  3.971265000000000e+00 * tc[0] +
                  8.495445000000000e-05 * tc[1] -
                  1.708948333333333e-07 * tc[2] -
                  2.077125833333333e-10 * tc[3] + 9.906330000000000e-14 * tc[4];
  } else {
    // species 0: hco
    species[0] = +3.916324000000000e+03 * invT - 1.995028000000000e+00 -
                 3.557271000000000e+00 * tc[0] - 1.672786500000000e-03 * tc[1] +
                 2.225010000000000e-07 * tc[2] - 2.058810833333333e-11 * tc[3] +
                 8.569255000000000e-16 * tc[4];
    // species 1: ch3o
    species[1] = +1.278325000000000e+02 * invT + 8.412250000000001e-01 -
                 3.770800000000000e+00 * tc[0] - 3.935748500000000e-03 * tc[1] +
                 4.427306666666667e-07 * tc[2] - 3.287025833333333e-11 * tc[3] +
                 1.056308000000000e-15 * tc[4];
    // species 2: ch3co
    species[2] = -5.187863000000000e+03 * invT + 8.887228000000000e+00 -
                 5.612279000000000e+00 * tc[0] - 4.224943000000000e-03 * tc[1] +
                 4.756911666666667e-07 * tc[2] - 3.531980000000000e-11 * tc[3] +
                 1.134202000000000e-15 * tc[4];
    // species 3: ch2cho
    species[3] = +4.903218000000000e+02 * invT + 1.102092100000000e+01 -
                 5.975670000000000e+00 * tc[0] - 4.065295500000000e-03 * tc[1] +
                 4.572706666666667e-07 * tc[2] - 3.391920000000000e-11 * tc[3] +
                 1.088008500000000e-15 * tc[4];
    // species 10: c3h2
    species[10] = +6.259722000000000e+04 * invT + 2.003988100000000e+01 -
                  7.670981000000000e+00 * tc[0] -
                  1.374374500000000e-03 * tc[1] +
                  7.284905000000000e-08 * tc[2] +
                  5.379665833333334e-12 * tc[3] - 8.319435000000000e-16 * tc[4];
    // species 11: ch2(s)
    species[11] = +4.984975000000000e+04 * invT + 1.866319000000000e+00 -
                  3.552889000000000e+00 * tc[0] -
                  1.033394000000000e-03 * tc[1] +
                  3.190193333333333e-08 * tc[2] +
                  9.205608333333333e-12 * tc[3] - 1.010675000000000e-15 * tc[4];
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 4: pc4h9
    species[4] = +7.689452480000000e+03 * invT - 2.912305292500000e+01 +
                 4.377797250000000e-01 * tc[0] - 2.394861820000000e-02 * tc[1] +
                 5.233719316666667e-06 * tc[2] - 9.148872666666667e-10 * tc[3] +
                 8.100533200000001e-14 * tc[4];
    // species 8: c4h7o
    species[8] = +4.850903260000000e+03 * invT - 3.631744782000000e+01 +
                 1.606191920000000e+00 * tc[0] - 2.792813410000000e-02 * tc[1] +
                 7.259929450000000e-06 * tc[2] - 1.421577325000000e-09 * tc[3] +
                 1.328175900000000e-13 * tc[4];
  } else {
    // species 4: pc4h9
    species[4] = +3.172319420000000e+03 * invT + 5.149359040000000e+01 -
                 1.215100820000000e+01 * tc[0] - 9.715535850000000e-03 * tc[1] +
                 1.102629916666667e-06 * tc[2] - 8.531261333333333e-11 * tc[3] +
                 2.962648535000000e-15 * tc[4];
    // species 8: c4h7o
    species[8] = -7.293428840000000e+02 * invT + 7.060756390000000e+01 -
                 1.531377800000000e+01 * tc[0] - 7.171350850000000e-03 * tc[1] +
                 8.027091950000000e-07 * tc[2] - 6.163123658333333e-11 * tc[3] +
                 2.130704070000000e-15 * tc[4];
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 5: c2h5co
    species[5] = -5.696630630000000e+03 * invT - 1.066269604000000e+01 -
                 2.933139460000000e+00 * tc[0] - 1.237139555000000e-02 * tc[1] +
                 2.020366716666667e-06 * tc[2] - 1.955842066666667e-10 * tc[3] +
                 2.634216690000000e-15 * tc[4];
  } else {
    // species 5: c2h5co
    species[5] = -8.472922830000000e+03 * invT + 3.480233957000000e+01 -
                 9.878819970000000e+00 * tc[0] - 5.875783800000000e-03 * tc[1] +
                 6.676915383333333e-07 * tc[2] - 5.173755141666667e-11 * tc[3] +
                 1.799176125000000e-15 * tc[4];
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 6: c2h5o
    species[6] = -3.352529250000000e+03 * invT - 2.231351709200000e+01 -
                 4.944207080000000e-01 * tc[0] - 1.358872170000000e-02 * tc[1] +
                 2.765150166666667e-06 * tc[2] - 4.293368333333333e-10 * tc[3] +
                 3.242484575000000e-14 * tc[4];
    // species 20: c7h14ooh2-3
    species[20] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
    // species 21: c7h14ooh2-4
    species[21] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
    // species 22: c7h14ooh3-2
    species[22] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
    // species 23: c7h14ooh3-4
    species[23] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
    // species 24: c7h14ooh3-5
    species[24] = -1.536406790000000e+04 * invT - 3.244996269500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
    // species 25: c7h14ooh4-2
    species[25] = -1.536406790000000e+04 * invT - 3.176048109500000e+01 -
                  8.497860050000000e-01 * tc[0] -
                  4.625535980000000e-02 * tc[1] +
                  1.042266390000000e-05 * tc[2] -
                  1.815669916666666e-09 * tc[3] + 1.563601990000000e-13 * tc[4];
  } else {
    // species 6: c2h5o
    species[6] = -6.072749530000000e+03 * invT + 2.521507672000000e+01 -
                 7.873397720000000e+00 * tc[0] - 5.653645350000000e-03 * tc[1] +
                 6.407023683333334e-07 * tc[2] - 4.953450875000000e-11 * tc[3] +
                 1.719472690000000e-15 * tc[4];
    // species 20: c7h14ooh2-3
    species[20] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
    // species 21: c7h14ooh2-4
    species[21] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
    // species 22: c7h14ooh3-2
    species[22] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
    // species 23: c7h14ooh3-4
    species[23] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
    // species 24: c7h14ooh3-5
    species[24] = -2.486366510000000e+04 * invT + 1.376054558000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
    // species 25: c7h14ooh4-2
    species[25] = -2.486366510000000e+04 * invT + 1.382949378000000e+02 -
                  2.740347780000000e+01 * tc[0] -
                  1.637639465000000e-02 * tc[1] +
                  1.883196166666667e-06 * tc[2] -
                  1.470372075000000e-10 * tc[3] + 5.139347250000000e-15 * tc[4];
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 7: c3h5o
    species[7] = +9.582177840000000e+03 * invT - 2.035839628000000e+01 -
                 1.198225820000000e+00 * tc[0] - 1.527899185000000e-02 * tc[1] +
                 3.010504600000000e-06 * tc[2] - 4.051250275000000e-10 * tc[3] +
                 2.099272810000000e-14 * tc[4];
    // species 12: nc3h7co
    species[12] = -8.580508879999999e+03 * invT - 1.381232674000000e+01 -
                  2.672568260000000e+00 * tc[0] -
                  1.855994125000000e-02 * tc[1] +
                  3.447714316666666e-06 * tc[2] -
                  4.573949066666667e-10 * tc[3] + 2.679320915000000e-14 * tc[4];
  } else {
    // species 7: c3h5o
    species[7] = +6.265608100000000e+03 * invT + 3.802067940000000e+01 -
                 1.025517520000000e+01 * tc[0] - 5.749186000000000e-03 * tc[1] +
                 6.410760983333333e-07 * tc[2] - 4.907586216666667e-11 * tc[3] +
                 1.692789615000000e-15 * tc[4];
    // species 12: nc3h7co
    species[12] = -1.255233850000000e+04 * invT + 5.326348460000000e+01 -
                  1.300263310000000e+01 * tc[0] -
                  8.155243850000000e-03 * tc[1] +
                  9.294048316666667e-07 * tc[2] -
                  7.213921908333333e-11 * tc[3] + 2.511278335000000e-15 * tc[4];
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 9: c4h8ooh1-3
    species[9] = -4.343159620000000e+03 * invT - 2.208198434000000e+01 -
                 1.941062760000000e+00 * tc[0] - 2.593946755000000e-02 * tc[1] +
                 5.173528050000000e-06 * tc[2] - 7.196407341666667e-10 * tc[3] +
                 4.214209970000000e-14 * tc[4];
  } else {
    // species 9: c4h8ooh1-3
    species[9] = -1.018592800000000e+04 * invT + 7.935579830000000e+01 -
                 1.764421700000000e+01 * tc[0] - 9.585326800000000e-03 * tc[1] +
                 1.095281068333333e-06 * tc[2] - 8.520547583333334e-11 * tc[3] +
                 2.971523675000000e-15 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 13: c7h15-1
    species[13] = -1.045902230000000e+03 * invT - 3.515597150599999e+01 +
                  4.995704060000000e-01 * tc[0] -
                  4.044132335000000e-02 * tc[1] +
                  8.342212566666667e-06 * tc[2] -
                  1.304577566666667e-09 * tc[3] + 9.830811350000000e-14 * tc[4];
    // species 17: c7h14-2
    species[17] = -1.173623590000000e+04 * invT - 3.715243979000000e+01 +
                  1.165332790000000e+00 * tc[0] -
                  3.952199030000000e-02 * tc[1] +
                  8.268361100000000e-06 * tc[2] -
                  1.321408408333333e-09 * tc[3] + 1.026732165000000e-13 * tc[4];
    // species 26: c7h14ooh2-4o2
    species[26] = -3.463047880000000e+04 * invT - 3.021321351000000e+01 -
                  1.409124790000000e+00 * tc[0] -
                  5.536041700000000e-02 * tc[1] +
                  1.451963458333333e-05 * tc[2] -
                  3.030522908333333e-09 * tc[3] + 3.141753445000000e-13 * tc[4];
    // species 27: c7h14ooh3-5o2
    species[27] = -3.463047880000000e+04 * invT - 3.021321351000000e+01 -
                  1.409124790000000e+00 * tc[0] -
                  5.536041700000000e-02 * tc[1] +
                  1.451963458333333e-05 * tc[2] -
                  3.030522908333333e-09 * tc[3] + 3.141753445000000e-13 * tc[4];
    // species 28: c7h14ooh4-2o2
    species[28] = -3.463047880000000e+04 * invT - 3.021321351000000e+01 -
                  1.409124790000000e+00 * tc[0] -
                  5.536041700000000e-02 * tc[1] +
                  1.451963458333333e-05 * tc[2] -
                  3.030522908333333e-09 * tc[3] + 3.141753445000000e-13 * tc[4];
  } else {
    // species 13: c7h15-1
    species[13] = -9.209382210000000e+03 * invT + 1.082895020000000e+02 -
                  2.179407090000000e+01 * tc[0] -
                  1.631401215000000e-02 * tc[1] +
                  1.852304066666667e-06 * tc[2] -
                  1.433892900000000e-10 * tc[3] + 4.981834995000000e-15 * tc[4];
    // species 17: c7h14-2
    species[17] = -1.967131620000000e+04 * invT + 1.028711434000000e+02 -
                  2.061920470000000e+01 * tc[0] -
                  1.574264955000000e-02 * tc[1] +
                  1.786034283333333e-06 * tc[2] -
                  1.381897183333333e-10 * tc[3] + 4.799558925000000e-15 * tc[4];
    // species 26: c7h14ooh2-4o2
    species[26] = -4.528730030000000e+04 * invT + 1.688115396000000e+02 -
                  3.283582960000000e+01 * tc[0] -
                  1.663836425000000e-02 * tc[1] +
                  1.930554750000000e-06 * tc[2] -
                  1.516321983333333e-10 * tc[3] + 5.321720950000000e-15 * tc[4];
    // species 27: c7h14ooh3-5o2
    species[27] = -4.528730030000000e+04 * invT + 1.688115396000000e+02 -
                  3.283582960000000e+01 * tc[0] -
                  1.663836425000000e-02 * tc[1] +
                  1.930554750000000e-06 * tc[2] -
                  1.516321983333333e-10 * tc[3] + 5.321720950000000e-15 * tc[4];
    // species 28: c7h14ooh4-2o2
    species[28] = -4.528730030000000e+04 * invT + 1.688115396000000e+02 -
                  3.283582960000000e+01 * tc[0] -
                  1.663836425000000e-02 * tc[1] +
                  1.930554750000000e-06 * tc[2] -
                  1.516321983333333e-10 * tc[3] + 5.321720950000000e-15 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 14: c7h15-2
    species[14] = -2.356053030000000e+03 * invT - 3.377006617670000e+01 +
                  3.791557670000000e-02 * tc[0] -
                  3.783632850000000e-02 * tc[1] +
                  6.791227233333333e-06 * tc[2] -
                  7.772324525000000e-10 * tc[3] + 2.461803725000000e-14 * tc[4];
    // species 15: c7h15-3
    species[15] = -2.356053030000000e+03 * invT - 3.377006617670000e+01 +
                  3.791557670000000e-02 * tc[0] -
                  3.783632850000000e-02 * tc[1] +
                  6.791227233333333e-06 * tc[2] -
                  7.772324525000000e-10 * tc[3] + 2.461803725000000e-14 * tc[4];
    // species 16: c7h15-4
    species[16] = -2.356053030000000e+03 * invT - 3.308058457670000e+01 +
                  3.791557670000000e-02 * tc[0] -
                  3.783632850000000e-02 * tc[1] +
                  6.791227233333333e-06 * tc[2] -
                  7.772324525000000e-10 * tc[3] + 2.461803725000000e-14 * tc[4];
  } else {
    // species 14: c7h15-2
    species[14] = -1.058736160000000e+04 * invT + 1.068578495000000e+02 -
                  2.163688420000000e+01 * tc[0] -
                  1.616624020000000e-02 * tc[1] +
                  1.821230116666667e-06 * tc[2] -
                  1.402975500000000e-10 * tc[3] + 4.858870455000000e-15 * tc[4];
    // species 15: c7h15-3
    species[15] = -1.058736160000000e+04 * invT + 1.068578495000000e+02 -
                  2.163688420000000e+01 * tc[0] -
                  1.616624020000000e-02 * tc[1] +
                  1.821230116666667e-06 * tc[2] -
                  1.402975500000000e-10 * tc[3] + 4.858870455000000e-15 * tc[4];
    // species 16: c7h15-4
    species[16] = -1.058736160000000e+04 * invT + 1.075473312000000e+02 -
                  2.163688420000000e+01 * tc[0] -
                  1.616624020000000e-02 * tc[1] +
                  1.821230116666667e-06 * tc[2] -
                  1.402975500000000e-10 * tc[3] + 4.858870455000000e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 18: c7h14-3
    species[18] = -1.151410290000000e+04 * invT - 4.226189654000000e+01 +
                  2.030269940000000e+00 * tc[0] -
                  4.131621885000000e-02 * tc[1] +
                  9.091907850000000e-06 * tc[2] -
                  1.564215183333333e-09 * tc[3] + 1.337856100000000e-13 * tc[4];
  } else {
    // species 18: c7h14-3
    species[18] = -1.964506040000000e+04 * invT + 1.032057752000000e+02 -
                  2.068227500000000e+01 * tc[0] -
                  1.576943145000000e-02 * tc[1] +
                  1.792853583333333e-06 * tc[2] -
                  1.389085500000000e-10 * tc[3] + 4.829051965000000e-15 * tc[4];
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 19: c7h14ooh1-3
    species[19] = -1.298683140000000e+04 * invT - 3.180854314000000e+01 -
                  1.111462060000000e+00 * tc[0] -
                  4.457976960000000e-02 * tc[1] +
                  9.455873033333333e-06 * tc[2] -
                  1.490750783333333e-09 * tc[3] + 1.111301030000000e-13 * tc[4];
  } else {
    // species 19: c7h14ooh1-3
    species[19] = -2.249770700000000e+04 * invT + 1.361308062000000e+02 -
                  2.722902220000000e+01 * tc[0] -
                  1.624609505000000e-02 * tc[1] +
                  1.854329300000000e-06 * tc[2] -
                  1.441073983333333e-10 * tc[3] + 5.021416300000000e-15 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 29: nc7ket13
    species[29] = -4.879655100000000e+04 * invT - 2.409942002000000e+01 -
                  2.216293280000000e+00 * tc[0] -
                  4.736868810000000e-02 * tc[1] +
                  1.150789418333333e-05 * tc[2] -
                  2.231836666666667e-09 * tc[3] + 2.181960905000000e-13 * tc[4];
  } else {
    // species 29: nc7ket13
    species[29] = -5.823454770000000e+04 * invT + 1.471387747000000e+02 -
                  2.907445070000000e+01 * tc[0] -
                  1.585887290000000e-02 * tc[1] +
                  1.837710766666666e-06 * tc[2] -
                  1.442113400000000e-10 * tc[3] + 5.058084950000000e-15 * tc[4];
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 30: nc7ket24
    species[30] = -5.238395420000000e+04 * invT - 2.785576648000000e+01 -
                  1.529366920000000e+00 * tc[0] -
                  4.790867330000000e-02 * tc[1] +
                  1.161147533333333e-05 * tc[2] -
                  2.246169850000000e-09 * tc[3] + 2.193640630000000e-13 * tc[4];
    // species 31: nc7ket35
    species[31] = -5.238395420000000e+04 * invT - 2.785576648000000e+01 -
                  1.529366920000000e+00 * tc[0] -
                  4.790867330000000e-02 * tc[1] +
                  1.161147533333333e-05 * tc[2] -
                  2.246169850000000e-09 * tc[3] + 2.193640630000000e-13 * tc[4];
  } else {
    // species 30: nc7ket24
    species[30] = -6.201424740000000e+04 * invT + 1.463327428000000e+02 -
                  2.883303880000000e+01 * tc[0] -
                  1.600840480000000e-02 * tc[1] +
                  1.858474266666667e-06 * tc[2] -
                  1.460217991666667e-10 * tc[3] + 5.126022550000000e-15 * tc[4];
    // species 31: nc7ket35
    species[31] = -6.201424740000000e+04 * invT + 1.463327428000000e+02 -
                  2.883303880000000e+01 * tc[0] -
                  1.600840480000000e-02 * tc[1] +
                  1.858474266666667e-06 * tc[2] -
                  1.460217991666667e-10 * tc[3] + 5.126022550000000e-15 * tc[4];
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 32: nc7ket42
    species[32] = -5.275868300000000e+04 * invT - 2.302312952000000e+01 -
                  2.322697380000000e+00 * tc[0] -
                  4.725800745000000e-02 * tc[1] +
                  1.165095298333333e-05 * tc[2] -
                  2.331440966666667e-09 * tc[3] + 2.371222155000000e-13 * tc[4];
  } else {
    // species 32: nc7ket42
    species[32] = -6.202529880000000e+04 * invT + 1.447925427000000e+02 -
                  2.865728670000000e+01 * tc[0] -
                  1.607839540000000e-02 * tc[1] +
                  1.866026166666667e-06 * tc[2] -
                  1.465791666666667e-10 * tc[3] + 5.144598000000000e-15 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +2.54747466e+04 * invT + 1.96638554e+00 -
                 2.50104422e+00 * tc[0] - 0.00000000e+00 * tc[1] -
                 0.00000000e+00 * tc[2] - 0.00000000e+00 * tc[3] -
                 0.00000000e+00 * tc[4];
    // species 1: h2
    species[1] = -1.01252100e+03 * invT + 5.59221800e+00 -
                 3.29812400e+00 * tc[0] - 4.12472100e-04 * tc[1] +
                 1.35716917e-07 * tc[2] + 7.89619500e-12 * tc[3] -
                 2.06743600e-14 * tc[4];
    // species 2: o
    species[2] = +2.91476400e+04 * invT - 1.01756600e+00 -
                 2.94642900e+00 * tc[0] + 8.19083000e-04 * tc[1] -
                 4.03505333e-07 * tc[2] + 1.33570250e-10 * tc[3] -
                 1.94534800e-14 * tc[4];
    // species 3: o2
    species[3] = -1.00524900e+03 * invT - 3.82180200e+00 -
                 3.21293600e+00 * tc[0] - 5.63743000e-04 * tc[1] +
                 9.59358333e-08 * tc[2] - 1.09489750e-10 * tc[3] +
                 4.38427700e-14 * tc[4];
    // species 5: h2o
    species[5] = -3.02081100e+04 * invT - 2.03391000e-01 -
                 3.38684200e+00 * tc[0] - 1.73749100e-03 * tc[1] +
                 1.05911600e-06 * tc[2] - 5.80715083e-10 * tc[3] +
                 1.25329400e-13 * tc[4];
    // species 6: co
    species[6] = -1.43105400e+04 * invT - 2.58644500e+00 -
                 3.26245200e+00 * tc[0] - 7.55970500e-04 * tc[1] +
                 6.46959167e-07 * tc[2] - 4.65162000e-10 * tc[3] +
                 1.23747550e-13 * tc[4];
    // species 7: co2
    species[7] = -4.83731400e+04 * invT - 8.91276500e+00 -
                 2.27572500e+00 * tc[0] - 4.96103600e-03 * tc[1] +
                 1.73485167e-06 * tc[2] - 5.72223917e-10 * tc[3] +
                 1.05864000e-13 * tc[4];
    // species 8: ch3
    species[8] = +1.64237800e+04 * invT - 5.35935100e+00 -
                 2.43044300e+00 * tc[0] - 5.56205000e-03 * tc[1] +
                 2.80036667e-06 * tc[2] - 1.35152417e-09 * tc[3] +
                 2.93247650e-13 * tc[4];
    // species 9: ch4
    species[9] = -9.82522900e+03 * invT - 1.39434485e+01 -
                 7.78741500e-01 * tc[0] - 8.73834000e-03 * tc[1] +
                 4.63901500e-06 * tc[2] - 2.54142333e-09 * tc[3] +
                 6.11965500e-13 * tc[4];
    // species 11: h2o2
    species[11] = -1.76631500e+04 * invT - 4.39660900e+00 -
                  3.38875400e+00 * tc[0] - 3.28461300e-03 * tc[1] +
                  2.47502167e-08 * tc[2] + 3.85483833e-10 * tc[3] -
                  1.23575750e-13 * tc[4];
    // species 12: ch2o
    species[12] = -1.48654000e+04 * invT - 1.31320890e+01 -
                  1.65273100e+00 * tc[0] - 6.31572000e-03 * tc[1] +
                  3.14694667e-06 * tc[2] - 1.70835917e-09 * tc[3] +
                  4.20661850e-13 * tc[4];
    // species 14: c2h4
    species[14] = +5.57304600e+03 * invT - 2.60729780e+01 +
                  8.61488000e-01 * tc[0] - 1.39808150e-02 * tc[1] +
                  5.64779500e-06 * tc[2] - 2.32096000e-09 * tc[3] +
                  4.86893950e-13 * tc[4];
    // species 15: c2h5
    species[15] = +1.28704000e+04 * invT - 1.04474980e+01 -
                  2.69070200e+00 * tc[0] - 4.35956650e-03 * tc[1] -
                  7.36639833e-07 * tc[2] - 7.78225250e-11 * tc[3] +
                  1.96388650e-13 * tc[4];
    // species 16: c2h2
    species[16] = +2.61244400e+04 * invT - 7.79181600e+00 -
                  2.01356200e+00 * tc[0] - 7.59522500e-03 * tc[1] +
                  2.69386500e-06 * tc[2] - 7.56582667e-10 * tc[3] +
                  9.56373000e-14 * tc[4];
    // species 17: c2h3
    species[17] = +3.33522500e+04 * invT - 1.00969240e+01 -
                  2.45927600e+00 * tc[0] - 3.68573800e-03 * tc[1] -
                  3.51645500e-07 * tc[2] + 1.10136833e-10 * tc[3] +
                  5.92392000e-14 * tc[4];
    // species 18: ch2co
    species[18] = -7.63263700e+03 * invT - 6.69858200e+00 -
                  2.97497100e+00 * tc[0] - 6.05935500e-03 * tc[1] +
                  3.90841000e-07 * tc[2] + 5.38890417e-10 * tc[3] -
                  1.95282450e-13 * tc[4];
    // species 19: hcco
    species[19] = +1.96589200e+04 * invT + 3.56612110e+00 -
                  5.04796500e+00 * tc[0] - 2.22673900e-03 * tc[1] -
                  3.78047167e-08 * tc[2] + 1.23507917e-10 * tc[3] -
                  1.12537100e-14 * tc[4];
    // species 20: ch3cho
    species[20] = -2.12458900e+04 * invT - 1.18451950e+01 -
                  2.50569500e+00 * tc[0] - 6.68495500e-03 * tc[1] -
                  7.78658833e-07 * tc[2] + 9.40116667e-10 * tc[3] -
                  2.13178300e-13 * tc[4];
    // species 24: nc3h7
    species[24] = +9.71328100e+03 * invT - 1.30701730e+01 -
                  1.92253700e+00 * tc[0] - 1.23946350e-02 * tc[1] -
                  3.01708167e-07 * tc[2] + 1.48605500e-09 * tc[3] -
                  4.29149800e-13 * tc[4];
    // species 38: c3h3
    species[38] = +3.98888300e+04 * invT + 3.16874510e+00 -
                  4.75420000e+00 * tc[0] - 5.54014000e-03 * tc[1] -
                  4.65553833e-08 * tc[2] + 4.56601000e-10 * tc[3] -
                  9.74814500e-14 * tc[4];
    // species 54: n2
    species[54] = -1.02090000e+03 * invT - 1.65169500e+00 -
                  3.29867700e+00 * tc[0] - 7.04120000e-04 * tc[1] +
                  6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                  1.22242750e-13 * tc[4];
  } else {
    // species 0: h
    species[0] = +2.54747466e+04 * invT + 1.96638554e+00 -
                 2.50104422e+00 * tc[0] - 0.00000000e+00 * tc[1] -
                 0.00000000e+00 * tc[2] - 0.00000000e+00 * tc[3] -
                 0.00000000e+00 * tc[4];
    // species 1: h2
    species[1] = -8.35034000e+02 * invT + 3.34653300e+00 -
                 2.99142300e+00 * tc[0] - 3.50032200e-04 * tc[1] +
                 9.38971500e-09 * tc[2] + 7.69298167e-13 * tc[3] -
                 7.91376000e-17 * tc[4];
    // species 2: o
    species[2] = +2.92308000e+04 * invT - 3.37824800e+00 -
                 2.54206000e+00 * tc[0] + 1.37753100e-05 * tc[1] +
                 5.17133833e-10 * tc[2] - 3.79255583e-13 * tc[3] +
                 2.18402600e-17 * tc[4];
    // species 3: o2
    species[3] = -1.23393000e+03 * invT - 4.91588000e-01 -
                 3.69757800e+00 * tc[0] - 3.06759850e-04 * tc[1] +
                 2.09807000e-08 * tc[2] - 1.47940083e-12 * tc[3] +
                 5.68217500e-17 * tc[4];
    // species 5: h2o
    species[5] = -2.98992100e+04 * invT - 5.19067100e+00 -
                 2.67214600e+00 * tc[0] - 1.52814650e-03 * tc[1] +
                 1.45504333e-07 * tc[2] - 1.00083000e-11 * tc[3] +
                 3.19580900e-16 * tc[4];
    // species 6: co
    species[6] = -1.42683500e+04 * invT - 4.08314000e+00 -
                 3.02507800e+00 * tc[0] - 7.21344500e-04 * tc[1] +
                 9.38471333e-08 * tc[2] - 8.48817500e-12 * tc[3] +
                 3.45547600e-16 * tc[4];
    // species 7: co2
    species[7] = -4.89669600e+04 * invT + 4.40901890e+00 -
                 4.45362300e+00 * tc[0] - 1.57008450e-03 * tc[1] +
                 2.13068500e-07 * tc[2] - 1.99499750e-11 * tc[3] +
                 8.34516500e-16 * tc[4];
    // species 8: ch3
    species[8] = +1.64378100e+04 * invT - 3.60864500e+00 -
                 2.84405200e+00 * tc[0] - 3.06898700e-03 * tc[1] +
                 3.71724167e-07 * tc[2] - 3.15430083e-11 * tc[3] +
                 1.22607950e-15 * tc[4];
    // species 9: ch4
    species[9] = -1.00807900e+04 * invT - 8.93991600e+00 -
                 1.68347900e+00 * tc[0] - 5.11862000e-03 * tc[1] +
                 6.45854833e-07 * tc[2] - 5.65465417e-11 * tc[3] +
                 2.25171150e-15 * tc[4];
    // species 11: h2o2
    species[11] = -1.80069600e+04 * invT + 3.07203000e+00 -
                  4.57316700e+00 * tc[0] - 2.16806800e-03 * tc[1] +
                  2.45781500e-07 * tc[2] - 1.95742000e-11 * tc[3] +
                  7.15827000e-16 * tc[4];
    // species 12: ch2o
    species[12] = -1.53203700e+04 * invT - 4.91696600e+00 -
                  2.99560600e+00 * tc[0] - 3.34066050e-03 * tc[1] +
                  4.38159167e-07 * tc[2] - 3.94762750e-11 * tc[3] +
                  1.60625850e-15 * tc[4];
    // species 14: c2h4
    species[14] = +4.42828900e+03 * invT + 2.98030000e-01 -
                  3.52841900e+00 * tc[0] - 5.74259000e-03 * tc[1] +
                  7.36397500e-07 * tc[2] - 6.53716750e-11 * tc[3] +
                  2.63342400e-15 * tc[4];
    // species 15: c2h5
    species[15] = +1.06745500e+04 * invT + 2.09713700e+01 -
                  7.19048000e+00 * tc[0] - 3.24203850e-03 * tc[1] +
                  1.07134417e-07 * tc[2] + 1.95656583e-11 * tc[3] -
                  1.94043850e-15 * tc[4];
    // species 16: c2h2
    species[16] = +2.56676600e+04 * invT + 6.23710800e+00 -
                  4.43677000e+00 * tc[0] - 2.68801950e-03 * tc[1] +
                  3.18802833e-07 * tc[2] - 2.73864917e-11 * tc[3] +
                  1.07835500e-15 * tc[4];
    // species 17: c2h3
    species[17] = +3.18543500e+04 * invT + 1.34637810e+01 -
                  5.93346800e+00 * tc[0] - 2.00887300e-03 * tc[1] +
                  6.61123333e-08 * tc[2] + 1.20105583e-11 * tc[3] -
                  1.18932200e-15 * tc[4];
    // species 18: ch2co
    species[18] = -8.58340200e+03 * invT + 1.26963980e+01 -
                  6.03881700e+00 * tc[0] - 2.90242000e-03 * tc[1] +
                  3.20159000e-07 * tc[2] - 2.32873750e-11 * tc[3] +
                  7.29434000e-16 * tc[4];
    // species 19: hcco
    species[19] = +1.90151300e+04 * invT + 1.48293350e+01 -
                  6.75807300e+00 * tc[0] - 1.00020000e-03 * tc[1] +
                  3.37934500e-08 * tc[2] + 8.67610000e-12 * tc[3] -
                  9.82582500e-16 * tc[4];
    // species 20: ch3cho
    species[20] = -2.26456900e+04 * invT + 1.08815960e+01 -
                  5.86865000e+00 * tc[0] - 5.39712000e-03 * tc[1] +
                  6.07588333e-07 * tc[2] - 4.51076000e-11 * tc[3] +
                  1.44842200e-15 * tc[4];
    // species 24: nc3h7
    species[24] = +7.57940200e+03 * invT + 2.63344010e+01 -
                  7.97829100e+00 * tc[0] - 7.88056500e-03 * tc[1] +
                  8.62207167e-07 * tc[2] - 6.20324333e-11 * tc[3] +
                  1.91248900e-15 * tc[4];
    // species 38: c3h3
    species[38] = +3.84742000e+04 * invT + 2.96102370e+01 -
                  8.83104700e+00 * tc[0] - 2.17859750e-03 * tc[1] +
                  6.84844500e-08 * tc[2] + 1.97393583e-11 * tc[3] -
                  2.18826000e-15 * tc[4];
    // species 54: n2
    species[54] = -9.22797700e+02 * invT - 4.05388800e+00 -
                  2.92664000e+00 * tc[0] - 7.43988500e-04 * tc[1] +
                  9.47460167e-08 * tc[2] - 8.41420000e-12 * tc[3] +
                  3.37667550e-16 * tc[4];
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.74321252e+03 * invT - 1.42790800e-02 -
                 3.43586219e+00 * tc[0] - 1.01117902e-04 * tc[1] +
                 1.89244020e-08 * tc[2] - 2.02037624e-11 * tc[3] +
                 3.71825515e-15 * tc[4];
  } else {
    // species 4: oh
    species[4] = +4.12085374e+03 * invT - 5.48067553e+00 -
                 2.62599754e+00 * tc[0] - 6.59962030e-04 * tc[1] +
                 5.99541117e-08 * tc[2] - 3.54692333e-12 * tc[3] +
                 9.10240080e-17 * tc[4];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +8.09181013e+02 * invT - 6.21060443e+00 -
                  3.18310656e+00 * tc[0] - 1.83383975e-03 * tc[1] +
                  1.55397520e-07 * tc[2] + 2.71544099e-11 * tc[3] -
                  7.55699560e-15 * tc[4];
    // species 32: ch3o2h
    species[32] = -1.77197926e+04 * invT - 7.02181132e+00 -
                  3.23442817e+00 * tc[0] - 9.50648835e-03 * tc[1] +
                  1.88977145e-06 * tc[2] - 2.83588878e-10 * tc[3] +
                  2.05915111e-14 * tc[4];
    // species 47: c7h15o2-2
    species[47] = -2.15795254e+04 * invT - 3.35880906e+01 -
                  3.55252917e-01 * tc[0] - 4.71190503e-02 * tc[1] +
                  1.11159184e-05 * tc[2] - 2.12329653e-09 * tc[3] +
                  2.06605552e-13 * tc[4];
    // species 48: c7h15o2-3
    species[48] = -2.15795254e+04 * invT - 3.35880906e+01 -
                  3.55252917e-01 * tc[0] - 4.71190503e-02 * tc[1] +
                  1.11159184e-05 * tc[2] - 2.12329653e-09 * tc[3] +
                  2.06605552e-13 * tc[4];
    // species 49: c7h15o2-4
    species[49] = -2.15795254e+04 * invT - 3.28986090e+01 -
                  3.55252917e-01 * tc[0] - 4.71190503e-02 * tc[1] +
                  1.11159184e-05 * tc[2] - 2.12329653e-09 * tc[3] +
                  2.06605552e-13 * tc[4];
  } else {
    // species 10: ho2
    species[10] = +3.98127689e+02 * invT - 1.96841300e-02 -
                  4.10547423e+00 * tc[0] - 1.19226417e-03 * tc[1] +
                  1.34391332e-07 * tc[2] - 1.03493103e-11 * tc[3] +
                  3.58200054e-16 * tc[4];
    // species 32: ch3o2h
    species[32] = -1.96678771e+04 * invT + 2.65482338e+01 -
                  8.43117091e+00 * tc[0] - 4.03408955e-03 * tc[1] +
                  4.61824868e-07 * tc[2] - 3.59443536e-11 * tc[3] +
                  1.25346073e-15 * tc[4];
    // species 47: c7h15o2-2
    species[47] = -3.06842095e+04 * invT + 1.30461127e+02 -
                  2.60535640e+01 * tc[0] - 1.71915844e-02 * tc[1] +
                  1.97855412e-06 * tc[2] - 1.54541867e-10 * tc[3] +
                  5.40261995e-15 * tc[4];
    // species 48: c7h15o2-3
    species[48] = -3.06842095e+04 * invT + 1.30461127e+02 -
                  2.60535640e+01 * tc[0] - 1.71915844e-02 * tc[1] +
                  1.97855412e-06 * tc[2] - 1.54541867e-10 * tc[3] +
                  5.40261995e-15 * tc[4];
    // species 49: c7h15o2-4
    species[49] = -3.06842095e+04 * invT + 1.31150609e+02 -
                  2.60535640e+01 * tc[0] - 1.71915844e-02 * tc[1] +
                  1.97855412e-06 * tc[2] - 1.54541867e-10 * tc[3] +
                  5.40261995e-15 * tc[4];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -1.12345534e+04 * invT - 2.21901604e+01 +
                  2.52854344e-02 * tc[0] - 1.20382377e-02 * tc[1] +
                  1.86489120e-06 * tc[2] - 1.73617417e-10 * tc[3] +
                  2.64934308e-15 * tc[4];
  } else {
    // species 13: c2h6
    species[13] = -1.37500014e+04 * invT + 1.81149589e+01 -
                  6.10683385e+00 * tc[0] - 6.46181805e-03 * tc[1] +
                  7.37545327e-07 * tc[2] - 5.72826438e-11 * tc[3] +
                  1.99450866e-15 * tc[4];
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +2.25124300e+04 * invT - 8.39587100e+00 -
                  2.53983100e+00 * tc[0] - 8.16718500e-03 * tc[1] +
                  2.94158333e-07 * tc[2] + 3.87280417e-10 * tc[3] -
                  8.64565500e-14 * tc[4];
  } else {
    // species 21: c3h4-a
    species[21] = +1.95497200e+04 * invT + 3.95468660e+01 -
                  9.77625600e+00 * tc[0] - 2.65106900e-03 * tc[1] +
                  6.16853000e-08 * tc[2] + 2.52198833e-11 * tc[3] -
                  2.54479050e-15 * tc[4];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = +1.06688164e+03 * invT - 2.25057582e+01 -
                  3.94615444e-01 * tc[0] - 1.44553831e-02 * tc[1] +
                  2.58144680e-06 * tc[2] - 3.24011841e-10 * tc[3] +
                  1.68945176e-14 * tc[4];
    // species 46: c7h15o2-1
    species[46] = -1.92918765e+04 * invT - 2.96028242e+01 -
                  1.20888552e+00 * tc[0] - 4.42030853e-02 * tc[1] +
                  9.66435433e-06 * tc[2] - 1.69645574e-09 * tc[3] +
                  1.53230168e-13 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = -3.22790229e+04 * invT - 2.93502812e+01 -
                  1.89718004e+00 * tc[0] - 5.31148980e-02 * tc[1] +
                  1.33795036e-05 * tc[2] - 2.69707577e-09 * tc[3] +
                  2.72925236e-13 * tc[4];
  } else {
    // species 22: c3h6
    species[22] = -1.87821271e+03 * invT + 2.70320264e+01 -
                  8.01595958e+00 * tc[0] - 6.85118170e-03 * tc[1] +
                  7.77082888e-07 * tc[2] - 6.01045335e-11 * tc[3] +
                  2.08685063e-15 * tc[4];
    // species 46: c7h15o2-1
    species[46] = -2.81113392e+04 * invT + 1.24970450e+02 -
                  2.52656556e+01 * tc[0] - 1.75401794e-02 * tc[1] +
                  2.01964668e-06 * tc[2] - 1.57800672e-10 * tc[3] +
                  5.51770625e-15 * tc[4];
    // species 51: c7h14ooh1-3o2
    species[51] = -4.27171859e+04 * invT + 1.62132678e+02 -
                  3.20144349e+01 * tc[0] - 1.70027998e-02 * tc[1] +
                  1.97359760e-06 * tc[2] - 1.55050289e-10 * tc[3] +
                  5.44255060e-15 * tc[4];
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = +1.17551314e+04 * invT - 3.15135345e+01 +
                  1.43095121e+00 * tc[0] - 2.39353031e-02 * tc[1] +
                  6.92411333e-06 * tc[2] - 1.59624627e-09 * tc[3] +
                  1.78579253e-13 * tc[4];
  } else {
    // species 23: c4h6
    species[23] = +7.79039770e+03 * invT + 4.71481738e+01 -
                  1.11633789e+01 * tc[0] - 6.85819825e-03 * tc[1] +
                  7.82859638e-07 * tc[2] - 6.08078197e-11 * tc[3] +
                  2.11743101e-15 * tc[4];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = +1.49933591e+04 * invT - 2.80800780e+01 +
                  3.50508352e-01 * tc[0] - 2.13255622e-02 * tc[1] +
                  4.84965622e-06 * tc[2] - 8.78365950e-10 * tc[3] +
                  8.00299270e-14 * tc[4];
    // species 26: c4h8-1
    species[26] = -1.57875035e+03 * invT - 3.13397957e+01 +
                  8.31372089e-01 * tc[0] - 2.26290489e-02 * tc[1] +
                  4.89430932e-06 * tc[2] - 8.35170300e-10 * tc[3] +
                  7.15958400e-14 * tc[4];
    // species 29: c5h9
    species[29] = +1.25589824e+04 * invT - 3.50242699e+01 +
                  1.38013950e+00 * tc[0] - 2.78804243e-02 * tc[1] +
                  6.16906547e-06 * tc[2] - 1.05736584e-09 * tc[3] +
                  8.92694175e-14 * tc[4];
    // species 30: c5h10-1
    species[30] = -4.46546666e+03 * invT - 3.43362138e+01 +
                  1.06223481e+00 * tc[0] - 2.87109147e-02 * tc[1] +
                  6.24144817e-06 * tc[2] - 1.06137491e-09 * tc[3] +
                  8.98048945e-14 * tc[4];
  } else {
    // species 25: c4h7
    species[25] = +1.09041937e+04 * invT + 4.57696593e+01 -
                  1.12103578e+01 * tc[0] - 8.02415980e-03 * tc[1] +
                  9.10837153e-07 * tc[2] - 7.04950877e-11 * tc[3] +
                  2.44886369e-15 * tc[4];
    // species 26: c4h8-1
    species[26] = -5.97871038e+03 * invT + 4.67878106e+01 -
                  1.13508668e+01 * tc[0] - 9.03089385e-03 * tc[1] +
                  1.02682171e-06 * tc[2] - 7.95544133e-11 * tc[3] +
                  2.76544820e-15 * tc[4];
    // species 29: c5h9
    species[29] = +7.00496135e+03 * invT + 6.46362227e+01 -
                  1.41860454e+01 * tc[0] - 1.03564449e-02 * tc[1] +
                  1.17826770e-06 * tc[2] - 9.13392775e-11 * tc[3] +
                  3.17661104e-15 * tc[4];
    // species 30: c5h10-1
    species[30] = -1.00898205e+04 * invT + 6.59535475e+01 -
                  1.45851539e+01 * tc[0] - 1.12036235e-02 * tc[1] +
                  1.27224671e-06 * tc[2] - 9.84908050e-11 * tc[3] +
                  3.42192569e-15 * tc[4];
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = -5.37233261e+03 * invT - 1.70012489e+01 -
                  1.80339187e+00 * tc[0] - 1.50703542e-02 * tc[1] +
                  3.22509253e-06 * tc[2] - 5.31832528e-10 * tc[3] +
                  4.33051590e-14 * tc[4];
    // species 45: nc7h16
    species[45] = -2.56586565e+04 * invT - 3.76416531e+01 +
                  1.26836187e+00 * tc[0] - 4.27177910e-02 * tc[1] +
                  8.75577977e-06 * tc[2] - 1.35788101e-09 * tc[3] +
                  1.01197462e-13 * tc[4];
  } else {
    // species 27: ch3coch2
    species[27] = -8.44380462e+03 * invT + 3.71501195e+01 -
                  1.02303975e+01 * tc[0] - 5.82470805e-03 * tc[1] +
                  6.68342562e-07 * tc[2] - 5.21004372e-11 * tc[3] +
                  1.81892181e-15 * tc[4];
    // species 45: nc7h16
    species[45] = -3.42760081e+04 * invT + 1.13518917e+02 -
                  2.22148969e+01 * tc[0] - 1.73837875e-02 * tc[1] +
                  1.97345215e-06 * tc[2] - 1.52748732e-10 * tc[3] +
                  5.30651330e-15 * tc[4];
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = -2.42260137e+04 * invT - 1.49522504e+01 -
                  2.16308444e+00 * tc[0] - 1.47750632e-02 * tc[1] +
                  2.54077087e-06 * tc[2] - 2.91253289e-10 * tc[3] +
                  1.19448313e-14 * tc[4];
    // species 40: nc3h7cho
    species[40] = -2.71032194e+04 * invT - 1.82826978e+01 -
                  1.87415959e+00 * tc[0] - 2.09620158e-02 * tc[1] +
                  3.91914632e-06 * tc[2] - 5.22428061e-10 * tc[3] +
                  3.04721954e-14 * tc[4];
  } else {
    // species 28: c2h5cho
    species[28] = -2.74143135e+04 * invT + 3.77774538e+01 -
                  1.02427695e+01 * tc[0] - 6.98209945e-03 * tc[1] +
                  7.93746668e-07 * tc[2] - 6.15088088e-11 * tc[3] +
                  2.13879752e-15 * tc[4];
    // species 40: nc3h7cho
    species[40] = -3.15845348e+04 * invT + 5.77778296e+01 -
                  1.35988068e+01 * tc[0] - 9.08262370e-03 * tc[1] +
                  1.02974076e-06 * tc[2] - 7.96650173e-11 * tc[3] +
                  2.76721479e-15 * tc[4];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = -6.84394259e+02 * invT - 1.90183414e+00 -
                  4.26146906e+00 * tc[0] - 5.04367995e-03 * tc[1] +
                  5.35843640e-07 * tc[2] - 1.74507723e-11 * tc[3] -
                  2.09169552e-15 * tc[4];
    // species 36: pc4h9o2
    species[36] = -1.08358103e+04 * invT - 2.04066784e+01 -
                  1.94363650e+00 * tc[0] - 2.57756581e-02 * tc[1] +
                  5.47140667e-06 * tc[2] - 9.42207167e-10 * tc[3] +
                  8.50593030e-14 * tc[4];
  } else {
    // species 31: ch3o2
    species[31] = -1.53574838e+03 * invT + 9.67751777e+00 -
                  5.95787891e+00 * tc[0] - 3.95364313e-03 * tc[1] +
                  4.47077057e-07 * tc[2] - 3.44909447e-11 * tc[3] +
                  1.19503665e-15 * tc[4];
    // species 36: pc4h9o2
    species[36] = -1.60146054e+04 * invT + 6.88233973e+01 -
                  1.57845448e+01 * tc[0] - 1.07605455e-02 * tc[1] +
                  1.24151503e-06 * tc[2] - 9.71317258e-11 * tc[3] +
                  3.39942805e-15 * tc[4];
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +4.25770215e+03 * invT - 1.69002345e+01 -
                  1.36242013e+00 * tc[0] - 1.57636986e-02 * tc[1] +
                  5.00364892e-06 * tc[2] - 1.23472593e-09 * tc[3] +
                  1.43985765e-13 * tc[4];
  } else {
    // species 33: c2h3co
    species[33] = +1.92969514e+03 * invT + 3.24639464e+01 -
                  9.37467676e+00 * tc[0] - 3.95648450e-03 * tc[1] +
                  4.45330467e-07 * tc[2] - 3.42596192e-11 * tc[3] +
                  1.18489490e-15 * tc[4];
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = -1.16521584e+04 * invT - 2.35954728e+01 -
                  2.92355162e-01 * tc[0] - 1.77160709e-02 * tc[1] +
                  4.91560540e-06 * tc[2] - 1.06750103e-09 * tc[3] +
                  1.13072054e-13 * tc[4];
  } else {
    // species 34: c2h3cho
    species[34] = -1.49630281e+04 * invT + 4.01420020e+01 -
                  1.04184959e+01 * tc[0] - 4.74481661e-03 * tc[1] +
                  5.48850882e-07 * tc[2] - 4.30232669e-11 * tc[3] +
                  1.50793646e-15 * tc[4];
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = -2.37391490e+04 * invT - 2.26131460e+01 -
                  2.22400728e+00 * tc[0] - 3.52497310e-02 * tc[1] +
                  9.44964712e-06 * tc[2] - 2.02189792e-09 * tc[3] +
                  2.14857729e-13 * tc[4];
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = -3.05468277e+04 * invT + 1.04591008e+02 -
                  2.23244015e+01 * tc[0] - 1.02737388e-02 * tc[1] +
                  1.19846058e-06 * tc[2] - 9.44679467e-11 * tc[3] +
                  3.32372192e-15 * tc[4];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = +1.93834226e+04 * invT - 2.68358451e+01 +
                  5.29131958e-01 * tc[0] - 1.67279550e-02 * tc[1] +
                  4.22335045e-06 * tc[2] - 8.57214617e-10 * tc[3] +
                  8.66291700e-14 * tc[4];
  } else {
    // species 37: c3h5-a
    species[37] = +1.63576092e+04 * invT + 3.00397846e+01 -
                  8.45883958e+00 * tc[0] - 5.63477415e-03 * tc[1] +
                  6.39654773e-07 * tc[2] - 4.95049266e-11 * tc[3] +
                  1.71959015e-15 * tc[4];
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = -4.01065878e+04 * invT - 1.70583744e+01 -
                  2.74883461e+00 * tc[0] - 2.93468373e-02 * tc[1] +
                  7.49343158e-06 * tc[2] - 1.52666775e-09 * tc[3] +
                  1.55882685e-13 * tc[4];
  } else {
    // species 39: nc4ket13
    species[39] = -4.59588851e+04 * invT + 9.03335902e+01 -
                  1.96430808e+01 * tc[0] - 9.04702830e-03 * tc[1] +
                  1.05510539e-06 * tc[2] - 8.31550333e-11 * tc[3] +
                  2.92538229e-15 * tc[4];
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = -9.50796505e+03 * invT - 1.94305255e+01 -
                  1.54013856e+00 * tc[0] - 2.19743129e-02 * tc[1] +
                  4.95004035e-06 * tc[2] - 8.79127608e-10 * tc[3] +
                  7.92993845e-14 * tc[4];
  } else {
    // species 41: c2h5coch2
    species[41] = -1.41284951e+04 * invT + 6.19231649e+01 -
                  1.42098738e+01 * tc[0] - 7.89332295e-03 * tc[1] +
                  9.17548638e-07 * tc[2] - 7.21558783e-11 * tc[3] +
                  2.53456664e-15 * tc[4];
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = -1.23062238e+04 * invT - 2.34529891e+01 -
                  9.58299271e-01 * tc[0] - 2.84081266e-02 * tc[1] +
                  6.65187968e-06 * tc[2] - 1.27226262e-09 * tc[3] +
                  1.24610524e-13 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = -1.53640679e+04 * invT - 3.27604811e+01 -
                  8.49786005e-01 * tc[0] - 4.62553598e-02 * tc[1] +
                  1.04226639e-05 * tc[2] - 1.81566992e-09 * tc[3] +
                  1.56360199e-13 * tc[4];
  } else {
    // species 42: nc3h7coch2
    species[42] = -1.76968561e+04 * invT + 7.35367303e+01 -
                  1.61502419e+01 * tc[0] - 1.07046733e-02 * tc[1] +
                  1.22676602e-06 * tc[2] - 9.55473467e-11 * tc[3] +
                  3.33356361e-15 * tc[4];
    // species 50: c7h14ooh4-3
    species[50] = -2.48636651e+04 * invT + 1.37294938e+02 -
                  2.74034778e+01 * tc[0] - 1.63763947e-02 * tc[1] +
                  1.88319617e-06 * tc[2] - 1.47037207e-10 * tc[3] +
                  5.13934725e-15 * tc[4];
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = -2.99841025e+04 * invT - 2.15315151e+01 -
                  1.59663472e+00 * tc[0] - 2.71770708e-02 * tc[1] +
                  5.35034418e-06 * tc[2] - 7.79811299e-10 * tc[3] +
                  5.33444660e-14 * tc[4];
  } else {
    // species 43: nc4h9cho
    species[43] = -3.56826080e+04 * invT + 7.67028475e+01 -
                  1.67965163e+01 * tc[0] - 1.12842260e-02 * tc[1] +
                  1.27938598e-06 * tc[2] - 9.89744742e-11 * tc[3] +
                  3.43772777e-15 * tc[4];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = -1.14675541e+04 * invT - 1.78342855e+01 -
                  2.43530238e+00 * tc[0] - 2.46841188e-02 * tc[1] +
                  4.83138470e-06 * tc[2] - 7.02386510e-10 * tc[3] +
                  4.84143586e-14 * tc[4];
  } else {
    // species 44: nc4h9co
    species[44] = -1.66537752e+04 * invT + 7.10726518e+01 -
                  1.61782939e+01 * tc[0] - 1.03995960e-02 * tc[1] +
                  1.18631315e-06 * tc[2] - 9.21333125e-11 * tc[3] +
                  3.20848593e-15 * tc[4];
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -2.44292287e+04 * invT - 6.29772127e+01 +
                  5.50036450e+00 * tc[0] - 5.00775440e-02 * tc[1] +
                  1.21655976e-05 * tc[2] - 2.32786892e-09 * tc[3] +
                  2.21122848e-13 * tc[4];
  } else {
    // species 52: c7h14o1-3
    species[52] = -3.41591419e+04 * invT + 1.16326548e+02 -
                  2.26918916e+01 * tc[0] - 1.66255236e-02 * tc[1] +
                  1.90762942e-06 * tc[2] - 1.48712946e-10 * tc[3] +
                  5.19205560e-15 * tc[4];
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -2.67118295e+04 * invT - 6.15679040e+01 +
                  5.39477206e+00 * tc[0] - 5.09232885e-02 * tc[1] +
                  1.26674373e-05 * tc[2] - 2.47115017e-09 * tc[3] +
                  2.37427185e-13 * tc[4];
  } else {
    // species 53: c7h14o2-4
    species[53] = -3.64349664e+04 * invT + 1.20215001e+02 -
                  2.32692731e+01 * tc[0] - 1.62792695e-02 * tc[1] +
                  1.86041510e-06 * tc[2] - 1.44644715e-10 * tc[3] +
                  5.04066075e-15 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +1.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4] + 2.54747466e+04 * invT;
    // species 1: h2
    species[1] = +2.29812400e+00 + 4.12472100e-04 * tc[1] -
                 2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
                 8.26974400e-14 * tc[4] - 1.01252100e+03 * invT;
    // species 2: o
    species[2] = +1.94642900e+00 - 8.19083000e-04 * tc[1] +
                 8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
                 7.78139200e-14 * tc[4] + 2.91476400e+04 * invT;
    // species 3: o2
    species[3] = +2.21293600e+00 + 5.63743000e-04 * tc[1] -
                 1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
                 1.75371080e-13 * tc[4] - 1.00524900e+03 * invT;
    // species 5: h2o
    species[5] = +2.38684200e+00 + 1.73749100e-03 * tc[1] -
                 2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
                 5.01317600e-13 * tc[4] - 3.02081100e+04 * invT;
    // species 6: co
    species[6] = +2.26245200e+00 + 7.55970500e-04 * tc[1] -
                 1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
                 4.94990200e-13 * tc[4] - 1.43105400e+04 * invT;
    // species 7: co2
    species[7] = +1.27572500e+00 + 4.96103600e-03 * tc[1] -
                 3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
                 4.23456000e-13 * tc[4] - 4.83731400e+04 * invT;
    // species 8: ch3
    species[8] = +1.43044300e+00 + 5.56205000e-03 * tc[1] -
                 5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
                 1.17299060e-12 * tc[4] + 1.64237800e+04 * invT;
    // species 9: ch4
    species[9] = -2.21258500e-01 + 8.73834000e-03 * tc[1] -
                 9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
                 2.44786200e-12 * tc[4] - 9.82522900e+03 * invT;
    // species 11: h2o2
    species[11] = +2.38875400e+00 + 3.28461300e-03 * tc[1] -
                  4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
                  4.94303000e-13 * tc[4] - 1.76631500e+04 * invT;
    // species 12: ch2o
    species[12] = +6.52731000e-01 + 6.31572000e-03 * tc[1] -
                  6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
                  1.68264740e-12 * tc[4] - 1.48654000e+04 * invT;
    // species 14: c2h4
    species[14] = -1.86148800e+00 + 1.39808150e-02 * tc[1] -
                  1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
                  1.94757580e-12 * tc[4] + 5.57304600e+03 * invT;
    // species 15: c2h5
    species[15] = +1.69070200e+00 + 4.35956650e-03 * tc[1] +
                  1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
                  7.85554600e-13 * tc[4] + 1.28704000e+04 * invT;
    // species 16: c2h2
    species[16] = +1.01356200e+00 + 7.59522500e-03 * tc[1] -
                  5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
                  3.82549200e-13 * tc[4] + 2.61244400e+04 * invT;
    // species 17: c2h3
    species[17] = +1.45927600e+00 + 3.68573800e-03 * tc[1] +
                  7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
                  2.36956800e-13 * tc[4] + 3.33522500e+04 * invT;
    // species 18: ch2co
    species[18] = +1.97497100e+00 + 6.05935500e-03 * tc[1] -
                  7.81682000e-07 * tc[2] - 1.61667125e-09 * tc[3] +
                  7.81129800e-13 * tc[4] - 7.63263700e+03 * invT;
    // species 19: hcco
    species[19] = +4.04796500e+00 + 2.22673900e-03 * tc[1] +
                  7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
                  4.50148400e-14 * tc[4] + 1.96589200e+04 * invT;
    // species 20: ch3cho
    species[20] = +1.50569500e+00 + 6.68495500e-03 * tc[1] +
                  1.55731767e-06 * tc[2] - 2.82035000e-09 * tc[3] +
                  8.52713200e-13 * tc[4] - 2.12458900e+04 * invT;
    // species 24: nc3h7
    species[24] = +9.22537000e-01 + 1.23946350e-02 * tc[1] +
                  6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
                  1.71659920e-12 * tc[4] + 9.71328100e+03 * invT;
    // species 38: c3h3
    species[38] = +3.75420000e+00 + 5.54014000e-03 * tc[1] +
                  9.31107667e-08 * tc[2] - 1.36980300e-09 * tc[3] +
                  3.89925800e-13 * tc[4] + 3.98888300e+04 * invT;
    // species 54: n2
    species[54] = +2.29867700e+00 + 7.04120000e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88971000e-13 * tc[4] - 1.02090000e+03 * invT;
  } else {
    // species 0: h
    species[0] = +1.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4] + 2.54747466e+04 * invT;
    // species 1: h2
    species[1] = +1.99142300e+00 + 3.50032200e-04 * tc[1] -
                 1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
                 3.16550400e-16 * tc[4] - 8.35034000e+02 * invT;
    // species 2: o
    species[2] = +1.54206000e+00 - 1.37753100e-05 * tc[1] -
                 1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
                 8.73610400e-17 * tc[4] + 2.92308000e+04 * invT;
    // species 3: o2
    species[3] = +2.69757800e+00 + 3.06759850e-04 * tc[1] -
                 4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
                 2.27287000e-16 * tc[4] - 1.23393000e+03 * invT;
    // species 5: h2o
    species[5] = +1.67214600e+00 + 1.52814650e-03 * tc[1] -
                 2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
                 1.27832360e-15 * tc[4] - 2.98992100e+04 * invT;
    // species 6: co
    species[6] = +2.02507800e+00 + 7.21344500e-04 * tc[1] -
                 1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
                 1.38219040e-15 * tc[4] - 1.42683500e+04 * invT;
    // species 7: co2
    species[7] = +3.45362300e+00 + 1.57008450e-03 * tc[1] -
                 4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
                 3.33806600e-15 * tc[4] - 4.89669600e+04 * invT;
    // species 8: ch3
    species[8] = +1.84405200e+00 + 3.06898700e-03 * tc[1] -
                 7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
                 4.90431800e-15 * tc[4] + 1.64378100e+04 * invT;
    // species 9: ch4
    species[9] = +6.83479000e-01 + 5.11862000e-03 * tc[1] -
                 1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
                 9.00684600e-15 * tc[4] - 1.00807900e+04 * invT;
    // species 11: h2o2
    species[11] = +3.57316700e+00 + 2.16806800e-03 * tc[1] -
                  4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
                  2.86330800e-15 * tc[4] - 1.80069600e+04 * invT;
    // species 12: ch2o
    species[12] = +1.99560600e+00 + 3.34066050e-03 * tc[1] -
                  8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
                  6.42503400e-15 * tc[4] - 1.53203700e+04 * invT;
    // species 14: c2h4
    species[14] = +2.52841900e+00 + 5.74259000e-03 * tc[1] -
                  1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
                  1.05336960e-14 * tc[4] + 4.42828900e+03 * invT;
    // species 15: c2h5
    species[15] = +6.19048000e+00 + 3.24203850e-03 * tc[1] -
                  2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
                  7.76175400e-15 * tc[4] + 1.06745500e+04 * invT;
    // species 16: c2h2
    species[16] = +3.43677000e+00 + 2.68801950e-03 * tc[1] -
                  6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
                  4.31342000e-15 * tc[4] + 2.56676600e+04 * invT;
    // species 17: c2h3
    species[17] = +4.93346800e+00 + 2.00887300e-03 * tc[1] -
                  1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
                  4.75728800e-15 * tc[4] + 3.18543500e+04 * invT;
    // species 18: ch2co
    species[18] = +5.03881700e+00 + 2.90242000e-03 * tc[1] -
                  6.40318000e-07 * tc[2] + 6.98621250e-11 * tc[3] -
                  2.91773600e-15 * tc[4] - 8.58340200e+03 * invT;
    // species 19: hcco
    species[19] = +5.75807300e+00 + 1.00020000e-03 * tc[1] -
                  6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
                  3.93033000e-15 * tc[4] + 1.90151300e+04 * invT;
    // species 20: ch3cho
    species[20] = +4.86865000e+00 + 5.39712000e-03 * tc[1] -
                  1.21517667e-06 * tc[2] + 1.35322800e-10 * tc[3] -
                  5.79368800e-15 * tc[4] - 2.26456900e+04 * invT;
    // species 24: nc3h7
    species[24] = +6.97829100e+00 + 7.88056500e-03 * tc[1] -
                  1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
                  7.64995600e-15 * tc[4] + 7.57940200e+03 * invT;
    // species 38: c3h3
    species[38] = +7.83104700e+00 + 2.17859750e-03 * tc[1] -
                  1.36968900e-07 * tc[2] - 5.92180750e-11 * tc[3] +
                  8.75304000e-15 * tc[4] + 3.84742000e+04 * invT;
    // species 54: n2
    species[54] = +1.92664000e+00 + 7.43988500e-04 * tc[1] -
                  1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +2.43586219e+00 + 1.01117902e-04 * tc[1] -
                 3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
                 1.48730206e-14 * tc[4] + 3.74321252e+03 * invT;
  } else {
    // species 4: oh
    species[4] = +1.62599754e+00 + 6.59962030e-04 * tc[1] -
                 1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
                 3.64096032e-16 * tc[4] + 4.12085374e+03 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +2.18310656e+00 + 1.83383975e-03 * tc[1] -
                  3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
                  3.02279824e-14 * tc[4] + 8.09181013e+02 * invT;
    // species 32: ch3o2h
    species[32] = +2.23442817e+00 + 9.50648835e-03 * tc[1] -
                  3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
                  8.23660444e-14 * tc[4] - 1.77197926e+04 * invT;
    // species 47: c7h15o2-2
    species[47] = -6.44747083e-01 + 4.71190503e-02 * tc[1] -
                  2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
                  8.26422210e-13 * tc[4] - 2.15795254e+04 * invT;
    // species 48: c7h15o2-3
    species[48] = -6.44747083e-01 + 4.71190503e-02 * tc[1] -
                  2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
                  8.26422210e-13 * tc[4] - 2.15795254e+04 * invT;
    // species 49: c7h15o2-4
    species[49] = -6.44747083e-01 + 4.71190503e-02 * tc[1] -
                  2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
                  8.26422210e-13 * tc[4] - 2.15795254e+04 * invT;
  } else {
    // species 10: ho2
    species[10] = +3.10547423e+00 + 1.19226417e-03 * tc[1] -
                  2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
                  1.43280022e-15 * tc[4] + 3.98127689e+02 * invT;
    // species 32: ch3o2h
    species[32] = +7.43117091e+00 + 4.03408955e-03 * tc[1] -
                  9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
                  5.01384292e-15 * tc[4] - 1.96678771e+04 * invT;
    // species 47: c7h15o2-2
    species[47] = +2.50535640e+01 + 1.71915844e-02 * tc[1] -
                  3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
                  2.16104798e-14 * tc[4] - 3.06842095e+04 * invT;
    // species 48: c7h15o2-3
    species[48] = +2.50535640e+01 + 1.71915844e-02 * tc[1] -
                  3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
                  2.16104798e-14 * tc[4] - 3.06842095e+04 * invT;
    // species 49: c7h15o2-4
    species[49] = +2.50535640e+01 + 1.71915844e-02 * tc[1] -
                  3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
                  2.16104798e-14 * tc[4] - 3.06842095e+04 * invT;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -1.02528543e+00 + 1.20382377e-02 * tc[1] -
                  3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
                  1.05973723e-14 * tc[4] - 1.12345534e+04 * invT;
  } else {
    // species 13: c2h6
    species[13] = +5.10683385e+00 + 6.46181805e-03 * tc[1] -
                  1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
                  7.97803464e-15 * tc[4] - 1.37500014e+04 * invT;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +1.53983100e+00 + 8.16718500e-03 * tc[1] -
                  5.88316667e-07 * tc[2] - 1.16184125e-09 * tc[3] +
                  3.45826200e-13 * tc[4] + 2.25124300e+04 * invT;
  } else {
    // species 21: c3h4-a
    species[21] = +8.77625600e+00 + 2.65106900e-03 * tc[1] -
                  1.23370600e-07 * tc[2] - 7.56596500e-11 * tc[3] +
                  1.01791620e-14 * tc[4] + 1.95497200e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = -6.05384556e-01 + 1.44553831e-02 * tc[1] -
                  5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
                  6.75780704e-14 * tc[4] + 1.06688164e+03 * invT;
    // species 46: c7h15o2-1
    species[46] = +2.08885520e-01 + 4.42030853e-02 * tc[1] -
                  1.93287087e-05 * tc[2] + 5.08936723e-09 * tc[3] -
                  6.12920672e-13 * tc[4] - 1.92918765e+04 * invT;
    // species 51: c7h14ooh1-3o2
    species[51] = +8.97180040e-01 + 5.31148980e-02 * tc[1] -
                  2.67590073e-05 * tc[2] + 8.09122732e-09 * tc[3] -
                  1.09170094e-12 * tc[4] - 3.22790229e+04 * invT;
  } else {
    // species 22: c3h6
    species[22] = +7.01595958e+00 + 6.85118170e-03 * tc[1] -
                  1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
                  8.34740252e-15 * tc[4] - 1.87821271e+03 * invT;
    // species 46: c7h15o2-1
    species[46] = +2.42656556e+01 + 1.75401794e-02 * tc[1] -
                  4.03929337e-06 * tc[2] + 4.73402015e-10 * tc[3] -
                  2.20708250e-14 * tc[4] - 2.81113392e+04 * invT;
    // species 51: c7h14ooh1-3o2
    species[51] = +3.10144349e+01 + 1.70027998e-02 * tc[1] -
                  3.94719520e-06 * tc[2] + 4.65150867e-10 * tc[3] -
                  2.17702024e-14 * tc[4] - 4.27171859e+04 * invT;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = -2.43095121e+00 + 2.39353031e-02 * tc[1] -
                  1.38482267e-05 * tc[2] + 4.78873880e-09 * tc[3] -
                  7.14317014e-13 * tc[4] + 1.17551314e+04 * invT;
  } else {
    // species 23: c4h6
    species[23] = +1.01633789e+01 + 6.85819825e-03 * tc[1] -
                  1.56571928e-06 * tc[2] + 1.82423459e-10 * tc[3] -
                  8.46972406e-15 * tc[4] + 7.79039770e+03 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = -1.35050835e+00 + 2.13255622e-02 * tc[1] -
                  9.69931243e-06 * tc[2] + 2.63509785e-09 * tc[3] -
                  3.20119708e-13 * tc[4] + 1.49933591e+04 * invT;
    // species 26: c4h8-1
    species[26] = -1.83137209e+00 + 2.26290489e-02 * tc[1] -
                  9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
                  2.86383360e-13 * tc[4] - 1.57875035e+03 * invT;
    // species 29: c5h9
    species[29] = -2.38013950e+00 + 2.78804243e-02 * tc[1] -
                  1.23381309e-05 * tc[2] + 3.17209752e-09 * tc[3] -
                  3.57077670e-13 * tc[4] + 1.25589824e+04 * invT;
    // species 30: c5h10-1
    species[30] = -2.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
  } else {
    // species 25: c4h7
    species[25] = +1.02103578e+01 + 8.02415980e-03 * tc[1] -
                  1.82167431e-06 * tc[2] + 2.11485263e-10 * tc[3] -
                  9.79545478e-15 * tc[4] + 1.09041937e+04 * invT;
    // species 26: c4h8-1
    species[26] = +1.03508668e+01 + 9.03089385e-03 * tc[1] -
                  2.05364343e-06 * tc[2] + 2.38663240e-10 * tc[3] -
                  1.10617928e-14 * tc[4] - 5.97871038e+03 * invT;
    // species 29: c5h9
    species[29] = +1.31860454e+01 + 1.03564449e-02 * tc[1] -
                  2.35653539e-06 * tc[2] + 2.74017833e-10 * tc[3] -
                  1.27064442e-14 * tc[4] + 7.00496135e+03 * invT;
    // species 30: c5h10-1
    species[30] = +1.35851539e+01 + 1.12036235e-02 * tc[1] -
                  2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
                  1.36877028e-14 * tc[4] - 1.00898205e+04 * invT;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = +8.03391870e-01 + 1.50703542e-02 * tc[1] -
                  6.45018507e-06 * tc[2] + 1.59549759e-09 * tc[3] -
                  1.73220636e-13 * tc[4] - 5.37233261e+03 * invT;
    // species 45: nc7h16
    species[45] = -2.26836187e+00 + 4.27177910e-02 * tc[1] -
                  1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
                  4.04789850e-13 * tc[4] - 2.56586565e+04 * invT;
  } else {
    // species 27: ch3coch2
    species[27] = +9.23039750e+00 + 5.82470805e-03 * tc[1] -
                  1.33668512e-06 * tc[2] + 1.56301312e-10 * tc[3] -
                  7.27568724e-15 * tc[4] - 8.44380462e+03 * invT;
    // species 45: nc7h16
    species[45] = +2.12148969e+01 + 1.73837875e-02 * tc[1] -
                  3.94690430e-06 * tc[2] + 4.58246195e-10 * tc[3] -
                  2.12260532e-14 * tc[4] - 3.42760081e+04 * invT;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = +1.16308444e+00 + 1.47750632e-02 * tc[1] -
                  5.08154173e-06 * tc[2] + 8.73759867e-10 * tc[3] -
                  4.77793254e-14 * tc[4] - 2.42260137e+04 * invT;
    // species 40: nc3h7cho
    species[40] = +8.74159590e-01 + 2.09620158e-02 * tc[1] -
                  7.83829263e-06 * tc[2] + 1.56728418e-09 * tc[3] -
                  1.21888782e-13 * tc[4] - 2.71032194e+04 * invT;
  } else {
    // species 28: c2h5cho
    species[28] = +9.24276950e+00 + 6.98209945e-03 * tc[1] -
                  1.58749334e-06 * tc[2] + 1.84526426e-10 * tc[3] -
                  8.55519006e-15 * tc[4] - 2.74143135e+04 * invT;
    // species 40: nc3h7cho
    species[40] = +1.25988068e+01 + 9.08262370e-03 * tc[1] -
                  2.05948153e-06 * tc[2] + 2.38995052e-10 * tc[3] -
                  1.10688592e-14 * tc[4] - 3.15845348e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = +3.26146906e+00 + 5.04367995e-03 * tc[1] -
                  1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
                  8.36678206e-15 * tc[4] - 6.84394259e+02 * invT;
    // species 36: pc4h9o2
    species[36] = +9.43636500e-01 + 2.57756581e-02 * tc[1] -
                  1.09428133e-05 * tc[2] + 2.82662150e-09 * tc[3] -
                  3.40237212e-13 * tc[4] - 1.08358103e+04 * invT;
  } else {
    // species 31: ch3o2
    species[31] = +4.95787891e+00 + 3.95364313e-03 * tc[1] -
                  8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
                  4.78014660e-15 * tc[4] - 1.53574838e+03 * invT;
    // species 36: pc4h9o2
    species[36] = +1.47845448e+01 + 1.07605455e-02 * tc[1] -
                  2.48303006e-06 * tc[2] + 2.91395178e-10 * tc[3] -
                  1.35977122e-14 * tc[4] - 1.60146054e+04 * invT;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +3.62420130e-01 + 1.57636986e-02 * tc[1] -
                  1.00072978e-05 * tc[2] + 3.70417780e-09 * tc[3] -
                  5.75943060e-13 * tc[4] + 4.25770215e+03 * invT;
  } else {
    // species 33: c2h3co
    species[33] = +8.37467676e+00 + 3.95648450e-03 * tc[1] -
                  8.90660933e-07 * tc[2] + 1.02778857e-10 * tc[3] -
                  4.73957962e-15 * tc[4] + 1.92969514e+03 * invT;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = -7.07644838e-01 + 1.77160709e-02 * tc[1] -
                  9.83121080e-06 * tc[2] + 3.20250310e-09 * tc[3] -
                  4.52288216e-13 * tc[4] - 1.16521584e+04 * invT;
  } else {
    // species 34: c2h3cho
    species[34] = +9.41849590e+00 + 4.74481661e-03 * tc[1] -
                  1.09770176e-06 * tc[2] + 1.29069801e-10 * tc[3] -
                  6.03174582e-15 * tc[4] - 1.49630281e+04 * invT;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = +1.22400728e+00 + 3.52497310e-02 * tc[1] -
                  1.88992942e-05 * tc[2] + 6.06569377e-09 * tc[3] -
                  8.59430918e-13 * tc[4] - 2.37391490e+04 * invT;
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.13244015e+01 + 1.02737388e-02 * tc[1] -
                  2.39692116e-06 * tc[2] + 2.83403840e-10 * tc[3] -
                  1.32948877e-14 * tc[4] - 3.05468277e+04 * invT;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = -1.52913196e+00 + 1.67279550e-02 * tc[1] -
                  8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
                  3.46516680e-13 * tc[4] + 1.93834226e+04 * invT;
  } else {
    // species 37: c3h5-a
    species[37] = +7.45883958e+00 + 5.63477415e-03 * tc[1] -
                  1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
                  6.87836060e-15 * tc[4] + 1.63576092e+04 * invT;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = +1.74883461e+00 + 2.93468373e-02 * tc[1] -
                  1.49868632e-05 * tc[2] + 4.58000325e-09 * tc[3] -
                  6.23530738e-13 * tc[4] - 4.01065878e+04 * invT;
  } else {
    // species 39: nc4ket13
    species[39] = +1.86430808e+01 + 9.04702830e-03 * tc[1] -
                  2.11021077e-06 * tc[2] + 2.49465100e-10 * tc[3] -
                  1.17015292e-14 * tc[4] - 4.59588851e+04 * invT;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = +5.40138560e-01 + 2.19743129e-02 * tc[1] -
                  9.90008070e-06 * tc[2] + 2.63738282e-09 * tc[3] -
                  3.17197538e-13 * tc[4] - 9.50796505e+03 * invT;
  } else {
    // species 41: c2h5coch2
    species[41] = +1.32098738e+01 + 7.89332295e-03 * tc[1] -
                  1.83509728e-06 * tc[2] + 2.16467635e-10 * tc[3] -
                  1.01382666e-14 * tc[4] - 1.41284951e+04 * invT;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = -4.17007290e-02 + 2.84081266e-02 * tc[1] -
                  1.33037594e-05 * tc[2] + 3.81678785e-09 * tc[3] -
                  4.98442094e-13 * tc[4] - 1.23062238e+04 * invT;
    // species 50: c7h14ooh4-3
    species[50] = -1.50213995e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
  } else {
    // species 42: nc3h7coch2
    species[42] = +1.51502419e+01 + 1.07046733e-02 * tc[1] -
                  2.45353205e-06 * tc[2] + 2.86642040e-10 * tc[3] -
                  1.33342544e-14 * tc[4] - 1.76968561e+04 * invT;
    // species 50: c7h14ooh4-3
    species[50] = +2.64034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = +5.96634720e-01 + 2.71770708e-02 * tc[1] -
                  1.07006884e-05 * tc[2] + 2.33943390e-09 * tc[3] -
                  2.13377864e-13 * tc[4] - 2.99841025e+04 * invT;
  } else {
    // species 43: nc4h9cho
    species[43] = +1.57965163e+01 + 1.12842260e-02 * tc[1] -
                  2.55877196e-06 * tc[2] + 2.96923422e-10 * tc[3] -
                  1.37509111e-14 * tc[4] - 3.56826080e+04 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = +1.43530238e+00 + 2.46841188e-02 * tc[1] -
                  9.66276940e-06 * tc[2] + 2.10715953e-09 * tc[3] -
                  1.93657434e-13 * tc[4] - 1.14675541e+04 * invT;
  } else {
    // species 44: nc4h9co
    species[44] = +1.51782939e+01 + 1.03995960e-02 * tc[1] -
                  2.37262631e-06 * tc[2] + 2.76399937e-10 * tc[3] -
                  1.28339437e-14 * tc[4] - 1.66537752e+04 * invT;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -6.50036450e+00 + 5.00775440e-02 * tc[1] -
                  2.43311952e-05 * tc[2] + 6.98360675e-09 * tc[3] -
                  8.84491392e-13 * tc[4] - 2.44292287e+04 * invT;
  } else {
    // species 52: c7h14o1-3
    species[52] = +2.16918916e+01 + 1.66255236e-02 * tc[1] -
                  3.81525883e-06 * tc[2] + 4.46138838e-10 * tc[3] -
                  2.07682224e-14 * tc[4] - 3.41591419e+04 * invT;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -6.39477206e+00 + 5.09232885e-02 * tc[1] -
                  2.53348745e-05 * tc[2] + 7.41345050e-09 * tc[3] -
                  9.49708740e-13 * tc[4] - 2.67118295e+04 * invT;
  } else {
    // species 53: c7h14o2-4
    species[53] = +2.22692731e+01 + 1.62792695e-02 * tc[1] -
                  3.72083020e-06 * tc[2] + 4.33934145e-10 * tc[3] -
                  2.01626430e-14 * tc[4] - 3.64349664e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +2.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4] + 2.54747466e+04 * invT;
    // species 1: h2
    species[1] = +3.29812400e+00 + 4.12472100e-04 * tc[1] -
                 2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
                 8.26974400e-14 * tc[4] - 1.01252100e+03 * invT;
    // species 2: o
    species[2] = +2.94642900e+00 - 8.19083000e-04 * tc[1] +
                 8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
                 7.78139200e-14 * tc[4] + 2.91476400e+04 * invT;
    // species 3: o2
    species[3] = +3.21293600e+00 + 5.63743000e-04 * tc[1] -
                 1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
                 1.75371080e-13 * tc[4] - 1.00524900e+03 * invT;
    // species 5: h2o
    species[5] = +3.38684200e+00 + 1.73749100e-03 * tc[1] -
                 2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
                 5.01317600e-13 * tc[4] - 3.02081100e+04 * invT;
    // species 6: co
    species[6] = +3.26245200e+00 + 7.55970500e-04 * tc[1] -
                 1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
                 4.94990200e-13 * tc[4] - 1.43105400e+04 * invT;
    // species 7: co2
    species[7] = +2.27572500e+00 + 4.96103600e-03 * tc[1] -
                 3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
                 4.23456000e-13 * tc[4] - 4.83731400e+04 * invT;
    // species 8: ch3
    species[8] = +2.43044300e+00 + 5.56205000e-03 * tc[1] -
                 5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
                 1.17299060e-12 * tc[4] + 1.64237800e+04 * invT;
    // species 9: ch4
    species[9] = +7.78741500e-01 + 8.73834000e-03 * tc[1] -
                 9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
                 2.44786200e-12 * tc[4] - 9.82522900e+03 * invT;
    // species 11: h2o2
    species[11] = +3.38875400e+00 + 3.28461300e-03 * tc[1] -
                  4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
                  4.94303000e-13 * tc[4] - 1.76631500e+04 * invT;
    // species 12: ch2o
    species[12] = +1.65273100e+00 + 6.31572000e-03 * tc[1] -
                  6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
                  1.68264740e-12 * tc[4] - 1.48654000e+04 * invT;
    // species 14: c2h4
    species[14] = -8.61488000e-01 + 1.39808150e-02 * tc[1] -
                  1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
                  1.94757580e-12 * tc[4] + 5.57304600e+03 * invT;
    // species 15: c2h5
    species[15] = +2.69070200e+00 + 4.35956650e-03 * tc[1] +
                  1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
                  7.85554600e-13 * tc[4] + 1.28704000e+04 * invT;
    // species 16: c2h2
    species[16] = +2.01356200e+00 + 7.59522500e-03 * tc[1] -
                  5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
                  3.82549200e-13 * tc[4] + 2.61244400e+04 * invT;
    // species 17: c2h3
    species[17] = +2.45927600e+00 + 3.68573800e-03 * tc[1] +
                  7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
                  2.36956800e-13 * tc[4] + 3.33522500e+04 * invT;
    // species 18: ch2co
    species[18] = +2.97497100e+00 + 6.05935500e-03 * tc[1] -
                  7.81682000e-07 * tc[2] - 1.61667125e-09 * tc[3] +
                  7.81129800e-13 * tc[4] - 7.63263700e+03 * invT;
    // species 19: hcco
    species[19] = +5.04796500e+00 + 2.22673900e-03 * tc[1] +
                  7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
                  4.50148400e-14 * tc[4] + 1.96589200e+04 * invT;
    // species 20: ch3cho
    species[20] = +2.50569500e+00 + 6.68495500e-03 * tc[1] +
                  1.55731767e-06 * tc[2] - 2.82035000e-09 * tc[3] +
                  8.52713200e-13 * tc[4] - 2.12458900e+04 * invT;
    // species 24: nc3h7
    species[24] = +1.92253700e+00 + 1.23946350e-02 * tc[1] +
                  6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
                  1.71659920e-12 * tc[4] + 9.71328100e+03 * invT;
    // species 38: c3h3
    species[38] = +4.75420000e+00 + 5.54014000e-03 * tc[1] +
                  9.31107667e-08 * tc[2] - 1.36980300e-09 * tc[3] +
                  3.89925800e-13 * tc[4] + 3.98888300e+04 * invT;
    // species 54: n2
    species[54] = +3.29867700e+00 + 7.04120000e-04 * tc[1] -
                  1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                  4.88971000e-13 * tc[4] - 1.02090000e+03 * invT;
  } else {
    // species 0: h
    species[0] = +2.50104422e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4] + 2.54747466e+04 * invT;
    // species 1: h2
    species[1] = +2.99142300e+00 + 3.50032200e-04 * tc[1] -
                 1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
                 3.16550400e-16 * tc[4] - 8.35034000e+02 * invT;
    // species 2: o
    species[2] = +2.54206000e+00 - 1.37753100e-05 * tc[1] -
                 1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
                 8.73610400e-17 * tc[4] + 2.92308000e+04 * invT;
    // species 3: o2
    species[3] = +3.69757800e+00 + 3.06759850e-04 * tc[1] -
                 4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
                 2.27287000e-16 * tc[4] - 1.23393000e+03 * invT;
    // species 5: h2o
    species[5] = +2.67214600e+00 + 1.52814650e-03 * tc[1] -
                 2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
                 1.27832360e-15 * tc[4] - 2.98992100e+04 * invT;
    // species 6: co
    species[6] = +3.02507800e+00 + 7.21344500e-04 * tc[1] -
                 1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
                 1.38219040e-15 * tc[4] - 1.42683500e+04 * invT;
    // species 7: co2
    species[7] = +4.45362300e+00 + 1.57008450e-03 * tc[1] -
                 4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
                 3.33806600e-15 * tc[4] - 4.89669600e+04 * invT;
    // species 8: ch3
    species[8] = +2.84405200e+00 + 3.06898700e-03 * tc[1] -
                 7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
                 4.90431800e-15 * tc[4] + 1.64378100e+04 * invT;
    // species 9: ch4
    species[9] = +1.68347900e+00 + 5.11862000e-03 * tc[1] -
                 1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
                 9.00684600e-15 * tc[4] - 1.00807900e+04 * invT;
    // species 11: h2o2
    species[11] = +4.57316700e+00 + 2.16806800e-03 * tc[1] -
                  4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
                  2.86330800e-15 * tc[4] - 1.80069600e+04 * invT;
    // species 12: ch2o
    species[12] = +2.99560600e+00 + 3.34066050e-03 * tc[1] -
                  8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
                  6.42503400e-15 * tc[4] - 1.53203700e+04 * invT;
    // species 14: c2h4
    species[14] = +3.52841900e+00 + 5.74259000e-03 * tc[1] -
                  1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
                  1.05336960e-14 * tc[4] + 4.42828900e+03 * invT;
    // species 15: c2h5
    species[15] = +7.19048000e+00 + 3.24203850e-03 * tc[1] -
                  2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
                  7.76175400e-15 * tc[4] + 1.06745500e+04 * invT;
    // species 16: c2h2
    species[16] = +4.43677000e+00 + 2.68801950e-03 * tc[1] -
                  6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
                  4.31342000e-15 * tc[4] + 2.56676600e+04 * invT;
    // species 17: c2h3
    species[17] = +5.93346800e+00 + 2.00887300e-03 * tc[1] -
                  1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
                  4.75728800e-15 * tc[4] + 3.18543500e+04 * invT;
    // species 18: ch2co
    species[18] = +6.03881700e+00 + 2.90242000e-03 * tc[1] -
                  6.40318000e-07 * tc[2] + 6.98621250e-11 * tc[3] -
                  2.91773600e-15 * tc[4] - 8.58340200e+03 * invT;
    // species 19: hcco
    species[19] = +6.75807300e+00 + 1.00020000e-03 * tc[1] -
                  6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
                  3.93033000e-15 * tc[4] + 1.90151300e+04 * invT;
    // species 20: ch3cho
    species[20] = +5.86865000e+00 + 5.39712000e-03 * tc[1] -
                  1.21517667e-06 * tc[2] + 1.35322800e-10 * tc[3] -
                  5.79368800e-15 * tc[4] - 2.26456900e+04 * invT;
    // species 24: nc3h7
    species[24] = +7.97829100e+00 + 7.88056500e-03 * tc[1] -
                  1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
                  7.64995600e-15 * tc[4] + 7.57940200e+03 * invT;
    // species 38: c3h3
    species[38] = +8.83104700e+00 + 2.17859750e-03 * tc[1] -
                  1.36968900e-07 * tc[2] - 5.92180750e-11 * tc[3] +
                  8.75304000e-15 * tc[4] + 3.84742000e+04 * invT;
    // species 54: n2
    species[54] = +2.92664000e+00 + 7.43988500e-04 * tc[1] -
                  1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
                  1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.43586219e+00 + 1.01117902e-04 * tc[1] -
                 3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
                 1.48730206e-14 * tc[4] + 3.74321252e+03 * invT;
  } else {
    // species 4: oh
    species[4] = +2.62599754e+00 + 6.59962030e-04 * tc[1] -
                 1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
                 3.64096032e-16 * tc[4] + 4.12085374e+03 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +3.18310656e+00 + 1.83383975e-03 * tc[1] -
                  3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
                  3.02279824e-14 * tc[4] + 8.09181013e+02 * invT;
    // species 32: ch3o2h
    species[32] = +3.23442817e+00 + 9.50648835e-03 * tc[1] -
                  3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
                  8.23660444e-14 * tc[4] - 1.77197926e+04 * invT;
    // species 47: c7h15o2-2
    species[47] = +3.55252917e-01 + 4.71190503e-02 * tc[1] -
                  2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
                  8.26422210e-13 * tc[4] - 2.15795254e+04 * invT;
    // species 48: c7h15o2-3
    species[48] = +3.55252917e-01 + 4.71190503e-02 * tc[1] -
                  2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
                  8.26422210e-13 * tc[4] - 2.15795254e+04 * invT;
    // species 49: c7h15o2-4
    species[49] = +3.55252917e-01 + 4.71190503e-02 * tc[1] -
                  2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
                  8.26422210e-13 * tc[4] - 2.15795254e+04 * invT;
  } else {
    // species 10: ho2
    species[10] = +4.10547423e+00 + 1.19226417e-03 * tc[1] -
                  2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
                  1.43280022e-15 * tc[4] + 3.98127689e+02 * invT;
    // species 32: ch3o2h
    species[32] = +8.43117091e+00 + 4.03408955e-03 * tc[1] -
                  9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
                  5.01384292e-15 * tc[4] - 1.96678771e+04 * invT;
    // species 47: c7h15o2-2
    species[47] = +2.60535640e+01 + 1.71915844e-02 * tc[1] -
                  3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
                  2.16104798e-14 * tc[4] - 3.06842095e+04 * invT;
    // species 48: c7h15o2-3
    species[48] = +2.60535640e+01 + 1.71915844e-02 * tc[1] -
                  3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
                  2.16104798e-14 * tc[4] - 3.06842095e+04 * invT;
    // species 49: c7h15o2-4
    species[49] = +2.60535640e+01 + 1.71915844e-02 * tc[1] -
                  3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
                  2.16104798e-14 * tc[4] - 3.06842095e+04 * invT;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -2.52854344e-02 + 1.20382377e-02 * tc[1] -
                  3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
                  1.05973723e-14 * tc[4] - 1.12345534e+04 * invT;
  } else {
    // species 13: c2h6
    species[13] = +6.10683385e+00 + 6.46181805e-03 * tc[1] -
                  1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
                  7.97803464e-15 * tc[4] - 1.37500014e+04 * invT;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +2.53983100e+00 + 8.16718500e-03 * tc[1] -
                  5.88316667e-07 * tc[2] - 1.16184125e-09 * tc[3] +
                  3.45826200e-13 * tc[4] + 2.25124300e+04 * invT;
  } else {
    // species 21: c3h4-a
    species[21] = +9.77625600e+00 + 2.65106900e-03 * tc[1] -
                  1.23370600e-07 * tc[2] - 7.56596500e-11 * tc[3] +
                  1.01791620e-14 * tc[4] + 1.95497200e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = +3.94615444e-01 + 1.44553831e-02 * tc[1] -
                  5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
                  6.75780704e-14 * tc[4] + 1.06688164e+03 * invT;
    // species 46: c7h15o2-1
    species[46] = +1.20888552e+00 + 4.42030853e-02 * tc[1] -
                  1.93287087e-05 * tc[2] + 5.08936723e-09 * tc[3] -
                  6.12920672e-13 * tc[4] - 1.92918765e+04 * invT;
    // species 51: c7h14ooh1-3o2
    species[51] = +1.89718004e+00 + 5.31148980e-02 * tc[1] -
                  2.67590073e-05 * tc[2] + 8.09122732e-09 * tc[3] -
                  1.09170094e-12 * tc[4] - 3.22790229e+04 * invT;
  } else {
    // species 22: c3h6
    species[22] = +8.01595958e+00 + 6.85118170e-03 * tc[1] -
                  1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
                  8.34740252e-15 * tc[4] - 1.87821271e+03 * invT;
    // species 46: c7h15o2-1
    species[46] = +2.52656556e+01 + 1.75401794e-02 * tc[1] -
                  4.03929337e-06 * tc[2] + 4.73402015e-10 * tc[3] -
                  2.20708250e-14 * tc[4] - 2.81113392e+04 * invT;
    // species 51: c7h14ooh1-3o2
    species[51] = +3.20144349e+01 + 1.70027998e-02 * tc[1] -
                  3.94719520e-06 * tc[2] + 4.65150867e-10 * tc[3] -
                  2.17702024e-14 * tc[4] - 4.27171859e+04 * invT;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = -1.43095121e+00 + 2.39353031e-02 * tc[1] -
                  1.38482267e-05 * tc[2] + 4.78873880e-09 * tc[3] -
                  7.14317014e-13 * tc[4] + 1.17551314e+04 * invT;
  } else {
    // species 23: c4h6
    species[23] = +1.11633789e+01 + 6.85819825e-03 * tc[1] -
                  1.56571928e-06 * tc[2] + 1.82423459e-10 * tc[3] -
                  8.46972406e-15 * tc[4] + 7.79039770e+03 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = -3.50508352e-01 + 2.13255622e-02 * tc[1] -
                  9.69931243e-06 * tc[2] + 2.63509785e-09 * tc[3] -
                  3.20119708e-13 * tc[4] + 1.49933591e+04 * invT;
    // species 26: c4h8-1
    species[26] = -8.31372089e-01 + 2.26290489e-02 * tc[1] -
                  9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
                  2.86383360e-13 * tc[4] - 1.57875035e+03 * invT;
    // species 29: c5h9
    species[29] = -1.38013950e+00 + 2.78804243e-02 * tc[1] -
                  1.23381309e-05 * tc[2] + 3.17209752e-09 * tc[3] -
                  3.57077670e-13 * tc[4] + 1.25589824e+04 * invT;
    // species 30: c5h10-1
    species[30] = -1.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
  } else {
    // species 25: c4h7
    species[25] = +1.12103578e+01 + 8.02415980e-03 * tc[1] -
                  1.82167431e-06 * tc[2] + 2.11485263e-10 * tc[3] -
                  9.79545478e-15 * tc[4] + 1.09041937e+04 * invT;
    // species 26: c4h8-1
    species[26] = +1.13508668e+01 + 9.03089385e-03 * tc[1] -
                  2.05364343e-06 * tc[2] + 2.38663240e-10 * tc[3] -
                  1.10617928e-14 * tc[4] - 5.97871038e+03 * invT;
    // species 29: c5h9
    species[29] = +1.41860454e+01 + 1.03564449e-02 * tc[1] -
                  2.35653539e-06 * tc[2] + 2.74017833e-10 * tc[3] -
                  1.27064442e-14 * tc[4] + 7.00496135e+03 * invT;
    // species 30: c5h10-1
    species[30] = +1.45851539e+01 + 1.12036235e-02 * tc[1] -
                  2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
                  1.36877028e-14 * tc[4] - 1.00898205e+04 * invT;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = +1.80339187e+00 + 1.50703542e-02 * tc[1] -
                  6.45018507e-06 * tc[2] + 1.59549759e-09 * tc[3] -
                  1.73220636e-13 * tc[4] - 5.37233261e+03 * invT;
    // species 45: nc7h16
    species[45] = -1.26836187e+00 + 4.27177910e-02 * tc[1] -
                  1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
                  4.04789850e-13 * tc[4] - 2.56586565e+04 * invT;
  } else {
    // species 27: ch3coch2
    species[27] = +1.02303975e+01 + 5.82470805e-03 * tc[1] -
                  1.33668512e-06 * tc[2] + 1.56301312e-10 * tc[3] -
                  7.27568724e-15 * tc[4] - 8.44380462e+03 * invT;
    // species 45: nc7h16
    species[45] = +2.22148969e+01 + 1.73837875e-02 * tc[1] -
                  3.94690430e-06 * tc[2] + 4.58246195e-10 * tc[3] -
                  2.12260532e-14 * tc[4] - 3.42760081e+04 * invT;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = +2.16308444e+00 + 1.47750632e-02 * tc[1] -
                  5.08154173e-06 * tc[2] + 8.73759867e-10 * tc[3] -
                  4.77793254e-14 * tc[4] - 2.42260137e+04 * invT;
    // species 40: nc3h7cho
    species[40] = +1.87415959e+00 + 2.09620158e-02 * tc[1] -
                  7.83829263e-06 * tc[2] + 1.56728418e-09 * tc[3] -
                  1.21888782e-13 * tc[4] - 2.71032194e+04 * invT;
  } else {
    // species 28: c2h5cho
    species[28] = +1.02427695e+01 + 6.98209945e-03 * tc[1] -
                  1.58749334e-06 * tc[2] + 1.84526426e-10 * tc[3] -
                  8.55519006e-15 * tc[4] - 2.74143135e+04 * invT;
    // species 40: nc3h7cho
    species[40] = +1.35988068e+01 + 9.08262370e-03 * tc[1] -
                  2.05948153e-06 * tc[2] + 2.38995052e-10 * tc[3] -
                  1.10688592e-14 * tc[4] - 3.15845348e+04 * invT;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = +4.26146906e+00 + 5.04367995e-03 * tc[1] -
                  1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
                  8.36678206e-15 * tc[4] - 6.84394259e+02 * invT;
    // species 36: pc4h9o2
    species[36] = +1.94363650e+00 + 2.57756581e-02 * tc[1] -
                  1.09428133e-05 * tc[2] + 2.82662150e-09 * tc[3] -
                  3.40237212e-13 * tc[4] - 1.08358103e+04 * invT;
  } else {
    // species 31: ch3o2
    species[31] = +5.95787891e+00 + 3.95364313e-03 * tc[1] -
                  8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
                  4.78014660e-15 * tc[4] - 1.53574838e+03 * invT;
    // species 36: pc4h9o2
    species[36] = +1.57845448e+01 + 1.07605455e-02 * tc[1] -
                  2.48303006e-06 * tc[2] + 2.91395178e-10 * tc[3] -
                  1.35977122e-14 * tc[4] - 1.60146054e+04 * invT;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +1.36242013e+00 + 1.57636986e-02 * tc[1] -
                  1.00072978e-05 * tc[2] + 3.70417780e-09 * tc[3] -
                  5.75943060e-13 * tc[4] + 4.25770215e+03 * invT;
  } else {
    // species 33: c2h3co
    species[33] = +9.37467676e+00 + 3.95648450e-03 * tc[1] -
                  8.90660933e-07 * tc[2] + 1.02778857e-10 * tc[3] -
                  4.73957962e-15 * tc[4] + 1.92969514e+03 * invT;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = +2.92355162e-01 + 1.77160709e-02 * tc[1] -
                  9.83121080e-06 * tc[2] + 3.20250310e-09 * tc[3] -
                  4.52288216e-13 * tc[4] - 1.16521584e+04 * invT;
  } else {
    // species 34: c2h3cho
    species[34] = +1.04184959e+01 + 4.74481661e-03 * tc[1] -
                  1.09770176e-06 * tc[2] + 1.29069801e-10 * tc[3] -
                  6.03174582e-15 * tc[4] - 1.49630281e+04 * invT;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.22400728e+00 + 3.52497310e-02 * tc[1] -
                  1.88992942e-05 * tc[2] + 6.06569377e-09 * tc[3] -
                  8.59430918e-13 * tc[4] - 2.37391490e+04 * invT;
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.23244015e+01 + 1.02737388e-02 * tc[1] -
                  2.39692116e-06 * tc[2] + 2.83403840e-10 * tc[3] -
                  1.32948877e-14 * tc[4] - 3.05468277e+04 * invT;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = -5.29131958e-01 + 1.67279550e-02 * tc[1] -
                  8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
                  3.46516680e-13 * tc[4] + 1.93834226e+04 * invT;
  } else {
    // species 37: c3h5-a
    species[37] = +8.45883958e+00 + 5.63477415e-03 * tc[1] -
                  1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
                  6.87836060e-15 * tc[4] + 1.63576092e+04 * invT;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = +2.74883461e+00 + 2.93468373e-02 * tc[1] -
                  1.49868632e-05 * tc[2] + 4.58000325e-09 * tc[3] -
                  6.23530738e-13 * tc[4] - 4.01065878e+04 * invT;
  } else {
    // species 39: nc4ket13
    species[39] = +1.96430808e+01 + 9.04702830e-03 * tc[1] -
                  2.11021077e-06 * tc[2] + 2.49465100e-10 * tc[3] -
                  1.17015292e-14 * tc[4] - 4.59588851e+04 * invT;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = +1.54013856e+00 + 2.19743129e-02 * tc[1] -
                  9.90008070e-06 * tc[2] + 2.63738282e-09 * tc[3] -
                  3.17197538e-13 * tc[4] - 9.50796505e+03 * invT;
  } else {
    // species 41: c2h5coch2
    species[41] = +1.42098738e+01 + 7.89332295e-03 * tc[1] -
                  1.83509728e-06 * tc[2] + 2.16467635e-10 * tc[3] -
                  1.01382666e-14 * tc[4] - 1.41284951e+04 * invT;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = +9.58299271e-01 + 2.84081266e-02 * tc[1] -
                  1.33037594e-05 * tc[2] + 3.81678785e-09 * tc[3] -
                  4.98442094e-13 * tc[4] - 1.23062238e+04 * invT;
    // species 50: c7h14ooh4-3
    species[50] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
  } else {
    // species 42: nc3h7coch2
    species[42] = +1.61502419e+01 + 1.07046733e-02 * tc[1] -
                  2.45353205e-06 * tc[2] + 2.86642040e-10 * tc[3] -
                  1.33342544e-14 * tc[4] - 1.76968561e+04 * invT;
    // species 50: c7h14ooh4-3
    species[50] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = +1.59663472e+00 + 2.71770708e-02 * tc[1] -
                  1.07006884e-05 * tc[2] + 2.33943390e-09 * tc[3] -
                  2.13377864e-13 * tc[4] - 2.99841025e+04 * invT;
  } else {
    // species 43: nc4h9cho
    species[43] = +1.67965163e+01 + 1.12842260e-02 * tc[1] -
                  2.55877196e-06 * tc[2] + 2.96923422e-10 * tc[3] -
                  1.37509111e-14 * tc[4] - 3.56826080e+04 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = +2.43530238e+00 + 2.46841188e-02 * tc[1] -
                  9.66276940e-06 * tc[2] + 2.10715953e-09 * tc[3] -
                  1.93657434e-13 * tc[4] - 1.14675541e+04 * invT;
  } else {
    // species 44: nc4h9co
    species[44] = +1.61782939e+01 + 1.03995960e-02 * tc[1] -
                  2.37262631e-06 * tc[2] + 2.76399937e-10 * tc[3] -
                  1.28339437e-14 * tc[4] - 1.66537752e+04 * invT;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -5.50036450e+00 + 5.00775440e-02 * tc[1] -
                  2.43311952e-05 * tc[2] + 6.98360675e-09 * tc[3] -
                  8.84491392e-13 * tc[4] - 2.44292287e+04 * invT;
  } else {
    // species 52: c7h14o1-3
    species[52] = +2.26918916e+01 + 1.66255236e-02 * tc[1] -
                  3.81525883e-06 * tc[2] + 4.46138838e-10 * tc[3] -
                  2.07682224e-14 * tc[4] - 3.41591419e+04 * invT;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -5.39477206e+00 + 5.09232885e-02 * tc[1] -
                  2.53348745e-05 * tc[2] + 7.41345050e-09 * tc[3] -
                  9.49708740e-13 * tc[4] - 2.67118295e+04 * invT;
  } else {
    // species 53: c7h14o2-4
    species[53] = +2.32692731e+01 + 1.62792695e-02 * tc[1] -
                  3.72083020e-06 * tc[2] + 4.33934145e-10 * tc[3] -
                  2.01626430e-14 * tc[4] - 3.64349664e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy_qss(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: hco
    species[0] = +2.89833000e+00 + 3.09957350e-03 * tc[1] -
                 3.20769467e-06 * tc[2] + 2.72456250e-09 * tc[3] -
                 9.14977000e-13 * tc[4] + 4.15992200e+03 * invT;
    // species 1: ch3o
    species[1] = +2.10620400e+00 + 3.60829750e-03 * tc[1] +
                 1.77949067e-06 * tc[2] - 1.84440900e-09 * tc[3] +
                 4.15122200e-13 * tc[4] + 9.78601100e+02 * invT;
    // species 2: ch3co
    species[2] = +3.12527800e+00 + 4.88911000e-03 * tc[1] +
                 1.50714933e-06 * tc[2] - 2.25236550e-09 * tc[3] +
                 6.38743600e-13 * tc[4] - 4.10850800e+03 * invT;
    // species 3: ch2cho
    species[3] = +3.40906200e+00 + 5.36928500e-03 * tc[1] +
                 6.30497333e-07 * tc[2] - 1.78964575e-09 * tc[3] +
                 5.73477000e-13 * tc[4] + 1.52147700e+03 * invT;
    // species 10: c3h2
    species[10] = +3.16671400e+00 + 1.24128600e-02 * tc[1] -
                  1.53054567e-05 * tc[2] + 1.06700475e-08 * tc[3] -
                  2.96430400e-12 * tc[4] + 6.35042100e+04 * invT;
    // species 11: ch2(s)
    species[11] = +3.97126500e+00 - 8.49544500e-05 * tc[1] +
                  3.41789667e-07 * tc[2] + 6.23137750e-10 * tc[3] -
                  3.96253200e-13 * tc[4] + 4.98936800e+04 * invT;
  } else {
    // species 0: hco
    species[0] = +3.55727100e+00 + 1.67278650e-03 * tc[1] -
                 4.45002000e-07 * tc[2] + 6.17643250e-11 * tc[3] -
                 3.42770200e-15 * tc[4] + 3.91632400e+03 * invT;
    // species 1: ch3o
    species[1] = +3.77080000e+00 + 3.93574850e-03 * tc[1] -
                 8.85461333e-07 * tc[2] + 9.86107750e-11 * tc[3] -
                 4.22523200e-15 * tc[4] + 1.27832500e+02 * invT;
    // species 2: ch3co
    species[2] = +5.61227900e+00 + 4.22494300e-03 * tc[1] -
                 9.51382333e-07 * tc[2] + 1.05959400e-10 * tc[3] -
                 4.53680800e-15 * tc[4] - 5.18786300e+03 * invT;
    // species 3: ch2cho
    species[3] = +5.97567000e+00 + 4.06529550e-03 * tc[1] -
                 9.14541333e-07 * tc[2] + 1.01757600e-10 * tc[3] -
                 4.35203400e-15 * tc[4] + 4.90321800e+02 * invT;
    // species 10: c3h2
    species[10] = +7.67098100e+00 + 1.37437450e-03 * tc[1] -
                  1.45698100e-07 * tc[2] - 1.61389975e-11 * tc[3] +
                  3.32777400e-15 * tc[4] + 6.25972200e+04 * invT;
    // species 11: ch2(s)
    species[11] = +3.55288900e+00 + 1.03339400e-03 * tc[1] -
                  6.38038667e-08 * tc[2] - 2.76168250e-11 * tc[3] +
                  4.04270000e-15 * tc[4] + 4.98497500e+04 * invT;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 4: pc4h9
    species[4] = -4.37779725e-01 + 2.39486182e-02 * tc[1] -
                 1.04674386e-05 * tc[2] + 2.74466180e-09 * tc[3] -
                 3.24021328e-13 * tc[4] + 7.68945248e+03 * invT;
    // species 8: c4h7o
    species[8] = -1.60619192e+00 + 2.79281341e-02 * tc[1] -
                 1.45198589e-05 * tc[2] + 4.26473197e-09 * tc[3] -
                 5.31270360e-13 * tc[4] + 4.85090326e+03 * invT;
  } else {
    // species 4: pc4h9
    species[4] = +1.21510082e+01 + 9.71553585e-03 * tc[1] -
                 2.20525983e-06 * tc[2] + 2.55937840e-10 * tc[3] -
                 1.18505941e-14 * tc[4] + 3.17231942e+03 * invT;
    // species 8: c4h7o
    species[8] = +1.53137780e+01 + 7.17135085e-03 * tc[1] -
                 1.60541839e-06 * tc[2] + 1.84893710e-10 * tc[3] -
                 8.52281628e-15 * tc[4] - 7.29342884e+02 * invT;
  }

  // species with midpoint at T=1373 kelvin
  if (T < 1373) {
    // species 5: c2h5co
    species[5] = +2.93313946e+00 + 1.23713956e-02 * tc[1] -
                 4.04073343e-06 * tc[2] + 5.86752620e-10 * tc[3] -
                 1.05368668e-14 * tc[4] - 5.69663063e+03 * invT;
  } else {
    // species 5: c2h5co
    species[5] = +9.87881997e+00 + 5.87578380e-03 * tc[1] -
                 1.33538308e-06 * tc[2] + 1.55212654e-10 * tc[3] -
                 7.19670450e-15 * tc[4] - 8.47292283e+03 * invT;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 6: c2h5o
    species[6] = +4.94420708e-01 + 1.35887217e-02 * tc[1] -
                 5.53030033e-06 * tc[2] + 1.28801050e-09 * tc[3] -
                 1.29699383e-13 * tc[4] - 3.35252925e+03 * invT;
    // species 20: c7h14ooh2-3
    species[20] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
    // species 21: c7h14ooh2-4
    species[21] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
    // species 22: c7h14ooh3-2
    species[22] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
    // species 23: c7h14ooh3-4
    species[23] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
    // species 24: c7h14ooh3-5
    species[24] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
    // species 25: c7h14ooh4-2
    species[25] = +8.49786005e-01 + 4.62553598e-02 * tc[1] -
                  2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
                  6.25440796e-13 * tc[4] - 1.53640679e+04 * invT;
  } else {
    // species 6: c2h5o
    species[6] = +7.87339772e+00 + 5.65364535e-03 * tc[1] -
                 1.28140474e-06 * tc[2] + 1.48603526e-10 * tc[3] -
                 6.87789076e-15 * tc[4] - 6.07274953e+03 * invT;
    // species 20: c7h14ooh2-3
    species[20] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
    // species 21: c7h14ooh2-4
    species[21] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
    // species 22: c7h14ooh3-2
    species[22] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
    // species 23: c7h14ooh3-4
    species[23] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
    // species 24: c7h14ooh3-5
    species[24] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
    // species 25: c7h14ooh4-2
    species[25] = +2.74034778e+01 + 1.63763947e-02 * tc[1] -
                  3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
                  2.05573890e-14 * tc[4] - 2.48636651e+04 * invT;
  }

  // species with midpoint at T=1380 kelvin
  if (T < 1380) {
    // species 7: c3h5o
    species[7] = +1.19822582e+00 + 1.52789918e-02 * tc[1] -
                 6.02100920e-06 * tc[2] + 1.21537508e-09 * tc[3] -
                 8.39709124e-14 * tc[4] + 9.58217784e+03 * invT;
    // species 12: nc3h7co
    species[12] = +2.67256826e+00 + 1.85599412e-02 * tc[1] -
                  6.89542863e-06 * tc[2] + 1.37218472e-09 * tc[3] -
                  1.07172837e-13 * tc[4] - 8.58050888e+03 * invT;
  } else {
    // species 7: c3h5o
    species[7] = +1.02551752e+01 + 5.74918600e-03 * tc[1] -
                 1.28215220e-06 * tc[2] + 1.47227587e-10 * tc[3] -
                 6.77115846e-15 * tc[4] + 6.26560810e+03 * invT;
    // species 12: nc3h7co
    species[12] = +1.30026331e+01 + 8.15524385e-03 * tc[1] -
                  1.85880966e-06 * tc[2] + 2.16417657e-10 * tc[3] -
                  1.00451133e-14 * tc[4] - 1.25523385e+04 * invT;
  }

  // species with midpoint at T=1377 kelvin
  if (T < 1377) {
    // species 9: c4h8ooh1-3
    species[9] = +1.94106276e+00 + 2.59394676e-02 * tc[1] -
                 1.03470561e-05 * tc[2] + 2.15892220e-09 * tc[3] -
                 1.68568399e-13 * tc[4] - 4.34315962e+03 * invT;
  } else {
    // species 9: c4h8ooh1-3
    species[9] = +1.76442170e+01 + 9.58532680e-03 * tc[1] -
                 2.19056214e-06 * tc[2] + 2.55616428e-10 * tc[3] -
                 1.18860947e-14 * tc[4] - 1.01859280e+04 * invT;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 13: c7h15-1
    species[13] = -4.99570406e-01 + 4.04413234e-02 * tc[1] -
                  1.66844251e-05 * tc[2] + 3.91373270e-09 * tc[3] -
                  3.93232454e-13 * tc[4] - 1.04590223e+03 * invT;
    // species 17: c7h14-2
    species[17] = -1.16533279e+00 + 3.95219903e-02 * tc[1] -
                  1.65367222e-05 * tc[2] + 3.96422523e-09 * tc[3] -
                  4.10692866e-13 * tc[4] - 1.17362359e+04 * invT;
    // species 26: c7h14ooh2-4o2
    species[26] = +1.40912479e+00 + 5.53604170e-02 * tc[1] -
                  2.90392692e-05 * tc[2] + 9.09156872e-09 * tc[3] -
                  1.25670138e-12 * tc[4] - 3.46304788e+04 * invT;
    // species 27: c7h14ooh3-5o2
    species[27] = +1.40912479e+00 + 5.53604170e-02 * tc[1] -
                  2.90392692e-05 * tc[2] + 9.09156872e-09 * tc[3] -
                  1.25670138e-12 * tc[4] - 3.46304788e+04 * invT;
    // species 28: c7h14ooh4-2o2
    species[28] = +1.40912479e+00 + 5.53604170e-02 * tc[1] -
                  2.90392692e-05 * tc[2] + 9.09156872e-09 * tc[3] -
                  1.25670138e-12 * tc[4] - 3.46304788e+04 * invT;
  } else {
    // species 13: c7h15-1
    species[13] = +2.17940709e+01 + 1.63140122e-02 * tc[1] -
                  3.70460813e-06 * tc[2] + 4.30167870e-10 * tc[3] -
                  1.99273400e-14 * tc[4] - 9.20938221e+03 * invT;
    // species 17: c7h14-2
    species[17] = +2.06192047e+01 + 1.57426496e-02 * tc[1] -
                  3.57206857e-06 * tc[2] + 4.14569155e-10 * tc[3] -
                  1.91982357e-14 * tc[4] - 1.96713162e+04 * invT;
    // species 26: c7h14ooh2-4o2
    species[26] = +3.28358296e+01 + 1.66383642e-02 * tc[1] -
                  3.86110950e-06 * tc[2] + 4.54896595e-10 * tc[3] -
                  2.12868838e-14 * tc[4] - 4.52873003e+04 * invT;
    // species 27: c7h14ooh3-5o2
    species[27] = +3.28358296e+01 + 1.66383642e-02 * tc[1] -
                  3.86110950e-06 * tc[2] + 4.54896595e-10 * tc[3] -
                  2.12868838e-14 * tc[4] - 4.52873003e+04 * invT;
    // species 28: c7h14ooh4-2o2
    species[28] = +3.28358296e+01 + 1.66383642e-02 * tc[1] -
                  3.86110950e-06 * tc[2] + 4.54896595e-10 * tc[3] -
                  2.12868838e-14 * tc[4] - 4.52873003e+04 * invT;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 14: c7h15-2
    species[14] = -3.79155767e-02 + 3.78363285e-02 * tc[1] -
                  1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
                  9.84721490e-14 * tc[4] - 2.35605303e+03 * invT;
    // species 15: c7h15-3
    species[15] = -3.79155767e-02 + 3.78363285e-02 * tc[1] -
                  1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
                  9.84721490e-14 * tc[4] - 2.35605303e+03 * invT;
    // species 16: c7h15-4
    species[16] = -3.79155767e-02 + 3.78363285e-02 * tc[1] -
                  1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
                  9.84721490e-14 * tc[4] - 2.35605303e+03 * invT;
  } else {
    // species 14: c7h15-2
    species[14] = +2.16368842e+01 + 1.61662402e-02 * tc[1] -
                  3.64246023e-06 * tc[2] + 4.20892650e-10 * tc[3] -
                  1.94354818e-14 * tc[4] - 1.05873616e+04 * invT;
    // species 15: c7h15-3
    species[15] = +2.16368842e+01 + 1.61662402e-02 * tc[1] -
                  3.64246023e-06 * tc[2] + 4.20892650e-10 * tc[3] -
                  1.94354818e-14 * tc[4] - 1.05873616e+04 * invT;
    // species 16: c7h15-4
    species[16] = +2.16368842e+01 + 1.61662402e-02 * tc[1] -
                  3.64246023e-06 * tc[2] + 4.20892650e-10 * tc[3] -
                  1.94354818e-14 * tc[4] - 1.05873616e+04 * invT;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 18: c7h14-3
    species[18] = -2.03026994e+00 + 4.13162189e-02 * tc[1] -
                  1.81838157e-05 * tc[2] + 4.69264555e-09 * tc[3] -
                  5.35142440e-13 * tc[4] - 1.15141029e+04 * invT;
  } else {
    // species 18: c7h14-3
    species[18] = +2.06822750e+01 + 1.57694314e-02 * tc[1] -
                  3.58570717e-06 * tc[2] + 4.16725650e-10 * tc[3] -
                  1.93162079e-14 * tc[4] - 1.96450604e+04 * invT;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 19: c7h14ooh1-3
    species[19] = +1.11146206e+00 + 4.45797696e-02 * tc[1] -
                  1.89117461e-05 * tc[2] + 4.47225235e-09 * tc[3] -
                  4.44520412e-13 * tc[4] - 1.29868314e+04 * invT;
  } else {
    // species 19: c7h14ooh1-3
    species[19] = +2.72290222e+01 + 1.62460950e-02 * tc[1] -
                  3.70865860e-06 * tc[2] + 4.32322195e-10 * tc[3] -
                  2.00856652e-14 * tc[4] - 2.24977070e+04 * invT;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 29: nc7ket13
    species[29] = +2.21629328e+00 + 4.73686881e-02 * tc[1] -
                  2.30157884e-05 * tc[2] + 6.69551000e-09 * tc[3] -
                  8.72784362e-13 * tc[4] - 4.87965510e+04 * invT;
  } else {
    // species 29: nc7ket13
    species[29] = +2.90744507e+01 + 1.58588729e-02 * tc[1] -
                  3.67542153e-06 * tc[2] + 4.32634020e-10 * tc[3] -
                  2.02323398e-14 * tc[4] - 5.82345477e+04 * invT;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 30: nc7ket24
    species[30] = +1.52936692e+00 + 4.79086733e-02 * tc[1] -
                  2.32229507e-05 * tc[2] + 6.73850955e-09 * tc[3] -
                  8.77456252e-13 * tc[4] - 5.23839542e+04 * invT;
    // species 31: nc7ket35
    species[31] = +1.52936692e+00 + 4.79086733e-02 * tc[1] -
                  2.32229507e-05 * tc[2] + 6.73850955e-09 * tc[3] -
                  8.77456252e-13 * tc[4] - 5.23839542e+04 * invT;
  } else {
    // species 30: nc7ket24
    species[30] = +2.88330388e+01 + 1.60084048e-02 * tc[1] -
                  3.71694853e-06 * tc[2] + 4.38065397e-10 * tc[3] -
                  2.05040902e-14 * tc[4] - 6.20142474e+04 * invT;
    // species 31: nc7ket35
    species[31] = +2.88330388e+01 + 1.60084048e-02 * tc[1] -
                  3.71694853e-06 * tc[2] + 4.38065397e-10 * tc[3] -
                  2.05040902e-14 * tc[4] - 6.20142474e+04 * invT;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 32: nc7ket42
    species[32] = +2.32269738e+00 + 4.72580075e-02 * tc[1] -
                  2.33019060e-05 * tc[2] + 6.99432290e-09 * tc[3] -
                  9.48488862e-13 * tc[4] - 5.27586830e+04 * invT;
  } else {
    // species 32: nc7ket42
    species[32] = +2.86572867e+01 + 1.60783954e-02 * tc[1] -
                  3.73205233e-06 * tc[2] + 4.39737500e-10 * tc[3] -
                  2.05783920e-14 * tc[4] - 6.20252988e+04 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +2.50104422e+00 * tc[0] + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4] - 4.65341317e-01;
    // species 1: h2
    species[1] = +3.29812400e+00 * tc[0] + 8.24944200e-04 * tc[1] -
                 4.07150750e-07 * tc[2] - 3.15847800e-11 * tc[3] +
                 1.03371800e-13 * tc[4] - 3.29409400e+00;
    // species 2: o
    species[2] = +2.94642900e+00 * tc[0] - 1.63816600e-03 * tc[1] +
                 1.21051600e-06 * tc[2] - 5.34281000e-10 * tc[3] +
                 9.72674000e-14 * tc[4] + 2.96399500e+00;
    // species 3: o2
    species[3] = +3.21293600e+00 * tc[0] + 1.12748600e-03 * tc[1] -
                 2.87807500e-07 * tc[2] + 4.37959000e-10 * tc[3] -
                 2.19213850e-13 * tc[4] + 6.03473800e+00;
    // species 5: h2o
    species[5] = +3.38684200e+00 * tc[0] + 3.47498200e-03 * tc[1] -
                 3.17734800e-06 * tc[2] + 2.32286033e-09 * tc[3] -
                 6.26647000e-13 * tc[4] + 2.59023300e+00;
    // species 6: co
    species[6] = +3.26245200e+00 * tc[0] + 1.51194100e-03 * tc[1] -
                 1.94087750e-06 * tc[2] + 1.86064800e-09 * tc[3] -
                 6.18737750e-13 * tc[4] + 4.84889700e+00;
    // species 7: co2
    species[7] = +2.27572500e+00 * tc[0] + 9.92207200e-03 * tc[1] -
                 5.20455500e-06 * tc[2] + 2.28889567e-09 * tc[3] -
                 5.29320000e-13 * tc[4] + 1.01884900e+01;
    // species 8: ch3
    species[8] = +2.43044300e+00 * tc[0] + 1.11241000e-02 * tc[1] -
                 8.40110000e-06 * tc[2] + 5.40609667e-09 * tc[3] -
                 1.46623825e-12 * tc[4] + 6.78979400e+00;
    // species 9: ch4
    species[9] = +7.78741500e-01 * tc[0] + 1.74766800e-02 * tc[1] -
                 1.39170450e-05 * tc[2] + 1.01656933e-08 * tc[3] -
                 3.05982750e-12 * tc[4] + 1.37221900e+01;
    // species 11: h2o2
    species[11] = +3.38875400e+00 * tc[0] + 6.56922600e-03 * tc[1] -
                  7.42506500e-08 * tc[2] - 1.54193533e-09 * tc[3] +
                  6.17878750e-13 * tc[4] + 6.78536300e+00;
    // species 12: ch2o
    species[12] = +1.65273100e+00 * tc[0] + 1.26314400e-02 * tc[1] -
                  9.44084000e-06 * tc[2] + 6.83343667e-09 * tc[3] -
                  2.10330925e-12 * tc[4] + 1.37848200e+01;
    // species 14: c2h4
    species[14] = -8.61488000e-01 * tc[0] + 2.79616300e-02 * tc[1] -
                  1.69433850e-05 * tc[2] + 9.28384000e-09 * tc[3] -
                  2.43446975e-12 * tc[4] + 2.42114900e+01;
    // species 15: c2h5
    species[15] = +2.69070200e+00 * tc[0] + 8.71913300e-03 * tc[1] +
                  2.20991950e-06 * tc[2] + 3.11290100e-10 * tc[3] -
                  9.81943250e-13 * tc[4] + 1.21382000e+01;
    // species 16: c2h2
    species[16] = +2.01356200e+00 * tc[0] + 1.51904500e-02 * tc[1] -
                  8.08159500e-06 * tc[2] + 3.02633067e-09 * tc[3] -
                  4.78186500e-13 * tc[4] + 8.80537800e+00;
    // species 17: c2h3
    species[17] = +2.45927600e+00 * tc[0] + 7.37147600e-03 * tc[1] +
                  1.05493650e-06 * tc[2] - 4.40547333e-10 * tc[3] -
                  2.96196000e-13 * tc[4] + 1.15562000e+01;
    // species 18: ch2co
    species[18] = +2.97497100e+00 * tc[0] + 1.21187100e-02 * tc[1] -
                  1.17252300e-06 * tc[2] - 2.15556167e-09 * tc[3] +
                  9.76412250e-13 * tc[4] + 8.67355300e+00;
    // species 19: hcco
    species[19] = +5.04796500e+00 * tc[0] + 4.45347800e-03 * tc[1] +
                  1.13414150e-07 * tc[2] - 4.94031667e-10 * tc[3] +
                  5.62685500e-14 * tc[4] + 4.81843900e-01;
    // species 20: ch3cho
    species[20] = +2.50569500e+00 * tc[0] + 1.33699100e-02 * tc[1] +
                  2.33597650e-06 * tc[2] - 3.76046667e-09 * tc[3] +
                  1.06589150e-12 * tc[4] + 1.33508900e+01;
    // species 24: nc3h7
    species[24] = +1.92253700e+00 * tc[0] + 2.47892700e-02 * tc[1] +
                  9.05124500e-07 * tc[2] - 5.94422000e-09 * tc[3] +
                  2.14574900e-12 * tc[4] + 1.39927100e+01;
    // species 38: c3h3
    species[38] = +4.75420000e+00 * tc[0] + 1.10802800e-02 * tc[1] +
                  1.39666150e-07 * tc[2] - 1.82640400e-09 * tc[3] +
                  4.87407250e-13 * tc[4] + 5.85454900e-01;
    // species 54: n2
    species[54] = +3.29867700e+00 * tc[0] + 1.40824000e-03 * tc[1] -
                  1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                  6.11213750e-13 * tc[4] + 3.95037200e+00;
  } else {
    // species 0: h
    species[0] = +2.50104422e+00 * tc[0] + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
                 0.00000000e+00 * tc[4] - 4.65341317e-01;
    // species 1: h2
    species[1] = +2.99142300e+00 * tc[0] + 7.00064400e-04 * tc[1] -
                 2.81691450e-08 * tc[2] - 3.07719267e-12 * tc[3] +
                 3.95688000e-16 * tc[4] - 1.35511000e+00;
    // species 2: o
    species[2] = +2.54206000e+00 * tc[0] - 2.75506200e-05 * tc[1] -
                 1.55140150e-09 * tc[2] + 1.51702233e-12 * tc[3] -
                 1.09201300e-16 * tc[4] + 4.92030800e+00;
    // species 3: o2
    species[3] = +3.69757800e+00 * tc[0] + 6.13519700e-04 * tc[1] -
                 6.29421000e-08 * tc[2] + 5.91760333e-12 * tc[3] -
                 2.84108750e-16 * tc[4] + 3.18916600e+00;
    // species 5: h2o
    species[5] = +2.67214600e+00 * tc[0] + 3.05629300e-03 * tc[1] -
                 4.36513000e-07 * tc[2] + 4.00332000e-11 * tc[3] -
                 1.59790450e-15 * tc[4] + 6.86281700e+00;
    // species 6: co
    species[6] = +3.02507800e+00 * tc[0] + 1.44268900e-03 * tc[1] -
                 2.81541400e-07 * tc[2] + 3.39527000e-11 * tc[3] -
                 1.72773800e-15 * tc[4] + 6.10821800e+00;
    // species 7: co2
    species[7] = +4.45362300e+00 * tc[0] + 3.14016900e-03 * tc[1] -
                 6.39205500e-07 * tc[2] + 7.97999000e-11 * tc[3] -
                 4.17258250e-15 * tc[4] - 9.55395900e-01;
    // species 8: ch3
    species[8] = +2.84405200e+00 * tc[0] + 6.13797400e-03 * tc[1] -
                 1.11517250e-06 * tc[2] + 1.26172033e-10 * tc[3] -
                 6.13039750e-15 * tc[4] + 5.45269700e+00;
    // species 9: ch4
    species[9] = +1.68347900e+00 * tc[0] + 1.02372400e-02 * tc[1] -
                 1.93756450e-06 * tc[2] + 2.26186167e-10 * tc[3] -
                 1.12585575e-14 * tc[4] + 9.62339500e+00;
    // species 11: h2o2
    species[11] = +4.57316700e+00 * tc[0] + 4.33613600e-03 * tc[1] -
                  7.37344500e-07 * tc[2] + 7.82968000e-11 * tc[3] -
                  3.57913500e-15 * tc[4] + 5.01137000e-01;
    // species 12: ch2o
    species[12] = +2.99560600e+00 * tc[0] + 6.68132100e-03 * tc[1] -
                  1.31447750e-06 * tc[2] + 1.57905100e-10 * tc[3] -
                  8.03129250e-15 * tc[4] + 6.91257200e+00;
    // species 14: c2h4
    species[14] = +3.52841900e+00 * tc[0] + 1.14851800e-02 * tc[1] -
                  2.20919250e-06 * tc[2] + 2.61486700e-10 * tc[3] -
                  1.31671200e-14 * tc[4] + 2.23038900e+00;
    // species 15: c2h5
    species[15] = +7.19048000e+00 * tc[0] + 6.48407700e-03 * tc[1] -
                  3.21403250e-07 * tc[2] - 7.82626333e-11 * tc[3] +
                  9.70219250e-15 * tc[4] - 1.47808900e+01;
    // species 16: c2h2
    species[16] = +4.43677000e+00 * tc[0] + 5.37603900e-03 * tc[1] -
                  9.56408500e-07 * tc[2] + 1.09545967e-10 * tc[3] -
                  5.39177500e-15 * tc[4] - 2.80033800e+00;
    // species 17: c2h3
    species[17] = +5.93346800e+00 * tc[0] + 4.01774600e-03 * tc[1] -
                  1.98337000e-07 * tc[2] - 4.80422333e-11 * tc[3] +
                  5.94661000e-15 * tc[4] - 8.53031300e+00;
    // species 18: ch2co
    species[18] = +6.03881700e+00 * tc[0] + 5.80484000e-03 * tc[1] -
                  9.60477000e-07 * tc[2] + 9.31495000e-11 * tc[3] -
                  3.64717000e-15 * tc[4] - 7.65758100e+00;
    // species 19: hcco
    species[19] = +6.75807300e+00 * tc[0] + 2.00040000e-03 * tc[1] -
                  1.01380350e-07 * tc[2] - 3.47044000e-11 * tc[3] +
                  4.91291250e-15 * tc[4] - 9.07126200e+00;
    // species 20: ch3cho
    species[20] = +5.86865000e+00 * tc[0] + 1.07942400e-02 * tc[1] -
                  1.82276500e-06 * tc[2] + 1.80430400e-10 * tc[3] -
                  7.24211000e-15 * tc[4] - 6.01294600e+00;
    // species 24: nc3h7
    species[24] = +7.97829100e+00 * tc[0] + 1.57611300e-02 * tc[1] -
                  2.58662150e-06 * tc[2] + 2.48129733e-10 * tc[3] -
                  9.56244500e-15 * tc[4] - 1.93561100e+01;
    // species 38: c3h3
    species[38] = +8.83104700e+00 * tc[0] + 4.35719500e-03 * tc[1] -
                  2.05453350e-07 * tc[2] - 7.89574333e-11 * tc[3] +
                  1.09413000e-14 * tc[4] - 2.17791900e+01;
    // species 54: n2
    species[54] = +2.92664000e+00 * tc[0] + 1.48797700e-03 * tc[1] -
                  2.84238050e-07 * tc[2] + 3.36568000e-11 * tc[3] -
                  1.68833775e-15 * tc[4] + 5.98052800e+00;
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +3.43586219e+00 * tc[0] + 2.02235804e-04 * tc[1] -
                 5.67732060e-08 * tc[2] + 8.08150497e-11 * tc[3] -
                 1.85912758e-14 * tc[4] + 2.45014127e+00;
  } else {
    // species 4: oh
    species[4] = +2.62599754e+00 * tc[0] + 1.31992406e-03 * tc[1] -
                 1.79862335e-07 * tc[2] + 1.41876933e-11 * tc[3] -
                 4.55120040e-16 * tc[4] + 7.10667307e+00;
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +3.18310656e+00 * tc[0] + 3.66767950e-03 * tc[1] -
                  4.66192561e-07 * tc[2] - 1.08617640e-10 * tc[3] +
                  3.77849780e-14 * tc[4] + 8.39371099e+00;
    // species 32: ch3o2h
    species[32] = +3.23442817e+00 * tc[0] + 1.90129767e-02 * tc[1] -
                  5.66931435e-06 * tc[2] + 1.13435551e-09 * tc[3] -
                  1.02957555e-13 * tc[4] + 9.25623949e+00;
    // species 47: c7h15o2-2
    species[47] = +3.55252917e-01 * tc[0] + 9.42381007e-02 * tc[1] -
                  3.33477553e-05 * tc[2] + 8.49318610e-09 * tc[3] -
                  1.03302776e-12 * tc[4] + 3.29433435e+01;
    // species 48: c7h15o2-3
    species[48] = +3.55252917e-01 * tc[0] + 9.42381007e-02 * tc[1] -
                  3.33477553e-05 * tc[2] + 8.49318610e-09 * tc[3] -
                  1.03302776e-12 * tc[4] + 3.29433435e+01;
    // species 49: c7h15o2-4
    species[49] = +3.55252917e-01 * tc[0] + 9.42381007e-02 * tc[1] -
                  3.33477553e-05 * tc[2] + 8.49318610e-09 * tc[3] -
                  1.03302776e-12 * tc[4] + 3.22538619e+01;
  } else {
    // species 10: ho2
    species[10] = +4.10547423e+00 * tc[0] + 2.38452835e-03 * tc[1] -
                  4.03173995e-07 * tc[2] + 4.13972410e-11 * tc[3] -
                  1.79100027e-15 * tc[4] + 3.12515836e+00;
    // species 32: ch3o2h
    species[32] = +8.43117091e+00 * tc[0] + 8.06817909e-03 * tc[1] -
                  1.38547461e-06 * tc[2] + 1.43777414e-10 * tc[3] -
                  6.26730365e-15 * tc[4] - 1.91170629e+01;
    // species 47: c7h15o2-2
    species[47] = +2.60535640e+01 * tc[0] + 3.43831688e-02 * tc[1] -
                  5.93566235e-06 * tc[2] + 6.18167470e-10 * tc[3] -
                  2.70130997e-14 * tc[4] - 1.05407563e+02;
    // species 48: c7h15o2-3
    species[48] = +2.60535640e+01 * tc[0] + 3.43831688e-02 * tc[1] -
                  5.93566235e-06 * tc[2] + 6.18167470e-10 * tc[3] -
                  2.70130997e-14 * tc[4] - 1.05407563e+02;
    // species 49: c7h15o2-4
    species[49] = +2.60535640e+01 * tc[0] + 3.43831688e-02 * tc[1] -
                  5.93566235e-06 * tc[2] + 6.18167470e-10 * tc[3] -
                  2.70130997e-14 * tc[4] - 1.06097045e+02;
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = -2.52854344e-02 * tc[0] + 2.40764754e-02 * tc[1] -
                  5.59467360e-06 * tc[2] + 6.94469670e-10 * tc[3] -
                  1.32467154e-14 * tc[4] + 2.11648750e+01;
  } else {
    // species 13: c2h6
    species[13] = +6.10683385e+00 * tc[0] + 1.29236361e-02 * tc[1] -
                  2.21263598e-06 * tc[2] + 2.29130575e-10 * tc[3] -
                  9.97254330e-15 * tc[4] - 1.30081250e+01;
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +2.53983100e+00 * tc[0] + 1.63343700e-02 * tc[1] -
                  8.82475000e-07 * tc[2] - 1.54912167e-09 * tc[3] +
                  4.32282750e-13 * tc[4] + 9.93570200e+00;
  } else {
    // species 21: c3h4-a
    species[21] = +9.77625600e+00 * tc[0] + 5.30213800e-03 * tc[1] -
                  1.85055900e-07 * tc[2] - 1.00879533e-10 * tc[3] +
                  1.27239525e-14 * tc[4] - 3.07706100e+01;
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = +3.94615444e-01 * tc[0] + 2.89107662e-02 * tc[1] -
                  7.74434040e-06 * tc[2] + 1.29604736e-09 * tc[3] -
                  8.44725880e-14 * tc[4] + 2.19003736e+01;
    // species 46: c7h15o2-1
    species[46] = +1.20888552e+00 * tc[0] + 8.84061706e-02 * tc[1] -
                  2.89930630e-05 * tc[2] + 6.78582297e-09 * tc[3] -
                  7.66150840e-13 * tc[4] + 2.98117097e+01;
    // species 51: c7h14ooh1-3o2
    species[51] = +1.89718004e+00 * tc[0] + 1.06229796e-01 * tc[1] -
                  4.01385109e-05 * tc[2] + 1.07883031e-08 * tc[3] -
                  1.36462618e-12 * tc[4] + 3.02474612e+01;
  } else {
    // species 22: c3h6
    species[22] = +8.01595958e+00 * tc[0] + 1.37023634e-02 * tc[1] -
                  2.33124867e-06 * tc[2] + 2.40418134e-10 * tc[3] -
                  1.04342532e-14 * tc[4] - 2.00160668e+01;
    // species 46: c7h15o2-1
    species[46] = +2.52656556e+01 * tc[0] + 3.50803587e-02 * tc[1] -
                  6.05894005e-06 * tc[2] + 6.31202687e-10 * tc[3] -
                  2.75885313e-14 * tc[4] - 1.00704794e+02;
    // species 51: c7h14ooh1-3o2
    species[51] = +3.20144349e+01 * tc[0] + 3.40055996e-02 * tc[1] -
                  5.92079280e-06 * tc[2] + 6.20201157e-10 * tc[3] -
                  2.72127530e-14 * tc[4] - 1.31118243e+02;
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = -1.43095121e+00 * tc[0] + 4.78706062e-02 * tc[1] -
                  2.07723400e-05 * tc[2] + 6.38498507e-09 * tc[3] -
                  8.92896267e-13 * tc[4] + 2.90825833e+01;
  } else {
    // species 23: c4h6
    species[23] = +1.11633789e+01 * tc[0] + 1.37163965e-02 * tc[1] -
                  2.34857892e-06 * tc[2] + 2.43231279e-10 * tc[3] -
                  1.05871551e-14 * tc[4] - 3.69847949e+01;
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = -3.50508352e-01 * tc[0] + 4.26511243e-02 * tc[1] -
                  1.45489687e-05 * tc[2] + 3.51346380e-09 * tc[3] -
                  4.00149635e-13 * tc[4] + 2.67295696e+01;
    // species 26: c4h8-1
    species[26] = -8.31372089e-01 * tc[0] + 4.52580978e-02 * tc[1] -
                  1.46829280e-05 * tc[2] + 3.34068120e-09 * tc[3] -
                  3.57979200e-13 * tc[4] + 2.95084236e+01;
    // species 29: c5h9
    species[29] = -1.38013950e+00 * tc[0] + 5.57608487e-02 * tc[1] -
                  1.85071964e-05 * tc[2] + 4.22946337e-09 * tc[3] -
                  4.46347087e-13 * tc[4] + 3.26441304e+01;
    // species 30: c5h10-1
    species[30] = -1.06223481e+00 * tc[0] + 5.74218294e-02 * tc[1] -
                  1.87243445e-05 * tc[2] + 4.24549963e-09 * tc[3] -
                  4.49024472e-13 * tc[4] + 3.22739790e+01;
  } else {
    // species 25: c4h7
    species[25] = +1.12103578e+01 * tc[0] + 1.60483196e-02 * tc[1] -
                  2.73251146e-06 * tc[2] + 2.81980351e-10 * tc[3] -
                  1.22443185e-14 * tc[4] - 3.55593015e+01;
    // species 26: c4h8-1
    species[26] = +1.13508668e+01 * tc[0] + 1.80617877e-02 * tc[1] -
                  3.08046515e-06 * tc[2] + 3.18217653e-10 * tc[3] -
                  1.38272410e-14 * tc[4] - 3.64369438e+01;
    // species 29: c5h9
    species[29] = +1.41860454e+01 * tc[0] + 2.07128899e-02 * tc[1] -
                  3.53480309e-06 * tc[2] + 3.65357110e-10 * tc[3] -
                  1.58830552e-14 * tc[4] - 5.14501773e+01;
    // species 30: c5h10-1
    species[30] = +1.45851539e+01 * tc[0] + 2.24072471e-02 * tc[1] -
                  3.81674012e-06 * tc[2] + 3.93963220e-10 * tc[3] -
                  1.71096285e-14 * tc[4] - 5.23683936e+01;
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = +1.80339187e+00 * tc[0] + 3.01407085e-02 * tc[1] -
                  9.67527760e-06 * tc[2] + 2.12733011e-09 * tc[3] -
                  2.16525795e-13 * tc[4] + 1.78046408e+01;
    // species 45: nc7h16
    species[45] = -1.26836187e+00 * tc[0] + 8.54355820e-02 * tc[1] -
                  2.62673393e-05 * tc[2] + 5.43152403e-09 * tc[3] -
                  5.05987313e-13 * tc[4] + 3.53732912e+01;
  } else {
    // species 27: ch3coch2
    species[27] = +1.02303975e+01 * tc[0] + 1.16494161e-02 * tc[1] -
                  2.00502768e-06 * tc[2] + 2.08401749e-10 * tc[3] -
                  9.09460905e-15 * tc[4] - 2.79197220e+01;
    // species 45: nc7h16
    species[45] = +2.22148969e+01 * tc[0] + 3.47675750e-02 * tc[1] -
                  5.92035645e-06 * tc[2] + 6.10994927e-10 * tc[3] -
                  2.65325665e-14 * tc[4] - 9.23040196e+01;
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = +2.16308444e+00 * tc[0] + 2.95501264e-02 * tc[1] -
                  7.62231260e-06 * tc[2] + 1.16501316e-09 * tc[3] -
                  5.97241567e-14 * tc[4] + 1.61153348e+01;
    // species 40: nc3h7cho
    species[40] = +1.87415959e+00 * tc[0] + 4.19240315e-02 * tc[1] -
                  1.17574389e-05 * tc[2] + 2.08971224e-09 * tc[3] -
                  1.52360977e-13 * tc[4] + 1.91568574e+01;
  } else {
    // species 28: c2h5cho
    species[28] = +1.02427695e+01 * tc[0] + 1.39641989e-02 * tc[1] -
                  2.38124000e-06 * tc[2] + 2.46035235e-10 * tc[3] -
                  1.06939876e-14 * tc[4] - 2.85346843e+01;
    // species 40: nc3h7cho
    species[40] = +1.35988068e+01 * tc[0] + 1.81652474e-02 * tc[1] -
                  3.08922229e-06 * tc[2] + 3.18660069e-10 * tc[3] -
                  1.38360739e-14 * tc[4] - 4.51790228e+01;
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = +4.26146906e+00 * tc[0] + 1.00873599e-02 * tc[1] -
                  1.60753092e-06 * tc[2] + 6.98030890e-11 * tc[3] +
                  1.04584776e-14 * tc[4] + 5.16330320e+00;
    // species 36: pc4h9o2
    species[36] = +1.94363650e+00 * tc[0] + 5.15513163e-02 * tc[1] -
                  1.64142200e-05 * tc[2] + 3.76882867e-09 * tc[3] -
                  4.25296515e-13 * tc[4] + 2.13503149e+01;
  } else {
    // species 31: ch3o2
    species[31] = +5.95787891e+00 * tc[0] + 7.90728626e-03 * tc[1] -
                  1.34123117e-06 * tc[2] + 1.37963779e-10 * tc[3] -
                  5.97518325e-15 * tc[4] - 4.71963886e+00;
    // species 36: pc4h9o2
    species[36] = +1.57845448e+01 * tc[0] + 2.15210910e-02 * tc[1] -
                  3.72454509e-06 * tc[2] + 3.88526903e-10 * tc[3] -
                  1.69971402e-14 * tc[4] - 5.40388525e+01;
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +1.36242013e+00 * tc[0] + 3.15273972e-02 * tc[1] -
                  1.50109468e-05 * tc[2] + 4.93890373e-09 * tc[3] -
                  7.19928825e-13 * tc[4] + 1.72626546e+01;
  } else {
    // species 33: c2h3co
    species[33] = +9.37467676e+00 * tc[0] + 7.91296900e-03 * tc[1] -
                  1.33599140e-06 * tc[2] + 1.37038477e-10 * tc[3] -
                  5.92447452e-15 * tc[4] - 2.40892696e+01;
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = +2.92355162e-01 * tc[0] + 3.54321417e-02 * tc[1] -
                  1.47468162e-05 * tc[2] + 4.27000413e-09 * tc[3] -
                  5.65360270e-13 * tc[4] + 2.28878280e+01;
  } else {
    // species 34: c2h3cho
    species[34] = +1.04184959e+01 * tc[0] + 9.48963321e-03 * tc[1] -
                  1.64655265e-06 * tc[2] + 1.72093068e-10 * tc[3] -
                  7.53968227e-15 * tc[4] - 3.07235061e+01;
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.22400728e+00 * tc[0] + 7.04994620e-02 * tc[1] -
                  2.83489413e-05 * tc[2] + 8.08759170e-09 * tc[3] -
                  1.07428865e-12 * tc[4] + 2.38371533e+01;
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.23244015e+01 * tc[0] + 2.05474775e-02 * tc[1] -
                  3.59538174e-06 * tc[2] + 3.77871787e-10 * tc[3] -
                  1.66186096e-14 * tc[4] - 8.32666070e+01;
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = -5.29131958e-01 * tc[0] + 3.34559100e-02 * tc[1] -
                  1.26700514e-05 * tc[2] + 3.42885847e-09 * tc[3] -
                  4.33145850e-13 * tc[4] + 2.53067131e+01;
  } else {
    // species 37: c3h5-a
    species[37] = +8.45883958e+00 * tc[0] + 1.12695483e-02 * tc[1] -
                  1.91896432e-06 * tc[2] + 1.98019706e-10 * tc[3] -
                  8.59795075e-15 * tc[4] - 2.25809450e+01;
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = +2.74883461e+00 * tc[0] + 5.86936745e-02 * tc[1] -
                  2.24802947e-05 * tc[2] + 6.10667100e-09 * tc[3] -
                  7.79413423e-13 * tc[4] + 1.88072090e+01;
  } else {
    // species 39: nc4ket13
    species[39] = +1.96430808e+01 * tc[0] + 1.80940566e-02 * tc[1] -
                  3.16531616e-06 * tc[2] + 3.32620133e-10 * tc[3] -
                  1.46269114e-14 * tc[4] - 7.16905094e+01;
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = +1.54013856e+00 * tc[0] + 4.39486258e-02 * tc[1] -
                  1.48501211e-05 * tc[2] + 3.51651043e-09 * tc[3] -
                  3.96496922e-13 * tc[4] + 1.99706641e+01;
  } else {
    // species 41: c2h5coch2
    species[41] = +1.42098738e+01 * tc[0] + 1.57866459e-02 * tc[1] -
                  2.75264591e-06 * tc[2] + 2.88623513e-10 * tc[3] -
                  1.26728332e-14 * tc[4] - 4.87132911e+01;
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = +9.58299271e-01 * tc[0] + 5.68162532e-02 * tc[1] -
                  1.99556391e-05 * tc[2] + 5.08905047e-09 * tc[3] -
                  6.23052617e-13 * tc[4] + 2.34112884e+01;
    // species 50: c7h14ooh4-3
    species[50] = +8.49786005e-01 * tc[0] + 9.25107196e-02 * tc[1] -
                  3.12679917e-05 * tc[2] + 7.26267967e-09 * tc[3] -
                  7.81800995e-13 * tc[4] + 3.26102671e+01;
  } else {
    // species 42: nc3h7coch2
    species[42] = +1.61502419e+01 * tc[0] + 2.14093466e-02 * tc[1] -
                  3.68029807e-06 * tc[2] + 3.82189387e-10 * tc[3] -
                  1.66678180e-14 * tc[4] - 5.83864884e+01;
    // species 50: c7h14ooh4-3
    species[50] = +2.74034778e+01 * tc[0] + 3.27527893e-02 * tc[1] -
                  5.64958850e-06 * tc[2] + 5.88148830e-10 * tc[3] -
                  2.56967362e-14 * tc[4] - 1.10891460e+02;
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = +1.59663472e+00 * tc[0] + 5.43541416e-02 * tc[1] -
                  1.60510326e-05 * tc[2] + 3.11924520e-09 * tc[3] -
                  2.66722330e-13 * tc[4] + 2.21281498e+01;
  } else {
    // species 43: nc4h9cho
    species[43] = +1.67965163e+01 * tc[0] + 2.25684519e-02 * tc[1] -
                  3.83815794e-06 * tc[2] + 3.95897897e-10 * tc[3] -
                  1.71886389e-14 * tc[4] - 6.09063312e+01;
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = +2.43530238e+00 * tc[0] + 4.93682376e-02 * tc[1] -
                  1.44941541e-05 * tc[2] + 2.80954604e-09 * tc[3] -
                  2.42071793e-13 * tc[4] + 1.92695879e+01;
  } else {
    // species 44: nc4h9co
    species[44] = +1.61782939e+01 * tc[0] + 2.07991920e-02 * tc[1] -
                  3.55893946e-06 * tc[2] + 3.68533250e-10 * tc[3] -
                  1.60424297e-14 * tc[4] - 5.58943579e+01;
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = -5.50036450e+00 * tc[0] + 1.00155088e-01 * tc[1] -
                  3.64967928e-05 * tc[2] + 9.31147567e-09 * tc[3] -
                  1.10561424e-12 * tc[4] + 5.64768482e+01;
  } else {
    // species 52: c7h14o1-3
    species[52] = +2.26918916e+01 * tc[0] + 3.32510472e-02 * tc[1] -
                  5.72288825e-06 * tc[2] + 5.94851783e-10 * tc[3] -
                  2.59602780e-14 * tc[4] - 9.46346563e+01;
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = -5.39477206e+00 * tc[0] + 1.01846577e-01 * tc[1] -
                  3.80023118e-05 * tc[2] + 9.88460067e-09 * tc[3] -
                  1.18713592e-12 * tc[4] + 5.51731319e+01;
  } else {
    // species 53: c7h14o2-4
    species[53] = +2.32692731e+01 * tc[0] + 3.25585391e-02 * tc[1] -
                  5.58124530e-06 * tc[2] + 5.78578860e-10 * tc[3] -
                  2.52033037e-14 * tc[4] - 9.79457278e+01;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[55];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 55; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: h
    result +=
      y[0] *
      (+2.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
       0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.9920634920634921;
    // species 1: h2
    result +=
      y[1] *
      (+3.29812400e+00 + 8.24944200e-04 * tc[1] - 8.14301500e-07 * tc[2] -
       9.47543400e-11 * tc[3] + 4.13487200e-13 * tc[4]) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+2.94642900e+00 - 1.63816600e-03 * tc[1] + 2.42103200e-06 * tc[2] -
       1.60284300e-09 * tc[3] + 3.89069600e-13 * tc[4]) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+3.21293600e+00 + 1.12748600e-03 * tc[1] - 5.75615000e-07 * tc[2] +
       1.31387700e-09 * tc[3] - 8.76855400e-13 * tc[4]) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+3.38684200e+00 + 3.47498200e-03 * tc[1] - 6.35469600e-06 * tc[2] +
       6.96858100e-09 * tc[3] - 2.50658800e-12 * tc[4]) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+3.26245200e+00 + 1.51194100e-03 * tc[1] - 3.88175500e-06 * tc[2] +
       5.58194400e-09 * tc[3] - 2.47495100e-12 * tc[4]) *
      0.0357015351660121;
    // species 7: co2
    result +=
      y[7] *
      (+2.27572500e+00 + 9.92207200e-03 * tc[1] - 1.04091100e-05 * tc[2] +
       6.86668700e-09 * tc[3] - 2.11728000e-12 * tc[4]) *
      0.0227226249176305;
    // species 8: ch3
    result +=
      y[8] *
      (+2.43044300e+00 + 1.11241000e-02 * tc[1] - 1.68022000e-05 * tc[2] +
       1.62182900e-08 * tc[3] - 5.86495300e-12 * tc[4]) *
      0.0665114732291320;
    // species 9: ch4
    result +=
      y[9] *
      (+7.78741500e-01 + 1.74766800e-02 * tc[1] - 2.78340900e-05 * tc[2] +
       3.04970800e-08 * tc[3] - 1.22393100e-11 * tc[4]) *
      0.0623324814560868;
    // species 11: h2o2
    result +=
      y[11] *
      (+3.38875400e+00 + 6.56922600e-03 * tc[1] - 1.48501300e-07 * tc[2] -
       4.62580600e-09 * tc[3] + 2.47151500e-12 * tc[4]) *
      0.0293996589639560;
    // species 12: ch2o
    result +=
      y[12] *
      (+1.65273100e+00 + 1.26314400e-02 * tc[1] - 1.88816800e-05 * tc[2] +
       2.05003100e-08 * tc[3] - 8.41323700e-12 * tc[4]) *
      0.0333044694598015;
    // species 14: c2h4
    result +=
      y[14] *
      (-8.61488000e-01 + 2.79616300e-02 * tc[1] - 3.38867700e-05 * tc[2] +
       2.78515200e-08 * tc[3] - 9.73787900e-12 * tc[4]) *
      0.0356455407428531;
    // species 15: c2h5
    result +=
      y[15] *
      (+2.69070200e+00 + 8.71913300e-03 * tc[1] + 4.41983900e-06 * tc[2] +
       9.33870300e-10 * tc[3] - 3.92777300e-12 * tc[4]) *
      0.0344091941366733;
    // species 16: c2h2
    result +=
      y[16] *
      (+2.01356200e+00 + 1.51904500e-02 * tc[1] - 1.61631900e-05 * tc[2] +
       9.07899200e-09 * tc[3] - 1.91274600e-12 * tc[4]) *
      0.0384054074813734;
    // species 17: c2h3
    result +=
      y[17] *
      (+2.45927600e+00 + 7.37147600e-03 * tc[1] + 2.10987300e-06 * tc[2] -
       1.32164200e-09 * tc[3] - 1.18478400e-12 * tc[4]) *
      0.0369740442209569;
    // species 18: ch2co
    result +=
      y[18] *
      (+2.97497100e+00 + 1.21187100e-02 * tc[1] - 2.34504600e-06 * tc[2] -
       6.46668500e-09 * tc[3] + 3.90564900e-12 * tc[4]) *
      0.0237885672145967;
    // species 19: hcco
    result +=
      y[19] *
      (+5.04796500e+00 + 4.45347800e-03 * tc[1] + 2.26828300e-07 * tc[2] -
       1.48209500e-09 * tc[3] + 2.25074200e-13 * tc[4]) *
      0.0243730044602598;
    // species 20: ch3cho
    result +=
      y[20] *
      (+2.50569500e+00 + 1.33699100e-02 * tc[1] + 4.67195300e-06 * tc[2] -
       1.12814000e-08 * tc[3] + 4.26356600e-12 * tc[4]) *
      0.0226999296302181;
    // species 24: nc3h7
    result +=
      y[24] *
      (+1.92253700e+00 + 2.47892700e-02 * tc[1] + 1.81024900e-06 * tc[2] -
       1.78326600e-08 * tc[3] + 8.58299600e-12 * tc[4]) *
      0.0232077792476038;
    // species 38: c3h3
    result +=
      y[38] *
      (+4.75420000e+00 + 1.10802800e-02 * tc[1] + 2.79332300e-07 * tc[2] -
       5.47921200e-09 * tc[3] + 1.94962900e-12 * tc[4]) *
      0.0256036049875823;
    // species 54: n2
    result +=
      y[54] *
      (+3.29867700e+00 + 1.40824000e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485500e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 0: h
    result +=
      y[0] *
      (+2.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
       0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.9920634920634921;
    // species 1: h2
    result +=
      y[1] *
      (+2.99142300e+00 + 7.00064400e-04 * tc[1] - 5.63382900e-08 * tc[2] -
       9.23157800e-12 * tc[3] + 1.58275200e-15 * tc[4]) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+2.54206000e+00 - 2.75506200e-05 * tc[1] - 3.10280300e-09 * tc[2] +
       4.55106700e-12 * tc[3] - 4.36805200e-16 * tc[4]) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+3.69757800e+00 + 6.13519700e-04 * tc[1] - 1.25884200e-07 * tc[2] +
       1.77528100e-11 * tc[3] - 1.13643500e-15 * tc[4]) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+2.67214600e+00 + 3.05629300e-03 * tc[1] - 8.73026000e-07 * tc[2] +
       1.20099600e-10 * tc[3] - 6.39161800e-15 * tc[4]) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+3.02507800e+00 + 1.44268900e-03 * tc[1] - 5.63082800e-07 * tc[2] +
       1.01858100e-10 * tc[3] - 6.91095200e-15 * tc[4]) *
      0.0357015351660121;
    // species 7: co2
    result +=
      y[7] *
      (+4.45362300e+00 + 3.14016900e-03 * tc[1] - 1.27841100e-06 * tc[2] +
       2.39399700e-10 * tc[3] - 1.66903300e-14 * tc[4]) *
      0.0227226249176305;
    // species 8: ch3
    result +=
      y[8] *
      (+2.84405200e+00 + 6.13797400e-03 * tc[1] - 2.23034500e-06 * tc[2] +
       3.78516100e-10 * tc[3] - 2.45215900e-14 * tc[4]) *
      0.0665114732291320;
    // species 9: ch4
    result +=
      y[9] *
      (+1.68347900e+00 + 1.02372400e-02 * tc[1] - 3.87512900e-06 * tc[2] +
       6.78558500e-10 * tc[3] - 4.50342300e-14 * tc[4]) *
      0.0623324814560868;
    // species 11: h2o2
    result +=
      y[11] *
      (+4.57316700e+00 + 4.33613600e-03 * tc[1] - 1.47468900e-06 * tc[2] +
       2.34890400e-10 * tc[3] - 1.43165400e-14 * tc[4]) *
      0.0293996589639560;
    // species 12: ch2o
    result +=
      y[12] *
      (+2.99560600e+00 + 6.68132100e-03 * tc[1] - 2.62895500e-06 * tc[2] +
       4.73715300e-10 * tc[3] - 3.21251700e-14 * tc[4]) *
      0.0333044694598015;
    // species 14: c2h4
    result +=
      y[14] *
      (+3.52841900e+00 + 1.14851800e-02 * tc[1] - 4.41838500e-06 * tc[2] +
       7.84460100e-10 * tc[3] - 5.26684800e-14 * tc[4]) *
      0.0356455407428531;
    // species 15: c2h5
    result +=
      y[15] *
      (+7.19048000e+00 + 6.48407700e-03 * tc[1] - 6.42806500e-07 * tc[2] -
       2.34787900e-10 * tc[3] + 3.88087700e-14 * tc[4]) *
      0.0344091941366733;
    // species 16: c2h2
    result +=
      y[16] *
      (+4.43677000e+00 + 5.37603900e-03 * tc[1] - 1.91281700e-06 * tc[2] +
       3.28637900e-10 * tc[3] - 2.15671000e-14 * tc[4]) *
      0.0384054074813734;
    // species 17: c2h3
    result +=
      y[17] *
      (+5.93346800e+00 + 4.01774600e-03 * tc[1] - 3.96674000e-07 * tc[2] -
       1.44126700e-10 * tc[3] + 2.37864400e-14 * tc[4]) *
      0.0369740442209569;
    // species 18: ch2co
    result +=
      y[18] *
      (+6.03881700e+00 + 5.80484000e-03 * tc[1] - 1.92095400e-06 * tc[2] +
       2.79448500e-10 * tc[3] - 1.45886800e-14 * tc[4]) *
      0.0237885672145967;
    // species 19: hcco
    result +=
      y[19] *
      (+6.75807300e+00 + 2.00040000e-03 * tc[1] - 2.02760700e-07 * tc[2] -
       1.04113200e-10 * tc[3] + 1.96516500e-14 * tc[4]) *
      0.0243730044602598;
    // species 20: ch3cho
    result +=
      y[20] *
      (+5.86865000e+00 + 1.07942400e-02 * tc[1] - 3.64553000e-06 * tc[2] +
       5.41291200e-10 * tc[3] - 2.89684400e-14 * tc[4]) *
      0.0226999296302181;
    // species 24: nc3h7
    result +=
      y[24] *
      (+7.97829100e+00 + 1.57611300e-02 * tc[1] - 5.17324300e-06 * tc[2] +
       7.44389200e-10 * tc[3] - 3.82497800e-14 * tc[4]) *
      0.0232077792476038;
    // species 38: c3h3
    result +=
      y[38] *
      (+8.83104700e+00 + 4.35719500e-03 * tc[1] - 4.10906700e-07 * tc[2] -
       2.36872300e-10 * tc[3] + 4.37652000e-14 * tc[4]) *
      0.0256036049875823;
    // species 54: n2
    result +=
      y[54] *
      (+2.92664000e+00 + 1.48797700e-03 * tc[1] - 5.68476100e-07 * tc[2] +
       1.00970400e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 4: oh
    result +=
      y[4] *
      (+3.43586219e+00 + 2.02235804e-04 * tc[1] - 1.13546412e-07 * tc[2] +
       2.42445149e-10 * tc[3] - 7.43651031e-14 * tc[4]) *
      0.0587993179279120;
  } else {
    // species 4: oh
    result +=
      y[4] *
      (+2.62599754e+00 + 1.31992406e-03 * tc[1] - 3.59724670e-07 * tc[2] +
       4.25630800e-11 * tc[3] - 1.82048016e-15 * tc[4]) *
      0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 10: ho2
    result +=
      y[10] *
      (+3.18310656e+00 + 3.66767950e-03 * tc[1] - 9.32385122e-07 * tc[2] -
       3.25852919e-10 * tc[3] + 1.51139912e-13 * tc[4]) *
      0.0302975216627280;
    // species 32: ch3o2h
    result +=
      y[32] *
      (+3.23442817e+00 + 1.90129767e-02 * tc[1] - 1.13386287e-05 * tc[2] +
       3.40306653e-09 * tc[3] - 4.11830222e-13 * tc[4]) *
      0.0208155533814866;
    // species 47: c7h15o2-2
    result +=
      y[47] *
      (+3.55252917e-01 + 9.42381007e-02 * tc[1] - 6.66955106e-05 * tc[2] +
       2.54795583e-08 * tc[3] - 4.13211105e-12 * tc[4]) *
      0.0076222417012843;
    // species 48: c7h15o2-3
    result +=
      y[48] *
      (+3.55252917e-01 + 9.42381007e-02 * tc[1] - 6.66955106e-05 * tc[2] +
       2.54795583e-08 * tc[3] - 4.13211105e-12 * tc[4]) *
      0.0076222417012843;
    // species 49: c7h15o2-4
    result +=
      y[49] *
      (+3.55252917e-01 + 9.42381007e-02 * tc[1] - 6.66955106e-05 * tc[2] +
       2.54795583e-08 * tc[3] - 4.13211105e-12 * tc[4]) *
      0.0076222417012843;
  } else {
    // species 10: ho2
    result +=
      y[10] *
      (+4.10547423e+00 + 2.38452835e-03 * tc[1] - 8.06347989e-07 * tc[2] +
       1.24191723e-10 * tc[3] - 7.16400108e-15 * tc[4]) *
      0.0302975216627280;
    // species 32: ch3o2h
    result +=
      y[32] *
      (+8.43117091e+00 + 8.06817909e-03 * tc[1] - 2.77094921e-06 * tc[2] +
       4.31332243e-10 * tc[3] - 2.50692146e-14 * tc[4]) *
      0.0208155533814866;
    // species 47: c7h15o2-2
    result +=
      y[47] *
      (+2.60535640e+01 + 3.43831688e-02 * tc[1] - 1.18713247e-05 * tc[2] +
       1.85450241e-09 * tc[3] - 1.08052399e-13 * tc[4]) *
      0.0076222417012843;
    // species 48: c7h15o2-3
    result +=
      y[48] *
      (+2.60535640e+01 + 3.43831688e-02 * tc[1] - 1.18713247e-05 * tc[2] +
       1.85450241e-09 * tc[3] - 1.08052399e-13 * tc[4]) *
      0.0076222417012843;
    // species 49: c7h15o2-4
    result +=
      y[49] *
      (+2.60535640e+01 + 3.43831688e-02 * tc[1] - 1.18713247e-05 * tc[2] +
       1.85450241e-09 * tc[3] - 1.08052399e-13 * tc[4]) *
      0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 13: c2h6
    result +=
      y[13] *
      (-2.52854344e-02 + 2.40764754e-02 * tc[1] - 1.11893472e-05 * tc[2] +
       2.08340901e-09 * tc[3] - 5.29868616e-14 * tc[4]) *
      0.0332557366145660;
  } else {
    // species 13: c2h6
    result +=
      y[13] *
      (+6.10683385e+00 + 1.29236361e-02 * tc[1] - 4.42527196e-06 * tc[2] +
       6.87391726e-10 * tc[3] - 3.98901732e-14 * tc[4]) *
      0.0332557366145660;
  }

  // species with midpoint at T=1400 kelvin
  if (tT < 1400) {
    // species 21: c3h4-a
    result +=
      y[21] *
      (+2.53983100e+00 + 1.63343700e-02 * tc[1] - 1.76495000e-06 * tc[2] -
       4.64736500e-09 * tc[3] + 1.72913100e-12 * tc[4]) *
      0.0249594409085237;
  } else {
    // species 21: c3h4-a
    result +=
      y[21] *
      (+9.77625600e+00 + 5.30213800e-03 * tc[1] - 3.70111800e-07 * tc[2] -
       3.02638600e-10 * tc[3] + 5.08958100e-14 * tc[4]) *
      0.0249594409085237;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 22: c3h6
    result +=
      y[22] *
      (+3.94615444e-01 + 2.89107662e-02 * tc[1] - 1.54886808e-05 * tc[2] +
       3.88814209e-09 * tc[3] - 3.37890352e-13 * tc[4]) *
      0.0237636938285687;
    // species 46: c7h15o2-1
    result +=
      y[46] *
      (+1.20888552e+00 + 8.84061706e-02 * tc[1] - 5.79861260e-05 * tc[2] +
       2.03574689e-08 * tc[3] - 3.06460336e-12 * tc[4]) *
      0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result +=
      y[51] *
      (+1.89718004e+00 + 1.06229796e-01 * tc[1] - 8.02770218e-05 * tc[2] +
       3.23649093e-08 * tc[3] - 5.45850472e-12 * tc[4]) *
      0.0061277138112542;
  } else {
    // species 22: c3h6
    result +=
      y[22] *
      (+8.01595958e+00 + 1.37023634e-02 * tc[1] - 4.66249733e-06 * tc[2] +
       7.21254402e-10 * tc[3] - 4.17370126e-14 * tc[4]) *
      0.0237636938285687;
    // species 46: c7h15o2-1
    result +=
      y[46] *
      (+2.52656556e+01 + 3.50803587e-02 * tc[1] - 1.21178801e-05 * tc[2] +
       1.89360806e-09 * tc[3] - 1.10354125e-13 * tc[4]) *
      0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result +=
      y[51] *
      (+3.20144349e+01 + 3.40055996e-02 * tc[1] - 1.18415856e-05 * tc[2] +
       1.86060347e-09 * tc[3] - 1.08851012e-13 * tc[4]) *
      0.0061277138112542;
  }

  // species with midpoint at T=1398 kelvin
  if (tT < 1398) {
    // species 23: c4h6
    result +=
      y[23] *
      (-1.43095121e+00 + 4.78706062e-02 * tc[1] - 4.15446800e-05 * tc[2] +
       1.91549552e-08 * tc[3] - 3.57158507e-12 * tc[4]) *
      0.0184870221104784;
  } else {
    // species 23: c4h6
    result +=
      y[23] *
      (+1.11633789e+01 + 1.37163965e-02 * tc[1] - 4.69715783e-06 * tc[2] +
       7.29693836e-10 * tc[3] - 4.23486203e-14 * tc[4]) *
      0.0184870221104784;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 25: c4h7
    result +=
      y[25] *
      (-3.50508352e-01 + 4.26511243e-02 * tc[1] - 2.90979373e-05 * tc[2] +
       1.05403914e-08 * tc[3] - 1.60059854e-12 * tc[4]) *
      0.0181488203266788;
    // species 26: c4h8-1
    result +=
      y[26] *
      (-8.31372089e-01 + 4.52580978e-02 * tc[1] - 2.93658559e-05 * tc[2] +
       1.00220436e-08 * tc[3] - 1.43191680e-12 * tc[4]) *
      0.0178227703714265;
    // species 29: c5h9
    result +=
      y[29] *
      (-1.38013950e+00 + 5.57608487e-02 * tc[1] - 3.70143928e-05 * tc[2] +
       1.26883901e-08 * tc[3] - 1.78538835e-12 * tc[4]) *
      0.0144661275623128;
    // species 30: c5h10-1
    result +=
      y[30] *
      (-1.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
  } else {
    // species 25: c4h7
    result +=
      y[25] *
      (+1.12103578e+01 + 1.60483196e-02 * tc[1] - 5.46502292e-06 * tc[2] +
       8.45941053e-10 * tc[3] - 4.89772739e-14 * tc[4]) *
      0.0181488203266788;
    // species 26: c4h8-1
    result +=
      y[26] *
      (+1.13508668e+01 + 1.80617877e-02 * tc[1] - 6.16093029e-06 * tc[2] +
       9.54652959e-10 * tc[3] - 5.53089641e-14 * tc[4]) *
      0.0178227703714265;
    // species 29: c5h9
    result +=
      y[29] *
      (+1.41860454e+01 + 2.07128899e-02 * tc[1] - 7.06960617e-06 * tc[2] +
       1.09607133e-09 * tc[3] - 6.35322208e-14 * tc[4]) *
      0.0144661275623128;
    // species 30: c5h10-1
    result +=
      y[30] *
      (+1.45851539e+01 + 2.24072471e-02 * tc[1] - 7.63348025e-06 * tc[2] +
       1.18188966e-09 * tc[3] - 6.84385139e-14 * tc[4]) *
      0.0142582162971412;
  }

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 27: ch3coch2
    result +=
      y[27] *
      (+1.80339187e+00 + 3.01407085e-02 * tc[1] - 1.93505552e-05 * tc[2] +
       6.38199034e-09 * tc[3] - 8.66103180e-13 * tc[4]) *
      0.0175217269414073;
    // species 45: nc7h16
    result +=
      y[45] *
      (-1.26836187e+00 + 8.54355820e-02 * tc[1] - 5.25346786e-05 * tc[2] +
       1.62945721e-08 * tc[3] - 2.02394925e-12 * tc[4]) *
      0.0099795419390250;
  } else {
    // species 27: ch3coch2
    result +=
      y[27] *
      (+1.02303975e+01 + 1.16494161e-02 * tc[1] - 4.01005537e-06 * tc[2] +
       6.25205246e-10 * tc[3] - 3.63784362e-14 * tc[4]) *
      0.0175217269414073;
    // species 45: nc7h16
    result +=
      y[45] *
      (+2.22148969e+01 + 3.47675750e-02 * tc[1] - 1.18407129e-05 * tc[2] +
       1.83298478e-09 * tc[3] - 1.06130266e-13 * tc[4]) *
      0.0099795419390250;
  }

  // species with midpoint at T=1378 kelvin
  if (tT < 1378) {
    // species 28: c2h5cho
    result +=
      y[28] *
      (+2.16308444e+00 + 2.95501264e-02 * tc[1] - 1.52446252e-05 * tc[2] +
       3.49503947e-09 * tc[3] - 2.38896627e-13 * tc[4]) *
      0.0172176308539945;
    // species 40: nc3h7cho
    result +=
      y[40] *
      (+1.87415959e+00 + 4.19240315e-02 * tc[1] - 2.35148779e-05 * tc[2] +
       6.26913673e-09 * tc[3] - 6.09443908e-13 * tc[4]) *
      0.0138682790852483;
  } else {
    // species 28: c2h5cho
    result +=
      y[28] *
      (+1.02427695e+01 + 1.39641989e-02 * tc[1] - 4.76248001e-06 * tc[2] +
       7.38105706e-10 * tc[3] - 4.27759503e-14 * tc[4]) *
      0.0172176308539945;
    // species 40: nc3h7cho
    result +=
      y[40] *
      (+1.35988068e+01 + 1.81652474e-02 * tc[1] - 6.17844458e-06 * tc[2] +
       9.55980208e-10 * tc[3] - 5.53442958e-14 * tc[4]) *
      0.0138682790852483;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 31: ch3o2
    result +=
      y[31] *
      (+4.26146906e+00 + 1.00873599e-02 * tc[1] - 3.21506184e-06 * tc[2] +
       2.09409267e-10 * tc[3] + 4.18339103e-14 * tc[4]) *
      0.0212616673399528;
    // species 36: pc4h9o2
    result +=
      y[36] *
      (+1.94363650e+00 + 5.15513163e-02 * tc[1] - 3.28284400e-05 * tc[2] +
       1.13064860e-08 * tc[3] - 1.70118606e-12 * tc[4]) *
      0.0112215813452432;
  } else {
    // species 31: ch3o2
    result +=
      y[31] *
      (+5.95787891e+00 + 7.90728626e-03 * tc[1] - 2.68246234e-06 * tc[2] +
       4.13891337e-10 * tc[3] - 2.39007330e-14 * tc[4]) *
      0.0212616673399528;
    // species 36: pc4h9o2
    result +=
      y[36] *
      (+1.57845448e+01 + 2.15210910e-02 * tc[1] - 7.44909017e-06 * tc[2] +
       1.16558071e-09 * tc[3] - 6.79885609e-14 * tc[4]) *
      0.0112215813452432;
  }

  // species with midpoint at T=1402 kelvin
  if (tT < 1402) {
    // species 33: c2h3co
    result +=
      y[33] *
      (+1.36242013e+00 + 3.15273972e-02 * tc[1] - 3.00218935e-05 * tc[2] +
       1.48167112e-08 * tc[3] - 2.87971530e-12 * tc[4]) *
      0.0181633246149375;
  } else {
    // species 33: c2h3co
    result +=
      y[33] *
      (+9.37467676e+00 + 7.91296900e-03 * tc[1] - 2.67198280e-06 * tc[2] +
       4.11115430e-10 * tc[3] - 2.36978981e-14 * tc[4]) *
      0.0181633246149375;
  }

  // species with midpoint at T=1393 kelvin
  if (tT < 1393) {
    // species 34: c2h3cho
    result +=
      y[34] *
      (+2.92355162e-01 + 3.54321417e-02 * tc[1] - 2.94936324e-05 * tc[2] +
       1.28100124e-08 * tc[3] - 2.26144108e-12 * tc[4]) *
      0.0178367579908676;
  } else {
    // species 34: c2h3cho
    result +=
      y[34] *
      (+1.04184959e+01 + 9.48963321e-03 * tc[1] - 3.29310529e-06 * tc[2] +
       5.16279203e-10 * tc[3] - 3.01587291e-14 * tc[4]) *
      0.0178367579908676;
  }

  // species with midpoint at T=1387 kelvin
  if (tT < 1387) {
    // species 35: c4h8ooh1-3o2
    result +=
      y[35] *
      (+2.22400728e+00 + 7.04994620e-02 * tc[1] - 5.66978827e-05 * tc[2] +
       2.42627751e-08 * tc[3] - 4.29715459e-12 * tc[4]) *
      0.0082568201334302;
  } else {
    // species 35: c4h8ooh1-3o2
    result +=
      y[35] *
      (+2.23244015e+01 + 2.05474775e-02 * tc[1] - 7.19076348e-06 * tc[2] +
       1.13361536e-09 * tc[3] - 6.64744383e-14 * tc[4]) *
      0.0082568201334302;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 37: c3h5-a
    result +=
      y[37] *
      (-5.29131958e-01 + 3.34559100e-02 * tc[1] - 2.53401027e-05 * tc[2] +
       1.02865754e-08 * tc[3] - 1.73258340e-12 * tc[4]) *
      0.0243468945535997;
  } else {
    // species 37: c3h5-a
    result +=
      y[37] *
      (+8.45883958e+00 + 1.12695483e-02 * tc[1] - 3.83792864e-06 * tc[2] +
       5.94059119e-10 * tc[3] - 3.43918030e-14 * tc[4]) *
      0.0243468945535997;
  }

  // species with midpoint at T=1386 kelvin
  if (tT < 1386) {
    // species 39: nc4ket13
    result +=
      y[39] *
      (+2.74883461e+00 + 5.86936745e-02 * tc[1] - 4.49605895e-05 * tc[2] +
       1.83200130e-08 * tc[3] - 3.11765369e-12 * tc[4]) *
      0.0096056865664473;
  } else {
    // species 39: nc4ket13
    result +=
      y[39] *
      (+1.96430808e+01 + 1.80940566e-02 * tc[1] - 6.33063232e-06 * tc[2] +
       9.97860399e-10 * tc[3] - 5.85076458e-14 * tc[4]) *
      0.0096056865664473;
  }

  // species with midpoint at T=1383 kelvin
  if (tT < 1383) {
    // species 41: c2h5coch2
    result +=
      y[41] *
      (+1.54013856e+00 + 4.39486258e-02 * tc[1] - 2.97002421e-05 * tc[2] +
       1.05495313e-08 * tc[3] - 1.58598769e-12 * tc[4]) *
      0.0140648954275025;
  } else {
    // species 41: c2h5coch2
    result +=
      y[41] *
      (+1.42098738e+01 + 1.57866459e-02 * tc[1] - 5.50529183e-06 * tc[2] +
       8.65870540e-10 * tc[3] - 5.06913329e-14 * tc[4]) *
      0.0140648954275025;
  }

  // species with midpoint at T=1389 kelvin
  if (tT < 1389) {
    // species 42: nc3h7coch2
    result +=
      y[42] *
      (+9.58299271e-01 + 5.68162532e-02 * tc[1] - 3.99112781e-05 * tc[2] +
       1.52671514e-08 * tc[3] - 2.49221047e-12 * tc[4]) *
      0.0117472922491366;
    // species 50: c7h14ooh4-3
    result +=
      y[50] *
      (+8.49786005e-01 + 9.25107196e-02 * tc[1] - 6.25359834e-05 * tc[2] +
       2.17880390e-08 * tc[3] - 3.12720398e-12 * tc[4]) *
      0.0076222417012843;
  } else {
    // species 42: nc3h7coch2
    result +=
      y[42] *
      (+1.61502419e+01 + 2.14093466e-02 * tc[1] - 7.36059614e-06 * tc[2] +
       1.14656816e-09 * tc[3] - 6.66712722e-14 * tc[4]) *
      0.0117472922491366;
    // species 50: c7h14ooh4-3
    result +=
      y[50] *
      (+2.74034778e+01 + 3.27527893e-02 * tc[1] - 1.12991770e-05 * tc[2] +
       1.76444649e-09 * tc[3] - 1.02786945e-13 * tc[4]) *
      0.0076222417012843;
  }

  // species with midpoint at T=1381 kelvin
  if (tT < 1381) {
    // species 43: nc4h9cho
    result +=
      y[43] *
      (+1.59663472e+00 + 5.43541416e-02 * tc[1] - 3.21020651e-05 * tc[2] +
       9.35773559e-09 * tc[3] - 1.06688932e-12 * tc[4]) *
      0.0116098172614763;
  } else {
    // species 43: nc4h9cho
    result +=
      y[43] *
      (+1.67965163e+01 + 2.25684519e-02 * tc[1] - 7.67631588e-06 * tc[2] +
       1.18769369e-09 * tc[3] - 6.87545554e-14 * tc[4]) *
      0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 44: nc4h9co
    result +=
      y[44] *
      (+2.43530238e+00 + 4.93682376e-02 * tc[1] - 2.89883082e-05 * tc[2] +
       8.42863812e-09 * tc[3] - 9.68287172e-13 * tc[4]) *
      0.0117472922491366;
  } else {
    // species 44: nc4h9co
    result +=
      y[44] *
      (+1.61782939e+01 + 2.07991920e-02 * tc[1] - 7.11787892e-06 * tc[2] +
       1.10559975e-09 * tc[3] - 6.41697187e-14 * tc[4]) *
      0.0117472922491366;
  }

  // species with midpoint at T=1395 kelvin
  if (tT < 1395) {
    // species 52: c7h14o1-3
    result +=
      y[52] *
      (-5.50036450e+00 + 1.00155088e-01 * tc[1] - 7.29935857e-05 * tc[2] +
       2.79344270e-08 * tc[3] - 4.42245696e-12 * tc[4]) *
      0.0087574876519424;
  } else {
    // species 52: c7h14o1-3
    result +=
      y[52] *
      (+2.26918916e+01 + 3.32510472e-02 * tc[1] - 1.14457765e-05 * tc[2] +
       1.78455535e-09 * tc[3] - 1.03841112e-13 * tc[4]) *
      0.0087574876519424;
  }

  // species with midpoint at T=1399 kelvin
  if (tT < 1399) {
    // species 53: c7h14o2-4
    result +=
      y[53] *
      (-5.39477206e+00 + 1.01846577e-01 * tc[1] - 7.60046236e-05 * tc[2] +
       2.96538020e-08 * tc[3] - 4.74854370e-12 * tc[4]) *
      0.0087574876519424;
  } else {
    // species 53: c7h14o2-4
    result +=
      y[53] *
      (+2.32692731e+01 + 3.25585391e-02 * tc[1] - 1.11624906e-05 * tc[2] +
       1.73573658e-09 * tc[3] - 1.00813215e-13 * tc[4]) *
      0.0087574876519424;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[55];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 55; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: h
    result +=
      y[0] *
      (+1.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
       0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.9920634920634921;
    // species 1: h2
    result +=
      y[1] *
      (+2.29812400e+00 + 8.24944200e-04 * tc[1] - 8.14301500e-07 * tc[2] -
       9.47543400e-11 * tc[3] + 4.13487200e-13 * tc[4]) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+1.94642900e+00 - 1.63816600e-03 * tc[1] + 2.42103200e-06 * tc[2] -
       1.60284300e-09 * tc[3] + 3.89069600e-13 * tc[4]) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+2.21293600e+00 + 1.12748600e-03 * tc[1] - 5.75615000e-07 * tc[2] +
       1.31387700e-09 * tc[3] - 8.76855400e-13 * tc[4]) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+2.38684200e+00 + 3.47498200e-03 * tc[1] - 6.35469600e-06 * tc[2] +
       6.96858100e-09 * tc[3] - 2.50658800e-12 * tc[4]) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+2.26245200e+00 + 1.51194100e-03 * tc[1] - 3.88175500e-06 * tc[2] +
       5.58194400e-09 * tc[3] - 2.47495100e-12 * tc[4]) *
      0.0357015351660121;
    // species 7: co2
    result +=
      y[7] *
      (+1.27572500e+00 + 9.92207200e-03 * tc[1] - 1.04091100e-05 * tc[2] +
       6.86668700e-09 * tc[3] - 2.11728000e-12 * tc[4]) *
      0.0227226249176305;
    // species 8: ch3
    result +=
      y[8] *
      (+1.43044300e+00 + 1.11241000e-02 * tc[1] - 1.68022000e-05 * tc[2] +
       1.62182900e-08 * tc[3] - 5.86495300e-12 * tc[4]) *
      0.0665114732291320;
    // species 9: ch4
    result +=
      y[9] *
      (-2.21258500e-01 + 1.74766800e-02 * tc[1] - 2.78340900e-05 * tc[2] +
       3.04970800e-08 * tc[3] - 1.22393100e-11 * tc[4]) *
      0.0623324814560868;
    // species 11: h2o2
    result +=
      y[11] *
      (+2.38875400e+00 + 6.56922600e-03 * tc[1] - 1.48501300e-07 * tc[2] -
       4.62580600e-09 * tc[3] + 2.47151500e-12 * tc[4]) *
      0.0293996589639560;
    // species 12: ch2o
    result +=
      y[12] *
      (+6.52731000e-01 + 1.26314400e-02 * tc[1] - 1.88816800e-05 * tc[2] +
       2.05003100e-08 * tc[3] - 8.41323700e-12 * tc[4]) *
      0.0333044694598015;
    // species 14: c2h4
    result +=
      y[14] *
      (-1.86148800e+00 + 2.79616300e-02 * tc[1] - 3.38867700e-05 * tc[2] +
       2.78515200e-08 * tc[3] - 9.73787900e-12 * tc[4]) *
      0.0356455407428531;
    // species 15: c2h5
    result +=
      y[15] *
      (+1.69070200e+00 + 8.71913300e-03 * tc[1] + 4.41983900e-06 * tc[2] +
       9.33870300e-10 * tc[3] - 3.92777300e-12 * tc[4]) *
      0.0344091941366733;
    // species 16: c2h2
    result +=
      y[16] *
      (+1.01356200e+00 + 1.51904500e-02 * tc[1] - 1.61631900e-05 * tc[2] +
       9.07899200e-09 * tc[3] - 1.91274600e-12 * tc[4]) *
      0.0384054074813734;
    // species 17: c2h3
    result +=
      y[17] *
      (+1.45927600e+00 + 7.37147600e-03 * tc[1] + 2.10987300e-06 * tc[2] -
       1.32164200e-09 * tc[3] - 1.18478400e-12 * tc[4]) *
      0.0369740442209569;
    // species 18: ch2co
    result +=
      y[18] *
      (+1.97497100e+00 + 1.21187100e-02 * tc[1] - 2.34504600e-06 * tc[2] -
       6.46668500e-09 * tc[3] + 3.90564900e-12 * tc[4]) *
      0.0237885672145967;
    // species 19: hcco
    result +=
      y[19] *
      (+4.04796500e+00 + 4.45347800e-03 * tc[1] + 2.26828300e-07 * tc[2] -
       1.48209500e-09 * tc[3] + 2.25074200e-13 * tc[4]) *
      0.0243730044602598;
    // species 20: ch3cho
    result +=
      y[20] *
      (+1.50569500e+00 + 1.33699100e-02 * tc[1] + 4.67195300e-06 * tc[2] -
       1.12814000e-08 * tc[3] + 4.26356600e-12 * tc[4]) *
      0.0226999296302181;
    // species 24: nc3h7
    result +=
      y[24] *
      (+9.22537000e-01 + 2.47892700e-02 * tc[1] + 1.81024900e-06 * tc[2] -
       1.78326600e-08 * tc[3] + 8.58299600e-12 * tc[4]) *
      0.0232077792476038;
    // species 38: c3h3
    result +=
      y[38] *
      (+3.75420000e+00 + 1.10802800e-02 * tc[1] + 2.79332300e-07 * tc[2] -
       5.47921200e-09 * tc[3] + 1.94962900e-12 * tc[4]) *
      0.0256036049875823;
    // species 54: n2
    result +=
      y[54] *
      (+2.29867700e+00 + 1.40824000e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485500e-12 * tc[4]) *
      0.0356964374955379;
  } else {
    // species 0: h
    result +=
      y[0] *
      (+1.50104422e+00 + 0.00000000e+00 * tc[1] + 0.00000000e+00 * tc[2] +
       0.00000000e+00 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.9920634920634921;
    // species 1: h2
    result +=
      y[1] *
      (+1.99142300e+00 + 7.00064400e-04 * tc[1] - 5.63382900e-08 * tc[2] -
       9.23157800e-12 * tc[3] + 1.58275200e-15 * tc[4]) *
      0.4960317460317460;
    // species 2: o
    result +=
      y[2] *
      (+1.54206000e+00 - 2.75506200e-05 * tc[1] - 3.10280300e-09 * tc[2] +
       4.55106700e-12 * tc[3] - 4.36805200e-16 * tc[4]) *
      0.0625039064941559;
    // species 3: o2
    result +=
      y[3] *
      (+2.69757800e+00 + 6.13519700e-04 * tc[1] - 1.25884200e-07 * tc[2] +
       1.77528100e-11 * tc[3] - 1.13643500e-15 * tc[4]) *
      0.0312519532470779;
    // species 5: h2o
    result +=
      y[5] *
      (+1.67214600e+00 + 3.05629300e-03 * tc[1] - 8.73026000e-07 * tc[2] +
       1.20099600e-10 * tc[3] - 6.39161800e-15 * tc[4]) *
      0.0555092978073827;
    // species 6: co
    result +=
      y[6] *
      (+2.02507800e+00 + 1.44268900e-03 * tc[1] - 5.63082800e-07 * tc[2] +
       1.01858100e-10 * tc[3] - 6.91095200e-15 * tc[4]) *
      0.0357015351660121;
    // species 7: co2
    result +=
      y[7] *
      (+3.45362300e+00 + 3.14016900e-03 * tc[1] - 1.27841100e-06 * tc[2] +
       2.39399700e-10 * tc[3] - 1.66903300e-14 * tc[4]) *
      0.0227226249176305;
    // species 8: ch3
    result +=
      y[8] *
      (+1.84405200e+00 + 6.13797400e-03 * tc[1] - 2.23034500e-06 * tc[2] +
       3.78516100e-10 * tc[3] - 2.45215900e-14 * tc[4]) *
      0.0665114732291320;
    // species 9: ch4
    result +=
      y[9] *
      (+6.83479000e-01 + 1.02372400e-02 * tc[1] - 3.87512900e-06 * tc[2] +
       6.78558500e-10 * tc[3] - 4.50342300e-14 * tc[4]) *
      0.0623324814560868;
    // species 11: h2o2
    result +=
      y[11] *
      (+3.57316700e+00 + 4.33613600e-03 * tc[1] - 1.47468900e-06 * tc[2] +
       2.34890400e-10 * tc[3] - 1.43165400e-14 * tc[4]) *
      0.0293996589639560;
    // species 12: ch2o
    result +=
      y[12] *
      (+1.99560600e+00 + 6.68132100e-03 * tc[1] - 2.62895500e-06 * tc[2] +
       4.73715300e-10 * tc[3] - 3.21251700e-14 * tc[4]) *
      0.0333044694598015;
    // species 14: c2h4
    result +=
      y[14] *
      (+2.52841900e+00 + 1.14851800e-02 * tc[1] - 4.41838500e-06 * tc[2] +
       7.84460100e-10 * tc[3] - 5.26684800e-14 * tc[4]) *
      0.0356455407428531;
    // species 15: c2h5
    result +=
      y[15] *
      (+6.19048000e+00 + 6.48407700e-03 * tc[1] - 6.42806500e-07 * tc[2] -
       2.34787900e-10 * tc[3] + 3.88087700e-14 * tc[4]) *
      0.0344091941366733;
    // species 16: c2h2
    result +=
      y[16] *
      (+3.43677000e+00 + 5.37603900e-03 * tc[1] - 1.91281700e-06 * tc[2] +
       3.28637900e-10 * tc[3] - 2.15671000e-14 * tc[4]) *
      0.0384054074813734;
    // species 17: c2h3
    result +=
      y[17] *
      (+4.93346800e+00 + 4.01774600e-03 * tc[1] - 3.96674000e-07 * tc[2] -
       1.44126700e-10 * tc[3] + 2.37864400e-14 * tc[4]) *
      0.0369740442209569;
    // species 18: ch2co
    result +=
      y[18] *
      (+5.03881700e+00 + 5.80484000e-03 * tc[1] - 1.92095400e-06 * tc[2] +
       2.79448500e-10 * tc[3] - 1.45886800e-14 * tc[4]) *
      0.0237885672145967;
    // species 19: hcco
    result +=
      y[19] *
      (+5.75807300e+00 + 2.00040000e-03 * tc[1] - 2.02760700e-07 * tc[2] -
       1.04113200e-10 * tc[3] + 1.96516500e-14 * tc[4]) *
      0.0243730044602598;
    // species 20: ch3cho
    result +=
      y[20] *
      (+4.86865000e+00 + 1.07942400e-02 * tc[1] - 3.64553000e-06 * tc[2] +
       5.41291200e-10 * tc[3] - 2.89684400e-14 * tc[4]) *
      0.0226999296302181;
    // species 24: nc3h7
    result +=
      y[24] *
      (+6.97829100e+00 + 1.57611300e-02 * tc[1] - 5.17324300e-06 * tc[2] +
       7.44389200e-10 * tc[3] - 3.82497800e-14 * tc[4]) *
      0.0232077792476038;
    // species 38: c3h3
    result +=
      y[38] *
      (+7.83104700e+00 + 4.35719500e-03 * tc[1] - 4.10906700e-07 * tc[2] -
       2.36872300e-10 * tc[3] + 4.37652000e-14 * tc[4]) *
      0.0256036049875823;
    // species 54: n2
    result +=
      y[54] *
      (+1.92664000e+00 + 1.48797700e-03 * tc[1] - 5.68476100e-07 * tc[2] +
       1.00970400e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 4: oh
    result +=
      y[4] *
      (+2.43586219e+00 + 2.02235804e-04 * tc[1] - 1.13546412e-07 * tc[2] +
       2.42445149e-10 * tc[3] - 7.43651031e-14 * tc[4]) *
      0.0587993179279120;
  } else {
    // species 4: oh
    result +=
      y[4] *
      (+1.62599754e+00 + 1.31992406e-03 * tc[1] - 3.59724670e-07 * tc[2] +
       4.25630800e-11 * tc[3] - 1.82048016e-15 * tc[4]) *
      0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 10: ho2
    result +=
      y[10] *
      (+2.18310656e+00 + 3.66767950e-03 * tc[1] - 9.32385122e-07 * tc[2] -
       3.25852919e-10 * tc[3] + 1.51139912e-13 * tc[4]) *
      0.0302975216627280;
    // species 32: ch3o2h
    result +=
      y[32] *
      (+2.23442817e+00 + 1.90129767e-02 * tc[1] - 1.13386287e-05 * tc[2] +
       3.40306653e-09 * tc[3] - 4.11830222e-13 * tc[4]) *
      0.0208155533814866;
    // species 47: c7h15o2-2
    result +=
      y[47] *
      (-6.44747083e-01 + 9.42381007e-02 * tc[1] - 6.66955106e-05 * tc[2] +
       2.54795583e-08 * tc[3] - 4.13211105e-12 * tc[4]) *
      0.0076222417012843;
    // species 48: c7h15o2-3
    result +=
      y[48] *
      (-6.44747083e-01 + 9.42381007e-02 * tc[1] - 6.66955106e-05 * tc[2] +
       2.54795583e-08 * tc[3] - 4.13211105e-12 * tc[4]) *
      0.0076222417012843;
    // species 49: c7h15o2-4
    result +=
      y[49] *
      (-6.44747083e-01 + 9.42381007e-02 * tc[1] - 6.66955106e-05 * tc[2] +
       2.54795583e-08 * tc[3] - 4.13211105e-12 * tc[4]) *
      0.0076222417012843;
  } else {
    // species 10: ho2
    result +=
      y[10] *
      (+3.10547423e+00 + 2.38452835e-03 * tc[1] - 8.06347989e-07 * tc[2] +
       1.24191723e-10 * tc[3] - 7.16400108e-15 * tc[4]) *
      0.0302975216627280;
    // species 32: ch3o2h
    result +=
      y[32] *
      (+7.43117091e+00 + 8.06817909e-03 * tc[1] - 2.77094921e-06 * tc[2] +
       4.31332243e-10 * tc[3] - 2.50692146e-14 * tc[4]) *
      0.0208155533814866;
    // species 47: c7h15o2-2
    result +=
      y[47] *
      (+2.50535640e+01 + 3.43831688e-02 * tc[1] - 1.18713247e-05 * tc[2] +
       1.85450241e-09 * tc[3] - 1.08052399e-13 * tc[4]) *
      0.0076222417012843;
    // species 48: c7h15o2-3
    result +=
      y[48] *
      (+2.50535640e+01 + 3.43831688e-02 * tc[1] - 1.18713247e-05 * tc[2] +
       1.85450241e-09 * tc[3] - 1.08052399e-13 * tc[4]) *
      0.0076222417012843;
    // species 49: c7h15o2-4
    result +=
      y[49] *
      (+2.50535640e+01 + 3.43831688e-02 * tc[1] - 1.18713247e-05 * tc[2] +
       1.85450241e-09 * tc[3] - 1.08052399e-13 * tc[4]) *
      0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 13: c2h6
    result +=
      y[13] *
      (-1.02528543e+00 + 2.40764754e-02 * tc[1] - 1.11893472e-05 * tc[2] +
       2.08340901e-09 * tc[3] - 5.29868616e-14 * tc[4]) *
      0.0332557366145660;
  } else {
    // species 13: c2h6
    result +=
      y[13] *
      (+5.10683385e+00 + 1.29236361e-02 * tc[1] - 4.42527196e-06 * tc[2] +
       6.87391726e-10 * tc[3] - 3.98901732e-14 * tc[4]) *
      0.0332557366145660;
  }

  // species with midpoint at T=1400 kelvin
  if (tT < 1400) {
    // species 21: c3h4-a
    result +=
      y[21] *
      (+1.53983100e+00 + 1.63343700e-02 * tc[1] - 1.76495000e-06 * tc[2] -
       4.64736500e-09 * tc[3] + 1.72913100e-12 * tc[4]) *
      0.0249594409085237;
  } else {
    // species 21: c3h4-a
    result +=
      y[21] *
      (+8.77625600e+00 + 5.30213800e-03 * tc[1] - 3.70111800e-07 * tc[2] -
       3.02638600e-10 * tc[3] + 5.08958100e-14 * tc[4]) *
      0.0249594409085237;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 22: c3h6
    result +=
      y[22] *
      (-6.05384556e-01 + 2.89107662e-02 * tc[1] - 1.54886808e-05 * tc[2] +
       3.88814209e-09 * tc[3] - 3.37890352e-13 * tc[4]) *
      0.0237636938285687;
    // species 46: c7h15o2-1
    result +=
      y[46] *
      (+2.08885520e-01 + 8.84061706e-02 * tc[1] - 5.79861260e-05 * tc[2] +
       2.03574689e-08 * tc[3] - 3.06460336e-12 * tc[4]) *
      0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result +=
      y[51] *
      (+8.97180040e-01 + 1.06229796e-01 * tc[1] - 8.02770218e-05 * tc[2] +
       3.23649093e-08 * tc[3] - 5.45850472e-12 * tc[4]) *
      0.0061277138112542;
  } else {
    // species 22: c3h6
    result +=
      y[22] *
      (+7.01595958e+00 + 1.37023634e-02 * tc[1] - 4.66249733e-06 * tc[2] +
       7.21254402e-10 * tc[3] - 4.17370126e-14 * tc[4]) *
      0.0237636938285687;
    // species 46: c7h15o2-1
    result +=
      y[46] *
      (+2.42656556e+01 + 3.50803587e-02 * tc[1] - 1.21178801e-05 * tc[2] +
       1.89360806e-09 * tc[3] - 1.10354125e-13 * tc[4]) *
      0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result +=
      y[51] *
      (+3.10144349e+01 + 3.40055996e-02 * tc[1] - 1.18415856e-05 * tc[2] +
       1.86060347e-09 * tc[3] - 1.08851012e-13 * tc[4]) *
      0.0061277138112542;
  }

  // species with midpoint at T=1398 kelvin
  if (tT < 1398) {
    // species 23: c4h6
    result +=
      y[23] *
      (-2.43095121e+00 + 4.78706062e-02 * tc[1] - 4.15446800e-05 * tc[2] +
       1.91549552e-08 * tc[3] - 3.57158507e-12 * tc[4]) *
      0.0184870221104784;
  } else {
    // species 23: c4h6
    result +=
      y[23] *
      (+1.01633789e+01 + 1.37163965e-02 * tc[1] - 4.69715783e-06 * tc[2] +
       7.29693836e-10 * tc[3] - 4.23486203e-14 * tc[4]) *
      0.0184870221104784;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 25: c4h7
    result +=
      y[25] *
      (-1.35050835e+00 + 4.26511243e-02 * tc[1] - 2.90979373e-05 * tc[2] +
       1.05403914e-08 * tc[3] - 1.60059854e-12 * tc[4]) *
      0.0181488203266788;
    // species 26: c4h8-1
    result +=
      y[26] *
      (-1.83137209e+00 + 4.52580978e-02 * tc[1] - 2.93658559e-05 * tc[2] +
       1.00220436e-08 * tc[3] - 1.43191680e-12 * tc[4]) *
      0.0178227703714265;
    // species 29: c5h9
    result +=
      y[29] *
      (-2.38013950e+00 + 5.57608487e-02 * tc[1] - 3.70143928e-05 * tc[2] +
       1.26883901e-08 * tc[3] - 1.78538835e-12 * tc[4]) *
      0.0144661275623128;
    // species 30: c5h10-1
    result +=
      y[30] *
      (-2.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
  } else {
    // species 25: c4h7
    result +=
      y[25] *
      (+1.02103578e+01 + 1.60483196e-02 * tc[1] - 5.46502292e-06 * tc[2] +
       8.45941053e-10 * tc[3] - 4.89772739e-14 * tc[4]) *
      0.0181488203266788;
    // species 26: c4h8-1
    result +=
      y[26] *
      (+1.03508668e+01 + 1.80617877e-02 * tc[1] - 6.16093029e-06 * tc[2] +
       9.54652959e-10 * tc[3] - 5.53089641e-14 * tc[4]) *
      0.0178227703714265;
    // species 29: c5h9
    result +=
      y[29] *
      (+1.31860454e+01 + 2.07128899e-02 * tc[1] - 7.06960617e-06 * tc[2] +
       1.09607133e-09 * tc[3] - 6.35322208e-14 * tc[4]) *
      0.0144661275623128;
    // species 30: c5h10-1
    result +=
      y[30] *
      (+1.35851539e+01 + 2.24072471e-02 * tc[1] - 7.63348025e-06 * tc[2] +
       1.18188966e-09 * tc[3] - 6.84385139e-14 * tc[4]) *
      0.0142582162971412;
  }

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 27: ch3coch2
    result +=
      y[27] *
      (+8.03391870e-01 + 3.01407085e-02 * tc[1] - 1.93505552e-05 * tc[2] +
       6.38199034e-09 * tc[3] - 8.66103180e-13 * tc[4]) *
      0.0175217269414073;
    // species 45: nc7h16
    result +=
      y[45] *
      (-2.26836187e+00 + 8.54355820e-02 * tc[1] - 5.25346786e-05 * tc[2] +
       1.62945721e-08 * tc[3] - 2.02394925e-12 * tc[4]) *
      0.0099795419390250;
  } else {
    // species 27: ch3coch2
    result +=
      y[27] *
      (+9.23039750e+00 + 1.16494161e-02 * tc[1] - 4.01005537e-06 * tc[2] +
       6.25205246e-10 * tc[3] - 3.63784362e-14 * tc[4]) *
      0.0175217269414073;
    // species 45: nc7h16
    result +=
      y[45] *
      (+2.12148969e+01 + 3.47675750e-02 * tc[1] - 1.18407129e-05 * tc[2] +
       1.83298478e-09 * tc[3] - 1.06130266e-13 * tc[4]) *
      0.0099795419390250;
  }

  // species with midpoint at T=1378 kelvin
  if (tT < 1378) {
    // species 28: c2h5cho
    result +=
      y[28] *
      (+1.16308444e+00 + 2.95501264e-02 * tc[1] - 1.52446252e-05 * tc[2] +
       3.49503947e-09 * tc[3] - 2.38896627e-13 * tc[4]) *
      0.0172176308539945;
    // species 40: nc3h7cho
    result +=
      y[40] *
      (+8.74159590e-01 + 4.19240315e-02 * tc[1] - 2.35148779e-05 * tc[2] +
       6.26913673e-09 * tc[3] - 6.09443908e-13 * tc[4]) *
      0.0138682790852483;
  } else {
    // species 28: c2h5cho
    result +=
      y[28] *
      (+9.24276950e+00 + 1.39641989e-02 * tc[1] - 4.76248001e-06 * tc[2] +
       7.38105706e-10 * tc[3] - 4.27759503e-14 * tc[4]) *
      0.0172176308539945;
    // species 40: nc3h7cho
    result +=
      y[40] *
      (+1.25988068e+01 + 1.81652474e-02 * tc[1] - 6.17844458e-06 * tc[2] +
       9.55980208e-10 * tc[3] - 5.53442958e-14 * tc[4]) *
      0.0138682790852483;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 31: ch3o2
    result +=
      y[31] *
      (+3.26146906e+00 + 1.00873599e-02 * tc[1] - 3.21506184e-06 * tc[2] +
       2.09409267e-10 * tc[3] + 4.18339103e-14 * tc[4]) *
      0.0212616673399528;
    // species 36: pc4h9o2
    result +=
      y[36] *
      (+9.43636500e-01 + 5.15513163e-02 * tc[1] - 3.28284400e-05 * tc[2] +
       1.13064860e-08 * tc[3] - 1.70118606e-12 * tc[4]) *
      0.0112215813452432;
  } else {
    // species 31: ch3o2
    result +=
      y[31] *
      (+4.95787891e+00 + 7.90728626e-03 * tc[1] - 2.68246234e-06 * tc[2] +
       4.13891337e-10 * tc[3] - 2.39007330e-14 * tc[4]) *
      0.0212616673399528;
    // species 36: pc4h9o2
    result +=
      y[36] *
      (+1.47845448e+01 + 2.15210910e-02 * tc[1] - 7.44909017e-06 * tc[2] +
       1.16558071e-09 * tc[3] - 6.79885609e-14 * tc[4]) *
      0.0112215813452432;
  }

  // species with midpoint at T=1402 kelvin
  if (tT < 1402) {
    // species 33: c2h3co
    result +=
      y[33] *
      (+3.62420130e-01 + 3.15273972e-02 * tc[1] - 3.00218935e-05 * tc[2] +
       1.48167112e-08 * tc[3] - 2.87971530e-12 * tc[4]) *
      0.0181633246149375;
  } else {
    // species 33: c2h3co
    result +=
      y[33] *
      (+8.37467676e+00 + 7.91296900e-03 * tc[1] - 2.67198280e-06 * tc[2] +
       4.11115430e-10 * tc[3] - 2.36978981e-14 * tc[4]) *
      0.0181633246149375;
  }

  // species with midpoint at T=1393 kelvin
  if (tT < 1393) {
    // species 34: c2h3cho
    result +=
      y[34] *
      (-7.07644838e-01 + 3.54321417e-02 * tc[1] - 2.94936324e-05 * tc[2] +
       1.28100124e-08 * tc[3] - 2.26144108e-12 * tc[4]) *
      0.0178367579908676;
  } else {
    // species 34: c2h3cho
    result +=
      y[34] *
      (+9.41849590e+00 + 9.48963321e-03 * tc[1] - 3.29310529e-06 * tc[2] +
       5.16279203e-10 * tc[3] - 3.01587291e-14 * tc[4]) *
      0.0178367579908676;
  }

  // species with midpoint at T=1387 kelvin
  if (tT < 1387) {
    // species 35: c4h8ooh1-3o2
    result +=
      y[35] *
      (+1.22400728e+00 + 7.04994620e-02 * tc[1] - 5.66978827e-05 * tc[2] +
       2.42627751e-08 * tc[3] - 4.29715459e-12 * tc[4]) *
      0.0082568201334302;
  } else {
    // species 35: c4h8ooh1-3o2
    result +=
      y[35] *
      (+2.13244015e+01 + 2.05474775e-02 * tc[1] - 7.19076348e-06 * tc[2] +
       1.13361536e-09 * tc[3] - 6.64744383e-14 * tc[4]) *
      0.0082568201334302;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 37: c3h5-a
    result +=
      y[37] *
      (-1.52913196e+00 + 3.34559100e-02 * tc[1] - 2.53401027e-05 * tc[2] +
       1.02865754e-08 * tc[3] - 1.73258340e-12 * tc[4]) *
      0.0243468945535997;
  } else {
    // species 37: c3h5-a
    result +=
      y[37] *
      (+7.45883958e+00 + 1.12695483e-02 * tc[1] - 3.83792864e-06 * tc[2] +
       5.94059119e-10 * tc[3] - 3.43918030e-14 * tc[4]) *
      0.0243468945535997;
  }

  // species with midpoint at T=1386 kelvin
  if (tT < 1386) {
    // species 39: nc4ket13
    result +=
      y[39] *
      (+1.74883461e+00 + 5.86936745e-02 * tc[1] - 4.49605895e-05 * tc[2] +
       1.83200130e-08 * tc[3] - 3.11765369e-12 * tc[4]) *
      0.0096056865664473;
  } else {
    // species 39: nc4ket13
    result +=
      y[39] *
      (+1.86430808e+01 + 1.80940566e-02 * tc[1] - 6.33063232e-06 * tc[2] +
       9.97860399e-10 * tc[3] - 5.85076458e-14 * tc[4]) *
      0.0096056865664473;
  }

  // species with midpoint at T=1383 kelvin
  if (tT < 1383) {
    // species 41: c2h5coch2
    result +=
      y[41] *
      (+5.40138560e-01 + 4.39486258e-02 * tc[1] - 2.97002421e-05 * tc[2] +
       1.05495313e-08 * tc[3] - 1.58598769e-12 * tc[4]) *
      0.0140648954275025;
  } else {
    // species 41: c2h5coch2
    result +=
      y[41] *
      (+1.32098738e+01 + 1.57866459e-02 * tc[1] - 5.50529183e-06 * tc[2] +
       8.65870540e-10 * tc[3] - 5.06913329e-14 * tc[4]) *
      0.0140648954275025;
  }

  // species with midpoint at T=1389 kelvin
  if (tT < 1389) {
    // species 42: nc3h7coch2
    result +=
      y[42] *
      (-4.17007290e-02 + 5.68162532e-02 * tc[1] - 3.99112781e-05 * tc[2] +
       1.52671514e-08 * tc[3] - 2.49221047e-12 * tc[4]) *
      0.0117472922491366;
    // species 50: c7h14ooh4-3
    result +=
      y[50] *
      (-1.50213995e-01 + 9.25107196e-02 * tc[1] - 6.25359834e-05 * tc[2] +
       2.17880390e-08 * tc[3] - 3.12720398e-12 * tc[4]) *
      0.0076222417012843;
  } else {
    // species 42: nc3h7coch2
    result +=
      y[42] *
      (+1.51502419e+01 + 2.14093466e-02 * tc[1] - 7.36059614e-06 * tc[2] +
       1.14656816e-09 * tc[3] - 6.66712722e-14 * tc[4]) *
      0.0117472922491366;
    // species 50: c7h14ooh4-3
    result +=
      y[50] *
      (+2.64034778e+01 + 3.27527893e-02 * tc[1] - 1.12991770e-05 * tc[2] +
       1.76444649e-09 * tc[3] - 1.02786945e-13 * tc[4]) *
      0.0076222417012843;
  }

  // species with midpoint at T=1381 kelvin
  if (tT < 1381) {
    // species 43: nc4h9cho
    result +=
      y[43] *
      (+5.96634720e-01 + 5.43541416e-02 * tc[1] - 3.21020651e-05 * tc[2] +
       9.35773559e-09 * tc[3] - 1.06688932e-12 * tc[4]) *
      0.0116098172614763;
  } else {
    // species 43: nc4h9cho
    result +=
      y[43] *
      (+1.57965163e+01 + 2.25684519e-02 * tc[1] - 7.67631588e-06 * tc[2] +
       1.18769369e-09 * tc[3] - 6.87545554e-14 * tc[4]) *
      0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 44: nc4h9co
    result +=
      y[44] *
      (+1.43530238e+00 + 4.93682376e-02 * tc[1] - 2.89883082e-05 * tc[2] +
       8.42863812e-09 * tc[3] - 9.68287172e-13 * tc[4]) *
      0.0117472922491366;
  } else {
    // species 44: nc4h9co
    result +=
      y[44] *
      (+1.51782939e+01 + 2.07991920e-02 * tc[1] - 7.11787892e-06 * tc[2] +
       1.10559975e-09 * tc[3] - 6.41697187e-14 * tc[4]) *
      0.0117472922491366;
  }

  // species with midpoint at T=1395 kelvin
  if (tT < 1395) {
    // species 52: c7h14o1-3
    result +=
      y[52] *
      (-6.50036450e+00 + 1.00155088e-01 * tc[1] - 7.29935857e-05 * tc[2] +
       2.79344270e-08 * tc[3] - 4.42245696e-12 * tc[4]) *
      0.0087574876519424;
  } else {
    // species 52: c7h14o1-3
    result +=
      y[52] *
      (+2.16918916e+01 + 3.32510472e-02 * tc[1] - 1.14457765e-05 * tc[2] +
       1.78455535e-09 * tc[3] - 1.03841112e-13 * tc[4]) *
      0.0087574876519424;
  }

  // species with midpoint at T=1399 kelvin
  if (tT < 1399) {
    // species 53: c7h14o2-4
    result +=
      y[53] *
      (-6.39477206e+00 + 1.01846577e-01 * tc[1] - 7.60046236e-05 * tc[2] +
       2.96538020e-08 * tc[3] - 4.74854370e-12 * tc[4]) *
      0.0087574876519424;
  } else {
    // species 53: c7h14o2-4
    result +=
      y[53] *
      (+2.22692731e+01 + 3.25585391e-02 * tc[1] - 1.11624906e-05 * tc[2] +
       1.73573658e-09 * tc[3] - 1.00813215e-13 * tc[4]) *
      0.0087574876519424;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[55];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 55; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: h
    result += y[0] *
              (+2.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 2.54747466e+04 * invT) *
              0.9920634920634921;
    // species 1: h2
    result += y[1] *
              (+3.29812400e+00 + 4.12472100e-04 * tc[1] -
               2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
               8.26974400e-14 * tc[4] - 1.01252100e+03 * invT) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+2.94642900e+00 - 8.19083000e-04 * tc[1] +
               8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
               7.78139200e-14 * tc[4] + 2.91476400e+04 * invT) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+3.21293600e+00 + 5.63743000e-04 * tc[1] -
               1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
               1.75371080e-13 * tc[4] - 1.00524900e+03 * invT) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+3.38684200e+00 + 1.73749100e-03 * tc[1] -
               2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
               5.01317600e-13 * tc[4] - 3.02081100e+04 * invT) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+3.26245200e+00 + 7.55970500e-04 * tc[1] -
               1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
               4.94990200e-13 * tc[4] - 1.43105400e+04 * invT) *
              0.0357015351660121;
    // species 7: co2
    result += y[7] *
              (+2.27572500e+00 + 4.96103600e-03 * tc[1] -
               3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
               4.23456000e-13 * tc[4] - 4.83731400e+04 * invT) *
              0.0227226249176305;
    // species 8: ch3
    result += y[8] *
              (+2.43044300e+00 + 5.56205000e-03 * tc[1] -
               5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
               1.17299060e-12 * tc[4] + 1.64237800e+04 * invT) *
              0.0665114732291320;
    // species 9: ch4
    result += y[9] *
              (+7.78741500e-01 + 8.73834000e-03 * tc[1] -
               9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
               2.44786200e-12 * tc[4] - 9.82522900e+03 * invT) *
              0.0623324814560868;
    // species 11: h2o2
    result += y[11] *
              (+3.38875400e+00 + 3.28461300e-03 * tc[1] -
               4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
               4.94303000e-13 * tc[4] - 1.76631500e+04 * invT) *
              0.0293996589639560;
    // species 12: ch2o
    result += y[12] *
              (+1.65273100e+00 + 6.31572000e-03 * tc[1] -
               6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
               1.68264740e-12 * tc[4] - 1.48654000e+04 * invT) *
              0.0333044694598015;
    // species 14: c2h4
    result += y[14] *
              (-8.61488000e-01 + 1.39808150e-02 * tc[1] -
               1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
               1.94757580e-12 * tc[4] + 5.57304600e+03 * invT) *
              0.0356455407428531;
    // species 15: c2h5
    result += y[15] *
              (+2.69070200e+00 + 4.35956650e-03 * tc[1] +
               1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
               7.85554600e-13 * tc[4] + 1.28704000e+04 * invT) *
              0.0344091941366733;
    // species 16: c2h2
    result += y[16] *
              (+2.01356200e+00 + 7.59522500e-03 * tc[1] -
               5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
               3.82549200e-13 * tc[4] + 2.61244400e+04 * invT) *
              0.0384054074813734;
    // species 17: c2h3
    result += y[17] *
              (+2.45927600e+00 + 3.68573800e-03 * tc[1] +
               7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
               2.36956800e-13 * tc[4] + 3.33522500e+04 * invT) *
              0.0369740442209569;
    // species 18: ch2co
    result += y[18] *
              (+2.97497100e+00 + 6.05935500e-03 * tc[1] -
               7.81682000e-07 * tc[2] - 1.61667125e-09 * tc[3] +
               7.81129800e-13 * tc[4] - 7.63263700e+03 * invT) *
              0.0237885672145967;
    // species 19: hcco
    result += y[19] *
              (+5.04796500e+00 + 2.22673900e-03 * tc[1] +
               7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
               4.50148400e-14 * tc[4] + 1.96589200e+04 * invT) *
              0.0243730044602598;
    // species 20: ch3cho
    result += y[20] *
              (+2.50569500e+00 + 6.68495500e-03 * tc[1] +
               1.55731767e-06 * tc[2] - 2.82035000e-09 * tc[3] +
               8.52713200e-13 * tc[4] - 2.12458900e+04 * invT) *
              0.0226999296302181;
    // species 24: nc3h7
    result += y[24] *
              (+1.92253700e+00 + 1.23946350e-02 * tc[1] +
               6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
               1.71659920e-12 * tc[4] + 9.71328100e+03 * invT) *
              0.0232077792476038;
    // species 38: c3h3
    result += y[38] *
              (+4.75420000e+00 + 5.54014000e-03 * tc[1] +
               9.31107667e-08 * tc[2] - 1.36980300e-09 * tc[3] +
               3.89925800e-13 * tc[4] + 3.98888300e+04 * invT) *
              0.0256036049875823;
    // species 54: n2
    result += y[54] *
              (+3.29867700e+00 + 7.04120000e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88971000e-13 * tc[4] - 1.02090000e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 0: h
    result += y[0] *
              (+2.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 2.54747466e+04 * invT) *
              0.9920634920634921;
    // species 1: h2
    result += y[1] *
              (+2.99142300e+00 + 3.50032200e-04 * tc[1] -
               1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
               3.16550400e-16 * tc[4] - 8.35034000e+02 * invT) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+2.54206000e+00 - 1.37753100e-05 * tc[1] -
               1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
               8.73610400e-17 * tc[4] + 2.92308000e+04 * invT) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+3.69757800e+00 + 3.06759850e-04 * tc[1] -
               4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
               2.27287000e-16 * tc[4] - 1.23393000e+03 * invT) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+2.67214600e+00 + 1.52814650e-03 * tc[1] -
               2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
               1.27832360e-15 * tc[4] - 2.98992100e+04 * invT) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+3.02507800e+00 + 7.21344500e-04 * tc[1] -
               1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
               1.38219040e-15 * tc[4] - 1.42683500e+04 * invT) *
              0.0357015351660121;
    // species 7: co2
    result += y[7] *
              (+4.45362300e+00 + 1.57008450e-03 * tc[1] -
               4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
               3.33806600e-15 * tc[4] - 4.89669600e+04 * invT) *
              0.0227226249176305;
    // species 8: ch3
    result += y[8] *
              (+2.84405200e+00 + 3.06898700e-03 * tc[1] -
               7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
               4.90431800e-15 * tc[4] + 1.64378100e+04 * invT) *
              0.0665114732291320;
    // species 9: ch4
    result += y[9] *
              (+1.68347900e+00 + 5.11862000e-03 * tc[1] -
               1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
               9.00684600e-15 * tc[4] - 1.00807900e+04 * invT) *
              0.0623324814560868;
    // species 11: h2o2
    result += y[11] *
              (+4.57316700e+00 + 2.16806800e-03 * tc[1] -
               4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
               2.86330800e-15 * tc[4] - 1.80069600e+04 * invT) *
              0.0293996589639560;
    // species 12: ch2o
    result += y[12] *
              (+2.99560600e+00 + 3.34066050e-03 * tc[1] -
               8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
               6.42503400e-15 * tc[4] - 1.53203700e+04 * invT) *
              0.0333044694598015;
    // species 14: c2h4
    result += y[14] *
              (+3.52841900e+00 + 5.74259000e-03 * tc[1] -
               1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
               1.05336960e-14 * tc[4] + 4.42828900e+03 * invT) *
              0.0356455407428531;
    // species 15: c2h5
    result += y[15] *
              (+7.19048000e+00 + 3.24203850e-03 * tc[1] -
               2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
               7.76175400e-15 * tc[4] + 1.06745500e+04 * invT) *
              0.0344091941366733;
    // species 16: c2h2
    result += y[16] *
              (+4.43677000e+00 + 2.68801950e-03 * tc[1] -
               6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
               4.31342000e-15 * tc[4] + 2.56676600e+04 * invT) *
              0.0384054074813734;
    // species 17: c2h3
    result += y[17] *
              (+5.93346800e+00 + 2.00887300e-03 * tc[1] -
               1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
               4.75728800e-15 * tc[4] + 3.18543500e+04 * invT) *
              0.0369740442209569;
    // species 18: ch2co
    result += y[18] *
              (+6.03881700e+00 + 2.90242000e-03 * tc[1] -
               6.40318000e-07 * tc[2] + 6.98621250e-11 * tc[3] -
               2.91773600e-15 * tc[4] - 8.58340200e+03 * invT) *
              0.0237885672145967;
    // species 19: hcco
    result += y[19] *
              (+6.75807300e+00 + 1.00020000e-03 * tc[1] -
               6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
               3.93033000e-15 * tc[4] + 1.90151300e+04 * invT) *
              0.0243730044602598;
    // species 20: ch3cho
    result += y[20] *
              (+5.86865000e+00 + 5.39712000e-03 * tc[1] -
               1.21517667e-06 * tc[2] + 1.35322800e-10 * tc[3] -
               5.79368800e-15 * tc[4] - 2.26456900e+04 * invT) *
              0.0226999296302181;
    // species 24: nc3h7
    result += y[24] *
              (+7.97829100e+00 + 7.88056500e-03 * tc[1] -
               1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
               7.64995600e-15 * tc[4] + 7.57940200e+03 * invT) *
              0.0232077792476038;
    // species 38: c3h3
    result += y[38] *
              (+8.83104700e+00 + 2.17859750e-03 * tc[1] -
               1.36968900e-07 * tc[2] - 5.92180750e-11 * tc[3] +
               8.75304000e-15 * tc[4] + 3.84742000e+04 * invT) *
              0.0256036049875823;
    // species 54: n2
    result += y[54] *
              (+2.92664000e+00 + 7.43988500e-04 * tc[1] -
               1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 4: oh
    result += y[4] *
              (+3.43586219e+00 + 1.01117902e-04 * tc[1] -
               3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
               1.48730206e-14 * tc[4] + 3.74321252e+03 * invT) *
              0.0587993179279120;
  } else {
    // species 4: oh
    result += y[4] *
              (+2.62599754e+00 + 6.59962030e-04 * tc[1] -
               1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
               3.64096032e-16 * tc[4] + 4.12085374e+03 * invT) *
              0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 10: ho2
    result += y[10] *
              (+3.18310656e+00 + 1.83383975e-03 * tc[1] -
               3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
               3.02279824e-14 * tc[4] + 8.09181013e+02 * invT) *
              0.0302975216627280;
    // species 32: ch3o2h
    result += y[32] *
              (+3.23442817e+00 + 9.50648835e-03 * tc[1] -
               3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
               8.23660444e-14 * tc[4] - 1.77197926e+04 * invT) *
              0.0208155533814866;
    // species 47: c7h15o2-2
    result += y[47] *
              (+3.55252917e-01 + 4.71190503e-02 * tc[1] -
               2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
               8.26422210e-13 * tc[4] - 2.15795254e+04 * invT) *
              0.0076222417012843;
    // species 48: c7h15o2-3
    result += y[48] *
              (+3.55252917e-01 + 4.71190503e-02 * tc[1] -
               2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
               8.26422210e-13 * tc[4] - 2.15795254e+04 * invT) *
              0.0076222417012843;
    // species 49: c7h15o2-4
    result += y[49] *
              (+3.55252917e-01 + 4.71190503e-02 * tc[1] -
               2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
               8.26422210e-13 * tc[4] - 2.15795254e+04 * invT) *
              0.0076222417012843;
  } else {
    // species 10: ho2
    result += y[10] *
              (+4.10547423e+00 + 1.19226417e-03 * tc[1] -
               2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
               1.43280022e-15 * tc[4] + 3.98127689e+02 * invT) *
              0.0302975216627280;
    // species 32: ch3o2h
    result += y[32] *
              (+8.43117091e+00 + 4.03408955e-03 * tc[1] -
               9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
               5.01384292e-15 * tc[4] - 1.96678771e+04 * invT) *
              0.0208155533814866;
    // species 47: c7h15o2-2
    result += y[47] *
              (+2.60535640e+01 + 1.71915844e-02 * tc[1] -
               3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
               2.16104798e-14 * tc[4] - 3.06842095e+04 * invT) *
              0.0076222417012843;
    // species 48: c7h15o2-3
    result += y[48] *
              (+2.60535640e+01 + 1.71915844e-02 * tc[1] -
               3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
               2.16104798e-14 * tc[4] - 3.06842095e+04 * invT) *
              0.0076222417012843;
    // species 49: c7h15o2-4
    result += y[49] *
              (+2.60535640e+01 + 1.71915844e-02 * tc[1] -
               3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
               2.16104798e-14 * tc[4] - 3.06842095e+04 * invT) *
              0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 13: c2h6
    result += y[13] *
              (-2.52854344e-02 + 1.20382377e-02 * tc[1] -
               3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
               1.05973723e-14 * tc[4] - 1.12345534e+04 * invT) *
              0.0332557366145660;
  } else {
    // species 13: c2h6
    result += y[13] *
              (+6.10683385e+00 + 6.46181805e-03 * tc[1] -
               1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
               7.97803464e-15 * tc[4] - 1.37500014e+04 * invT) *
              0.0332557366145660;
  }

  // species with midpoint at T=1400 kelvin
  if (tT < 1400) {
    // species 21: c3h4-a
    result += y[21] *
              (+2.53983100e+00 + 8.16718500e-03 * tc[1] -
               5.88316667e-07 * tc[2] - 1.16184125e-09 * tc[3] +
               3.45826200e-13 * tc[4] + 2.25124300e+04 * invT) *
              0.0249594409085237;
  } else {
    // species 21: c3h4-a
    result += y[21] *
              (+9.77625600e+00 + 2.65106900e-03 * tc[1] -
               1.23370600e-07 * tc[2] - 7.56596500e-11 * tc[3] +
               1.01791620e-14 * tc[4] + 1.95497200e+04 * invT) *
              0.0249594409085237;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 22: c3h6
    result += y[22] *
              (+3.94615444e-01 + 1.44553831e-02 * tc[1] -
               5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
               6.75780704e-14 * tc[4] + 1.06688164e+03 * invT) *
              0.0237636938285687;
    // species 46: c7h15o2-1
    result += y[46] *
              (+1.20888552e+00 + 4.42030853e-02 * tc[1] -
               1.93287087e-05 * tc[2] + 5.08936723e-09 * tc[3] -
               6.12920672e-13 * tc[4] - 1.92918765e+04 * invT) *
              0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result += y[51] *
              (+1.89718004e+00 + 5.31148980e-02 * tc[1] -
               2.67590073e-05 * tc[2] + 8.09122732e-09 * tc[3] -
               1.09170094e-12 * tc[4] - 3.22790229e+04 * invT) *
              0.0061277138112542;
  } else {
    // species 22: c3h6
    result += y[22] *
              (+8.01595958e+00 + 6.85118170e-03 * tc[1] -
               1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
               8.34740252e-15 * tc[4] - 1.87821271e+03 * invT) *
              0.0237636938285687;
    // species 46: c7h15o2-1
    result += y[46] *
              (+2.52656556e+01 + 1.75401794e-02 * tc[1] -
               4.03929337e-06 * tc[2] + 4.73402015e-10 * tc[3] -
               2.20708250e-14 * tc[4] - 2.81113392e+04 * invT) *
              0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result += y[51] *
              (+3.20144349e+01 + 1.70027998e-02 * tc[1] -
               3.94719520e-06 * tc[2] + 4.65150867e-10 * tc[3] -
               2.17702024e-14 * tc[4] - 4.27171859e+04 * invT) *
              0.0061277138112542;
  }

  // species with midpoint at T=1398 kelvin
  if (tT < 1398) {
    // species 23: c4h6
    result += y[23] *
              (-1.43095121e+00 + 2.39353031e-02 * tc[1] -
               1.38482267e-05 * tc[2] + 4.78873880e-09 * tc[3] -
               7.14317014e-13 * tc[4] + 1.17551314e+04 * invT) *
              0.0184870221104784;
  } else {
    // species 23: c4h6
    result += y[23] *
              (+1.11633789e+01 + 6.85819825e-03 * tc[1] -
               1.56571928e-06 * tc[2] + 1.82423459e-10 * tc[3] -
               8.46972406e-15 * tc[4] + 7.79039770e+03 * invT) *
              0.0184870221104784;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 25: c4h7
    result += y[25] *
              (-3.50508352e-01 + 2.13255622e-02 * tc[1] -
               9.69931243e-06 * tc[2] + 2.63509785e-09 * tc[3] -
               3.20119708e-13 * tc[4] + 1.49933591e+04 * invT) *
              0.0181488203266788;
    // species 26: c4h8-1
    result += y[26] *
              (-8.31372089e-01 + 2.26290489e-02 * tc[1] -
               9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
               2.86383360e-13 * tc[4] - 1.57875035e+03 * invT) *
              0.0178227703714265;
    // species 29: c5h9
    result += y[29] *
              (-1.38013950e+00 + 2.78804243e-02 * tc[1] -
               1.23381309e-05 * tc[2] + 3.17209752e-09 * tc[3] -
               3.57077670e-13 * tc[4] + 1.25589824e+04 * invT) *
              0.0144661275623128;
    // species 30: c5h10-1
    result += y[30] *
              (-1.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
  } else {
    // species 25: c4h7
    result += y[25] *
              (+1.12103578e+01 + 8.02415980e-03 * tc[1] -
               1.82167431e-06 * tc[2] + 2.11485263e-10 * tc[3] -
               9.79545478e-15 * tc[4] + 1.09041937e+04 * invT) *
              0.0181488203266788;
    // species 26: c4h8-1
    result += y[26] *
              (+1.13508668e+01 + 9.03089385e-03 * tc[1] -
               2.05364343e-06 * tc[2] + 2.38663240e-10 * tc[3] -
               1.10617928e-14 * tc[4] - 5.97871038e+03 * invT) *
              0.0178227703714265;
    // species 29: c5h9
    result += y[29] *
              (+1.41860454e+01 + 1.03564449e-02 * tc[1] -
               2.35653539e-06 * tc[2] + 2.74017833e-10 * tc[3] -
               1.27064442e-14 * tc[4] + 7.00496135e+03 * invT) *
              0.0144661275623128;
    // species 30: c5h10-1
    result += y[30] *
              (+1.45851539e+01 + 1.12036235e-02 * tc[1] -
               2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
               1.36877028e-14 * tc[4] - 1.00898205e+04 * invT) *
              0.0142582162971412;
  }

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 27: ch3coch2
    result += y[27] *
              (+1.80339187e+00 + 1.50703542e-02 * tc[1] -
               6.45018507e-06 * tc[2] + 1.59549759e-09 * tc[3] -
               1.73220636e-13 * tc[4] - 5.37233261e+03 * invT) *
              0.0175217269414073;
    // species 45: nc7h16
    result += y[45] *
              (-1.26836187e+00 + 4.27177910e-02 * tc[1] -
               1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
               4.04789850e-13 * tc[4] - 2.56586565e+04 * invT) *
              0.0099795419390250;
  } else {
    // species 27: ch3coch2
    result += y[27] *
              (+1.02303975e+01 + 5.82470805e-03 * tc[1] -
               1.33668512e-06 * tc[2] + 1.56301312e-10 * tc[3] -
               7.27568724e-15 * tc[4] - 8.44380462e+03 * invT) *
              0.0175217269414073;
    // species 45: nc7h16
    result += y[45] *
              (+2.22148969e+01 + 1.73837875e-02 * tc[1] -
               3.94690430e-06 * tc[2] + 4.58246195e-10 * tc[3] -
               2.12260532e-14 * tc[4] - 3.42760081e+04 * invT) *
              0.0099795419390250;
  }

  // species with midpoint at T=1378 kelvin
  if (tT < 1378) {
    // species 28: c2h5cho
    result += y[28] *
              (+2.16308444e+00 + 1.47750632e-02 * tc[1] -
               5.08154173e-06 * tc[2] + 8.73759867e-10 * tc[3] -
               4.77793254e-14 * tc[4] - 2.42260137e+04 * invT) *
              0.0172176308539945;
    // species 40: nc3h7cho
    result += y[40] *
              (+1.87415959e+00 + 2.09620158e-02 * tc[1] -
               7.83829263e-06 * tc[2] + 1.56728418e-09 * tc[3] -
               1.21888782e-13 * tc[4] - 2.71032194e+04 * invT) *
              0.0138682790852483;
  } else {
    // species 28: c2h5cho
    result += y[28] *
              (+1.02427695e+01 + 6.98209945e-03 * tc[1] -
               1.58749334e-06 * tc[2] + 1.84526426e-10 * tc[3] -
               8.55519006e-15 * tc[4] - 2.74143135e+04 * invT) *
              0.0172176308539945;
    // species 40: nc3h7cho
    result += y[40] *
              (+1.35988068e+01 + 9.08262370e-03 * tc[1] -
               2.05948153e-06 * tc[2] + 2.38995052e-10 * tc[3] -
               1.10688592e-14 * tc[4] - 3.15845348e+04 * invT) *
              0.0138682790852483;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 31: ch3o2
    result += y[31] *
              (+4.26146906e+00 + 5.04367995e-03 * tc[1] -
               1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
               8.36678206e-15 * tc[4] - 6.84394259e+02 * invT) *
              0.0212616673399528;
    // species 36: pc4h9o2
    result += y[36] *
              (+1.94363650e+00 + 2.57756581e-02 * tc[1] -
               1.09428133e-05 * tc[2] + 2.82662150e-09 * tc[3] -
               3.40237212e-13 * tc[4] - 1.08358103e+04 * invT) *
              0.0112215813452432;
  } else {
    // species 31: ch3o2
    result += y[31] *
              (+5.95787891e+00 + 3.95364313e-03 * tc[1] -
               8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
               4.78014660e-15 * tc[4] - 1.53574838e+03 * invT) *
              0.0212616673399528;
    // species 36: pc4h9o2
    result += y[36] *
              (+1.57845448e+01 + 1.07605455e-02 * tc[1] -
               2.48303006e-06 * tc[2] + 2.91395178e-10 * tc[3] -
               1.35977122e-14 * tc[4] - 1.60146054e+04 * invT) *
              0.0112215813452432;
  }

  // species with midpoint at T=1402 kelvin
  if (tT < 1402) {
    // species 33: c2h3co
    result += y[33] *
              (+1.36242013e+00 + 1.57636986e-02 * tc[1] -
               1.00072978e-05 * tc[2] + 3.70417780e-09 * tc[3] -
               5.75943060e-13 * tc[4] + 4.25770215e+03 * invT) *
              0.0181633246149375;
  } else {
    // species 33: c2h3co
    result += y[33] *
              (+9.37467676e+00 + 3.95648450e-03 * tc[1] -
               8.90660933e-07 * tc[2] + 1.02778857e-10 * tc[3] -
               4.73957962e-15 * tc[4] + 1.92969514e+03 * invT) *
              0.0181633246149375;
  }

  // species with midpoint at T=1393 kelvin
  if (tT < 1393) {
    // species 34: c2h3cho
    result += y[34] *
              (+2.92355162e-01 + 1.77160709e-02 * tc[1] -
               9.83121080e-06 * tc[2] + 3.20250310e-09 * tc[3] -
               4.52288216e-13 * tc[4] - 1.16521584e+04 * invT) *
              0.0178367579908676;
  } else {
    // species 34: c2h3cho
    result += y[34] *
              (+1.04184959e+01 + 4.74481661e-03 * tc[1] -
               1.09770176e-06 * tc[2] + 1.29069801e-10 * tc[3] -
               6.03174582e-15 * tc[4] - 1.49630281e+04 * invT) *
              0.0178367579908676;
  }

  // species with midpoint at T=1387 kelvin
  if (tT < 1387) {
    // species 35: c4h8ooh1-3o2
    result += y[35] *
              (+2.22400728e+00 + 3.52497310e-02 * tc[1] -
               1.88992942e-05 * tc[2] + 6.06569377e-09 * tc[3] -
               8.59430918e-13 * tc[4] - 2.37391490e+04 * invT) *
              0.0082568201334302;
  } else {
    // species 35: c4h8ooh1-3o2
    result += y[35] *
              (+2.23244015e+01 + 1.02737388e-02 * tc[1] -
               2.39692116e-06 * tc[2] + 2.83403840e-10 * tc[3] -
               1.32948877e-14 * tc[4] - 3.05468277e+04 * invT) *
              0.0082568201334302;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 37: c3h5-a
    result += y[37] *
              (-5.29131958e-01 + 1.67279550e-02 * tc[1] -
               8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
               3.46516680e-13 * tc[4] + 1.93834226e+04 * invT) *
              0.0243468945535997;
  } else {
    // species 37: c3h5-a
    result += y[37] *
              (+8.45883958e+00 + 5.63477415e-03 * tc[1] -
               1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
               6.87836060e-15 * tc[4] + 1.63576092e+04 * invT) *
              0.0243468945535997;
  }

  // species with midpoint at T=1386 kelvin
  if (tT < 1386) {
    // species 39: nc4ket13
    result += y[39] *
              (+2.74883461e+00 + 2.93468373e-02 * tc[1] -
               1.49868632e-05 * tc[2] + 4.58000325e-09 * tc[3] -
               6.23530738e-13 * tc[4] - 4.01065878e+04 * invT) *
              0.0096056865664473;
  } else {
    // species 39: nc4ket13
    result += y[39] *
              (+1.96430808e+01 + 9.04702830e-03 * tc[1] -
               2.11021077e-06 * tc[2] + 2.49465100e-10 * tc[3] -
               1.17015292e-14 * tc[4] - 4.59588851e+04 * invT) *
              0.0096056865664473;
  }

  // species with midpoint at T=1383 kelvin
  if (tT < 1383) {
    // species 41: c2h5coch2
    result += y[41] *
              (+1.54013856e+00 + 2.19743129e-02 * tc[1] -
               9.90008070e-06 * tc[2] + 2.63738282e-09 * tc[3] -
               3.17197538e-13 * tc[4] - 9.50796505e+03 * invT) *
              0.0140648954275025;
  } else {
    // species 41: c2h5coch2
    result += y[41] *
              (+1.42098738e+01 + 7.89332295e-03 * tc[1] -
               1.83509728e-06 * tc[2] + 2.16467635e-10 * tc[3] -
               1.01382666e-14 * tc[4] - 1.41284951e+04 * invT) *
              0.0140648954275025;
  }

  // species with midpoint at T=1389 kelvin
  if (tT < 1389) {
    // species 42: nc3h7coch2
    result += y[42] *
              (+9.58299271e-01 + 2.84081266e-02 * tc[1] -
               1.33037594e-05 * tc[2] + 3.81678785e-09 * tc[3] -
               4.98442094e-13 * tc[4] - 1.23062238e+04 * invT) *
              0.0117472922491366;
    // species 50: c7h14ooh4-3
    result += y[50] *
              (+8.49786005e-01 + 4.62553598e-02 * tc[1] -
               2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
               6.25440796e-13 * tc[4] - 1.53640679e+04 * invT) *
              0.0076222417012843;
  } else {
    // species 42: nc3h7coch2
    result += y[42] *
              (+1.61502419e+01 + 1.07046733e-02 * tc[1] -
               2.45353205e-06 * tc[2] + 2.86642040e-10 * tc[3] -
               1.33342544e-14 * tc[4] - 1.76968561e+04 * invT) *
              0.0117472922491366;
    // species 50: c7h14ooh4-3
    result += y[50] *
              (+2.74034778e+01 + 1.63763947e-02 * tc[1] -
               3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
               2.05573890e-14 * tc[4] - 2.48636651e+04 * invT) *
              0.0076222417012843;
  }

  // species with midpoint at T=1381 kelvin
  if (tT < 1381) {
    // species 43: nc4h9cho
    result += y[43] *
              (+1.59663472e+00 + 2.71770708e-02 * tc[1] -
               1.07006884e-05 * tc[2] + 2.33943390e-09 * tc[3] -
               2.13377864e-13 * tc[4] - 2.99841025e+04 * invT) *
              0.0116098172614763;
  } else {
    // species 43: nc4h9cho
    result += y[43] *
              (+1.67965163e+01 + 1.12842260e-02 * tc[1] -
               2.55877196e-06 * tc[2] + 2.96923422e-10 * tc[3] -
               1.37509111e-14 * tc[4] - 3.56826080e+04 * invT) *
              0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 44: nc4h9co
    result += y[44] *
              (+2.43530238e+00 + 2.46841188e-02 * tc[1] -
               9.66276940e-06 * tc[2] + 2.10715953e-09 * tc[3] -
               1.93657434e-13 * tc[4] - 1.14675541e+04 * invT) *
              0.0117472922491366;
  } else {
    // species 44: nc4h9co
    result += y[44] *
              (+1.61782939e+01 + 1.03995960e-02 * tc[1] -
               2.37262631e-06 * tc[2] + 2.76399937e-10 * tc[3] -
               1.28339437e-14 * tc[4] - 1.66537752e+04 * invT) *
              0.0117472922491366;
  }

  // species with midpoint at T=1395 kelvin
  if (tT < 1395) {
    // species 52: c7h14o1-3
    result += y[52] *
              (-5.50036450e+00 + 5.00775440e-02 * tc[1] -
               2.43311952e-05 * tc[2] + 6.98360675e-09 * tc[3] -
               8.84491392e-13 * tc[4] - 2.44292287e+04 * invT) *
              0.0087574876519424;
  } else {
    // species 52: c7h14o1-3
    result += y[52] *
              (+2.26918916e+01 + 1.66255236e-02 * tc[1] -
               3.81525883e-06 * tc[2] + 4.46138838e-10 * tc[3] -
               2.07682224e-14 * tc[4] - 3.41591419e+04 * invT) *
              0.0087574876519424;
  }

  // species with midpoint at T=1399 kelvin
  if (tT < 1399) {
    // species 53: c7h14o2-4
    result += y[53] *
              (-5.39477206e+00 + 5.09232885e-02 * tc[1] -
               2.53348745e-05 * tc[2] + 7.41345050e-09 * tc[3] -
               9.49708740e-13 * tc[4] - 2.67118295e+04 * invT) *
              0.0087574876519424;
  } else {
    // species 53: c7h14o2-4
    result += y[53] *
              (+2.32692731e+01 + 1.62792695e-02 * tc[1] -
               3.72083020e-06 * tc[2] + 4.33934145e-10 * tc[3] -
               2.01626430e-14 * tc[4] - 3.64349664e+04 * invT) *
              0.0087574876519424;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[55];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 55; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: h
    result += y[0] *
              (+1.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 2.54747466e+04 * invT) *
              0.9920634920634921;
    // species 1: h2
    result += y[1] *
              (+2.29812400e+00 + 4.12472100e-04 * tc[1] -
               2.71433833e-07 * tc[2] - 2.36885850e-11 * tc[3] +
               8.26974400e-14 * tc[4] - 1.01252100e+03 * invT) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+1.94642900e+00 - 8.19083000e-04 * tc[1] +
               8.07010667e-07 * tc[2] - 4.00710750e-10 * tc[3] +
               7.78139200e-14 * tc[4] + 2.91476400e+04 * invT) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+2.21293600e+00 + 5.63743000e-04 * tc[1] -
               1.91871667e-07 * tc[2] + 3.28469250e-10 * tc[3] -
               1.75371080e-13 * tc[4] - 1.00524900e+03 * invT) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+2.38684200e+00 + 1.73749100e-03 * tc[1] -
               2.11823200e-06 * tc[2] + 1.74214525e-09 * tc[3] -
               5.01317600e-13 * tc[4] - 3.02081100e+04 * invT) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+2.26245200e+00 + 7.55970500e-04 * tc[1] -
               1.29391833e-06 * tc[2] + 1.39548600e-09 * tc[3] -
               4.94990200e-13 * tc[4] - 1.43105400e+04 * invT) *
              0.0357015351660121;
    // species 7: co2
    result += y[7] *
              (+1.27572500e+00 + 4.96103600e-03 * tc[1] -
               3.46970333e-06 * tc[2] + 1.71667175e-09 * tc[3] -
               4.23456000e-13 * tc[4] - 4.83731400e+04 * invT) *
              0.0227226249176305;
    // species 8: ch3
    result += y[8] *
              (+1.43044300e+00 + 5.56205000e-03 * tc[1] -
               5.60073333e-06 * tc[2] + 4.05457250e-09 * tc[3] -
               1.17299060e-12 * tc[4] + 1.64237800e+04 * invT) *
              0.0665114732291320;
    // species 9: ch4
    result += y[9] *
              (-2.21258500e-01 + 8.73834000e-03 * tc[1] -
               9.27803000e-06 * tc[2] + 7.62427000e-09 * tc[3] -
               2.44786200e-12 * tc[4] - 9.82522900e+03 * invT) *
              0.0623324814560868;
    // species 11: h2o2
    result += y[11] *
              (+2.38875400e+00 + 3.28461300e-03 * tc[1] -
               4.95004333e-08 * tc[2] - 1.15645150e-09 * tc[3] +
               4.94303000e-13 * tc[4] - 1.76631500e+04 * invT) *
              0.0293996589639560;
    // species 12: ch2o
    result += y[12] *
              (+6.52731000e-01 + 6.31572000e-03 * tc[1] -
               6.29389333e-06 * tc[2] + 5.12507750e-09 * tc[3] -
               1.68264740e-12 * tc[4] - 1.48654000e+04 * invT) *
              0.0333044694598015;
    // species 14: c2h4
    result += y[14] *
              (-1.86148800e+00 + 1.39808150e-02 * tc[1] -
               1.12955900e-05 * tc[2] + 6.96288000e-09 * tc[3] -
               1.94757580e-12 * tc[4] + 5.57304600e+03 * invT) *
              0.0356455407428531;
    // species 15: c2h5
    result += y[15] *
              (+1.69070200e+00 + 4.35956650e-03 * tc[1] +
               1.47327967e-06 * tc[2] + 2.33467575e-10 * tc[3] -
               7.85554600e-13 * tc[4] + 1.28704000e+04 * invT) *
              0.0344091941366733;
    // species 16: c2h2
    result += y[16] *
              (+1.01356200e+00 + 7.59522500e-03 * tc[1] -
               5.38773000e-06 * tc[2] + 2.26974800e-09 * tc[3] -
               3.82549200e-13 * tc[4] + 2.61244400e+04 * invT) *
              0.0384054074813734;
    // species 17: c2h3
    result += y[17] *
              (+1.45927600e+00 + 3.68573800e-03 * tc[1] +
               7.03291000e-07 * tc[2] - 3.30410500e-10 * tc[3] -
               2.36956800e-13 * tc[4] + 3.33522500e+04 * invT) *
              0.0369740442209569;
    // species 18: ch2co
    result += y[18] *
              (+1.97497100e+00 + 6.05935500e-03 * tc[1] -
               7.81682000e-07 * tc[2] - 1.61667125e-09 * tc[3] +
               7.81129800e-13 * tc[4] - 7.63263700e+03 * invT) *
              0.0237885672145967;
    // species 19: hcco
    result += y[19] *
              (+4.04796500e+00 + 2.22673900e-03 * tc[1] +
               7.56094333e-08 * tc[2] - 3.70523750e-10 * tc[3] +
               4.50148400e-14 * tc[4] + 1.96589200e+04 * invT) *
              0.0243730044602598;
    // species 20: ch3cho
    result += y[20] *
              (+1.50569500e+00 + 6.68495500e-03 * tc[1] +
               1.55731767e-06 * tc[2] - 2.82035000e-09 * tc[3] +
               8.52713200e-13 * tc[4] - 2.12458900e+04 * invT) *
              0.0226999296302181;
    // species 24: nc3h7
    result += y[24] *
              (+9.22537000e-01 + 1.23946350e-02 * tc[1] +
               6.03416333e-07 * tc[2] - 4.45816500e-09 * tc[3] +
               1.71659920e-12 * tc[4] + 9.71328100e+03 * invT) *
              0.0232077792476038;
    // species 38: c3h3
    result += y[38] *
              (+3.75420000e+00 + 5.54014000e-03 * tc[1] +
               9.31107667e-08 * tc[2] - 1.36980300e-09 * tc[3] +
               3.89925800e-13 * tc[4] + 3.98888300e+04 * invT) *
              0.0256036049875823;
    // species 54: n2
    result += y[54] *
              (+2.29867700e+00 + 7.04120000e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88971000e-13 * tc[4] - 1.02090000e+03 * invT) *
              0.0356964374955379;
  } else {
    // species 0: h
    result += y[0] *
              (+1.50104422e+00 + 0.00000000e+00 * tc[1] +
               0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3] +
               0.00000000e+00 * tc[4] + 2.54747466e+04 * invT) *
              0.9920634920634921;
    // species 1: h2
    result += y[1] *
              (+1.99142300e+00 + 3.50032200e-04 * tc[1] -
               1.87794300e-08 * tc[2] - 2.30789450e-12 * tc[3] +
               3.16550400e-16 * tc[4] - 8.35034000e+02 * invT) *
              0.4960317460317460;
    // species 2: o
    result += y[2] *
              (+1.54206000e+00 - 1.37753100e-05 * tc[1] -
               1.03426767e-09 * tc[2] + 1.13776675e-12 * tc[3] -
               8.73610400e-17 * tc[4] + 2.92308000e+04 * invT) *
              0.0625039064941559;
    // species 3: o2
    result += y[3] *
              (+2.69757800e+00 + 3.06759850e-04 * tc[1] -
               4.19614000e-08 * tc[2] + 4.43820250e-12 * tc[3] -
               2.27287000e-16 * tc[4] - 1.23393000e+03 * invT) *
              0.0312519532470779;
    // species 5: h2o
    result += y[5] *
              (+1.67214600e+00 + 1.52814650e-03 * tc[1] -
               2.91008667e-07 * tc[2] + 3.00249000e-11 * tc[3] -
               1.27832360e-15 * tc[4] - 2.98992100e+04 * invT) *
              0.0555092978073827;
    // species 6: co
    result += y[6] *
              (+2.02507800e+00 + 7.21344500e-04 * tc[1] -
               1.87694267e-07 * tc[2] + 2.54645250e-11 * tc[3] -
               1.38219040e-15 * tc[4] - 1.42683500e+04 * invT) *
              0.0357015351660121;
    // species 7: co2
    result += y[7] *
              (+3.45362300e+00 + 1.57008450e-03 * tc[1] -
               4.26137000e-07 * tc[2] + 5.98499250e-11 * tc[3] -
               3.33806600e-15 * tc[4] - 4.89669600e+04 * invT) *
              0.0227226249176305;
    // species 8: ch3
    result += y[8] *
              (+1.84405200e+00 + 3.06898700e-03 * tc[1] -
               7.43448333e-07 * tc[2] + 9.46290250e-11 * tc[3] -
               4.90431800e-15 * tc[4] + 1.64378100e+04 * invT) *
              0.0665114732291320;
    // species 9: ch4
    result += y[9] *
              (+6.83479000e-01 + 5.11862000e-03 * tc[1] -
               1.29170967e-06 * tc[2] + 1.69639625e-10 * tc[3] -
               9.00684600e-15 * tc[4] - 1.00807900e+04 * invT) *
              0.0623324814560868;
    // species 11: h2o2
    result += y[11] *
              (+3.57316700e+00 + 2.16806800e-03 * tc[1] -
               4.91563000e-07 * tc[2] + 5.87226000e-11 * tc[3] -
               2.86330800e-15 * tc[4] - 1.80069600e+04 * invT) *
              0.0293996589639560;
    // species 12: ch2o
    result += y[12] *
              (+1.99560600e+00 + 3.34066050e-03 * tc[1] -
               8.76318333e-07 * tc[2] + 1.18428825e-10 * tc[3] -
               6.42503400e-15 * tc[4] - 1.53203700e+04 * invT) *
              0.0333044694598015;
    // species 14: c2h4
    result += y[14] *
              (+2.52841900e+00 + 5.74259000e-03 * tc[1] -
               1.47279500e-06 * tc[2] + 1.96115025e-10 * tc[3] -
               1.05336960e-14 * tc[4] + 4.42828900e+03 * invT) *
              0.0356455407428531;
    // species 15: c2h5
    result += y[15] *
              (+6.19048000e+00 + 3.24203850e-03 * tc[1] -
               2.14268833e-07 * tc[2] - 5.86969750e-11 * tc[3] +
               7.76175400e-15 * tc[4] + 1.06745500e+04 * invT) *
              0.0344091941366733;
    // species 16: c2h2
    result += y[16] *
              (+3.43677000e+00 + 2.68801950e-03 * tc[1] -
               6.37605667e-07 * tc[2] + 8.21594750e-11 * tc[3] -
               4.31342000e-15 * tc[4] + 2.56676600e+04 * invT) *
              0.0384054074813734;
    // species 17: c2h3
    result += y[17] *
              (+4.93346800e+00 + 2.00887300e-03 * tc[1] -
               1.32224667e-07 * tc[2] - 3.60316750e-11 * tc[3] +
               4.75728800e-15 * tc[4] + 3.18543500e+04 * invT) *
              0.0369740442209569;
    // species 18: ch2co
    result += y[18] *
              (+5.03881700e+00 + 2.90242000e-03 * tc[1] -
               6.40318000e-07 * tc[2] + 6.98621250e-11 * tc[3] -
               2.91773600e-15 * tc[4] - 8.58340200e+03 * invT) *
              0.0237885672145967;
    // species 19: hcco
    result += y[19] *
              (+5.75807300e+00 + 1.00020000e-03 * tc[1] -
               6.75869000e-08 * tc[2] - 2.60283000e-11 * tc[3] +
               3.93033000e-15 * tc[4] + 1.90151300e+04 * invT) *
              0.0243730044602598;
    // species 20: ch3cho
    result += y[20] *
              (+4.86865000e+00 + 5.39712000e-03 * tc[1] -
               1.21517667e-06 * tc[2] + 1.35322800e-10 * tc[3] -
               5.79368800e-15 * tc[4] - 2.26456900e+04 * invT) *
              0.0226999296302181;
    // species 24: nc3h7
    result += y[24] *
              (+6.97829100e+00 + 7.88056500e-03 * tc[1] -
               1.72441433e-06 * tc[2] + 1.86097300e-10 * tc[3] -
               7.64995600e-15 * tc[4] + 7.57940200e+03 * invT) *
              0.0232077792476038;
    // species 38: c3h3
    result += y[38] *
              (+7.83104700e+00 + 2.17859750e-03 * tc[1] -
               1.36968900e-07 * tc[2] - 5.92180750e-11 * tc[3] +
               8.75304000e-15 * tc[4] + 3.84742000e+04 * invT) *
              0.0256036049875823;
    // species 54: n2
    result += y[54] *
              (+1.92664000e+00 + 7.43988500e-04 * tc[1] -
               1.89492033e-07 * tc[2] + 2.52426000e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
  }

  // species with midpoint at T=1357 kelvin
  if (tT < 1357) {
    // species 4: oh
    result += y[4] *
              (+2.43586219e+00 + 1.01117902e-04 * tc[1] -
               3.78488040e-08 * tc[2] + 6.06112872e-11 * tc[3] -
               1.48730206e-14 * tc[4] + 3.74321252e+03 * invT) *
              0.0587993179279120;
  } else {
    // species 4: oh
    result += y[4] *
              (+1.62599754e+00 + 6.59962030e-04 * tc[1] -
               1.19908223e-07 * tc[2] + 1.06407700e-11 * tc[3] -
               3.64096032e-16 * tc[4] + 4.12085374e+03 * invT) *
              0.0587993179279120;
  }

  // species with midpoint at T=1390 kelvin
  if (tT < 1390) {
    // species 10: ho2
    result += y[10] *
              (+2.18310656e+00 + 1.83383975e-03 * tc[1] -
               3.10795041e-07 * tc[2] - 8.14632298e-11 * tc[3] +
               3.02279824e-14 * tc[4] + 8.09181013e+02 * invT) *
              0.0302975216627280;
    // species 32: ch3o2h
    result += y[32] *
              (+2.23442817e+00 + 9.50648835e-03 * tc[1] -
               3.77954290e-06 * tc[2] + 8.50766632e-10 * tc[3] -
               8.23660444e-14 * tc[4] - 1.77197926e+04 * invT) *
              0.0208155533814866;
    // species 47: c7h15o2-2
    result += y[47] *
              (-6.44747083e-01 + 4.71190503e-02 * tc[1] -
               2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
               8.26422210e-13 * tc[4] - 2.15795254e+04 * invT) *
              0.0076222417012843;
    // species 48: c7h15o2-3
    result += y[48] *
              (-6.44747083e-01 + 4.71190503e-02 * tc[1] -
               2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
               8.26422210e-13 * tc[4] - 2.15795254e+04 * invT) *
              0.0076222417012843;
    // species 49: c7h15o2-4
    result += y[49] *
              (-6.44747083e-01 + 4.71190503e-02 * tc[1] -
               2.22318369e-05 * tc[2] + 6.36988958e-09 * tc[3] -
               8.26422210e-13 * tc[4] - 2.15795254e+04 * invT) *
              0.0076222417012843;
  } else {
    // species 10: ho2
    result += y[10] *
              (+3.10547423e+00 + 1.19226417e-03 * tc[1] -
               2.68782663e-07 * tc[2] + 3.10479308e-11 * tc[3] -
               1.43280022e-15 * tc[4] + 3.98127689e+02 * invT) *
              0.0302975216627280;
    // species 32: ch3o2h
    result += y[32] *
              (+7.43117091e+00 + 4.03408955e-03 * tc[1] -
               9.23649737e-07 * tc[2] + 1.07833061e-10 * tc[3] -
               5.01384292e-15 * tc[4] - 1.96678771e+04 * invT) *
              0.0208155533814866;
    // species 47: c7h15o2-2
    result += y[47] *
              (+2.50535640e+01 + 1.71915844e-02 * tc[1] -
               3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
               2.16104798e-14 * tc[4] - 3.06842095e+04 * invT) *
              0.0076222417012843;
    // species 48: c7h15o2-3
    result += y[48] *
              (+2.50535640e+01 + 1.71915844e-02 * tc[1] -
               3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
               2.16104798e-14 * tc[4] - 3.06842095e+04 * invT) *
              0.0076222417012843;
    // species 49: c7h15o2-4
    result += y[49] *
              (+2.50535640e+01 + 1.71915844e-02 * tc[1] -
               3.95710823e-06 * tc[2] + 4.63625602e-10 * tc[3] -
               2.16104798e-14 * tc[4] - 3.06842095e+04 * invT) *
              0.0076222417012843;
  }

  // species with midpoint at T=1384 kelvin
  if (tT < 1384) {
    // species 13: c2h6
    result += y[13] *
              (-1.02528543e+00 + 1.20382377e-02 * tc[1] -
               3.72978240e-06 * tc[2] + 5.20852252e-10 * tc[3] -
               1.05973723e-14 * tc[4] - 1.12345534e+04 * invT) *
              0.0332557366145660;
  } else {
    // species 13: c2h6
    result += y[13] *
              (+5.10683385e+00 + 6.46181805e-03 * tc[1] -
               1.47509065e-06 * tc[2] + 1.71847932e-10 * tc[3] -
               7.97803464e-15 * tc[4] - 1.37500014e+04 * invT) *
              0.0332557366145660;
  }

  // species with midpoint at T=1400 kelvin
  if (tT < 1400) {
    // species 21: c3h4-a
    result += y[21] *
              (+1.53983100e+00 + 8.16718500e-03 * tc[1] -
               5.88316667e-07 * tc[2] - 1.16184125e-09 * tc[3] +
               3.45826200e-13 * tc[4] + 2.25124300e+04 * invT) *
              0.0249594409085237;
  } else {
    // species 21: c3h4-a
    result += y[21] *
              (+8.77625600e+00 + 2.65106900e-03 * tc[1] -
               1.23370600e-07 * tc[2] - 7.56596500e-11 * tc[3] +
               1.01791620e-14 * tc[4] + 1.95497200e+04 * invT) *
              0.0249594409085237;
  }

  // species with midpoint at T=1388 kelvin
  if (tT < 1388) {
    // species 22: c3h6
    result += y[22] *
              (-6.05384556e-01 + 1.44553831e-02 * tc[1] -
               5.16289360e-06 * tc[2] + 9.72035522e-10 * tc[3] -
               6.75780704e-14 * tc[4] + 1.06688164e+03 * invT) *
              0.0237636938285687;
    // species 46: c7h15o2-1
    result += y[46] *
              (+2.08885520e-01 + 4.42030853e-02 * tc[1] -
               1.93287087e-05 * tc[2] + 5.08936723e-09 * tc[3] -
               6.12920672e-13 * tc[4] - 1.92918765e+04 * invT) *
              0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result += y[51] *
              (+8.97180040e-01 + 5.31148980e-02 * tc[1] -
               2.67590073e-05 * tc[2] + 8.09122732e-09 * tc[3] -
               1.09170094e-12 * tc[4] - 3.22790229e+04 * invT) *
              0.0061277138112542;
  } else {
    // species 22: c3h6
    result += y[22] *
              (+7.01595958e+00 + 6.85118170e-03 * tc[1] -
               1.55416578e-06 * tc[2] + 1.80313601e-10 * tc[3] -
               8.34740252e-15 * tc[4] - 1.87821271e+03 * invT) *
              0.0237636938285687;
    // species 46: c7h15o2-1
    result += y[46] *
              (+2.42656556e+01 + 1.75401794e-02 * tc[1] -
               4.03929337e-06 * tc[2] + 4.73402015e-10 * tc[3] -
               2.20708250e-14 * tc[4] - 2.81113392e+04 * invT) *
              0.0076222417012843;
    // species 51: c7h14ooh1-3o2
    result += y[51] *
              (+3.10144349e+01 + 1.70027998e-02 * tc[1] -
               3.94719520e-06 * tc[2] + 4.65150867e-10 * tc[3] -
               2.17702024e-14 * tc[4] - 4.27171859e+04 * invT) *
              0.0061277138112542;
  }

  // species with midpoint at T=1398 kelvin
  if (tT < 1398) {
    // species 23: c4h6
    result += y[23] *
              (-2.43095121e+00 + 2.39353031e-02 * tc[1] -
               1.38482267e-05 * tc[2] + 4.78873880e-09 * tc[3] -
               7.14317014e-13 * tc[4] + 1.17551314e+04 * invT) *
              0.0184870221104784;
  } else {
    // species 23: c4h6
    result += y[23] *
              (+1.01633789e+01 + 6.85819825e-03 * tc[1] -
               1.56571928e-06 * tc[2] + 1.82423459e-10 * tc[3] -
               8.46972406e-15 * tc[4] + 7.79039770e+03 * invT) *
              0.0184870221104784;
  }

  // species with midpoint at T=1392 kelvin
  if (tT < 1392) {
    // species 25: c4h7
    result += y[25] *
              (-1.35050835e+00 + 2.13255622e-02 * tc[1] -
               9.69931243e-06 * tc[2] + 2.63509785e-09 * tc[3] -
               3.20119708e-13 * tc[4] + 1.49933591e+04 * invT) *
              0.0181488203266788;
    // species 26: c4h8-1
    result += y[26] *
              (-1.83137209e+00 + 2.26290489e-02 * tc[1] -
               9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
               2.86383360e-13 * tc[4] - 1.57875035e+03 * invT) *
              0.0178227703714265;
    // species 29: c5h9
    result += y[29] *
              (-2.38013950e+00 + 2.78804243e-02 * tc[1] -
               1.23381309e-05 * tc[2] + 3.17209752e-09 * tc[3] -
               3.57077670e-13 * tc[4] + 1.25589824e+04 * invT) *
              0.0144661275623128;
    // species 30: c5h10-1
    result += y[30] *
              (-2.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
  } else {
    // species 25: c4h7
    result += y[25] *
              (+1.02103578e+01 + 8.02415980e-03 * tc[1] -
               1.82167431e-06 * tc[2] + 2.11485263e-10 * tc[3] -
               9.79545478e-15 * tc[4] + 1.09041937e+04 * invT) *
              0.0181488203266788;
    // species 26: c4h8-1
    result += y[26] *
              (+1.03508668e+01 + 9.03089385e-03 * tc[1] -
               2.05364343e-06 * tc[2] + 2.38663240e-10 * tc[3] -
               1.10617928e-14 * tc[4] - 5.97871038e+03 * invT) *
              0.0178227703714265;
    // species 29: c5h9
    result += y[29] *
              (+1.31860454e+01 + 1.03564449e-02 * tc[1] -
               2.35653539e-06 * tc[2] + 2.74017833e-10 * tc[3] -
               1.27064442e-14 * tc[4] + 7.00496135e+03 * invT) *
              0.0144661275623128;
    // species 30: c5h10-1
    result += y[30] *
              (+1.35851539e+01 + 1.12036235e-02 * tc[1] -
               2.54449342e-06 * tc[2] + 2.95472415e-10 * tc[3] -
               1.36877028e-14 * tc[4] - 1.00898205e+04 * invT) *
              0.0142582162971412;
  }

  // species with midpoint at T=1391 kelvin
  if (tT < 1391) {
    // species 27: ch3coch2
    result += y[27] *
              (+8.03391870e-01 + 1.50703542e-02 * tc[1] -
               6.45018507e-06 * tc[2] + 1.59549759e-09 * tc[3] -
               1.73220636e-13 * tc[4] - 5.37233261e+03 * invT) *
              0.0175217269414073;
    // species 45: nc7h16
    result += y[45] *
              (-2.26836187e+00 + 4.27177910e-02 * tc[1] -
               1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
               4.04789850e-13 * tc[4] - 2.56586565e+04 * invT) *
              0.0099795419390250;
  } else {
    // species 27: ch3coch2
    result += y[27] *
              (+9.23039750e+00 + 5.82470805e-03 * tc[1] -
               1.33668512e-06 * tc[2] + 1.56301312e-10 * tc[3] -
               7.27568724e-15 * tc[4] - 8.44380462e+03 * invT) *
              0.0175217269414073;
    // species 45: nc7h16
    result += y[45] *
              (+2.12148969e+01 + 1.73837875e-02 * tc[1] -
               3.94690430e-06 * tc[2] + 4.58246195e-10 * tc[3] -
               2.12260532e-14 * tc[4] - 3.42760081e+04 * invT) *
              0.0099795419390250;
  }

  // species with midpoint at T=1378 kelvin
  if (tT < 1378) {
    // species 28: c2h5cho
    result += y[28] *
              (+1.16308444e+00 + 1.47750632e-02 * tc[1] -
               5.08154173e-06 * tc[2] + 8.73759867e-10 * tc[3] -
               4.77793254e-14 * tc[4] - 2.42260137e+04 * invT) *
              0.0172176308539945;
    // species 40: nc3h7cho
    result += y[40] *
              (+8.74159590e-01 + 2.09620158e-02 * tc[1] -
               7.83829263e-06 * tc[2] + 1.56728418e-09 * tc[3] -
               1.21888782e-13 * tc[4] - 2.71032194e+04 * invT) *
              0.0138682790852483;
  } else {
    // species 28: c2h5cho
    result += y[28] *
              (+9.24276950e+00 + 6.98209945e-03 * tc[1] -
               1.58749334e-06 * tc[2] + 1.84526426e-10 * tc[3] -
               8.55519006e-15 * tc[4] - 2.74143135e+04 * invT) *
              0.0172176308539945;
    // species 40: nc3h7cho
    result += y[40] *
              (+1.25988068e+01 + 9.08262370e-03 * tc[1] -
               2.05948153e-06 * tc[2] + 2.38995052e-10 * tc[3] -
               1.10688592e-14 * tc[4] - 3.15845348e+04 * invT) *
              0.0138682790852483;
  }

  // species with midpoint at T=1385 kelvin
  if (tT < 1385) {
    // species 31: ch3o2
    result += y[31] *
              (+3.26146906e+00 + 5.04367995e-03 * tc[1] -
               1.07168728e-06 * tc[2] + 5.23523168e-11 * tc[3] +
               8.36678206e-15 * tc[4] - 6.84394259e+02 * invT) *
              0.0212616673399528;
    // species 36: pc4h9o2
    result += y[36] *
              (+9.43636500e-01 + 2.57756581e-02 * tc[1] -
               1.09428133e-05 * tc[2] + 2.82662150e-09 * tc[3] -
               3.40237212e-13 * tc[4] - 1.08358103e+04 * invT) *
              0.0112215813452432;
  } else {
    // species 31: ch3o2
    result += y[31] *
              (+4.95787891e+00 + 3.95364313e-03 * tc[1] -
               8.94154113e-07 * tc[2] + 1.03472834e-10 * tc[3] -
               4.78014660e-15 * tc[4] - 1.53574838e+03 * invT) *
              0.0212616673399528;
    // species 36: pc4h9o2
    result += y[36] *
              (+1.47845448e+01 + 1.07605455e-02 * tc[1] -
               2.48303006e-06 * tc[2] + 2.91395178e-10 * tc[3] -
               1.35977122e-14 * tc[4] - 1.60146054e+04 * invT) *
              0.0112215813452432;
  }

  // species with midpoint at T=1402 kelvin
  if (tT < 1402) {
    // species 33: c2h3co
    result += y[33] *
              (+3.62420130e-01 + 1.57636986e-02 * tc[1] -
               1.00072978e-05 * tc[2] + 3.70417780e-09 * tc[3] -
               5.75943060e-13 * tc[4] + 4.25770215e+03 * invT) *
              0.0181633246149375;
  } else {
    // species 33: c2h3co
    result += y[33] *
              (+8.37467676e+00 + 3.95648450e-03 * tc[1] -
               8.90660933e-07 * tc[2] + 1.02778857e-10 * tc[3] -
               4.73957962e-15 * tc[4] + 1.92969514e+03 * invT) *
              0.0181633246149375;
  }

  // species with midpoint at T=1393 kelvin
  if (tT < 1393) {
    // species 34: c2h3cho
    result += y[34] *
              (-7.07644838e-01 + 1.77160709e-02 * tc[1] -
               9.83121080e-06 * tc[2] + 3.20250310e-09 * tc[3] -
               4.52288216e-13 * tc[4] - 1.16521584e+04 * invT) *
              0.0178367579908676;
  } else {
    // species 34: c2h3cho
    result += y[34] *
              (+9.41849590e+00 + 4.74481661e-03 * tc[1] -
               1.09770176e-06 * tc[2] + 1.29069801e-10 * tc[3] -
               6.03174582e-15 * tc[4] - 1.49630281e+04 * invT) *
              0.0178367579908676;
  }

  // species with midpoint at T=1387 kelvin
  if (tT < 1387) {
    // species 35: c4h8ooh1-3o2
    result += y[35] *
              (+1.22400728e+00 + 3.52497310e-02 * tc[1] -
               1.88992942e-05 * tc[2] + 6.06569377e-09 * tc[3] -
               8.59430918e-13 * tc[4] - 2.37391490e+04 * invT) *
              0.0082568201334302;
  } else {
    // species 35: c4h8ooh1-3o2
    result += y[35] *
              (+2.13244015e+01 + 1.02737388e-02 * tc[1] -
               2.39692116e-06 * tc[2] + 2.83403840e-10 * tc[3] -
               1.32948877e-14 * tc[4] - 3.05468277e+04 * invT) *
              0.0082568201334302;
  }

  // species with midpoint at T=1397 kelvin
  if (tT < 1397) {
    // species 37: c3h5-a
    result += y[37] *
              (-1.52913196e+00 + 1.67279550e-02 * tc[1] -
               8.44670090e-06 * tc[2] + 2.57164385e-09 * tc[3] -
               3.46516680e-13 * tc[4] + 1.93834226e+04 * invT) *
              0.0243468945535997;
  } else {
    // species 37: c3h5-a
    result += y[37] *
              (+7.45883958e+00 + 5.63477415e-03 * tc[1] -
               1.27930955e-06 * tc[2] + 1.48514780e-10 * tc[3] -
               6.87836060e-15 * tc[4] + 1.63576092e+04 * invT) *
              0.0243468945535997;
  }

  // species with midpoint at T=1386 kelvin
  if (tT < 1386) {
    // species 39: nc4ket13
    result += y[39] *
              (+1.74883461e+00 + 2.93468373e-02 * tc[1] -
               1.49868632e-05 * tc[2] + 4.58000325e-09 * tc[3] -
               6.23530738e-13 * tc[4] - 4.01065878e+04 * invT) *
              0.0096056865664473;
  } else {
    // species 39: nc4ket13
    result += y[39] *
              (+1.86430808e+01 + 9.04702830e-03 * tc[1] -
               2.11021077e-06 * tc[2] + 2.49465100e-10 * tc[3] -
               1.17015292e-14 * tc[4] - 4.59588851e+04 * invT) *
              0.0096056865664473;
  }

  // species with midpoint at T=1383 kelvin
  if (tT < 1383) {
    // species 41: c2h5coch2
    result += y[41] *
              (+5.40138560e-01 + 2.19743129e-02 * tc[1] -
               9.90008070e-06 * tc[2] + 2.63738282e-09 * tc[3] -
               3.17197538e-13 * tc[4] - 9.50796505e+03 * invT) *
              0.0140648954275025;
  } else {
    // species 41: c2h5coch2
    result += y[41] *
              (+1.32098738e+01 + 7.89332295e-03 * tc[1] -
               1.83509728e-06 * tc[2] + 2.16467635e-10 * tc[3] -
               1.01382666e-14 * tc[4] - 1.41284951e+04 * invT) *
              0.0140648954275025;
  }

  // species with midpoint at T=1389 kelvin
  if (tT < 1389) {
    // species 42: nc3h7coch2
    result += y[42] *
              (-4.17007290e-02 + 2.84081266e-02 * tc[1] -
               1.33037594e-05 * tc[2] + 3.81678785e-09 * tc[3] -
               4.98442094e-13 * tc[4] - 1.23062238e+04 * invT) *
              0.0117472922491366;
    // species 50: c7h14ooh4-3
    result += y[50] *
              (-1.50213995e-01 + 4.62553598e-02 * tc[1] -
               2.08453278e-05 * tc[2] + 5.44700975e-09 * tc[3] -
               6.25440796e-13 * tc[4] - 1.53640679e+04 * invT) *
              0.0076222417012843;
  } else {
    // species 42: nc3h7coch2
    result += y[42] *
              (+1.51502419e+01 + 1.07046733e-02 * tc[1] -
               2.45353205e-06 * tc[2] + 2.86642040e-10 * tc[3] -
               1.33342544e-14 * tc[4] - 1.76968561e+04 * invT) *
              0.0117472922491366;
    // species 50: c7h14ooh4-3
    result += y[50] *
              (+2.64034778e+01 + 1.63763947e-02 * tc[1] -
               3.76639233e-06 * tc[2] + 4.41111622e-10 * tc[3] -
               2.05573890e-14 * tc[4] - 2.48636651e+04 * invT) *
              0.0076222417012843;
  }

  // species with midpoint at T=1381 kelvin
  if (tT < 1381) {
    // species 43: nc4h9cho
    result += y[43] *
              (+5.96634720e-01 + 2.71770708e-02 * tc[1] -
               1.07006884e-05 * tc[2] + 2.33943390e-09 * tc[3] -
               2.13377864e-13 * tc[4] - 2.99841025e+04 * invT) *
              0.0116098172614763;
  } else {
    // species 43: nc4h9cho
    result += y[43] *
              (+1.57965163e+01 + 1.12842260e-02 * tc[1] -
               2.55877196e-06 * tc[2] + 2.96923422e-10 * tc[3] -
               1.37509111e-14 * tc[4] - 3.56826080e+04 * invT) *
              0.0116098172614763;
  }

  // species with midpoint at T=1382 kelvin
  if (tT < 1382) {
    // species 44: nc4h9co
    result += y[44] *
              (+1.43530238e+00 + 2.46841188e-02 * tc[1] -
               9.66276940e-06 * tc[2] + 2.10715953e-09 * tc[3] -
               1.93657434e-13 * tc[4] - 1.14675541e+04 * invT) *
              0.0117472922491366;
  } else {
    // species 44: nc4h9co
    result += y[44] *
              (+1.51782939e+01 + 1.03995960e-02 * tc[1] -
               2.37262631e-06 * tc[2] + 2.76399937e-10 * tc[3] -
               1.28339437e-14 * tc[4] - 1.66537752e+04 * invT) *
              0.0117472922491366;
  }

  // species with midpoint at T=1395 kelvin
  if (tT < 1395) {
    // species 52: c7h14o1-3
    result += y[52] *
              (-6.50036450e+00 + 5.00775440e-02 * tc[1] -
               2.43311952e-05 * tc[2] + 6.98360675e-09 * tc[3] -
               8.84491392e-13 * tc[4] - 2.44292287e+04 * invT) *
              0.0087574876519424;
  } else {
    // species 52: c7h14o1-3
    result += y[52] *
              (+2.16918916e+01 + 1.66255236e-02 * tc[1] -
               3.81525883e-06 * tc[2] + 4.46138838e-10 * tc[3] -
               2.07682224e-14 * tc[4] - 3.41591419e+04 * invT) *
              0.0087574876519424;
  }

  // species with midpoint at T=1399 kelvin
  if (tT < 1399) {
    // species 53: c7h14o2-4
    result += y[53] *
              (-6.39477206e+00 + 5.09232885e-02 * tc[1] -
               2.53348745e-05 * tc[2] + 7.41345050e-09 * tc[3] -
               9.49708740e-13 * tc[4] - 2.67118295e+04 * invT) *
              0.0087574876519424;
  } else {
    // species 53: c7h14o2-4
    result += y[53] *
              (+2.22692731e+01 + 1.62792695e-02 * tc[1] -
               3.72083020e-06 * tc[2] + 4.33934145e-10 * tc[3] -
               2.01626430e-14 * tc[4] - 3.64349664e+04 * invT) *
              0.0087574876519424;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[55]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 55; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[55]; //  temporary storage
  amrex::Real x[55];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 55; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  // Now compute y to x conversion
  x[0] = y[0] / (1.008000 * YOW);
  x[1] = y[1] / (2.016000 * YOW);
  x[2] = y[2] / (15.999000 * YOW);
  x[3] = y[3] / (31.998000 * YOW);
  x[4] = y[4] / (17.007000 * YOW);
  x[5] = y[5] / (18.015000 * YOW);
  x[6] = y[6] / (28.010000 * YOW);
  x[7] = y[7] / (44.009000 * YOW);
  x[8] = y[8] / (15.035000 * YOW);
  x[9] = y[9] / (16.043000 * YOW);
  x[10] = y[10] / (33.006000 * YOW);
  x[11] = y[11] / (34.014000 * YOW);
  x[12] = y[12] / (30.026000 * YOW);
  x[13] = y[13] / (30.070000 * YOW);
  x[14] = y[14] / (28.054000 * YOW);
  x[15] = y[15] / (29.062000 * YOW);
  x[16] = y[16] / (26.038000 * YOW);
  x[17] = y[17] / (27.046000 * YOW);
  x[18] = y[18] / (42.037000 * YOW);
  x[19] = y[19] / (41.029000 * YOW);
  x[20] = y[20] / (44.053000 * YOW);
  x[21] = y[21] / (40.065000 * YOW);
  x[22] = y[22] / (42.081000 * YOW);
  x[23] = y[23] / (54.092000 * YOW);
  x[24] = y[24] / (43.089000 * YOW);
  x[25] = y[25] / (55.100000 * YOW);
  x[26] = y[26] / (56.108000 * YOW);
  x[27] = y[27] / (57.072000 * YOW);
  x[28] = y[28] / (58.080000 * YOW);
  x[29] = y[29] / (69.127000 * YOW);
  x[30] = y[30] / (70.135000 * YOW);
  x[31] = y[31] / (47.033000 * YOW);
  x[32] = y[32] / (48.041000 * YOW);
  x[33] = y[33] / (55.056000 * YOW);
  x[34] = y[34] / (56.064000 * YOW);
  x[35] = y[35] / (121.112000 * YOW);
  x[36] = y[36] / (89.114000 * YOW);
  x[37] = y[37] / (41.073000 * YOW);
  x[38] = y[38] / (39.057000 * YOW);
  x[39] = y[39] / (104.105000 * YOW);
  x[40] = y[40] / (72.107000 * YOW);
  x[41] = y[41] / (71.099000 * YOW);
  x[42] = y[42] / (85.126000 * YOW);
  x[43] = y[43] / (86.134000 * YOW);
  x[44] = y[44] / (85.126000 * YOW);
  x[45] = y[45] / (100.205000 * YOW);
  x[46] = y[46] / (131.195000 * YOW);
  x[47] = y[47] / (131.195000 * YOW);
  x[48] = y[48] / (131.195000 * YOW);
  x[49] = y[49] / (131.195000 * YOW);
  x[50] = y[50] / (131.195000 * YOW);
  x[51] = y[51] / (163.193000 * YOW);
  x[52] = y[52] / (114.188000 * YOW);
  x[53] = y[53] / (114.188000 * YOW);
  x[54] = y[54] / (28.014000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 55; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 1.008000;                   // h
  XW += x[1] * 2.016000;                   // h2
  XW += x[2] * 15.999000;                  // o
  XW += x[3] * 31.998000;                  // o2
  XW += x[4] * 17.007000;                  // oh
  XW += x[5] * 18.015000;                  // h2o
  XW += x[6] * 28.010000;                  // co
  XW += x[7] * 44.009000;                  // co2
  XW += x[8] * 15.035000;                  // ch3
  XW += x[9] * 16.043000;                  // ch4
  XW += x[10] * 33.006000;                 // ho2
  XW += x[11] * 34.014000;                 // h2o2
  XW += x[12] * 30.026000;                 // ch2o
  XW += x[13] * 30.070000;                 // c2h6
  XW += x[14] * 28.054000;                 // c2h4
  XW += x[15] * 29.062000;                 // c2h5
  XW += x[16] * 26.038000;                 // c2h2
  XW += x[17] * 27.046000;                 // c2h3
  XW += x[18] * 42.037000;                 // ch2co
  XW += x[19] * 41.029000;                 // hcco
  XW += x[20] * 44.053000;                 // ch3cho
  XW += x[21] * 40.065000;                 // c3h4-a
  XW += x[22] * 42.081000;                 // c3h6
  XW += x[23] * 54.092000;                 // c4h6
  XW += x[24] * 43.089000;                 // nc3h7
  XW += x[25] * 55.100000;                 // c4h7
  XW += x[26] * 56.108000;                 // c4h8-1
  XW += x[27] * 57.072000;                 // ch3coch2
  XW += x[28] * 58.080000;                 // c2h5cho
  XW += x[29] * 69.127000;                 // c5h9
  XW += x[30] * 70.135000;                 // c5h10-1
  XW += x[31] * 47.033000;                 // ch3o2
  XW += x[32] * 48.041000;                 // ch3o2h
  XW += x[33] * 55.056000;                 // c2h3co
  XW += x[34] * 56.064000;                 // c2h3cho
  XW += x[35] * 121.112000;                // c4h8ooh1-3o2
  XW += x[36] * 89.114000;                 // pc4h9o2
  XW += x[37] * 41.073000;                 // c3h5-a
  XW += x[38] * 39.057000;                 // c3h3
  XW += x[39] * 104.105000;                // nc4ket13
  XW += x[40] * 72.107000;                 // nc3h7cho
  XW += x[41] * 71.099000;                 // c2h5coch2
  XW += x[42] * 85.126000;                 // nc3h7coch2
  XW += x[43] * 86.134000;                 // nc4h9cho
  XW += x[44] * 85.126000;                 // nc4h9co
  XW += x[45] * 100.205000;                // nc7h16
  XW += x[46] * 131.195000;                // c7h15o2-1
  XW += x[47] * 131.195000;                // c7h15o2-2
  XW += x[48] * 131.195000;                // c7h15o2-3
  XW += x[49] * 131.195000;                // c7h15o2-4
  XW += x[50] * 131.195000;                // c7h14ooh4-3
  XW += x[51] * 163.193000;                // c7h14ooh1-3o2
  XW += x[52] * 114.188000;                // c7h14o1-3
  XW += x[53] * 114.188000;                // c7h14o2-4
  XW += x[54] * 28.014000;                 // n2
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 55; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 1.008000;    // h
  W += c[1] * 2.016000;    // h2
  W += c[2] * 15.999000;   // o
  W += c[3] * 31.998000;   // o2
  W += c[4] * 17.007000;   // oh
  W += c[5] * 18.015000;   // h2o
  W += c[6] * 28.010000;   // co
  W += c[7] * 44.009000;   // co2
  W += c[8] * 15.035000;   // ch3
  W += c[9] * 16.043000;   // ch4
  W += c[10] * 33.006000;  // ho2
  W += c[11] * 34.014000;  // h2o2
  W += c[12] * 30.026000;  // ch2o
  W += c[13] * 30.070000;  // c2h6
  W += c[14] * 28.054000;  // c2h4
  W += c[15] * 29.062000;  // c2h5
  W += c[16] * 26.038000;  // c2h2
  W += c[17] * 27.046000;  // c2h3
  W += c[18] * 42.037000;  // ch2co
  W += c[19] * 41.029000;  // hcco
  W += c[20] * 44.053000;  // ch3cho
  W += c[21] * 40.065000;  // c3h4-a
  W += c[22] * 42.081000;  // c3h6
  W += c[23] * 54.092000;  // c4h6
  W += c[24] * 43.089000;  // nc3h7
  W += c[25] * 55.100000;  // c4h7
  W += c[26] * 56.108000;  // c4h8-1
  W += c[27] * 57.072000;  // ch3coch2
  W += c[28] * 58.080000;  // c2h5cho
  W += c[29] * 69.127000;  // c5h9
  W += c[30] * 70.135000;  // c5h10-1
  W += c[31] * 47.033000;  // ch3o2
  W += c[32] * 48.041000;  // ch3o2h
  W += c[33] * 55.056000;  // c2h3co
  W += c[34] * 56.064000;  // c2h3cho
  W += c[35] * 121.112000; // c4h8ooh1-3o2
  W += c[36] * 89.114000;  // pc4h9o2
  W += c[37] * 41.073000;  // c3h5-a
  W += c[38] * 39.057000;  // c3h3
  W += c[39] * 104.105000; // nc4ket13
  W += c[40] * 72.107000;  // nc3h7cho
  W += c[41] * 71.099000;  // c2h5coch2
  W += c[42] * 85.126000;  // nc3h7coch2
  W += c[43] * 86.134000;  // nc4h9cho
  W += c[44] * 85.126000;  // nc4h9co
  W += c[45] * 100.205000; // nc7h16
  W += c[46] * 131.195000; // c7h15o2-1
  W += c[47] * 131.195000; // c7h15o2-2
  W += c[48] * 131.195000; // c7h15o2-3
  W += c[49] * 131.195000; // c7h15o2-4
  W += c[50] * 131.195000; // c7h14ooh4-3
  W += c[51] * 163.193000; // c7h14ooh1-3o2
  W += c[52] * 114.188000; // c7h14o1-3
  W += c[53] * 114.188000; // c7h14o2-4
  W += c[54] * 28.014000;  // n2

  for (int id = 0; id < 55; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 1.008000;                     // h
  XW += x[1] * 2.016000;                     // h2
  XW += x[2] * 15.999000;                    // o
  XW += x[3] * 31.998000;                    // o2
  XW += x[4] * 17.007000;                    // oh
  XW += x[5] * 18.015000;                    // h2o
  XW += x[6] * 28.010000;                    // co
  XW += x[7] * 44.009000;                    // co2
  XW += x[8] * 15.035000;                    // ch3
  XW += x[9] * 16.043000;                    // ch4
  XW += x[10] * 33.006000;                   // ho2
  XW += x[11] * 34.014000;                   // h2o2
  XW += x[12] * 30.026000;                   // ch2o
  XW += x[13] * 30.070000;                   // c2h6
  XW += x[14] * 28.054000;                   // c2h4
  XW += x[15] * 29.062000;                   // c2h5
  XW += x[16] * 26.038000;                   // c2h2
  XW += x[17] * 27.046000;                   // c2h3
  XW += x[18] * 42.037000;                   // ch2co
  XW += x[19] * 41.029000;                   // hcco
  XW += x[20] * 44.053000;                   // ch3cho
  XW += x[21] * 40.065000;                   // c3h4-a
  XW += x[22] * 42.081000;                   // c3h6
  XW += x[23] * 54.092000;                   // c4h6
  XW += x[24] * 43.089000;                   // nc3h7
  XW += x[25] * 55.100000;                   // c4h7
  XW += x[26] * 56.108000;                   // c4h8-1
  XW += x[27] * 57.072000;                   // ch3coch2
  XW += x[28] * 58.080000;                   // c2h5cho
  XW += x[29] * 69.127000;                   // c5h9
  XW += x[30] * 70.135000;                   // c5h10-1
  XW += x[31] * 47.033000;                   // ch3o2
  XW += x[32] * 48.041000;                   // ch3o2h
  XW += x[33] * 55.056000;                   // c2h3co
  XW += x[34] * 56.064000;                   // c2h3cho
  XW += x[35] * 121.112000;                  // c4h8ooh1-3o2
  XW += x[36] * 89.114000;                   // pc4h9o2
  XW += x[37] * 41.073000;                   // c3h5-a
  XW += x[38] * 39.057000;                   // c3h3
  XW += x[39] * 104.105000;                  // nc4ket13
  XW += x[40] * 72.107000;                   // nc3h7cho
  XW += x[41] * 71.099000;                   // c2h5coch2
  XW += x[42] * 85.126000;                   // nc3h7coch2
  XW += x[43] * 86.134000;                   // nc4h9cho
  XW += x[44] * 85.126000;                   // nc4h9co
  XW += x[45] * 100.205000;                  // nc7h16
  XW += x[46] * 131.195000;                  // c7h15o2-1
  XW += x[47] * 131.195000;                  // c7h15o2-2
  XW += x[48] * 131.195000;                  // c7h15o2-3
  XW += x[49] * 131.195000;                  // c7h15o2-4
  XW += x[50] * 131.195000;                  // c7h14ooh4-3
  XW += x[51] * 163.193000;                  // c7h14ooh1-3o2
  XW += x[52] * 114.188000;                  // c7h14o1-3
  XW += x[53] * 114.188000;                  // c7h14o2-4
  XW += x[54] * 28.014000;                   // n2
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 55; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 1.008000;    // h
  W += c[1] * 2.016000;    // h2
  W += c[2] * 15.999000;   // o
  W += c[3] * 31.998000;   // o2
  W += c[4] * 17.007000;   // oh
  W += c[5] * 18.015000;   // h2o
  W += c[6] * 28.010000;   // co
  W += c[7] * 44.009000;   // co2
  W += c[8] * 15.035000;   // ch3
  W += c[9] * 16.043000;   // ch4
  W += c[10] * 33.006000;  // ho2
  W += c[11] * 34.014000;  // h2o2
  W += c[12] * 30.026000;  // ch2o
  W += c[13] * 30.070000;  // c2h6
  W += c[14] * 28.054000;  // c2h4
  W += c[15] * 29.062000;  // c2h5
  W += c[16] * 26.038000;  // c2h2
  W += c[17] * 27.046000;  // c2h3
  W += c[18] * 42.037000;  // ch2co
  W += c[19] * 41.029000;  // hcco
  W += c[20] * 44.053000;  // ch3cho
  W += c[21] * 40.065000;  // c3h4-a
  W += c[22] * 42.081000;  // c3h6
  W += c[23] * 54.092000;  // c4h6
  W += c[24] * 43.089000;  // nc3h7
  W += c[25] * 55.100000;  // c4h7
  W += c[26] * 56.108000;  // c4h8-1
  W += c[27] * 57.072000;  // ch3coch2
  W += c[28] * 58.080000;  // c2h5cho
  W += c[29] * 69.127000;  // c5h9
  W += c[30] * 70.135000;  // c5h10-1
  W += c[31] * 47.033000;  // ch3o2
  W += c[32] * 48.041000;  // ch3o2h
  W += c[33] * 55.056000;  // c2h3co
  W += c[34] * 56.064000;  // c2h3cho
  W += c[35] * 121.112000; // c4h8ooh1-3o2
  W += c[36] * 89.114000;  // pc4h9o2
  W += c[37] * 41.073000;  // c3h5-a
  W += c[38] * 39.057000;  // c3h3
  W += c[39] * 104.105000; // nc4ket13
  W += c[40] * 72.107000;  // nc3h7cho
  W += c[41] * 71.099000;  // c2h5coch2
  W += c[42] * 85.126000;  // nc3h7coch2
  W += c[43] * 86.134000;  // nc4h9cho
  W += c[44] * 85.126000;  // nc4h9co
  W += c[45] * 100.205000; // nc7h16
  W += c[46] * 131.195000; // c7h15o2-1
  W += c[47] * 131.195000; // c7h15o2-2
  W += c[48] * 131.195000; // c7h15o2-3
  W += c[49] * 131.195000; // c7h15o2-4
  W += c[50] * 131.195000; // c7h14ooh4-3
  W += c[51] * 163.193000; // c7h14ooh1-3o2
  W += c[52] * 114.188000; // c7h14o1-3
  W += c[53] * 114.188000; // c7h14o2-4
  W += c[54] * 28.014000;  // n2

  for (int id = 0; id < 55; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 55; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;       //  see Eq 4 in CK Manual
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 44.009000;   // co2
  XW += x[8] * 15.035000;   // ch3
  XW += x[9] * 16.043000;   // ch4
  XW += x[10] * 33.006000;  // ho2
  XW += x[11] * 34.014000;  // h2o2
  XW += x[12] * 30.026000;  // ch2o
  XW += x[13] * 30.070000;  // c2h6
  XW += x[14] * 28.054000;  // c2h4
  XW += x[15] * 29.062000;  // c2h5
  XW += x[16] * 26.038000;  // c2h2
  XW += x[17] * 27.046000;  // c2h3
  XW += x[18] * 42.037000;  // ch2co
  XW += x[19] * 41.029000;  // hcco
  XW += x[20] * 44.053000;  // ch3cho
  XW += x[21] * 40.065000;  // c3h4-a
  XW += x[22] * 42.081000;  // c3h6
  XW += x[23] * 54.092000;  // c4h6
  XW += x[24] * 43.089000;  // nc3h7
  XW += x[25] * 55.100000;  // c4h7
  XW += x[26] * 56.108000;  // c4h8-1
  XW += x[27] * 57.072000;  // ch3coch2
  XW += x[28] * 58.080000;  // c2h5cho
  XW += x[29] * 69.127000;  // c5h9
  XW += x[30] * 70.135000;  // c5h10-1
  XW += x[31] * 47.033000;  // ch3o2
  XW += x[32] * 48.041000;  // ch3o2h
  XW += x[33] * 55.056000;  // c2h3co
  XW += x[34] * 56.064000;  // c2h3cho
  XW += x[35] * 121.112000; // c4h8ooh1-3o2
  XW += x[36] * 89.114000;  // pc4h9o2
  XW += x[37] * 41.073000;  // c3h5-a
  XW += x[38] * 39.057000;  // c3h3
  XW += x[39] * 104.105000; // nc4ket13
  XW += x[40] * 72.107000;  // nc3h7cho
  XW += x[41] * 71.099000;  // c2h5coch2
  XW += x[42] * 85.126000;  // nc3h7coch2
  XW += x[43] * 86.134000;  // nc4h9cho
  XW += x[44] * 85.126000;  // nc4h9co
  XW += x[45] * 100.205000; // nc7h16
  XW += x[46] * 131.195000; // c7h15o2-1
  XW += x[47] * 131.195000; // c7h15o2-2
  XW += x[48] * 131.195000; // c7h15o2-3
  XW += x[49] * 131.195000; // c7h15o2-4
  XW += x[50] * 131.195000; // c7h14ooh4-3
  XW += x[51] * 163.193000; // c7h14ooh1-3o2
  XW += x[52] * 114.188000; // c7h14o1-3
  XW += x[53] * 114.188000; // c7h14o2-4
  XW += x[54] * 28.014000;  // n2
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 1.008000;    // h
  W += c[1] * 2.016000;    // h2
  W += c[2] * 15.999000;   // o
  W += c[3] * 31.998000;   // o2
  W += c[4] * 17.007000;   // oh
  W += c[5] * 18.015000;   // h2o
  W += c[6] * 28.010000;   // co
  W += c[7] * 44.009000;   // co2
  W += c[8] * 15.035000;   // ch3
  W += c[9] * 16.043000;   // ch4
  W += c[10] * 33.006000;  // ho2
  W += c[11] * 34.014000;  // h2o2
  W += c[12] * 30.026000;  // ch2o
  W += c[13] * 30.070000;  // c2h6
  W += c[14] * 28.054000;  // c2h4
  W += c[15] * 29.062000;  // c2h5
  W += c[16] * 26.038000;  // c2h2
  W += c[17] * 27.046000;  // c2h3
  W += c[18] * 42.037000;  // ch2co
  W += c[19] * 41.029000;  // hcco
  W += c[20] * 44.053000;  // ch3cho
  W += c[21] * 40.065000;  // c3h4-a
  W += c[22] * 42.081000;  // c3h6
  W += c[23] * 54.092000;  // c4h6
  W += c[24] * 43.089000;  // nc3h7
  W += c[25] * 55.100000;  // c4h7
  W += c[26] * 56.108000;  // c4h8-1
  W += c[27] * 57.072000;  // ch3coch2
  W += c[28] * 58.080000;  // c2h5cho
  W += c[29] * 69.127000;  // c5h9
  W += c[30] * 70.135000;  // c5h10-1
  W += c[31] * 47.033000;  // ch3o2
  W += c[32] * 48.041000;  // ch3o2h
  W += c[33] * 55.056000;  // c2h3co
  W += c[34] * 56.064000;  // c2h3cho
  W += c[35] * 121.112000; // c4h8ooh1-3o2
  W += c[36] * 89.114000;  // pc4h9o2
  W += c[37] * 41.073000;  // c3h5-a
  W += c[38] * 39.057000;  // c3h3
  W += c[39] * 104.105000; // nc4ket13
  W += c[40] * 72.107000;  // nc3h7cho
  W += c[41] * 71.099000;  // c2h5coch2
  W += c[42] * 85.126000;  // nc3h7coch2
  W += c[43] * 86.134000;  // nc4h9cho
  W += c[44] * 85.126000;  // nc4h9co
  W += c[45] * 100.205000; // nc7h16
  W += c[46] * 131.195000; // c7h15o2-1
  W += c[47] * 131.195000; // c7h15o2-2
  W += c[48] * 131.195000; // c7h15o2-3
  W += c[49] * 131.195000; // c7h15o2-4
  W += c[50] * 131.195000; // c7h14ooh4-3
  W += c[51] * 163.193000; // c7h14ooh1-3o2
  W += c[52] * 114.188000; // c7h14o1-3
  W += c[53] * 114.188000; // c7h14o2-4
  W += c[54] * 28.014000;  // n2

  for (int id = 0; id < 55; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 55; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 55; i++) {
    x[i] = y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
           * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 55; i++) {
    c[i] = y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  for (int i = 0; i < 55; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 55; i++) {
    c[i] = PWORT * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 55; i++) {
    c[i] = rho * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 44.009000;   // co2
  XW += x[8] * 15.035000;   // ch3
  XW += x[9] * 16.043000;   // ch4
  XW += x[10] * 33.006000;  // ho2
  XW += x[11] * 34.014000;  // h2o2
  XW += x[12] * 30.026000;  // ch2o
  XW += x[13] * 30.070000;  // c2h6
  XW += x[14] * 28.054000;  // c2h4
  XW += x[15] * 29.062000;  // c2h5
  XW += x[16] * 26.038000;  // c2h2
  XW += x[17] * 27.046000;  // c2h3
  XW += x[18] * 42.037000;  // ch2co
  XW += x[19] * 41.029000;  // hcco
  XW += x[20] * 44.053000;  // ch3cho
  XW += x[21] * 40.065000;  // c3h4-a
  XW += x[22] * 42.081000;  // c3h6
  XW += x[23] * 54.092000;  // c4h6
  XW += x[24] * 43.089000;  // nc3h7
  XW += x[25] * 55.100000;  // c4h7
  XW += x[26] * 56.108000;  // c4h8-1
  XW += x[27] * 57.072000;  // ch3coch2
  XW += x[28] * 58.080000;  // c2h5cho
  XW += x[29] * 69.127000;  // c5h9
  XW += x[30] * 70.135000;  // c5h10-1
  XW += x[31] * 47.033000;  // ch3o2
  XW += x[32] * 48.041000;  // ch3o2h
  XW += x[33] * 55.056000;  // c2h3co
  XW += x[34] * 56.064000;  // c2h3cho
  XW += x[35] * 121.112000; // c4h8ooh1-3o2
  XW += x[36] * 89.114000;  // pc4h9o2
  XW += x[37] * 41.073000;  // c3h5-a
  XW += x[38] * 39.057000;  // c3h3
  XW += x[39] * 104.105000; // nc4ket13
  XW += x[40] * 72.107000;  // nc3h7cho
  XW += x[41] * 71.099000;  // c2h5coch2
  XW += x[42] * 85.126000;  // nc3h7coch2
  XW += x[43] * 86.134000;  // nc4h9cho
  XW += x[44] * 85.126000;  // nc4h9co
  XW += x[45] * 100.205000; // nc7h16
  XW += x[46] * 131.195000; // c7h15o2-1
  XW += x[47] * 131.195000; // c7h15o2-2
  XW += x[48] * 131.195000; // c7h15o2-3
  XW += x[49] * 131.195000; // c7h15o2-4
  XW += x[50] * 131.195000; // c7h14ooh4-3
  XW += x[51] * 163.193000; // c7h14ooh1-3o2
  XW += x[52] * 114.188000; // c7h14o1-3
  XW += x[53] * 114.188000; // c7h14o2-4
  XW += x[54] * 28.014000;  // n2
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 1.008000 * XWinv;
  y[1] = x[1] * 2.016000 * XWinv;
  y[2] = x[2] * 15.999000 * XWinv;
  y[3] = x[3] * 31.998000 * XWinv;
  y[4] = x[4] * 17.007000 * XWinv;
  y[5] = x[5] * 18.015000 * XWinv;
  y[6] = x[6] * 28.010000 * XWinv;
  y[7] = x[7] * 44.009000 * XWinv;
  y[8] = x[8] * 15.035000 * XWinv;
  y[9] = x[9] * 16.043000 * XWinv;
  y[10] = x[10] * 33.006000 * XWinv;
  y[11] = x[11] * 34.014000 * XWinv;
  y[12] = x[12] * 30.026000 * XWinv;
  y[13] = x[13] * 30.070000 * XWinv;
  y[14] = x[14] * 28.054000 * XWinv;
  y[15] = x[15] * 29.062000 * XWinv;
  y[16] = x[16] * 26.038000 * XWinv;
  y[17] = x[17] * 27.046000 * XWinv;
  y[18] = x[18] * 42.037000 * XWinv;
  y[19] = x[19] * 41.029000 * XWinv;
  y[20] = x[20] * 44.053000 * XWinv;
  y[21] = x[21] * 40.065000 * XWinv;
  y[22] = x[22] * 42.081000 * XWinv;
  y[23] = x[23] * 54.092000 * XWinv;
  y[24] = x[24] * 43.089000 * XWinv;
  y[25] = x[25] * 55.100000 * XWinv;
  y[26] = x[26] * 56.108000 * XWinv;
  y[27] = x[27] * 57.072000 * XWinv;
  y[28] = x[28] * 58.080000 * XWinv;
  y[29] = x[29] * 69.127000 * XWinv;
  y[30] = x[30] * 70.135000 * XWinv;
  y[31] = x[31] * 47.033000 * XWinv;
  y[32] = x[32] * 48.041000 * XWinv;
  y[33] = x[33] * 55.056000 * XWinv;
  y[34] = x[34] * 56.064000 * XWinv;
  y[35] = x[35] * 121.112000 * XWinv;
  y[36] = x[36] * 89.114000 * XWinv;
  y[37] = x[37] * 41.073000 * XWinv;
  y[38] = x[38] * 39.057000 * XWinv;
  y[39] = x[39] * 104.105000 * XWinv;
  y[40] = x[40] * 72.107000 * XWinv;
  y[41] = x[41] * 71.099000 * XWinv;
  y[42] = x[42] * 85.126000 * XWinv;
  y[43] = x[43] * 86.134000 * XWinv;
  y[44] = x[44] * 85.126000 * XWinv;
  y[45] = x[45] * 100.205000 * XWinv;
  y[46] = x[46] * 131.195000 * XWinv;
  y[47] = x[47] * 131.195000 * XWinv;
  y[48] = x[48] * 131.195000 * XWinv;
  y[49] = x[49] * 131.195000 * XWinv;
  y[50] = x[50] * 131.195000 * XWinv;
  y[51] = x[51] * 163.193000 * XWinv;
  y[52] = x[52] * 114.188000 * XWinv;
  y[53] = x[53] * 114.188000 * XWinv;
  y[54] = x[54] * 28.014000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 55; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 44.009000;   // co2
  XW += x[8] * 15.035000;   // ch3
  XW += x[9] * 16.043000;   // ch4
  XW += x[10] * 33.006000;  // ho2
  XW += x[11] * 34.014000;  // h2o2
  XW += x[12] * 30.026000;  // ch2o
  XW += x[13] * 30.070000;  // c2h6
  XW += x[14] * 28.054000;  // c2h4
  XW += x[15] * 29.062000;  // c2h5
  XW += x[16] * 26.038000;  // c2h2
  XW += x[17] * 27.046000;  // c2h3
  XW += x[18] * 42.037000;  // ch2co
  XW += x[19] * 41.029000;  // hcco
  XW += x[20] * 44.053000;  // ch3cho
  XW += x[21] * 40.065000;  // c3h4-a
  XW += x[22] * 42.081000;  // c3h6
  XW += x[23] * 54.092000;  // c4h6
  XW += x[24] * 43.089000;  // nc3h7
  XW += x[25] * 55.100000;  // c4h7
  XW += x[26] * 56.108000;  // c4h8-1
  XW += x[27] * 57.072000;  // ch3coch2
  XW += x[28] * 58.080000;  // c2h5cho
  XW += x[29] * 69.127000;  // c5h9
  XW += x[30] * 70.135000;  // c5h10-1
  XW += x[31] * 47.033000;  // ch3o2
  XW += x[32] * 48.041000;  // ch3o2h
  XW += x[33] * 55.056000;  // c2h3co
  XW += x[34] * 56.064000;  // c2h3cho
  XW += x[35] * 121.112000; // c4h8ooh1-3o2
  XW += x[36] * 89.114000;  // pc4h9o2
  XW += x[37] * 41.073000;  // c3h5-a
  XW += x[38] * 39.057000;  // c3h3
  XW += x[39] * 104.105000; // nc4ket13
  XW += x[40] * 72.107000;  // nc3h7cho
  XW += x[41] * 71.099000;  // c2h5coch2
  XW += x[42] * 85.126000;  // nc3h7coch2
  XW += x[43] * 86.134000;  // nc4h9cho
  XW += x[44] * 85.126000;  // nc4h9co
  XW += x[45] * 100.205000; // nc7h16
  XW += x[46] * 131.195000; // c7h15o2-1
  XW += x[47] * 131.195000; // c7h15o2-2
  XW += x[48] * 131.195000; // c7h15o2-3
  XW += x[49] * 131.195000; // c7h15o2-4
  XW += x[50] * 131.195000; // c7h14ooh4-3
  XW += x[51] * 163.193000; // c7h14ooh1-3o2
  XW += x[52] * 114.188000; // c7h14o1-3
  XW += x[53] * 114.188000; // c7h14o2-4
  XW += x[54] * 28.014000;  // n2
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 55; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 55; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 55; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 1.008000;    // h
  CW += c[1] * 2.016000;    // h2
  CW += c[2] * 15.999000;   // o
  CW += c[3] * 31.998000;   // o2
  CW += c[4] * 17.007000;   // oh
  CW += c[5] * 18.015000;   // h2o
  CW += c[6] * 28.010000;   // co
  CW += c[7] * 44.009000;   // co2
  CW += c[8] * 15.035000;   // ch3
  CW += c[9] * 16.043000;   // ch4
  CW += c[10] * 33.006000;  // ho2
  CW += c[11] * 34.014000;  // h2o2
  CW += c[12] * 30.026000;  // ch2o
  CW += c[13] * 30.070000;  // c2h6
  CW += c[14] * 28.054000;  // c2h4
  CW += c[15] * 29.062000;  // c2h5
  CW += c[16] * 26.038000;  // c2h2
  CW += c[17] * 27.046000;  // c2h3
  CW += c[18] * 42.037000;  // ch2co
  CW += c[19] * 41.029000;  // hcco
  CW += c[20] * 44.053000;  // ch3cho
  CW += c[21] * 40.065000;  // c3h4-a
  CW += c[22] * 42.081000;  // c3h6
  CW += c[23] * 54.092000;  // c4h6
  CW += c[24] * 43.089000;  // nc3h7
  CW += c[25] * 55.100000;  // c4h7
  CW += c[26] * 56.108000;  // c4h8-1
  CW += c[27] * 57.072000;  // ch3coch2
  CW += c[28] * 58.080000;  // c2h5cho
  CW += c[29] * 69.127000;  // c5h9
  CW += c[30] * 70.135000;  // c5h10-1
  CW += c[31] * 47.033000;  // ch3o2
  CW += c[32] * 48.041000;  // ch3o2h
  CW += c[33] * 55.056000;  // c2h3co
  CW += c[34] * 56.064000;  // c2h3cho
  CW += c[35] * 121.112000; // c4h8ooh1-3o2
  CW += c[36] * 89.114000;  // pc4h9o2
  CW += c[37] * 41.073000;  // c3h5-a
  CW += c[38] * 39.057000;  // c3h3
  CW += c[39] * 104.105000; // nc4ket13
  CW += c[40] * 72.107000;  // nc3h7cho
  CW += c[41] * 71.099000;  // c2h5coch2
  CW += c[42] * 85.126000;  // nc3h7coch2
  CW += c[43] * 86.134000;  // nc4h9cho
  CW += c[44] * 85.126000;  // nc4h9co
  CW += c[45] * 100.205000; // nc7h16
  CW += c[46] * 131.195000; // c7h15o2-1
  CW += c[47] * 131.195000; // c7h15o2-2
  CW += c[48] * 131.195000; // c7h15o2-3
  CW += c[49] * 131.195000; // c7h15o2-4
  CW += c[50] * 131.195000; // c7h14ooh4-3
  CW += c[51] * 163.193000; // c7h14ooh1-3o2
  CW += c[52] * 114.188000; // c7h14o1-3
  CW += c[53] * 114.188000; // c7h14o2-4
  CW += c[54] * 28.014000;  // n2
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 1.008000 * CWinv;
  y[1] = c[1] * 2.016000 * CWinv;
  y[2] = c[2] * 15.999000 * CWinv;
  y[3] = c[3] * 31.998000 * CWinv;
  y[4] = c[4] * 17.007000 * CWinv;
  y[5] = c[5] * 18.015000 * CWinv;
  y[6] = c[6] * 28.010000 * CWinv;
  y[7] = c[7] * 44.009000 * CWinv;
  y[8] = c[8] * 15.035000 * CWinv;
  y[9] = c[9] * 16.043000 * CWinv;
  y[10] = c[10] * 33.006000 * CWinv;
  y[11] = c[11] * 34.014000 * CWinv;
  y[12] = c[12] * 30.026000 * CWinv;
  y[13] = c[13] * 30.070000 * CWinv;
  y[14] = c[14] * 28.054000 * CWinv;
  y[15] = c[15] * 29.062000 * CWinv;
  y[16] = c[16] * 26.038000 * CWinv;
  y[17] = c[17] * 27.046000 * CWinv;
  y[18] = c[18] * 42.037000 * CWinv;
  y[19] = c[19] * 41.029000 * CWinv;
  y[20] = c[20] * 44.053000 * CWinv;
  y[21] = c[21] * 40.065000 * CWinv;
  y[22] = c[22] * 42.081000 * CWinv;
  y[23] = c[23] * 54.092000 * CWinv;
  y[24] = c[24] * 43.089000 * CWinv;
  y[25] = c[25] * 55.100000 * CWinv;
  y[26] = c[26] * 56.108000 * CWinv;
  y[27] = c[27] * 57.072000 * CWinv;
  y[28] = c[28] * 58.080000 * CWinv;
  y[29] = c[29] * 69.127000 * CWinv;
  y[30] = c[30] * 70.135000 * CWinv;
  y[31] = c[31] * 47.033000 * CWinv;
  y[32] = c[32] * 48.041000 * CWinv;
  y[33] = c[33] * 55.056000 * CWinv;
  y[34] = c[34] * 56.064000 * CWinv;
  y[35] = c[35] * 121.112000 * CWinv;
  y[36] = c[36] * 89.114000 * CWinv;
  y[37] = c[37] * 41.073000 * CWinv;
  y[38] = c[38] * 39.057000 * CWinv;
  y[39] = c[39] * 104.105000 * CWinv;
  y[40] = c[40] * 72.107000 * CWinv;
  y[41] = c[41] * 71.099000 * CWinv;
  y[42] = c[42] * 85.126000 * CWinv;
  y[43] = c[43] * 86.134000 * CWinv;
  y[44] = c[44] * 85.126000 * CWinv;
  y[45] = c[45] * 100.205000 * CWinv;
  y[46] = c[46] * 131.195000 * CWinv;
  y[47] = c[47] * 131.195000 * CWinv;
  y[48] = c[48] * 131.195000 * CWinv;
  y[49] = c[49] * 131.195000 * CWinv;
  y[50] = c[50] * 131.195000 * CWinv;
  y[51] = c[51] * 163.193000 * CWinv;
  y[52] = c[52] * 114.188000 * CWinv;
  y[53] = c[53] * 114.188000 * CWinv;
  y[54] = c[54] * 28.014000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 8.248474819596468e+07;  // h
  cvms[1] *= 4.124237409798234e+07;  // h2
  cvms[2] *= 5.196863940342046e+06;  // o
  cvms[3] *= 2.598431970171023e+06;  // o2
  cvms[4] *= 4.888847308845322e+06;  // oh
  cvms[5] *= 4.615299815794193e+06;  // h2o
  cvms[6] *= 2.968390795484913e+06;  // co
  cvms[7] *= 1.889264154639560e+06;  // co2
  cvms[8] *= 5.530071578419182e+06;  // ch3
  cvms[9] *= 5.182610869633635e+06;  // ch4
  cvms[10] *= 2.519076112874398e+06; // ho2
  cvms[11] *= 2.444423654422661e+06; // h2o2
  cvms[12] *= 2.769087663409458e+06; // ch2o
  cvms[13] *= 2.765035789209591e+06; // c2h6
  cvms[14] *= 2.963735160103101e+06; // c2h4
  cvms[15] *= 2.860939583701480e+06; // c2h5
  cvms[16] *= 3.193203248388218e+06; // c2h2
  cvms[17] *= 3.074193085170909e+06; // c2h3
  cvms[18] *= 1.977891528451897e+06; // ch2co
  cvms[19] *= 2.026484344769124e+06; // hcco
  cvms[20] *= 1.887377163451579e+06; // ch3cho
  cvms[21] *= 2.075243384039246e+06; // c3h4-a
  cvms[22] *= 1.975823440068734e+06; // c3h6
  cvms[23] *= 1.537096542585454e+06; // c4h6
  cvms[24] *= 1.929602130045543e+06; // nc3h7
  cvms[25] *= 1.508976881697503e+06; // c4h7
  cvms[26] *= 1.481867580051551e+06; // c4h8-1
  cvms[27] *= 1.456837436598199e+06; // ch3coch2
  cvms[28] *= 1.431553481086990e+06; // c2h5cho
  cvms[29] *= 1.202780768462864e+06; // c5h9
  cvms[30] *= 1.185494064041241e+06; // c5h10-1
  cvms[31] *= 1.767793382976472e+06; // ch3o2
  cvms[32] *= 1.730701404665440e+06; // ch3o2h
  cvms[33] *= 1.510182835322806e+06; // c2h3co
  cvms[34] *= 1.483030575441146e+06; // c2h3cho
  cvms[35] *= 6.865102234422056e+05; // c4h8ooh1-3o2
  cvms[36] *= 9.330141861159009e+05; // pc4h9o2
  cvms[37] *= 2.024313446340233e+06; // c3h5-a
  cvms[38] *= 2.128802165592145e+06; // c3h3
  cvms[39] *= 7.986612187842313e+05; // nc4ket13
  cvms[40] *= 1.153072880324135e+06; // nc3h7cho
  cvms[41] *= 1.169420472602040e+06; // c2h5coch2
  cvms[42] *= 9.767242226996735e+05; // nc3h7coch2
  cvms[43] *= 9.652939162413497e+05; // nc4h9cho
  cvms[44] *= 9.767242226996735e+05; // nc4h9co
  cvms[45] *= 8.297452839831585e+05; // nc7h16
  cvms[46] *= 6.337484369185746e+05; // c7h15o2-1
  cvms[47] *= 6.337484369185746e+05; // c7h15o2-2
  cvms[48] *= 6.337484369185746e+05; // c7h15o2-3
  cvms[49] *= 6.337484369185746e+05; // c7h15o2-4
  cvms[50] *= 6.337484369185746e+05; // c7h14ooh4-3
  cvms[51] *= 5.094864741841402e+05; // c7h14ooh1-3o2
  cvms[52] *= 7.281380371101378e+05; // c7h14o1-3
  cvms[53] *= 7.281380371101378e+05; // c7h14o2-4
  cvms[54] *= 2.967966951578939e+06; // n2
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 8.248474819596468e+07;  // h
  cpms[1] *= 4.124237409798234e+07;  // h2
  cpms[2] *= 5.196863940342046e+06;  // o
  cpms[3] *= 2.598431970171023e+06;  // o2
  cpms[4] *= 4.888847308845322e+06;  // oh
  cpms[5] *= 4.615299815794193e+06;  // h2o
  cpms[6] *= 2.968390795484913e+06;  // co
  cpms[7] *= 1.889264154639560e+06;  // co2
  cpms[8] *= 5.530071578419182e+06;  // ch3
  cpms[9] *= 5.182610869633635e+06;  // ch4
  cpms[10] *= 2.519076112874398e+06; // ho2
  cpms[11] *= 2.444423654422661e+06; // h2o2
  cpms[12] *= 2.769087663409458e+06; // ch2o
  cpms[13] *= 2.765035789209591e+06; // c2h6
  cpms[14] *= 2.963735160103101e+06; // c2h4
  cpms[15] *= 2.860939583701480e+06; // c2h5
  cpms[16] *= 3.193203248388218e+06; // c2h2
  cpms[17] *= 3.074193085170909e+06; // c2h3
  cpms[18] *= 1.977891528451897e+06; // ch2co
  cpms[19] *= 2.026484344769124e+06; // hcco
  cpms[20] *= 1.887377163451579e+06; // ch3cho
  cpms[21] *= 2.075243384039246e+06; // c3h4-a
  cpms[22] *= 1.975823440068734e+06; // c3h6
  cpms[23] *= 1.537096542585454e+06; // c4h6
  cpms[24] *= 1.929602130045543e+06; // nc3h7
  cpms[25] *= 1.508976881697503e+06; // c4h7
  cpms[26] *= 1.481867580051551e+06; // c4h8-1
  cpms[27] *= 1.456837436598199e+06; // ch3coch2
  cpms[28] *= 1.431553481086990e+06; // c2h5cho
  cpms[29] *= 1.202780768462864e+06; // c5h9
  cpms[30] *= 1.185494064041241e+06; // c5h10-1
  cpms[31] *= 1.767793382976472e+06; // ch3o2
  cpms[32] *= 1.730701404665440e+06; // ch3o2h
  cpms[33] *= 1.510182835322806e+06; // c2h3co
  cpms[34] *= 1.483030575441146e+06; // c2h3cho
  cpms[35] *= 6.865102234422056e+05; // c4h8ooh1-3o2
  cpms[36] *= 9.330141861159009e+05; // pc4h9o2
  cpms[37] *= 2.024313446340233e+06; // c3h5-a
  cpms[38] *= 2.128802165592145e+06; // c3h3
  cpms[39] *= 7.986612187842313e+05; // nc4ket13
  cpms[40] *= 1.153072880324135e+06; // nc3h7cho
  cpms[41] *= 1.169420472602040e+06; // c2h5coch2
  cpms[42] *= 9.767242226996735e+05; // nc3h7coch2
  cpms[43] *= 9.652939162413497e+05; // nc4h9cho
  cpms[44] *= 9.767242226996735e+05; // nc4h9co
  cpms[45] *= 8.297452839831585e+05; // nc7h16
  cpms[46] *= 6.337484369185746e+05; // c7h15o2-1
  cpms[47] *= 6.337484369185746e+05; // c7h15o2-2
  cpms[48] *= 6.337484369185746e+05; // c7h15o2-3
  cpms[49] *= 6.337484369185746e+05; // c7h15o2-4
  cpms[50] *= 6.337484369185746e+05; // c7h14ooh4-3
  cpms[51] *= 5.094864741841402e+05; // c7h14ooh1-3o2
  cpms[52] *= 7.281380371101378e+05; // c7h14o1-3
  cpms[53] *= 7.281380371101378e+05; // c7h14o2-4
  cpms[54] *= 2.967966951578939e+06; // n2
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 55; i++) {
    ums[i] *= RT *
#if AMREX_DEVICE_COMPILE
              global_imw[i]
#else
              h_global_imw[i]
#endif
      ;
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 55; i++) {
    hms[i] *= RT *
#if AMREX_DEVICE_COMPILE
              global_imw[i]
#else
              h_global_imw[i]
#endif
      ;
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 8.248474819596468e+07;  // h
  sms[1] *= 4.124237409798234e+07;  // h2
  sms[2] *= 5.196863940342046e+06;  // o
  sms[3] *= 2.598431970171023e+06;  // o2
  sms[4] *= 4.888847308845322e+06;  // oh
  sms[5] *= 4.615299815794193e+06;  // h2o
  sms[6] *= 2.968390795484913e+06;  // co
  sms[7] *= 1.889264154639560e+06;  // co2
  sms[8] *= 5.530071578419182e+06;  // ch3
  sms[9] *= 5.182610869633635e+06;  // ch4
  sms[10] *= 2.519076112874398e+06; // ho2
  sms[11] *= 2.444423654422661e+06; // h2o2
  sms[12] *= 2.769087663409458e+06; // ch2o
  sms[13] *= 2.765035789209591e+06; // c2h6
  sms[14] *= 2.963735160103101e+06; // c2h4
  sms[15] *= 2.860939583701480e+06; // c2h5
  sms[16] *= 3.193203248388218e+06; // c2h2
  sms[17] *= 3.074193085170909e+06; // c2h3
  sms[18] *= 1.977891528451897e+06; // ch2co
  sms[19] *= 2.026484344769124e+06; // hcco
  sms[20] *= 1.887377163451579e+06; // ch3cho
  sms[21] *= 2.075243384039246e+06; // c3h4-a
  sms[22] *= 1.975823440068734e+06; // c3h6
  sms[23] *= 1.537096542585454e+06; // c4h6
  sms[24] *= 1.929602130045543e+06; // nc3h7
  sms[25] *= 1.508976881697503e+06; // c4h7
  sms[26] *= 1.481867580051551e+06; // c4h8-1
  sms[27] *= 1.456837436598199e+06; // ch3coch2
  sms[28] *= 1.431553481086990e+06; // c2h5cho
  sms[29] *= 1.202780768462864e+06; // c5h9
  sms[30] *= 1.185494064041241e+06; // c5h10-1
  sms[31] *= 1.767793382976472e+06; // ch3o2
  sms[32] *= 1.730701404665440e+06; // ch3o2h
  sms[33] *= 1.510182835322806e+06; // c2h3co
  sms[34] *= 1.483030575441146e+06; // c2h3cho
  sms[35] *= 6.865102234422056e+05; // c4h8ooh1-3o2
  sms[36] *= 9.330141861159009e+05; // pc4h9o2
  sms[37] *= 2.024313446340233e+06; // c3h5-a
  sms[38] *= 2.128802165592145e+06; // c3h3
  sms[39] *= 7.986612187842313e+05; // nc4ket13
  sms[40] *= 1.153072880324135e+06; // nc3h7cho
  sms[41] *= 1.169420472602040e+06; // c2h5coch2
  sms[42] *= 9.767242226996735e+05; // nc3h7coch2
  sms[43] *= 9.652939162413497e+05; // nc4h9cho
  sms[44] *= 9.767242226996735e+05; // nc4h9co
  sms[45] *= 8.297452839831585e+05; // nc7h16
  sms[46] *= 6.337484369185746e+05; // c7h15o2-1
  sms[47] *= 6.337484369185746e+05; // c7h15o2-2
  sms[48] *= 6.337484369185746e+05; // c7h15o2-3
  sms[49] *= 6.337484369185746e+05; // c7h15o2-4
  sms[50] *= 6.337484369185746e+05; // c7h14ooh4-3
  sms[51] *= 5.094864741841402e+05; // c7h14ooh1-3o2
  sms[52] *= 7.281380371101378e+05; // c7h14o1-3
  sms[53] *= 7.281380371101378e+05; // c7h14o2-4
  sms[54] *= 2.967966951578939e+06; // n2
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qss_coeff(
  amrex::Real* k_f,
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* tc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss)
{
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1. / refC;
  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 55; ++i) {
    mixture += sc[i];
  }

  {
    // reaction 8: ch3o (+M) <=> ch2o + h (+M)
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f[0] * 2.344e+19 * exp(-2.7 * tc[0] - 15398.4299736244 * invT);
    Corr = redP / (1.0 + redP);
    qf[0] = Corr * k_f[0] * (1.0);
    qr[0] = Corr * k_f[0] * exp(-(-g_RT[0] - g_RT[12] + g_RT_qss[1])) *
            (refCinv) * (sc[0] * sc[12]);
  }

  {
    // reaction 10: ch3co (+M) <=> ch3 + co (+M)
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f[1] * 1200000000 * exp(0 * tc[0] - 6299.26622254348 * invT);
    Corr = redP / (1.0 + redP);
    qf[1] = Corr * k_f[1] * (1.0);
    qr[1] = Corr * k_f[1] * exp(-(-g_RT[6] - g_RT[8] + g_RT_qss[2])) *
            (refCinv) * (sc[6] * sc[8]);
  }

  {
    // reaction 11: hco + M => co + h + M
    const amrex::Real Corr = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] +
                             (1.9 - 1) * sc[6] + (3.8 - 1) * sc[7];
    qf[2] = Corr * k_f[2] * (1.0);
    qr[2] = 0.0;
  }

  {
    // reaction 12: co + h + M => hco + M
    const amrex::Real Corr = mixture + (2.5 - 1) * sc[1] + (12 - 1) * sc[5] +
                             (1.9 - 1) * sc[6] + (3.8 - 1) * sc[7];
    qf[3] = Corr * k_f[3] * (sc[0] * sc[6]);
    qr[3] = 0.0;
  }

  {
    // reaction 15: ch2o + M => h + hco + M
    const amrex::Real Corr = mixture;
    qf[4] = Corr * k_f[4] * (sc[12]);
    qr[4] = 0.0;
  }

  {
    // reaction 16: h + hco + M => ch2o + M
    const amrex::Real Corr = mixture;
    qf[5] = Corr * k_f[5] * (sc[0]);
    qr[5] = 0.0;
  }

  {
    // reaction 25: c2h5o + M => ch2o + ch3 + M
    const amrex::Real Corr = mixture;
    qf[6] = Corr * k_f[6] * (1.0);
    qr[6] = 0.0;
  }

  {
    // reaction 26: ch2o + ch3 + M => c2h5o + M
    const amrex::Real Corr = mixture;
    qf[7] = Corr * k_f[7] * (sc[8] * sc[12]);
    qr[7] = 0.0;
  }

  {
    // reaction 29: c2h5o + M => ch3cho + h + M
    const amrex::Real Corr = mixture;
    qf[8] = Corr * k_f[8] * (1.0);
    qr[8] = 0.0;
  }

  {
    // reaction 30: ch3cho + h + M => c2h5o + M
    const amrex::Real Corr = mixture;
    qf[9] = Corr * k_f[9] * (sc[0] * sc[20]);
    qr[9] = 0.0;
  }

  {
    // reaction 41: hco + oh => co + h2o
    qf[10] = k_f[10] * (sc[4]);
    qr[10] = 0.0;
  }

  {
    // reaction 42: co + h2o => hco + oh
    qf[11] = k_f[11] * (sc[5] * sc[6]);
    qr[11] = 0.0;
  }

  {
    // reaction 55: c2h4 + o => ch3 + hco
    qf[12] = k_f[12] * (sc[2] * sc[14]);
    qr[12] = 0.0;
  }

  {
    // reaction 56: ch3 + hco => c2h4 + o
    qf[13] = k_f[13] * (sc[8]);
    qr[13] = 0.0;
  }

  {
    // reaction 65: ch3 + ho2 => ch3o + oh
    qf[14] = k_f[14] * (sc[8] * sc[10]);
    qr[14] = 0.0;
  }

  {
    // reaction 66: ch3o + oh => ch3 + ho2
    qf[15] = k_f[15] * (sc[4]);
    qr[15] = 0.0;
  }

  {
    // reaction 71: h + hco => co + h2
    qf[16] = k_f[16] * (sc[0]);
    qr[16] = 0.0;
  }

  {
    // reaction 72: co + h2 => h + hco
    qf[17] = k_f[17] * (sc[1] * sc[6]);
    qr[17] = 0.0;
  }

  {
    // reaction 73: hco + o => co + oh
    qf[18] = k_f[18] * (sc[2]);
    qr[18] = 0.0;
  }

  {
    // reaction 74: co + oh => hco + o
    qf[19] = k_f[19] * (sc[4] * sc[6]);
    qr[19] = 0.0;
  }

  {
    // reaction 75: ch2o + oh => h2o + hco
    qf[20] = k_f[20] * (sc[4] * sc[12]);
    qr[20] = 0.0;
  }

  {
    // reaction 76: h2o + hco => ch2o + oh
    qf[21] = k_f[21] * (sc[5]);
    qr[21] = 0.0;
  }

  {
    // reaction 77: ch2o + h => h2 + hco
    qf[22] = k_f[22] * (sc[0] * sc[12]);
    qr[22] = 0.0;
  }

  {
    // reaction 78: h2 + hco => ch2o + h
    qf[23] = k_f[23] * (sc[1]);
    qr[23] = 0.0;
  }

  {
    // reaction 79: ch2o + o => hco + oh
    qf[24] = k_f[24] * (sc[2] * sc[12]);
    qr[24] = 0.0;
  }

  {
    // reaction 80: hco + oh => ch2o + o
    qf[25] = k_f[25] * (sc[4]);
    qr[25] = 0.0;
  }

  {
    // reaction 85: ch3 + o2 => ch3o + o
    qf[26] = k_f[26] * (sc[3] * sc[8]);
    qr[26] = 0.0;
  }

  {
    // reaction 86: ch3o + o => ch3 + o2
    qf[27] = k_f[27] * (sc[2]);
    qr[27] = 0.0;
  }

  {
    // reaction 87: ch2o + ch3 => ch4 + hco
    qf[28] = k_f[28] * (sc[8] * sc[12]);
    qr[28] = 0.0;
  }

  {
    // reaction 88: ch4 + hco => ch2o + ch3
    qf[29] = k_f[29] * (sc[9]);
    qr[29] = 0.0;
  }

  {
    // reaction 89: ch3 + hco => ch4 + co
    qf[30] = k_f[30] * (sc[8]);
    qr[30] = 0.0;
  }

  {
    // reaction 90: ch4 + co => ch3 + hco
    qf[31] = k_f[31] * (sc[6] * sc[9]);
    qr[31] = 0.0;
  }

  {
    // reaction 93: hco + ho2 => ch2o + o2
    qf[32] = k_f[32] * (sc[10]);
    qr[32] = 0.0;
  }

  {
    // reaction 94: ch2o + o2 => hco + ho2
    qf[33] = k_f[33] * (sc[3] * sc[12]);
    qr[33] = 0.0;
  }

  {
    // reaction 95: ch3o + o2 => ch2o + ho2
    qf[34] = k_f[34] * (sc[3]);
    qr[34] = 0.0;
  }

  {
    // reaction 96: ch2o + ho2 => ch3o + o2
    qf[35] = k_f[35] * (sc[10] * sc[12]);
    qr[35] = 0.0;
  }

  {
    // reaction 99: hco + o2 => co + ho2
    qf[36] = k_f[36] * (sc[3]);
    qr[36] = 0.0;
  }

  {
    // reaction 100: co + ho2 => hco + o2
    qf[37] = k_f[37] * (sc[6] * sc[10]);
    qr[37] = 0.0;
  }

  {
    // reaction 113: ch2o + ho2 => h2o2 + hco
    qf[38] = k_f[38] * (sc[10] * sc[12]);
    qr[38] = 0.0;
  }

  {
    // reaction 114: h2o2 + hco => ch2o + ho2
    qf[39] = k_f[39] * (sc[11]);
    qr[39] = 0.0;
  }

  {
    // reaction 139: hcco + oh => 2 hco
    qf[40] = k_f[40] * (sc[4] * sc[19]);
    qr[40] = 0.0;
  }

  {
    // reaction 140: h + hcco => ch2(s) + co
    qf[41] = k_f[41] * (sc[0] * sc[19]);
    qr[41] = 0.0;
  }

  {
    // reaction 141: ch2(s) + co => h + hcco
    qf[42] = k_f[42] * (sc[6]);
    qr[42] = 0.0;
  }

  {
    // reaction 155: c2h3 + o2 => ch2o + hco
    qf[43] = k_f[43] * (sc[3] * sc[17]);
    qr[43] = 0.0;
  }

  {
    // reaction 156: ch2o + hco => c2h3 + o2
    qf[44] = k_f[44] * (sc[12]);
    qr[44] = 0.0;
  }

  {
    // reaction 161: ch3cho => ch3 + hco
    qf[45] = k_f[45] * (sc[20]);
    qr[45] = 0.0;
  }

  {
    // reaction 162: ch3 + hco => ch3cho
    qf[46] = k_f[46] * (sc[8]);
    qr[46] = 0.0;
  }

  {
    // reaction 163: ch3cho + o2 => ch3co + ho2
    qf[47] = k_f[47] * (sc[3] * sc[20]);
    qr[47] = 0.0;
  }

  {
    // reaction 164: ch3co + ho2 => ch3cho + o2
    qf[48] = k_f[48] * (sc[10]);
    qr[48] = 0.0;
  }

  {
    // reaction 165: ch3cho + oh => ch3co + h2o
    qf[49] = k_f[49] * (sc[4] * sc[20]);
    qr[49] = 0.0;
  }

  {
    // reaction 166: ch3co + h2o => ch3cho + oh
    qf[50] = k_f[50] * (sc[5]);
    qr[50] = 0.0;
  }

  {
    // reaction 167: ch3cho + h => ch3co + h2
    qf[51] = k_f[51] * (sc[0] * sc[20]);
    qr[51] = 0.0;
  }

  {
    // reaction 168: ch3co + h2 => ch3cho + h
    qf[52] = k_f[52] * (sc[1]);
    qr[52] = 0.0;
  }

  {
    // reaction 169: ch3cho + o => ch3co + oh
    qf[53] = k_f[53] * (sc[2] * sc[20]);
    qr[53] = 0.0;
  }

  {
    // reaction 170: ch3co + oh => ch3cho + o
    qf[54] = k_f[54] * (sc[4]);
    qr[54] = 0.0;
  }

  {
    // reaction 171: ch3cho + ho2 => ch3co + h2o2
    qf[55] = k_f[55] * (sc[10] * sc[20]);
    qr[55] = 0.0;
  }

  {
    // reaction 172: ch3co + h2o2 => ch3cho + ho2
    qf[56] = k_f[56] * (sc[11]);
    qr[56] = 0.0;
  }

  {
    // reaction 173: ch3 + ch3cho => ch3co + ch4
    qf[57] = k_f[57] * (sc[8] * sc[20]);
    qr[57] = 0.0;
  }

  {
    // reaction 174: ch3co + ch4 => ch3 + ch3cho
    qf[58] = k_f[58] * (sc[9]);
    qr[58] = 0.0;
  }

  {
    // reaction 185: c3h6 + o => c2h5 + hco
    qf[59] = k_f[59] * (sc[2] * sc[22]);
    qr[59] = 0.0;
  }

  {
    // reaction 186: c2h5 + hco => c3h6 + o
    qf[60] = k_f[60] * (sc[15]);
    qr[60] = 0.0;
  }

  {
    // reaction 258: pc4h9 => c2h4 + c2h5
    qf[61] = k_f[61] * (1.0);
    qr[61] = 0.0;
  }

  {
    // reaction 259: c2h4 + c2h5 => pc4h9
    qf[62] = k_f[62] * (sc[14] * sc[15]);
    qr[62] = 0.0;
  }

  {
    // reaction 260: pc4h9 => c4h8-1 + h
    qf[63] = k_f[63] * (1.0);
    qr[63] = 0.0;
  }

  {
    // reaction 261: c4h8-1 + h => pc4h9
    qf[64] = k_f[64] * (sc[0] * sc[26]);
    qr[64] = 0.0;
  }

  {
    // reaction 262: o2 + pc4h9 => c4h8-1 + ho2
    qf[65] = k_f[65] * (sc[3]);
    qr[65] = 0.0;
  }

  {
    // reaction 263: c4h8-1 + ho2 => o2 + pc4h9
    qf[66] = k_f[66] * (sc[10] * sc[26]);
    qr[66] = 0.0;
  }

  {
    // reaction 266: c2h5co => c2h5 + co
    qf[67] = k_f[67] * (1.0);
    qr[67] = 0.0;
  }

  {
    // reaction 267: c2h5 + co => c2h5co
    qf[68] = k_f[68] * (sc[6] * sc[15]);
    qr[68] = 0.0;
  }

  {
    // reaction 268: c2h5cho + h => c2h5co + h2
    qf[69] = k_f[69] * (sc[0] * sc[28]);
    qr[69] = 0.0;
  }

  {
    // reaction 269: c2h5co + h2 => c2h5cho + h
    qf[70] = k_f[70] * (sc[1]);
    qr[70] = 0.0;
  }

  {
    // reaction 270: c2h5cho + o => c2h5co + oh
    qf[71] = k_f[71] * (sc[2] * sc[28]);
    qr[71] = 0.0;
  }

  {
    // reaction 271: c2h5co + oh => c2h5cho + o
    qf[72] = k_f[72] * (sc[4]);
    qr[72] = 0.0;
  }

  {
    // reaction 272: c2h5cho + oh => c2h5co + h2o
    qf[73] = k_f[73] * (sc[4] * sc[28]);
    qr[73] = 0.0;
  }

  {
    // reaction 273: c2h5co + h2o => c2h5cho + oh
    qf[74] = k_f[74] * (sc[5]);
    qr[74] = 0.0;
  }

  {
    // reaction 274: c2h5cho + ch3 => c2h5co + ch4
    qf[75] = k_f[75] * (sc[8] * sc[28]);
    qr[75] = 0.0;
  }

  {
    // reaction 275: c2h5co + ch4 => c2h5cho + ch3
    qf[76] = k_f[76] * (sc[9]);
    qr[76] = 0.0;
  }

  {
    // reaction 276: c2h5cho + ho2 => c2h5co + h2o2
    qf[77] = k_f[77] * (sc[10] * sc[28]);
    qr[77] = 0.0;
  }

  {
    // reaction 277: c2h5co + h2o2 => c2h5cho + ho2
    qf[78] = k_f[78] * (sc[11]);
    qr[78] = 0.0;
  }

  {
    // reaction 278: c2h5 + c2h5cho => c2h5co + c2h6
    qf[79] = k_f[79] * (sc[15] * sc[28]);
    qr[79] = 0.0;
  }

  {
    // reaction 279: c2h5co + c2h6 => c2h5 + c2h5cho
    qf[80] = k_f[80] * (sc[13]);
    qr[80] = 0.0;
  }

  {
    // reaction 280: c2h5cho => c2h5 + hco
    qf[81] = k_f[81] * (sc[28]);
    qr[81] = 0.0;
  }

  {
    // reaction 281: c2h5 + hco => c2h5cho
    qf[82] = k_f[82] * (sc[15]);
    qr[82] = 0.0;
  }

  {
    // reaction 282: c2h5cho + o2 => c2h5co + ho2
    qf[83] = k_f[83] * (sc[3] * sc[28]);
    qr[83] = 0.0;
  }

  {
    // reaction 283: c2h5co + ho2 => c2h5cho + o2
    qf[84] = k_f[84] * (sc[10]);
    qr[84] = 0.0;
  }

  {
    // reaction 284: c2h3 + c2h5cho => c2h4 + c2h5co
    qf[85] = k_f[85] * (sc[17] * sc[28]);
    qr[85] = 0.0;
  }

  {
    // reaction 285: c2h4 + c2h5co => c2h3 + c2h5cho
    qf[86] = k_f[86] * (sc[14]);
    qr[86] = 0.0;
  }

  {
    // reaction 286: c2h5cho + c3h5-a => c2h5co + c3h6
    qf[87] = k_f[87] * (sc[28] * sc[37]);
    qr[87] = 0.0;
  }

  {
    // reaction 287: c2h5co + c3h6 => c2h5cho + c3h5-a
    qf[88] = k_f[88] * (sc[22]);
    qr[88] = 0.0;
  }

  {
    // reaction 294: c5h10-1 + o => hco + pc4h9
    qf[89] = k_f[89] * (sc[2] * sc[30]);
    qr[89] = 0.0;
  }

  {
    // reaction 295: c5h10-1 + o => ch3co + nc3h7
    qf[90] = k_f[90] * (sc[2] * sc[30]);
    qr[90] = 0.0;
  }

  {
    // reaction 298: c5h10-1 + oh => ch2o + pc4h9
    qf[91] = k_f[91] * (sc[4] * sc[30]);
    qr[91] = 0.0;
  }

  {
    // reaction 304: hco + o => co2 + h
    qf[92] = k_f[92] * (sc[2]);
    qr[92] = 0.0;
  }

  {
    // reaction 305: co2 + h => hco + o
    qf[93] = k_f[93] * (sc[0] * sc[7]);
    qr[93] = 0.0;
  }

  {
    // reaction 306: ch3co + h => ch2co + h2
    qf[94] = k_f[94] * (sc[0]);
    qr[94] = 0.0;
  }

  {
    // reaction 307: ch2co + h2 => ch3co + h
    qf[95] = k_f[95] * (sc[1] * sc[18]);
    qr[95] = 0.0;
  }

  {
    // reaction 308: ch3co + o => ch2co + oh
    qf[96] = k_f[96] * (sc[2]);
    qr[96] = 0.0;
  }

  {
    // reaction 309: ch2co + oh => ch3co + o
    qf[97] = k_f[97] * (sc[4] * sc[18]);
    qr[97] = 0.0;
  }

  {
    // reaction 310: ch3 + ch3co => ch2co + ch4
    qf[98] = k_f[98] * (sc[8]);
    qr[98] = 0.0;
  }

  {
    // reaction 311: ch2co + ch4 => ch3 + ch3co
    qf[99] = k_f[99] * (sc[9] * sc[18]);
    qr[99] = 0.0;
  }

  {
    // reaction 312: c2h4 + o => ch2cho + h
    qf[100] = k_f[100] * (sc[2] * sc[14]);
    qr[100] = 0.0;
  }

  {
    // reaction 313: ch2cho + h => c2h4 + o
    qf[101] = k_f[101] * (sc[0]);
    qr[101] = 0.0;
  }

  {
    // reaction 318: c2h5o + o2 => ch3cho + ho2
    qf[102] = k_f[102] * (sc[3]);
    qr[102] = 0.0;
  }

  {
    // reaction 319: ch3cho + ho2 => c2h5o + o2
    qf[103] = k_f[103] * (sc[10] * sc[20]);
    qr[103] = 0.0;
  }

  {
    // reaction 322: c2h3 + o2 => ch2cho + o
    qf[104] = k_f[104] * (sc[3] * sc[17]);
    qr[104] = 0.0;
  }

  {
    // reaction 323: ch2cho + o => c2h3 + o2
    qf[105] = k_f[105] * (sc[2]);
    qr[105] = 0.0;
  }

  {
    // reaction 324: ch3o2h => ch3o + oh
    qf[106] = k_f[106] * (sc[32]);
    qr[106] = 0.0;
  }

  {
    // reaction 325: ch3o + oh => ch3o2h
    qf[107] = k_f[107] * (sc[4]);
    qr[107] = 0.0;
  }

  {
    // reaction 326: c3h2 + o2 => co + h + hcco
    qf[108] = k_f[108] * (sc[3]);
    qr[108] = 0.0;
  }

  {
    // reaction 327: ch2o + ch3o2 => ch3o2h + hco
    qf[109] = k_f[109] * (sc[12] * sc[31]);
    qr[109] = 0.0;
  }

  {
    // reaction 328: ch3o2h + hco => ch2o + ch3o2
    qf[110] = k_f[110] * (sc[32]);
    qr[110] = 0.0;
  }

  {
    // reaction 333: c2h5 + ho2 => c2h5o + oh
    qf[111] = k_f[111] * (sc[10] * sc[15]);
    qr[111] = 0.0;
  }

  {
    // reaction 334: c2h5o + oh => c2h5 + ho2
    qf[112] = k_f[112] * (sc[4]);
    qr[112] = 0.0;
  }

  {
    // reaction 335: ch3 + ch3o2 => 2 ch3o
    qf[113] = k_f[113] * (sc[8] * sc[31]);
    qr[113] = 0.0;
  }

  {
    // reaction 336: c2h5 + ch3o2 => c2h5o + ch3o
    qf[114] = k_f[114] * (sc[15] * sc[31]);
    qr[114] = 0.0;
  }

  {
    // reaction 341: 2 ch3o2 => 2 ch3o + o2
    qf[115] = k_f[115] * (sc[31] * sc[31]);
    qr[115] = 0.0;
  }

  {
    // reaction 344: ch3cho + ch3o2 => ch3co + ch3o2h
    qf[116] = k_f[116] * (sc[20] * sc[31]);
    qr[116] = 0.0;
  }

  {
    // reaction 345: ch3co + ch3o2h => ch3cho + ch3o2
    qf[117] = k_f[117] * (sc[32]);
    qr[117] = 0.0;
  }

  {
    // reaction 360: c3h5o => c2h3cho + h
    qf[118] = k_f[118] * (1.0);
    qr[118] = 0.0;
  }

  {
    // reaction 361: c2h3cho + h => c3h5o
    qf[119] = k_f[119] * (sc[0] * sc[34]);
    qr[119] = 0.0;
  }

  {
    // reaction 362: c3h5o => c2h3 + ch2o
    qf[120] = k_f[120] * (1.0);
    qr[120] = 0.0;
  }

  {
    // reaction 363: c2h3 + ch2o => c3h5o
    qf[121] = k_f[121] * (sc[12] * sc[17]);
    qr[121] = 0.0;
  }

  {
    // reaction 364: c3h5o + o2 => c2h3cho + ho2
    qf[122] = k_f[122] * (sc[3]);
    qr[122] = 0.0;
  }

  {
    // reaction 365: c2h3cho + ho2 => c3h5o + o2
    qf[123] = k_f[123] * (sc[10] * sc[34]);
    qr[123] = 0.0;
  }

  {
    // reaction 366: c3h5-a + ho2 => c3h5o + oh
    qf[124] = k_f[124] * (sc[10] * sc[37]);
    qr[124] = 0.0;
  }

  {
    // reaction 367: c3h5o + oh => c3h5-a + ho2
    qf[125] = k_f[125] * (sc[4]);
    qr[125] = 0.0;
  }

  {
    // reaction 368: c3h5-a + ch3o2 => c3h5o + ch3o
    qf[126] = k_f[126] * (sc[31] * sc[37]);
    qr[126] = 0.0;
  }

  {
    // reaction 371: ch3 + oh => ch2(s) + h2o
    qf[127] = k_f[127] * (sc[4] * sc[8]);
    qr[127] = 0.0;
  }

  {
    // reaction 372: ch2(s) + h2o => ch3 + oh
    qf[128] = k_f[128] * (sc[5]);
    qr[128] = 0.0;
  }

  {
    // reaction 373: c4h7o => c2h3 + ch3cho
    qf[129] = k_f[129] * (1.0);
    qr[129] = 0.0;
  }

  {
    // reaction 374: c2h3 + ch3cho => c4h7o
    qf[130] = k_f[130] * (sc[17] * sc[20]);
    qr[130] = 0.0;
  }

  {
    // reaction 375: c4h7o => c2h3cho + ch3
    qf[131] = k_f[131] * (1.0);
    qr[131] = 0.0;
  }

  {
    // reaction 376: c2h3cho + ch3 => c4h7o
    qf[132] = k_f[132] * (sc[8] * sc[34]);
    qr[132] = 0.0;
  }

  {
    // reaction 377: c4h7 + ho2 => c4h7o + oh
    qf[133] = k_f[133] * (sc[10] * sc[25]);
    qr[133] = 0.0;
  }

  {
    // reaction 378: c4h7o + oh => c4h7 + ho2
    qf[134] = k_f[134] * (sc[4]);
    qr[134] = 0.0;
  }

  {
    // reaction 379: c4h7 + ch3o2 => c4h7o + ch3o
    qf[135] = k_f[135] * (sc[25] * sc[31]);
    qr[135] = 0.0;
  }

  {
    // reaction 386: c4h8-1 + o => c2h5 + ch3co
    qf[136] = k_f[136] * (sc[2] * sc[26]);
    qr[136] = 0.0;
  }

  {
    // reaction 387: c2h5 + ch3co => c4h8-1 + o
    qf[137] = k_f[137] * (sc[15]);
    qr[137] = 0.0;
  }

  {
    // reaction 390: c4h8-1 + oh => c2h6 + ch3co
    qf[138] = k_f[138] * (sc[4] * sc[26]);
    qr[138] = 0.0;
  }

  {
    // reaction 391: c2h6 + ch3co => c4h8-1 + oh
    qf[139] = k_f[139] * (sc[13]);
    qr[139] = 0.0;
  }

  {
    // reaction 392: c4h8-1 + o => c2h5co + ch3
    qf[140] = k_f[140] * (sc[2] * sc[26]);
    qr[140] = 0.0;
  }

  {
    // reaction 393: c2h5co + ch3 => c4h8-1 + o
    qf[141] = k_f[141] * (sc[8]);
    qr[141] = 0.0;
  }

  {
    // reaction 396: c4h8-1 + oh => c2h5co + ch4
    qf[142] = k_f[142] * (sc[4] * sc[26]);
    qr[142] = 0.0;
  }

  {
    // reaction 397: c2h5co + ch4 => c4h8-1 + oh
    qf[143] = k_f[143] * (sc[9]);
    qr[143] = 0.0;
  }

  {
    // reaction 400: c4h8ooh1-3o2 => c4h8ooh1-3 + o2
    qf[144] = k_f[144] * (sc[35]);
    qr[144] = 0.0;
  }

  {
    // reaction 401: c4h8ooh1-3 + o2 => c4h8ooh1-3o2
    qf[145] = k_f[145] * (sc[3]);
    qr[145] = 0.0;
  }

  {
    // reaction 404: c4h8ooh1-3 => c3h6 + ch2o + oh
    qf[146] = k_f[146] * (1.0);
    qr[146] = 0.0;
  }

  {
    // reaction 405: pc4h9o2 => c4h8ooh1-3
    qf[147] = k_f[147] * (sc[36]);
    qr[147] = 0.0;
  }

  {
    // reaction 406: c4h8ooh1-3 => pc4h9o2
    qf[148] = k_f[148] * (1.0);
    qr[148] = 0.0;
  }

  {
    // reaction 407: c2h5cho + ch3o2 => c2h5co + ch3o2h
    qf[149] = k_f[149] * (sc[28] * sc[31]);
    qr[149] = 0.0;
  }

  {
    // reaction 408: c2h5co + ch3o2h => c2h5cho + ch3o2
    qf[150] = k_f[150] * (sc[32]);
    qr[150] = 0.0;
  }

  {
    // reaction 409: c2h5cho + c4h7 => c2h5co + c4h8-1
    qf[151] = k_f[151] * (sc[25] * sc[28]);
    qr[151] = 0.0;
  }

  {
    // reaction 410: c2h5co + c4h8-1 => c2h5cho + c4h7
    qf[152] = k_f[152] * (sc[26]);
    qr[152] = 0.0;
  }

  {
    // reaction 439: c3h3 + h => c3h2 + h2
    qf[153] = k_f[153] * (sc[0] * sc[38]);
    qr[153] = 0.0;
  }

  {
    // reaction 440: c3h2 + h2 => c3h3 + h
    qf[154] = k_f[154] * (sc[1]);
    qr[154] = 0.0;
  }

  {
    // reaction 445: c3h2 + oh => c2h2 + hco
    qf[155] = k_f[155] * (sc[4]);
    qr[155] = 0.0;
  }

  {
    // reaction 446: c2h2 + hco => c3h2 + oh
    qf[156] = k_f[156] * (sc[16]);
    qr[156] = 0.0;
  }

  {
    // reaction 455: c3h3 + oh => c3h2 + h2o
    qf[157] = k_f[157] * (sc[4] * sc[38]);
    qr[157] = 0.0;
  }

  {
    // reaction 456: c3h2 + h2o => c3h3 + oh
    qf[158] = k_f[158] * (sc[5]);
    qr[158] = 0.0;
  }

  {
    // reaction 457: c3h3 + o2 => ch2co + hco
    qf[159] = k_f[159] * (sc[3] * sc[38]);
    qr[159] = 0.0;
  }

  {
    // reaction 458: ch2co + hco => c3h3 + o2
    qf[160] = k_f[160] * (sc[18]);
    qr[160] = 0.0;
  }

  {
    // reaction 459: pc4h9o2 => o2 + pc4h9
    qf[161] = k_f[161] * (sc[36]);
    qr[161] = 0.0;
  }

  {
    // reaction 460: o2 + pc4h9 => pc4h9o2
    qf[162] = k_f[162] * (sc[3]);
    qr[162] = 0.0;
  }

  {
    // reaction 461: ch2cho => ch2co + h
    qf[163] = k_f[163] * (1.0);
    qr[163] = 0.0;
  }

  {
    // reaction 462: ch2co + h => ch2cho
    qf[164] = k_f[164] * (sc[0] * sc[18]);
    qr[164] = 0.0;
  }

  {
    // reaction 463: ch2cho + o2 => ch2o + co + oh
    qf[165] = k_f[165] * (sc[3]);
    qr[165] = 0.0;
  }

  {
    // reaction 464: nc4ket13 => ch2cho + ch3cho + oh
    qf[166] = k_f[166] * (sc[39]);
    qr[166] = 0.0;
  }

  {
    // reaction 467: c3h5-a + o2 => ch2cho + ch2o
    qf[167] = k_f[167] * (sc[3] * sc[37]);
    qr[167] = 0.0;
  }

  {
    // reaction 468: ch2cho + ch2o => c3h5-a + o2
    qf[168] = k_f[168] * (sc[12]);
    qr[168] = 0.0;
  }

  {
    // reaction 470: hcco + o2 => co2 + hco
    qf[169] = k_f[169] * (sc[3] * sc[19]);
    qr[169] = 0.0;
  }

  {
    // reaction 471: co2 + hco => hcco + o2
    qf[170] = k_f[170] * (sc[7]);
    qr[170] = 0.0;
  }

  {
    // reaction 476: nc3h7cho + o2 => ho2 + nc3h7co
    qf[171] = k_f[171] * (sc[3] * sc[40]);
    qr[171] = 0.0;
  }

  {
    // reaction 477: ho2 + nc3h7co => nc3h7cho + o2
    qf[172] = k_f[172] * (sc[10]);
    qr[172] = 0.0;
  }

  {
    // reaction 478: nc3h7cho + oh => h2o + nc3h7co
    qf[173] = k_f[173] * (sc[4] * sc[40]);
    qr[173] = 0.0;
  }

  {
    // reaction 479: h2o + nc3h7co => nc3h7cho + oh
    qf[174] = k_f[174] * (sc[5]);
    qr[174] = 0.0;
  }

  {
    // reaction 480: h + nc3h7cho => h2 + nc3h7co
    qf[175] = k_f[175] * (sc[0] * sc[40]);
    qr[175] = 0.0;
  }

  {
    // reaction 481: h2 + nc3h7co => h + nc3h7cho
    qf[176] = k_f[176] * (sc[1]);
    qr[176] = 0.0;
  }

  {
    // reaction 482: nc3h7cho + o => nc3h7co + oh
    qf[177] = k_f[177] * (sc[2] * sc[40]);
    qr[177] = 0.0;
  }

  {
    // reaction 483: nc3h7co + oh => nc3h7cho + o
    qf[178] = k_f[178] * (sc[4]);
    qr[178] = 0.0;
  }

  {
    // reaction 484: ho2 + nc3h7cho => h2o2 + nc3h7co
    qf[179] = k_f[179] * (sc[10] * sc[40]);
    qr[179] = 0.0;
  }

  {
    // reaction 485: h2o2 + nc3h7co => ho2 + nc3h7cho
    qf[180] = k_f[180] * (sc[11]);
    qr[180] = 0.0;
  }

  {
    // reaction 486: ch3 + nc3h7cho => ch4 + nc3h7co
    qf[181] = k_f[181] * (sc[8] * sc[40]);
    qr[181] = 0.0;
  }

  {
    // reaction 487: ch4 + nc3h7co => ch3 + nc3h7cho
    qf[182] = k_f[182] * (sc[9]);
    qr[182] = 0.0;
  }

  {
    // reaction 488: ch3o2 + nc3h7cho => ch3o2h + nc3h7co
    qf[183] = k_f[183] * (sc[31] * sc[40]);
    qr[183] = 0.0;
  }

  {
    // reaction 489: ch3o2h + nc3h7co => ch3o2 + nc3h7cho
    qf[184] = k_f[184] * (sc[32]);
    qr[184] = 0.0;
  }

  {
    // reaction 490: nc3h7co => co + nc3h7
    qf[185] = k_f[185] * (1.0);
    qr[185] = 0.0;
  }

  {
    // reaction 491: co + nc3h7 => nc3h7co
    qf[186] = k_f[186] * (sc[6] * sc[24]);
    qr[186] = 0.0;
  }

  {
    // reaction 510: nc4h9co => co + pc4h9
    qf[187] = k_f[187] * (sc[44]);
    qr[187] = 0.0;
  }

  {
    // reaction 511: co + pc4h9 => nc4h9co
    qf[188] = k_f[188] * (sc[6]);
    qr[188] = 0.0;
  }

  {
    // reaction 512: ch2(s) + ch4 => 2 ch3
    qf[189] = k_f[189] * (sc[9]);
    qr[189] = 0.0;
  }

  {
    // reaction 513: 2 ch3 => ch2(s) + ch4
    qf[190] = k_f[190] * (sc[8] * sc[8]);
    qr[190] = 0.0;
  }

  {
    // reaction 514: c2h6 + ch2(s) => c2h5 + ch3
    qf[191] = k_f[191] * (sc[13]);
    qr[191] = 0.0;
  }

  {
    // reaction 515: c2h5 + ch3 => c2h6 + ch2(s)
    qf[192] = k_f[192] * (sc[8] * sc[15]);
    qr[192] = 0.0;
  }

  {
    // reaction 516: ch2(s) + o2 => co + h + oh
    qf[193] = k_f[193] * (sc[3]);
    qr[193] = 0.0;
  }

  {
    // reaction 517: ch2(s) + h2 => ch3 + h
    qf[194] = k_f[194] * (sc[1]);
    qr[194] = 0.0;
  }

  {
    // reaction 518: ch3 + h => ch2(s) + h2
    qf[195] = k_f[195] * (sc[0] * sc[8]);
    qr[195] = 0.0;
  }

  {
    // reaction 519: ch2(s) + o => co + 2 h
    qf[196] = k_f[196] * (sc[2]);
    qr[196] = 0.0;
  }

  {
    // reaction 520: ch2(s) + oh => ch2o + h
    qf[197] = k_f[197] * (sc[4]);
    qr[197] = 0.0;
  }

  {
    // reaction 521: ch2o + h => ch2(s) + oh
    qf[198] = k_f[198] * (sc[0] * sc[12]);
    qr[198] = 0.0;
  }

  {
    // reaction 522: ch2(s) + co2 => ch2o + co
    qf[199] = k_f[199] * (sc[7]);
    qr[199] = 0.0;
  }

  {
    // reaction 523: ch2o + co => ch2(s) + co2
    qf[200] = k_f[200] * (sc[6] * sc[12]);
    qr[200] = 0.0;
  }

  {
    // reaction 524: ch2(s) + ch3 => c2h4 + h
    qf[201] = k_f[201] * (sc[8]);
    qr[201] = 0.0;
  }

  {
    // reaction 525: c2h4 + h => ch2(s) + ch3
    qf[202] = k_f[202] * (sc[0] * sc[14]);
    qr[202] = 0.0;
  }

  {
    // reaction 526: ch2(s) + ch2co => c2h4 + co
    qf[203] = k_f[203] * (sc[18]);
    qr[203] = 0.0;
  }

  {
    // reaction 527: c2h4 + co => ch2(s) + ch2co
    qf[204] = k_f[204] * (sc[6] * sc[14]);
    qr[204] = 0.0;
  }

  {
    // reaction 528: nc7h16 => c7h15-1 + h
    qf[205] = k_f[205] * (sc[45]);
    qr[205] = 0.0;
  }

  {
    // reaction 529: c7h15-1 + h => nc7h16
    qf[206] = k_f[206] * (sc[0]);
    qr[206] = 0.0;
  }

  {
    // reaction 530: nc7h16 => c7h15-2 + h
    qf[207] = k_f[207] * (sc[45]);
    qr[207] = 0.0;
  }

  {
    // reaction 531: c7h15-2 + h => nc7h16
    qf[208] = k_f[208] * (sc[0]);
    qr[208] = 0.0;
  }

  {
    // reaction 532: nc7h16 => c7h15-3 + h
    qf[209] = k_f[209] * (sc[45]);
    qr[209] = 0.0;
  }

  {
    // reaction 533: c7h15-3 + h => nc7h16
    qf[210] = k_f[210] * (sc[0]);
    qr[210] = 0.0;
  }

  {
    // reaction 534: nc7h16 => c7h15-4 + h
    qf[211] = k_f[211] * (sc[45]);
    qr[211] = 0.0;
  }

  {
    // reaction 535: c7h15-4 + h => nc7h16
    qf[212] = k_f[212] * (sc[0]);
    qr[212] = 0.0;
  }

  {
    // reaction 536: nc7h16 => nc3h7 + pc4h9
    qf[213] = k_f[213] * (sc[45]);
    qr[213] = 0.0;
  }

  {
    // reaction 537: nc3h7 + pc4h9 => nc7h16
    qf[214] = k_f[214] * (sc[24]);
    qr[214] = 0.0;
  }

  {
    // reaction 538: h + nc7h16 => c7h15-1 + h2
    qf[215] = k_f[215] * (sc[0] * sc[45]);
    qr[215] = 0.0;
  }

  {
    // reaction 539: c7h15-1 + h2 => h + nc7h16
    qf[216] = k_f[216] * (sc[1]);
    qr[216] = 0.0;
  }

  {
    // reaction 540: h + nc7h16 => c7h15-2 + h2
    qf[217] = k_f[217] * (sc[0] * sc[45]);
    qr[217] = 0.0;
  }

  {
    // reaction 541: c7h15-2 + h2 => h + nc7h16
    qf[218] = k_f[218] * (sc[1]);
    qr[218] = 0.0;
  }

  {
    // reaction 542: h + nc7h16 => c7h15-3 + h2
    qf[219] = k_f[219] * (sc[0] * sc[45]);
    qr[219] = 0.0;
  }

  {
    // reaction 543: c7h15-3 + h2 => h + nc7h16
    qf[220] = k_f[220] * (sc[1]);
    qr[220] = 0.0;
  }

  {
    // reaction 544: h + nc7h16 => c7h15-4 + h2
    qf[221] = k_f[221] * (sc[0] * sc[45]);
    qr[221] = 0.0;
  }

  {
    // reaction 545: c7h15-4 + h2 => h + nc7h16
    qf[222] = k_f[222] * (sc[1]);
    qr[222] = 0.0;
  }

  {
    // reaction 546: nc7h16 + o => c7h15-1 + oh
    qf[223] = k_f[223] * (sc[2] * sc[45]);
    qr[223] = 0.0;
  }

  {
    // reaction 547: c7h15-1 + oh => nc7h16 + o
    qf[224] = k_f[224] * (sc[4]);
    qr[224] = 0.0;
  }

  {
    // reaction 548: nc7h16 + o => c7h15-2 + oh
    qf[225] = k_f[225] * (sc[2] * sc[45]);
    qr[225] = 0.0;
  }

  {
    // reaction 549: c7h15-2 + oh => nc7h16 + o
    qf[226] = k_f[226] * (sc[4]);
    qr[226] = 0.0;
  }

  {
    // reaction 550: nc7h16 + o => c7h15-3 + oh
    qf[227] = k_f[227] * (sc[2] * sc[45]);
    qr[227] = 0.0;
  }

  {
    // reaction 551: c7h15-3 + oh => nc7h16 + o
    qf[228] = k_f[228] * (sc[4]);
    qr[228] = 0.0;
  }

  {
    // reaction 552: nc7h16 + o => c7h15-4 + oh
    qf[229] = k_f[229] * (sc[2] * sc[45]);
    qr[229] = 0.0;
  }

  {
    // reaction 553: c7h15-4 + oh => nc7h16 + o
    qf[230] = k_f[230] * (sc[4]);
    qr[230] = 0.0;
  }

  {
    // reaction 554: nc7h16 + oh => c7h15-1 + h2o
    qf[231] = k_f[231] * (sc[4] * sc[45]);
    qr[231] = 0.0;
  }

  {
    // reaction 555: c7h15-1 + h2o => nc7h16 + oh
    qf[232] = k_f[232] * (sc[5]);
    qr[232] = 0.0;
  }

  {
    // reaction 556: nc7h16 + oh => c7h15-2 + h2o
    qf[233] = k_f[233] * (sc[4] * sc[45]);
    qr[233] = 0.0;
  }

  {
    // reaction 557: c7h15-2 + h2o => nc7h16 + oh
    qf[234] = k_f[234] * (sc[5]);
    qr[234] = 0.0;
  }

  {
    // reaction 558: nc7h16 + oh => c7h15-3 + h2o
    qf[235] = k_f[235] * (sc[4] * sc[45]);
    qr[235] = 0.0;
  }

  {
    // reaction 559: c7h15-3 + h2o => nc7h16 + oh
    qf[236] = k_f[236] * (sc[5]);
    qr[236] = 0.0;
  }

  {
    // reaction 560: nc7h16 + oh => c7h15-4 + h2o
    qf[237] = k_f[237] * (sc[4] * sc[45]);
    qr[237] = 0.0;
  }

  {
    // reaction 561: c7h15-4 + h2o => nc7h16 + oh
    qf[238] = k_f[238] * (sc[5]);
    qr[238] = 0.0;
  }

  {
    // reaction 562: ho2 + nc7h16 => c7h15-1 + h2o2
    qf[239] = k_f[239] * (sc[10] * sc[45]);
    qr[239] = 0.0;
  }

  {
    // reaction 563: c7h15-1 + h2o2 => ho2 + nc7h16
    qf[240] = k_f[240] * (sc[11]);
    qr[240] = 0.0;
  }

  {
    // reaction 564: ho2 + nc7h16 => c7h15-2 + h2o2
    qf[241] = k_f[241] * (sc[10] * sc[45]);
    qr[241] = 0.0;
  }

  {
    // reaction 565: c7h15-2 + h2o2 => ho2 + nc7h16
    qf[242] = k_f[242] * (sc[11]);
    qr[242] = 0.0;
  }

  {
    // reaction 566: ho2 + nc7h16 => c7h15-3 + h2o2
    qf[243] = k_f[243] * (sc[10] * sc[45]);
    qr[243] = 0.0;
  }

  {
    // reaction 567: c7h15-3 + h2o2 => ho2 + nc7h16
    qf[244] = k_f[244] * (sc[11]);
    qr[244] = 0.0;
  }

  {
    // reaction 568: ho2 + nc7h16 => c7h15-4 + h2o2
    qf[245] = k_f[245] * (sc[10] * sc[45]);
    qr[245] = 0.0;
  }

  {
    // reaction 569: c7h15-4 + h2o2 => ho2 + nc7h16
    qf[246] = k_f[246] * (sc[11]);
    qr[246] = 0.0;
  }

  {
    // reaction 570: ch3 + nc7h16 => c7h15-1 + ch4
    qf[247] = k_f[247] * (sc[8] * sc[45]);
    qr[247] = 0.0;
  }

  {
    // reaction 571: c7h15-1 + ch4 => ch3 + nc7h16
    qf[248] = k_f[248] * (sc[9]);
    qr[248] = 0.0;
  }

  {
    // reaction 572: ch3 + nc7h16 => c7h15-2 + ch4
    qf[249] = k_f[249] * (sc[8] * sc[45]);
    qr[249] = 0.0;
  }

  {
    // reaction 573: c7h15-2 + ch4 => ch3 + nc7h16
    qf[250] = k_f[250] * (sc[9]);
    qr[250] = 0.0;
  }

  {
    // reaction 574: ch3 + nc7h16 => c7h15-3 + ch4
    qf[251] = k_f[251] * (sc[8] * sc[45]);
    qr[251] = 0.0;
  }

  {
    // reaction 575: c7h15-3 + ch4 => ch3 + nc7h16
    qf[252] = k_f[252] * (sc[9]);
    qr[252] = 0.0;
  }

  {
    // reaction 576: ch3 + nc7h16 => c7h15-4 + ch4
    qf[253] = k_f[253] * (sc[8] * sc[45]);
    qr[253] = 0.0;
  }

  {
    // reaction 577: c7h15-4 + ch4 => ch3 + nc7h16
    qf[254] = k_f[254] * (sc[9]);
    qr[254] = 0.0;
  }

  {
    // reaction 578: nc7h16 + o2 => c7h15-1 + ho2
    qf[255] = k_f[255] * (sc[3] * sc[45]);
    qr[255] = 0.0;
  }

  {
    // reaction 579: c7h15-1 + ho2 => nc7h16 + o2
    qf[256] = k_f[256] * (sc[10]);
    qr[256] = 0.0;
  }

  {
    // reaction 580: nc7h16 + o2 => c7h15-2 + ho2
    qf[257] = k_f[257] * (sc[3] * sc[45]);
    qr[257] = 0.0;
  }

  {
    // reaction 581: c7h15-2 + ho2 => nc7h16 + o2
    qf[258] = k_f[258] * (sc[10]);
    qr[258] = 0.0;
  }

  {
    // reaction 582: nc7h16 + o2 => c7h15-3 + ho2
    qf[259] = k_f[259] * (sc[3] * sc[45]);
    qr[259] = 0.0;
  }

  {
    // reaction 583: c7h15-3 + ho2 => nc7h16 + o2
    qf[260] = k_f[260] * (sc[10]);
    qr[260] = 0.0;
  }

  {
    // reaction 584: nc7h16 + o2 => c7h15-4 + ho2
    qf[261] = k_f[261] * (sc[3] * sc[45]);
    qr[261] = 0.0;
  }

  {
    // reaction 585: c7h15-4 + ho2 => nc7h16 + o2
    qf[262] = k_f[262] * (sc[10]);
    qr[262] = 0.0;
  }

  {
    // reaction 586: c2h5 + nc7h16 => c2h6 + c7h15-1
    qf[263] = k_f[263] * (sc[15] * sc[45]);
    qr[263] = 0.0;
  }

  {
    // reaction 587: c2h6 + c7h15-1 => c2h5 + nc7h16
    qf[264] = k_f[264] * (sc[13]);
    qr[264] = 0.0;
  }

  {
    // reaction 588: c2h5 + nc7h16 => c2h6 + c7h15-2
    qf[265] = k_f[265] * (sc[15] * sc[45]);
    qr[265] = 0.0;
  }

  {
    // reaction 589: c2h6 + c7h15-2 => c2h5 + nc7h16
    qf[266] = k_f[266] * (sc[13]);
    qr[266] = 0.0;
  }

  {
    // reaction 590: c2h5 + nc7h16 => c2h6 + c7h15-3
    qf[267] = k_f[267] * (sc[15] * sc[45]);
    qr[267] = 0.0;
  }

  {
    // reaction 591: c2h6 + c7h15-3 => c2h5 + nc7h16
    qf[268] = k_f[268] * (sc[13]);
    qr[268] = 0.0;
  }

  {
    // reaction 592: c2h5 + nc7h16 => c2h6 + c7h15-4
    qf[269] = k_f[269] * (sc[15] * sc[45]);
    qr[269] = 0.0;
  }

  {
    // reaction 593: c2h6 + c7h15-4 => c2h5 + nc7h16
    qf[270] = k_f[270] * (sc[13]);
    qr[270] = 0.0;
  }

  {
    // reaction 594: c2h3 + nc7h16 => c2h4 + c7h15-1
    qf[271] = k_f[271] * (sc[17] * sc[45]);
    qr[271] = 0.0;
  }

  {
    // reaction 595: c2h4 + c7h15-1 => c2h3 + nc7h16
    qf[272] = k_f[272] * (sc[14]);
    qr[272] = 0.0;
  }

  {
    // reaction 596: c2h3 + nc7h16 => c2h4 + c7h15-2
    qf[273] = k_f[273] * (sc[17] * sc[45]);
    qr[273] = 0.0;
  }

  {
    // reaction 597: c2h4 + c7h15-2 => c2h3 + nc7h16
    qf[274] = k_f[274] * (sc[14]);
    qr[274] = 0.0;
  }

  {
    // reaction 598: c2h3 + nc7h16 => c2h4 + c7h15-3
    qf[275] = k_f[275] * (sc[17] * sc[45]);
    qr[275] = 0.0;
  }

  {
    // reaction 599: c2h4 + c7h15-3 => c2h3 + nc7h16
    qf[276] = k_f[276] * (sc[14]);
    qr[276] = 0.0;
  }

  {
    // reaction 600: c2h3 + nc7h16 => c2h4 + c7h15-4
    qf[277] = k_f[277] * (sc[17] * sc[45]);
    qr[277] = 0.0;
  }

  {
    // reaction 601: c2h4 + c7h15-4 => c2h3 + nc7h16
    qf[278] = k_f[278] * (sc[14]);
    qr[278] = 0.0;
  }

  {
    // reaction 602: ch3o2 + nc7h16 => c7h15-1 + ch3o2h
    qf[279] = k_f[279] * (sc[31] * sc[45]);
    qr[279] = 0.0;
  }

  {
    // reaction 603: c7h15-1 + ch3o2h => ch3o2 + nc7h16
    qf[280] = k_f[280] * (sc[32]);
    qr[280] = 0.0;
  }

  {
    // reaction 604: ch3o2 + nc7h16 => c7h15-2 + ch3o2h
    qf[281] = k_f[281] * (sc[31] * sc[45]);
    qr[281] = 0.0;
  }

  {
    // reaction 605: c7h15-2 + ch3o2h => ch3o2 + nc7h16
    qf[282] = k_f[282] * (sc[32]);
    qr[282] = 0.0;
  }

  {
    // reaction 606: ch3o2 + nc7h16 => c7h15-3 + ch3o2h
    qf[283] = k_f[283] * (sc[31] * sc[45]);
    qr[283] = 0.0;
  }

  {
    // reaction 607: c7h15-3 + ch3o2h => ch3o2 + nc7h16
    qf[284] = k_f[284] * (sc[32]);
    qr[284] = 0.0;
  }

  {
    // reaction 608: ch3o2 + nc7h16 => c7h15-4 + ch3o2h
    qf[285] = k_f[285] * (sc[31] * sc[45]);
    qr[285] = 0.0;
  }

  {
    // reaction 609: c7h15-4 + ch3o2h => ch3o2 + nc7h16
    qf[286] = k_f[286] * (sc[32]);
    qr[286] = 0.0;
  }

  {
    // reaction 610: c7h15-1 + nc7h16 => c7h15-2 + nc7h16
    qf[287] = k_f[287] * (sc[45]);
    qr[287] = 0.0;
  }

  {
    // reaction 611: c7h15-2 + nc7h16 => c7h15-1 + nc7h16
    qf[288] = k_f[288] * (sc[45]);
    qr[288] = 0.0;
  }

  {
    // reaction 612: c7h15-1 + nc7h16 => c7h15-3 + nc7h16
    qf[289] = k_f[289] * (sc[45]);
    qr[289] = 0.0;
  }

  {
    // reaction 613: c7h15-3 + nc7h16 => c7h15-1 + nc7h16
    qf[290] = k_f[290] * (sc[45]);
    qr[290] = 0.0;
  }

  {
    // reaction 614: c7h15-1 + nc7h16 => c7h15-4 + nc7h16
    qf[291] = k_f[291] * (sc[45]);
    qr[291] = 0.0;
  }

  {
    // reaction 615: c7h15-4 + nc7h16 => c7h15-1 + nc7h16
    qf[292] = k_f[292] * (sc[45]);
    qr[292] = 0.0;
  }

  {
    // reaction 616: c7h15-2 + nc7h16 => c7h15-3 + nc7h16
    qf[293] = k_f[293] * (sc[45]);
    qr[293] = 0.0;
  }

  {
    // reaction 617: c7h15-3 + nc7h16 => c7h15-2 + nc7h16
    qf[294] = k_f[294] * (sc[45]);
    qr[294] = 0.0;
  }

  {
    // reaction 618: c7h15-2 + nc7h16 => c7h15-4 + nc7h16
    qf[295] = k_f[295] * (sc[45]);
    qr[295] = 0.0;
  }

  {
    // reaction 619: c7h15-4 + nc7h16 => c7h15-2 + nc7h16
    qf[296] = k_f[296] * (sc[45]);
    qr[296] = 0.0;
  }

  {
    // reaction 620: c7h15-3 + nc7h16 => c7h15-4 + nc7h16
    qf[297] = k_f[297] * (sc[45]);
    qr[297] = 0.0;
  }

  {
    // reaction 621: c7h15-4 + nc7h16 => c7h15-3 + nc7h16
    qf[298] = k_f[298] * (sc[45]);
    qr[298] = 0.0;
  }

  {
    // reaction 622: c7h15-2 => c3h6 + pc4h9
    qf[299] = k_f[299] * (1.0);
    qr[299] = 0.0;
  }

  {
    // reaction 623: c3h6 + pc4h9 => c7h15-2
    qf[300] = k_f[300] * (sc[22]);
    qr[300] = 0.0;
  }

  {
    // reaction 624: c7h15-2 => c7h14-2 + h
    qf[301] = k_f[301] * (1.0);
    qr[301] = 0.0;
  }

  {
    // reaction 625: c7h14-2 + h => c7h15-2
    qf[302] = k_f[302] * (sc[0]);
    qr[302] = 0.0;
  }

  {
    // reaction 626: c7h15-3 => c4h8-1 + nc3h7
    qf[303] = k_f[303] * (1.0);
    qr[303] = 0.0;
  }

  {
    // reaction 627: c4h8-1 + nc3h7 => c7h15-3
    qf[304] = k_f[304] * (sc[24] * sc[26]);
    qr[304] = 0.0;
  }

  {
    // reaction 628: c7h15-3 => c7h14-2 + h
    qf[305] = k_f[305] * (1.0);
    qr[305] = 0.0;
  }

  {
    // reaction 629: c7h14-2 + h => c7h15-3
    qf[306] = k_f[306] * (sc[0]);
    qr[306] = 0.0;
  }

  {
    // reaction 630: c7h15-3 => c7h14-3 + h
    qf[307] = k_f[307] * (1.0);
    qr[307] = 0.0;
  }

  {
    // reaction 631: c7h14-3 + h => c7h15-3
    qf[308] = k_f[308] * (sc[0]);
    qr[308] = 0.0;
  }

  {
    // reaction 632: c7h15-4 => c2h5 + c5h10-1
    qf[309] = k_f[309] * (1.0);
    qr[309] = 0.0;
  }

  {
    // reaction 633: c2h5 + c5h10-1 => c7h15-4
    qf[310] = k_f[310] * (sc[15] * sc[30]);
    qr[310] = 0.0;
  }

  {
    // reaction 634: c7h15-4 => c7h14-3 + h
    qf[311] = k_f[311] * (1.0);
    qr[311] = 0.0;
  }

  {
    // reaction 635: c7h14-3 + h => c7h15-4
    qf[312] = k_f[312] * (sc[0]);
    qr[312] = 0.0;
  }

  {
    // reaction 636: c7h15-2 + o2 => c7h14-2 + ho2
    qf[313] = k_f[313] * (sc[3]);
    qr[313] = 0.0;
  }

  {
    // reaction 637: c7h14-2 + ho2 => c7h15-2 + o2
    qf[314] = k_f[314] * (sc[10]);
    qr[314] = 0.0;
  }

  {
    // reaction 638: c7h15-3 + o2 => c7h14-2 + ho2
    qf[315] = k_f[315] * (sc[3]);
    qr[315] = 0.0;
  }

  {
    // reaction 639: c7h14-2 + ho2 => c7h15-3 + o2
    qf[316] = k_f[316] * (sc[10]);
    qr[316] = 0.0;
  }

  {
    // reaction 640: c7h15-3 + o2 => c7h14-3 + ho2
    qf[317] = k_f[317] * (sc[3]);
    qr[317] = 0.0;
  }

  {
    // reaction 641: c7h14-3 + ho2 => c7h15-3 + o2
    qf[318] = k_f[318] * (sc[10]);
    qr[318] = 0.0;
  }

  {
    // reaction 642: c7h15-4 + o2 => c7h14-3 + ho2
    qf[319] = k_f[319] * (sc[3]);
    qr[319] = 0.0;
  }

  {
    // reaction 643: c7h14-3 + ho2 => c7h15-4 + o2
    qf[320] = k_f[320] * (sc[10]);
    qr[320] = 0.0;
  }

  {
    // reaction 644: c7h15-1 => c7h15-3
    qf[321] = k_f[321] * (1.0);
    qr[321] = 0.0;
  }

  {
    // reaction 645: c7h15-3 => c7h15-1
    qf[322] = k_f[322] * (1.0);
    qr[322] = 0.0;
  }

  {
    // reaction 646: c7h15-1 => c7h15-4
    qf[323] = k_f[323] * (1.0);
    qr[323] = 0.0;
  }

  {
    // reaction 647: c7h15-4 => c7h15-1
    qf[324] = k_f[324] * (1.0);
    qr[324] = 0.0;
  }

  {
    // reaction 648: c7h15-2 => c7h15-3
    qf[325] = k_f[325] * (1.0);
    qr[325] = 0.0;
  }

  {
    // reaction 649: c7h15-3 => c7h15-2
    qf[326] = k_f[326] * (1.0);
    qr[326] = 0.0;
  }

  {
    // reaction 650: c7h15-1 => c7h15-2
    qf[327] = k_f[327] * (1.0);
    qr[327] = 0.0;
  }

  {
    // reaction 651: c7h15-2 => c7h15-1
    qf[328] = k_f[328] * (1.0);
    qr[328] = 0.0;
  }

  {
    // reaction 652: c7h14-2 + oh => c2h5cho + pc4h9
    qf[329] = k_f[329] * (sc[4]);
    qr[329] = 0.0;
  }

  {
    // reaction 653: c7h14-3 + oh => c2h5cho + pc4h9
    qf[330] = k_f[330] * (sc[4]);
    qr[330] = 0.0;
  }

  {
    // reaction 654: c7h14-2 + o => c5h10-1 + ch3cho
    qf[331] = k_f[331] * (sc[2]);
    qr[331] = 0.0;
  }

  {
    // reaction 655: c7h14-3 + o => c5h10-1 + ch3cho
    qf[332] = k_f[332] * (sc[2]);
    qr[332] = 0.0;
  }

  {
    // reaction 656: c7h14-2 => c4h7 + nc3h7
    qf[333] = k_f[333] * (1.0);
    qr[333] = 0.0;
  }

  {
    // reaction 657: c4h7 + nc3h7 => c7h14-2
    qf[334] = k_f[334] * (sc[24] * sc[25]);
    qr[334] = 0.0;
  }

  {
    // reaction 658: c7h14-3 => c4h7 + nc3h7
    qf[335] = k_f[335] * (1.0);
    qr[335] = 0.0;
  }

  {
    // reaction 659: c4h7 + nc3h7 => c7h14-3
    qf[336] = k_f[336] * (sc[24] * sc[25]);
    qr[336] = 0.0;
  }

  {
    // reaction 660: c7h15o2-1 => c7h15-1 + o2
    qf[337] = k_f[337] * (sc[46]);
    qr[337] = 0.0;
  }

  {
    // reaction 661: c7h15-1 + o2 => c7h15o2-1
    qf[338] = k_f[338] * (sc[3]);
    qr[338] = 0.0;
  }

  {
    // reaction 662: c7h15o2-2 => c7h15-2 + o2
    qf[339] = k_f[339] * (sc[47]);
    qr[339] = 0.0;
  }

  {
    // reaction 663: c7h15-2 + o2 => c7h15o2-2
    qf[340] = k_f[340] * (sc[3]);
    qr[340] = 0.0;
  }

  {
    // reaction 664: c7h15o2-3 => c7h15-3 + o2
    qf[341] = k_f[341] * (sc[48]);
    qr[341] = 0.0;
  }

  {
    // reaction 665: c7h15-3 + o2 => c7h15o2-3
    qf[342] = k_f[342] * (sc[3]);
    qr[342] = 0.0;
  }

  {
    // reaction 666: c7h15o2-4 => c7h15-4 + o2
    qf[343] = k_f[343] * (sc[49]);
    qr[343] = 0.0;
  }

  {
    // reaction 667: c7h15-4 + o2 => c7h15o2-4
    qf[344] = k_f[344] * (sc[3]);
    qr[344] = 0.0;
  }

  {
    // reaction 668: c7h15o2-1 => c7h14ooh1-3
    qf[345] = k_f[345] * (sc[46]);
    qr[345] = 0.0;
  }

  {
    // reaction 669: c7h14ooh1-3 => c7h15o2-1
    qf[346] = k_f[346] * (1.0);
    qr[346] = 0.0;
  }

  {
    // reaction 670: c7h15o2-2 => c7h14ooh2-3
    qf[347] = k_f[347] * (sc[47]);
    qr[347] = 0.0;
  }

  {
    // reaction 671: c7h14ooh2-3 => c7h15o2-2
    qf[348] = k_f[348] * (1.0);
    qr[348] = 0.0;
  }

  {
    // reaction 672: c7h15o2-2 => c7h14ooh2-4
    qf[349] = k_f[349] * (sc[47]);
    qr[349] = 0.0;
  }

  {
    // reaction 673: c7h14ooh2-4 => c7h15o2-2
    qf[350] = k_f[350] * (1.0);
    qr[350] = 0.0;
  }

  {
    // reaction 674: c7h15o2-3 => c7h14ooh3-2
    qf[351] = k_f[351] * (sc[48]);
    qr[351] = 0.0;
  }

  {
    // reaction 675: c7h14ooh3-2 => c7h15o2-3
    qf[352] = k_f[352] * (1.0);
    qr[352] = 0.0;
  }

  {
    // reaction 676: c7h15o2-3 => c7h14ooh3-4
    qf[353] = k_f[353] * (sc[48]);
    qr[353] = 0.0;
  }

  {
    // reaction 677: c7h14ooh3-4 => c7h15o2-3
    qf[354] = k_f[354] * (1.0);
    qr[354] = 0.0;
  }

  {
    // reaction 678: c7h15o2-3 => c7h14ooh3-5
    qf[355] = k_f[355] * (sc[48]);
    qr[355] = 0.0;
  }

  {
    // reaction 679: c7h14ooh3-5 => c7h15o2-3
    qf[356] = k_f[356] * (1.0);
    qr[356] = 0.0;
  }

  {
    // reaction 680: c7h15o2-4 => c7h14ooh4-2
    qf[357] = k_f[357] * (sc[49]);
    qr[357] = 0.0;
  }

  {
    // reaction 681: c7h14ooh4-2 => c7h15o2-4
    qf[358] = k_f[358] * (1.0);
    qr[358] = 0.0;
  }

  {
    // reaction 684: c7h14ooh2-3 => c7h14-2 + ho2
    qf[359] = k_f[359] * (1.0);
    qr[359] = 0.0;
  }

  {
    // reaction 685: c7h14-2 + ho2 => c7h14ooh2-3
    qf[360] = k_f[360] * (sc[10]);
    qr[360] = 0.0;
  }

  {
    // reaction 686: c7h14ooh3-2 => c7h14-2 + ho2
    qf[361] = k_f[361] * (1.0);
    qr[361] = 0.0;
  }

  {
    // reaction 687: c7h14-2 + ho2 => c7h14ooh3-2
    qf[362] = k_f[362] * (sc[10]);
    qr[362] = 0.0;
  }

  {
    // reaction 688: c7h14ooh3-4 => c7h14-3 + ho2
    qf[363] = k_f[363] * (1.0);
    qr[363] = 0.0;
  }

  {
    // reaction 689: c7h14-3 + ho2 => c7h14ooh3-4
    qf[364] = k_f[364] * (sc[10]);
    qr[364] = 0.0;
  }

  {
    // reaction 690: c7h14ooh4-3 => c7h14-3 + ho2
    qf[365] = k_f[365] * (sc[50]);
    qr[365] = 0.0;
  }

  {
    // reaction 691: c7h14-3 + ho2 => c7h14ooh4-3
    qf[366] = k_f[366] * (sc[10]);
    qr[366] = 0.0;
  }

  {
    // reaction 692: c7h14ooh1-3 => c7h14o1-3 + oh
    qf[367] = k_f[367] * (1.0);
    qr[367] = 0.0;
  }

  {
    // reaction 693: c7h14ooh2-4 => c7h14o2-4 + oh
    qf[368] = k_f[368] * (1.0);
    qr[368] = 0.0;
  }

  {
    // reaction 694: c7h14ooh4-2 => c7h14o2-4 + oh
    qf[369] = k_f[369] * (1.0);
    qr[369] = 0.0;
  }

  {
    // reaction 695: c7h14ooh2-4 => c5h10-1 + ch3cho + oh
    qf[370] = k_f[370] * (1.0);
    qr[370] = 0.0;
  }

  {
    // reaction 696: c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
    qf[371] = k_f[371] * (1.0);
    qr[371] = 0.0;
  }

  {
    // reaction 697: c7h14ooh4-2 => c3h6 + nc3h7cho + oh
    qf[372] = k_f[372] * (1.0);
    qr[372] = 0.0;
  }

  {
    // reaction 698: c7h14ooh1-3o2 => c7h14ooh1-3 + o2
    qf[373] = k_f[373] * (sc[51]);
    qr[373] = 0.0;
  }

  {
    // reaction 699: c7h14ooh1-3 + o2 => c7h14ooh1-3o2
    qf[374] = k_f[374] * (sc[3]);
    qr[374] = 0.0;
  }

  {
    // reaction 700: c7h14ooh2-4o2 => c7h14ooh2-4 + o2
    qf[375] = k_f[375] * (1.0);
    qr[375] = 0.0;
  }

  {
    // reaction 701: c7h14ooh2-4 + o2 => c7h14ooh2-4o2
    qf[376] = k_f[376] * (sc[3]);
    qr[376] = 0.0;
  }

  {
    // reaction 702: c7h14ooh3-5o2 => c7h14ooh3-5 + o2
    qf[377] = k_f[377] * (1.0);
    qr[377] = 0.0;
  }

  {
    // reaction 703: c7h14ooh3-5 + o2 => c7h14ooh3-5o2
    qf[378] = k_f[378] * (sc[3]);
    qr[378] = 0.0;
  }

  {
    // reaction 704: c7h14ooh4-2o2 => c7h14ooh4-2 + o2
    qf[379] = k_f[379] * (1.0);
    qr[379] = 0.0;
  }

  {
    // reaction 705: c7h14ooh4-2 + o2 => c7h14ooh4-2o2
    qf[380] = k_f[380] * (sc[3]);
    qr[380] = 0.0;
  }

  {
    // reaction 706: c7h14ooh1-3o2 => nc7ket13 + oh
    qf[381] = k_f[381] * (sc[51]);
    qr[381] = 0.0;
  }

  {
    // reaction 707: nc7ket13 + oh => c7h14ooh1-3o2
    qf[382] = k_f[382] * (sc[4]);
    qr[382] = 0.0;
  }

  {
    // reaction 708: c7h14ooh2-4o2 => nc7ket24 + oh
    qf[383] = k_f[383] * (1.0);
    qr[383] = 0.0;
  }

  {
    // reaction 709: nc7ket24 + oh => c7h14ooh2-4o2
    qf[384] = k_f[384] * (sc[4]);
    qr[384] = 0.0;
  }

  {
    // reaction 710: c7h14ooh3-5o2 => nc7ket35 + oh
    qf[385] = k_f[385] * (1.0);
    qr[385] = 0.0;
  }

  {
    // reaction 711: nc7ket35 + oh => c7h14ooh3-5o2
    qf[386] = k_f[386] * (sc[4]);
    qr[386] = 0.0;
  }

  {
    // reaction 712: c7h14ooh4-2o2 => nc7ket42 + oh
    qf[387] = k_f[387] * (1.0);
    qr[387] = 0.0;
  }

  {
    // reaction 713: nc7ket42 + oh => c7h14ooh4-2o2
    qf[388] = k_f[388] * (sc[4]);
    qr[388] = 0.0;
  }

  {
    // reaction 714: nc7ket13 => ch2cho + nc4h9cho + oh
    qf[389] = k_f[389] * (1.0);
    qr[389] = 0.0;
  }

  {
    // reaction 715: nc7ket24 => ch3coch2 + nc3h7cho + oh
    qf[390] = k_f[390] * (1.0);
    qr[390] = 0.0;
  }

  {
    // reaction 716: nc7ket35 => c2h5cho + c2h5coch2 + oh
    qf[391] = k_f[391] * (1.0);
    qr[391] = 0.0;
  }

  {
    // reaction 717: nc7ket42 => ch3cho + nc3h7coch2 + oh
    qf[392] = k_f[392] * (1.0);
    qr[392] = 0.0;
  }

  {
    // reaction 718: c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
    qf[393] = k_f[393] * (sc[4] * sc[53]);
    qr[393] = 0.0;
  }

  {
    // reaction 720: c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
    qf[394] = k_f[394] * (sc[4] * sc[53]);
    qr[394] = 0.0;
  }

  {
    // reaction 721: c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
    qf[395] = k_f[395] * (sc[10] * sc[53]);
    qr[395] = 0.0;
  }

  {
    // reaction 723: c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
    qf[396] = k_f[396] * (sc[10] * sc[53]);
    qr[396] = 0.0;
  }

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_k_f_qss(const amrex::Real* tc, amrex::Real invT, amrex::Real* k_f)
{
  // reaction 8: ch3o (+M) <=> ch2o + h (+M)
  k_f[0] = 54500000000000 * exp(-(6793.42498836372) * invT);
  // reaction 10: ch3co (+M) <=> ch3 + co (+M)
  k_f[1] = 3000000000000 * exp(-(8413.78265225491) * invT);
  // reaction 11: hco + M => co + h + M
  k_f[2] = 186000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  // reaction 12: co + h + M => hco + M
  k_f[3] = 64.67 * exp(-(-222.421766285686) * invT);
  // reaction 15: ch2o + M => h + hco + M
  k_f[4] = 6.283e+23 * exp((-3.57) * tc[0] - (46899.7932529999) * invT);
  // reaction 16: h + hco + M => ch2o + M
  k_f[5] = 2660000000000 * exp((-2.57) * tc[0] - (214.873516298615) * invT);
  // reaction 25: c2h5o + M => ch2o + ch3 + M
  k_f[6] = 1.35e+32 * exp((-6.96) * tc[0] - (11976.5566461523) * invT);
  // reaction 26: ch2o + ch3 + M => c2h5o + M
  k_f[7] = 6.442e+24 * exp((-6.99) * tc[0] - (8479.20081880953) * invT);
  // reaction 29: c2h5o + M => ch3cho + h + M
  k_f[8] = 1.16e+29 * exp((-5.89) * tc[0] - (12716.2851448853) * invT);
  // reaction 30: ch3cho + h + M => c2h5o + M
  k_f[9] = 3.063e+18 * exp((-4.78) * tc[0] - (3069.62166140879) * invT);
  // reaction 41: hco + oh => co + h2o
  k_f[10] = 102000000;
  // reaction 42: co + h2o => hco + oh
  k_f[11] = 2896000000 * exp(-(52938.3932426565) * invT);
  // reaction 55: c2h4 + o => ch3 + hco
  k_f[12] = 10.2 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
  // reaction 56: ch3 + hco => c2h4 + o
  k_f[13] = 285.1 * exp((1.05) * tc[0] - (15987.1934726159) * invT);
  // reaction 65: ch3 + ho2 => ch3o + oh
  k_f[14] = 11000000;
  // reaction 66: ch3o + oh => ch3 + ho2
  k_f[15] = 478000000 * exp((-0.35) * tc[0] - (12353.9691455059) * invT);
  // reaction 71: h + hco => co + h2
  k_f[16] = 73400000;
  // reaction 72: co + h2 => h + hco
  k_f[17] = 481300000 * exp(-(45289.4999224248) * invT);
  // reaction 73: hco + o => co + oh
  k_f[18] = 30200000;
  // reaction 74: co + oh => hco + o
  k_f[19] = 86970000 * exp(-(44232.7449242349) * invT);
  // reaction 75: ch2o + oh => h2o + hco
  k_f[20] = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  // reaction 76: h2o + hco => ch2o + oh
  k_f[21] = 1186 * exp((1.18) * tc[0] - (14784.5056413427) * invT);
  // reaction 77: ch2o + h => h2 + hco
  k_f[22] = 933.4 * exp((1.5) * tc[0] - (1497.57279743485) * invT);
  // reaction 78: h2 + hco => ch2o + h
  k_f[23] = 74.53 * exp((1.5) * tc[0] - (8881.7741514533) * invT);
  // reaction 79: ch2o + o => hco + oh
  k_f[24] = 416000 * exp((0.57) * tc[0] - (1389.88443095264) * invT);
  // reaction 80: hco + oh => ch2o + o
  k_f[25] = 14590 * exp((0.57) * tc[0] - (7719.3436534444) * invT);
  // reaction 85: ch3 + o2 => ch3o + o
  k_f[26] = 1995000000000 * exp((-1.57) * tc[0] - (14698.9588081559) * invT);
  // reaction 86: ch3o + o => ch3 + o2
  k_f[27] = 3585000000000 * exp((-1.59) * tc[0] - (-820.746381927498) * invT);
  // reaction 87: ch2o + ch3 => ch4 + hco
  k_f[28] = 3.636e-12 * exp((5.42) * tc[0] - (502.21023247311) * invT);
  // reaction 88: ch4 + hco => ch2o + ch3
  k_f[29] = 7.584e-12 * exp((5.42) * tc[0] - (8126.94915274622) * invT);
  // reaction 89: ch3 + hco => ch4 + co
  k_f[30] = 121000000;
  // reaction 90: ch4 + co => ch3 + hco
  k_f[31] = 20730000000 * exp(-(45531.043922011) * invT);
  // reaction 93: hco + ho2 => ch2o + o2
  k_f[32] = 29740 * exp((0.33) * tc[0] - (-1942.91954667202) * invT);
  // reaction 94: ch2o + o2 => hco + ho2
  k_f[33] = 20500000 * exp(-(19600.2891330938) * invT);
  // reaction 95: ch3o + o2 => ch2o + ho2
  k_f[34] = 55000 * exp(-(1219.79719791064) * invT);
  // reaction 96: ch2o + ho2 => ch3o + o2
  k_f[35] = 1318 * exp((0.35) * tc[0] - (15795.9711396102) * invT);
  // reaction 99: hco + o2 => co + ho2
  k_f[36] = 7580000 * exp(-(206.318832979935) * invT);
  // reaction 100: co + ho2 => hco + o2
  k_f[37] = 902900 * exp((0.33) * tc[0] - (16570.9248049494) * invT);
  // reaction 113: ch2o + ho2 => h2o2 + hco
  k_f[38] = 5.82e-09 * exp((4.53) * tc[0] - (3299.59167768155) * invT);
  // reaction 114: h2o2 + hco => ch2o + ho2
  k_f[39] = 1.194e-08 * exp((4.2) * tc[0] - (2476.32921242503) * invT);
  // reaction 139: hcco + oh => 2 hco
  k_f[40] = 10000000;
  // reaction 140: h + hcco => ch2(s) + co
  k_f[41] = 110000000;
  // reaction 141: ch2(s) + co => h + hcco
  k_f[42] = 2046000 * exp((0.89) * tc[0] - (14004.5198093453) * invT);
  // reaction 155: c2h3 + o2 => ch2o + hco
  k_f[43] = 1.7e+23 * exp((-5.31) * tc[0] - (3270.90832773068) * invT);
  // reaction 156: ch2o + hco => c2h3 + o2
  k_f[44] = 1.657e+23 * exp((-5.31) * tc[0] - (46824.3107531292) * invT);
  // reaction 161: ch3cho => ch3 + hco
  k_f[45] = 2.614e+15 * exp((0.15) * tc[0] - (40534.1024305702) * invT);
  // reaction 162: ch3 + hco => ch3cho
  k_f[46] = 20000000;
  // reaction 163: ch3cho + o2 => ch3co + ho2
  k_f[47] = 30100000 * exp(-(19700.9324662548) * invT);
  // reaction 164: ch3co + ho2 => ch3cho + o2
  k_f[48] = 85520 * exp((0.32) * tc[0] - (-976.240331661156) * invT);
  // reaction 165: ch3cho + oh => ch3co + h2o
  k_f[49] = 2 * exp((1.8) * tc[0] - (654.181665546136) * invT);
  // reaction 166: ch3co + h2o => ch3cho + oh
  k_f[50] = 1.354 * exp((1.79) * tc[0] - (16530.667471685) * invT);
  // reaction 167: ch3cho + h => ch3co + h2
  k_f[51] = 13400000 * exp(-(1660.61499715557) * invT);
  // reaction 168: ch3co + h2 => ch3cho + h
  k_f[52] = 2096000 * exp((-0.01) * tc[0] - (9908.33614969493) * invT);
  // reaction 169: ch3cho + o => ch3co + oh
  k_f[53] = 5940000 * exp(-(940.008731723216) * invT);
  // reaction 170: ch3co + oh => ch3cho + o
  k_f[54] = 408000 * exp((-0.01) * tc[0] - (8137.01348606232) * invT);
  // reaction 171: ch3cho + ho2 => ch3co + h2o2
  k_f[55] = 3010000 * exp(-(5998.34265639226) * invT);
  // reaction 172: ch3co + h2o2 => ch3cho + ho2
  k_f[56] = 12100000 * exp((-0.34) * tc[0] - (6043.63215631468) * invT);
  // reaction 173: ch3 + ch3cho => ch3co + ch4
  k_f[57] = 2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
  // reaction 174: ch3co + ch4 => ch3 + ch3cho
  k_f[58] = 10.66 * exp((1.77) * tc[0] - (11463.2756470315) * invT);
  // reaction 185: c3h6 + o => c2h5 + hco
  k_f[59] = 15.8 * exp((1.76) * tc[0] - (-611.911465618539) * invT);
  // reaction 186: c2h5 + hco => c3h6 + o
  k_f[60] = 0.1402 * exp((1.88) * tc[0] - (13340.2738104831) * invT);
  // reaction 258: pc4h9 => c2h4 + c2h5
  k_f[61] = 7.497e+17 * exp((-1.41) * tc[0] - (14885.1489745036) * invT);
  // reaction 259: c2h4 + c2h5 => pc4h9
  k_f[62] = 330000 * exp(-(3623.15999379398) * invT);
  // reaction 260: pc4h9 => c4h8-1 + h
  k_f[63] = 1.159e+17 * exp((-1.17) * tc[0] - (19202.7479671081) * invT);
  // reaction 261: c4h8-1 + h => pc4h9
  k_f[64] = 10000000 * exp(-(1459.32833083369) * invT);
  // reaction 262: o2 + pc4h9 => c4h8-1 + ho2
  k_f[65] = 3e-25 * exp(-(1509.64999741416) * invT);
  // reaction 263: c4h8-1 + ho2 => o2 + pc4h9
  k_f[66] = 2e-25 * exp(-(8806.29165158259) * invT);
  // reaction 266: c2h5co => c2h5 + co
  k_f[67] = 1.834e+15 * exp((-0.73) * tc[0] - (6496.52715553893) * invT);
  // reaction 267: c2h5 + co => c2h5co
  k_f[68] = 151000 * exp(-(2420.4721625207) * invT);
  // reaction 268: c2h5cho + h => c2h5co + h2
  k_f[69] = 40000000 * exp(-(2113.50999637982) * invT);
  // reaction 269: c2h5co + h2 => c2h5cho + h
  k_f[70] = 5854000 * exp(-(10361.2311489192) * invT);
  // reaction 270: c2h5cho + o => c2h5co + oh
  k_f[71] = 5000000 * exp(-(900.757831790448) * invT);
  // reaction 271: c2h5co + oh => c2h5cho + o
  k_f[72] = 321400 * exp(-(8091.72398613989) * invT);
  // reaction 272: c2h5cho + oh => c2h5co + h2o
  k_f[73] = 26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
  // reaction 273: c2h5co + h2o => c2h5cho + oh
  k_f[74] = 17050 * exp((0.76) * tc[0] - (15700.3599731073) * invT);
  // reaction 274: c2h5cho + ch3 => c2h5co + ch4
  k_f[75] = 2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
  // reaction 275: c2h5co + ch4 => c2h5cho + ch3
  k_f[76] = 9.972 * exp((1.78) * tc[0] - (11463.2756470315) * invT);
  // reaction 276: c2h5cho + ho2 => c2h5co + h2o2
  k_f[77] = 2800000 * exp(-(6843.74665494419) * invT);
  // reaction 277: c2h5co + h2o2 => c2h5cho + ho2
  k_f[78] = 10530000 * exp((-0.33) * tc[0] - (6884.00398820857) * invT);
  // reaction 278: c2h5 + c2h5cho => c2h5co + c2h6
  k_f[79] = 1000000 * exp(-(4025.73332643776) * invT);
  // reaction 279: c2h5co + c2h6 => c2h5 + c2h5cho
  k_f[80] = 598400000 * exp((-0.57) * tc[0] - (10416.5849821577) * invT);
  // reaction 280: c2h5cho => c2h5 + hco
  k_f[81] = 9.85e+18 * exp((-0.73) * tc[0] - (41117.8337629036) * invT);
  // reaction 281: c2h5 + hco => c2h5cho
  k_f[82] = 18100000;
  // reaction 282: c2h5cho + o2 => c2h5co + ho2
  k_f[83] = 10050000 * exp(-(20480.9182982521) * invT);
  // reaction 283: c2h5co + ho2 => c2h5cho + o2
  k_f[84] = 26720 * exp((0.33) * tc[0] - (-199.273799658669) * invT);
  // reaction 284: c2h3 + c2h5cho => c2h4 + c2h5co
  k_f[85] = 1700000 * exp(-(4247.14865939183) * invT);
  // reaction 285: c2h4 + c2h5co => c2h3 + c2h5cho
  k_f[86] = 3661 * exp((0.83) * tc[0] - (12167.7789791581) * invT);
  // reaction 286: c2h5cho + c3h5-a => c2h5co + c3h6
  k_f[87] = 1700000 * exp(-(4247.14865939183) * invT);
  // reaction 287: c2h5co + c3h6 => c2h5cho + c3h5-a
  k_f[88] = 10000000 * exp(-(14090.0666425322) * invT);
  // reaction 294: c5h10-1 + o => hco + pc4h9
  k_f[89] = 100000;
  // reaction 295: c5h10-1 + o => ch3co + nc3h7
  k_f[90] = 100000;
  // reaction 298: c5h10-1 + oh => ch2o + pc4h9
  k_f[91] = 100000;
  // reaction 304: hco + o => co2 + h
  k_f[92] = 30000000;
  // reaction 305: co2 + h => hco + o
  k_f[93] = 9677000000 * exp(-(55454.4765716801) * invT);
  // reaction 306: ch3co + h => ch2co + h2
  k_f[94] = 20000000;
  // reaction 307: ch2co + h2 => ch3co + h
  k_f[95] = 562600000000 * exp((-1.13) * tc[0] - (32054.9016117606) * invT);
  // reaction 308: ch3co + o => ch2co + oh
  k_f[96] = 20000000;
  // reaction 309: ch2co + oh => ch3co + o
  k_f[97] = 5951000000000 * exp((-1.13) * tc[0] - (60738.2515626297) * invT);
  // reaction 310: ch3 + ch3co => ch2co + ch4
  k_f[98] = 50000000;
  // reaction 311: ch2co + ch4 => ch3 + ch3co
  k_f[99] = 819700000000 * exp((-0.67) * tc[0] - (40171.7864311908) * invT);
  // reaction 312: c2h4 + o => ch2cho + h
  k_f[100] = 3.39 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
  // reaction 313: ch2cho + h => c2h4 + o
  k_f[101] = 9.481 * exp((1.79) * tc[0] - (8076.62748616575) * invT);
  // reaction 318: c2h5o + o2 => ch3cho + ho2
  k_f[102] = 42800 * exp(-(552.028682387778) * invT);
  // reaction 319: ch3cho + ho2 => c2h5o + o2
  k_f[103] = 387.2 * exp((0.44) * tc[0] - (16042.5473058545) * invT);
  // reaction 322: c2h3 + o2 => ch2cho + o
  k_f[104] = 350000000 * exp((-0.61) * tc[0] - (2646.91966213283) * invT);
  // reaction 323: ch2cho + o => c2h3 + o2
  k_f[105] = 2589000 * exp((0.12) * tc[0] - (3250.27644443268) * invT);
  // reaction 324: ch3o2h => ch3o + oh
  k_f[106] = 631000000000000 * exp(-(21286.0649635396) * invT);
  // reaction 325: ch3o + oh => ch3o2h
  k_f[107] = 116600 * exp((0.6) * tc[0] - (-891.196715140159) * invT);
  // reaction 326: c3h2 + o2 => co + h + hcco
  k_f[108] = 50000000;
  // reaction 327: ch2o + ch3o2 => ch3o2h + hco
  k_f[109] = 1990000 * exp(-(5867.50632328303) * invT);
  // reaction 328: ch3o2h + hco => ch2o + ch3o2
  k_f[110] = 8504000 * exp((-0.5) * tc[0] - (3527.04561062528) * invT);
  // reaction 333: c2h5 + ho2 => c2h5o + oh
  k_f[111] = 32000000;
  // reaction 334: c2h5o + oh => c2h5 + ho2
  k_f[112] = 3075000000 * exp((-0.32) * tc[0] - (13833.4261429717) * invT);
  // reaction 335: ch3 + ch3o2 => 2 ch3o
  k_f[113] = 7000000 * exp(-(-503.21666580472) * invT);
  // reaction 336: c2h5 + ch3o2 => c2h5o + ch3o
  k_f[114] = 7000000 * exp(-(-503.21666580472) * invT);
  // reaction 341: 2 ch3o2 => 2 ch3o + o2
  k_f[115] = 14000000000 * exp((-1.61) * tc[0] - (935.982998396779) * invT);
  // reaction 344: ch3cho + ch3o2 => ch3co + ch3o2h
  k_f[116] = 3010000 * exp(-(5998.34265639226) * invT);
  // reaction 345: ch3co + ch3o2h => ch3cho + ch3o2
  k_f[117] = 25190000 * exp((-0.51) * tc[0] - (4524.42104225023) * invT);
  // reaction 360: c3h5o => c2h3cho + h
  k_f[118] = 100000000000000 * exp(-(14643.6049749173) * invT);
  // reaction 361: c2h3cho + h => c3h5o
  k_f[119] = 771400 * exp((0.48) * tc[0] - (8932.09581803377) * invT);
  // reaction 362: c3h5o => c2h3 + ch2o
  k_f[120] = 2028000000000 * exp((0.09) * tc[0] - (11855.7846463592) * invT);
  // reaction 363: c2h3 + ch2o => c3h5o
  k_f[121] = 150000 * exp(-(5334.09665753003) * invT);
  // reaction 364: c3h5o + o2 => c2h3cho + ho2
  k_f[122] = 1000000 * exp(-(3019.29999482832) * invT);
  // reaction 365: c2h3cho + ho2 => c3h5o + o2
  k_f[123] = 128800 * exp(-(16102.933305751) * invT);
  // reaction 366: c3h5-a + ho2 => c3h5o + oh
  k_f[124] = 7000000 * exp(-(-503.21666580472) * invT);
  // reaction 367: c3h5o + oh => c3h5-a + ho2
  k_f[125] = 20410000 * exp((-0.16) * tc[0] - (6169.43632276586) * invT);
  // reaction 368: c3h5-a + ch3o2 => c3h5o + ch3o
  k_f[126] = 7000000 * exp(-(-503.21666580472) * invT);
  // reaction 371: ch3 + oh => ch2(s) + h2o
  k_f[127] = 26500000 * exp(-(1100.03163144912) * invT);
  // reaction 372: ch2(s) + h2o => ch3 + oh
  k_f[128] = 32360 * exp((0.89) * tc[0] - (609.395382289516) * invT);
  // reaction 373: c4h7o => c2h3 + ch3cho
  k_f[129] = 794000000000000 * exp(-(9561.11665028967) * invT);
  // reaction 374: c2h3 + ch3cho => c4h7o
  k_f[130] = 10000 * exp(-(10064.3333160944) * invT);
  // reaction 375: c4h7o => c2h3cho + ch3
  k_f[131] = 794000000000000 * exp(-(9561.11665028967) * invT);
  // reaction 376: c2h3cho + ch3 => c4h7o
  k_f[132] = 10000 * exp(-(10064.3333160944) * invT);
  // reaction 377: c4h7 + ho2 => c4h7o + oh
  k_f[133] = 7000000 * exp(-(-503.21666580472) * invT);
  // reaction 378: c4h7o + oh => c4h7 + ho2
  k_f[134] = 100800 * exp((0.26) * tc[0] - (8499.32948544172) * invT);
  // reaction 379: c4h7 + ch3o2 => c4h7o + ch3o
  k_f[135] = 7000000 * exp(-(-503.21666580472) * invT);
  // reaction 386: c4h8-1 + o => c2h5 + ch3co
  k_f[136] = 13000000 * exp(-(427.734165934012) * invT);
  // reaction 387: c2h5 + ch3co => c4h8-1 + o
  k_f[137] = 2350000 * exp(-(19197.7158004501) * invT);
  // reaction 390: c4h8-1 + oh => c2h6 + ch3co
  k_f[138] = 500000;
  // reaction 391: c2h6 + ch3co => c4h8-1 + oh
  k_f[139] = 9830000 * exp(-(16319.3164720471) * invT);
  // reaction 392: c4h8-1 + o => c2h5co + ch3
  k_f[140] = 13000000 * exp(-(427.734165934012) * invT);
  // reaction 393: c2h5co + ch3 => c4h8-1 + o
  k_f[141] = 480000 * exp(-(16379.7024719436) * invT);
  // reaction 396: c4h8-1 + oh => c2h5co + ch4
  k_f[142] = 500000;
  // reaction 397: c2h5co + ch4 => c4h8-1 + oh
  k_f[143] = 22000000 * exp(-(17245.2351371277) * invT);
  // reaction 400: c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  k_f[144] = 5.601e+22 * exp((-2.23) * tc[0] - (19102.1046339472) * invT);
  // reaction 401: c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  k_f[145] = 7540000;
  // reaction 404: c4h8ooh1-3 => c3h6 + ch2o + oh
  k_f[146] = 66370000000000 * exp((-0.16) * tc[0] - (15046.1783075611) * invT);
  // reaction 405: pc4h9o2 => c4h8ooh1-3
  k_f[147] = 25000000000 * exp(-(10492.0674820284) * invT);
  // reaction 406: c4h8ooh1-3 => pc4h9o2
  k_f[148] = 3231000000 * exp((-0.14) * tc[0] - (3960.81837654895) * invT);
  // reaction 407: c2h5cho + ch3o2 => c2h5co + ch3o2h
  k_f[149] = 3010000 * exp(-(5998.34265639226) * invT);
  // reaction 408: c2h5co + ch3o2h => c2h5cho + ch3o2
  k_f[150] = 23580000 * exp((-0.51) * tc[0] - (4520.3953089238) * invT);
  // reaction 409: c2h5cho + c4h7 => c2h5co + c4h8-1
  k_f[151] = 1700000 * exp(-(4247.14865939183) * invT);
  // reaction 410: c2h5co + c4h8-1 => c2h5cho + c4h7
  k_f[152] = 10000000 * exp(-(14090.0666425322) * invT);
  // reaction 439: c3h3 + h => c3h2 + h2
  k_f[153] = 50000000;
  // reaction 440: c3h2 + h2 => c3h3 + h
  k_f[154] = 38530 * exp((0.38) * tc[0] - (2314.79666270171) * invT);
  // reaction 445: c3h2 + oh => c2h2 + hco
  k_f[155] = 50000000;
  // reaction 446: c2h2 + hco => c3h2 + oh
  k_f[156] = 290700000000000 * exp((-1.39) * tc[0] - (39512.5725989866) * invT);
  // reaction 455: c3h3 + oh => c3h2 + h2o
  k_f[157] = 10000000;
  // reaction 456: c3h2 + h2o => c3h3 + oh
  k_f[158] = 1343000000 * exp(-(7890.437319818) * invT);
  // reaction 457: c3h3 + o2 => ch2co + hco
  k_f[159] = 30100 * exp(-(1444.23183085955) * invT);
  // reaction 458: ch2co + hco => c3h3 + o2
  k_f[160] = 488100 * exp(-(29926.2951154067) * invT);
  // reaction 459: pc4h9o2 => o2 + pc4h9
  k_f[161] = 6.155e+19 * exp((-1.38) * tc[0] - (17869.2238027256) * invT);
  // reaction 460: o2 + pc4h9 => pc4h9o2
  k_f[162] = 4520000;
  // reaction 461: ch2cho => ch2co + h
  k_f[163] = 3.094e+15 * exp((-0.26) * tc[0] - (25573.4709561959) * invT);
  // reaction 462: ch2co + h => ch2cho
  k_f[164] = 50000000 * exp(-(6189.56498939805) * invT);
  // reaction 463: ch2cho + o2 => ch2o + co + oh
  k_f[165] = 20000000 * exp(-(2113.50999637982) * invT);
  // reaction 464: nc4ket13 => ch2cho + ch3cho + oh
  k_f[166] = 1.05e+16 * exp(-(20933.8132974763) * invT);
  // reaction 467: c3h5-a + o2 => ch2cho + ch2o
  k_f[167] = 7140000000 * exp((-1.21) * tc[0] - (10592.7108151893) * invT);
  // reaction 468: ch2cho + ch2o => c3h5-a + o2
  k_f[168] = 49440000000 * exp((-1.4) * tc[0] - (44595.0609236143) * invT);
  // reaction 470: hcco + o2 => co2 + hco
  k_f[169] = 240000 * exp(-(-429.747032597231) * invT);
  // reaction 471: co2 + hco => hcco + o2
  k_f[170] = 147400000 * exp(-(67229.7465515105) * invT);
  // reaction 476: nc3h7cho + o2 => ho2 + nc3h7co
  k_f[171] = 20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
  // reaction 477: ho2 + nc3h7co => nc3h7cho + o2
  k_f[172] = 10 * exp((0.5) * tc[0] - (2012.86666321888) * invT);
  // reaction 478: nc3h7cho + oh => h2o + nc3h7co
  k_f[173] = 26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
  // reaction 479: h2o + nc3h7co => nc3h7cho + oh
  k_f[174] = 18520 * exp((0.75) * tc[0] - (15710.4243064233) * invT);
  // reaction 480: h + nc3h7cho => h2 + nc3h7co
  k_f[175] = 40000000 * exp(-(2113.50999637982) * invT);
  // reaction 481: h2 + nc3h7co => h + nc3h7cho
  k_f[176] = 18000000 * exp(-(12077.1999793133) * invT);
  // reaction 482: nc3h7cho + o => nc3h7co + oh
  k_f[177] = 5000000 * exp(-(900.757831790448) * invT);
  // reaction 483: nc3h7co + oh => nc3h7cho + o
  k_f[178] = 1000000 * exp(-(9561.11665028967) * invT);
  // reaction 484: ho2 + nc3h7cho => h2o2 + nc3h7co
  k_f[179] = 2800000 * exp(-(6843.74665494419) * invT);
  // reaction 485: h2o2 + nc3h7co => ho2 + nc3h7cho
  k_f[180] = 1000000 * exp(-(5032.1666580472) * invT);
  // reaction 486: ch3 + nc3h7cho => ch4 + nc3h7co
  k_f[181] = 1700000 * exp(-(4247.14865939183) * invT);
  // reaction 487: ch4 + nc3h7co => ch3 + nc3h7cho
  k_f[182] = 15000000 * exp(-(14090.0666425322) * invT);
  // reaction 488: ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  k_f[183] = 1000000 * exp(-(4780.55832514484) * invT);
  // reaction 489: ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  k_f[184] = 25000 * exp(-(5032.1666580472) * invT);
  // reaction 490: nc3h7co => co + nc3h7
  k_f[185] = 5.325e+15 * exp((-0.86) * tc[0] - (6743.10332178324) * invT);
  // reaction 491: co + nc3h7 => nc3h7co
  k_f[186] = 150000 * exp(-(2415.43999586265) * invT);
  // reaction 510: nc4h9co => co + pc4h9
  k_f[187] = 100000000000 * exp(-(4830.87999172531) * invT);
  // reaction 511: co + pc4h9 => nc4h9co
  k_f[188] = 100000;
  // reaction 512: ch2(s) + ch4 => 2 ch3
  k_f[189] = 40000000;
  // reaction 513: 2 ch3 => ch2(s) + ch4
  k_f[190] = 5429000000 * exp((-0.89) * tc[0] - (7875.34081984386) * invT);
  // reaction 514: c2h6 + ch2(s) => c2h5 + ch3
  k_f[191] = 120000000;
  // reaction 515: c2h5 + ch3 => c2h6 + ch2(s)
  k_f[192] = 104100000 * exp((-0.33) * tc[0] - (9973.75431624954) * invT);
  // reaction 516: ch2(s) + o2 => co + h + oh
  k_f[193] = 70000000;
  // reaction 517: ch2(s) + h2 => ch3 + h
  k_f[194] = 70000000;
  // reaction 518: ch3 + h => ch2(s) + h2
  k_f[195] = 248200000000 * exp((-0.89) * tc[0] - (8116.88481943013) * invT);
  // reaction 519: ch2(s) + o => co + 2 h
  k_f[196] = 30000000;
  // reaction 520: ch2(s) + oh => ch2o + h
  k_f[197] = 30000000;
  // reaction 521: ch2o + h => ch2(s) + oh
  k_f[198] = 3194000000000 * exp((-0.89) * tc[0] - (44212.6162576027) * invT);
  // reaction 522: ch2(s) + co2 => ch2o + co
  k_f[199] = 3000000;
  // reaction 523: ch2o + co => ch2(s) + co2
  k_f[200] = 2852000000 * exp((-0.89) * tc[0] - (32970.7559435252) * invT);
  // reaction 524: ch2(s) + ch3 => c2h4 + h
  k_f[201] = 20000000;
  // reaction 525: c2h4 + h => ch2(s) + ch3
  k_f[202] = 2671000000 * exp((-0.06) * tc[0] - (34641.4352739969) * invT);
  // reaction 526: ch2(s) + ch2co => c2h4 + co
  k_f[203] = 160000000;
  // reaction 527: c2h4 + co => ch2(s) + ch2co
  k_f[204] = 4596000000 * exp((-0.06) * tc[0] - (53139.6799089784) * invT);
  // reaction 528: nc7h16 => c7h15-1 + h
  k_f[205] = 1.34e+88 * exp((-21.17) * tc[0] - (71859.339876914) * invT);
  // reaction 529: c7h15-1 + h => nc7h16
  k_f[206] = 3.374e+76 * exp((-20.22) * tc[0] - (19932.4121325249) * invT);
  // reaction 530: nc7h16 => c7h15-2 + h
  k_f[207] = 6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
  // reaction 531: c7h15-2 + h => nc7h16
  k_f[208] = 5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
  // reaction 532: nc7h16 => c7h15-3 + h
  k_f[209] = 6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
  // reaction 533: c7h15-3 + h => nc7h16
  k_f[210] = 5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
  // reaction 534: nc7h16 => c7h15-4 + h
  k_f[211] = 3.25e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
  // reaction 535: c7h15-4 + h => nc7h16
  k_f[212] = 5.187e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
  // reaction 536: nc7h16 => nc3h7 + pc4h9
  k_f[213] = 1.415e+78 * exp((-17.71) * tc[0] - (60738.2515626297) * invT);
  // reaction 537: nc3h7 + pc4h9 => nc7h16
  k_f[214] = 1.363e+62 * exp((-16.11) * tc[0] - (16334.4129720212) * invT);
  // reaction 538: h + nc7h16 => c7h15-1 + h2
  k_f[215] = 0.188 * exp((2.75) * tc[0] - (3160.20066125364) * invT);
  // reaction 539: c7h15-1 + h2 => h + nc7h16
  k_f[216] = 0.008926 * exp((2.7) * tc[0] - (5308.93582423979) * invT);
  // reaction 540: h + nc7h16 => c7h15-2 + h2
  k_f[217] = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  // reaction 541: c7h15-2 + h2 => h + nc7h16
  k_f[218] = 0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
  // reaction 542: h + nc7h16 => c7h15-3 + h2
  k_f[219] = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  // reaction 543: c7h15-3 + h2 => h + nc7h16
  k_f[220] = 0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
  // reaction 544: h + nc7h16 => c7h15-4 + h2
  k_f[221] = 1.3 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  // reaction 545: c7h15-4 + h2 => h + nc7h16
  k_f[222] = 0.003913 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
  // reaction 546: nc7h16 + o => c7h15-1 + oh
  k_f[223] = 0.193 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
  // reaction 547: c7h15-1 + oh => nc7h16 + o
  k_f[224] = 0.004025 * exp((2.63) * tc[0] - (2965.45581158721) * invT);
  // reaction 548: nc7h16 + o => c7h15-2 + oh
  k_f[225] = 0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  // reaction 549: c7h15-2 + oh => nc7h16 + o
  k_f[226] = 6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
  // reaction 550: nc7h16 + o => c7h15-3 + oh
  k_f[227] = 0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  // reaction 551: c7h15-3 + oh => nc7h16 + o
  k_f[228] = 6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
  // reaction 552: nc7h16 + o => c7h15-4 + oh
  k_f[229] = 0.0477 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  // reaction 553: c7h15-4 + oh => nc7h16 + o
  k_f[230] = 6.306e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
  // reaction 554: nc7h16 + oh => c7h15-1 + h2o
  k_f[231] = 10500 * exp((0.97) * tc[0] - (800.114498629504) * invT);
  // reaction 555: c7h15-1 + h2o => nc7h16 + oh
  k_f[232] = 15000 * exp((1.05) * tc[0] - (11740.0448132241) * invT);
  // reaction 556: nc7h16 + oh => c7h15-2 + h2o
  k_f[233] = 94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
  // reaction 557: c7h15-2 + h2o => nc7h16 + oh
  k_f[234] = 0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
  // reaction 558: nc7h16 + oh => c7h15-3 + h2o
  k_f[235] = 94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
  // reaction 559: c7h15-3 + h2o => nc7h16 + oh
  k_f[236] = 0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
  // reaction 560: nc7h16 + oh => c7h15-4 + h2o
  k_f[237] = 47 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
  // reaction 561: c7h15-4 + h2o => nc7h16 + oh
  k_f[238] = 0.6125 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
  // reaction 562: ho2 + nc7h16 => c7h15-1 + h2o2
  k_f[239] = 16800000 * exp(-(10285.7486490485) * invT);
  // reaction 563: c7h15-1 + h2o2 => ho2 + nc7h16
  k_f[240] = 20500000 * exp((-0.38) * tc[0] - (4226.51677609384) * invT);
  // reaction 564: ho2 + nc7h16 => c7h15-2 + h2o2
  k_f[241] = 11200000 * exp(-(8901.90281808549) * invT);
  // reaction 565: c7h15-2 + h2o2 => ho2 + nc7h16
  k_f[242] = 434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
  // reaction 566: ho2 + nc7h16 => c7h15-3 + h2o2
  k_f[243] = 11200000 * exp(-(8901.90281808549) * invT);
  // reaction 567: c7h15-3 + h2o2 => ho2 + nc7h16
  k_f[244] = 434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
  // reaction 568: ho2 + nc7h16 => c7h15-4 + h2o2
  k_f[245] = 5600000 * exp(-(8901.90281808549) * invT);
  // reaction 569: c7h15-4 + h2o2 => ho2 + nc7h16
  k_f[246] = 433200 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
  // reaction 570: ch3 + nc7h16 => c7h15-1 + ch4
  k_f[247] = 9.04e-07 * exp((3.65) * tc[0] - (3600.01202716696) * invT);
  // reaction 571: c7h15-1 + ch4 => ch3 + nc7h16
  k_f[248] = 1.121e-06 * exp((3.6) * tc[0] - (5993.31048973421) * invT);
  // reaction 572: ch3 + nc7h16 => c7h15-2 + ch4
  k_f[249] = 0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
  // reaction 573: c7h15-2 + ch4 => ch3 + nc7h16
  k_f[250] = 0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
  // reaction 574: ch3 + nc7h16 => c7h15-3 + ch4
  k_f[251] = 0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
  // reaction 575: c7h15-3 + ch4 => ch3 + nc7h16
  k_f[252] = 0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
  // reaction 576: ch3 + nc7h16 => c7h15-4 + ch4
  k_f[253] = 0.02705 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
  // reaction 577: c7h15-4 + ch4 => ch3 + nc7h16
  k_f[254] = 0.002127 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
  // reaction 578: nc7h16 + o2 => c7h15-1 + ho2
  k_f[255] = 60000000 * exp(-(26569.8399544892) * invT);
  // reaction 579: c7h15-1 + ho2 => nc7h16 + o2
  k_f[256] = 51750 * exp((0.28) * tc[0] - (-204.305966316716) * invT);
  // reaction 580: nc7h16 + o2 => c7h15-2 + ho2
  k_f[257] = 40000000 * exp(-(25236.3157901067) * invT);
  // reaction 581: c7h15-2 + ho2 => nc7h16 + o2
  k_f[258] = 1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
  // reaction 582: nc7h16 + o2 => c7h15-3 + ho2
  k_f[259] = 40000000 * exp(-(25236.3157901067) * invT);
  // reaction 583: c7h15-3 + ho2 => nc7h16 + o2
  k_f[260] = 1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
  // reaction 584: nc7h16 + o2 => c7h15-4 + ho2
  k_f[261] = 20000000 * exp(-(25236.3157901067) * invT);
  // reaction 585: c7h15-4 + ho2 => nc7h16 + o2
  k_f[262] = 1094 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
  // reaction 586: c2h5 + nc7h16 => c2h6 + c7h15-1
  k_f[263] = 100000 * exp(-(6743.10332178324) * invT);
  // reaction 587: c2h6 + c7h15-1 => c2h5 + nc7h16
  k_f[264] = 320000 * exp(-(6189.56498939805) * invT);
  // reaction 588: c2h5 + nc7h16 => c2h6 + c7h15-2
  k_f[265] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 589: c2h6 + c7h15-2 => c2h5 + nc7h16
  k_f[266] = 100000 * exp(-(6491.49498888088) * invT);
  // reaction 590: c2h5 + nc7h16 => c2h6 + c7h15-3
  k_f[267] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 591: c2h6 + c7h15-3 => c2h5 + nc7h16
  k_f[268] = 100000 * exp(-(6491.49498888088) * invT);
  // reaction 592: c2h5 + nc7h16 => c2h6 + c7h15-4
  k_f[269] = 50000 * exp(-(5233.45332436908) * invT);
  // reaction 593: c2h6 + c7h15-4 => c2h5 + nc7h16
  k_f[270] = 100000 * exp(-(6491.49498888088) * invT);
  // reaction 594: c2h3 + nc7h16 => c2h4 + c7h15-1
  k_f[271] = 1000000 * exp(-(9057.89998448495) * invT);
  // reaction 595: c2h4 + c7h15-1 => c2h3 + nc7h16
  k_f[272] = 2570000 * exp(-(12781.7033114399) * invT);
  // reaction 596: c2h3 + nc7h16 => c2h4 + c7h15-2
  k_f[273] = 800000 * exp(-(8454.03998551929) * invT);
  // reaction 597: c2h4 + c7h15-2 => c2h3 + nc7h16
  k_f[274] = 2000000 * exp(-(12177.8433124742) * invT);
  // reaction 598: c2h3 + nc7h16 => c2h4 + c7h15-3
  k_f[275] = 800000 * exp(-(8454.03998551929) * invT);
  // reaction 599: c2h4 + c7h15-3 => c2h3 + nc7h16
  k_f[276] = 2000000 * exp(-(12177.8433124742) * invT);
  // reaction 600: c2h3 + nc7h16 => c2h4 + c7h15-4
  k_f[277] = 400000 * exp(-(8454.03998551929) * invT);
  // reaction 601: c2h4 + c7h15-4 => c2h3 + nc7h16
  k_f[278] = 2000000 * exp(-(12177.8433124742) * invT);
  // reaction 602: ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  k_f[279] = 12100000 * exp(-(10280.7164823904) * invT);
  // reaction 603: c7h15-1 + ch3o2h => ch3o2 + nc7h16
  k_f[280] = 3600000 * exp(-(4931.52332488625) * invT);
  // reaction 604: ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  k_f[281] = 8064000 * exp(-(8906.93498474354) * invT);
  // reaction 605: c7h15-2 + ch3o2h => ch3o2 + nc7h16
  k_f[282] = 237600 * exp(-(1861.90166347746) * invT);
  // reaction 606: ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  k_f[283] = 8064000 * exp(-(8906.93498474354) * invT);
  // reaction 607: c7h15-3 + ch3o2h => ch3o2 + nc7h16
  k_f[284] = 237600 * exp(-(1861.90166347746) * invT);
  // reaction 608: ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  k_f[285] = 4032000 * exp(-(8906.93498474354) * invT);
  // reaction 609: c7h15-4 + ch3o2h => ch3o2 + nc7h16
  k_f[286] = 237600 * exp(-(1861.90166347746) * invT);
  // reaction 610: c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  k_f[287] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 611: c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  k_f[288] = 150000 * exp(-(6189.56498939805) * invT);
  // reaction 612: c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  k_f[289] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 613: c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  k_f[290] = 150000 * exp(-(6189.56498939805) * invT);
  // reaction 614: c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  k_f[291] = 50000 * exp(-(5233.45332436908) * invT);
  // reaction 615: c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  k_f[292] = 150000 * exp(-(6189.56498939805) * invT);
  // reaction 616: c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  k_f[293] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 617: c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  k_f[294] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 618: c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  k_f[295] = 50000 * exp(-(5233.45332436908) * invT);
  // reaction 619: c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  k_f[296] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 620: c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  k_f[297] = 50000 * exp(-(5233.45332436908) * invT);
  // reaction 621: c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  k_f[298] = 100000 * exp(-(5233.45332436908) * invT);
  // reaction 622: c7h15-2 => c3h6 + pc4h9
  k_f[299] = 2.218e+16 * exp((-0.89) * tc[0] - (15161.9181406962) * invT);
  // reaction 623: c3h6 + pc4h9 => c7h15-2
  k_f[300] = 100000 * exp(-(4126.3766595987) * invT);
  // reaction 624: c7h15-2 => c7h14-2 + h
  k_f[301] = 2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
  // reaction 625: c7h14-2 + h => c7h15-2
  k_f[302] = 10000000 * exp(-(1459.32833083369) * invT);
  // reaction 626: c7h15-3 => c4h8-1 + nc3h7
  k_f[303] = 9.633e+17 * exp((-1.42) * tc[0] - (15388.3656403083) * invT);
  // reaction 627: c4h8-1 + nc3h7 => c7h15-3
  k_f[304] = 100000 * exp(-(3874.76832669634) * invT);
  // reaction 628: c7h15-3 => c7h14-2 + h
  k_f[305] = 2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
  // reaction 629: c7h14-2 + h => c7h15-3
  k_f[306] = 10000000 * exp(-(1459.32833083369) * invT);
  // reaction 630: c7h15-3 => c7h14-3 + h
  k_f[307] = 2.018e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
  // reaction 631: c7h14-3 + h => c7h15-3
  k_f[308] = 10000000 * exp(-(1459.32833083369) * invT);
  // reaction 632: c7h15-4 => c2h5 + c5h10-1
  k_f[309] = 5.426e+16 * exp((-0.89) * tc[0] - (15393.3978069664) * invT);
  // reaction 633: c2h5 + c5h10-1 => c7h15-4
  k_f[310] = 100000 * exp(-(4126.3766595987) * invT);
  // reaction 634: c7h15-4 => c7h14-3 + h
  k_f[311] = 4.02e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
  // reaction 635: c7h14-3 + h => c7h15-4
  k_f[312] = 10000000 * exp(-(1459.32833083369) * invT);
  // reaction 636: c7h15-2 + o2 => c7h14-2 + ho2
  k_f[313] = 3e-15 * exp(-(1509.64999741416) * invT);
  // reaction 637: c7h14-2 + ho2 => c7h15-2 + o2
  k_f[314] = 3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
  // reaction 638: c7h15-3 + o2 => c7h14-2 + ho2
  k_f[315] = 3e-15 * exp(-(1509.64999741416) * invT);
  // reaction 639: c7h14-2 + ho2 => c7h15-3 + o2
  k_f[316] = 3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
  // reaction 640: c7h15-3 + o2 => c7h14-3 + ho2
  k_f[317] = 3e-15 * exp(-(1509.64999741416) * invT);
  // reaction 641: c7h14-3 + ho2 => c7h15-3 + o2
  k_f[318] = 5.094e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
  // reaction 642: c7h15-4 + o2 => c7h14-3 + ho2
  k_f[319] = 6e-15 * exp(-(1509.64999741416) * invT);
  // reaction 643: c7h14-3 + ho2 => c7h15-4 + o2
  k_f[320] = 5.113e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
  // reaction 644: c7h15-1 => c7h15-3
  k_f[321] = 1386000000 * exp((0.98) * tc[0] - (16988.5946375673) * invT);
  // reaction 645: c7h15-3 => c7h15-1
  k_f[322] = 44100000 * exp((1.38) * tc[0] - (18256.7006353952) * invT);
  // reaction 646: c7h15-1 => c7h15-4
  k_f[323] = 2541000000 * exp((0.35) * tc[0] - (9943.56131630126) * invT);
  // reaction 647: c7h15-4 => c7h15-1
  k_f[324] = 161100000 * exp((0.74) * tc[0] - (11211.6673141292) * invT);
  // reaction 648: c7h15-2 => c7h15-3
  k_f[325] = 958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
  // reaction 649: c7h15-3 => c7h15-2
  k_f[326] = 958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
  // reaction 650: c7h15-1 => c7h15-2
  k_f[327] = 547800000 * exp((1.62) * tc[0] - (19504.6779665909) * invT);
  // reaction 651: c7h15-2 => c7h15-1
  k_f[328] = 17430000 * exp((2.01) * tc[0] - (20772.7839644188) * invT);
  // reaction 652: c7h14-2 + oh => c2h5cho + pc4h9
  k_f[329] = 100000 * exp(-(-2012.86666321888) * invT);
  // reaction 653: c7h14-3 + oh => c2h5cho + pc4h9
  k_f[330] = 100000 * exp(-(-2012.86666321888) * invT);
  // reaction 654: c7h14-2 + o => c5h10-1 + ch3cho
  k_f[331] = 100000 * exp(-(-528.377499094956) * invT);
  // reaction 655: c7h14-3 + o => c5h10-1 + ch3cho
  k_f[332] = 100000 * exp(-(-528.377499094956) * invT);
  // reaction 656: c7h14-2 => c4h7 + nc3h7
  k_f[333] = 1e+16 * exp(-(35728.3832721351) * invT);
  // reaction 657: c4h7 + nc3h7 => c7h14-2
  k_f[334] = 10000000;
  // reaction 658: c7h14-3 => c4h7 + nc3h7
  k_f[335] = 1e+16 * exp(-(35728.3832721351) * invT);
  // reaction 659: c4h7 + nc3h7 => c7h14-3
  k_f[336] = 10000000;
  // reaction 660: c7h15o2-1 => c7h15-1 + o2
  k_f[337] = 2.657e+20 * exp((-1.67) * tc[0] - (17813.8699694871) * invT);
  // reaction 661: c7h15-1 + o2 => c7h15o2-1
  k_f[338] = 4520000;
  // reaction 662: c7h15o2-2 => c7h15-2 + o2
  k_f[339] = 1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
  // reaction 663: c7h15-2 + o2 => c7h15o2-2
  k_f[340] = 7540000;
  // reaction 664: c7h15o2-3 => c7h15-3 + o2
  k_f[341] = 9.879e+21 * exp((-1.97) * tc[0] - (19051.7829673667) * invT);
  // reaction 665: c7h15-3 + o2 => c7h15o2-3
  k_f[342] = 7540000;
  // reaction 666: c7h15o2-4 => c7h15-4 + o2
  k_f[343] = 1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
  // reaction 667: c7h15-4 + o2 => c7h15o2-4
  k_f[344] = 7540000;
  // reaction 668: c7h15o2-1 => c7h14ooh1-3
  k_f[345] = 25000000000 * exp(-(10492.0674820284) * invT);
  // reaction 669: c7h14ooh1-3 => c7h15o2-1
  k_f[346] = 2653000000 * exp((-0.11) * tc[0] - (4146.50532623089) * invT);
  // reaction 670: c7h15o2-2 => c7h14ooh2-3
  k_f[347] = 200000000000 * exp(-(13511.3674768567) * invT);
  // reaction 671: c7h14ooh2-3 => c7h15o2-2
  k_f[348] = 22620000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
  // reaction 672: c7h15o2-2 => c7h14ooh2-4
  k_f[349] = 25000000000 * exp(-(10492.0674820284) * invT);
  // reaction 673: c7h14ooh2-4 => c7h15o2-2
  k_f[350] = 2827000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
  // reaction 674: c7h15o2-3 => c7h14ooh3-2
  k_f[351] = 200000000000 * exp(-(13511.3674768567) * invT);
  // reaction 675: c7h14ooh3-2 => c7h15o2-3
  k_f[352] = 310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
  // reaction 676: c7h15o2-3 => c7h14ooh3-4
  k_f[353] = 200000000000 * exp(-(13511.3674768567) * invT);
  // reaction 677: c7h14ooh3-4 => c7h15o2-3
  k_f[354] = 310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
  // reaction 678: c7h15o2-3 => c7h14ooh3-5
  k_f[355] = 25000000000 * exp(-(10492.0674820284) * invT);
  // reaction 679: c7h14ooh3-5 => c7h15o2-3
  k_f[356] = 38840000000 * exp((-0.51) * tc[0] - (4065.99065970213) * invT);
  // reaction 680: c7h15o2-4 => c7h14ooh4-2
  k_f[357] = 50000000000 * exp(-(10492.0674820284) * invT);
  // reaction 681: c7h14ooh4-2 => c7h15o2-4
  k_f[358] = 5655000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
  // reaction 684: c7h14ooh2-3 => c7h14-2 + ho2
  k_f[359] = 1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
  // reaction 685: c7h14-2 + ho2 => c7h14ooh2-3
  k_f[360] = 100000 * exp(-(5802.08815672842) * invT);
  // reaction 686: c7h14ooh3-2 => c7h14-2 + ho2
  k_f[361] = 1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
  // reaction 687: c7h14-2 + ho2 => c7h14ooh3-2
  k_f[362] = 100000 * exp(-(5802.08815672842) * invT);
  // reaction 688: c7h14ooh3-4 => c7h14-3 + ho2
  k_f[363] = 1.199e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
  // reaction 689: c7h14-3 + ho2 => c7h14ooh3-4
  k_f[364] = 100000 * exp(-(5298.8714909237) * invT);
  // reaction 690: c7h14ooh4-3 => c7h14-3 + ho2
  k_f[365] = 2.389e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
  // reaction 691: c7h14-3 + ho2 => c7h14ooh4-3
  k_f[366] = 100000 * exp(-(5298.8714909237) * invT);
  // reaction 692: c7h14ooh1-3 => c7h14o1-3 + oh
  k_f[367] = 75000000000 * exp(-(7674.05415352198) * invT);
  // reaction 693: c7h14ooh2-4 => c7h14o2-4 + oh
  k_f[368] = 75000000000 * exp(-(7674.05415352198) * invT);
  // reaction 694: c7h14ooh4-2 => c7h14o2-4 + oh
  k_f[369] = 75000000000 * exp(-(7674.05415352198) * invT);
  // reaction 695: c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  k_f[370] = 5.364e+17 * exp((-1.4) * tc[0] - (13461.0458102763) * invT);
  // reaction 696: c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  k_f[371] = 2.47e+18 * exp((-1.55) * tc[0] - (13596.9143100435) * invT);
  // reaction 697: c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  k_f[372] = 1.3e+18 * exp((-1.49) * tc[0] - (13486.2066435665) * invT);
  // reaction 698: c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  k_f[373] = 1.367e+23 * exp((-2.37) * tc[0] - (18941.0753008896) * invT);
  // reaction 699: c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  k_f[374] = 7540000;
  // reaction 700: c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  k_f[375] = 1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
  // reaction 701: c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  k_f[376] = 7540000;
  // reaction 702: c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  k_f[377] = 1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
  // reaction 703: c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  k_f[378] = 7540000;
  // reaction 704: c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  k_f[379] = 6.969e+22 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
  // reaction 705: c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  k_f[380] = 7540000;
  // reaction 706: c7h14ooh1-3o2 => nc7ket13 + oh
  k_f[381] = 25000000000 * exp(-(10768.836648221) * invT);
  // reaction 707: nc7ket13 + oh => c7h14ooh1-3o2
  k_f[382] = 0.003303 * exp((1.41) * tc[0] - (22664.8786278446) * invT);
  // reaction 708: c7h14ooh2-4o2 => nc7ket24 + oh
  k_f[383] = 12500000000 * exp(-(8982.41748461425) * invT);
  // reaction 709: nc7ket24 + oh => c7h14ooh2-4o2
  k_f[384] = 0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
  // reaction 710: c7h14ooh3-5o2 => nc7ket35 + oh
  k_f[385] = 12500000000 * exp(-(8982.41748461425) * invT);
  // reaction 711: nc7ket35 + oh => c7h14ooh3-5o2
  k_f[386] = 0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
  // reaction 712: c7h14ooh4-2o2 => nc7ket42 + oh
  k_f[387] = 12500000000 * exp(-(8982.41748461425) * invT);
  // reaction 713: nc7ket42 + oh => c7h14ooh4-2o2
  k_f[388] = 0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
  // reaction 714: nc7ket13 => ch2cho + nc4h9cho + oh
  k_f[389] = 1.05e+16 * exp(-(20933.8132974763) * invT);
  // reaction 715: nc7ket24 => ch3coch2 + nc3h7cho + oh
  k_f[390] = 1.05e+16 * exp(-(20933.8132974763) * invT);
  // reaction 716: nc7ket35 => c2h5cho + c2h5coch2 + oh
  k_f[391] = 1.05e+16 * exp(-(20933.8132974763) * invT);
  // reaction 717: nc7ket42 => ch3cho + nc3h7coch2 + oh
  k_f[392] = 1.05e+16 * exp(-(20933.8132974763) * invT);
  // reaction 718: c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  k_f[393] = 2500000;
  // reaction 720: c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  k_f[394] = 2500000;
  // reaction 721: c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  k_f[395] = 5000000 * exp(-(8906.93498474354) * invT);
  // reaction 723: c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  k_f[396] = 5000000 * exp(-(8906.93498474354) * invT);

  return;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_sc_qss(amrex::Real* sc_qss, amrex::Real* qf_co, amrex::Real* qr_co)
{
  amrex::Real epsilon = 1e-12;

  // QSSA species 1: ch3o

  amrex::Real ch3o_num = epsilon + 1.0 * qr_co[0] + 1.0 * qf_co[14] +
                         1.0 * qf_co[26] + 1.0 * qf_co[35] + 1.0 * qf_co[106] +
                         2.0 * qf_co[113] + 2.0 * qf_co[115];
  amrex::Real ch3o_denom =
    epsilon - qf_co[0] - qf_co[15] - qf_co[27] - qf_co[34] - qf_co[107];

  sc_qss[1] = -ch3o_num / ch3o_denom;

  // QSSA species 2: ch3co

  amrex::Real ch3co_num =
    epsilon + 1.0 * qr_co[1] + 1.0 * qf_co[47] + 1.0 * qf_co[49] +
    1.0 * qf_co[51] + 1.0 * qf_co[53] + 1.0 * qf_co[55] + 1.0 * qf_co[57] +
    1.0 * qf_co[90] + 1.0 * qf_co[95] + 1.0 * qf_co[97] + 1.0 * qf_co[99] +
    1.0 * qf_co[116] + 1.0 * qf_co[136] + 1.0 * qf_co[138] + 1.0 * qf_co[393] +
    1.0 * qf_co[395];
  amrex::Real ch3co_denom = epsilon - qf_co[1] - qf_co[48] - qf_co[50] -
                            qf_co[52] - qf_co[54] - qf_co[56] - qf_co[58] -
                            qf_co[94] - qf_co[96] - qf_co[98] - qf_co[117] -
                            qf_co[137] - qf_co[139];

  sc_qss[2] = -ch3co_num / ch3co_denom;

  // QSSA species 5: c2h5co

  amrex::Real c2h5co_num =
    epsilon + 1.0 * qf_co[68] + 1.0 * qf_co[69] + 1.0 * qf_co[71] +
    1.0 * qf_co[73] + 1.0 * qf_co[75] + 1.0 * qf_co[77] + 1.0 * qf_co[79] +
    1.0 * qf_co[83] + 1.0 * qf_co[85] + 1.0 * qf_co[87] + 1.0 * qf_co[140] +
    1.0 * qf_co[142] + 1.0 * qf_co[149] + 1.0 * qf_co[151];
  amrex::Real c2h5co_denom = epsilon - qf_co[67] - qf_co[70] - qf_co[72] -
                             qf_co[74] - qf_co[76] - qf_co[78] - qf_co[80] -
                             qf_co[84] - qf_co[86] - qf_co[88] - qf_co[141] -
                             qf_co[143] - qf_co[150] - qf_co[152];

  sc_qss[5] = -c2h5co_num / c2h5co_denom;

  // QSSA species 6: c2h5o

  amrex::Real c2h5o_num = epsilon + 1.0 * qf_co[7] + 1.0 * qf_co[9] +
                          1.0 * qf_co[103] + 1.0 * qf_co[111];
  amrex::Real c2h5o_denom =
    epsilon - qf_co[6] - qf_co[8] - qf_co[102] - qf_co[112];

  sc_qss[6] = -c2h5o_num / c2h5o_denom;

  // QSSA species 7: c3h5o

  amrex::Real c3h5o_num = epsilon + 1.0 * qf_co[119] + 1.0 * qf_co[121] +
                          1.0 * qf_co[123] + 1.0 * qf_co[124];
  amrex::Real c3h5o_denom =
    epsilon - qf_co[118] - qf_co[120] - qf_co[122] - qf_co[125];

  sc_qss[7] = -c3h5o_num / c3h5o_denom;

  // QSSA species 8: c4h7o

  amrex::Real c4h7o_num =
    epsilon + 1.0 * qf_co[130] + 1.0 * qf_co[132] + 1.0 * qf_co[133];
  amrex::Real c4h7o_denom = epsilon - qf_co[129] - qf_co[131] - qf_co[134];

  sc_qss[8] = -c4h7o_num / c4h7o_denom;

  // QSSA species 9: c4h8ooh1-3

  amrex::Real c4h8ooh13_num = epsilon + 1.0 * qf_co[144] + 1.0 * qf_co[147];
  amrex::Real c4h8ooh13_denom = epsilon - qf_co[145] - qf_co[146] - qf_co[148];

  sc_qss[9] = -c4h8ooh13_num / c4h8ooh13_denom;

  // QSSA species 11: ch2(s)

  amrex::Real ch2s_num = epsilon + 1.0 * qf_co[41] + 1.0 * qf_co[127] +
                         1.0 * qf_co[190] + 1.0 * qf_co[192] +
                         1.0 * qf_co[195] + 1.0 * qf_co[198] +
                         1.0 * qf_co[200] + 1.0 * qf_co[202] + 1.0 * qf_co[204];
  amrex::Real ch2s_denom = epsilon - qf_co[42] - qf_co[128] - qf_co[189] -
                           qf_co[191] - qf_co[193] - qf_co[194] - qf_co[196] -
                           qf_co[197] - qf_co[199] - qf_co[201] - qf_co[203];

  sc_qss[11] = -ch2s_num / ch2s_denom;

  // QSSA species 12: nc3h7co

  amrex::Real nc3h7co_num =
    epsilon + 1.0 * qf_co[171] + 1.0 * qf_co[173] + 1.0 * qf_co[175] +
    1.0 * qf_co[177] + 1.0 * qf_co[179] + 1.0 * qf_co[181] + 1.0 * qf_co[183] +
    1.0 * qf_co[186] + 1.0 * qf_co[394] + 1.0 * qf_co[396];
  amrex::Real nc3h7co_denom = epsilon - qf_co[172] - qf_co[174] - qf_co[176] -
                              qf_co[178] - qf_co[180] - qf_co[182] -
                              qf_co[184] - qf_co[185];

  sc_qss[12] = -nc3h7co_num / nc3h7co_denom;

  // QSSA species 19: c7h14ooh1-3

  amrex::Real c7h14ooh13_num = epsilon + 1.0 * qf_co[345] + 1.0 * qf_co[373];
  amrex::Real c7h14ooh13_denom = epsilon - qf_co[346] - qf_co[367] - qf_co[374];

  sc_qss[19] = -c7h14ooh13_num / c7h14ooh13_denom;

  // QSSA species 29: nc7ket13

  amrex::Real nc7ket13_num = epsilon + 1.0 * qf_co[381];
  amrex::Real nc7ket13_denom = epsilon - qf_co[382] - qf_co[389];

  sc_qss[29] = -nc7ket13_num / nc7ket13_denom;

  // QSSA coupling between c3h2  hco
  // QSSA species 10: c3h2

  amrex::Real c3h2_num = epsilon + 1.0 * qf_co[153] + 1.0 * qf_co[157];
  amrex::Real c3h2_denom =
    epsilon - qf_co[108] - qf_co[154] - qf_co[155] - qf_co[158];
  amrex::Real c3h2_rhs = -c3h2_num / c3h2_denom;

  amrex::Real c3h2_hco = (epsilon + 1.0 * qf_co[156]) / c3h2_denom;

  // QSSA species 0: hco

  amrex::Real hco_num =
    epsilon + 1.0 * qf_co[3] + 1.0 * qf_co[4] + 1.0 * qf_co[11] +
    1.0 * qf_co[12] + 1.0 * qf_co[17] + 1.0 * qf_co[19] + 1.0 * qf_co[20] +
    1.0 * qf_co[22] + 1.0 * qf_co[24] + 1.0 * qf_co[28] + 1.0 * qf_co[31] +
    1.0 * qf_co[33] + 1.0 * qf_co[37] + 1.0 * qf_co[38] + 2.0 * qf_co[40] +
    1.0 * qf_co[43] + 1.0 * qf_co[45] + 1.0 * qf_co[59] + 1.0 * qf_co[81] +
    1.0 * qf_co[93] + 1.0 * qf_co[109] + 1.0 * qf_co[159] + 1.0 * qf_co[169];
  amrex::Real hco_denom =
    epsilon - qf_co[2] - qf_co[5] - qf_co[10] - qf_co[13] - qf_co[16] -
    qf_co[18] - qf_co[21] - qf_co[23] - qf_co[25] - qf_co[29] - qf_co[30] -
    qf_co[32] - qf_co[36] - qf_co[39] - qf_co[44] - qf_co[46] - qf_co[60] -
    qf_co[82] - qf_co[92] - qf_co[110] - qf_co[156] - qf_co[160] - qf_co[170];
  amrex::Real hco_rhs = -hco_num / hco_denom;

  amrex::Real hco_c3h2 = (epsilon + 1.0 * qf_co[155]) / hco_denom;

  // Putting it all together
  amrex::Real H_0 = hco_c3h2;
  sc_qss[0] = (hco_rhs - c3h2_rhs * H_0) / (1 - c3h2_hco * H_0);

  sc_qss[10] = c3h2_rhs - (c3h2_hco * sc_qss[0]);

  // QSSA coupling between c7h14ooh3-2  c7h14ooh2-3  c7h14-2  c7h14ooh3-4
  // c7h14-3  c7h15-4  c7h15-3  c7h15-1  c7h15-2  pc4h9 QSSA species 22:
  // c7h14ooh3-2

  amrex::Real c7h14ooh32_num = epsilon + 1.0 * qf_co[351];
  amrex::Real c7h14ooh32_denom = epsilon - qf_co[352] - qf_co[361];
  amrex::Real c7h14ooh32_rhs = -c7h14ooh32_num / c7h14ooh32_denom;

  amrex::Real c7h14ooh32_c7h142 =
    (epsilon + 1.0 * qf_co[362]) / c7h14ooh32_denom;

  // QSSA species 20: c7h14ooh2-3

  amrex::Real c7h14ooh23_num = epsilon + 1.0 * qf_co[347];
  amrex::Real c7h14ooh23_denom = epsilon - qf_co[348] - qf_co[359];
  amrex::Real c7h14ooh23_rhs = -c7h14ooh23_num / c7h14ooh23_denom;

  amrex::Real c7h14ooh23_c7h142 =
    (epsilon + 1.0 * qf_co[360]) / c7h14ooh23_denom;

  // QSSA species 17: c7h14-2

  amrex::Real c7h142_num = epsilon + 1.0 * qf_co[334];
  amrex::Real c7h142_denom = epsilon - qf_co[302] - qf_co[306] - qf_co[314] -
                             qf_co[316] - qf_co[329] - qf_co[331] - qf_co[333] -
                             qf_co[360] - qf_co[362];
  amrex::Real c7h142_rhs = -c7h142_num / c7h142_denom;

  amrex::Real c7h142_c7h14ooh32 = (epsilon + 1.0 * qf_co[361]) / c7h142_denom;
  amrex::Real c7h142_c7h14ooh23 = (epsilon + 1.0 * qf_co[359]) / c7h142_denom;
  amrex::Real c7h142_c7h153 =
    (epsilon + 1.0 * qf_co[305] + 1.0 * qf_co[315]) / c7h142_denom;
  amrex::Real c7h142_c7h152 =
    (epsilon + 1.0 * qf_co[301] + 1.0 * qf_co[313]) / c7h142_denom;

  // QSSA species 23: c7h14ooh3-4

  amrex::Real c7h14ooh34_num = epsilon + 1.0 * qf_co[353];
  amrex::Real c7h14ooh34_denom = epsilon - qf_co[354] - qf_co[363];
  amrex::Real c7h14ooh34_rhs = -c7h14ooh34_num / c7h14ooh34_denom;

  amrex::Real c7h14ooh34_c7h143 =
    (epsilon + 1.0 * qf_co[364]) / c7h14ooh34_denom;

  // QSSA species 18: c7h14-3

  amrex::Real c7h143_num = epsilon + 1.0 * qf_co[336] + 1.0 * qf_co[365];
  amrex::Real c7h143_denom = epsilon - qf_co[308] - qf_co[312] - qf_co[318] -
                             qf_co[320] - qf_co[330] - qf_co[332] - qf_co[335] -
                             qf_co[364] - qf_co[366];
  amrex::Real c7h143_rhs = -c7h143_num / c7h143_denom;

  amrex::Real c7h143_c7h14ooh34 = (epsilon + 1.0 * qf_co[363]) / c7h143_denom;
  amrex::Real c7h143_c7h154 =
    (epsilon + 1.0 * qf_co[311] + 1.0 * qf_co[319]) / c7h143_denom;
  amrex::Real c7h143_c7h153 =
    (epsilon + 1.0 * qf_co[307] + 1.0 * qf_co[317]) / c7h143_denom;

  // QSSA species 16: c7h15-4

  amrex::Real c7h154_num =
    epsilon + 1.0 * qf_co[211] + 1.0 * qf_co[221] + 1.0 * qf_co[229] +
    1.0 * qf_co[237] + 1.0 * qf_co[245] + 1.0 * qf_co[253] + 1.0 * qf_co[261] +
    1.0 * qf_co[269] + 1.0 * qf_co[277] + 1.0 * qf_co[285] + 1.0 * qf_co[310] +
    1.0 * qf_co[343];
  amrex::Real c7h154_denom = epsilon - qf_co[212] - qf_co[222] - qf_co[230] -
                             qf_co[238] - qf_co[246] - qf_co[254] - qf_co[262] -
                             qf_co[270] - qf_co[278] - qf_co[286] - qf_co[292] -
                             qf_co[296] - qf_co[298] - qf_co[309] - qf_co[311] -
                             qf_co[319] - qf_co[324] - qf_co[344];
  amrex::Real c7h154_rhs = -c7h154_num / c7h154_denom;

  amrex::Real c7h154_c7h143 =
    (epsilon + 1.0 * qf_co[312] + 1.0 * qf_co[320]) / c7h154_denom;
  amrex::Real c7h154_c7h153 = (epsilon + 1.0 * qf_co[297]) / c7h154_denom;
  amrex::Real c7h154_c7h151 =
    (epsilon + 1.0 * qf_co[291] + 1.0 * qf_co[323]) / c7h154_denom;
  amrex::Real c7h154_c7h152 = (epsilon + 1.0 * qf_co[295]) / c7h154_denom;

  // QSSA species 15: c7h15-3

  amrex::Real c7h153_num =
    epsilon + 1.0 * qf_co[209] + 1.0 * qf_co[219] + 1.0 * qf_co[227] +
    1.0 * qf_co[235] + 1.0 * qf_co[243] + 1.0 * qf_co[251] + 1.0 * qf_co[259] +
    1.0 * qf_co[267] + 1.0 * qf_co[275] + 1.0 * qf_co[283] + 1.0 * qf_co[304] +
    1.0 * qf_co[341];
  amrex::Real c7h153_denom =
    epsilon - qf_co[210] - qf_co[220] - qf_co[228] - qf_co[236] - qf_co[244] -
    qf_co[252] - qf_co[260] - qf_co[268] - qf_co[276] - qf_co[284] -
    qf_co[290] - qf_co[294] - qf_co[297] - qf_co[303] - qf_co[305] -
    qf_co[307] - qf_co[315] - qf_co[317] - qf_co[322] - qf_co[326] - qf_co[342];
  amrex::Real c7h153_rhs = -c7h153_num / c7h153_denom;

  amrex::Real c7h153_c7h142 =
    (epsilon + 1.0 * qf_co[306] + 1.0 * qf_co[316]) / c7h153_denom;
  amrex::Real c7h153_c7h143 =
    (epsilon + 1.0 * qf_co[308] + 1.0 * qf_co[318]) / c7h153_denom;
  amrex::Real c7h153_c7h154 = (epsilon + 1.0 * qf_co[298]) / c7h153_denom;
  amrex::Real c7h153_c7h151 =
    (epsilon + 1.0 * qf_co[289] + 1.0 * qf_co[321]) / c7h153_denom;
  amrex::Real c7h153_c7h152 =
    (epsilon + 1.0 * qf_co[293] + 1.0 * qf_co[325]) / c7h153_denom;

  // QSSA species 13: c7h15-1

  amrex::Real c7h151_num =
    epsilon + 1.0 * qf_co[205] + 1.0 * qf_co[215] + 1.0 * qf_co[223] +
    1.0 * qf_co[231] + 1.0 * qf_co[239] + 1.0 * qf_co[247] + 1.0 * qf_co[255] +
    1.0 * qf_co[263] + 1.0 * qf_co[271] + 1.0 * qf_co[279] + 1.0 * qf_co[337];
  amrex::Real c7h151_denom = epsilon - qf_co[206] - qf_co[216] - qf_co[224] -
                             qf_co[232] - qf_co[240] - qf_co[248] - qf_co[256] -
                             qf_co[264] - qf_co[272] - qf_co[280] - qf_co[287] -
                             qf_co[289] - qf_co[291] - qf_co[321] - qf_co[323] -
                             qf_co[327] - qf_co[338];
  amrex::Real c7h151_rhs = -c7h151_num / c7h151_denom;

  amrex::Real c7h151_c7h154 =
    (epsilon + 1.0 * qf_co[292] + 1.0 * qf_co[324]) / c7h151_denom;
  amrex::Real c7h151_c7h153 =
    (epsilon + 1.0 * qf_co[290] + 1.0 * qf_co[322]) / c7h151_denom;
  amrex::Real c7h151_c7h152 =
    (epsilon + 1.0 * qf_co[288] + 1.0 * qf_co[328]) / c7h151_denom;

  // QSSA species 14: c7h15-2

  amrex::Real c7h152_num =
    epsilon + 1.0 * qf_co[207] + 1.0 * qf_co[217] + 1.0 * qf_co[225] +
    1.0 * qf_co[233] + 1.0 * qf_co[241] + 1.0 * qf_co[249] + 1.0 * qf_co[257] +
    1.0 * qf_co[265] + 1.0 * qf_co[273] + 1.0 * qf_co[281] + 1.0 * qf_co[339];
  amrex::Real c7h152_denom = epsilon - qf_co[208] - qf_co[218] - qf_co[226] -
                             qf_co[234] - qf_co[242] - qf_co[250] - qf_co[258] -
                             qf_co[266] - qf_co[274] - qf_co[282] - qf_co[288] -
                             qf_co[293] - qf_co[295] - qf_co[299] - qf_co[301] -
                             qf_co[313] - qf_co[325] - qf_co[328] - qf_co[340];
  amrex::Real c7h152_rhs = -c7h152_num / c7h152_denom;

  amrex::Real c7h152_c7h142 =
    (epsilon + 1.0 * qf_co[302] + 1.0 * qf_co[314]) / c7h152_denom;
  amrex::Real c7h152_c7h154 = (epsilon + 1.0 * qf_co[296]) / c7h152_denom;
  amrex::Real c7h152_c7h153 =
    (epsilon + 1.0 * qf_co[294] + 1.0 * qf_co[326]) / c7h152_denom;
  amrex::Real c7h152_c7h151 =
    (epsilon + 1.0 * qf_co[287] + 1.0 * qf_co[327]) / c7h152_denom;
  amrex::Real c7h152_pc4h9 = (epsilon + 1.0 * qf_co[300]) / c7h152_denom;

  // QSSA species 4: pc4h9

  amrex::Real pc4h9_num = epsilon + 1.0 * qf_co[62] + 1.0 * qf_co[64] +
                          1.0 * qf_co[66] + 1.0 * qf_co[91] + 1.0 * qf_co[161] +
                          1.0 * qf_co[187] + 1.0 * qf_co[213];
  amrex::Real pc4h9_denom = epsilon - qf_co[61] - qf_co[63] - qf_co[65] -
                            qf_co[162] - qf_co[188] - qf_co[214] - qf_co[300];
  amrex::Real pc4h9_rhs = -pc4h9_num / pc4h9_denom;

  amrex::Real pc4h9_c7h142 = (epsilon + 1.0 * qf_co[329]) / pc4h9_denom;
  amrex::Real pc4h9_c7h143 = (epsilon + 1.0 * qf_co[330]) / pc4h9_denom;
  amrex::Real pc4h9_c7h152 = (epsilon + 1.0 * qf_co[299]) / pc4h9_denom;

  // Putting it all together
  H_0 = c7h142_c7h14ooh32;
  amrex::Real H_1 = c7h142_c7h14ooh23;
  amrex::Real H_2 =
    c7h153_c7h142 / ((1 - c7h14ooh32_c7h142 * H_0) - c7h14ooh23_c7h142 * H_1);
  amrex::Real H_3 =
    c7h152_c7h142 / ((1 - c7h14ooh32_c7h142 * H_0) - c7h14ooh23_c7h142 * H_1);
  amrex::Real H_4 =
    pc4h9_c7h142 / ((1 - c7h14ooh32_c7h142 * H_0) - c7h14ooh23_c7h142 * H_1);
  amrex::Real H_5 = c7h143_c7h14ooh34;
  amrex::Real H_6 = c7h154_c7h143 / (1 - c7h14ooh34_c7h143 * H_5);
  amrex::Real H_7 = c7h153_c7h143 / (1 - c7h14ooh34_c7h143 * H_5);
  amrex::Real H_8 = pc4h9_c7h143 / (1 - c7h14ooh34_c7h143 * H_5);
  amrex::Real H_9 =
    (c7h153_c7h154 - c7h143_c7h154 * H_7) / (1 - c7h143_c7h154 * H_6);
  amrex::Real H_10 = c7h151_c7h154 / (1 - c7h143_c7h154 * H_6);
  amrex::Real H_11 = c7h152_c7h154 / (1 - c7h143_c7h154 * H_6);
  amrex::Real H_12 =
    (c7h151_c7h153 - (c7h154_c7h153 - c7h143_c7h153 * H_6) * H_10) /
    (((1 - c7h142_c7h153 * H_2) - c7h143_c7h153 * H_7) -
     (c7h154_c7h153 - c7h143_c7h153 * H_6) * H_9);
  amrex::Real H_13 = ((c7h152_c7h153 - c7h142_c7h153 * H_3) -
                      (c7h154_c7h153 - c7h143_c7h153 * H_6) * H_11) /
                     (((1 - c7h142_c7h153 * H_2) - c7h143_c7h153 * H_7) -
                      (c7h154_c7h153 - c7h143_c7h153 * H_6) * H_9);
  amrex::Real H_14 =
    ((c7h152_c7h151 - c7h154_c7h151 * H_11) -
     (c7h153_c7h151 - c7h154_c7h151 * H_9) * H_13) /
    ((1 - c7h154_c7h151 * H_10) - (c7h153_c7h151 - c7h154_c7h151 * H_9) * H_12);
  amrex::Real H_15 =
    (pc4h9_c7h152 - c7h142_c7h152 * H_4) /
    ((((1 - c7h142_c7h152 * H_3) - c7h154_c7h152 * H_11) -
      ((c7h153_c7h152 - c7h142_c7h152 * H_2) - c7h154_c7h152 * H_9) * H_13) -
     ((c7h151_c7h152 - c7h154_c7h152 * H_10) -
      ((c7h153_c7h152 - c7h142_c7h152 * H_2) - c7h154_c7h152 * H_9) * H_12) *
       H_14);
  sc_qss[4] =
    (((pc4h9_rhs -
       ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_4) -
      (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_8) -
     ((((c7h152_rhs -
         ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_3) -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_11) -
       (((c7h153_rhs -
          ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_2) -
         (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_7) -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_9) *
         H_13) -
      ((c7h151_rhs -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_10) -
       (((c7h153_rhs -
          ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_2) -
         (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_7) -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_9) *
         H_12) *
        H_14) *
       H_15) /
    (1 - c7h152_pc4h9 * H_15);

  sc_qss[14] =
    (((((c7h152_rhs -
         ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_3) -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_11) -
       (((c7h153_rhs -
          ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_2) -
         (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_7) -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_9) *
         H_13) -
      ((c7h151_rhs -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_10) -
       (((c7h153_rhs -
          ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_2) -
         (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_7) -
        (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_9) *
         H_12) *
        H_14) -
     (c7h152_pc4h9 * sc_qss[4])) /
    ((((1 - c7h142_c7h152 * H_3) - c7h154_c7h152 * H_11) -
      ((c7h153_c7h152 - c7h142_c7h152 * H_2) - c7h154_c7h152 * H_9) * H_13) -
     ((c7h151_c7h152 - c7h154_c7h152 * H_10) -
      ((c7h153_c7h152 - c7h142_c7h152 * H_2) - c7h154_c7h152 * H_9) * H_12) *
       H_14);

  sc_qss[13] =
    (((c7h151_rhs -
       (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_10) -
      (((c7h153_rhs -
         ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_2) -
        (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_7) -
       (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_9) *
        H_12) -
     (+((c7h151_c7h152 - c7h154_c7h152 * H_10) -
        ((c7h153_c7h152 - c7h142_c7h152 * H_2) - c7h154_c7h152 * H_9) * H_12) *
      sc_qss[14])) /
    ((1 - c7h154_c7h151 * H_10) - (c7h153_c7h151 - c7h154_c7h151 * H_9) * H_12);

  sc_qss[15] =
    ((((c7h153_rhs -
        ((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) * H_2) -
       (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_7) -
      (c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) * H_9) -
     (+((c7h153_c7h152 - c7h142_c7h152 * H_2) - c7h154_c7h152 * H_9) *
        sc_qss[14] +
      (c7h153_c7h151 - c7h154_c7h151 * H_9) * sc_qss[13])) /
    (((1 - c7h142_c7h153 * H_2) - c7h143_c7h153 * H_7) -
     (c7h154_c7h153 - c7h143_c7h153 * H_6) * H_9);

  sc_qss[16] = ((c7h154_rhs - (c7h143_rhs - c7h14ooh34_rhs * H_5) * H_6) -
                (+c7h154_c7h152 * sc_qss[14] + c7h154_c7h151 * sc_qss[13] +
                 (c7h154_c7h153 - c7h143_c7h153 * H_6) * sc_qss[15])) /
               (1 - c7h143_c7h154 * H_6);

  sc_qss[18] = ((c7h143_rhs - c7h14ooh34_rhs * H_5) -
                (+c7h143_c7h153 * sc_qss[15] + c7h143_c7h154 * sc_qss[16])) /
               (1 - c7h14ooh34_c7h143 * H_5);

  sc_qss[23] = c7h14ooh34_rhs - (+c7h14ooh34_c7h143 * sc_qss[18]);

  sc_qss[17] = (((c7h142_rhs - c7h14ooh32_rhs * H_0) - c7h14ooh23_rhs * H_1) -
                (+c7h142_c7h152 * sc_qss[14] + c7h142_c7h153 * sc_qss[15])) /
               ((1 - c7h14ooh32_c7h142 * H_0) - c7h14ooh23_c7h142 * H_1);

  sc_qss[20] = c7h14ooh23_rhs - (+c7h14ooh23_c7h142 * sc_qss[17]);

  sc_qss[22] = c7h14ooh32_rhs - (+c7h14ooh32_c7h142 * sc_qss[17]);

  // QSSA coupling between nc7ket24  c7h14ooh2-4o2  c7h14ooh2-4
  // QSSA species 30: nc7ket24

  amrex::Real nc7ket24_num = epsilon;
  amrex::Real nc7ket24_denom = epsilon - qf_co[384] - qf_co[390];
  amrex::Real nc7ket24_rhs = -nc7ket24_num / nc7ket24_denom;

  amrex::Real nc7ket24_c7h14ooh24o2 =
    (epsilon + 1.0 * qf_co[383]) / nc7ket24_denom;

  // QSSA species 26: c7h14ooh2-4o2

  amrex::Real c7h14ooh24o2_num = epsilon;
  amrex::Real c7h14ooh24o2_denom = epsilon - qf_co[375] - qf_co[383];
  amrex::Real c7h14ooh24o2_rhs = -c7h14ooh24o2_num / c7h14ooh24o2_denom;

  amrex::Real c7h14ooh24o2_nc7ket24 =
    (epsilon + 1.0 * qf_co[384]) / c7h14ooh24o2_denom;
  amrex::Real c7h14ooh24o2_c7h14ooh24 =
    (epsilon + 1.0 * qf_co[376]) / c7h14ooh24o2_denom;

  // QSSA species 21: c7h14ooh2-4

  amrex::Real c7h14ooh24_num = epsilon + 1.0 * qf_co[349];
  amrex::Real c7h14ooh24_denom =
    epsilon - qf_co[350] - qf_co[368] - qf_co[370] - qf_co[376];
  amrex::Real c7h14ooh24_rhs = -c7h14ooh24_num / c7h14ooh24_denom;

  amrex::Real c7h14ooh24_c7h14ooh24o2 =
    (epsilon + 1.0 * qf_co[375]) / c7h14ooh24_denom;

  // Putting it all together
  H_0 = c7h14ooh24o2_nc7ket24;
  H_1 = c7h14ooh24_c7h14ooh24o2 / (1 - nc7ket24_c7h14ooh24o2 * H_0);
  sc_qss[21] =
    (c7h14ooh24_rhs - (c7h14ooh24o2_rhs - nc7ket24_rhs * H_0) * H_1) /
    (1 - c7h14ooh24o2_c7h14ooh24 * H_1);

  sc_qss[26] = ((c7h14ooh24o2_rhs - nc7ket24_rhs * H_0) -
                (c7h14ooh24o2_c7h14ooh24 * sc_qss[21])) /
               (1 - nc7ket24_c7h14ooh24o2 * H_0);

  sc_qss[30] = nc7ket24_rhs - (+nc7ket24_c7h14ooh24o2 * sc_qss[26]);

  // QSSA coupling between nc7ket35  c7h14ooh3-5o2  c7h14ooh3-5
  // QSSA species 31: nc7ket35

  amrex::Real nc7ket35_num = epsilon;
  amrex::Real nc7ket35_denom = epsilon - qf_co[386] - qf_co[391];
  amrex::Real nc7ket35_rhs = -nc7ket35_num / nc7ket35_denom;

  amrex::Real nc7ket35_c7h14ooh35o2 =
    (epsilon + 1.0 * qf_co[385]) / nc7ket35_denom;

  // QSSA species 27: c7h14ooh3-5o2

  amrex::Real c7h14ooh35o2_num = epsilon;
  amrex::Real c7h14ooh35o2_denom = epsilon - qf_co[377] - qf_co[385];
  amrex::Real c7h14ooh35o2_rhs = -c7h14ooh35o2_num / c7h14ooh35o2_denom;

  amrex::Real c7h14ooh35o2_nc7ket35 =
    (epsilon + 1.0 * qf_co[386]) / c7h14ooh35o2_denom;
  amrex::Real c7h14ooh35o2_c7h14ooh35 =
    (epsilon + 1.0 * qf_co[378]) / c7h14ooh35o2_denom;

  // QSSA species 24: c7h14ooh3-5

  amrex::Real c7h14ooh35_num = epsilon + 1.0 * qf_co[355];
  amrex::Real c7h14ooh35_denom = epsilon - qf_co[356] - qf_co[371] - qf_co[378];
  amrex::Real c7h14ooh35_rhs = -c7h14ooh35_num / c7h14ooh35_denom;

  amrex::Real c7h14ooh35_c7h14ooh35o2 =
    (epsilon + 1.0 * qf_co[377]) / c7h14ooh35_denom;

  // Putting it all together
  H_0 = c7h14ooh35o2_nc7ket35;
  H_1 = c7h14ooh35_c7h14ooh35o2 / (1 - nc7ket35_c7h14ooh35o2 * H_0);
  sc_qss[24] =
    (c7h14ooh35_rhs - (c7h14ooh35o2_rhs - nc7ket35_rhs * H_0) * H_1) /
    (1 - c7h14ooh35o2_c7h14ooh35 * H_1);

  sc_qss[27] = ((c7h14ooh35o2_rhs - nc7ket35_rhs * H_0) -
                (c7h14ooh35o2_c7h14ooh35 * sc_qss[24])) /
               (1 - nc7ket35_c7h14ooh35o2 * H_0);

  sc_qss[31] = nc7ket35_rhs - (+nc7ket35_c7h14ooh35o2 * sc_qss[27]);

  // QSSA coupling between nc7ket42  c7h14ooh4-2o2  c7h14ooh4-2
  // QSSA species 32: nc7ket42

  amrex::Real nc7ket42_num = epsilon;
  amrex::Real nc7ket42_denom = epsilon - qf_co[388] - qf_co[392];
  amrex::Real nc7ket42_rhs = -nc7ket42_num / nc7ket42_denom;

  amrex::Real nc7ket42_c7h14ooh42o2 =
    (epsilon + 1.0 * qf_co[387]) / nc7ket42_denom;

  // QSSA species 28: c7h14ooh4-2o2

  amrex::Real c7h14ooh42o2_num = epsilon;
  amrex::Real c7h14ooh42o2_denom = epsilon - qf_co[379] - qf_co[387];
  amrex::Real c7h14ooh42o2_rhs = -c7h14ooh42o2_num / c7h14ooh42o2_denom;

  amrex::Real c7h14ooh42o2_nc7ket42 =
    (epsilon + 1.0 * qf_co[388]) / c7h14ooh42o2_denom;
  amrex::Real c7h14ooh42o2_c7h14ooh42 =
    (epsilon + 1.0 * qf_co[380]) / c7h14ooh42o2_denom;

  // QSSA species 25: c7h14ooh4-2

  amrex::Real c7h14ooh42_num = epsilon + 1.0 * qf_co[357];
  amrex::Real c7h14ooh42_denom =
    epsilon - qf_co[358] - qf_co[369] - qf_co[372] - qf_co[380];
  amrex::Real c7h14ooh42_rhs = -c7h14ooh42_num / c7h14ooh42_denom;

  amrex::Real c7h14ooh42_c7h14ooh42o2 =
    (epsilon + 1.0 * qf_co[379]) / c7h14ooh42_denom;

  // Putting it all together
  H_0 = c7h14ooh42o2_nc7ket42;
  H_1 = c7h14ooh42_c7h14ooh42o2 / (1 - nc7ket42_c7h14ooh42o2 * H_0);
  sc_qss[25] =
    (c7h14ooh42_rhs - (c7h14ooh42o2_rhs - nc7ket42_rhs * H_0) * H_1) /
    (1 - c7h14ooh42o2_c7h14ooh42 * H_1);

  sc_qss[28] = ((c7h14ooh42o2_rhs - nc7ket42_rhs * H_0) -
                (c7h14ooh42o2_c7h14ooh42 * sc_qss[25])) /
               (1 - nc7ket42_c7h14ooh42o2 * H_0);

  sc_qss[32] = nc7ket42_rhs - (+nc7ket42_c7h14ooh42o2 * sc_qss[28]);

  // QSSA species 3: ch2cho

  amrex::Real ch2cho_num = epsilon + 1.0 * qf_co[100] + 1.0 * qf_co[104] +
                           1.0 * qf_co[164] + 1.0 * qf_co[166] +
                           1.0 * qf_co[167];
  amrex::Real ch2cho_denom =
    epsilon - qf_co[101] - qf_co[105] - qf_co[163] - qf_co[165] - qf_co[168];

  sc_qss[3] = -ch2cho_num / ch2cho_denom;

  return;
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* sc_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 0: ch3 + h (+M) <=> ch4 (+M)
  qf[0] = sc[0] * sc[8];
  qr[0] = sc[9];

  // reaction 1: c2h4 + h (+M) <=> c2h5 (+M)
  qf[1] = sc[0] * sc[14];
  qr[1] = sc[15];

  // reaction 2: 2 ch3 (+M) <=> c2h6 (+M)
  qf[2] = (sc[8] * sc[8]);
  qr[2] = sc[13];

  // reaction 3: h + o2 (+M) <=> ho2 (+M)
  qf[3] = sc[0] * sc[3];
  qr[3] = sc[10];

  // reaction 4: 2 oh (+M) <=> h2o2 (+M)
  qf[4] = (sc[4] * sc[4]);
  qr[4] = sc[11];

  // reaction 5: c2h3 + h (+M) <=> c2h4 (+M)
  qf[5] = sc[0] * sc[17];
  qr[5] = sc[14];

  // reaction 6: c2h2 + h (+M) <=> c2h3 (+M)
  qf[6] = sc[0] * sc[16];
  qr[6] = sc[17];

  // reaction 7: co + o (+M) <=> co2 (+M)
  qf[7] = sc[2] * sc[6];
  qr[7] = sc[7];

  // reaction 8: ch3o (+M) <=> ch2o + h (+M)
  qf[8] = sc_qss[1];
  qr[8] = sc[0] * sc[12];

  // reaction 9: c2h4 (+M) <=> c2h2 + h2 (+M)
  qf[9] = sc[14];
  qr[9] = sc[1] * sc[16];

  // reaction 10: ch3co (+M) <=> ch3 + co (+M)
  qf[10] = sc_qss[2];
  qr[10] = sc[6] * sc[8];

  // reaction 11: hco + M => co + h + M
  qf[11] = sc_qss[0];
  qr[11] = 0.0;

  // reaction 12: co + h + M => hco + M
  qf[12] = sc[0] * sc[6];
  qr[12] = 0.0;

  // reaction 13: h2o + M => h + oh + M
  qf[13] = sc[5];
  qr[13] = 0.0;

  // reaction 14: h + oh + M => h2o + M
  qf[14] = sc[0] * sc[4];
  qr[14] = 0.0;

  // reaction 15: ch2o + M => h + hco + M
  qf[15] = sc[12];
  qr[15] = 0.0;

  // reaction 16: h + hco + M => ch2o + M
  qf[16] = sc[0] * sc_qss[0];
  qr[16] = 0.0;

  // reaction 17: oh + M => h + o + M
  qf[17] = sc[4];
  qr[17] = 0.0;

  // reaction 18: h + o + M => oh + M
  qf[18] = sc[0] * sc[2];
  qr[18] = 0.0;

  // reaction 19: o2 + M => 2 o + M
  qf[19] = sc[3];
  qr[19] = 0.0;

  // reaction 20: 2 o + M => o2 + M
  qf[20] = (sc[2] * sc[2]);
  qr[20] = 0.0;

  // reaction 21: h2 + M => 2 h + M
  qf[21] = sc[1];
  qr[21] = 0.0;

  // reaction 22: 2 h + M => h2 + M
  qf[22] = (sc[0] * sc[0]);
  qr[22] = 0.0;

  // reaction 23: ch2o + M => co + h2 + M
  qf[23] = sc[12];
  qr[23] = 0.0;

  // reaction 24: co + h2 + M => ch2o + M
  qf[24] = sc[1] * sc[6];
  qr[24] = 0.0;

  // reaction 25: c2h5o + M => ch2o + ch3 + M
  qf[25] = sc_qss[6];
  qr[25] = 0.0;

  // reaction 26: ch2o + ch3 + M => c2h5o + M
  qf[26] = sc[8] * sc[12];
  qr[26] = 0.0;

  // reaction 27: ch3o2 + M => ch3 + o2 + M
  qf[27] = sc[31];
  qr[27] = 0.0;

  // reaction 28: ch3 + o2 + M => ch3o2 + M
  qf[28] = sc[3] * sc[8];
  qr[28] = 0.0;

  // reaction 29: c2h5o + M => ch3cho + h + M
  qf[29] = sc_qss[6];
  qr[29] = 0.0;

  // reaction 30: ch3cho + h + M => c2h5o + M
  qf[30] = sc[0] * sc[20];
  qr[30] = 0.0;

  // reaction 31: c3h4-a + M => c3h3 + h + M
  qf[31] = sc[21];
  qr[31] = 0.0;

  // reaction 32: c3h3 + h + M => c3h4-a + M
  qf[32] = sc[0] * sc[38];
  qr[32] = 0.0;

  // reaction 33: ch4 + h => ch3 + h2
  qf[33] = sc[0] * sc[9];
  qr[33] = 0.0;

  // reaction 34: ch3 + h2 => ch4 + h
  qf[34] = sc[1] * sc[8];
  qr[34] = 0.0;

  // reaction 35: ch4 + oh => ch3 + h2o
  qf[35] = sc[4] * sc[9];
  qr[35] = 0.0;

  // reaction 36: ch3 + h2o => ch4 + oh
  qf[36] = sc[5] * sc[8];
  qr[36] = 0.0;

  // reaction 37: ch4 + o => ch3 + oh
  qf[37] = sc[2] * sc[9];
  qr[37] = 0.0;

  // reaction 38: ch3 + oh => ch4 + o
  qf[38] = sc[4] * sc[8];
  qr[38] = 0.0;

  // reaction 39: c2h6 + ch3 => c2h5 + ch4
  qf[39] = sc[8] * sc[13];
  qr[39] = 0.0;

  // reaction 40: c2h5 + ch4 => c2h6 + ch3
  qf[40] = sc[9] * sc[15];
  qr[40] = 0.0;

  // reaction 41: hco + oh => co + h2o
  qf[41] = sc[4] * sc_qss[0];
  qr[41] = 0.0;

  // reaction 42: co + h2o => hco + oh
  qf[42] = sc[5] * sc[6];
  qr[42] = 0.0;

  // reaction 43: co + oh => co2 + h
  qf[43] = sc[4] * sc[6];
  qr[43] = 0.0;

  // reaction 44: co2 + h => co + oh
  qf[44] = sc[0] * sc[7];
  qr[44] = 0.0;

  // reaction 45: h + o2 => o + oh
  qf[45] = sc[0] * sc[3];
  qr[45] = 0.0;

  // reaction 46: o + oh => h + o2
  qf[46] = sc[2] * sc[4];
  qr[46] = 0.0;

  // reaction 47: h2 + o => h + oh
  qf[47] = sc[1] * sc[2];
  qr[47] = 0.0;

  // reaction 48: h + oh => h2 + o
  qf[48] = sc[0] * sc[4];
  qr[48] = 0.0;

  // reaction 49: h2o + o => 2 oh
  qf[49] = sc[2] * sc[5];
  qr[49] = 0.0;

  // reaction 50: 2 oh => h2o + o
  qf[50] = (sc[4] * sc[4]);
  qr[50] = 0.0;

  // reaction 51: h2 + oh => h + h2o
  qf[51] = sc[1] * sc[4];
  qr[51] = 0.0;

  // reaction 52: h + h2o => h2 + oh
  qf[52] = sc[0] * sc[5];
  qr[52] = 0.0;

  // reaction 53: h2o2 + oh => h2o + ho2
  qf[53] = sc[4] * sc[11];
  qr[53] = 0.0;

  // reaction 54: h2o + ho2 => h2o2 + oh
  qf[54] = sc[5] * sc[10];
  qr[54] = 0.0;

  // reaction 55: c2h4 + o => ch3 + hco
  qf[55] = sc[2] * sc[14];
  qr[55] = 0.0;

  // reaction 56: ch3 + hco => c2h4 + o
  qf[56] = sc[8] * sc_qss[0];
  qr[56] = 0.0;

  // reaction 57: c2h6 + h => c2h5 + h2
  qf[57] = sc[0] * sc[13];
  qr[57] = 0.0;

  // reaction 58: c2h5 + h2 => c2h6 + h
  qf[58] = sc[1] * sc[15];
  qr[58] = 0.0;

  // reaction 59: c2h5 + o2 => c2h4 + ho2
  qf[59] = sc[3] * sc[15];
  qr[59] = 0.0;

  // reaction 60: c2h4 + ho2 => c2h5 + o2
  qf[60] = sc[10] * sc[14];
  qr[60] = 0.0;

  // reaction 61: c2h6 + oh => c2h5 + h2o
  qf[61] = sc[4] * sc[13];
  qr[61] = 0.0;

  // reaction 62: c2h5 + h2o => c2h6 + oh
  qf[62] = sc[5] * sc[15];
  qr[62] = 0.0;

  // reaction 63: c2h6 + o => c2h5 + oh
  qf[63] = sc[2] * sc[13];
  qr[63] = 0.0;

  // reaction 64: c2h5 + oh => c2h6 + o
  qf[64] = sc[4] * sc[15];
  qr[64] = 0.0;

  // reaction 65: ch3 + ho2 => ch3o + oh
  qf[65] = sc[8] * sc[10];
  qr[65] = 0.0;

  // reaction 66: ch3o + oh => ch3 + ho2
  qf[66] = sc[4] * sc_qss[1];
  qr[66] = 0.0;

  // reaction 67: co + ho2 => co2 + oh
  qf[67] = sc[6] * sc[10];
  qr[67] = 0.0;

  // reaction 68: co2 + oh => co + ho2
  qf[68] = sc[4] * sc[7];
  qr[68] = 0.0;

  // reaction 69: co + o2 => co2 + o
  qf[69] = sc[3] * sc[6];
  qr[69] = 0.0;

  // reaction 70: co2 + o => co + o2
  qf[70] = sc[2] * sc[7];
  qr[70] = 0.0;

  // reaction 71: h + hco => co + h2
  qf[71] = sc[0] * sc_qss[0];
  qr[71] = 0.0;

  // reaction 72: co + h2 => h + hco
  qf[72] = sc[1] * sc[6];
  qr[72] = 0.0;

  // reaction 73: hco + o => co + oh
  qf[73] = sc[2] * sc_qss[0];
  qr[73] = 0.0;

  // reaction 74: co + oh => hco + o
  qf[74] = sc[4] * sc[6];
  qr[74] = 0.0;

  // reaction 75: ch2o + oh => h2o + hco
  qf[75] = sc[4] * sc[12];
  qr[75] = 0.0;

  // reaction 76: h2o + hco => ch2o + oh
  qf[76] = sc[5] * sc_qss[0];
  qr[76] = 0.0;

  // reaction 77: ch2o + h => h2 + hco
  qf[77] = sc[0] * sc[12];
  qr[77] = 0.0;

  // reaction 78: h2 + hco => ch2o + h
  qf[78] = sc[1] * sc_qss[0];
  qr[78] = 0.0;

  // reaction 79: ch2o + o => hco + oh
  qf[79] = sc[2] * sc[12];
  qr[79] = 0.0;

  // reaction 80: hco + oh => ch2o + o
  qf[80] = sc[4] * sc_qss[0];
  qr[80] = 0.0;

  // reaction 81: ch3 + oh => ch2o + h2
  qf[81] = sc[4] * sc[8];
  qr[81] = 0.0;

  // reaction 82: ch2o + h2 => ch3 + oh
  qf[82] = sc[1] * sc[12];
  qr[82] = 0.0;

  // reaction 83: ch3 + o => ch2o + h
  qf[83] = sc[2] * sc[8];
  qr[83] = 0.0;

  // reaction 84: ch2o + h => ch3 + o
  qf[84] = sc[0] * sc[12];
  qr[84] = 0.0;

  // reaction 85: ch3 + o2 => ch3o + o
  qf[85] = sc[3] * sc[8];
  qr[85] = 0.0;

  // reaction 86: ch3o + o => ch3 + o2
  qf[86] = sc[2] * sc_qss[1];
  qr[86] = 0.0;

  // reaction 87: ch2o + ch3 => ch4 + hco
  qf[87] = sc[8] * sc[12];
  qr[87] = 0.0;

  // reaction 88: ch4 + hco => ch2o + ch3
  qf[88] = sc[9] * sc_qss[0];
  qr[88] = 0.0;

  // reaction 89: ch3 + hco => ch4 + co
  qf[89] = sc[8] * sc_qss[0];
  qr[89] = 0.0;

  // reaction 90: ch4 + co => ch3 + hco
  qf[90] = sc[6] * sc[9];
  qr[90] = 0.0;

  // reaction 91: ho2 + o => o2 + oh
  qf[91] = sc[2] * sc[10];
  qr[91] = 0.0;

  // reaction 92: o2 + oh => ho2 + o
  qf[92] = sc[3] * sc[4];
  qr[92] = 0.0;

  // reaction 93: hco + ho2 => ch2o + o2
  qf[93] = sc[10] * sc_qss[0];
  qr[93] = 0.0;

  // reaction 94: ch2o + o2 => hco + ho2
  qf[94] = sc[3] * sc[12];
  qr[94] = 0.0;

  // reaction 95: ch3o + o2 => ch2o + ho2
  qf[95] = sc[3] * sc_qss[1];
  qr[95] = 0.0;

  // reaction 96: ch2o + ho2 => ch3o + o2
  qf[96] = sc[10] * sc[12];
  qr[96] = 0.0;

  // reaction 97: ch3 + ho2 => ch4 + o2
  qf[97] = sc[8] * sc[10];
  qr[97] = 0.0;

  // reaction 98: ch4 + o2 => ch3 + ho2
  qf[98] = sc[3] * sc[9];
  qr[98] = 0.0;

  // reaction 99: hco + o2 => co + ho2
  qf[99] = sc[3] * sc_qss[0];
  qr[99] = 0.0;

  // reaction 100: co + ho2 => hco + o2
  qf[100] = sc[6] * sc[10];
  qr[100] = 0.0;

  // reaction 101: h + ho2 => 2 oh
  qf[101] = sc[0] * sc[10];
  qr[101] = 0.0;

  // reaction 102: 2 oh => h + ho2
  qf[102] = (sc[4] * sc[4]);
  qr[102] = 0.0;

  // reaction 103: h + ho2 => h2 + o2
  qf[103] = sc[0] * sc[10];
  qr[103] = 0.0;

  // reaction 104: h2 + o2 => h + ho2
  qf[104] = sc[1] * sc[3];
  qr[104] = 0.0;

  // reaction 105: ho2 + oh => h2o + o2
  qf[105] = sc[4] * sc[10];
  qr[105] = 0.0;

  // reaction 106: h2o + o2 => ho2 + oh
  qf[106] = sc[3] * sc[5];
  qr[106] = 0.0;

  // reaction 107: h2o2 + o2 => 2 ho2
  qf[107] = sc[3] * sc[11];
  qr[107] = 0.0;

  // reaction 108: 2 ho2 => h2o2 + o2
  qf[108] = (sc[10] * sc[10]);
  qr[108] = 0.0;

  // reaction 109: h + h2o2 => h2o + oh
  qf[109] = sc[0] * sc[11];
  qr[109] = 0.0;

  // reaction 110: h2o + oh => h + h2o2
  qf[110] = sc[4] * sc[5];
  qr[110] = 0.0;

  // reaction 111: ch4 + ho2 => ch3 + h2o2
  qf[111] = sc[9] * sc[10];
  qr[111] = 0.0;

  // reaction 112: ch3 + h2o2 => ch4 + ho2
  qf[112] = sc[8] * sc[11];
  qr[112] = 0.0;

  // reaction 113: ch2o + ho2 => h2o2 + hco
  qf[113] = sc[10] * sc[12];
  qr[113] = 0.0;

  // reaction 114: h2o2 + hco => ch2o + ho2
  qf[114] = sc[11] * sc_qss[0];
  qr[114] = 0.0;

  // reaction 115: c2h3 + c2h5 => 2 c2h4
  qf[115] = sc[15] * sc[17];
  qr[115] = 0.0;

  // reaction 116: 2 c2h4 => c2h3 + c2h5
  qf[116] = (sc[14] * sc[14]);
  qr[116] = 0.0;

  // reaction 117: c2h4 + h => c2h3 + h2
  qf[117] = sc[0] * sc[14];
  qr[117] = 0.0;

  // reaction 118: c2h3 + h2 => c2h4 + h
  qf[118] = sc[1] * sc[17];
  qr[118] = 0.0;

  // reaction 119: c2h4 + oh => c2h3 + h2o
  qf[119] = sc[4] * sc[14];
  qr[119] = 0.0;

  // reaction 120: c2h3 + h2o => c2h4 + oh
  qf[120] = sc[5] * sc[17];
  qr[120] = 0.0;

  // reaction 121: c2h2 + o2 => hcco + oh
  qf[121] = sc[3] * sc[16];
  qr[121] = 0.0;

  // reaction 122: hcco + oh => c2h2 + o2
  qf[122] = sc[4] * sc[19];
  qr[122] = 0.0;

  // reaction 123: c2h3 + o2 => c2h2 + ho2
  qf[123] = sc[3] * sc[17];
  qr[123] = 0.0;

  // reaction 124: c2h2 + ho2 => c2h3 + o2
  qf[124] = sc[10] * sc[16];
  qr[124] = 0.0;

  // reaction 125: h2o2 + o => ho2 + oh
  qf[125] = sc[2] * sc[11];
  qr[125] = 0.0;

  // reaction 126: ho2 + oh => h2o2 + o
  qf[126] = sc[4] * sc[10];
  qr[126] = 0.0;

  // reaction 127: c2h2 + o => h + hcco
  qf[127] = sc[2] * sc[16];
  qr[127] = 0.0;

  // reaction 128: h + hcco => c2h2 + o
  qf[128] = sc[0] * sc[19];
  qr[128] = 0.0;

  // reaction 129: c2h2 + oh => ch2co + h
  qf[129] = sc[4] * sc[16];
  qr[129] = 0.0;

  // reaction 130: ch2co + h => c2h2 + oh
  qf[130] = sc[0] * sc[18];
  qr[130] = 0.0;

  // reaction 131: ch2co + h => ch3 + co
  qf[131] = sc[0] * sc[18];
  qr[131] = 0.0;

  // reaction 132: ch3 + co => ch2co + h
  qf[132] = sc[6] * sc[8];
  qr[132] = 0.0;

  // reaction 133: ch2co + o => hcco + oh
  qf[133] = sc[2] * sc[18];
  qr[133] = 0.0;

  // reaction 134: hcco + oh => ch2co + o
  qf[134] = sc[4] * sc[19];
  qr[134] = 0.0;

  // reaction 135: ch2co + oh => h2o + hcco
  qf[135] = sc[4] * sc[18];
  qr[135] = 0.0;

  // reaction 136: h2o + hcco => ch2co + oh
  qf[136] = sc[5] * sc[19];
  qr[136] = 0.0;

  // reaction 137: ch2co + h => h2 + hcco
  qf[137] = sc[0] * sc[18];
  qr[137] = 0.0;

  // reaction 138: h2 + hcco => ch2co + h
  qf[138] = sc[1] * sc[19];
  qr[138] = 0.0;

  // reaction 139: hcco + oh => 2 hco
  qf[139] = sc[4] * sc[19];
  qr[139] = 0.0;

  // reaction 140: h + hcco => ch2(s) + co
  qf[140] = sc[0] * sc[19];
  qr[140] = 0.0;

  // reaction 141: ch2(s) + co => h + hcco
  qf[141] = sc[6] * sc_qss[11];
  qr[141] = 0.0;

  // reaction 142: hcco + o => 2 co + h
  qf[142] = sc[2] * sc[19];
  qr[142] = 0.0;

  // reaction 143: c2h6 + o2 => c2h5 + ho2
  qf[143] = sc[3] * sc[13];
  qr[143] = 0.0;

  // reaction 144: c2h5 + ho2 => c2h6 + o2
  qf[144] = sc[10] * sc[15];
  qr[144] = 0.0;

  // reaction 145: c2h6 + ho2 => c2h5 + h2o2
  qf[145] = sc[10] * sc[13];
  qr[145] = 0.0;

  // reaction 146: c2h5 + h2o2 => c2h6 + ho2
  qf[146] = sc[11] * sc[15];
  qr[146] = 0.0;

  // reaction 147: c2h3 + ch3 => c2h2 + ch4
  qf[147] = sc[8] * sc[17];
  qr[147] = 0.0;

  // reaction 148: c2h2 + ch4 => c2h3 + ch3
  qf[148] = sc[9] * sc[16];
  qr[148] = 0.0;

  // reaction 149: c2h5 + ch3 => c2h4 + ch4
  qf[149] = sc[8] * sc[15];
  qr[149] = 0.0;

  // reaction 150: c2h4 + ch4 => c2h5 + ch3
  qf[150] = sc[9] * sc[14];
  qr[150] = 0.0;

  // reaction 151: c2h3 + h => c2h2 + h2
  qf[151] = sc[0] * sc[17];
  qr[151] = 0.0;

  // reaction 152: c2h2 + h2 => c2h3 + h
  qf[152] = sc[1] * sc[16];
  qr[152] = 0.0;

  // reaction 153: c2h5 + h => 2 ch3
  qf[153] = sc[0] * sc[15];
  qr[153] = 0.0;

  // reaction 154: 2 ch3 => c2h5 + h
  qf[154] = (sc[8] * sc[8]);
  qr[154] = 0.0;

  // reaction 155: c2h3 + o2 => ch2o + hco
  qf[155] = sc[3] * sc[17];
  qr[155] = 0.0;

  // reaction 156: ch2o + hco => c2h3 + o2
  qf[156] = sc[12] * sc_qss[0];
  qr[156] = 0.0;

  // reaction 157: c2h6 => c2h5 + h
  qf[157] = sc[13];
  qr[157] = 0.0;

  // reaction 158: c2h5 + h => c2h6
  qf[158] = sc[0] * sc[15];
  qr[158] = 0.0;

  // reaction 159: c2h4 + ch3 => c2h3 + ch4
  qf[159] = sc[8] * sc[14];
  qr[159] = 0.0;

  // reaction 160: c2h3 + ch4 => c2h4 + ch3
  qf[160] = sc[9] * sc[17];
  qr[160] = 0.0;

  // reaction 161: ch3cho => ch3 + hco
  qf[161] = sc[20];
  qr[161] = 0.0;

  // reaction 162: ch3 + hco => ch3cho
  qf[162] = sc[8] * sc_qss[0];
  qr[162] = 0.0;

  // reaction 163: ch3cho + o2 => ch3co + ho2
  qf[163] = sc[3] * sc[20];
  qr[163] = 0.0;

  // reaction 164: ch3co + ho2 => ch3cho + o2
  qf[164] = sc[10] * sc_qss[2];
  qr[164] = 0.0;

  // reaction 165: ch3cho + oh => ch3co + h2o
  qf[165] = sc[4] * sc[20];
  qr[165] = 0.0;

  // reaction 166: ch3co + h2o => ch3cho + oh
  qf[166] = sc[5] * sc_qss[2];
  qr[166] = 0.0;

  // reaction 167: ch3cho + h => ch3co + h2
  qf[167] = sc[0] * sc[20];
  qr[167] = 0.0;

  // reaction 168: ch3co + h2 => ch3cho + h
  qf[168] = sc[1] * sc_qss[2];
  qr[168] = 0.0;

  // reaction 169: ch3cho + o => ch3co + oh
  qf[169] = sc[2] * sc[20];
  qr[169] = 0.0;

  // reaction 170: ch3co + oh => ch3cho + o
  qf[170] = sc[4] * sc_qss[2];
  qr[170] = 0.0;

  // reaction 171: ch3cho + ho2 => ch3co + h2o2
  qf[171] = sc[10] * sc[20];
  qr[171] = 0.0;

  // reaction 172: ch3co + h2o2 => ch3cho + ho2
  qf[172] = sc[11] * sc_qss[2];
  qr[172] = 0.0;

  // reaction 173: ch3 + ch3cho => ch3co + ch4
  qf[173] = sc[8] * sc[20];
  qr[173] = 0.0;

  // reaction 174: ch3co + ch4 => ch3 + ch3cho
  qf[174] = sc[9] * sc_qss[2];
  qr[174] = 0.0;

  // reaction 175: c3h5-a => c2h2 + ch3
  qf[175] = sc[37];
  qr[175] = 0.0;

  // reaction 176: c2h2 + ch3 => c3h5-a
  qf[176] = sc[8] * sc[16];
  qr[176] = 0.0;

  // reaction 177: c3h6 => c2h3 + ch3
  qf[177] = sc[22];
  qr[177] = 0.0;

  // reaction 178: c2h3 + ch3 => c3h6
  qf[178] = sc[8] * sc[17];
  qr[178] = 0.0;

  // reaction 179: c2h2 + ch3 => c3h4-a + h
  qf[179] = sc[8] * sc[16];
  qr[179] = 0.0;

  // reaction 180: c3h4-a + h => c2h2 + ch3
  qf[180] = sc[0] * sc[21];
  qr[180] = 0.0;

  // reaction 181: c3h6 => c3h5-a + h
  qf[181] = sc[22];
  qr[181] = 0.0;

  // reaction 182: c3h5-a + h => c3h6
  qf[182] = sc[0] * sc[37];
  qr[182] = 0.0;

  // reaction 183: c3h6 + o => ch2co + ch3 + h
  qf[183] = sc[2] * sc[22];
  qr[183] = 0.0;

  // reaction 184: ch2co + ch3 + h => c3h6 + o
  qf[184] = sc[0] * sc[8] * sc[18];
  qr[184] = 0.0;

  // reaction 185: c3h6 + o => c2h5 + hco
  qf[185] = sc[2] * sc[22];
  qr[185] = 0.0;

  // reaction 186: c2h5 + hco => c3h6 + o
  qf[186] = sc[15] * sc_qss[0];
  qr[186] = 0.0;

  // reaction 187: c3h6 + ho2 => c3h5-a + h2o2
  qf[187] = sc[10] * sc[22];
  qr[187] = 0.0;

  // reaction 188: c3h5-a + h2o2 => c3h6 + ho2
  qf[188] = sc[11] * sc[37];
  qr[188] = 0.0;

  // reaction 189: c3h6 + oh => c3h5-a + h2o
  qf[189] = sc[4] * sc[22];
  qr[189] = 0.0;

  // reaction 190: c3h5-a + h2o => c3h6 + oh
  qf[190] = sc[5] * sc[37];
  qr[190] = 0.0;

  // reaction 191: c4h6 => 2 c2h3
  qf[191] = sc[23];
  qr[191] = 0.0;

  // reaction 192: 2 c2h3 => c4h6
  qf[192] = (sc[17] * sc[17]);
  qr[192] = 0.0;

  // reaction 193: c4h6 + oh => c2h5 + ch2co
  qf[193] = sc[4] * sc[23];
  qr[193] = 0.0;

  // reaction 194: c2h5 + ch2co => c4h6 + oh
  qf[194] = sc[15] * sc[18];
  qr[194] = 0.0;

  // reaction 195: c4h6 + oh => c3h5-a + ch2o
  qf[195] = sc[4] * sc[23];
  qr[195] = 0.0;

  // reaction 196: c3h5-a + ch2o => c4h6 + oh
  qf[196] = sc[12] * sc[37];
  qr[196] = 0.0;

  // reaction 197: c4h6 + oh => c2h3 + ch3cho
  qf[197] = sc[4] * sc[23];
  qr[197] = 0.0;

  // reaction 198: c2h3 + ch3cho => c4h6 + oh
  qf[198] = sc[17] * sc[20];
  qr[198] = 0.0;

  // reaction 199: c4h6 + o => c2h4 + ch2co
  qf[199] = sc[2] * sc[23];
  qr[199] = 0.0;

  // reaction 200: c2h4 + ch2co => c4h6 + o
  qf[200] = sc[14] * sc[18];
  qr[200] = 0.0;

  // reaction 201: c4h6 + o => c3h4-a + ch2o
  qf[201] = sc[2] * sc[23];
  qr[201] = 0.0;

  // reaction 202: c3h4-a + ch2o => c4h6 + o
  qf[202] = sc[12] * sc[21];
  qr[202] = 0.0;

  // reaction 203: c2h4 + o2 => c2h3 + ho2
  qf[203] = sc[3] * sc[14];
  qr[203] = 0.0;

  // reaction 204: c2h3 + ho2 => c2h4 + o2
  qf[204] = sc[10] * sc[17];
  qr[204] = 0.0;

  // reaction 205: nc3h7 => c2h4 + ch3
  qf[205] = sc[24];
  qr[205] = 0.0;

  // reaction 206: c2h4 + ch3 => nc3h7
  qf[206] = sc[8] * sc[14];
  qr[206] = 0.0;

  // reaction 207: nc3h7 => c3h6 + h
  qf[207] = sc[24];
  qr[207] = 0.0;

  // reaction 208: c3h6 + h => nc3h7
  qf[208] = sc[0] * sc[22];
  qr[208] = 0.0;

  // reaction 209: nc3h7 + o2 => c3h6 + ho2
  qf[209] = sc[3] * sc[24];
  qr[209] = 0.0;

  // reaction 210: c3h6 + ho2 => nc3h7 + o2
  qf[210] = sc[10] * sc[22];
  qr[210] = 0.0;

  // reaction 211: c3h6 + o => c3h5-a + oh
  qf[211] = sc[2] * sc[22];
  qr[211] = 0.0;

  // reaction 212: c3h5-a + oh => c3h6 + o
  qf[212] = sc[4] * sc[37];
  qr[212] = 0.0;

  // reaction 213: c3h6 + h => c3h5-a + h2
  qf[213] = sc[0] * sc[22];
  qr[213] = 0.0;

  // reaction 214: c3h5-a + h2 => c3h6 + h
  qf[214] = sc[1] * sc[37];
  qr[214] = 0.0;

  // reaction 215: c3h6 + h => c2h4 + ch3
  qf[215] = sc[0] * sc[22];
  qr[215] = 0.0;

  // reaction 216: c2h4 + ch3 => c3h6 + h
  qf[216] = sc[8] * sc[14];
  qr[216] = 0.0;

  // reaction 217: c5h9 => c2h4 + c3h5-a
  qf[217] = sc[29];
  qr[217] = 0.0;

  // reaction 218: c5h9 => c4h6 + ch3
  qf[218] = sc[29];
  qr[218] = 0.0;

  // reaction 219: c4h6 + ch3 => c5h9
  qf[219] = sc[8] * sc[23];
  qr[219] = 0.0;

  // reaction 220: c4h7 => c4h6 + h
  qf[220] = sc[25];
  qr[220] = 0.0;

  // reaction 221: c4h6 + h => c4h7
  qf[221] = sc[0] * sc[23];
  qr[221] = 0.0;

  // reaction 222: c4h7 => c2h3 + c2h4
  qf[222] = sc[25];
  qr[222] = 0.0;

  // reaction 223: c2h3 + c2h4 => c4h7
  qf[223] = sc[14] * sc[17];
  qr[223] = 0.0;

  // reaction 224: c4h6 + c4h8-1 => 2 c4h7
  qf[224] = sc[23] * sc[26];
  qr[224] = 0.0;

  // reaction 225: 2 c4h7 => c4h6 + c4h8-1
  qf[225] = (sc[25] * sc[25]);
  qr[225] = 0.0;

  // reaction 226: c4h7 + ch3 => c4h6 + ch4
  qf[226] = sc[8] * sc[25];
  qr[226] = 0.0;

  // reaction 227: c4h6 + ch4 => c4h7 + ch3
  qf[227] = sc[9] * sc[23];
  qr[227] = 0.0;

  // reaction 228: c3h5-a + c4h7 => c3h6 + c4h6
  qf[228] = sc[25] * sc[37];
  qr[228] = 0.0;

  // reaction 229: c3h6 + c4h6 => c3h5-a + c4h7
  qf[229] = sc[22] * sc[23];
  qr[229] = 0.0;

  // reaction 230: c4h7 + o2 => c4h6 + ho2
  qf[230] = sc[3] * sc[25];
  qr[230] = 0.0;

  // reaction 231: c4h6 + ho2 => c4h7 + o2
  qf[231] = sc[10] * sc[23];
  qr[231] = 0.0;

  // reaction 232: c4h7 + h => c4h6 + h2
  qf[232] = sc[0] * sc[25];
  qr[232] = 0.0;

  // reaction 233: c4h6 + h2 => c4h7 + h
  qf[233] = sc[1] * sc[23];
  qr[233] = 0.0;

  // reaction 234: c2h5 + c4h7 => c2h6 + c4h6
  qf[234] = sc[15] * sc[25];
  qr[234] = 0.0;

  // reaction 235: c2h6 + c4h6 => c2h5 + c4h7
  qf[235] = sc[13] * sc[23];
  qr[235] = 0.0;

  // reaction 236: c2h5 + c4h7 => c2h4 + c4h8-1
  qf[236] = sc[15] * sc[25];
  qr[236] = 0.0;

  // reaction 237: c2h4 + c4h8-1 => c2h5 + c4h7
  qf[237] = sc[14] * sc[26];
  qr[237] = 0.0;

  // reaction 238: c2h3 + c4h7 => c2h4 + c4h6
  qf[238] = sc[17] * sc[25];
  qr[238] = 0.0;

  // reaction 239: c2h4 + c4h6 => c2h3 + c4h7
  qf[239] = sc[14] * sc[23];
  qr[239] = 0.0;

  // reaction 240: c4h8-1 => c3h5-a + ch3
  qf[240] = sc[26];
  qr[240] = 0.0;

  // reaction 241: c3h5-a + ch3 => c4h8-1
  qf[241] = sc[8] * sc[37];
  qr[241] = 0.0;

  // reaction 242: c4h8-1 => c2h3 + c2h5
  qf[242] = sc[26];
  qr[242] = 0.0;

  // reaction 243: c2h3 + c2h5 => c4h8-1
  qf[243] = sc[15] * sc[17];
  qr[243] = 0.0;

  // reaction 244: c4h8-1 => c4h7 + h
  qf[244] = sc[26];
  qr[244] = 0.0;

  // reaction 245: c4h7 + h => c4h8-1
  qf[245] = sc[0] * sc[25];
  qr[245] = 0.0;

  // reaction 246: c4h8-1 + ch3 => c4h7 + ch4
  qf[246] = sc[8] * sc[26];
  qr[246] = 0.0;

  // reaction 247: c4h7 + ch4 => c4h8-1 + ch3
  qf[247] = sc[9] * sc[25];
  qr[247] = 0.0;

  // reaction 248: c4h8-1 + h => c4h7 + h2
  qf[248] = sc[0] * sc[26];
  qr[248] = 0.0;

  // reaction 249: c4h7 + h2 => c4h8-1 + h
  qf[249] = sc[1] * sc[25];
  qr[249] = 0.0;

  // reaction 250: c4h8-1 + oh => c4h7 + h2o
  qf[250] = sc[4] * sc[26];
  qr[250] = 0.0;

  // reaction 251: c4h7 + h2o => c4h8-1 + oh
  qf[251] = sc[5] * sc[25];
  qr[251] = 0.0;

  // reaction 252: c3h5-a + c4h8-1 => c3h6 + c4h7
  qf[252] = sc[26] * sc[37];
  qr[252] = 0.0;

  // reaction 253: c3h6 + c4h7 => c3h5-a + c4h8-1
  qf[253] = sc[22] * sc[25];
  qr[253] = 0.0;

  // reaction 254: c4h8-1 + ho2 => c4h7 + h2o2
  qf[254] = sc[10] * sc[26];
  qr[254] = 0.0;

  // reaction 255: c4h7 + h2o2 => c4h8-1 + ho2
  qf[255] = sc[11] * sc[25];
  qr[255] = 0.0;

  // reaction 256: c4h8-1 + o2 => c4h7 + ho2
  qf[256] = sc[3] * sc[26];
  qr[256] = 0.0;

  // reaction 257: c4h7 + ho2 => c4h8-1 + o2
  qf[257] = sc[10] * sc[25];
  qr[257] = 0.0;

  // reaction 258: pc4h9 => c2h4 + c2h5
  qf[258] = sc_qss[4];
  qr[258] = 0.0;

  // reaction 259: c2h4 + c2h5 => pc4h9
  qf[259] = sc[14] * sc[15];
  qr[259] = 0.0;

  // reaction 260: pc4h9 => c4h8-1 + h
  qf[260] = sc_qss[4];
  qr[260] = 0.0;

  // reaction 261: c4h8-1 + h => pc4h9
  qf[261] = sc[0] * sc[26];
  qr[261] = 0.0;

  // reaction 262: o2 + pc4h9 => c4h8-1 + ho2
  qf[262] = sc[3] * sc_qss[4];
  qr[262] = 0.0;

  // reaction 263: c4h8-1 + ho2 => o2 + pc4h9
  qf[263] = sc[10] * sc[26];
  qr[263] = 0.0;

  // reaction 264: ch3coch2 => ch2co + ch3
  qf[264] = sc[27];
  qr[264] = 0.0;

  // reaction 265: ch2co + ch3 => ch3coch2
  qf[265] = sc[8] * sc[18];
  qr[265] = 0.0;

  // reaction 266: c2h5co => c2h5 + co
  qf[266] = sc_qss[5];
  qr[266] = 0.0;

  // reaction 267: c2h5 + co => c2h5co
  qf[267] = sc[6] * sc[15];
  qr[267] = 0.0;

  // reaction 268: c2h5cho + h => c2h5co + h2
  qf[268] = sc[0] * sc[28];
  qr[268] = 0.0;

  // reaction 269: c2h5co + h2 => c2h5cho + h
  qf[269] = sc[1] * sc_qss[5];
  qr[269] = 0.0;

  // reaction 270: c2h5cho + o => c2h5co + oh
  qf[270] = sc[2] * sc[28];
  qr[270] = 0.0;

  // reaction 271: c2h5co + oh => c2h5cho + o
  qf[271] = sc[4] * sc_qss[5];
  qr[271] = 0.0;

  // reaction 272: c2h5cho + oh => c2h5co + h2o
  qf[272] = sc[4] * sc[28];
  qr[272] = 0.0;

  // reaction 273: c2h5co + h2o => c2h5cho + oh
  qf[273] = sc[5] * sc_qss[5];
  qr[273] = 0.0;

  // reaction 274: c2h5cho + ch3 => c2h5co + ch4
  qf[274] = sc[8] * sc[28];
  qr[274] = 0.0;

  // reaction 275: c2h5co + ch4 => c2h5cho + ch3
  qf[275] = sc[9] * sc_qss[5];
  qr[275] = 0.0;

  // reaction 276: c2h5cho + ho2 => c2h5co + h2o2
  qf[276] = sc[10] * sc[28];
  qr[276] = 0.0;

  // reaction 277: c2h5co + h2o2 => c2h5cho + ho2
  qf[277] = sc[11] * sc_qss[5];
  qr[277] = 0.0;

  // reaction 278: c2h5 + c2h5cho => c2h5co + c2h6
  qf[278] = sc[15] * sc[28];
  qr[278] = 0.0;

  // reaction 279: c2h5co + c2h6 => c2h5 + c2h5cho
  qf[279] = sc[13] * sc_qss[5];
  qr[279] = 0.0;

  // reaction 280: c2h5cho => c2h5 + hco
  qf[280] = sc[28];
  qr[280] = 0.0;

  // reaction 281: c2h5 + hco => c2h5cho
  qf[281] = sc[15] * sc_qss[0];
  qr[281] = 0.0;

  // reaction 282: c2h5cho + o2 => c2h5co + ho2
  qf[282] = sc[3] * sc[28];
  qr[282] = 0.0;

  // reaction 283: c2h5co + ho2 => c2h5cho + o2
  qf[283] = sc[10] * sc_qss[5];
  qr[283] = 0.0;

  // reaction 284: c2h3 + c2h5cho => c2h4 + c2h5co
  qf[284] = sc[17] * sc[28];
  qr[284] = 0.0;

  // reaction 285: c2h4 + c2h5co => c2h3 + c2h5cho
  qf[285] = sc[14] * sc_qss[5];
  qr[285] = 0.0;

  // reaction 286: c2h5cho + c3h5-a => c2h5co + c3h6
  qf[286] = sc[28] * sc[37];
  qr[286] = 0.0;

  // reaction 287: c2h5co + c3h6 => c2h5cho + c3h5-a
  qf[287] = sc[22] * sc_qss[5];
  qr[287] = 0.0;

  // reaction 288: c5h10-1 => c2h5 + c3h5-a
  qf[288] = sc[30];
  qr[288] = 0.0;

  // reaction 289: c2h5 + c3h5-a => c5h10-1
  qf[289] = sc[15] * sc[37];
  qr[289] = 0.0;

  // reaction 290: c5h10-1 + h => c5h9 + h2
  qf[290] = sc[0] * sc[30];
  qr[290] = 0.0;

  // reaction 291: c5h9 + h2 => c5h10-1 + h
  qf[291] = sc[1] * sc[29];
  qr[291] = 0.0;

  // reaction 292: c5h10-1 + o => c5h9 + oh
  qf[292] = sc[2] * sc[30];
  qr[292] = 0.0;

  // reaction 293: c5h9 + oh => c5h10-1 + o
  qf[293] = sc[4] * sc[29];
  qr[293] = 0.0;

  // reaction 294: c5h10-1 + o => hco + pc4h9
  qf[294] = sc[2] * sc[30];
  qr[294] = 0.0;

  // reaction 295: c5h10-1 + o => ch3co + nc3h7
  qf[295] = sc[2] * sc[30];
  qr[295] = 0.0;

  // reaction 296: c5h10-1 + oh => c5h9 + h2o
  qf[296] = sc[4] * sc[30];
  qr[296] = 0.0;

  // reaction 297: c5h9 + h2o => c5h10-1 + oh
  qf[297] = sc[5] * sc[29];
  qr[297] = 0.0;

  // reaction 298: c5h10-1 + oh => ch2o + pc4h9
  qf[298] = sc[4] * sc[30];
  qr[298] = 0.0;

  // reaction 299: c5h10-1 + oh => ch3cho + nc3h7
  qf[299] = sc[4] * sc[30];
  qr[299] = 0.0;

  // reaction 300: c5h10-1 + ch3 => c5h9 + ch4
  qf[300] = sc[8] * sc[30];
  qr[300] = 0.0;

  // reaction 301: c5h9 + ch4 => c5h10-1 + ch3
  qf[301] = sc[9] * sc[29];
  qr[301] = 0.0;

  // reaction 302: h + h2o2 => h2 + ho2
  qf[302] = sc[0] * sc[11];
  qr[302] = 0.0;

  // reaction 303: h2 + ho2 => h + h2o2
  qf[303] = sc[1] * sc[10];
  qr[303] = 0.0;

  // reaction 304: hco + o => co2 + h
  qf[304] = sc[2] * sc_qss[0];
  qr[304] = 0.0;

  // reaction 305: co2 + h => hco + o
  qf[305] = sc[0] * sc[7];
  qr[305] = 0.0;

  // reaction 306: ch3co + h => ch2co + h2
  qf[306] = sc[0] * sc_qss[2];
  qr[306] = 0.0;

  // reaction 307: ch2co + h2 => ch3co + h
  qf[307] = sc[1] * sc[18];
  qr[307] = 0.0;

  // reaction 308: ch3co + o => ch2co + oh
  qf[308] = sc[2] * sc_qss[2];
  qr[308] = 0.0;

  // reaction 309: ch2co + oh => ch3co + o
  qf[309] = sc[4] * sc[18];
  qr[309] = 0.0;

  // reaction 310: ch3 + ch3co => ch2co + ch4
  qf[310] = sc[8] * sc_qss[2];
  qr[310] = 0.0;

  // reaction 311: ch2co + ch4 => ch3 + ch3co
  qf[311] = sc[9] * sc[18];
  qr[311] = 0.0;

  // reaction 312: c2h4 + o => ch2cho + h
  qf[312] = sc[2] * sc[14];
  qr[312] = 0.0;

  // reaction 313: ch2cho + h => c2h4 + o
  qf[313] = sc[0] * sc_qss[3];
  qr[313] = 0.0;

  // reaction 314: c2h5 + o => ch3cho + h
  qf[314] = sc[2] * sc[15];
  qr[314] = 0.0;

  // reaction 315: ch3cho + h => c2h5 + o
  qf[315] = sc[0] * sc[20];
  qr[315] = 0.0;

  // reaction 316: c2h3 + c2h4 => c4h6 + h
  qf[316] = sc[14] * sc[17];
  qr[316] = 0.0;

  // reaction 317: c4h6 + h => c2h3 + c2h4
  qf[317] = sc[0] * sc[23];
  qr[317] = 0.0;

  // reaction 318: c2h5o + o2 => ch3cho + ho2
  qf[318] = sc[3] * sc_qss[6];
  qr[318] = 0.0;

  // reaction 319: ch3cho + ho2 => c2h5o + o2
  qf[319] = sc[10] * sc[20];
  qr[319] = 0.0;

  // reaction 320: h2o2 + o2 => 2 ho2
  qf[320] = sc[3] * sc[11];
  qr[320] = 0.0;

  // reaction 321: 2 ho2 => h2o2 + o2
  qf[321] = (sc[10] * sc[10]);
  qr[321] = 0.0;

  // reaction 322: c2h3 + o2 => ch2cho + o
  qf[322] = sc[3] * sc[17];
  qr[322] = 0.0;

  // reaction 323: ch2cho + o => c2h3 + o2
  qf[323] = sc[2] * sc_qss[3];
  qr[323] = 0.0;

  // reaction 324: ch3o2h => ch3o + oh
  qf[324] = sc[32];
  qr[324] = 0.0;

  // reaction 325: ch3o + oh => ch3o2h
  qf[325] = sc[4] * sc_qss[1];
  qr[325] = 0.0;

  // reaction 326: c3h2 + o2 => co + h + hcco
  qf[326] = sc[3] * sc_qss[10];
  qr[326] = 0.0;

  // reaction 327: ch2o + ch3o2 => ch3o2h + hco
  qf[327] = sc[12] * sc[31];
  qr[327] = 0.0;

  // reaction 328: ch3o2h + hco => ch2o + ch3o2
  qf[328] = sc[32] * sc_qss[0];
  qr[328] = 0.0;

  // reaction 329: c2h4 + ch3o2 => c2h3 + ch3o2h
  qf[329] = sc[14] * sc[31];
  qr[329] = 0.0;

  // reaction 330: c2h3 + ch3o2h => c2h4 + ch3o2
  qf[330] = sc[17] * sc[32];
  qr[330] = 0.0;

  // reaction 331: ch3o2 + ch4 => ch3 + ch3o2h
  qf[331] = sc[9] * sc[31];
  qr[331] = 0.0;

  // reaction 332: ch3 + ch3o2h => ch3o2 + ch4
  qf[332] = sc[8] * sc[32];
  qr[332] = 0.0;

  // reaction 333: c2h5 + ho2 => c2h5o + oh
  qf[333] = sc[10] * sc[15];
  qr[333] = 0.0;

  // reaction 334: c2h5o + oh => c2h5 + ho2
  qf[334] = sc[4] * sc_qss[6];
  qr[334] = 0.0;

  // reaction 335: ch3 + ch3o2 => 2 ch3o
  qf[335] = sc[8] * sc[31];
  qr[335] = 0.0;

  // reaction 336: c2h5 + ch3o2 => c2h5o + ch3o
  qf[336] = sc[15] * sc[31];
  qr[336] = 0.0;

  // reaction 337: ch3o2 + ho2 => ch3o2h + o2
  qf[337] = sc[10] * sc[31];
  qr[337] = 0.0;

  // reaction 338: ch3o2h + o2 => ch3o2 + ho2
  qf[338] = sc[3] * sc[32];
  qr[338] = 0.0;

  // reaction 339: h2o2 + oh => h2o + ho2
  qf[339] = sc[4] * sc[11];
  qr[339] = 0.0;

  // reaction 340: h2o + ho2 => h2o2 + oh
  qf[340] = sc[5] * sc[10];
  qr[340] = 0.0;

  // reaction 341: 2 ch3o2 => 2 ch3o + o2
  qf[341] = (sc[31] * sc[31]);
  qr[341] = 0.0;

  // reaction 342: c2h6 + ch3o2 => c2h5 + ch3o2h
  qf[342] = sc[13] * sc[31];
  qr[342] = 0.0;

  // reaction 343: c2h5 + ch3o2h => c2h6 + ch3o2
  qf[343] = sc[15] * sc[32];
  qr[343] = 0.0;

  // reaction 344: ch3cho + ch3o2 => ch3co + ch3o2h
  qf[344] = sc[20] * sc[31];
  qr[344] = 0.0;

  // reaction 345: ch3co + ch3o2h => ch3cho + ch3o2
  qf[345] = sc[32] * sc_qss[2];
  qr[345] = 0.0;

  // reaction 346: c2h3co => c2h3 + co
  qf[346] = sc[33];
  qr[346] = 0.0;

  // reaction 347: c2h3 + co => c2h3co
  qf[347] = sc[6] * sc[17];
  qr[347] = 0.0;

  // reaction 348: c2h3cho + oh => c2h3co + h2o
  qf[348] = sc[4] * sc[34];
  qr[348] = 0.0;

  // reaction 349: c2h3co + h2o => c2h3cho + oh
  qf[349] = sc[5] * sc[33];
  qr[349] = 0.0;

  // reaction 350: c2h3cho + h => c2h3co + h2
  qf[350] = sc[0] * sc[34];
  qr[350] = 0.0;

  // reaction 351: c2h3co + h2 => c2h3cho + h
  qf[351] = sc[1] * sc[33];
  qr[351] = 0.0;

  // reaction 352: c2h3cho + o => c2h3co + oh
  qf[352] = sc[2] * sc[34];
  qr[352] = 0.0;

  // reaction 353: c2h3co + oh => c2h3cho + o
  qf[353] = sc[4] * sc[33];
  qr[353] = 0.0;

  // reaction 354: c2h3cho + ho2 => c2h3co + h2o2
  qf[354] = sc[10] * sc[34];
  qr[354] = 0.0;

  // reaction 355: c2h3co + h2o2 => c2h3cho + ho2
  qf[355] = sc[11] * sc[33];
  qr[355] = 0.0;

  // reaction 356: c2h3cho + ch3 => c2h3co + ch4
  qf[356] = sc[8] * sc[34];
  qr[356] = 0.0;

  // reaction 357: c2h3co + ch4 => c2h3cho + ch3
  qf[357] = sc[9] * sc[33];
  qr[357] = 0.0;

  // reaction 358: c2h3cho + ch3o2 => c2h3co + ch3o2h
  qf[358] = sc[31] * sc[34];
  qr[358] = 0.0;

  // reaction 359: c2h3co + ch3o2h => c2h3cho + ch3o2
  qf[359] = sc[32] * sc[33];
  qr[359] = 0.0;

  // reaction 360: c3h5o => c2h3cho + h
  qf[360] = sc_qss[7];
  qr[360] = 0.0;

  // reaction 361: c2h3cho + h => c3h5o
  qf[361] = sc[0] * sc[34];
  qr[361] = 0.0;

  // reaction 362: c3h5o => c2h3 + ch2o
  qf[362] = sc_qss[7];
  qr[362] = 0.0;

  // reaction 363: c2h3 + ch2o => c3h5o
  qf[363] = sc[12] * sc[17];
  qr[363] = 0.0;

  // reaction 364: c3h5o + o2 => c2h3cho + ho2
  qf[364] = sc[3] * sc_qss[7];
  qr[364] = 0.0;

  // reaction 365: c2h3cho + ho2 => c3h5o + o2
  qf[365] = sc[10] * sc[34];
  qr[365] = 0.0;

  // reaction 366: c3h5-a + ho2 => c3h5o + oh
  qf[366] = sc[10] * sc[37];
  qr[366] = 0.0;

  // reaction 367: c3h5o + oh => c3h5-a + ho2
  qf[367] = sc[4] * sc_qss[7];
  qr[367] = 0.0;

  // reaction 368: c3h5-a + ch3o2 => c3h5o + ch3o
  qf[368] = sc[31] * sc[37];
  qr[368] = 0.0;

  // reaction 369: c3h6 + ch3o2 => c3h5-a + ch3o2h
  qf[369] = sc[22] * sc[31];
  qr[369] = 0.0;

  // reaction 370: c3h5-a + ch3o2h => c3h6 + ch3o2
  qf[370] = sc[32] * sc[37];
  qr[370] = 0.0;

  // reaction 371: ch3 + oh => ch2(s) + h2o
  qf[371] = sc[4] * sc[8];
  qr[371] = 0.0;

  // reaction 372: ch2(s) + h2o => ch3 + oh
  qf[372] = sc[5] * sc_qss[11];
  qr[372] = 0.0;

  // reaction 373: c4h7o => c2h3 + ch3cho
  qf[373] = sc_qss[8];
  qr[373] = 0.0;

  // reaction 374: c2h3 + ch3cho => c4h7o
  qf[374] = sc[17] * sc[20];
  qr[374] = 0.0;

  // reaction 375: c4h7o => c2h3cho + ch3
  qf[375] = sc_qss[8];
  qr[375] = 0.0;

  // reaction 376: c2h3cho + ch3 => c4h7o
  qf[376] = sc[8] * sc[34];
  qr[376] = 0.0;

  // reaction 377: c4h7 + ho2 => c4h7o + oh
  qf[377] = sc[10] * sc[25];
  qr[377] = 0.0;

  // reaction 378: c4h7o + oh => c4h7 + ho2
  qf[378] = sc[4] * sc_qss[8];
  qr[378] = 0.0;

  // reaction 379: c4h7 + ch3o2 => c4h7o + ch3o
  qf[379] = sc[25] * sc[31];
  qr[379] = 0.0;

  // reaction 380: c4h8-1 + oh => ch2o + nc3h7
  qf[380] = sc[4] * sc[26];
  qr[380] = 0.0;

  // reaction 381: ch2o + nc3h7 => c4h8-1 + oh
  qf[381] = sc[12] * sc[24];
  qr[381] = 0.0;

  // reaction 382: c4h8-1 + o => c3h6 + ch2o
  qf[382] = sc[2] * sc[26];
  qr[382] = 0.0;

  // reaction 383: c3h6 + ch2o => c4h8-1 + o
  qf[383] = sc[12] * sc[22];
  qr[383] = 0.0;

  // reaction 384: c4h8-1 + o => c2h4 + ch3cho
  qf[384] = sc[2] * sc[26];
  qr[384] = 0.0;

  // reaction 385: c2h4 + ch3cho => c4h8-1 + o
  qf[385] = sc[14] * sc[20];
  qr[385] = 0.0;

  // reaction 386: c4h8-1 + o => c2h5 + ch3co
  qf[386] = sc[2] * sc[26];
  qr[386] = 0.0;

  // reaction 387: c2h5 + ch3co => c4h8-1 + o
  qf[387] = sc[15] * sc_qss[2];
  qr[387] = 0.0;

  // reaction 388: c4h8-1 + oh => c2h5 + ch3cho
  qf[388] = sc[4] * sc[26];
  qr[388] = 0.0;

  // reaction 389: c2h5 + ch3cho => c4h8-1 + oh
  qf[389] = sc[15] * sc[20];
  qr[389] = 0.0;

  // reaction 390: c4h8-1 + oh => c2h6 + ch3co
  qf[390] = sc[4] * sc[26];
  qr[390] = 0.0;

  // reaction 391: c2h6 + ch3co => c4h8-1 + oh
  qf[391] = sc[13] * sc_qss[2];
  qr[391] = 0.0;

  // reaction 392: c4h8-1 + o => c2h5co + ch3
  qf[392] = sc[2] * sc[26];
  qr[392] = 0.0;

  // reaction 393: c2h5co + ch3 => c4h8-1 + o
  qf[393] = sc[8] * sc_qss[5];
  qr[393] = 0.0;

  // reaction 394: c4h8-1 + oh => c2h5cho + ch3
  qf[394] = sc[4] * sc[26];
  qr[394] = 0.0;

  // reaction 395: c2h5cho + ch3 => c4h8-1 + oh
  qf[395] = sc[8] * sc[28];
  qr[395] = 0.0;

  // reaction 396: c4h8-1 + oh => c2h5co + ch4
  qf[396] = sc[4] * sc[26];
  qr[396] = 0.0;

  // reaction 397: c2h5co + ch4 => c4h8-1 + oh
  qf[397] = sc[9] * sc_qss[5];
  qr[397] = 0.0;

  // reaction 398: c4h8-1 + ch3o2 => c4h7 + ch3o2h
  qf[398] = sc[26] * sc[31];
  qr[398] = 0.0;

  // reaction 399: c4h7 + ch3o2h => c4h8-1 + ch3o2
  qf[399] = sc[25] * sc[32];
  qr[399] = 0.0;

  // reaction 400: c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  qf[400] = sc[35];
  qr[400] = 0.0;

  // reaction 401: c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  qf[401] = sc[3] * sc_qss[9];
  qr[401] = 0.0;

  // reaction 402: c4h8ooh1-3o2 => nc4ket13 + oh
  qf[402] = sc[35];
  qr[402] = 0.0;

  // reaction 403: nc4ket13 + oh => c4h8ooh1-3o2
  qf[403] = sc[4] * sc[39];
  qr[403] = 0.0;

  // reaction 404: c4h8ooh1-3 => c3h6 + ch2o + oh
  qf[404] = sc_qss[9];
  qr[404] = 0.0;

  // reaction 405: pc4h9o2 => c4h8ooh1-3
  qf[405] = sc[36];
  qr[405] = 0.0;

  // reaction 406: c4h8ooh1-3 => pc4h9o2
  qf[406] = sc_qss[9];
  qr[406] = 0.0;

  // reaction 407: c2h5cho + ch3o2 => c2h5co + ch3o2h
  qf[407] = sc[28] * sc[31];
  qr[407] = 0.0;

  // reaction 408: c2h5co + ch3o2h => c2h5cho + ch3o2
  qf[408] = sc[32] * sc_qss[5];
  qr[408] = 0.0;

  // reaction 409: c2h5cho + c4h7 => c2h5co + c4h8-1
  qf[409] = sc[25] * sc[28];
  qr[409] = 0.0;

  // reaction 410: c2h5co + c4h8-1 => c2h5cho + c4h7
  qf[410] = sc[26] * sc_qss[5];
  qr[410] = 0.0;

  // reaction 411: c3h4-a + ho2 => c2h4 + co + oh
  qf[411] = sc[10] * sc[21];
  qr[411] = 0.0;

  // reaction 412: c2h4 + co + oh => c3h4-a + ho2
  qf[412] = sc[4] * sc[6] * sc[14];
  qr[412] = 0.0;

  // reaction 413: c3h4-a + ho2 => c3h3 + h2o2
  qf[413] = sc[10] * sc[21];
  qr[413] = 0.0;

  // reaction 414: c3h3 + h2o2 => c3h4-a + ho2
  qf[414] = sc[11] * sc[38];
  qr[414] = 0.0;

  // reaction 415: c3h6 + o2 => c3h5-a + ho2
  qf[415] = sc[3] * sc[22];
  qr[415] = 0.0;

  // reaction 416: c3h5-a + ho2 => c3h6 + o2
  qf[416] = sc[10] * sc[37];
  qr[416] = 0.0;

  // reaction 417: c3h6 + ch3 => c3h5-a + ch4
  qf[417] = sc[8] * sc[22];
  qr[417] = 0.0;

  // reaction 418: c3h5-a + ch4 => c3h6 + ch3
  qf[418] = sc[9] * sc[37];
  qr[418] = 0.0;

  // reaction 419: c2h5 + c3h6 => c2h6 + c3h5-a
  qf[419] = sc[15] * sc[22];
  qr[419] = 0.0;

  // reaction 420: c2h6 + c3h5-a => c2h5 + c3h6
  qf[420] = sc[13] * sc[37];
  qr[420] = 0.0;

  // reaction 421: c3h5-a + ho2 => c2h3 + ch2o + oh
  qf[421] = sc[10] * sc[37];
  qr[421] = 0.0;

  // reaction 422: c2h3 + ch2o + oh => c3h5-a + ho2
  qf[422] = sc[4] * sc[12] * sc[17];
  qr[422] = 0.0;

  // reaction 423: c3h5-a + h => c3h4-a + h2
  qf[423] = sc[0] * sc[37];
  qr[423] = 0.0;

  // reaction 424: c3h4-a + h2 => c3h5-a + h
  qf[424] = sc[1] * sc[21];
  qr[424] = 0.0;

  // reaction 425: c3h5-a + ch3 => c3h4-a + ch4
  qf[425] = sc[8] * sc[37];
  qr[425] = 0.0;

  // reaction 426: c3h4-a + ch4 => c3h5-a + ch3
  qf[426] = sc[9] * sc[21];
  qr[426] = 0.0;

  // reaction 427: c2h5 + c3h5-a => c2h6 + c3h4-a
  qf[427] = sc[15] * sc[37];
  qr[427] = 0.0;

  // reaction 428: c2h6 + c3h4-a => c2h5 + c3h5-a
  qf[428] = sc[13] * sc[21];
  qr[428] = 0.0;

  // reaction 429: c2h5 + c3h5-a => c2h4 + c3h6
  qf[429] = sc[15] * sc[37];
  qr[429] = 0.0;

  // reaction 430: c2h4 + c3h6 => c2h5 + c3h5-a
  qf[430] = sc[14] * sc[22];
  qr[430] = 0.0;

  // reaction 431: c2h3 + c3h5-a => c2h4 + c3h4-a
  qf[431] = sc[17] * sc[37];
  qr[431] = 0.0;

  // reaction 432: c2h4 + c3h4-a => c2h3 + c3h5-a
  qf[432] = sc[14] * sc[21];
  qr[432] = 0.0;

  // reaction 433: c3h4-a + c3h6 => 2 c3h5-a
  qf[433] = sc[21] * sc[22];
  qr[433] = 0.0;

  // reaction 434: 2 c3h5-a => c3h4-a + c3h6
  qf[434] = (sc[37] * sc[37]);
  qr[434] = 0.0;

  // reaction 435: c3h5-a + o2 => c2h3cho + oh
  qf[435] = sc[3] * sc[37];
  qr[435] = 0.0;

  // reaction 436: c2h3cho + oh => c3h5-a + o2
  qf[436] = sc[4] * sc[34];
  qr[436] = 0.0;

  // reaction 437: c3h4-a + o2 => c3h3 + ho2
  qf[437] = sc[3] * sc[21];
  qr[437] = 0.0;

  // reaction 438: c3h3 + ho2 => c3h4-a + o2
  qf[438] = sc[10] * sc[38];
  qr[438] = 0.0;

  // reaction 439: c3h3 + h => c3h2 + h2
  qf[439] = sc[0] * sc[38];
  qr[439] = 0.0;

  // reaction 440: c3h2 + h2 => c3h3 + h
  qf[440] = sc[1] * sc_qss[10];
  qr[440] = 0.0;

  // reaction 441: c3h4-a + oh => c3h3 + h2o
  qf[441] = sc[4] * sc[21];
  qr[441] = 0.0;

  // reaction 442: c3h3 + h2o => c3h4-a + oh
  qf[442] = sc[5] * sc[38];
  qr[442] = 0.0;

  // reaction 443: c3h4-a + o => c2h4 + co
  qf[443] = sc[2] * sc[21];
  qr[443] = 0.0;

  // reaction 444: c2h4 + co => c3h4-a + o
  qf[444] = sc[6] * sc[14];
  qr[444] = 0.0;

  // reaction 445: c3h2 + oh => c2h2 + hco
  qf[445] = sc[4] * sc_qss[10];
  qr[445] = 0.0;

  // reaction 446: c2h2 + hco => c3h2 + oh
  qf[446] = sc[16] * sc_qss[0];
  qr[446] = 0.0;

  // reaction 447: c3h5-a => c3h4-a + h
  qf[447] = sc[37];
  qr[447] = 0.0;

  // reaction 448: c3h4-a + h => c3h5-a
  qf[448] = sc[0] * sc[21];
  qr[448] = 0.0;

  // reaction 449: c3h4-a + h => c3h3 + h2
  qf[449] = sc[0] * sc[21];
  qr[449] = 0.0;

  // reaction 450: c3h3 + h2 => c3h4-a + h
  qf[450] = sc[1] * sc[38];
  qr[450] = 0.0;

  // reaction 451: c3h4-a + ch3 => c3h3 + ch4
  qf[451] = sc[8] * sc[21];
  qr[451] = 0.0;

  // reaction 452: c3h3 + ch4 => c3h4-a + ch3
  qf[452] = sc[9] * sc[38];
  qr[452] = 0.0;

  // reaction 453: c3h4-a + c3h5-a => c3h3 + c3h6
  qf[453] = sc[21] * sc[37];
  qr[453] = 0.0;

  // reaction 454: c3h3 + c3h6 => c3h4-a + c3h5-a
  qf[454] = sc[22] * sc[38];
  qr[454] = 0.0;

  // reaction 455: c3h3 + oh => c3h2 + h2o
  qf[455] = sc[4] * sc[38];
  qr[455] = 0.0;

  // reaction 456: c3h2 + h2o => c3h3 + oh
  qf[456] = sc[5] * sc_qss[10];
  qr[456] = 0.0;

  // reaction 457: c3h3 + o2 => ch2co + hco
  qf[457] = sc[3] * sc[38];
  qr[457] = 0.0;

  // reaction 458: ch2co + hco => c3h3 + o2
  qf[458] = sc[18] * sc_qss[0];
  qr[458] = 0.0;

  // reaction 459: pc4h9o2 => o2 + pc4h9
  qf[459] = sc[36];
  qr[459] = 0.0;

  // reaction 460: o2 + pc4h9 => pc4h9o2
  qf[460] = sc[3] * sc_qss[4];
  qr[460] = 0.0;

  // reaction 461: ch2cho => ch2co + h
  qf[461] = sc_qss[3];
  qr[461] = 0.0;

  // reaction 462: ch2co + h => ch2cho
  qf[462] = sc[0] * sc[18];
  qr[462] = 0.0;

  // reaction 463: ch2cho + o2 => ch2o + co + oh
  qf[463] = sc[3] * sc_qss[3];
  qr[463] = 0.0;

  // reaction 464: nc4ket13 => ch2cho + ch3cho + oh
  qf[464] = sc[39];
  qr[464] = 0.0;

  // reaction 465: c3h5-a + o2 => c3h4-a + ho2
  qf[465] = sc[3] * sc[37];
  qr[465] = 0.0;

  // reaction 466: c3h4-a + ho2 => c3h5-a + o2
  qf[466] = sc[10] * sc[21];
  qr[466] = 0.0;

  // reaction 467: c3h5-a + o2 => ch2cho + ch2o
  qf[467] = sc[3] * sc[37];
  qr[467] = 0.0;

  // reaction 468: ch2cho + ch2o => c3h5-a + o2
  qf[468] = sc[12] * sc_qss[3];
  qr[468] = 0.0;

  // reaction 469: c3h5-a + o2 => c2h2 + ch2o + oh
  qf[469] = sc[3] * sc[37];
  qr[469] = 0.0;

  // reaction 470: hcco + o2 => co2 + hco
  qf[470] = sc[3] * sc[19];
  qr[470] = 0.0;

  // reaction 471: co2 + hco => hcco + o2
  qf[471] = sc[7] * sc_qss[0];
  qr[471] = 0.0;

  // reaction 472: ch3 + o2 => ch2o + oh
  qf[472] = sc[3] * sc[8];
  qr[472] = 0.0;

  // reaction 473: ch2o + oh => ch3 + o2
  qf[473] = sc[4] * sc[12];
  qr[473] = 0.0;

  // reaction 474: c2h4 + h2 => 2 ch3
  qf[474] = sc[1] * sc[14];
  qr[474] = 0.0;

  // reaction 475: 2 ch3 => c2h4 + h2
  qf[475] = (sc[8] * sc[8]);
  qr[475] = 0.0;

  // reaction 476: nc3h7cho + o2 => ho2 + nc3h7co
  qf[476] = sc[3] * sc[40];
  qr[476] = 0.0;

  // reaction 477: ho2 + nc3h7co => nc3h7cho + o2
  qf[477] = sc[10] * sc_qss[12];
  qr[477] = 0.0;

  // reaction 478: nc3h7cho + oh => h2o + nc3h7co
  qf[478] = sc[4] * sc[40];
  qr[478] = 0.0;

  // reaction 479: h2o + nc3h7co => nc3h7cho + oh
  qf[479] = sc[5] * sc_qss[12];
  qr[479] = 0.0;

  // reaction 480: h + nc3h7cho => h2 + nc3h7co
  qf[480] = sc[0] * sc[40];
  qr[480] = 0.0;

  // reaction 481: h2 + nc3h7co => h + nc3h7cho
  qf[481] = sc[1] * sc_qss[12];
  qr[481] = 0.0;

  // reaction 482: nc3h7cho + o => nc3h7co + oh
  qf[482] = sc[2] * sc[40];
  qr[482] = 0.0;

  // reaction 483: nc3h7co + oh => nc3h7cho + o
  qf[483] = sc[4] * sc_qss[12];
  qr[483] = 0.0;

  // reaction 484: ho2 + nc3h7cho => h2o2 + nc3h7co
  qf[484] = sc[10] * sc[40];
  qr[484] = 0.0;

  // reaction 485: h2o2 + nc3h7co => ho2 + nc3h7cho
  qf[485] = sc[11] * sc_qss[12];
  qr[485] = 0.0;

  // reaction 486: ch3 + nc3h7cho => ch4 + nc3h7co
  qf[486] = sc[8] * sc[40];
  qr[486] = 0.0;

  // reaction 487: ch4 + nc3h7co => ch3 + nc3h7cho
  qf[487] = sc[9] * sc_qss[12];
  qr[487] = 0.0;

  // reaction 488: ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  qf[488] = sc[31] * sc[40];
  qr[488] = 0.0;

  // reaction 489: ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  qf[489] = sc[32] * sc_qss[12];
  qr[489] = 0.0;

  // reaction 490: nc3h7co => co + nc3h7
  qf[490] = sc_qss[12];
  qr[490] = 0.0;

  // reaction 491: co + nc3h7 => nc3h7co
  qf[491] = sc[6] * sc[24];
  qr[491] = 0.0;

  // reaction 492: c2h5coch2 => c2h5 + ch2co
  qf[492] = sc[41];
  qr[492] = 0.0;

  // reaction 493: c2h5 + ch2co => c2h5coch2
  qf[493] = sc[15] * sc[18];
  qr[493] = 0.0;

  // reaction 494: nc3h7coch2 => ch2co + nc3h7
  qf[494] = sc[42];
  qr[494] = 0.0;

  // reaction 495: ch2co + nc3h7 => nc3h7coch2
  qf[495] = sc[18] * sc[24];
  qr[495] = 0.0;

  // reaction 496: nc4h9cho + o2 => ho2 + nc4h9co
  qf[496] = sc[3] * sc[43];
  qr[496] = 0.0;

  // reaction 497: ho2 + nc4h9co => nc4h9cho + o2
  qf[497] = sc[10] * sc[44];
  qr[497] = 0.0;

  // reaction 498: nc4h9cho + oh => h2o + nc4h9co
  qf[498] = sc[4] * sc[43];
  qr[498] = 0.0;

  // reaction 499: h2o + nc4h9co => nc4h9cho + oh
  qf[499] = sc[5] * sc[44];
  qr[499] = 0.0;

  // reaction 500: h + nc4h9cho => h2 + nc4h9co
  qf[500] = sc[0] * sc[43];
  qr[500] = 0.0;

  // reaction 501: h2 + nc4h9co => h + nc4h9cho
  qf[501] = sc[1] * sc[44];
  qr[501] = 0.0;

  // reaction 502: nc4h9cho + o => nc4h9co + oh
  qf[502] = sc[2] * sc[43];
  qr[502] = 0.0;

  // reaction 503: nc4h9co + oh => nc4h9cho + o
  qf[503] = sc[4] * sc[44];
  qr[503] = 0.0;

  // reaction 504: ho2 + nc4h9cho => h2o2 + nc4h9co
  qf[504] = sc[10] * sc[43];
  qr[504] = 0.0;

  // reaction 505: h2o2 + nc4h9co => ho2 + nc4h9cho
  qf[505] = sc[11] * sc[44];
  qr[505] = 0.0;

  // reaction 506: ch3 + nc4h9cho => ch4 + nc4h9co
  qf[506] = sc[8] * sc[43];
  qr[506] = 0.0;

  // reaction 507: ch4 + nc4h9co => ch3 + nc4h9cho
  qf[507] = sc[9] * sc[44];
  qr[507] = 0.0;

  // reaction 508: ch3o2 + nc4h9cho => ch3o2h + nc4h9co
  qf[508] = sc[31] * sc[43];
  qr[508] = 0.0;

  // reaction 509: ch3o2h + nc4h9co => ch3o2 + nc4h9cho
  qf[509] = sc[32] * sc[44];
  qr[509] = 0.0;

  // reaction 510: nc4h9co => co + pc4h9
  qf[510] = sc[44];
  qr[510] = 0.0;

  // reaction 511: co + pc4h9 => nc4h9co
  qf[511] = sc[6] * sc_qss[4];
  qr[511] = 0.0;

  // reaction 512: ch2(s) + ch4 => 2 ch3
  qf[512] = sc[9] * sc_qss[11];
  qr[512] = 0.0;

  // reaction 513: 2 ch3 => ch2(s) + ch4
  qf[513] = (sc[8] * sc[8]);
  qr[513] = 0.0;

  // reaction 514: c2h6 + ch2(s) => c2h5 + ch3
  qf[514] = sc[13] * sc_qss[11];
  qr[514] = 0.0;

  // reaction 515: c2h5 + ch3 => c2h6 + ch2(s)
  qf[515] = sc[8] * sc[15];
  qr[515] = 0.0;

  // reaction 516: ch2(s) + o2 => co + h + oh
  qf[516] = sc[3] * sc_qss[11];
  qr[516] = 0.0;

  // reaction 517: ch2(s) + h2 => ch3 + h
  qf[517] = sc[1] * sc_qss[11];
  qr[517] = 0.0;

  // reaction 518: ch3 + h => ch2(s) + h2
  qf[518] = sc[0] * sc[8];
  qr[518] = 0.0;

  // reaction 519: ch2(s) + o => co + 2 h
  qf[519] = sc[2] * sc_qss[11];
  qr[519] = 0.0;

  // reaction 520: ch2(s) + oh => ch2o + h
  qf[520] = sc[4] * sc_qss[11];
  qr[520] = 0.0;

  // reaction 521: ch2o + h => ch2(s) + oh
  qf[521] = sc[0] * sc[12];
  qr[521] = 0.0;

  // reaction 522: ch2(s) + co2 => ch2o + co
  qf[522] = sc[7] * sc_qss[11];
  qr[522] = 0.0;

  // reaction 523: ch2o + co => ch2(s) + co2
  qf[523] = sc[6] * sc[12];
  qr[523] = 0.0;

  // reaction 524: ch2(s) + ch3 => c2h4 + h
  qf[524] = sc[8] * sc_qss[11];
  qr[524] = 0.0;

  // reaction 525: c2h4 + h => ch2(s) + ch3
  qf[525] = sc[0] * sc[14];
  qr[525] = 0.0;

  // reaction 526: ch2(s) + ch2co => c2h4 + co
  qf[526] = sc[18] * sc_qss[11];
  qr[526] = 0.0;

  // reaction 527: c2h4 + co => ch2(s) + ch2co
  qf[527] = sc[6] * sc[14];
  qr[527] = 0.0;

  // reaction 528: nc7h16 => c7h15-1 + h
  qf[528] = sc[45];
  qr[528] = 0.0;

  // reaction 529: c7h15-1 + h => nc7h16
  qf[529] = sc[0] * sc_qss[13];
  qr[529] = 0.0;

  // reaction 530: nc7h16 => c7h15-2 + h
  qf[530] = sc[45];
  qr[530] = 0.0;

  // reaction 531: c7h15-2 + h => nc7h16
  qf[531] = sc[0] * sc_qss[14];
  qr[531] = 0.0;

  // reaction 532: nc7h16 => c7h15-3 + h
  qf[532] = sc[45];
  qr[532] = 0.0;

  // reaction 533: c7h15-3 + h => nc7h16
  qf[533] = sc[0] * sc_qss[15];
  qr[533] = 0.0;

  // reaction 534: nc7h16 => c7h15-4 + h
  qf[534] = sc[45];
  qr[534] = 0.0;

  // reaction 535: c7h15-4 + h => nc7h16
  qf[535] = sc[0] * sc_qss[16];
  qr[535] = 0.0;

  // reaction 536: nc7h16 => nc3h7 + pc4h9
  qf[536] = sc[45];
  qr[536] = 0.0;

  // reaction 537: nc3h7 + pc4h9 => nc7h16
  qf[537] = sc[24] * sc_qss[4];
  qr[537] = 0.0;

  // reaction 538: h + nc7h16 => c7h15-1 + h2
  qf[538] = sc[0] * sc[45];
  qr[538] = 0.0;

  // reaction 539: c7h15-1 + h2 => h + nc7h16
  qf[539] = sc[1] * sc_qss[13];
  qr[539] = 0.0;

  // reaction 540: h + nc7h16 => c7h15-2 + h2
  qf[540] = sc[0] * sc[45];
  qr[540] = 0.0;

  // reaction 541: c7h15-2 + h2 => h + nc7h16
  qf[541] = sc[1] * sc_qss[14];
  qr[541] = 0.0;

  // reaction 542: h + nc7h16 => c7h15-3 + h2
  qf[542] = sc[0] * sc[45];
  qr[542] = 0.0;

  // reaction 543: c7h15-3 + h2 => h + nc7h16
  qf[543] = sc[1] * sc_qss[15];
  qr[543] = 0.0;

  // reaction 544: h + nc7h16 => c7h15-4 + h2
  qf[544] = sc[0] * sc[45];
  qr[544] = 0.0;

  // reaction 545: c7h15-4 + h2 => h + nc7h16
  qf[545] = sc[1] * sc_qss[16];
  qr[545] = 0.0;

  // reaction 546: nc7h16 + o => c7h15-1 + oh
  qf[546] = sc[2] * sc[45];
  qr[546] = 0.0;

  // reaction 547: c7h15-1 + oh => nc7h16 + o
  qf[547] = sc[4] * sc_qss[13];
  qr[547] = 0.0;

  // reaction 548: nc7h16 + o => c7h15-2 + oh
  qf[548] = sc[2] * sc[45];
  qr[548] = 0.0;

  // reaction 549: c7h15-2 + oh => nc7h16 + o
  qf[549] = sc[4] * sc_qss[14];
  qr[549] = 0.0;

  // reaction 550: nc7h16 + o => c7h15-3 + oh
  qf[550] = sc[2] * sc[45];
  qr[550] = 0.0;

  // reaction 551: c7h15-3 + oh => nc7h16 + o
  qf[551] = sc[4] * sc_qss[15];
  qr[551] = 0.0;

  // reaction 552: nc7h16 + o => c7h15-4 + oh
  qf[552] = sc[2] * sc[45];
  qr[552] = 0.0;

  // reaction 553: c7h15-4 + oh => nc7h16 + o
  qf[553] = sc[4] * sc_qss[16];
  qr[553] = 0.0;

  // reaction 554: nc7h16 + oh => c7h15-1 + h2o
  qf[554] = sc[4] * sc[45];
  qr[554] = 0.0;

  // reaction 555: c7h15-1 + h2o => nc7h16 + oh
  qf[555] = sc[5] * sc_qss[13];
  qr[555] = 0.0;

  // reaction 556: nc7h16 + oh => c7h15-2 + h2o
  qf[556] = sc[4] * sc[45];
  qr[556] = 0.0;

  // reaction 557: c7h15-2 + h2o => nc7h16 + oh
  qf[557] = sc[5] * sc_qss[14];
  qr[557] = 0.0;

  // reaction 558: nc7h16 + oh => c7h15-3 + h2o
  qf[558] = sc[4] * sc[45];
  qr[558] = 0.0;

  // reaction 559: c7h15-3 + h2o => nc7h16 + oh
  qf[559] = sc[5] * sc_qss[15];
  qr[559] = 0.0;

  // reaction 560: nc7h16 + oh => c7h15-4 + h2o
  qf[560] = sc[4] * sc[45];
  qr[560] = 0.0;

  // reaction 561: c7h15-4 + h2o => nc7h16 + oh
  qf[561] = sc[5] * sc_qss[16];
  qr[561] = 0.0;

  // reaction 562: ho2 + nc7h16 => c7h15-1 + h2o2
  qf[562] = sc[10] * sc[45];
  qr[562] = 0.0;

  // reaction 563: c7h15-1 + h2o2 => ho2 + nc7h16
  qf[563] = sc[11] * sc_qss[13];
  qr[563] = 0.0;

  // reaction 564: ho2 + nc7h16 => c7h15-2 + h2o2
  qf[564] = sc[10] * sc[45];
  qr[564] = 0.0;

  // reaction 565: c7h15-2 + h2o2 => ho2 + nc7h16
  qf[565] = sc[11] * sc_qss[14];
  qr[565] = 0.0;

  // reaction 566: ho2 + nc7h16 => c7h15-3 + h2o2
  qf[566] = sc[10] * sc[45];
  qr[566] = 0.0;

  // reaction 567: c7h15-3 + h2o2 => ho2 + nc7h16
  qf[567] = sc[11] * sc_qss[15];
  qr[567] = 0.0;

  // reaction 568: ho2 + nc7h16 => c7h15-4 + h2o2
  qf[568] = sc[10] * sc[45];
  qr[568] = 0.0;

  // reaction 569: c7h15-4 + h2o2 => ho2 + nc7h16
  qf[569] = sc[11] * sc_qss[16];
  qr[569] = 0.0;

  // reaction 570: ch3 + nc7h16 => c7h15-1 + ch4
  qf[570] = sc[8] * sc[45];
  qr[570] = 0.0;

  // reaction 571: c7h15-1 + ch4 => ch3 + nc7h16
  qf[571] = sc[9] * sc_qss[13];
  qr[571] = 0.0;

  // reaction 572: ch3 + nc7h16 => c7h15-2 + ch4
  qf[572] = sc[8] * sc[45];
  qr[572] = 0.0;

  // reaction 573: c7h15-2 + ch4 => ch3 + nc7h16
  qf[573] = sc[9] * sc_qss[14];
  qr[573] = 0.0;

  // reaction 574: ch3 + nc7h16 => c7h15-3 + ch4
  qf[574] = sc[8] * sc[45];
  qr[574] = 0.0;

  // reaction 575: c7h15-3 + ch4 => ch3 + nc7h16
  qf[575] = sc[9] * sc_qss[15];
  qr[575] = 0.0;

  // reaction 576: ch3 + nc7h16 => c7h15-4 + ch4
  qf[576] = sc[8] * sc[45];
  qr[576] = 0.0;

  // reaction 577: c7h15-4 + ch4 => ch3 + nc7h16
  qf[577] = sc[9] * sc_qss[16];
  qr[577] = 0.0;

  // reaction 578: nc7h16 + o2 => c7h15-1 + ho2
  qf[578] = sc[3] * sc[45];
  qr[578] = 0.0;

  // reaction 579: c7h15-1 + ho2 => nc7h16 + o2
  qf[579] = sc[10] * sc_qss[13];
  qr[579] = 0.0;

  // reaction 580: nc7h16 + o2 => c7h15-2 + ho2
  qf[580] = sc[3] * sc[45];
  qr[580] = 0.0;

  // reaction 581: c7h15-2 + ho2 => nc7h16 + o2
  qf[581] = sc[10] * sc_qss[14];
  qr[581] = 0.0;

  // reaction 582: nc7h16 + o2 => c7h15-3 + ho2
  qf[582] = sc[3] * sc[45];
  qr[582] = 0.0;

  // reaction 583: c7h15-3 + ho2 => nc7h16 + o2
  qf[583] = sc[10] * sc_qss[15];
  qr[583] = 0.0;

  // reaction 584: nc7h16 + o2 => c7h15-4 + ho2
  qf[584] = sc[3] * sc[45];
  qr[584] = 0.0;

  // reaction 585: c7h15-4 + ho2 => nc7h16 + o2
  qf[585] = sc[10] * sc_qss[16];
  qr[585] = 0.0;

  // reaction 586: c2h5 + nc7h16 => c2h6 + c7h15-1
  qf[586] = sc[15] * sc[45];
  qr[586] = 0.0;

  // reaction 587: c2h6 + c7h15-1 => c2h5 + nc7h16
  qf[587] = sc[13] * sc_qss[13];
  qr[587] = 0.0;

  // reaction 588: c2h5 + nc7h16 => c2h6 + c7h15-2
  qf[588] = sc[15] * sc[45];
  qr[588] = 0.0;

  // reaction 589: c2h6 + c7h15-2 => c2h5 + nc7h16
  qf[589] = sc[13] * sc_qss[14];
  qr[589] = 0.0;

  // reaction 590: c2h5 + nc7h16 => c2h6 + c7h15-3
  qf[590] = sc[15] * sc[45];
  qr[590] = 0.0;

  // reaction 591: c2h6 + c7h15-3 => c2h5 + nc7h16
  qf[591] = sc[13] * sc_qss[15];
  qr[591] = 0.0;

  // reaction 592: c2h5 + nc7h16 => c2h6 + c7h15-4
  qf[592] = sc[15] * sc[45];
  qr[592] = 0.0;

  // reaction 593: c2h6 + c7h15-4 => c2h5 + nc7h16
  qf[593] = sc[13] * sc_qss[16];
  qr[593] = 0.0;

  // reaction 594: c2h3 + nc7h16 => c2h4 + c7h15-1
  qf[594] = sc[17] * sc[45];
  qr[594] = 0.0;

  // reaction 595: c2h4 + c7h15-1 => c2h3 + nc7h16
  qf[595] = sc[14] * sc_qss[13];
  qr[595] = 0.0;

  // reaction 596: c2h3 + nc7h16 => c2h4 + c7h15-2
  qf[596] = sc[17] * sc[45];
  qr[596] = 0.0;

  // reaction 597: c2h4 + c7h15-2 => c2h3 + nc7h16
  qf[597] = sc[14] * sc_qss[14];
  qr[597] = 0.0;

  // reaction 598: c2h3 + nc7h16 => c2h4 + c7h15-3
  qf[598] = sc[17] * sc[45];
  qr[598] = 0.0;

  // reaction 599: c2h4 + c7h15-3 => c2h3 + nc7h16
  qf[599] = sc[14] * sc_qss[15];
  qr[599] = 0.0;

  // reaction 600: c2h3 + nc7h16 => c2h4 + c7h15-4
  qf[600] = sc[17] * sc[45];
  qr[600] = 0.0;

  // reaction 601: c2h4 + c7h15-4 => c2h3 + nc7h16
  qf[601] = sc[14] * sc_qss[16];
  qr[601] = 0.0;

  // reaction 602: ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  qf[602] = sc[31] * sc[45];
  qr[602] = 0.0;

  // reaction 603: c7h15-1 + ch3o2h => ch3o2 + nc7h16
  qf[603] = sc[32] * sc_qss[13];
  qr[603] = 0.0;

  // reaction 604: ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  qf[604] = sc[31] * sc[45];
  qr[604] = 0.0;

  // reaction 605: c7h15-2 + ch3o2h => ch3o2 + nc7h16
  qf[605] = sc[32] * sc_qss[14];
  qr[605] = 0.0;

  // reaction 606: ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  qf[606] = sc[31] * sc[45];
  qr[606] = 0.0;

  // reaction 607: c7h15-3 + ch3o2h => ch3o2 + nc7h16
  qf[607] = sc[32] * sc_qss[15];
  qr[607] = 0.0;

  // reaction 608: ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  qf[608] = sc[31] * sc[45];
  qr[608] = 0.0;

  // reaction 609: c7h15-4 + ch3o2h => ch3o2 + nc7h16
  qf[609] = sc[32] * sc_qss[16];
  qr[609] = 0.0;

  // reaction 610: c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  qf[610] = sc[45] * sc_qss[13];
  qr[610] = 0.0;

  // reaction 611: c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  qf[611] = sc[45] * sc_qss[14];
  qr[611] = 0.0;

  // reaction 612: c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  qf[612] = sc[45] * sc_qss[13];
  qr[612] = 0.0;

  // reaction 613: c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  qf[613] = sc[45] * sc_qss[15];
  qr[613] = 0.0;

  // reaction 614: c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  qf[614] = sc[45] * sc_qss[13];
  qr[614] = 0.0;

  // reaction 615: c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  qf[615] = sc[45] * sc_qss[16];
  qr[615] = 0.0;

  // reaction 616: c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  qf[616] = sc[45] * sc_qss[14];
  qr[616] = 0.0;

  // reaction 617: c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  qf[617] = sc[45] * sc_qss[15];
  qr[617] = 0.0;

  // reaction 618: c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  qf[618] = sc[45] * sc_qss[14];
  qr[618] = 0.0;

  // reaction 619: c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  qf[619] = sc[45] * sc_qss[16];
  qr[619] = 0.0;

  // reaction 620: c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  qf[620] = sc[45] * sc_qss[15];
  qr[620] = 0.0;

  // reaction 621: c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  qf[621] = sc[45] * sc_qss[16];
  qr[621] = 0.0;

  // reaction 622: c7h15-2 => c3h6 + pc4h9
  qf[622] = sc_qss[14];
  qr[622] = 0.0;

  // reaction 623: c3h6 + pc4h9 => c7h15-2
  qf[623] = sc[22] * sc_qss[4];
  qr[623] = 0.0;

  // reaction 624: c7h15-2 => c7h14-2 + h
  qf[624] = sc_qss[14];
  qr[624] = 0.0;

  // reaction 625: c7h14-2 + h => c7h15-2
  qf[625] = sc[0] * sc_qss[17];
  qr[625] = 0.0;

  // reaction 626: c7h15-3 => c4h8-1 + nc3h7
  qf[626] = sc_qss[15];
  qr[626] = 0.0;

  // reaction 627: c4h8-1 + nc3h7 => c7h15-3
  qf[627] = sc[24] * sc[26];
  qr[627] = 0.0;

  // reaction 628: c7h15-3 => c7h14-2 + h
  qf[628] = sc_qss[15];
  qr[628] = 0.0;

  // reaction 629: c7h14-2 + h => c7h15-3
  qf[629] = sc[0] * sc_qss[17];
  qr[629] = 0.0;

  // reaction 630: c7h15-3 => c7h14-3 + h
  qf[630] = sc_qss[15];
  qr[630] = 0.0;

  // reaction 631: c7h14-3 + h => c7h15-3
  qf[631] = sc[0] * sc_qss[18];
  qr[631] = 0.0;

  // reaction 632: c7h15-4 => c2h5 + c5h10-1
  qf[632] = sc_qss[16];
  qr[632] = 0.0;

  // reaction 633: c2h5 + c5h10-1 => c7h15-4
  qf[633] = sc[15] * sc[30];
  qr[633] = 0.0;

  // reaction 634: c7h15-4 => c7h14-3 + h
  qf[634] = sc_qss[16];
  qr[634] = 0.0;

  // reaction 635: c7h14-3 + h => c7h15-4
  qf[635] = sc[0] * sc_qss[18];
  qr[635] = 0.0;

  // reaction 636: c7h15-2 + o2 => c7h14-2 + ho2
  qf[636] = sc[3] * sc_qss[14];
  qr[636] = 0.0;

  // reaction 637: c7h14-2 + ho2 => c7h15-2 + o2
  qf[637] = sc[10] * sc_qss[17];
  qr[637] = 0.0;

  // reaction 638: c7h15-3 + o2 => c7h14-2 + ho2
  qf[638] = sc[3] * sc_qss[15];
  qr[638] = 0.0;

  // reaction 639: c7h14-2 + ho2 => c7h15-3 + o2
  qf[639] = sc[10] * sc_qss[17];
  qr[639] = 0.0;

  // reaction 640: c7h15-3 + o2 => c7h14-3 + ho2
  qf[640] = sc[3] * sc_qss[15];
  qr[640] = 0.0;

  // reaction 641: c7h14-3 + ho2 => c7h15-3 + o2
  qf[641] = sc[10] * sc_qss[18];
  qr[641] = 0.0;

  // reaction 642: c7h15-4 + o2 => c7h14-3 + ho2
  qf[642] = sc[3] * sc_qss[16];
  qr[642] = 0.0;

  // reaction 643: c7h14-3 + ho2 => c7h15-4 + o2
  qf[643] = sc[10] * sc_qss[18];
  qr[643] = 0.0;

  // reaction 644: c7h15-1 => c7h15-3
  qf[644] = sc_qss[13];
  qr[644] = 0.0;

  // reaction 645: c7h15-3 => c7h15-1
  qf[645] = sc_qss[15];
  qr[645] = 0.0;

  // reaction 646: c7h15-1 => c7h15-4
  qf[646] = sc_qss[13];
  qr[646] = 0.0;

  // reaction 647: c7h15-4 => c7h15-1
  qf[647] = sc_qss[16];
  qr[647] = 0.0;

  // reaction 648: c7h15-2 => c7h15-3
  qf[648] = sc_qss[14];
  qr[648] = 0.0;

  // reaction 649: c7h15-3 => c7h15-2
  qf[649] = sc_qss[15];
  qr[649] = 0.0;

  // reaction 650: c7h15-1 => c7h15-2
  qf[650] = sc_qss[13];
  qr[650] = 0.0;

  // reaction 651: c7h15-2 => c7h15-1
  qf[651] = sc_qss[14];
  qr[651] = 0.0;

  // reaction 652: c7h14-2 + oh => c2h5cho + pc4h9
  qf[652] = sc[4] * sc_qss[17];
  qr[652] = 0.0;

  // reaction 653: c7h14-3 + oh => c2h5cho + pc4h9
  qf[653] = sc[4] * sc_qss[18];
  qr[653] = 0.0;

  // reaction 654: c7h14-2 + o => c5h10-1 + ch3cho
  qf[654] = sc[2] * sc_qss[17];
  qr[654] = 0.0;

  // reaction 655: c7h14-3 + o => c5h10-1 + ch3cho
  qf[655] = sc[2] * sc_qss[18];
  qr[655] = 0.0;

  // reaction 656: c7h14-2 => c4h7 + nc3h7
  qf[656] = sc_qss[17];
  qr[656] = 0.0;

  // reaction 657: c4h7 + nc3h7 => c7h14-2
  qf[657] = sc[24] * sc[25];
  qr[657] = 0.0;

  // reaction 658: c7h14-3 => c4h7 + nc3h7
  qf[658] = sc_qss[18];
  qr[658] = 0.0;

  // reaction 659: c4h7 + nc3h7 => c7h14-3
  qf[659] = sc[24] * sc[25];
  qr[659] = 0.0;

  // reaction 660: c7h15o2-1 => c7h15-1 + o2
  qf[660] = sc[46];
  qr[660] = 0.0;

  // reaction 661: c7h15-1 + o2 => c7h15o2-1
  qf[661] = sc[3] * sc_qss[13];
  qr[661] = 0.0;

  // reaction 662: c7h15o2-2 => c7h15-2 + o2
  qf[662] = sc[47];
  qr[662] = 0.0;

  // reaction 663: c7h15-2 + o2 => c7h15o2-2
  qf[663] = sc[3] * sc_qss[14];
  qr[663] = 0.0;

  // reaction 664: c7h15o2-3 => c7h15-3 + o2
  qf[664] = sc[48];
  qr[664] = 0.0;

  // reaction 665: c7h15-3 + o2 => c7h15o2-3
  qf[665] = sc[3] * sc_qss[15];
  qr[665] = 0.0;

  // reaction 666: c7h15o2-4 => c7h15-4 + o2
  qf[666] = sc[49];
  qr[666] = 0.0;

  // reaction 667: c7h15-4 + o2 => c7h15o2-4
  qf[667] = sc[3] * sc_qss[16];
  qr[667] = 0.0;

  // reaction 668: c7h15o2-1 => c7h14ooh1-3
  qf[668] = sc[46];
  qr[668] = 0.0;

  // reaction 669: c7h14ooh1-3 => c7h15o2-1
  qf[669] = sc_qss[19];
  qr[669] = 0.0;

  // reaction 670: c7h15o2-2 => c7h14ooh2-3
  qf[670] = sc[47];
  qr[670] = 0.0;

  // reaction 671: c7h14ooh2-3 => c7h15o2-2
  qf[671] = sc_qss[20];
  qr[671] = 0.0;

  // reaction 672: c7h15o2-2 => c7h14ooh2-4
  qf[672] = sc[47];
  qr[672] = 0.0;

  // reaction 673: c7h14ooh2-4 => c7h15o2-2
  qf[673] = sc_qss[21];
  qr[673] = 0.0;

  // reaction 674: c7h15o2-3 => c7h14ooh3-2
  qf[674] = sc[48];
  qr[674] = 0.0;

  // reaction 675: c7h14ooh3-2 => c7h15o2-3
  qf[675] = sc_qss[22];
  qr[675] = 0.0;

  // reaction 676: c7h15o2-3 => c7h14ooh3-4
  qf[676] = sc[48];
  qr[676] = 0.0;

  // reaction 677: c7h14ooh3-4 => c7h15o2-3
  qf[677] = sc_qss[23];
  qr[677] = 0.0;

  // reaction 678: c7h15o2-3 => c7h14ooh3-5
  qf[678] = sc[48];
  qr[678] = 0.0;

  // reaction 679: c7h14ooh3-5 => c7h15o2-3
  qf[679] = sc_qss[24];
  qr[679] = 0.0;

  // reaction 680: c7h15o2-4 => c7h14ooh4-2
  qf[680] = sc[49];
  qr[680] = 0.0;

  // reaction 681: c7h14ooh4-2 => c7h15o2-4
  qf[681] = sc_qss[25];
  qr[681] = 0.0;

  // reaction 682: c7h15o2-4 => c7h14ooh4-3
  qf[682] = sc[49];
  qr[682] = 0.0;

  // reaction 683: c7h14ooh4-3 => c7h15o2-4
  qf[683] = sc[50];
  qr[683] = 0.0;

  // reaction 684: c7h14ooh2-3 => c7h14-2 + ho2
  qf[684] = sc_qss[20];
  qr[684] = 0.0;

  // reaction 685: c7h14-2 + ho2 => c7h14ooh2-3
  qf[685] = sc[10] * sc_qss[17];
  qr[685] = 0.0;

  // reaction 686: c7h14ooh3-2 => c7h14-2 + ho2
  qf[686] = sc_qss[22];
  qr[686] = 0.0;

  // reaction 687: c7h14-2 + ho2 => c7h14ooh3-2
  qf[687] = sc[10] * sc_qss[17];
  qr[687] = 0.0;

  // reaction 688: c7h14ooh3-4 => c7h14-3 + ho2
  qf[688] = sc_qss[23];
  qr[688] = 0.0;

  // reaction 689: c7h14-3 + ho2 => c7h14ooh3-4
  qf[689] = sc[10] * sc_qss[18];
  qr[689] = 0.0;

  // reaction 690: c7h14ooh4-3 => c7h14-3 + ho2
  qf[690] = sc[50];
  qr[690] = 0.0;

  // reaction 691: c7h14-3 + ho2 => c7h14ooh4-3
  qf[691] = sc[10] * sc_qss[18];
  qr[691] = 0.0;

  // reaction 692: c7h14ooh1-3 => c7h14o1-3 + oh
  qf[692] = sc_qss[19];
  qr[692] = 0.0;

  // reaction 693: c7h14ooh2-4 => c7h14o2-4 + oh
  qf[693] = sc_qss[21];
  qr[693] = 0.0;

  // reaction 694: c7h14ooh4-2 => c7h14o2-4 + oh
  qf[694] = sc_qss[25];
  qr[694] = 0.0;

  // reaction 695: c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  qf[695] = sc_qss[21];
  qr[695] = 0.0;

  // reaction 696: c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  qf[696] = sc_qss[24];
  qr[696] = 0.0;

  // reaction 697: c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  qf[697] = sc_qss[25];
  qr[697] = 0.0;

  // reaction 698: c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  qf[698] = sc[51];
  qr[698] = 0.0;

  // reaction 699: c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  qf[699] = sc[3] * sc_qss[19];
  qr[699] = 0.0;

  // reaction 700: c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  qf[700] = sc_qss[26];
  qr[700] = 0.0;

  // reaction 701: c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  qf[701] = sc[3] * sc_qss[21];
  qr[701] = 0.0;

  // reaction 702: c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  qf[702] = sc_qss[27];
  qr[702] = 0.0;

  // reaction 703: c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  qf[703] = sc[3] * sc_qss[24];
  qr[703] = 0.0;

  // reaction 704: c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  qf[704] = sc_qss[28];
  qr[704] = 0.0;

  // reaction 705: c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  qf[705] = sc[3] * sc_qss[25];
  qr[705] = 0.0;

  // reaction 706: c7h14ooh1-3o2 => nc7ket13 + oh
  qf[706] = sc[51];
  qr[706] = 0.0;

  // reaction 707: nc7ket13 + oh => c7h14ooh1-3o2
  qf[707] = sc[4] * sc_qss[29];
  qr[707] = 0.0;

  // reaction 708: c7h14ooh2-4o2 => nc7ket24 + oh
  qf[708] = sc_qss[26];
  qr[708] = 0.0;

  // reaction 709: nc7ket24 + oh => c7h14ooh2-4o2
  qf[709] = sc[4] * sc_qss[30];
  qr[709] = 0.0;

  // reaction 710: c7h14ooh3-5o2 => nc7ket35 + oh
  qf[710] = sc_qss[27];
  qr[710] = 0.0;

  // reaction 711: nc7ket35 + oh => c7h14ooh3-5o2
  qf[711] = sc[4] * sc_qss[31];
  qr[711] = 0.0;

  // reaction 712: c7h14ooh4-2o2 => nc7ket42 + oh
  qf[712] = sc_qss[28];
  qr[712] = 0.0;

  // reaction 713: nc7ket42 + oh => c7h14ooh4-2o2
  qf[713] = sc[4] * sc_qss[32];
  qr[713] = 0.0;

  // reaction 714: nc7ket13 => ch2cho + nc4h9cho + oh
  qf[714] = sc_qss[29];
  qr[714] = 0.0;

  // reaction 715: nc7ket24 => ch3coch2 + nc3h7cho + oh
  qf[715] = sc_qss[30];
  qr[715] = 0.0;

  // reaction 716: nc7ket35 => c2h5cho + c2h5coch2 + oh
  qf[716] = sc_qss[31];
  qr[716] = 0.0;

  // reaction 717: nc7ket42 => ch3cho + nc3h7coch2 + oh
  qf[717] = sc_qss[32];
  qr[717] = 0.0;

  // reaction 718: c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  qf[718] = sc[4] * sc[53];
  qr[718] = 0.0;

  // reaction 719: c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
  qf[719] = sc[4] * sc[52];
  qr[719] = 0.0;

  // reaction 720: c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  qf[720] = sc[4] * sc[53];
  qr[720] = 0.0;

  // reaction 721: c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  qf[721] = sc[10] * sc[53];
  qr[721] = 0.0;

  // reaction 722: c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
  qf[722] = sc[10] * sc[52];
  qr[722] = 0.0;

  // reaction 723: c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  qf[723] = sc[10] * sc[53];
  qr[723] = 0.0;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 55; ++i) {
    mixture += sc[i];
  }

  for (int i = 0; i < 33; ++i) {
    mixture += sc_qss[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[55];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[33];
  gibbs_qss(g_RT_qss, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  ch3 + h (+M) <=> ch4 (+M)
  k_f = 2138000000 * exp((-0.4) * tc[0]);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
  redP = Corr / k_f * 3.31e+18 * exp(-4 * tc[0] - (1060.78073151635) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (1) * exp(-tc[1] * 1e+15) + 0 * exp(-tc[1] * 1e+15) + exp(-40 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[0] + g_RT[8] - g_RT[9])) * (refC);
  // reaction 1:  c2h4 + h (+M) <=> c2h5 (+M)
  k_f = 1081000 * exp((0.45) * tc[0] - (916.860765096199) * invT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
  redP = Corr / k_f * 1.112e+22 * exp(-5 * tc[0] - (2238.30772949939) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.0105263157894737) + exp(-200 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[0] + g_RT[14] - g_RT[15])) * (refC);
  // reaction 2:  2 ch3 (+M) <=> c2h6 (+M)
  k_f = 92140000000 * exp((-1.17) * tc[0] - (319.945156118641) * invT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
  redP =
    Corr / k_f * 1.135e+24 * exp(-5.246 * tc[0] - (857.984415197047) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.595) * exp(-tc[1] * 0.000892857142857143) +
    0.405 * exp(-tc[1] * 0.014367816091954) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[13])) * (refC);
  // reaction 3:  h + o2 (+M) <=> ho2 (+M)
  k_f = 1475000 * exp((0.6) * tc[0]);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  redP = Corr / k_f * 35000 * exp(-0.41 * tc[0] - (-561.589799038067) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.5) * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) +
    exp(-1e+100 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[10])) * (refC);
  // reaction 4:  2 oh (+M) <=> h2o2 (+M)
  k_f = 123600000 * exp((-0.37) * tc[0]);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  redP =
    Corr / k_f * 3.041e+18 * exp(-4.63 * tc[0] - (1031.09094823387) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.53) * exp(-tc[1] * 0.01) + 0.47 * exp(-tc[1] * 0.0005) +
    exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[11])) * (refC);
  // reaction 5:  c2h3 + h (+M) <=> c2h4 (+M)
  k_f = 6100000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
  Corr = mixture;
  redP = Corr / k_f * 9.8e+17 * exp(-3.86 * tc[0] - (1670.67933047167) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00480769230769231) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[0] - g_RT[14] + g_RT[17])) * (refC);
  // reaction 6:  c2h2 + h (+M) <=> c2h3 (+M)
  k_f = 311000 * exp((0.58) * tc[0] - (1302.82794776842) * invT);
  Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
  redP =
    Corr / k_f * 2.254e+28 * exp(-7.269 * tc[0] - (3309.65601099764) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.00148148148148148) + exp(-1e+15 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[0] + g_RT[16] - g_RT[17])) * (refC);
  // reaction 7:  co + o (+M) <=> co2 (+M)
  k_f = 18000 * exp(-(1199.66853127845) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  redP = Corr / k_f * 1350000000000 *
         exp(-2.788 * tc[0] - (2108.98104638758) * invT);
  Corr = redP / (1. + redP);
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[7])) * (refC);
  // reaction 8:  ch3o (+M) <=> ch2o + h (+M)
  k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
  Corr = mixture;
  redP = Corr / k_f * 2.344e+19 * exp(-2.7 * tc[0] - (15398.4299736244) * invT);
  Corr = redP / (1. + redP);
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[12] + g_RT_qss[1])) * (refCinv);
  // reaction 9:  c2h4 (+M) <=> c2h2 + h2 (+M)
  k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
  Corr = mixture;
  redP = Corr / k_f * 1500000000 * exp(-(27899.8416022111) * invT);
  Corr = redP / (1. + redP);
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[16])) * (refCinv);
  // reaction 10:  ch3co (+M) <=> ch3 + co (+M)
  k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
  Corr = mixture;
  redP = Corr / k_f * 1200000000 * exp(-(6299.26622254348) * invT);
  Corr = redP / (1. + redP);
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[6] - g_RT[8] + g_RT_qss[2])) * (refCinv);
  // reaction 11:  hco + M => co + h + M
  k_f = 186000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[6] + g_RT_qss[0])) * (refCinv);
  // reaction 12:  co + h + M => hco + M
  k_f = 64.67 * exp(-(-222.421766285686) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[0] + g_RT[6] - g_RT_qss[0])) * (refC);
  // reaction 13:  h2o + M => h + oh + M
  k_f = 1.837e+21 * exp((-3) * tc[0] - (61694.3632276586) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[4] + g_RT[5])) * (refCinv);
  // reaction 14:  h + oh + M => h2o + M
  k_f = 22500000000 * exp((-2) * tc[0]);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[5])) * (refC);
  // reaction 15:  ch2o + M => h + hco + M
  k_f = 6.283e+23 * exp((-3.57) * tc[0] - (46899.7932529999) * invT);
  Corr = mixture;
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[12] - g_RT_qss[0])) * (refCinv);
  // reaction 16:  h + hco + M => ch2o + M
  k_f = 2660000000000 * exp((-2.57) * tc[0] - (214.873516298615) * invT);
  Corr = mixture;
  qf[16] *= Corr * k_f;
  qr[16] *= Corr * k_f * exp(-(g_RT[0] - g_RT[12] + g_RT_qss[0])) * (refC);
  // reaction 17:  oh + M => h + o + M
  k_f = 3.909e+16 * exp((-2) * tc[0] - (52988.714909237) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[17] *= Corr * k_f;
  qr[17] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[2] + g_RT[4])) * (refCinv);
  // reaction 18:  h + o + M => oh + M
  k_f = 4720000 * exp((-1) * tc[0]);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[18] *= Corr * k_f;
  qr[18] *= Corr * k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[4])) * (refC);
  // reaction 19:  o2 + M => 2 o + M
  k_f = 647300000000000 * exp((-1.5) * tc[0] - (61140.8248952734) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[19] *= Corr * k_f;
  qr[19] *= Corr * k_f * exp(-(-2.000000 * g_RT[2] + g_RT[3])) * (refCinv);
  // reaction 20:  2 o + M => o2 + M
  k_f = 6170 * exp((-0.5) * tc[0]);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[20] *= Corr * k_f;
  qr[20] *= Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC);
  // reaction 21:  h2 + M => 2 h + M
  k_f = 45700000000000 * exp((-1.4) * tc[0] - (52535.8199100127) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[21] *= Corr * k_f;
  qr[21] *= Corr * k_f * exp(-(-2.000000 * g_RT[0] + g_RT[1])) * (refCinv);
  // reaction 22:  2 h + M => h2 + M
  k_f = 2423 * exp((-0.4) * tc[0] - (-1529.77866404635) * invT);
  Corr = mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
  qf[22] *= Corr * k_f;
  qr[22] *= Corr * k_f * exp(-(2.000000 * g_RT[0] - g_RT[1])) * (refC);
  // reaction 23:  ch2o + M => co + h2 + M
  k_f = 1.826e+26 * exp((-4.42) * tc[0] - (43840.2359249072) * invT);
  Corr = mixture;
  qf[23] *= Corr * k_f;
  qr[23] *= Corr * k_f * exp(-(-g_RT[1] - g_RT[6] + g_RT[12])) * (refCinv);
  // reaction 24:  co + h2 + M => ch2o + M
  k_f = 5.07e+15 * exp((-3.42) * tc[0] - (42446.3257606281) * invT);
  Corr = mixture;
  qf[24] *= Corr * k_f;
  qr[24] *= Corr * k_f * exp(-(g_RT[1] + g_RT[6] - g_RT[12])) * (refC);
  // reaction 25:  c2h5o + M => ch2o + ch3 + M
  k_f = 1.35e+32 * exp((-6.96) * tc[0] - (11976.5566461523) * invT);
  Corr = mixture;
  qf[25] *= Corr * k_f;
  qr[25] *= Corr * k_f * exp(-(-g_RT[8] - g_RT[12] + g_RT_qss[6])) * (refCinv);
  // reaction 26:  ch2o + ch3 + M => c2h5o + M
  k_f = 6.442e+24 * exp((-6.99) * tc[0] - (8479.20081880953) * invT);
  Corr = mixture;
  qf[26] *= Corr * k_f;
  qr[26] *= Corr * k_f * exp(-(g_RT[8] + g_RT[12] - g_RT_qss[6])) * (refC);
  // reaction 27:  ch3o2 + M => ch3 + o2 + M
  k_f = 4.343e+21 * exp((-3.42) * tc[0] - (15333.0118070698) * invT);
  Corr = mixture;
  qf[27] *= Corr * k_f;
  qr[27] *= Corr * k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[31])) * (refCinv);
  // reaction 28:  ch3 + o2 + M => ch3o2 + M
  k_f = 54400000000000 * exp((-3.3) * tc[0]);
  Corr = mixture;
  qf[28] *= Corr * k_f;
  qr[28] *= Corr * k_f * exp(-(g_RT[3] + g_RT[8] - g_RT[31])) * (refC);
  // reaction 29:  c2h5o + M => ch3cho + h + M
  k_f = 1.16e+29 * exp((-5.89) * tc[0] - (12716.2851448853) * invT);
  Corr = mixture;
  qf[29] *= Corr * k_f;
  qr[29] *= Corr * k_f * exp(-(-g_RT[0] - g_RT[20] + g_RT_qss[6])) * (refCinv);
  // reaction 30:  ch3cho + h + M => c2h5o + M
  k_f = 3.063e+18 * exp((-4.78) * tc[0] - (3069.62166140879) * invT);
  Corr = mixture;
  qf[30] *= Corr * k_f;
  qr[30] *= Corr * k_f * exp(-(g_RT[0] + g_RT[20] - g_RT_qss[6])) * (refC);
  // reaction 31:  c3h4-a + M => c3h3 + h + M
  k_f = 114300000000 * exp(-(35225.1666063304) * invT);
  Corr = mixture;
  qf[31] *= Corr * k_f;
  qr[31] *= Corr * k_f * exp(-(-g_RT[0] + g_RT[21] - g_RT[38])) * (refCinv);
  // reaction 32:  c3h3 + h + M => c3h4-a + M
  k_f = 1798 * exp((-0.38) * tc[0] - (5339.12882418808) * invT);
  Corr = mixture;
  qf[32] *= Corr * k_f;
  qr[32] *= Corr * k_f * exp(-(g_RT[0] - g_RT[21] + g_RT[38])) * (refC);
  // reaction 33:  ch4 + h => ch3 + h2
  k_f = 0.01727 * exp((3) * tc[0] - (4138.45385957801) * invT);
  qf[33] *= k_f;
  qr[33] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[8] + g_RT[9]));
  // reaction 34:  ch3 + h2 => ch4 + h
  k_f = 0.000661 * exp((3) * tc[0] - (3896.90985999175) * invT);
  qf[34] *= k_f;
  qr[34] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[8] - g_RT[9]));
  // reaction 35:  ch4 + oh => ch3 + h2o
  k_f = 0.193 * exp((2.4) * tc[0] - (1059.77429818474) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[8] + g_RT[9]));
  // reaction 36:  ch3 + h2o => ch4 + oh
  k_f = 0.03199 * exp((2.4) * tc[0] - (8443.9756522032) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[8] - g_RT[9]));
  // reaction 37:  ch4 + o => ch3 + oh
  k_f = 3150000 * exp((0.5) * tc[0] - (5178.09949113057) * invT);
  qf[37] *= k_f;
  qr[37] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[8] + g_RT[9]));
  // reaction 38:  ch3 + oh => ch4 + o
  k_f = 52960 * exp((0.5) * tc[0] - (3882.31657668341) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[8] - g_RT[9]));
  // reaction 39:  c2h6 + ch3 => c2h5 + ch4
  k_f = 1.51e-13 * exp((6) * tc[0] - (3042.95117812114) * invT);
  qf[39] *= k_f;
  qr[39] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[13] - g_RT[15]));
  // reaction 40:  c2h5 + ch4 => c2h6 + ch3
  k_f = 9.649e-16 * exp((6.56) * tc[0] - (5142.87432452423) * invT);
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[13] + g_RT[15]));
  // reaction 41:  hco + oh => co + h2o
  k_f = 102000000;
  qf[41] *= k_f;
  qr[41] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[6] + g_RT_qss[0]));
  // reaction 42:  co + h2o => hco + oh
  k_f = 2896000000 * exp(-(52938.3932426565) * invT);
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[6] - g_RT_qss[0]));
  // reaction 43:  co + oh => co2 + h
  k_f = 0.14 * exp((1.95) * tc[0] - (-677.832848838957) * invT);
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[6] - g_RT[7]));
  // reaction 44:  co2 + h => co + oh
  k_f = 15.68 * exp((1.95) * tc[0] - (10562.5178152411) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(g_RT[0] - g_RT[4] - g_RT[6] + g_RT[7]));
  // reaction 45:  h + o2 => o + oh
  k_f = 197000000 * exp(-(8323.20365241006) * invT);
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(g_RT[0] - g_RT[2] + g_RT[3] - g_RT[4]));
  // reaction 46:  o + oh => h + o2
  k_f = 15550000 * exp(-(213.867082967006) * invT);
  qf[46] *= k_f;
  qr[46] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[3] + g_RT[4]));
  // reaction 47:  h2 + o => h + oh
  k_f = 0.0508 * exp((2.67) * tc[0] - (3166.2392612433) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[2] - g_RT[4]));
  // reaction 48:  h + oh => h2 + o
  k_f = 0.02231 * exp((2.67) * tc[0] - (2112.00034638241) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[2] + g_RT[4]));
  // reaction 49:  h2o + o => 2 oh
  k_f = 2.97 * exp((2.02) * tc[0] - (6743.10332178324) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(g_RT[2] - 2.000000 * g_RT[4] + g_RT[5]));
  // reaction 50:  2 oh => h2o + o
  k_f = 0.3013 * exp((2.02) * tc[0] - (-1937.38416334817) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(-g_RT[2] + 2.000000 * g_RT[4] - g_RT[5]));
  // reaction 51:  h2 + oh => h + h2o
  k_f = 216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[4] - g_RT[5]));
  // reaction 52:  h + h2o => h2 + oh
  k_f = 935.2 * exp((1.51) * tc[0] - (9349.76565065169) * invT);
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[4] + g_RT[5]));
  // reaction 53:  h2o2 + oh => h2o + ho2
  k_f = 1000000;
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT[11]));
  // reaction 54:  h2o + ho2 => h2o2 + oh
  k_f = 168500 * exp((0.33) * tc[0] - (15831.1963062165) * invT);
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[10] - g_RT[11]));
  // reaction 55:  c2h4 + o => ch3 + hco
  k_f = 10.2 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(g_RT[2] - g_RT[8] + g_RT[14] - g_RT_qss[0]));
  // reaction 56:  ch3 + hco => c2h4 + o
  k_f = 285.1 * exp((1.05) * tc[0] - (15987.1934726159) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(-g_RT[2] + g_RT[8] - g_RT[14] + g_RT_qss[0]));
  // reaction 57:  c2h6 + h => c2h5 + h2
  k_f = 0.000554 * exp((3.5) * tc[0] - (2600.12051221299) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[13] - g_RT[15]));
  // reaction 58:  c2h5 + h2 => c2h6 + h
  k_f = 1.355e-07 * exp((4.06) * tc[0] - (4456.9900090324) * invT);
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[13] + g_RT[15]));
  // reaction 59:  c2h5 + o2 => c2h4 + ho2
  k_f = 1.22e+24 * exp((-5.76) * tc[0] - (5082.48832462767) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[14] + g_RT[15]));
  // reaction 60:  c2h4 + ho2 => c2h5 + o2
  k_f = 1.259e+24 * exp((-5.63) * tc[0] - (11221.7316474452) * invT);
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[14] - g_RT[15]));
  // reaction 61:  c2h6 + oh => c2h5 + h2o
  k_f = 58 * exp((1.73) * tc[0] - (583.731332333475) * invT);
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[13] - g_RT[15]));
  // reaction 62:  c2h5 + h2o => c2h6 + oh
  k_f = 0.06142 * exp((2.29) * tc[0] - (10064.3333160944) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[13] + g_RT[15]));
  // reaction 63:  c2h6 + o => c2h5 + oh
  k_f = 13 * exp((2.13) * tc[0] - (2611.6944955265) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[13] - g_RT[15]));
  // reaction 64:  c2h5 + oh => c2h6 + o
  k_f = 0.001397 * exp((2.69) * tc[0] - (3414.32507748502) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[13] + g_RT[15]));
  // reaction 65:  ch3 + ho2 => ch3o + oh
  k_f = 11000000;
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(-g_RT[4] + g_RT[8] + g_RT[10] - g_RT_qss[1]));
  // reaction 66:  ch3o + oh => ch3 + ho2
  k_f = 478000000 * exp((-0.35) * tc[0] - (12353.9691455059) * invT);
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(g_RT[4] - g_RT[8] - g_RT[10] + g_RT_qss[1]));
  // reaction 67:  co + ho2 => co2 + oh
  k_f = 30100000 * exp(-(11573.9833135086) * invT);
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[7] + g_RT[10]));
  // reaction 68:  co2 + oh => co + ho2
  k_f = 6435000000 * exp((-0.33) * tc[0] - (42577.1620937373) * invT);
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[4] - g_RT[6] + g_RT[7] - g_RT[10]));
  // reaction 69:  co + o2 => co2 + o
  k_f = 16200000 * exp(-(24003.4349588851) * invT);
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[6] - g_RT[7]));
  // reaction 70:  co2 + o => co + o2
  k_f = 143300000 * exp(-(27133.4426201905) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[6] + g_RT[7]));
  // reaction 71:  h + hco => co + h2
  k_f = 73400000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[6] + g_RT_qss[0]));
  // reaction 72:  co + h2 => h + hco
  k_f = 481300000 * exp(-(45289.4999224248) * invT);
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[6] - g_RT_qss[0]));
  // reaction 73:  hco + o => co + oh
  k_f = 30200000;
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[6] + g_RT_qss[0]));
  // reaction 74:  co + oh => hco + o
  k_f = 86970000 * exp(-(44232.7449242349) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[6] - g_RT_qss[0]));
  // reaction 75:  ch2o + oh => h2o + hco
  k_f = 3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[12] - g_RT_qss[0]));
  // reaction 76:  h2o + hco => ch2o + oh
  k_f = 1186 * exp((1.18) * tc[0] - (14784.5056413427) * invT);
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[12] + g_RT_qss[0]));
  // reaction 77:  ch2o + h => h2 + hco
  k_f = 933.4 * exp((1.5) * tc[0] - (1497.57279743485) * invT);
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[12] - g_RT_qss[0]));
  // reaction 78:  h2 + hco => ch2o + h
  k_f = 74.53 * exp((1.5) * tc[0] - (8881.7741514533) * invT);
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[12] + g_RT_qss[0]));
  // reaction 79:  ch2o + o => hco + oh
  k_f = 416000 * exp((0.57) * tc[0] - (1389.88443095264) * invT);
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[12] - g_RT_qss[0]));
  // reaction 80:  hco + oh => ch2o + o
  k_f = 14590 * exp((0.57) * tc[0] - (7719.3436534444) * invT);
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[12] + g_RT_qss[0]));
  // reaction 81:  ch3 + oh => ch2o + h2
  k_f = 22500000 * exp(-(2163.83166296029) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(-g_RT[1] + g_RT[4] + g_RT[8] - g_RT[12]));
  // reaction 82:  ch2o + h2 => ch3 + oh
  k_f = 675600000 * exp(-(38254.5309344748) * invT);
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[1] - g_RT[4] - g_RT[8] + g_RT[12]));
  // reaction 83:  ch3 + o => ch2o + h
  k_f = 80000000;
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[8] - g_RT[12]));
  // reaction 84:  ch2o + h => ch3 + o
  k_f = 1055000000 * exp(-(35038.9764399826) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[8] + g_RT[12]));
  // reaction 85:  ch3 + o2 => ch3o + o
  k_f = 1995000000000 * exp((-1.57) * tc[0] - (14698.9588081559) * invT);
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[8] - g_RT_qss[1]));
  // reaction 86:  ch3o + o => ch3 + o2
  k_f = 3585000000000 * exp((-1.59) * tc[0] - (-820.746381927498) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[8] + g_RT_qss[1]));
  // reaction 87:  ch2o + ch3 => ch4 + hco
  k_f = 3.636e-12 * exp((5.42) * tc[0] - (502.21023247311) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[12] - g_RT_qss[0]));
  // reaction 88:  ch4 + hco => ch2o + ch3
  k_f = 7.584e-12 * exp((5.42) * tc[0] - (8126.94915274622) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[12] + g_RT_qss[0]));
  // reaction 89:  ch3 + hco => ch4 + co
  k_f = 121000000;
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(-g_RT[6] + g_RT[8] - g_RT[9] + g_RT_qss[0]));
  // reaction 90:  ch4 + co => ch3 + hco
  k_f = 20730000000 * exp(-(45531.043922011) * invT);
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(g_RT[6] - g_RT[8] + g_RT[9] - g_RT_qss[0]));
  // reaction 91:  ho2 + o => o2 + oh
  k_f = 32500000;
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[4] + g_RT[10]));
  // reaction 92:  o2 + oh => ho2 + o
  k_f = 785700000 * exp((-0.33) * tc[0] - (27873.1711189234) * invT);
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[4] - g_RT[10]));
  // reaction 93:  hco + ho2 => ch2o + o2
  k_f = 29740 * exp((0.33) * tc[0] - (-1942.91954667202) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[12] + g_RT_qss[0]));
  // reaction 94:  ch2o + o2 => hco + ho2
  k_f = 20500000 * exp(-(19600.2891330938) * invT);
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[12] - g_RT_qss[0]));
  // reaction 95:  ch3o + o2 => ch2o + ho2
  k_f = 55000 * exp(-(1219.79719791064) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[12] + g_RT_qss[1]));
  // reaction 96:  ch2o + ho2 => ch3o + o2
  k_f = 1318 * exp((0.35) * tc[0] - (15795.9711396102) * invT);
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[12] - g_RT_qss[1]));
  // reaction 97:  ch3 + ho2 => ch4 + o2
  k_f = 3600000;
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[9] + g_RT[10]));
  // reaction 98:  ch4 + o2 => ch3 + ho2
  k_f = 5177000000 * exp((-0.33) * tc[0] - (29166.4379500416) * invT);
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(g_RT[3] - g_RT[8] + g_RT[9] - g_RT[10]));
  // reaction 99:  hco + o2 => co + ho2
  k_f = 7580000 * exp(-(206.318832979935) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[10] + g_RT_qss[0]));
  // reaction 100:  co + ho2 => hco + o2
  k_f = 902900 * exp((0.33) * tc[0] - (16570.9248049494) * invT);
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(-g_RT[3] + g_RT[6] + g_RT[10] - g_RT_qss[0]));
  // reaction 101:  h + ho2 => 2 oh
  k_f = 70800000 * exp(-(150.964999741416) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(g_RT[0] - 2.000000 * g_RT[4] + g_RT[10]));
  // reaction 102:  2 oh => h + ho2
  k_f = 135200000 * exp((-0.33) * tc[0] - (19912.2834658928) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[4] - g_RT[10]));
  // reaction 103:  h + ho2 => h2 + o2
  k_f = 16600000 * exp(-(412.63766595987) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[3] + g_RT[10]));
  // reaction 104:  h2 + o2 => h + ho2
  k_f = 913800000 * exp((-0.33) * tc[0] - (29337.5316164152) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[3] - g_RT[10]));
  // reaction 105:  ho2 + oh => h2o + o2
  k_f = 28900000 * exp(-(-251.60833290236) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[5] + g_RT[10]));
  // reaction 106:  h2o + o2 => ho2 + oh
  k_f = 6888000000 * exp((-0.33) * tc[0] - (36302.0502711525) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[5] - g_RT[10]));
  // reaction 107:  h2o2 + o2 => 2 ho2
  k_f = 594200000000 * exp((-0.66) * tc[0] - (26745.9657875209) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(g_RT[3] - 2.000000 * g_RT[10] + g_RT[11]));
  // reaction 108:  2 ho2 => h2o2 + o2
  k_f = 420000000 * exp(-(6028.53565634054) * invT);
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[10] - g_RT[11]));
  // reaction 109:  h + h2o2 => h2o + oh
  k_f = 24100000 * exp(-(1997.77016324474) * invT);
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(g_RT[0] - g_RT[4] - g_RT[5] + g_RT[11]));
  // reaction 110:  h2o + oh => h + h2o2
  k_f = 7750000 * exp(-(37590.2849356126) * invT);
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[5] - g_RT[11]));
  // reaction 111:  ch4 + ho2 => ch3 + h2o2
  k_f = 342000 * exp(-(9707.04948337304) * invT);
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[10] - g_RT[11]));
  // reaction 112:  ch3 + h2o2 => ch4 + ho2
  k_f = 336500 * exp((-0.33) * tc[0] - (1259.04809784341) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[10] + g_RT[11]));
  // reaction 113:  ch2o + ho2 => h2o2 + hco
  k_f = 5.82e-09 * exp((4.53) * tc[0] - (3299.59167768155) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[12] - g_RT_qss[0]));
  // reaction 114:  h2o2 + hco => ch2o + ho2
  k_f = 1.194e-08 * exp((4.2) * tc[0] - (2476.32921242503) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[12] + g_RT_qss[0]));
  // reaction 115:  c2h3 + c2h5 => 2 c2h4
  k_f = 576500000 * exp((-0.63) * tc[0] - (1253.00949785375) * invT);
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(-2.000000 * g_RT[14] + g_RT[15] + g_RT[17]));
  // reaction 116:  2 c2h4 => c2h3 + c2h5
  k_f = 482000000 * exp(-(35995.0881050116) * invT);
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(2.000000 * g_RT[14] - g_RT[15] - g_RT[17]));
  // reaction 117:  c2h4 + h => c2h3 + h2
  k_f = 8.42e-09 * exp((4.62) * tc[0] - (1299.80864777359) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[14] - g_RT[17]));
  // reaction 118:  c2h3 + h2 => c2h4 + h
  k_f = 5.723e-07 * exp((3.79) * tc[0] - (1626.89948054666) * invT);
  qf[118] *= k_f;
  qr[118] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[14] + g_RT[17]));
  // reaction 119:  c2h4 + oh => c2h3 + h2o
  k_f = 20500000 * exp(-(2994.13916153808) * invT);
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[14] - g_RT[17]));
  // reaction 120:  c2h3 + h2o => c2h4 + oh
  k_f = 6033000000 * exp((-0.83) * tc[0] - (10949.9946479107) * invT);
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[14] + g_RT[17]));
  // reaction 121:  c2h2 + o2 => hcco + oh
  k_f = 200 * exp((1.5) * tc[0] - (15146.8216407221) * invT);
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[16] - g_RT[19]));
  // reaction 122:  hcco + oh => c2h2 + o2
  k_f = 0.2232 * exp((1.5) * tc[0] - (12781.7033114399) * invT);
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[16] + g_RT[19]));
  // reaction 123:  c2h3 + o2 => c2h2 + ho2
  k_f = 2.12e-12 * exp((6) * tc[0] - (4772.50685849196) * invT);
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[16] + g_RT[17]));
  // reaction 124:  c2h2 + ho2 => c2h3 + o2
  k_f = 1.114e-13 * exp((6.33) * tc[0] - (8841.51681818893) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[16] - g_RT[17]));
  // reaction 125:  h2o2 + o => ho2 + oh
  k_f = 9.55 * exp((2) * tc[0] - (1997.77016324474) * invT);
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[10] + g_RT[11]));
  // reaction 126:  ho2 + oh => h2o2 + o
  k_f = 0.1632 * exp((2.33) * tc[0] - (9148.4789843298) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[10] - g_RT[11]));
  // reaction 127:  c2h2 + o => h + hcco
  k_f = 14.3 * exp((2) * tc[0] - (956.111665028967) * invT);
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[16] - g_RT[19]));
  // reaction 128:  h + hcco => c2h2 + o
  k_f = 0.2021 * exp((2) * tc[0] - (6697.81382186082) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[16] + g_RT[19]));
  // reaction 129:  c2h2 + oh => ch2co + h
  k_f = 2.19e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[0] + g_RT[4] + g_RT[16] - g_RT[18]));
  // reaction 130:  ch2co + h => c2h2 + oh
  k_f = 2.161e-09 * exp((4.5) * tc[0] - (9893.23964972079) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[0] - g_RT[4] - g_RT[16] + g_RT[18]));
  // reaction 131:  ch2co + h => ch3 + co
  k_f = 11000000 * exp(-(1710.93666373605) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[0] - g_RT[6] - g_RT[8] + g_RT[18]));
  // reaction 132:  ch3 + co => ch2co + h
  k_f = 2400000 * exp(-(20229.3099653497) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[0] + g_RT[6] + g_RT[8] - g_RT[18]));
  // reaction 133:  ch2co + o => hcco + oh
  k_f = 10000000 * exp(-(4025.73332643776) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[18] - g_RT[19]));
  // reaction 134:  hcco + oh => ch2co + o
  k_f = 14320 * exp(-(-631.536915584923) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[18] + g_RT[19]));
  // reaction 135:  ch2co + oh => h2o + hcco
  k_f = 10000000 * exp(-(1006.43333160944) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[18] - g_RT[19]));
  // reaction 136:  h2o + hcco => ch2co + oh
  k_f = 141200 * exp(-(5029.65057471817) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[18] + g_RT[19]));
  // reaction 137:  ch2co + h => h2 + hcco
  k_f = 200000000 * exp(-(4025.73332643776) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[18] - g_RT[19]));
  // reaction 138:  h2 + hcco => ch2co + h
  k_f = 652200 * exp(-(422.701999275965) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[18] + g_RT[19]));
  // reaction 139:  hcco + oh => 2 hco
  k_f = 10000000;
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(g_RT[4] + g_RT[19] - 2.000000 * g_RT_qss[0]));
  // reaction 140:  h + hcco => ch2(s) + co
  k_f = 110000000;
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(g_RT[0] - g_RT[6] + g_RT[19] - g_RT_qss[11]));
  // reaction 141:  ch2(s) + co => h + hcco
  k_f = 2046000 * exp((0.89) * tc[0] - (14004.5198093453) * invT);
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[0] + g_RT[6] - g_RT[19] + g_RT_qss[11]));
  // reaction 142:  hcco + o => 2 co + h
  k_f = 80000000;
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(-g_RT[0] + g_RT[2] - 2.000000 * g_RT[6] + g_RT[19])) *
             (refCinv);
  // reaction 143:  c2h6 + o2 => c2h5 + ho2
  k_f = 60300000 * exp(-(26101.8484552908) * invT);
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[13] - g_RT[15]));
  // reaction 144:  c2h5 + ho2 => c2h6 + o2
  k_f = 267.9 * exp((0.89) * tc[0] - (-967.182431676671) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[13] + g_RT[15]));
  // reaction 145:  c2h6 + ho2 => c2h5 + h2o2
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[13] - g_RT[15]));
  // reaction 146:  c2h5 + h2o2 => c2h6 + ho2
  k_f = 82980 * exp((0.24) * tc[0] - (3951.25725989866) * invT);
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[13] + g_RT[15]));
  // reaction 147:  c2h3 + ch3 => c2h2 + ch4
  k_f = 392000;
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[16] + g_RT[17]));
  // reaction 148:  c2h2 + ch4 => c2h3 + ch3
  k_f = 29620000 * exp(-(33237.4607764017) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[16] - g_RT[17]));
  // reaction 149:  c2h5 + ch3 => c2h4 + ch4
  k_f = 19500000 * exp((-0.5) * tc[0]);
  qf[149] *= k_f;
  qr[149] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[14] + g_RT[15]));
  // reaction 150:  c2h4 + ch4 => c2h5 + ch3
  k_f = 28950000000 * exp((-0.7) * tc[0] - (35310.7134395172) * invT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[14] - g_RT[15]));
  // reaction 151:  c2h3 + h => c2h2 + h2
  k_f = 20000000 * exp(-(1258.0416645118) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[16] + g_RT[17]));
  // reaction 152:  c2h2 + h2 => c2h3 + h
  k_f = 13310000 * exp(-(34258.9906079853) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[16] - g_RT[17]));
  // reaction 153:  c2h5 + h => 2 ch3
  k_f = 36100000;
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[0] - 2.000000 * g_RT[8] + g_RT[15]));
  // reaction 154:  2 ch3 => c2h5 + h
  k_f = 54460000000 * exp((-1.03) * tc[0] - (8544.61898536414) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(-g_RT[0] + 2.000000 * g_RT[8] - g_RT[15]));
  // reaction 155:  c2h3 + o2 => ch2o + hco
  k_f = 1.7e+23 * exp((-5.31) * tc[0] - (3270.90832773068) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(g_RT[3] - g_RT[12] + g_RT[17] - g_RT_qss[0]));
  // reaction 156:  ch2o + hco => c2h3 + o2
  k_f = 1.657e+23 * exp((-5.31) * tc[0] - (46824.3107531292) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[17] + g_RT_qss[0]));
  // reaction 157:  c2h6 => c2h5 + h
  k_f = 2.783e+21 * exp((-1.56) * tc[0] - (52233.8899105299) * invT);
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(-g_RT[0] + g_RT[13] - g_RT[15])) * (refCinv);
  // reaction 158:  c2h5 + h => c2h6
  k_f = 36100000;
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(g_RT[0] - g_RT[13] + g_RT[15])) * (refC);
  // reaction 159:  c2h4 + ch3 => c2h3 + ch4
  k_f = 6.62e-06 * exp((3.7) * tc[0] - (4780.55832514484) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[14] - g_RT[17]));
  // reaction 160:  c2h3 + ch4 => c2h4 + ch3
  k_f = 1.44e-06 * exp((4.02) * tc[0] - (2753.60159528343) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[14] + g_RT[17]));
  // reaction 161:  ch3cho => ch3 + hco
  k_f = 2.614e+15 * exp((0.15) * tc[0] - (40534.1024305702) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(-g_RT[8] + g_RT[20] - g_RT_qss[0])) * (refCinv);
  // reaction 162:  ch3 + hco => ch3cho
  k_f = 20000000;
  qf[162] *= k_f;
  qr[162] *= k_f * exp(-(g_RT[8] - g_RT[20] + g_RT_qss[0])) * (refC);
  // reaction 163:  ch3cho + o2 => ch3co + ho2
  k_f = 30100000 * exp(-(19700.9324662548) * invT);
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[20] - g_RT_qss[2]));
  // reaction 164:  ch3co + ho2 => ch3cho + o2
  k_f = 85520 * exp((0.32) * tc[0] - (-976.240331661156) * invT);
  qf[164] *= k_f;
  qr[164] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[20] + g_RT_qss[2]));
  // reaction 165:  ch3cho + oh => ch3co + h2o
  k_f = 2 * exp((1.8) * tc[0] - (654.181665546136) * invT);
  qf[165] *= k_f;
  qr[165] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[20] - g_RT_qss[2]));
  // reaction 166:  ch3co + h2o => ch3cho + oh
  k_f = 1.354 * exp((1.79) * tc[0] - (16530.667471685) * invT);
  qf[166] *= k_f;
  qr[166] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[20] + g_RT_qss[2]));
  // reaction 167:  ch3cho + h => ch3co + h2
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[20] - g_RT_qss[2]));
  // reaction 168:  ch3co + h2 => ch3cho + h
  k_f = 2096000 * exp((-0.01) * tc[0] - (9908.33614969493) * invT);
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[20] + g_RT_qss[2]));
  // reaction 169:  ch3cho + o => ch3co + oh
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[20] - g_RT_qss[2]));
  // reaction 170:  ch3co + oh => ch3cho + o
  k_f = 408000 * exp((-0.01) * tc[0] - (8137.01348606232) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[20] + g_RT_qss[2]));
  // reaction 171:  ch3cho + ho2 => ch3co + h2o2
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[20] - g_RT_qss[2]));
  // reaction 172:  ch3co + h2o2 => ch3cho + ho2
  k_f = 12100000 * exp((-0.34) * tc[0] - (6043.63215631468) * invT);
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[20] + g_RT_qss[2]));
  // reaction 173:  ch3 + ch3cho => ch3co + ch4
  k_f = 2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[20] - g_RT_qss[2]));
  // reaction 174:  ch3co + ch4 => ch3 + ch3cho
  k_f = 10.66 * exp((1.77) * tc[0] - (11463.2756470315) * invT);
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[20] + g_RT_qss[2]));
  // reaction 175:  c3h5-a => c2h2 + ch3
  k_f = 2.397e+48 * exp((-9.9) * tc[0] - (41304.0239292514) * invT);
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(-g_RT[8] - g_RT[16] + g_RT[37])) * (refCinv);
  // reaction 176:  c2h2 + ch3 => c3h5-a
  k_f = 2.61e+40 * exp((-9.82) * tc[0] - (18593.8558014844) * invT);
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(g_RT[8] + g_RT[16] - g_RT[37])) * (refC);
  // reaction 177:  c3h6 => c2h3 + ch3
  k_f = 2.73e+62 * exp((-13.28) * tc[0] - (61996.2932271415) * invT);
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(-g_RT[8] - g_RT[17] + g_RT[22])) * (refCinv);
  // reaction 178:  c2h3 + ch3 => c3h6
  k_f = 4.712e+53 * exp((-13.19) * tc[0] - (14865.0203078714) * invT);
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(g_RT[8] + g_RT[17] - g_RT[22])) * (refC);
  // reaction 179:  c2h2 + ch3 => c3h4-a + h
  k_f = 67400000000000 * exp((-2.08) * tc[0] - (15896.6144727711) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f * exp(-(-g_RT[0] + g_RT[8] + g_RT[16] - g_RT[21]));
  // reaction 180:  c3h4-a + h => c2h2 + ch3
  k_f = 11490000000 * exp((-0.7) * tc[0] - (7945.79115305652) * invT);
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(g_RT[0] - g_RT[8] - g_RT[16] + g_RT[21]));
  // reaction 181:  c3h6 => c3h5-a + h
  k_f = 2.01e+61 * exp((-13.26) * tc[0] - (59631.1748978593) * invT);
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(-g_RT[0] + g_RT[22] - g_RT[37])) * (refCinv);
  // reaction 182:  c3h5-a + h => c3h6
  k_f = 4.887e+50 * exp((-12.25) * tc[0] - (14130.3239757965) * invT);
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(g_RT[0] - g_RT[22] + g_RT[37])) * (refC);
  // reaction 183:  c3h6 + o => ch2co + ch3 + h
  k_f = 25 * exp((1.76) * tc[0] - (38.2444666011587) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[8] - g_RT[18] + g_RT[22])) *
             (refCinv);
  // reaction 184:  ch2co + ch3 + h => c3h6 + o
  k_f = 1e-12;
  qf[184] *= k_f;
  qr[184] *=
    k_f * exp(-(g_RT[0] - g_RT[2] + g_RT[8] + g_RT[18] - g_RT[22])) * (refC);
  // reaction 185:  c3h6 + o => c2h5 + hco
  k_f = 15.8 * exp((1.76) * tc[0] - (-611.911465618539) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(g_RT[2] - g_RT[15] + g_RT[22] - g_RT_qss[0]));
  // reaction 186:  c2h5 + hco => c3h6 + o
  k_f = 0.1402 * exp((1.88) * tc[0] - (13340.2738104831) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(-g_RT[2] + g_RT[15] - g_RT[22] + g_RT_qss[0]));
  // reaction 187:  c3h6 + ho2 => c3h5-a + h2o2
  k_f = 150000 * exp(-(7140.64448776897) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[22] - g_RT[37]));
  // reaction 188:  c3h5-a + h2o2 => c3h6 + ho2
  k_f = 0.5867 * exp((1.33) * tc[0] - (4910.89144158826) * invT);
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[22] + g_RT[37]));
  // reaction 189:  c3h6 + oh => c3h5-a + h2o
  k_f = 3.12 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[22] - g_RT[37]));
  // reaction 190:  c3h5-a + h2o => c3h6 + oh
  k_f = 6.194 * exp((2.01) * tc[0] - (16042.5473058545) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[22] + g_RT[37]));
  // reaction 191:  c4h6 => 2 c2h3
  k_f = 4.027e+19 * exp((-1) * tc[0] - (49390.7157487332) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(-2.000000 * g_RT[17] + g_RT[23])) * (refCinv);
  // reaction 192:  2 c2h3 => c4h6
  k_f = 12600000;
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(2.000000 * g_RT[17] - g_RT[23])) * (refC);
  // reaction 193:  c4h6 + oh => c2h5 + ch2co
  k_f = 1000000;
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(g_RT[4] - g_RT[15] - g_RT[18] + g_RT[23]));
  // reaction 194:  c2h5 + ch2co => c4h6 + oh
  k_f = 3730000 * exp(-(15106.5643074577) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f * exp(-(-g_RT[4] + g_RT[15] + g_RT[18] - g_RT[23]));
  // reaction 195:  c4h6 + oh => c3h5-a + ch2o
  k_f = 1000000;
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[4] - g_RT[12] + g_RT[23] - g_RT[37]));
  // reaction 196:  c3h5-a + ch2o => c4h6 + oh
  k_f = 3.501 * exp(-(35758.5762720834) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(-g_RT[4] + g_RT[12] - g_RT[23] + g_RT[37]));
  // reaction 197:  c4h6 + oh => c2h3 + ch3cho
  k_f = 1000000;
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(g_RT[4] - g_RT[17] - g_RT[20] + g_RT[23]));
  // reaction 198:  c2h3 + ch3cho => c4h6 + oh
  k_f = 543700 * exp(-(9334.66915067755) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(-g_RT[4] + g_RT[17] + g_RT[20] - g_RT[23]));
  // reaction 199:  c4h6 + o => c2h4 + ch2co
  k_f = 1000000;
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(g_RT[2] - g_RT[14] - g_RT[18] + g_RT[23]));
  // reaction 200:  c2h4 + ch2co => c4h6 + o
  k_f = 637700 * exp(-(47473.4602520173) * invT);
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(-g_RT[2] + g_RT[14] + g_RT[18] - g_RT[23]));
  // reaction 201:  c4h6 + o => c3h4-a + ch2o
  k_f = 1000000;
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(g_RT[2] - g_RT[12] - g_RT[21] + g_RT[23]));
  // reaction 202:  c3h4-a + ch2o => c4h6 + o
  k_f = 1075000 * exp(-(39779.2774318631) * invT);
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(-g_RT[2] + g_RT[12] + g_RT[21] - g_RT[23]));
  // reaction 203:  c2h4 + o2 => c2h3 + ho2
  k_f = 40000000 * exp(-(29287.2099498347) * invT);
  qf[203] *= k_f;
  qr[203] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[14] - g_RT[17]));
  // reaction 204:  c2h3 + ho2 => c2h4 + o2
  k_f = 49390000 * exp((-0.5) * tc[0] - (688.400398820856) * invT);
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[14] + g_RT[17]));
  // reaction 205:  nc3h7 => c2h4 + ch3
  k_f = 228400000000000 * exp((-0.55) * tc[0] - (14291.353308854) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[8] - g_RT[14] + g_RT[24])) * (refCinv);
  // reaction 206:  c2h4 + ch3 => nc3h7
  k_f = 410000 * exp(-(3625.1728604572) * invT);
  qf[206] *= k_f;
  qr[206] *= k_f * exp(-(g_RT[8] + g_RT[14] - g_RT[24])) * (refC);
  // reaction 207:  nc3h7 => c3h6 + h
  k_f = 2.667e+15 * exp((-0.64) * tc[0] - (18528.4376349298) * invT);
  qf[207] *= k_f;
  qr[207] *= k_f * exp(-(-g_RT[0] - g_RT[22] + g_RT[24])) * (refCinv);
  // reaction 208:  c3h6 + h => nc3h7
  k_f = 10000000 * exp(-(1258.0416645118) * invT);
  qf[208] *= k_f;
  qr[208] *= k_f * exp(-(g_RT[0] + g_RT[22] - g_RT[24])) * (refC);
  // reaction 209:  nc3h7 + o2 => c3h6 + ho2
  k_f = 300000 * exp(-(1509.64999741416) * invT);
  qf[209] *= k_f;
  qr[209] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[22] + g_RT[24]));
  // reaction 210:  c3h6 + ho2 => nc3h7 + o2
  k_f = 200000 * exp(-(8806.29165158259) * invT);
  qf[210] *= k_f;
  qr[210] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[22] - g_RT[24]));
  // reaction 211:  c3h6 + o => c3h5-a + oh
  k_f = 524000 * exp((0.7) * tc[0] - (2960.92686159497) * invT);
  qf[211] *= k_f;
  qr[211] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[22] - g_RT[37]));
  // reaction 212:  c3h5-a + oh => c3h6 + o
  k_f = 105500 * exp((0.71) * tc[0] - (10476.9709820543) * invT);
  qf[212] *= k_f;
  qr[212] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[22] + g_RT[37]));
  // reaction 213:  c3h6 + h => c3h5-a + h2
  k_f = 0.173 * exp((2.5) * tc[0] - (1254.01593118536) * invT);
  qf[213] *= k_f;
  qr[213] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[22] - g_RT[37]));
  // reaction 214:  c3h5-a + h2 => c3h6 + h
  k_f = 0.07933 * exp((2.51) * tc[0] - (9822.78931650813) * invT);
  qf[214] *= k_f;
  qr[214] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[22] + g_RT[37]));
  // reaction 215:  c3h6 + h => c2h4 + ch3
  k_f = 4.83e+27 * exp((-5.81) * tc[0] - (9309.50831738731) * invT);
  qf[215] *= k_f;
  qr[215] *= k_f * exp(-(g_RT[0] - g_RT[8] - g_RT[14] + g_RT[22]));
  // reaction 216:  c2h4 + ch3 => c3h6 + h
  k_f = 2.313e+27 * exp((-5.9) * tc[0] - (15911.7109727452) * invT);
  qf[216] *= k_f;
  qr[216] *= k_f * exp(-(-g_RT[0] + g_RT[8] + g_RT[14] - g_RT[22]));
  // reaction 217:  c5h9 => c2h4 + c3h5-a
  k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
  qf[217] *= k_f;
  qr[217] *= k_f * exp(-(-g_RT[14] + g_RT[29] - g_RT[37])) * (refCinv);
  // reaction 218:  c5h9 => c4h6 + ch3
  k_f = 1.339e+15 * exp((-0.52) * tc[0] - (19283.2626336369) * invT);
  qf[218] *= k_f;
  qr[218] *= k_f * exp(-(-g_RT[8] - g_RT[23] + g_RT[29])) * (refCinv);
  // reaction 219:  c4h6 + ch3 => c5h9
  k_f = 175000 * exp(-(3824.44666011587) * invT);
  qf[219] *= k_f;
  qr[219] *= k_f * exp(-(g_RT[8] + g_RT[23] - g_RT[29])) * (refC);
  // reaction 220:  c4h7 => c4h6 + h
  k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
  qf[220] *= k_f;
  qr[220] *= k_f * exp(-(-g_RT[0] - g_RT[23] + g_RT[25])) * (refCinv);
  // reaction 221:  c4h6 + h => c4h7
  k_f = 40000000 * exp(-(654.181665546136) * invT);
  qf[221] *= k_f;
  qr[221] *= k_f * exp(-(g_RT[0] + g_RT[23] - g_RT[25])) * (refC);
  // reaction 222:  c4h7 => c2h3 + c2h4
  k_f = 100000000000 * exp(-(18619.0166347746) * invT);
  qf[222] *= k_f;
  qr[222] *= k_f * exp(-(-g_RT[14] - g_RT[17] + g_RT[25])) * (refCinv);
  // reaction 223:  c2h3 + c2h4 => c4h7
  k_f = 50000 * exp(-(3522.51666063304) * invT);
  qf[223] *= k_f;
  qr[223] *= k_f * exp(-(g_RT[14] + g_RT[17] - g_RT[25])) * (refC);
  // reaction 224:  c4h6 + c4h8-1 => 2 c4h7
  k_f = 2350000 * exp(-(23510.2826263965) * invT);
  qf[224] *= k_f;
  qr[224] *= k_f * exp(-(g_RT[23] - 2.000000 * g_RT[25] + g_RT[26]));
  // reaction 225:  2 c4h7 => c4h6 + c4h8-1
  k_f = 1600000;
  qf[225] *= k_f;
  qr[225] *= k_f * exp(-(-g_RT[23] + 2.000000 * g_RT[25] - g_RT[26]));
  // reaction 226:  c4h7 + ch3 => c4h6 + ch4
  k_f = 8000000;
  qf[226] *= k_f;
  qr[226] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[23] + g_RT[25]));
  // reaction 227:  c4h6 + ch4 => c4h7 + ch3
  k_f = 70500000 * exp(-(28824.2506172943) * invT);
  qf[227] *= k_f;
  qr[227] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[23] - g_RT[25]));
  // reaction 228:  c3h5-a + c4h7 => c3h6 + c4h6
  k_f = 6310000;
  qf[228] *= k_f;
  qr[228] *= k_f * exp(-(-g_RT[22] - g_RT[23] + g_RT[25] + g_RT[37]));
  // reaction 229:  c3h6 + c4h6 => c3h5-a + c4h7
  k_f = 10000 * exp(-(25160.833290236) * invT);
  qf[229] *= k_f;
  qr[229] *= k_f * exp(-(g_RT[22] + g_RT[23] - g_RT[25] - g_RT[37]));
  // reaction 230:  c4h7 + o2 => c4h6 + ho2
  k_f = 1000;
  qf[230] *= k_f;
  qr[230] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[23] + g_RT[25]));
  // reaction 231:  c4h6 + ho2 => c4h7 + o2
  k_f = 100000 * exp(-(8554.68331868023) * invT);
  qf[231] *= k_f;
  qr[231] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[23] - g_RT[25]));
  // reaction 232:  c4h7 + h => c4h6 + h2
  k_f = 31600000;
  qf[232] *= k_f;
  qr[232] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[23] + g_RT[25]));
  // reaction 233:  c4h6 + h2 => c4h7 + h
  k_f = 10660000 * exp(-(28587.7387843661) * invT);
  qf[233] *= k_f;
  qr[233] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[23] - g_RT[25]));
  // reaction 234:  c2h5 + c4h7 => c2h6 + c4h6
  k_f = 3980000;
  qf[234] *= k_f;
  qr[234] *= k_f * exp(-(-g_RT[13] + g_RT[15] - g_RT[23] + g_RT[25]));
  // reaction 235:  c2h6 + c4h6 => c2h5 + c4h7
  k_f = 3211000 * exp(-(25080.3186237072) * invT);
  qf[235] *= k_f;
  qr[235] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[23] - g_RT[25]));
  // reaction 236:  c2h5 + c4h7 => c2h4 + c4h8-1
  k_f = 9.24 * exp((1.5) * tc[0] - (-484.09443250414) * invT);
  qf[236] *= k_f;
  qr[236] *= k_f * exp(-(-g_RT[14] + g_RT[15] + g_RT[25] - g_RT[26]));
  // reaction 237:  c2h4 + c4h8-1 => c2h5 + c4h7
  k_f = 0.0007807 * exp((2.91) * tc[0] - (25643.9212894085) * invT);
  qf[237] *= k_f;
  qr[237] *= k_f * exp(-(g_RT[14] - g_RT[15] - g_RT[25] + g_RT[26]));
  // reaction 238:  c2h3 + c4h7 => c2h4 + c4h6
  k_f = 3980000;
  qf[238] *= k_f;
  qr[238] *= k_f * exp(-(-g_RT[14] + g_RT[17] - g_RT[23] + g_RT[25]));
  // reaction 239:  c2h4 + c4h6 => c2h3 + c4h7
  k_f = 11570000 * exp(-(29040.6337835904) * invT);
  qf[239] *= k_f;
  qr[239] *= k_f * exp(-(g_RT[14] - g_RT[17] + g_RT[23] - g_RT[25]));
  // reaction 240:  c4h8-1 => c3h5-a + ch3
  k_f = 5e+15 * exp(-(35728.3832721351) * invT);
  qf[240] *= k_f;
  qr[240] *= k_f * exp(-(-g_RT[8] + g_RT[26] - g_RT[37])) * (refCinv);
  // reaction 241:  c3h5-a + ch3 => c4h8-1
  k_f = 5000000;
  qf[241] *= k_f;
  qr[241] *= k_f * exp(-(g_RT[8] - g_RT[26] + g_RT[37])) * (refC);
  // reaction 242:  c4h8-1 => c2h3 + c2h5
  k_f = 1e+19 * exp((-1) * tc[0] - (48696.2767499227) * invT);
  qf[242] *= k_f;
  qr[242] *= k_f * exp(-(-g_RT[15] - g_RT[17] + g_RT[26])) * (refCinv);
  // reaction 243:  c2h3 + c2h5 => c4h8-1
  k_f = 9000000;
  qf[243] *= k_f;
  qr[243] *= k_f * exp(-(g_RT[15] + g_RT[17] - g_RT[26])) * (refC);
  // reaction 244:  c4h8-1 => c4h7 + h
  k_f = 4.107e+18 * exp((-1) * tc[0] - (48988.1424160895) * invT);
  qf[244] *= k_f;
  qr[244] *= k_f * exp(-(-g_RT[0] - g_RT[25] + g_RT[26])) * (refCinv);
  // reaction 245:  c4h7 + h => c4h8-1
  k_f = 50000000;
  qf[245] *= k_f;
  qr[245] *= k_f * exp(-(g_RT[0] + g_RT[25] - g_RT[26])) * (refC);
  // reaction 246:  c4h8-1 + ch3 => c4h7 + ch4
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  qf[246] *= k_f;
  qr[246] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[25] + g_RT[26]));
  // reaction 247:  c4h7 + ch4 => c4h8-1 + ch3
  k_f = 600000 * exp(-(8987.44965127229) * invT);
  qf[247] *= k_f;
  qr[247] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[25] - g_RT[26]));
  // reaction 248:  c4h8-1 + h => c4h7 + h2
  k_f = 50000000 * exp(-(1962.54499663841) * invT);
  qf[248] *= k_f;
  qr[248] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[25] + g_RT[26]));
  // reaction 249:  c4h7 + h2 => c4h8-1 + h
  k_f = 40000000 * exp(-(12681.0599782789) * invT);
  qf[249] *= k_f;
  qr[249] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[25] - g_RT[26]));
  // reaction 250:  c4h8-1 + oh => c4h7 + h2o
  k_f = 22500000 * exp(-(1115.63134808906) * invT);
  qf[250] *= k_f;
  qr[250] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[25] + g_RT[26]));
  // reaction 251:  c4h7 + h2o => c4h8-1 + oh
  k_f = 4772000 * exp(-(13320.1451438509) * invT);
  qf[251] *= k_f;
  qr[251] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[25] - g_RT[26]));
  // reaction 252:  c3h5-a + c4h8-1 => c3h6 + c4h7
  k_f = 79000 * exp(-(6239.88665597852) * invT);
  qf[252] *= k_f;
  qr[252] *= k_f * exp(-(-g_RT[22] - g_RT[25] + g_RT[26] + g_RT[37]));
  // reaction 253:  c3h6 + c4h7 => c3h5-a + c4h8-1
  k_f = 100000 * exp(-(8806.29165158259) * invT);
  qf[253] *= k_f;
  qr[253] *= k_f * exp(-(g_RT[22] + g_RT[25] - g_RT[26] - g_RT[37]));
  // reaction 254:  c4h8-1 + ho2 => c4h7 + h2o2
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  qf[254] *= k_f;
  qr[254] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[25] + g_RT[26]));
  // reaction 255:  c4h7 + h2o2 => c4h8-1 + ho2
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  qf[255] *= k_f;
  qr[255] *= k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT[25] - g_RT[26]));
  // reaction 256:  c4h8-1 + o2 => c4h7 + ho2
  k_f = 27000000 * exp(-(16706.7933047167) * invT);
  qf[256] *= k_f;
  qr[256] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[25] + g_RT[26]));
  // reaction 257:  c4h7 + ho2 => c4h8-1 + o2
  k_f = 300000;
  qf[257] *= k_f;
  qr[257] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[25] - g_RT[26]));
  // reaction 258:  pc4h9 => c2h4 + c2h5
  k_f = 7.497e+17 * exp((-1.41) * tc[0] - (14885.1489745036) * invT);
  qf[258] *= k_f;
  qr[258] *= k_f * exp(-(-g_RT[14] - g_RT[15] + g_RT_qss[4])) * (refCinv);
  // reaction 259:  c2h4 + c2h5 => pc4h9
  k_f = 330000 * exp(-(3623.15999379398) * invT);
  qf[259] *= k_f;
  qr[259] *= k_f * exp(-(g_RT[14] + g_RT[15] - g_RT_qss[4])) * (refC);
  // reaction 260:  pc4h9 => c4h8-1 + h
  k_f = 1.159e+17 * exp((-1.17) * tc[0] - (19202.7479671081) * invT);
  qf[260] *= k_f;
  qr[260] *= k_f * exp(-(-g_RT[0] - g_RT[26] + g_RT_qss[4])) * (refCinv);
  // reaction 261:  c4h8-1 + h => pc4h9
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[261] *= k_f;
  qr[261] *= k_f * exp(-(g_RT[0] + g_RT[26] - g_RT_qss[4])) * (refC);
  // reaction 262:  o2 + pc4h9 => c4h8-1 + ho2
  k_f = 3e-25 * exp(-(1509.64999741416) * invT);
  qf[262] *= k_f;
  qr[262] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[26] + g_RT_qss[4]));
  // reaction 263:  c4h8-1 + ho2 => o2 + pc4h9
  k_f = 2e-25 * exp(-(8806.29165158259) * invT);
  qf[263] *= k_f;
  qr[263] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[26] - g_RT_qss[4]));
  // reaction 264:  ch3coch2 => ch2co + ch3
  k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
  qf[264] *= k_f;
  qr[264] *= k_f * exp(-(-g_RT[8] - g_RT[18] + g_RT[27])) * (refCinv);
  // reaction 265:  ch2co + ch3 => ch3coch2
  k_f = 100000 * exp(-(3019.29999482832) * invT);
  qf[265] *= k_f;
  qr[265] *= k_f * exp(-(g_RT[8] + g_RT[18] - g_RT[27])) * (refC);
  // reaction 266:  c2h5co => c2h5 + co
  k_f = 1.834e+15 * exp((-0.73) * tc[0] - (6496.52715553893) * invT);
  qf[266] *= k_f;
  qr[266] *= k_f * exp(-(-g_RT[6] - g_RT[15] + g_RT_qss[5])) * (refCinv);
  // reaction 267:  c2h5 + co => c2h5co
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  qf[267] *= k_f;
  qr[267] *= k_f * exp(-(g_RT[6] + g_RT[15] - g_RT_qss[5])) * (refC);
  // reaction 268:  c2h5cho + h => c2h5co + h2
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  qf[268] *= k_f;
  qr[268] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[28] - g_RT_qss[5]));
  // reaction 269:  c2h5co + h2 => c2h5cho + h
  k_f = 5854000 * exp(-(10361.2311489192) * invT);
  qf[269] *= k_f;
  qr[269] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[28] + g_RT_qss[5]));
  // reaction 270:  c2h5cho + o => c2h5co + oh
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  qf[270] *= k_f;
  qr[270] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[28] - g_RT_qss[5]));
  // reaction 271:  c2h5co + oh => c2h5cho + o
  k_f = 321400 * exp(-(8091.72398613989) * invT);
  qf[271] *= k_f;
  qr[271] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[28] + g_RT_qss[5]));
  // reaction 272:  c2h5cho + oh => c2h5co + h2o
  k_f = 26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
  qf[272] *= k_f;
  qr[272] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[28] - g_RT_qss[5]));
  // reaction 273:  c2h5co + h2o => c2h5cho + oh
  k_f = 17050 * exp((0.76) * tc[0] - (15700.3599731073) * invT);
  qf[273] *= k_f;
  qr[273] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[28] + g_RT_qss[5]));
  // reaction 274:  c2h5cho + ch3 => c2h5co + ch4
  k_f = 2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
  qf[274] *= k_f;
  qr[274] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[28] - g_RT_qss[5]));
  // reaction 275:  c2h5co + ch4 => c2h5cho + ch3
  k_f = 9.972 * exp((1.78) * tc[0] - (11463.2756470315) * invT);
  qf[275] *= k_f;
  qr[275] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[28] + g_RT_qss[5]));
  // reaction 276:  c2h5cho + ho2 => c2h5co + h2o2
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  qf[276] *= k_f;
  qr[276] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[28] - g_RT_qss[5]));
  // reaction 277:  c2h5co + h2o2 => c2h5cho + ho2
  k_f = 10530000 * exp((-0.33) * tc[0] - (6884.00398820857) * invT);
  qf[277] *= k_f;
  qr[277] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[28] + g_RT_qss[5]));
  // reaction 278:  c2h5 + c2h5cho => c2h5co + c2h6
  k_f = 1000000 * exp(-(4025.73332643776) * invT);
  qf[278] *= k_f;
  qr[278] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[28] - g_RT_qss[5]));
  // reaction 279:  c2h5co + c2h6 => c2h5 + c2h5cho
  k_f = 598400000 * exp((-0.57) * tc[0] - (10416.5849821577) * invT);
  qf[279] *= k_f;
  qr[279] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[28] + g_RT_qss[5]));
  // reaction 280:  c2h5cho => c2h5 + hco
  k_f = 9.85e+18 * exp((-0.73) * tc[0] - (41117.8337629036) * invT);
  qf[280] *= k_f;
  qr[280] *= k_f * exp(-(-g_RT[15] + g_RT[28] - g_RT_qss[0])) * (refCinv);
  // reaction 281:  c2h5 + hco => c2h5cho
  k_f = 18100000;
  qf[281] *= k_f;
  qr[281] *= k_f * exp(-(g_RT[15] - g_RT[28] + g_RT_qss[0])) * (refC);
  // reaction 282:  c2h5cho + o2 => c2h5co + ho2
  k_f = 10050000 * exp(-(20480.9182982521) * invT);
  qf[282] *= k_f;
  qr[282] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[28] - g_RT_qss[5]));
  // reaction 283:  c2h5co + ho2 => c2h5cho + o2
  k_f = 26720 * exp((0.33) * tc[0] - (-199.273799658669) * invT);
  qf[283] *= k_f;
  qr[283] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[28] + g_RT_qss[5]));
  // reaction 284:  c2h3 + c2h5cho => c2h4 + c2h5co
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[284] *= k_f;
  qr[284] *= k_f * exp(-(-g_RT[14] + g_RT[17] + g_RT[28] - g_RT_qss[5]));
  // reaction 285:  c2h4 + c2h5co => c2h3 + c2h5cho
  k_f = 3661 * exp((0.83) * tc[0] - (12167.7789791581) * invT);
  qf[285] *= k_f;
  qr[285] *= k_f * exp(-(g_RT[14] - g_RT[17] - g_RT[28] + g_RT_qss[5]));
  // reaction 286:  c2h5cho + c3h5-a => c2h5co + c3h6
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[286] *= k_f;
  qr[286] *= k_f * exp(-(-g_RT[22] + g_RT[28] + g_RT[37] - g_RT_qss[5]));
  // reaction 287:  c2h5co + c3h6 => c2h5cho + c3h5-a
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  qf[287] *= k_f;
  qr[287] *= k_f * exp(-(g_RT[22] - g_RT[28] - g_RT[37] + g_RT_qss[5]));
  // reaction 288:  c5h10-1 => c2h5 + c3h5-a
  k_f = 9.173e+20 * exp((-1.63) * tc[0] - (37233.0011028912) * invT);
  qf[288] *= k_f;
  qr[288] *= k_f * exp(-(-g_RT[15] + g_RT[30] - g_RT[37])) * (refCinv);
  // reaction 289:  c2h5 + c3h5-a => c5h10-1
  k_f = 4000000 * exp(-(-299.917132819613) * invT);
  qf[289] *= k_f;
  qr[289] *= k_f * exp(-(g_RT[15] - g_RT[30] + g_RT[37])) * (refC);
  // reaction 290:  c5h10-1 + h => c5h9 + h2
  k_f = 28000000 * exp(-(2012.86666321888) * invT);
  qf[290] *= k_f;
  qr[290] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[29] + g_RT[30]));
  // reaction 291:  c5h9 + h2 => c5h10-1 + h
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  qf[291] *= k_f;
  qr[291] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[29] - g_RT[30]));
  // reaction 292:  c5h10-1 + o => c5h9 + oh
  k_f = 0.254 * exp((2.56) * tc[0] - (-568.634832359333) * invT);
  qf[292] *= k_f;
  qr[292] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[29] + g_RT[30]));
  // reaction 293:  c5h9 + oh => c5h10-1 + o
  k_f = 700000 * exp(-(15046.1783075611) * invT);
  qf[293] *= k_f;
  qr[293] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[29] - g_RT[30]));
  // reaction 294:  c5h10-1 + o => hco + pc4h9
  k_f = 100000;
  qf[294] *= k_f;
  qr[294] *= k_f * exp(-(g_RT[2] + g_RT[30] - g_RT_qss[0] - g_RT_qss[4]));
  // reaction 295:  c5h10-1 + o => ch3co + nc3h7
  k_f = 100000;
  qf[295] *= k_f;
  qr[295] *= k_f * exp(-(g_RT[2] - g_RT[24] + g_RT[30] - g_RT_qss[2]));
  // reaction 296:  c5h10-1 + oh => c5h9 + h2o
  k_f = 5.12 * exp((2) * tc[0] - (-149.958566409806) * invT);
  qf[296] *= k_f;
  qr[296] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[29] + g_RT[30]));
  // reaction 297:  c5h9 + h2o => c5h10-1 + oh
  k_f = 20.6 * exp((2.16) * tc[0] - (17597.486803191) * invT);
  qf[297] *= k_f;
  qr[297] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[29] - g_RT[30]));
  // reaction 298:  c5h10-1 + oh => ch2o + pc4h9
  k_f = 100000;
  qf[298] *= k_f;
  qr[298] *= k_f * exp(-(g_RT[4] - g_RT[12] + g_RT[30] - g_RT_qss[4]));
  // reaction 299:  c5h10-1 + oh => ch3cho + nc3h7
  k_f = 100000;
  qf[299] *= k_f;
  qr[299] *= k_f * exp(-(g_RT[4] - g_RT[20] - g_RT[24] + g_RT[30]));
  // reaction 300:  c5h10-1 + ch3 => c5h9 + ch4
  k_f = 100000 * exp(-(3673.48166037445) * invT);
  qf[300] *= k_f;
  qr[300] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[29] + g_RT[30]));
  // reaction 301:  c5h9 + ch4 => c5h10-1 + ch3
  k_f = 600000 * exp(-(9007.57831790448) * invT);
  qf[301] *= k_f;
  qr[301] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[29] - g_RT[30]));
  // reaction 302:  h + h2o2 => h2 + ho2
  k_f = 48200000 * exp(-(4000.57249314752) * invT);
  qf[302] *= k_f;
  qr[302] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[10] + g_RT[11]));
  // reaction 303:  h2 + ho2 => h + h2o2
  k_f = 1875000 * exp((0.33) * tc[0] - (12208.0363124225) * invT);
  qf[303] *= k_f;
  qr[303] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[10] - g_RT[11]));
  // reaction 304:  hco + o => co2 + h
  k_f = 30000000;
  qf[304] *= k_f;
  qr[304] *= k_f * exp(-(-g_RT[0] + g_RT[2] - g_RT[7] + g_RT_qss[0]));
  // reaction 305:  co2 + h => hco + o
  k_f = 9677000000 * exp(-(55454.4765716801) * invT);
  qf[305] *= k_f;
  qr[305] *= k_f * exp(-(g_RT[0] - g_RT[2] + g_RT[7] - g_RT_qss[0]));
  // reaction 306:  ch3co + h => ch2co + h2
  k_f = 20000000;
  qf[306] *= k_f;
  qr[306] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[18] + g_RT_qss[2]));
  // reaction 307:  ch2co + h2 => ch3co + h
  k_f = 562600000000 * exp((-1.13) * tc[0] - (32054.9016117606) * invT);
  qf[307] *= k_f;
  qr[307] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[18] - g_RT_qss[2]));
  // reaction 308:  ch3co + o => ch2co + oh
  k_f = 20000000;
  qf[308] *= k_f;
  qr[308] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[18] + g_RT_qss[2]));
  // reaction 309:  ch2co + oh => ch3co + o
  k_f = 5951000000000 * exp((-1.13) * tc[0] - (60738.2515626297) * invT);
  qf[309] *= k_f;
  qr[309] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[18] - g_RT_qss[2]));
  // reaction 310:  ch3 + ch3co => ch2co + ch4
  k_f = 50000000;
  qf[310] *= k_f;
  qr[310] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[18] + g_RT_qss[2]));
  // reaction 311:  ch2co + ch4 => ch3 + ch3co
  k_f = 819700000000 * exp((-0.67) * tc[0] - (40171.7864311908) * invT);
  qf[311] *= k_f;
  qr[311] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[18] - g_RT_qss[2]));
  // reaction 312:  c2h4 + o => ch2cho + h
  k_f = 3.39 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
  qf[312] *= k_f;
  qr[312] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[14] - g_RT_qss[3]));
  // reaction 313:  ch2cho + h => c2h4 + o
  k_f = 9.481 * exp((1.79) * tc[0] - (8076.62748616575) * invT);
  qf[313] *= k_f;
  qr[313] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[14] + g_RT_qss[3]));
  // reaction 314:  c2h5 + o => ch3cho + h
  k_f = 50000000;
  qf[314] *= k_f;
  qr[314] *= k_f * exp(-(-g_RT[0] + g_RT[2] + g_RT[15] - g_RT[20]));
  // reaction 315:  ch3cho + h => c2h5 + o
  k_f = 550500000 * exp((0.11) * tc[0] - (37434.2877692131) * invT);
  qf[315] *= k_f;
  qr[315] *= k_f * exp(-(g_RT[0] - g_RT[2] - g_RT[15] + g_RT[20]));
  // reaction 316:  c2h3 + c2h4 => c4h6 + h
  k_f = 500000 * exp(-(3673.48166037445) * invT);
  qf[316] *= k_f;
  qr[316] *= k_f * exp(-(-g_RT[0] + g_RT[14] + g_RT[17] - g_RT[23]));
  // reaction 317:  c4h6 + h => c2h3 + c2h4
  k_f = 10000000 * exp(-(2365.11832928218) * invT);
  qf[317] *= k_f;
  qr[317] *= k_f * exp(-(g_RT[0] - g_RT[14] - g_RT[17] + g_RT[23]));
  // reaction 318:  c2h5o + o2 => ch3cho + ho2
  k_f = 42800 * exp(-(552.028682387778) * invT);
  qf[318] *= k_f;
  qr[318] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[20] + g_RT_qss[6]));
  // reaction 319:  ch3cho + ho2 => c2h5o + o2
  k_f = 387.2 * exp((0.44) * tc[0] - (16042.5473058545) * invT);
  qf[319] *= k_f;
  qr[319] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[20] - g_RT_qss[6]));
  // reaction 320:  h2o2 + o2 => 2 ho2
  k_f = 183900000 * exp((-0.66) * tc[0] - (19897.1869659186) * invT);
  qf[320] *= k_f;
  qr[320] *= k_f * exp(-(g_RT[3] - 2.000000 * g_RT[10] + g_RT[11]));
  // reaction 321:  2 ho2 => h2o2 + o2
  k_f = 130000 * exp(-(-819.739948595888) * invT);
  qf[321] *= k_f;
  qr[321] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[10] - g_RT[11]));
  // reaction 322:  c2h3 + o2 => ch2cho + o
  k_f = 350000000 * exp((-0.61) * tc[0] - (2646.91966213283) * invT);
  qf[322] *= k_f;
  qr[322] *= k_f * exp(-(-g_RT[2] + g_RT[3] + g_RT[17] - g_RT_qss[3]));
  // reaction 323:  ch2cho + o => c2h3 + o2
  k_f = 2589000 * exp((0.12) * tc[0] - (3250.27644443268) * invT);
  qf[323] *= k_f;
  qr[323] *= k_f * exp(-(g_RT[2] - g_RT[3] - g_RT[17] + g_RT_qss[3]));
  // reaction 324:  ch3o2h => ch3o + oh
  k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
  qf[324] *= k_f;
  qr[324] *= k_f * exp(-(-g_RT[4] + g_RT[32] - g_RT_qss[1])) * (refCinv);
  // reaction 325:  ch3o + oh => ch3o2h
  k_f = 116600 * exp((0.6) * tc[0] - (-891.196715140159) * invT);
  qf[325] *= k_f;
  qr[325] *= k_f * exp(-(g_RT[4] - g_RT[32] + g_RT_qss[1])) * (refC);
  // reaction 326:  c3h2 + o2 => co + h + hcco
  k_f = 50000000;
  qf[326] *= k_f;
  qr[326] *= k_f *
             exp(-(-g_RT[0] + g_RT[3] - g_RT[6] - g_RT[19] + g_RT_qss[10])) *
             (refCinv);
  // reaction 327:  ch2o + ch3o2 => ch3o2h + hco
  k_f = 1990000 * exp(-(5867.50632328303) * invT);
  qf[327] *= k_f;
  qr[327] *= k_f * exp(-(g_RT[12] + g_RT[31] - g_RT[32] - g_RT_qss[0]));
  // reaction 328:  ch3o2h + hco => ch2o + ch3o2
  k_f = 8504000 * exp((-0.5) * tc[0] - (3527.04561062528) * invT);
  qf[328] *= k_f;
  qr[328] *= k_f * exp(-(-g_RT[12] - g_RT[31] + g_RT[32] + g_RT_qss[0]));
  // reaction 329:  c2h4 + ch3o2 => c2h3 + ch3o2h
  k_f = 2230000 * exp(-(8650.29448518313) * invT);
  qf[329] *= k_f;
  qr[329] *= k_f * exp(-(g_RT[14] - g_RT[17] + g_RT[31] - g_RT[32]));
  // reaction 330:  c2h3 + ch3o2h => c2h4 + ch3o2
  k_f = 8112000000 * exp((-1.33) * tc[0] - (-749.289615383228) * invT);
  qf[330] *= k_f;
  qr[330] *= k_f * exp(-(-g_RT[14] + g_RT[17] - g_RT[31] + g_RT[32]));
  // reaction 331:  ch3o2 + ch4 => ch3 + ch3o2h
  k_f = 181000 * exp(-(9299.44398407122) * invT);
  qf[331] *= k_f;
  qr[331] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[31] - g_RT[32]));
  // reaction 332:  ch3 + ch3o2h => ch3o2 + ch4
  k_f = 370800 * exp((-0.5) * tc[0] - (-667.768515522863) * invT);
  qf[332] *= k_f;
  qr[332] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[31] + g_RT[32]));
  // reaction 333:  c2h5 + ho2 => c2h5o + oh
  k_f = 32000000;
  qf[333] *= k_f;
  qr[333] *= k_f * exp(-(-g_RT[4] + g_RT[10] + g_RT[15] - g_RT_qss[6]));
  // reaction 334:  c2h5o + oh => c2h5 + ho2
  k_f = 3075000000 * exp((-0.32) * tc[0] - (13833.4261429717) * invT);
  qf[334] *= k_f;
  qr[334] *= k_f * exp(-(g_RT[4] - g_RT[10] - g_RT[15] + g_RT_qss[6]));
  // reaction 335:  ch3 + ch3o2 => 2 ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[335] *= k_f;
  qr[335] *= k_f * exp(-(g_RT[8] + g_RT[31] - 2.000000 * g_RT_qss[1]));
  // reaction 336:  c2h5 + ch3o2 => c2h5o + ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[336] *= k_f;
  qr[336] *= k_f * exp(-(g_RT[15] + g_RT[31] - g_RT_qss[1] - g_RT_qss[6]));
  // reaction 337:  ch3o2 + ho2 => ch3o2h + o2
  k_f = 17500 * exp(-(-1648.03458051046) * invT);
  qf[337] *= k_f;
  qr[337] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[31] - g_RT[32]));
  // reaction 338:  ch3o2h + o2 => ch3o2 + ho2
  k_f = 51560000 * exp((-0.83) * tc[0] - (17552.1973032686) * invT);
  qf[338] *= k_f;
  qr[338] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[31] + g_RT[32]));
  // reaction 339:  h2o2 + oh => h2o + ho2
  k_f = 580000000 * exp(-(4810.75132509312) * invT);
  qf[339] *= k_f;
  qr[339] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[10] + g_RT[11]));
  // reaction 340:  h2o + ho2 => h2o2 + oh
  k_f = 97710000 * exp((0.33) * tc[0] - (20641.9476313096) * invT);
  qf[340] *= k_f;
  qr[340] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[10] - g_RT[11]));
  // reaction 341:  2 ch3o2 => 2 ch3o + o2
  k_f = 14000000000 * exp((-1.61) * tc[0] - (935.982998396779) * invT);
  qf[341] *= k_f;
  qr[341] *= k_f *
             exp(-(-g_RT[3] + 2.000000 * g_RT[31] - 2.000000 * g_RT_qss[1])) *
             (refCinv);
  // reaction 342:  c2h6 + ch3o2 => c2h5 + ch3o2h
  k_f = 13200000 * exp(-(10300.8451490226) * invT);
  qf[342] *= k_f;
  qr[342] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[31] - g_RT[32]));
  // reaction 343:  c2h5 + ch3o2h => c2h6 + ch3o2
  k_f = 172800 * exp((0.06) * tc[0] - (2431.54292916841) * invT);
  qf[343] *= k_f;
  qr[343] *= k_f * exp(-(-g_RT[13] + g_RT[15] - g_RT[31] + g_RT[32]));
  // reaction 344:  ch3cho + ch3o2 => ch3co + ch3o2h
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[344] *= k_f;
  qr[344] *= k_f * exp(-(g_RT[20] + g_RT[31] - g_RT[32] - g_RT_qss[2]));
  // reaction 345:  ch3co + ch3o2h => ch3cho + ch3o2
  k_f = 25190000 * exp((-0.51) * tc[0] - (4524.42104225023) * invT);
  qf[345] *= k_f;
  qr[345] *= k_f * exp(-(-g_RT[20] - g_RT[31] + g_RT[32] + g_RT_qss[2]));
  // reaction 346:  c2h3co => c2h3 + co
  k_f = 304300000000000 * exp((-0.46) * tc[0] - (15353.140473702) * invT);
  qf[346] *= k_f;
  qr[346] *= k_f * exp(-(-g_RT[6] - g_RT[17] + g_RT[33])) * (refCinv);
  // reaction 347:  c2h3 + co => c2h3co
  k_f = 151000 * exp(-(2420.4721625207) * invT);
  qf[347] *= k_f;
  qr[347] *= k_f * exp(-(g_RT[6] + g_RT[17] - g_RT[33])) * (refC);
  // reaction 348:  c2h3cho + oh => c2h3co + h2o
  k_f = 9.24 * exp((1.5) * tc[0] - (-484.09443250414) * invT);
  qf[348] *= k_f;
  qr[348] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[33] + g_RT[34]));
  // reaction 349:  c2h3co + h2o => c2h3cho + oh
  k_f = 21.47 * exp((1.48) * tc[0] - (17869.2238027256) * invT);
  qf[349] *= k_f;
  qr[349] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[33] - g_RT[34]));
  // reaction 350:  c2h3cho + h => c2h3co + h2
  k_f = 13400000 * exp(-(1660.61499715557) * invT);
  qf[350] *= k_f;
  qr[350] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[33] + g_RT[34]));
  // reaction 351:  c2h3co + h2 => c2h3cho + h
  k_f = 7191000 * exp((-0.02) * tc[0] - (12389.1943121122) * invT);
  qf[351] *= k_f;
  qr[351] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[33] - g_RT[34]));
  // reaction 352:  c2h3cho + o => c2h3co + oh
  k_f = 5940000 * exp(-(940.008731723216) * invT);
  qf[352] *= k_f;
  qr[352] *= k_f * exp(-(g_RT[2] - g_RT[4] - g_RT[33] + g_RT[34]));
  // reaction 353:  c2h3co + oh => c2h3cho + o
  k_f = 1400000 * exp((-0.02) * tc[0] - (10612.8394818215) * invT);
  qf[353] *= k_f;
  qr[353] *= k_f * exp(-(-g_RT[2] + g_RT[4] + g_RT[33] - g_RT[34]));
  // reaction 354:  c2h3cho + ho2 => c2h3co + h2o2
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[354] *= k_f;
  qr[354] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[33] + g_RT[34]));
  // reaction 355:  c2h3co + h2o2 => c2h3cho + ho2
  k_f = 41520000 * exp((-0.35) * tc[0] - (8524.49031873195) * invT);
  qf[355] *= k_f;
  qr[355] *= k_f * exp(-(-g_RT[10] + g_RT[11] + g_RT[33] - g_RT[34]));
  // reaction 356:  c2h3cho + ch3 => c2h3co + ch4
  k_f = 2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
  qf[356] *= k_f;
  qr[356] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[33] + g_RT[34]));
  // reaction 357:  c2h3co + ch4 => c2h3cho + ch3
  k_f = 36.56 * exp((1.76) * tc[0] - (13944.1338094488) * invT);
  qf[357] *= k_f;
  qr[357] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[33] - g_RT[34]));
  // reaction 358:  c2h3cho + ch3o2 => c2h3co + ch3o2h
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[358] *= k_f;
  qr[358] *= k_f * exp(-(g_RT[31] - g_RT[32] - g_RT[33] + g_RT[34]));
  // reaction 359:  c2h3co + ch3o2h => c2h3cho + ch3o2
  k_f = 86450000 * exp((-0.53) * tc[0] - (7004.7759880017) * invT);
  qf[359] *= k_f;
  qr[359] *= k_f * exp(-(-g_RT[31] + g_RT[32] + g_RT[33] - g_RT[34]));
  // reaction 360:  c3h5o => c2h3cho + h
  k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
  qf[360] *= k_f;
  qr[360] *= k_f * exp(-(-g_RT[0] - g_RT[34] + g_RT_qss[7])) * (refCinv);
  // reaction 361:  c2h3cho + h => c3h5o
  k_f = 771400 * exp((0.48) * tc[0] - (8932.09581803377) * invT);
  qf[361] *= k_f;
  qr[361] *= k_f * exp(-(g_RT[0] + g_RT[34] - g_RT_qss[7])) * (refC);
  // reaction 362:  c3h5o => c2h3 + ch2o
  k_f = 2028000000000 * exp((0.09) * tc[0] - (11855.7846463592) * invT);
  qf[362] *= k_f;
  qr[362] *= k_f * exp(-(-g_RT[12] - g_RT[17] + g_RT_qss[7])) * (refCinv);
  // reaction 363:  c2h3 + ch2o => c3h5o
  k_f = 150000 * exp(-(5334.09665753003) * invT);
  qf[363] *= k_f;
  qr[363] *= k_f * exp(-(g_RT[12] + g_RT[17] - g_RT_qss[7])) * (refC);
  // reaction 364:  c3h5o + o2 => c2h3cho + ho2
  k_f = 1000000 * exp(-(3019.29999482832) * invT);
  qf[364] *= k_f;
  qr[364] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[34] + g_RT_qss[7]));
  // reaction 365:  c2h3cho + ho2 => c3h5o + o2
  k_f = 128800 * exp(-(16102.933305751) * invT);
  qf[365] *= k_f;
  qr[365] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[34] - g_RT_qss[7]));
  // reaction 366:  c3h5-a + ho2 => c3h5o + oh
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[366] *= k_f;
  qr[366] *= k_f * exp(-(-g_RT[4] + g_RT[10] + g_RT[37] - g_RT_qss[7]));
  // reaction 367:  c3h5o + oh => c3h5-a + ho2
  k_f = 20410000 * exp((-0.16) * tc[0] - (6169.43632276586) * invT);
  qf[367] *= k_f;
  qr[367] *= k_f * exp(-(g_RT[4] - g_RT[10] - g_RT[37] + g_RT_qss[7]));
  // reaction 368:  c3h5-a + ch3o2 => c3h5o + ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[368] *= k_f;
  qr[368] *= k_f * exp(-(g_RT[31] + g_RT[37] - g_RT_qss[1] - g_RT_qss[7]));
  // reaction 369:  c3h6 + ch3o2 => c3h5-a + ch3o2h
  k_f = 324000 * exp(-(7497.92832049032) * invT);
  qf[369] *= k_f;
  qr[369] *= k_f * exp(-(g_RT[22] + g_RT[31] - g_RT[32] - g_RT[37]));
  // reaction 370:  c3h5-a + ch3o2h => c3h6 + ch3o2
  k_f = 20000 * exp(-(7548.2499870708) * invT);
  qf[370] *= k_f;
  qr[370] *= k_f * exp(-(-g_RT[22] - g_RT[31] + g_RT[32] + g_RT[37]));
  // reaction 371:  ch3 + oh => ch2(s) + h2o
  k_f = 26500000 * exp(-(1100.03163144912) * invT);
  qf[371] *= k_f;
  qr[371] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[8] - g_RT_qss[11]));
  // reaction 372:  ch2(s) + h2o => ch3 + oh
  k_f = 32360 * exp((0.89) * tc[0] - (609.395382289516) * invT);
  qf[372] *= k_f;
  qr[372] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[8] + g_RT_qss[11]));
  // reaction 373:  c4h7o => c2h3 + ch3cho
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  qf[373] *= k_f;
  qr[373] *= k_f * exp(-(-g_RT[17] - g_RT[20] + g_RT_qss[8])) * (refCinv);
  // reaction 374:  c2h3 + ch3cho => c4h7o
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  qf[374] *= k_f;
  qr[374] *= k_f * exp(-(g_RT[17] + g_RT[20] - g_RT_qss[8])) * (refC);
  // reaction 375:  c4h7o => c2h3cho + ch3
  k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
  qf[375] *= k_f;
  qr[375] *= k_f * exp(-(-g_RT[8] - g_RT[34] + g_RT_qss[8])) * (refCinv);
  // reaction 376:  c2h3cho + ch3 => c4h7o
  k_f = 10000 * exp(-(10064.3333160944) * invT);
  qf[376] *= k_f;
  qr[376] *= k_f * exp(-(g_RT[8] + g_RT[34] - g_RT_qss[8])) * (refC);
  // reaction 377:  c4h7 + ho2 => c4h7o + oh
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[377] *= k_f;
  qr[377] *= k_f * exp(-(-g_RT[4] + g_RT[10] + g_RT[25] - g_RT_qss[8]));
  // reaction 378:  c4h7o + oh => c4h7 + ho2
  k_f = 100800 * exp((0.26) * tc[0] - (8499.32948544172) * invT);
  qf[378] *= k_f;
  qr[378] *= k_f * exp(-(g_RT[4] - g_RT[10] - g_RT[25] + g_RT_qss[8]));
  // reaction 379:  c4h7 + ch3o2 => c4h7o + ch3o
  k_f = 7000000 * exp(-(-503.21666580472) * invT);
  qf[379] *= k_f;
  qr[379] *= k_f * exp(-(g_RT[25] + g_RT[31] - g_RT_qss[1] - g_RT_qss[8]));
  // reaction 380:  c4h8-1 + oh => ch2o + nc3h7
  k_f = 1000000;
  qf[380] *= k_f;
  qr[380] *= k_f * exp(-(g_RT[4] - g_RT[12] - g_RT[24] + g_RT[26]));
  // reaction 381:  ch2o + nc3h7 => c4h8-1 + oh
  k_f = 1620000 * exp(-(6657.55648859644) * invT);
  qf[381] *= k_f;
  qr[381] *= k_f * exp(-(-g_RT[4] + g_RT[12] + g_RT[24] - g_RT[26]));
  // reaction 382:  c4h8-1 + o => c3h6 + ch2o
  k_f = 0.723 * exp((2.34) * tc[0] - (-528.377499094956) * invT);
  qf[382] *= k_f;
  qr[382] *= k_f * exp(-(g_RT[2] - g_RT[12] - g_RT[22] + g_RT[26]));
  // reaction 383:  c3h6 + ch2o => c4h8-1 + o
  k_f = 0.2 * exp((2.34) * tc[0] - (40398.2339308029) * invT);
  qf[383] *= k_f;
  qr[383] *= k_f * exp(-(-g_RT[2] + g_RT[12] + g_RT[22] - g_RT[26]));
  // reaction 384:  c4h8-1 + o => c2h4 + ch3cho
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  qf[384] *= k_f;
  qr[384] *= k_f * exp(-(g_RT[2] - g_RT[14] - g_RT[20] + g_RT[26]));
  // reaction 385:  c2h4 + ch3cho => c4h8-1 + o
  k_f = 2070000 * exp(-(42823.7382599816) * invT);
  qf[385] *= k_f;
  qr[385] *= k_f * exp(-(-g_RT[2] + g_RT[14] + g_RT[20] - g_RT[26]));
  // reaction 386:  c4h8-1 + o => c2h5 + ch3co
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  qf[386] *= k_f;
  qr[386] *= k_f * exp(-(g_RT[2] - g_RT[15] + g_RT[26] - g_RT_qss[2]));
  // reaction 387:  c2h5 + ch3co => c4h8-1 + o
  k_f = 2350000 * exp(-(19197.7158004501) * invT);
  qf[387] *= k_f;
  qr[387] *= k_f * exp(-(-g_RT[2] + g_RT[15] - g_RT[26] + g_RT_qss[2]));
  // reaction 388:  c4h8-1 + oh => c2h5 + ch3cho
  k_f = 1000000;
  qf[388] *= k_f;
  qr[388] *= k_f * exp(-(g_RT[4] - g_RT[15] - g_RT[20] + g_RT[26]));
  // reaction 389:  c2h5 + ch3cho => c4h8-1 + oh
  k_f = 9330000 * exp(-(10029.1081494881) * invT);
  qf[389] *= k_f;
  qr[389] *= k_f * exp(-(-g_RT[4] + g_RT[15] + g_RT[20] - g_RT[26]));
  // reaction 390:  c4h8-1 + oh => c2h6 + ch3co
  k_f = 500000;
  qf[390] *= k_f;
  qr[390] *= k_f * exp(-(g_RT[4] - g_RT[13] + g_RT[26] - g_RT_qss[2]));
  // reaction 391:  c2h6 + ch3co => c4h8-1 + oh
  k_f = 9830000 * exp(-(16319.3164720471) * invT);
  qf[391] *= k_f;
  qr[391] *= k_f * exp(-(-g_RT[4] + g_RT[13] - g_RT[26] + g_RT_qss[2]));
  // reaction 392:  c4h8-1 + o => c2h5co + ch3
  k_f = 13000000 * exp(-(427.734165934012) * invT);
  qf[392] *= k_f;
  qr[392] *= k_f * exp(-(g_RT[2] - g_RT[8] + g_RT[26] - g_RT_qss[5]));
  // reaction 393:  c2h5co + ch3 => c4h8-1 + o
  k_f = 480000 * exp(-(16379.7024719436) * invT);
  qf[393] *= k_f;
  qr[393] *= k_f * exp(-(-g_RT[2] + g_RT[8] - g_RT[26] + g_RT_qss[5]));
  // reaction 394:  c4h8-1 + oh => c2h5cho + ch3
  k_f = 1000000;
  qf[394] *= k_f;
  qr[394] *= k_f * exp(-(g_RT[4] - g_RT[8] + g_RT[26] - g_RT[28]));
  // reaction 395:  c2h5cho + ch3 => c4h8-1 + oh
  k_f = 49500 * exp(-(8524.49031873195) * invT);
  qf[395] *= k_f;
  qr[395] *= k_f * exp(-(-g_RT[4] + g_RT[8] - g_RT[26] + g_RT[28]));
  // reaction 396:  c4h8-1 + oh => c2h5co + ch4
  k_f = 500000;
  qf[396] *= k_f;
  qr[396] *= k_f * exp(-(g_RT[4] - g_RT[9] + g_RT[26] - g_RT_qss[5]));
  // reaction 397:  c2h5co + ch4 => c4h8-1 + oh
  k_f = 22000000 * exp(-(17245.2351371277) * invT);
  qf[397] *= k_f;
  qr[397] *= k_f * exp(-(-g_RT[4] + g_RT[9] - g_RT[26] + g_RT_qss[5]));
  // reaction 398:  c4h8-1 + ch3o2 => c4h7 + ch3o2h
  k_f = 1400000 * exp(-(7497.92832049032) * invT);
  qf[398] *= k_f;
  qr[398] *= k_f * exp(-(-g_RT[25] + g_RT[26] + g_RT[31] - g_RT[32]));
  // reaction 399:  c4h7 + ch3o2h => c4h8-1 + ch3o2
  k_f = 316000 * exp(-(6541.81665546136) * invT);
  qf[399] *= k_f;
  qr[399] *= k_f * exp(-(g_RT[25] - g_RT[26] - g_RT[31] + g_RT[32]));
  // reaction 400:  c4h8ooh1-3o2 => c4h8ooh1-3 + o2
  k_f = 5.601e+22 * exp((-2.23) * tc[0] - (19102.1046339472) * invT);
  qf[400] *= k_f;
  qr[400] *= k_f * exp(-(-g_RT[3] + g_RT[35] - g_RT_qss[9])) * (refCinv);
  // reaction 401:  c4h8ooh1-3 + o2 => c4h8ooh1-3o2
  k_f = 7540000;
  qf[401] *= k_f;
  qr[401] *= k_f * exp(-(g_RT[3] - g_RT[35] + g_RT_qss[9])) * (refC);
  // reaction 402:  c4h8ooh1-3o2 => nc4ket13 + oh
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  qf[402] *= k_f;
  qr[402] *= k_f * exp(-(-g_RT[4] + g_RT[35] - g_RT[39])) * (refCinv);
  // reaction 403:  nc4ket13 + oh => c4h8ooh1-3o2
  k_f = 0.006893 * exp((1.3) * tc[0] - (22493.784961471) * invT);
  qf[403] *= k_f;
  qr[403] *= k_f * exp(-(g_RT[4] - g_RT[35] + g_RT[39])) * (refC);
  // reaction 404:  c4h8ooh1-3 => c3h6 + ch2o + oh
  k_f = 66370000000000 * exp((-0.16) * tc[0] - (15046.1783075611) * invT);
  qf[404] *= k_f;
  qr[404] *= k_f * exp(-(-g_RT[4] - g_RT[12] - g_RT[22] + g_RT_qss[9])) *
             ((refCinv * refCinv));
  // reaction 405:  pc4h9o2 => c4h8ooh1-3
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[405] *= k_f;
  qr[405] *= k_f * exp(-(g_RT[36] - g_RT_qss[9]));
  // reaction 406:  c4h8ooh1-3 => pc4h9o2
  k_f = 3231000000 * exp((-0.14) * tc[0] - (3960.81837654895) * invT);
  qf[406] *= k_f;
  qr[406] *= k_f * exp(-(-g_RT[36] + g_RT_qss[9]));
  // reaction 407:  c2h5cho + ch3o2 => c2h5co + ch3o2h
  k_f = 3010000 * exp(-(5998.34265639226) * invT);
  qf[407] *= k_f;
  qr[407] *= k_f * exp(-(g_RT[28] + g_RT[31] - g_RT[32] - g_RT_qss[5]));
  // reaction 408:  c2h5co + ch3o2h => c2h5cho + ch3o2
  k_f = 23580000 * exp((-0.51) * tc[0] - (4520.3953089238) * invT);
  qf[408] *= k_f;
  qr[408] *= k_f * exp(-(-g_RT[28] - g_RT[31] + g_RT[32] + g_RT_qss[5]));
  // reaction 409:  c2h5cho + c4h7 => c2h5co + c4h8-1
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[409] *= k_f;
  qr[409] *= k_f * exp(-(g_RT[25] - g_RT[26] + g_RT[28] - g_RT_qss[5]));
  // reaction 410:  c2h5co + c4h8-1 => c2h5cho + c4h7
  k_f = 10000000 * exp(-(14090.0666425322) * invT);
  qf[410] *= k_f;
  qr[410] *= k_f * exp(-(-g_RT[25] + g_RT[26] - g_RT[28] + g_RT_qss[5]));
  // reaction 411:  c3h4-a + ho2 => c2h4 + co + oh
  k_f = 1000000 * exp(-(7045.03332126608) * invT);
  qf[411] *= k_f;
  qr[411] *= k_f * exp(-(-g_RT[4] - g_RT[6] + g_RT[10] - g_RT[14] + g_RT[21])) *
             (refCinv);
  // reaction 412:  c2h4 + co + oh => c3h4-a + ho2
  k_f = 1e-12;
  qf[412] *= k_f;
  qr[412] *=
    k_f * exp(-(g_RT[4] + g_RT[6] - g_RT[10] + g_RT[14] - g_RT[21])) * (refC);
  // reaction 413:  c3h4-a + ho2 => c3h3 + h2o2
  k_f = 30000000 * exp(-(7045.03332126608) * invT);
  qf[413] *= k_f;
  qr[413] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[21] - g_RT[38]));
  // reaction 414:  c3h3 + h2o2 => c3h4-a + ho2
  k_f = 15510000000 * exp((-1.38) * tc[0] - (22141.5332954077) * invT);
  qf[414] *= k_f;
  qr[414] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[21] + g_RT[38]));
  // reaction 415:  c3h6 + o2 => c3h5-a + ho2
  k_f = 4000000 * exp(-(20078.3449656083) * invT);
  qf[415] *= k_f;
  qr[415] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[22] - g_RT[37]));
  // reaction 416:  c3h5-a + ho2 => c3h6 + o2
  k_f = 33320 * exp((0.34) * tc[0] - (-279.788466187424) * invT);
  qf[416] *= k_f;
  qr[416] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[22] + g_RT[37]));
  // reaction 417:  c3h6 + ch3 => c3h5-a + ch4
  k_f = 2.21e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
  qf[417] *= k_f;
  qr[417] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[22] - g_RT[37]));
  // reaction 418:  c3h5-a + ch4 => c3h6 + ch3
  k_f = 2.647e-05 * exp((3.51) * tc[0] - (11664.5623133534) * invT);
  qf[418] *= k_f;
  qr[418] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[22] + g_RT[37]));
  // reaction 419:  c2h5 + c3h6 => c2h6 + c3h5-a
  k_f = 100000 * exp(-(4931.52332488625) * invT);
  qf[419] *= k_f;
  qr[419] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[22] - g_RT[37]));
  // reaction 420:  c2h6 + c3h5-a => c2h5 + c3h6
  k_f = 0.5369 * exp((1.33) * tc[0] - (8272.88198582959) * invT);
  qf[420] *= k_f;
  qr[420] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[22] + g_RT[37]));
  // reaction 421:  c3h5-a + ho2 => c2h3 + ch2o + oh
  k_f = 1e-24;
  qf[421] *= k_f;
  qr[421] *= k_f *
             exp(-(-g_RT[4] + g_RT[10] - g_RT[12] - g_RT[17] + g_RT[37])) *
             (refCinv);
  // reaction 422:  c2h3 + ch2o + oh => c3h5-a + ho2
  k_f = 1e-42;
  qf[422] *= k_f;
  qr[422] *=
    k_f * exp(-(g_RT[4] - g_RT[10] + g_RT[12] + g_RT[17] - g_RT[37])) * (refC);
  // reaction 423:  c3h5-a + h => c3h4-a + h2
  k_f = 18100000;
  qf[423] *= k_f;
  qr[423] *= k_f * exp(-(g_RT[0] - g_RT[1] - g_RT[21] + g_RT[37]));
  // reaction 424:  c3h4-a + h2 => c3h5-a + h
  k_f = 12300000 * exp((0.12) * tc[0] - (23766.9231259569) * invT);
  qf[424] *= k_f;
  qr[424] *= k_f * exp(-(-g_RT[0] + g_RT[1] + g_RT[21] - g_RT[37]));
  // reaction 425:  c3h5-a + ch3 => c3h4-a + ch4
  k_f = 100000;
  qf[425] *= k_f;
  qr[425] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[21] + g_RT[37]));
  // reaction 426:  c3h4-a + ch4 => c3h5-a + ch3
  k_f = 4921000 * exp((0.05) * tc[0] - (24043.6922921495) * invT);
  qf[426] *= k_f;
  qr[426] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[21] - g_RT[37]));
  // reaction 427:  c2h5 + c3h5-a => c2h6 + c3h4-a
  k_f = 400000;
  qf[427] *= k_f;
  qr[427] *= k_f * exp(-(-g_RT[13] + g_RT[15] - g_RT[21] + g_RT[37]));
  // reaction 428:  c2h6 + c3h4-a => c2h5 + c3h5-a
  k_f = 1802000 * exp((0.05) * tc[0] - (20294.7281319043) * invT);
  qf[428] *= k_f;
  qr[428] *= k_f * exp(-(g_RT[13] - g_RT[15] + g_RT[21] - g_RT[37]));
  // reaction 429:  c2h5 + c3h5-a => c2h4 + c3h6
  k_f = 400000;
  qf[429] *= k_f;
  qr[429] *= k_f * exp(-(-g_RT[14] + g_RT[15] - g_RT[22] + g_RT[37]));
  // reaction 430:  c2h4 + c3h6 => c2h5 + c3h5-a
  k_f = 69370000000 * exp((-1.33) * tc[0] - (26569.8399544892) * invT);
  qf[430] *= k_f;
  qr[430] *= k_f * exp(-(g_RT[14] - g_RT[15] + g_RT[22] - g_RT[37]));
  // reaction 431:  c2h3 + c3h5-a => c2h4 + c3h4-a
  k_f = 1000000;
  qf[431] *= k_f;
  qr[431] *= k_f * exp(-(-g_RT[14] + g_RT[17] - g_RT[21] + g_RT[37]));
  // reaction 432:  c2h4 + c3h4-a => c2h3 + c3h5-a
  k_f = 16240000 * exp((0.05) * tc[0] - (24250.0111251294) * invT);
  qf[432] *= k_f;
  qr[432] *= k_f * exp(-(g_RT[14] - g_RT[17] + g_RT[21] - g_RT[37]));
  // reaction 433:  c3h4-a + c3h6 => 2 c3h5-a
  k_f = 839100000000 * exp((-1.29) * tc[0] - (16953.369470961) * invT);
  qf[433] *= k_f;
  qr[433] *= k_f * exp(-(g_RT[21] + g_RT[22] - 2.000000 * g_RT[37]));
  // reaction 434:  2 c3h5-a => c3h4-a + c3h6
  k_f = 1000000;
  qf[434] *= k_f;
  qr[434] *= k_f * exp(-(-g_RT[21] - g_RT[22] + 2.000000 * g_RT[37]));
  // reaction 435:  c3h5-a + o2 => c2h3cho + oh
  k_f = 24700000 * exp((-0.44) * tc[0] - (11584.0476468246) * invT);
  qf[435] *= k_f;
  qr[435] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[34] + g_RT[37]));
  // reaction 436:  c2h3cho + oh => c3h5-a + o2
  k_f = 190300000 * exp((-0.8) * tc[0] - (37680.8639354574) * invT);
  qf[436] *= k_f;
  qr[436] *= k_f * exp(-(-g_RT[3] + g_RT[4] + g_RT[34] - g_RT[37]));
  // reaction 437:  c3h4-a + o2 => c3h3 + ho2
  k_f = 40000000 * exp(-(19705.9646329128) * invT);
  qf[437] *= k_f;
  qr[437] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[21] - g_RT[38]));
  // reaction 438:  c3h3 + ho2 => c3h4-a + o2
  k_f = 117500 * exp((0.3) * tc[0] - (19.1222333005793) * invT);
  qf[438] *= k_f;
  qr[438] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[21] + g_RT[38]));
  // reaction 439:  c3h3 + h => c3h2 + h2
  k_f = 50000000;
  qf[439] *= k_f;
  qr[439] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[38] - g_RT_qss[10]));
  // reaction 440:  c3h2 + h2 => c3h3 + h
  k_f = 38530 * exp((0.38) * tc[0] - (2314.79666270171) * invT);
  qf[440] *= k_f;
  qr[440] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[38] + g_RT_qss[10]));
  // reaction 441:  c3h4-a + oh => c3h3 + h2o
  k_f = 10 * exp((2) * tc[0] - (503.21666580472) * invT);
  qf[441] *= k_f;
  qr[441] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[21] - g_RT[38]));
  // reaction 442:  c3h3 + h2o => c3h4-a + oh
  k_f = 7.003 * exp((1.97) * tc[0] - (17371.0393035789) * invT);
  qf[442] *= k_f;
  qr[442] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[21] + g_RT[38]));
  // reaction 443:  c3h4-a + o => c2h4 + co
  k_f = 7800000 * exp(-(805.146665287552) * invT);
  qf[443] *= k_f;
  qr[443] *= k_f * exp(-(g_RT[2] - g_RT[6] - g_RT[14] + g_RT[21]));
  // reaction 444:  c2h4 + co => c3h4-a + o
  k_f = 82800000 * exp((-0.21) * tc[0] - (62801.439892429) * invT);
  qf[444] *= k_f;
  qr[444] *= k_f * exp(-(-g_RT[2] + g_RT[6] + g_RT[14] - g_RT[21]));
  // reaction 445:  c3h2 + oh => c2h2 + hco
  k_f = 50000000;
  qf[445] *= k_f;
  qr[445] *= k_f * exp(-(g_RT[4] - g_RT[16] - g_RT_qss[0] + g_RT_qss[10]));
  // reaction 446:  c2h2 + hco => c3h2 + oh
  k_f = 290700000000000 * exp((-1.39) * tc[0] - (39512.5725989866) * invT);
  qf[446] *= k_f;
  qr[446] *= k_f * exp(-(-g_RT[4] + g_RT[16] + g_RT_qss[0] - g_RT_qss[10]));
  // reaction 447:  c3h5-a => c3h4-a + h
  k_f = 6.663e+15 * exp((-0.43) * tc[0] - (31813.3576121744) * invT);
  qf[447] *= k_f;
  qr[447] *= k_f * exp(-(-g_RT[0] - g_RT[21] + g_RT[37])) * (refCinv);
  // reaction 448:  c3h4-a + h => c3h5-a
  k_f = 240000 * exp((0.69) * tc[0] - (1513.17251407479) * invT);
  qf[448] *= k_f;
  qr[448] *= k_f * exp(-(g_RT[0] + g_RT[21] - g_RT[37])) * (refC);
  // reaction 449:  c3h4-a + h => c3h3 + h2
  k_f = 20 * exp((2) * tc[0] - (2516.0833290236) * invT);
  qf[449] *= k_f;
  qr[449] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[21] - g_RT[38]));
  // reaction 450:  c3h3 + h2 => c3h4-a + h
  k_f = 3.235 * exp((1.97) * tc[0] - (11755.1413131983) * invT);
  qf[450] *= k_f;
  qr[450] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[21] + g_RT[38]));
  // reaction 451:  c3h4-a + ch3 => c3h3 + ch4
  k_f = 3.67e-08 * exp((4.01) * tc[0] - (3436.96982744624) * invT);
  qf[451] *= k_f;
  qr[451] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[21] - g_RT[38]));
  // reaction 452:  c3h3 + ch4 => c3h4-a + ch3
  k_f = 1.551e-07 * exp((3.98) * tc[0] - (12917.5718112072) * invT);
  qf[452] *= k_f;
  qr[452] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[21] + g_RT[38]));
  // reaction 453:  c3h4-a + c3h5-a => c3h3 + c3h6
  k_f = 200000 * exp(-(3874.76832669634) * invT);
  qf[453] *= k_f;
  qr[453] *= k_f * exp(-(g_RT[21] - g_RT[22] + g_RT[37] - g_RT[38]));
  // reaction 454:  c3h3 + c3h6 => c3h4-a + c3h5-a
  k_f = 26440000000000 * exp((-2.71) * tc[0] - (21205.5502970109) * invT);
  qf[454] *= k_f;
  qr[454] *= k_f * exp(-(-g_RT[21] + g_RT[22] - g_RT[37] + g_RT[38]));
  // reaction 455:  c3h3 + oh => c3h2 + h2o
  k_f = 10000000;
  qf[455] *= k_f;
  qr[455] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[38] - g_RT_qss[10]));
  // reaction 456:  c3h2 + h2o => c3h3 + oh
  k_f = 1343000000 * exp(-(7890.437319818) * invT);
  qf[456] *= k_f;
  qr[456] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[38] + g_RT_qss[10]));
  // reaction 457:  c3h3 + o2 => ch2co + hco
  k_f = 30100 * exp(-(1444.23183085955) * invT);
  qf[457] *= k_f;
  qr[457] *= k_f * exp(-(g_RT[3] - g_RT[18] + g_RT[38] - g_RT_qss[0]));
  // reaction 458:  ch2co + hco => c3h3 + o2
  k_f = 488100 * exp(-(29926.2951154067) * invT);
  qf[458] *= k_f;
  qr[458] *= k_f * exp(-(-g_RT[3] + g_RT[18] - g_RT[38] + g_RT_qss[0]));
  // reaction 459:  pc4h9o2 => o2 + pc4h9
  k_f = 6.155e+19 * exp((-1.38) * tc[0] - (17869.2238027256) * invT);
  qf[459] *= k_f;
  qr[459] *= k_f * exp(-(-g_RT[3] + g_RT[36] - g_RT_qss[4])) * (refCinv);
  // reaction 460:  o2 + pc4h9 => pc4h9o2
  k_f = 4520000;
  qf[460] *= k_f;
  qr[460] *= k_f * exp(-(g_RT[3] - g_RT[36] + g_RT_qss[4])) * (refC);
  // reaction 461:  ch2cho => ch2co + h
  k_f = 3.094e+15 * exp((-0.26) * tc[0] - (25573.4709561959) * invT);
  qf[461] *= k_f;
  qr[461] *= k_f * exp(-(-g_RT[0] - g_RT[18] + g_RT_qss[3])) * (refCinv);
  // reaction 462:  ch2co + h => ch2cho
  k_f = 50000000 * exp(-(6189.56498939805) * invT);
  qf[462] *= k_f;
  qr[462] *= k_f * exp(-(g_RT[0] + g_RT[18] - g_RT_qss[3])) * (refC);
  // reaction 463:  ch2cho + o2 => ch2o + co + oh
  k_f = 20000000 * exp(-(2113.50999637982) * invT);
  qf[463] *= k_f;
  qr[463] *= k_f *
             exp(-(g_RT[3] - g_RT[4] - g_RT[6] - g_RT[12] + g_RT_qss[3])) *
             (refCinv);
  // reaction 464:  nc4ket13 => ch2cho + ch3cho + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[464] *= k_f;
  qr[464] *= k_f * exp(-(-g_RT[4] - g_RT[20] + g_RT[39] - g_RT_qss[3])) *
             ((refCinv * refCinv));
  // reaction 465:  c3h5-a + o2 => c3h4-a + ho2
  k_f = 2.18e+15 * exp((-2.85) * tc[0] - (15478.9446401532) * invT);
  qf[465] *= k_f;
  qr[465] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[21] + g_RT[37]));
  // reaction 466:  c3h4-a + ho2 => c3h5-a + o2
  k_f = 26900000000000 * exp((-2.4) * tc[0] - (10315.9416489968) * invT);
  qf[466] *= k_f;
  qr[466] *= k_f * exp(-(-g_RT[3] + g_RT[10] + g_RT[21] - g_RT[37]));
  // reaction 467:  c3h5-a + o2 => ch2cho + ch2o
  k_f = 7140000000 * exp((-1.21) * tc[0] - (10592.7108151893) * invT);
  qf[467] *= k_f;
  qr[467] *= k_f * exp(-(g_RT[3] - g_RT[12] + g_RT[37] - g_RT_qss[3]));
  // reaction 468:  ch2cho + ch2o => c3h5-a + o2
  k_f = 49440000000 * exp((-1.4) * tc[0] - (44595.0609236143) * invT);
  qf[468] *= k_f;
  qr[468] *= k_f * exp(-(-g_RT[3] + g_RT[12] - g_RT[37] + g_RT_qss[3]));
  // reaction 469:  c3h5-a + o2 => c2h2 + ch2o + oh
  k_f = 9.72e+23 * exp((-5.71) * tc[0] - (10793.9974815112) * invT);
  qf[469] *= k_f;
  qr[469] *= k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[12] - g_RT[16] + g_RT[37])) *
             (refCinv);
  // reaction 470:  hcco + o2 => co2 + hco
  k_f = 240000 * exp(-(-429.747032597231) * invT);
  qf[470] *= k_f;
  qr[470] *= k_f * exp(-(g_RT[3] - g_RT[7] + g_RT[19] - g_RT_qss[0]));
  // reaction 471:  co2 + hco => hcco + o2
  k_f = 147400000 * exp(-(67229.7465515105) * invT);
  qf[471] *= k_f;
  qr[471] *= k_f * exp(-(-g_RT[3] + g_RT[7] - g_RT[19] + g_RT_qss[0]));
  // reaction 472:  ch3 + o2 => ch2o + oh
  k_f = 747000 * exp(-(7170.83748771726) * invT);
  qf[472] *= k_f;
  qr[472] *= k_f * exp(-(g_RT[3] - g_RT[4] + g_RT[8] - g_RT[12]));
  // reaction 473:  ch2o + oh => ch3 + o2
  k_f = 777800 * exp(-(34102.9934415859) * invT);
  qf[473] *= k_f;
  qr[473] *= k_f * exp(-(-g_RT[3] + g_RT[4] - g_RT[8] + g_RT[12]));
  // reaction 474:  c2h4 + h2 => 2 ch3
  k_f = 3767000 * exp((0.83) * tc[0] - (42627.4837603178) * invT);
  qf[474] *= k_f;
  qr[474] *= k_f * exp(-(g_RT[1] - 2.000000 * g_RT[8] + g_RT[14]));
  // reaction 475:  2 ch3 => c2h4 + h2
  k_f = 100000000 * exp(-(16102.933305751) * invT);
  qf[475] *= k_f;
  qr[475] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[8] - g_RT[14]));
  // reaction 476:  nc3h7cho + o2 => ho2 + nc3h7co
  k_f = 20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
  qf[476] *= k_f;
  qr[476] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[40] - g_RT_qss[12]));
  // reaction 477:  ho2 + nc3h7co => nc3h7cho + o2
  k_f = 10 * exp((0.5) * tc[0] - (2012.86666321888) * invT);
  qf[477] *= k_f;
  qr[477] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[40] + g_RT_qss[12]));
  // reaction 478:  nc3h7cho + oh => h2o + nc3h7co
  k_f = 26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
  qf[478] *= k_f;
  qr[478] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[40] - g_RT_qss[12]));
  // reaction 479:  h2o + nc3h7co => nc3h7cho + oh
  k_f = 18520 * exp((0.75) * tc[0] - (15710.4243064233) * invT);
  qf[479] *= k_f;
  qr[479] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[40] + g_RT_qss[12]));
  // reaction 480:  h + nc3h7cho => h2 + nc3h7co
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  qf[480] *= k_f;
  qr[480] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[40] - g_RT_qss[12]));
  // reaction 481:  h2 + nc3h7co => h + nc3h7cho
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  qf[481] *= k_f;
  qr[481] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[40] + g_RT_qss[12]));
  // reaction 482:  nc3h7cho + o => nc3h7co + oh
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  qf[482] *= k_f;
  qr[482] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[40] - g_RT_qss[12]));
  // reaction 483:  nc3h7co + oh => nc3h7cho + o
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  qf[483] *= k_f;
  qr[483] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[40] + g_RT_qss[12]));
  // reaction 484:  ho2 + nc3h7cho => h2o2 + nc3h7co
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  qf[484] *= k_f;
  qr[484] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[40] - g_RT_qss[12]));
  // reaction 485:  h2o2 + nc3h7co => ho2 + nc3h7cho
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  qf[485] *= k_f;
  qr[485] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[40] + g_RT_qss[12]));
  // reaction 486:  ch3 + nc3h7cho => ch4 + nc3h7co
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[486] *= k_f;
  qr[486] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[40] - g_RT_qss[12]));
  // reaction 487:  ch4 + nc3h7co => ch3 + nc3h7cho
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  qf[487] *= k_f;
  qr[487] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[40] + g_RT_qss[12]));
  // reaction 488:  ch3o2 + nc3h7cho => ch3o2h + nc3h7co
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  qf[488] *= k_f;
  qr[488] *= k_f * exp(-(g_RT[31] - g_RT[32] + g_RT[40] - g_RT_qss[12]));
  // reaction 489:  ch3o2h + nc3h7co => ch3o2 + nc3h7cho
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  qf[489] *= k_f;
  qr[489] *= k_f * exp(-(-g_RT[31] + g_RT[32] - g_RT[40] + g_RT_qss[12]));
  // reaction 490:  nc3h7co => co + nc3h7
  k_f = 5.325e+15 * exp((-0.86) * tc[0] - (6743.10332178324) * invT);
  qf[490] *= k_f;
  qr[490] *= k_f * exp(-(-g_RT[6] - g_RT[24] + g_RT_qss[12])) * (refCinv);
  // reaction 491:  co + nc3h7 => nc3h7co
  k_f = 150000 * exp(-(2415.43999586265) * invT);
  qf[491] *= k_f;
  qr[491] *= k_f * exp(-(g_RT[6] + g_RT[24] - g_RT_qss[12])) * (refC);
  // reaction 492:  c2h5coch2 => c2h5 + ch2co
  k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
  qf[492] *= k_f;
  qr[492] *= k_f * exp(-(-g_RT[15] - g_RT[18] + g_RT[41])) * (refCinv);
  // reaction 493:  c2h5 + ch2co => c2h5coch2
  k_f = 211000 * exp(-(3698.64249366469) * invT);
  qf[493] *= k_f;
  qr[493] *= k_f * exp(-(g_RT[15] + g_RT[18] - g_RT[41])) * (refC);
  // reaction 494:  nc3h7coch2 => ch2co + nc3h7
  k_f = 1.226e+18 * exp((-1.4) * tc[0] - (21864.7641292151) * invT);
  qf[494] *= k_f;
  qr[494] *= k_f * exp(-(-g_RT[18] - g_RT[24] + g_RT[42])) * (refCinv);
  // reaction 495:  ch2co + nc3h7 => nc3h7coch2
  k_f = 100000 * exp(-(5837.31332333475) * invT);
  qf[495] *= k_f;
  qr[495] *= k_f * exp(-(g_RT[18] + g_RT[24] - g_RT[42])) * (refC);
  // reaction 496:  nc4h9cho + o2 => ho2 + nc4h9co
  k_f = 20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
  qf[496] *= k_f;
  qr[496] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[43] - g_RT[44]));
  // reaction 497:  ho2 + nc4h9co => nc4h9cho + o2
  k_f = 10 * exp(-(20128.6666321888) * invT);
  qf[497] *= k_f;
  qr[497] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[43] + g_RT[44]));
  // reaction 498:  nc4h9cho + oh => h2o + nc4h9co
  k_f = 26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
  qf[498] *= k_f;
  qr[498] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[43] - g_RT[44]));
  // reaction 499:  h2o + nc4h9co => nc4h9cho + oh
  k_f = 21430 * exp((0.73) * tc[0] - (15720.4886397394) * invT);
  qf[499] *= k_f;
  qr[499] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[43] + g_RT[44]));
  // reaction 500:  h + nc4h9cho => h2 + nc4h9co
  k_f = 40000000 * exp(-(2113.50999637982) * invT);
  qf[500] *= k_f;
  qr[500] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[43] - g_RT[44]));
  // reaction 501:  h2 + nc4h9co => h + nc4h9cho
  k_f = 18000000 * exp(-(12077.1999793133) * invT);
  qf[501] *= k_f;
  qr[501] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[43] + g_RT[44]));
  // reaction 502:  nc4h9cho + o => nc4h9co + oh
  k_f = 5000000 * exp(-(900.757831790448) * invT);
  qf[502] *= k_f;
  qr[502] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[43] - g_RT[44]));
  // reaction 503:  nc4h9co + oh => nc4h9cho + o
  k_f = 1000000 * exp(-(9561.11665028967) * invT);
  qf[503] *= k_f;
  qr[503] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[43] + g_RT[44]));
  // reaction 504:  ho2 + nc4h9cho => h2o2 + nc4h9co
  k_f = 2800000 * exp(-(6843.74665494419) * invT);
  qf[504] *= k_f;
  qr[504] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[43] - g_RT[44]));
  // reaction 505:  h2o2 + nc4h9co => ho2 + nc4h9cho
  k_f = 1000000 * exp(-(5032.1666580472) * invT);
  qf[505] *= k_f;
  qr[505] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[43] + g_RT[44]));
  // reaction 506:  ch3 + nc4h9cho => ch4 + nc4h9co
  k_f = 1700000 * exp(-(4247.14865939183) * invT);
  qf[506] *= k_f;
  qr[506] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[43] - g_RT[44]));
  // reaction 507:  ch4 + nc4h9co => ch3 + nc4h9cho
  k_f = 15000000 * exp(-(14090.0666425322) * invT);
  qf[507] *= k_f;
  qr[507] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[43] + g_RT[44]));
  // reaction 508:  ch3o2 + nc4h9cho => ch3o2h + nc4h9co
  k_f = 1000000 * exp(-(4780.55832514484) * invT);
  qf[508] *= k_f;
  qr[508] *= k_f * exp(-(g_RT[31] - g_RT[32] + g_RT[43] - g_RT[44]));
  // reaction 509:  ch3o2h + nc4h9co => ch3o2 + nc4h9cho
  k_f = 25000 * exp(-(5032.1666580472) * invT);
  qf[509] *= k_f;
  qr[509] *= k_f * exp(-(-g_RT[31] + g_RT[32] - g_RT[43] + g_RT[44]));
  // reaction 510:  nc4h9co => co + pc4h9
  k_f = 100000000000 * exp(-(4830.87999172531) * invT);
  qf[510] *= k_f;
  qr[510] *= k_f * exp(-(-g_RT[6] + g_RT[44] - g_RT_qss[4])) * (refCinv);
  // reaction 511:  co + pc4h9 => nc4h9co
  k_f = 100000;
  qf[511] *= k_f;
  qr[511] *= k_f * exp(-(g_RT[6] - g_RT[44] + g_RT_qss[4])) * (refC);
  // reaction 512:  ch2(s) + ch4 => 2 ch3
  k_f = 40000000;
  qf[512] *= k_f;
  qr[512] *= k_f * exp(-(-2.000000 * g_RT[8] + g_RT[9] + g_RT_qss[11]));
  // reaction 513:  2 ch3 => ch2(s) + ch4
  k_f = 5429000000 * exp((-0.89) * tc[0] - (7875.34081984386) * invT);
  qf[513] *= k_f;
  qr[513] *= k_f * exp(-(2.000000 * g_RT[8] - g_RT[9] - g_RT_qss[11]));
  // reaction 514:  c2h6 + ch2(s) => c2h5 + ch3
  k_f = 120000000;
  qf[514] *= k_f;
  qr[514] *= k_f * exp(-(-g_RT[8] + g_RT[13] - g_RT[15] + g_RT_qss[11]));
  // reaction 515:  c2h5 + ch3 => c2h6 + ch2(s)
  k_f = 104100000 * exp((-0.33) * tc[0] - (9973.75431624954) * invT);
  qf[515] *= k_f;
  qr[515] *= k_f * exp(-(g_RT[8] - g_RT[13] + g_RT[15] - g_RT_qss[11]));
  // reaction 516:  ch2(s) + o2 => co + h + oh
  k_f = 70000000;
  qf[516] *= k_f;
  qr[516] *= k_f *
             exp(-(-g_RT[0] + g_RT[3] - g_RT[4] - g_RT[6] + g_RT_qss[11])) *
             (refCinv);
  // reaction 517:  ch2(s) + h2 => ch3 + h
  k_f = 70000000;
  qf[517] *= k_f;
  qr[517] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[8] + g_RT_qss[11]));
  // reaction 518:  ch3 + h => ch2(s) + h2
  k_f = 248200000000 * exp((-0.89) * tc[0] - (8116.88481943013) * invT);
  qf[518] *= k_f;
  qr[518] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[8] - g_RT_qss[11]));
  // reaction 519:  ch2(s) + o => co + 2 h
  k_f = 30000000;
  qf[519] *= k_f;
  qr[519] *= k_f *
             exp(-(-2.000000 * g_RT[0] + g_RT[2] - g_RT[6] + g_RT_qss[11])) *
             (refCinv);
  // reaction 520:  ch2(s) + oh => ch2o + h
  k_f = 30000000;
  qf[520] *= k_f;
  qr[520] *= k_f * exp(-(-g_RT[0] + g_RT[4] - g_RT[12] + g_RT_qss[11]));
  // reaction 521:  ch2o + h => ch2(s) + oh
  k_f = 3194000000000 * exp((-0.89) * tc[0] - (44212.6162576027) * invT);
  qf[521] *= k_f;
  qr[521] *= k_f * exp(-(g_RT[0] - g_RT[4] + g_RT[12] - g_RT_qss[11]));
  // reaction 522:  ch2(s) + co2 => ch2o + co
  k_f = 3000000;
  qf[522] *= k_f;
  qr[522] *= k_f * exp(-(-g_RT[6] + g_RT[7] - g_RT[12] + g_RT_qss[11]));
  // reaction 523:  ch2o + co => ch2(s) + co2
  k_f = 2852000000 * exp((-0.89) * tc[0] - (32970.7559435252) * invT);
  qf[523] *= k_f;
  qr[523] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[12] - g_RT_qss[11]));
  // reaction 524:  ch2(s) + ch3 => c2h4 + h
  k_f = 20000000;
  qf[524] *= k_f;
  qr[524] *= k_f * exp(-(-g_RT[0] + g_RT[8] - g_RT[14] + g_RT_qss[11]));
  // reaction 525:  c2h4 + h => ch2(s) + ch3
  k_f = 2671000000 * exp((-0.06) * tc[0] - (34641.4352739969) * invT);
  qf[525] *= k_f;
  qr[525] *= k_f * exp(-(g_RT[0] - g_RT[8] + g_RT[14] - g_RT_qss[11]));
  // reaction 526:  ch2(s) + ch2co => c2h4 + co
  k_f = 160000000;
  qf[526] *= k_f;
  qr[526] *= k_f * exp(-(-g_RT[6] - g_RT[14] + g_RT[18] + g_RT_qss[11]));
  // reaction 527:  c2h4 + co => ch2(s) + ch2co
  k_f = 4596000000 * exp((-0.06) * tc[0] - (53139.6799089784) * invT);
  qf[527] *= k_f;
  qr[527] *= k_f * exp(-(g_RT[6] + g_RT[14] - g_RT[18] - g_RT_qss[11]));
  // reaction 528:  nc7h16 => c7h15-1 + h
  k_f = 1.34e+88 * exp((-21.17) * tc[0] - (71859.339876914) * invT);
  qf[528] *= k_f;
  qr[528] *= k_f * exp(-(-g_RT[0] + g_RT[45] - g_RT_qss[13])) * (refCinv);
  // reaction 529:  c7h15-1 + h => nc7h16
  k_f = 3.374e+76 * exp((-20.22) * tc[0] - (19932.4121325249) * invT);
  qf[529] *= k_f;
  qr[529] *= k_f * exp(-(g_RT[0] - g_RT[45] + g_RT_qss[13])) * (refC);
  // reaction 530:  nc7h16 => c7h15-2 + h
  k_f = 6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
  qf[530] *= k_f;
  qr[530] *= k_f * exp(-(-g_RT[0] + g_RT[45] - g_RT_qss[14])) * (refCinv);
  // reaction 531:  c7h15-2 + h => nc7h16
  k_f = 5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
  qf[531] *= k_f;
  qr[531] *= k_f * exp(-(g_RT[0] - g_RT[45] + g_RT_qss[14])) * (refC);
  // reaction 532:  nc7h16 => c7h15-3 + h
  k_f = 6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
  qf[532] *= k_f;
  qr[532] *= k_f * exp(-(-g_RT[0] + g_RT[45] - g_RT_qss[15])) * (refCinv);
  // reaction 533:  c7h15-3 + h => nc7h16
  k_f = 5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
  qf[533] *= k_f;
  qr[533] *= k_f * exp(-(g_RT[0] - g_RT[45] + g_RT_qss[15])) * (refC);
  // reaction 534:  nc7h16 => c7h15-4 + h
  k_f = 3.25e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
  qf[534] *= k_f;
  qr[534] *= k_f * exp(-(-g_RT[0] + g_RT[45] - g_RT_qss[16])) * (refCinv);
  // reaction 535:  c7h15-4 + h => nc7h16
  k_f = 5.187e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
  qf[535] *= k_f;
  qr[535] *= k_f * exp(-(g_RT[0] - g_RT[45] + g_RT_qss[16])) * (refC);
  // reaction 536:  nc7h16 => nc3h7 + pc4h9
  k_f = 1.415e+78 * exp((-17.71) * tc[0] - (60738.2515626297) * invT);
  qf[536] *= k_f;
  qr[536] *= k_f * exp(-(-g_RT[24] + g_RT[45] - g_RT_qss[4])) * (refCinv);
  // reaction 537:  nc3h7 + pc4h9 => nc7h16
  k_f = 1.363e+62 * exp((-16.11) * tc[0] - (16334.4129720212) * invT);
  qf[537] *= k_f;
  qr[537] *= k_f * exp(-(g_RT[24] - g_RT[45] + g_RT_qss[4])) * (refC);
  // reaction 538:  h + nc7h16 => c7h15-1 + h2
  k_f = 0.188 * exp((2.75) * tc[0] - (3160.20066125364) * invT);
  qf[538] *= k_f;
  qr[538] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[45] - g_RT_qss[13]));
  // reaction 539:  c7h15-1 + h2 => h + nc7h16
  k_f = 0.008926 * exp((2.7) * tc[0] - (5308.93582423979) * invT);
  qf[539] *= k_f;
  qr[539] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[45] + g_RT_qss[13]));
  // reaction 540:  h + nc7h16 => c7h15-2 + h2
  k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[540] *= k_f;
  qr[540] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[45] - g_RT_qss[14]));
  // reaction 541:  c7h15-2 + h2 => h + nc7h16
  k_f = 0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
  qf[541] *= k_f;
  qr[541] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[45] + g_RT_qss[14]));
  // reaction 542:  h + nc7h16 => c7h15-3 + h2
  k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[542] *= k_f;
  qr[542] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[45] - g_RT_qss[15]));
  // reaction 543:  c7h15-3 + h2 => h + nc7h16
  k_f = 0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
  qf[543] *= k_f;
  qr[543] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[45] + g_RT_qss[15]));
  // reaction 544:  h + nc7h16 => c7h15-4 + h2
  k_f = 1.3 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
  qf[544] *= k_f;
  qr[544] *= k_f * exp(-(g_RT[0] - g_RT[1] + g_RT[45] - g_RT_qss[16]));
  // reaction 545:  c7h15-4 + h2 => h + nc7h16
  k_f = 0.003913 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
  qf[545] *= k_f;
  qr[545] *= k_f * exp(-(-g_RT[0] + g_RT[1] - g_RT[45] + g_RT_qss[16]));
  // reaction 546:  nc7h16 + o => c7h15-1 + oh
  k_f = 0.193 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
  qf[546] *= k_f;
  qr[546] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[45] - g_RT_qss[13]));
  // reaction 547:  c7h15-1 + oh => nc7h16 + o
  k_f = 0.004025 * exp((2.63) * tc[0] - (2965.45581158721) * invT);
  qf[547] *= k_f;
  qr[547] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[45] + g_RT_qss[13]));
  // reaction 548:  nc7h16 + o => c7h15-2 + oh
  k_f = 0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[548] *= k_f;
  qr[548] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[45] - g_RT_qss[14]));
  // reaction 549:  c7h15-2 + oh => nc7h16 + o
  k_f = 6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
  qf[549] *= k_f;
  qr[549] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[45] + g_RT_qss[14]));
  // reaction 550:  nc7h16 + o => c7h15-3 + oh
  k_f = 0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[550] *= k_f;
  qr[550] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[45] - g_RT_qss[15]));
  // reaction 551:  c7h15-3 + oh => nc7h16 + o
  k_f = 6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
  qf[551] *= k_f;
  qr[551] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[45] + g_RT_qss[15]));
  // reaction 552:  nc7h16 + o => c7h15-4 + oh
  k_f = 0.0477 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
  qf[552] *= k_f;
  qr[552] *= k_f * exp(-(g_RT[2] - g_RT[4] + g_RT[45] - g_RT_qss[16]));
  // reaction 553:  c7h15-4 + oh => nc7h16 + o
  k_f = 6.306e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
  qf[553] *= k_f;
  qr[553] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[45] + g_RT_qss[16]));
  // reaction 554:  nc7h16 + oh => c7h15-1 + h2o
  k_f = 10500 * exp((0.97) * tc[0] - (800.114498629504) * invT);
  qf[554] *= k_f;
  qr[554] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[45] - g_RT_qss[13]));
  // reaction 555:  c7h15-1 + h2o => nc7h16 + oh
  k_f = 15000 * exp((1.05) * tc[0] - (11740.0448132241) * invT);
  qf[555] *= k_f;
  qr[555] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[45] + g_RT_qss[13]));
  // reaction 556:  nc7h16 + oh => c7h15-2 + h2o
  k_f = 94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
  qf[556] *= k_f;
  qr[556] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[45] - g_RT_qss[14]));
  // reaction 557:  c7h15-2 + h2o => nc7h16 + oh
  k_f = 0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
  qf[557] *= k_f;
  qr[557] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[45] + g_RT_qss[14]));
  // reaction 558:  nc7h16 + oh => c7h15-3 + h2o
  k_f = 94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
  qf[558] *= k_f;
  qr[558] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[45] - g_RT_qss[15]));
  // reaction 559:  c7h15-3 + h2o => nc7h16 + oh
  k_f = 0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
  qf[559] *= k_f;
  qr[559] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[45] + g_RT_qss[15]));
  // reaction 560:  nc7h16 + oh => c7h15-4 + h2o
  k_f = 47 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
  qf[560] *= k_f;
  qr[560] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[45] - g_RT_qss[16]));
  // reaction 561:  c7h15-4 + h2o => nc7h16 + oh
  k_f = 0.6125 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
  qf[561] *= k_f;
  qr[561] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[45] + g_RT_qss[16]));
  // reaction 562:  ho2 + nc7h16 => c7h15-1 + h2o2
  k_f = 16800000 * exp(-(10285.7486490485) * invT);
  qf[562] *= k_f;
  qr[562] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[45] - g_RT_qss[13]));
  // reaction 563:  c7h15-1 + h2o2 => ho2 + nc7h16
  k_f = 20500000 * exp((-0.38) * tc[0] - (4226.51677609384) * invT);
  qf[563] *= k_f;
  qr[563] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[45] + g_RT_qss[13]));
  // reaction 564:  ho2 + nc7h16 => c7h15-2 + h2o2
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  qf[564] *= k_f;
  qr[564] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[45] - g_RT_qss[14]));
  // reaction 565:  c7h15-2 + h2o2 => ho2 + nc7h16
  k_f = 434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
  qf[565] *= k_f;
  qr[565] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[45] + g_RT_qss[14]));
  // reaction 566:  ho2 + nc7h16 => c7h15-3 + h2o2
  k_f = 11200000 * exp(-(8901.90281808549) * invT);
  qf[566] *= k_f;
  qr[566] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[45] - g_RT_qss[15]));
  // reaction 567:  c7h15-3 + h2o2 => ho2 + nc7h16
  k_f = 434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
  qf[567] *= k_f;
  qr[567] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[45] + g_RT_qss[15]));
  // reaction 568:  ho2 + nc7h16 => c7h15-4 + h2o2
  k_f = 5600000 * exp(-(8901.90281808549) * invT);
  qf[568] *= k_f;
  qr[568] *= k_f * exp(-(g_RT[10] - g_RT[11] + g_RT[45] - g_RT_qss[16]));
  // reaction 569:  c7h15-4 + h2o2 => ho2 + nc7h16
  k_f = 433200 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
  qf[569] *= k_f;
  qr[569] *= k_f * exp(-(-g_RT[10] + g_RT[11] - g_RT[45] + g_RT_qss[16]));
  // reaction 570:  ch3 + nc7h16 => c7h15-1 + ch4
  k_f = 9.04e-07 * exp((3.65) * tc[0] - (3600.01202716696) * invT);
  qf[570] *= k_f;
  qr[570] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[45] - g_RT_qss[13]));
  // reaction 571:  c7h15-1 + ch4 => ch3 + nc7h16
  k_f = 1.121e-06 * exp((3.6) * tc[0] - (5993.31048973421) * invT);
  qf[571] *= k_f;
  qr[571] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[45] + g_RT_qss[13]));
  // reaction 572:  ch3 + nc7h16 => c7h15-2 + ch4
  k_f = 0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
  qf[572] *= k_f;
  qr[572] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[45] - g_RT_qss[14]));
  // reaction 573:  c7h15-2 + ch4 => ch3 + nc7h16
  k_f = 0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
  qf[573] *= k_f;
  qr[573] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[45] + g_RT_qss[14]));
  // reaction 574:  ch3 + nc7h16 => c7h15-3 + ch4
  k_f = 0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
  qf[574] *= k_f;
  qr[574] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[45] - g_RT_qss[15]));
  // reaction 575:  c7h15-3 + ch4 => ch3 + nc7h16
  k_f = 0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
  qf[575] *= k_f;
  qr[575] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[45] + g_RT_qss[15]));
  // reaction 576:  ch3 + nc7h16 => c7h15-4 + ch4
  k_f = 0.02705 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
  qf[576] *= k_f;
  qr[576] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[45] - g_RT_qss[16]));
  // reaction 577:  c7h15-4 + ch4 => ch3 + nc7h16
  k_f = 0.002127 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
  qf[577] *= k_f;
  qr[577] *= k_f * exp(-(-g_RT[8] + g_RT[9] - g_RT[45] + g_RT_qss[16]));
  // reaction 578:  nc7h16 + o2 => c7h15-1 + ho2
  k_f = 60000000 * exp(-(26569.8399544892) * invT);
  qf[578] *= k_f;
  qr[578] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[45] - g_RT_qss[13]));
  // reaction 579:  c7h15-1 + ho2 => nc7h16 + o2
  k_f = 51750 * exp((0.28) * tc[0] - (-204.305966316716) * invT);
  qf[579] *= k_f;
  qr[579] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[45] + g_RT_qss[13]));
  // reaction 580:  nc7h16 + o2 => c7h15-2 + ho2
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  qf[580] *= k_f;
  qr[580] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[45] - g_RT_qss[14]));
  // reaction 581:  c7h15-2 + ho2 => nc7h16 + o2
  k_f = 1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
  qf[581] *= k_f;
  qr[581] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[45] + g_RT_qss[14]));
  // reaction 582:  nc7h16 + o2 => c7h15-3 + ho2
  k_f = 40000000 * exp(-(25236.3157901067) * invT);
  qf[582] *= k_f;
  qr[582] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[45] - g_RT_qss[15]));
  // reaction 583:  c7h15-3 + ho2 => nc7h16 + o2
  k_f = 1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
  qf[583] *= k_f;
  qr[583] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[45] + g_RT_qss[15]));
  // reaction 584:  nc7h16 + o2 => c7h15-4 + ho2
  k_f = 20000000 * exp(-(25236.3157901067) * invT);
  qf[584] *= k_f;
  qr[584] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT[45] - g_RT_qss[16]));
  // reaction 585:  c7h15-4 + ho2 => nc7h16 + o2
  k_f = 1094 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
  qf[585] *= k_f;
  qr[585] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT[45] + g_RT_qss[16]));
  // reaction 586:  c2h5 + nc7h16 => c2h6 + c7h15-1
  k_f = 100000 * exp(-(6743.10332178324) * invT);
  qf[586] *= k_f;
  qr[586] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[45] - g_RT_qss[13]));
  // reaction 587:  c2h6 + c7h15-1 => c2h5 + nc7h16
  k_f = 320000 * exp(-(6189.56498939805) * invT);
  qf[587] *= k_f;
  qr[587] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[45] + g_RT_qss[13]));
  // reaction 588:  c2h5 + nc7h16 => c2h6 + c7h15-2
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[588] *= k_f;
  qr[588] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[45] - g_RT_qss[14]));
  // reaction 589:  c2h6 + c7h15-2 => c2h5 + nc7h16
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  qf[589] *= k_f;
  qr[589] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[45] + g_RT_qss[14]));
  // reaction 590:  c2h5 + nc7h16 => c2h6 + c7h15-3
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[590] *= k_f;
  qr[590] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[45] - g_RT_qss[15]));
  // reaction 591:  c2h6 + c7h15-3 => c2h5 + nc7h16
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  qf[591] *= k_f;
  qr[591] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[45] + g_RT_qss[15]));
  // reaction 592:  c2h5 + nc7h16 => c2h6 + c7h15-4
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[592] *= k_f;
  qr[592] *= k_f * exp(-(-g_RT[13] + g_RT[15] + g_RT[45] - g_RT_qss[16]));
  // reaction 593:  c2h6 + c7h15-4 => c2h5 + nc7h16
  k_f = 100000 * exp(-(6491.49498888088) * invT);
  qf[593] *= k_f;
  qr[593] *= k_f * exp(-(g_RT[13] - g_RT[15] - g_RT[45] + g_RT_qss[16]));
  // reaction 594:  c2h3 + nc7h16 => c2h4 + c7h15-1
  k_f = 1000000 * exp(-(9057.89998448495) * invT);
  qf[594] *= k_f;
  qr[594] *= k_f * exp(-(-g_RT[14] + g_RT[17] + g_RT[45] - g_RT_qss[13]));
  // reaction 595:  c2h4 + c7h15-1 => c2h3 + nc7h16
  k_f = 2570000 * exp(-(12781.7033114399) * invT);
  qf[595] *= k_f;
  qr[595] *= k_f * exp(-(g_RT[14] - g_RT[17] - g_RT[45] + g_RT_qss[13]));
  // reaction 596:  c2h3 + nc7h16 => c2h4 + c7h15-2
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  qf[596] *= k_f;
  qr[596] *= k_f * exp(-(-g_RT[14] + g_RT[17] + g_RT[45] - g_RT_qss[14]));
  // reaction 597:  c2h4 + c7h15-2 => c2h3 + nc7h16
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  qf[597] *= k_f;
  qr[597] *= k_f * exp(-(g_RT[14] - g_RT[17] - g_RT[45] + g_RT_qss[14]));
  // reaction 598:  c2h3 + nc7h16 => c2h4 + c7h15-3
  k_f = 800000 * exp(-(8454.03998551929) * invT);
  qf[598] *= k_f;
  qr[598] *= k_f * exp(-(-g_RT[14] + g_RT[17] + g_RT[45] - g_RT_qss[15]));
  // reaction 599:  c2h4 + c7h15-3 => c2h3 + nc7h16
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  qf[599] *= k_f;
  qr[599] *= k_f * exp(-(g_RT[14] - g_RT[17] - g_RT[45] + g_RT_qss[15]));
  // reaction 600:  c2h3 + nc7h16 => c2h4 + c7h15-4
  k_f = 400000 * exp(-(8454.03998551929) * invT);
  qf[600] *= k_f;
  qr[600] *= k_f * exp(-(-g_RT[14] + g_RT[17] + g_RT[45] - g_RT_qss[16]));
  // reaction 601:  c2h4 + c7h15-4 => c2h3 + nc7h16
  k_f = 2000000 * exp(-(12177.8433124742) * invT);
  qf[601] *= k_f;
  qr[601] *= k_f * exp(-(g_RT[14] - g_RT[17] - g_RT[45] + g_RT_qss[16]));
  // reaction 602:  ch3o2 + nc7h16 => c7h15-1 + ch3o2h
  k_f = 12100000 * exp(-(10280.7164823904) * invT);
  qf[602] *= k_f;
  qr[602] *= k_f * exp(-(g_RT[31] - g_RT[32] + g_RT[45] - g_RT_qss[13]));
  // reaction 603:  c7h15-1 + ch3o2h => ch3o2 + nc7h16
  k_f = 3600000 * exp(-(4931.52332488625) * invT);
  qf[603] *= k_f;
  qr[603] *= k_f * exp(-(-g_RT[31] + g_RT[32] - g_RT[45] + g_RT_qss[13]));
  // reaction 604:  ch3o2 + nc7h16 => c7h15-2 + ch3o2h
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  qf[604] *= k_f;
  qr[604] *= k_f * exp(-(g_RT[31] - g_RT[32] + g_RT[45] - g_RT_qss[14]));
  // reaction 605:  c7h15-2 + ch3o2h => ch3o2 + nc7h16
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  qf[605] *= k_f;
  qr[605] *= k_f * exp(-(-g_RT[31] + g_RT[32] - g_RT[45] + g_RT_qss[14]));
  // reaction 606:  ch3o2 + nc7h16 => c7h15-3 + ch3o2h
  k_f = 8064000 * exp(-(8906.93498474354) * invT);
  qf[606] *= k_f;
  qr[606] *= k_f * exp(-(g_RT[31] - g_RT[32] + g_RT[45] - g_RT_qss[15]));
  // reaction 607:  c7h15-3 + ch3o2h => ch3o2 + nc7h16
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  qf[607] *= k_f;
  qr[607] *= k_f * exp(-(-g_RT[31] + g_RT[32] - g_RT[45] + g_RT_qss[15]));
  // reaction 608:  ch3o2 + nc7h16 => c7h15-4 + ch3o2h
  k_f = 4032000 * exp(-(8906.93498474354) * invT);
  qf[608] *= k_f;
  qr[608] *= k_f * exp(-(g_RT[31] - g_RT[32] + g_RT[45] - g_RT_qss[16]));
  // reaction 609:  c7h15-4 + ch3o2h => ch3o2 + nc7h16
  k_f = 237600 * exp(-(1861.90166347746) * invT);
  qf[609] *= k_f;
  qr[609] *= k_f * exp(-(-g_RT[31] + g_RT[32] - g_RT[45] + g_RT_qss[16]));
  // reaction 610:  c7h15-1 + nc7h16 => c7h15-2 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[610] *= k_f;
  qr[610] *= k_f * exp(-(g_RT[45] - g_RT[45] + g_RT_qss[13] - g_RT_qss[14]));
  // reaction 611:  c7h15-2 + nc7h16 => c7h15-1 + nc7h16
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  qf[611] *= k_f;
  qr[611] *= k_f * exp(-(g_RT[45] - g_RT[45] - g_RT_qss[13] + g_RT_qss[14]));
  // reaction 612:  c7h15-1 + nc7h16 => c7h15-3 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[612] *= k_f;
  qr[612] *= k_f * exp(-(g_RT[45] - g_RT[45] + g_RT_qss[13] - g_RT_qss[15]));
  // reaction 613:  c7h15-3 + nc7h16 => c7h15-1 + nc7h16
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  qf[613] *= k_f;
  qr[613] *= k_f * exp(-(g_RT[45] - g_RT[45] - g_RT_qss[13] + g_RT_qss[15]));
  // reaction 614:  c7h15-1 + nc7h16 => c7h15-4 + nc7h16
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[614] *= k_f;
  qr[614] *= k_f * exp(-(g_RT[45] - g_RT[45] + g_RT_qss[13] - g_RT_qss[16]));
  // reaction 615:  c7h15-4 + nc7h16 => c7h15-1 + nc7h16
  k_f = 150000 * exp(-(6189.56498939805) * invT);
  qf[615] *= k_f;
  qr[615] *= k_f * exp(-(g_RT[45] - g_RT[45] - g_RT_qss[13] + g_RT_qss[16]));
  // reaction 616:  c7h15-2 + nc7h16 => c7h15-3 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[616] *= k_f;
  qr[616] *= k_f * exp(-(g_RT[45] - g_RT[45] + g_RT_qss[14] - g_RT_qss[15]));
  // reaction 617:  c7h15-3 + nc7h16 => c7h15-2 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[617] *= k_f;
  qr[617] *= k_f * exp(-(g_RT[45] - g_RT[45] - g_RT_qss[14] + g_RT_qss[15]));
  // reaction 618:  c7h15-2 + nc7h16 => c7h15-4 + nc7h16
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[618] *= k_f;
  qr[618] *= k_f * exp(-(g_RT[45] - g_RT[45] + g_RT_qss[14] - g_RT_qss[16]));
  // reaction 619:  c7h15-4 + nc7h16 => c7h15-2 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[619] *= k_f;
  qr[619] *= k_f * exp(-(g_RT[45] - g_RT[45] - g_RT_qss[14] + g_RT_qss[16]));
  // reaction 620:  c7h15-3 + nc7h16 => c7h15-4 + nc7h16
  k_f = 50000 * exp(-(5233.45332436908) * invT);
  qf[620] *= k_f;
  qr[620] *= k_f * exp(-(g_RT[45] - g_RT[45] + g_RT_qss[15] - g_RT_qss[16]));
  // reaction 621:  c7h15-4 + nc7h16 => c7h15-3 + nc7h16
  k_f = 100000 * exp(-(5233.45332436908) * invT);
  qf[621] *= k_f;
  qr[621] *= k_f * exp(-(g_RT[45] - g_RT[45] - g_RT_qss[15] + g_RT_qss[16]));
  // reaction 622:  c7h15-2 => c3h6 + pc4h9
  k_f = 2.218e+16 * exp((-0.89) * tc[0] - (15161.9181406962) * invT);
  qf[622] *= k_f;
  qr[622] *= k_f * exp(-(-g_RT[22] - g_RT_qss[4] + g_RT_qss[14])) * (refCinv);
  // reaction 623:  c3h6 + pc4h9 => c7h15-2
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  qf[623] *= k_f;
  qr[623] *= k_f * exp(-(g_RT[22] + g_RT_qss[4] - g_RT_qss[14])) * (refC);
  // reaction 624:  c7h15-2 => c7h14-2 + h
  k_f = 2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
  qf[624] *= k_f;
  qr[624] *= k_f * exp(-(-g_RT[0] + g_RT_qss[14] - g_RT_qss[17])) * (refCinv);
  // reaction 625:  c7h14-2 + h => c7h15-2
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[625] *= k_f;
  qr[625] *= k_f * exp(-(g_RT[0] - g_RT_qss[14] + g_RT_qss[17])) * (refC);
  // reaction 626:  c7h15-3 => c4h8-1 + nc3h7
  k_f = 9.633e+17 * exp((-1.42) * tc[0] - (15388.3656403083) * invT);
  qf[626] *= k_f;
  qr[626] *= k_f * exp(-(-g_RT[24] - g_RT[26] + g_RT_qss[15])) * (refCinv);
  // reaction 627:  c4h8-1 + nc3h7 => c7h15-3
  k_f = 100000 * exp(-(3874.76832669634) * invT);
  qf[627] *= k_f;
  qr[627] *= k_f * exp(-(g_RT[24] + g_RT[26] - g_RT_qss[15])) * (refC);
  // reaction 628:  c7h15-3 => c7h14-2 + h
  k_f = 2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
  qf[628] *= k_f;
  qr[628] *= k_f * exp(-(-g_RT[0] + g_RT_qss[15] - g_RT_qss[17])) * (refCinv);
  // reaction 629:  c7h14-2 + h => c7h15-3
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[629] *= k_f;
  qr[629] *= k_f * exp(-(g_RT[0] - g_RT_qss[15] + g_RT_qss[17])) * (refC);
  // reaction 630:  c7h15-3 => c7h14-3 + h
  k_f = 2.018e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
  qf[630] *= k_f;
  qr[630] *= k_f * exp(-(-g_RT[0] + g_RT_qss[15] - g_RT_qss[18])) * (refCinv);
  // reaction 631:  c7h14-3 + h => c7h15-3
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[631] *= k_f;
  qr[631] *= k_f * exp(-(g_RT[0] - g_RT_qss[15] + g_RT_qss[18])) * (refC);
  // reaction 632:  c7h15-4 => c2h5 + c5h10-1
  k_f = 5.426e+16 * exp((-0.89) * tc[0] - (15393.3978069664) * invT);
  qf[632] *= k_f;
  qr[632] *= k_f * exp(-(-g_RT[15] - g_RT[30] + g_RT_qss[16])) * (refCinv);
  // reaction 633:  c2h5 + c5h10-1 => c7h15-4
  k_f = 100000 * exp(-(4126.3766595987) * invT);
  qf[633] *= k_f;
  qr[633] *= k_f * exp(-(g_RT[15] + g_RT[30] - g_RT_qss[16])) * (refC);
  // reaction 634:  c7h15-4 => c7h14-3 + h
  k_f = 4.02e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
  qf[634] *= k_f;
  qr[634] *= k_f * exp(-(-g_RT[0] + g_RT_qss[16] - g_RT_qss[18])) * (refCinv);
  // reaction 635:  c7h14-3 + h => c7h15-4
  k_f = 10000000 * exp(-(1459.32833083369) * invT);
  qf[635] *= k_f;
  qr[635] *= k_f * exp(-(g_RT[0] - g_RT_qss[16] + g_RT_qss[18])) * (refC);
  // reaction 636:  c7h15-2 + o2 => c7h14-2 + ho2
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  qf[636] *= k_f;
  qr[636] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT_qss[14] - g_RT_qss[17]));
  // reaction 637:  c7h14-2 + ho2 => c7h15-2 + o2
  k_f = 3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
  qf[637] *= k_f;
  qr[637] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT_qss[14] + g_RT_qss[17]));
  // reaction 638:  c7h15-3 + o2 => c7h14-2 + ho2
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  qf[638] *= k_f;
  qr[638] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT_qss[15] - g_RT_qss[17]));
  // reaction 639:  c7h14-2 + ho2 => c7h15-3 + o2
  k_f = 3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
  qf[639] *= k_f;
  qr[639] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT_qss[15] + g_RT_qss[17]));
  // reaction 640:  c7h15-3 + o2 => c7h14-3 + ho2
  k_f = 3e-15 * exp(-(1509.64999741416) * invT);
  qf[640] *= k_f;
  qr[640] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT_qss[15] - g_RT_qss[18]));
  // reaction 641:  c7h14-3 + ho2 => c7h15-3 + o2
  k_f = 5.094e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
  qf[641] *= k_f;
  qr[641] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT_qss[15] + g_RT_qss[18]));
  // reaction 642:  c7h15-4 + o2 => c7h14-3 + ho2
  k_f = 6e-15 * exp(-(1509.64999741416) * invT);
  qf[642] *= k_f;
  qr[642] *= k_f * exp(-(g_RT[3] - g_RT[10] + g_RT_qss[16] - g_RT_qss[18]));
  // reaction 643:  c7h14-3 + ho2 => c7h15-4 + o2
  k_f = 5.113e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
  qf[643] *= k_f;
  qr[643] *= k_f * exp(-(-g_RT[3] + g_RT[10] - g_RT_qss[16] + g_RT_qss[18]));
  // reaction 644:  c7h15-1 => c7h15-3
  k_f = 1386000000 * exp((0.98) * tc[0] - (16988.5946375673) * invT);
  qf[644] *= k_f;
  qr[644] *= k_f * exp(-(g_RT_qss[13] - g_RT_qss[15]));
  // reaction 645:  c7h15-3 => c7h15-1
  k_f = 44100000 * exp((1.38) * tc[0] - (18256.7006353952) * invT);
  qf[645] *= k_f;
  qr[645] *= k_f * exp(-(-g_RT_qss[13] + g_RT_qss[15]));
  // reaction 646:  c7h15-1 => c7h15-4
  k_f = 2541000000 * exp((0.35) * tc[0] - (9943.56131630126) * invT);
  qf[646] *= k_f;
  qr[646] *= k_f * exp(-(g_RT_qss[13] - g_RT_qss[16]));
  // reaction 647:  c7h15-4 => c7h15-1
  k_f = 161100000 * exp((0.74) * tc[0] - (11211.6673141292) * invT);
  qf[647] *= k_f;
  qr[647] *= k_f * exp(-(-g_RT_qss[13] + g_RT_qss[16]));
  // reaction 648:  c7h15-2 => c7h15-3
  k_f = 958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
  qf[648] *= k_f;
  qr[648] *= k_f * exp(-(g_RT_qss[14] - g_RT_qss[15]));
  // reaction 649:  c7h15-3 => c7h15-2
  k_f = 958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
  qf[649] *= k_f;
  qr[649] *= k_f * exp(-(-g_RT_qss[14] + g_RT_qss[15]));
  // reaction 650:  c7h15-1 => c7h15-2
  k_f = 547800000 * exp((1.62) * tc[0] - (19504.6779665909) * invT);
  qf[650] *= k_f;
  qr[650] *= k_f * exp(-(g_RT_qss[13] - g_RT_qss[14]));
  // reaction 651:  c7h15-2 => c7h15-1
  k_f = 17430000 * exp((2.01) * tc[0] - (20772.7839644188) * invT);
  qf[651] *= k_f;
  qr[651] *= k_f * exp(-(-g_RT_qss[13] + g_RT_qss[14]));
  // reaction 652:  c7h14-2 + oh => c2h5cho + pc4h9
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  qf[652] *= k_f;
  qr[652] *= k_f * exp(-(g_RT[4] - g_RT[28] - g_RT_qss[4] + g_RT_qss[17]));
  // reaction 653:  c7h14-3 + oh => c2h5cho + pc4h9
  k_f = 100000 * exp(-(-2012.86666321888) * invT);
  qf[653] *= k_f;
  qr[653] *= k_f * exp(-(g_RT[4] - g_RT[28] - g_RT_qss[4] + g_RT_qss[18]));
  // reaction 654:  c7h14-2 + o => c5h10-1 + ch3cho
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  qf[654] *= k_f;
  qr[654] *= k_f * exp(-(g_RT[2] - g_RT[20] - g_RT[30] + g_RT_qss[17]));
  // reaction 655:  c7h14-3 + o => c5h10-1 + ch3cho
  k_f = 100000 * exp(-(-528.377499094956) * invT);
  qf[655] *= k_f;
  qr[655] *= k_f * exp(-(g_RT[2] - g_RT[20] - g_RT[30] + g_RT_qss[18]));
  // reaction 656:  c7h14-2 => c4h7 + nc3h7
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  qf[656] *= k_f;
  qr[656] *= k_f * exp(-(-g_RT[24] - g_RT[25] + g_RT_qss[17])) * (refCinv);
  // reaction 657:  c4h7 + nc3h7 => c7h14-2
  k_f = 10000000;
  qf[657] *= k_f;
  qr[657] *= k_f * exp(-(g_RT[24] + g_RT[25] - g_RT_qss[17])) * (refC);
  // reaction 658:  c7h14-3 => c4h7 + nc3h7
  k_f = 1e+16 * exp(-(35728.3832721351) * invT);
  qf[658] *= k_f;
  qr[658] *= k_f * exp(-(-g_RT[24] - g_RT[25] + g_RT_qss[18])) * (refCinv);
  // reaction 659:  c4h7 + nc3h7 => c7h14-3
  k_f = 10000000;
  qf[659] *= k_f;
  qr[659] *= k_f * exp(-(g_RT[24] + g_RT[25] - g_RT_qss[18])) * (refC);
  // reaction 660:  c7h15o2-1 => c7h15-1 + o2
  k_f = 2.657e+20 * exp((-1.67) * tc[0] - (17813.8699694871) * invT);
  qf[660] *= k_f;
  qr[660] *= k_f * exp(-(-g_RT[3] + g_RT[46] - g_RT_qss[13])) * (refCinv);
  // reaction 661:  c7h15-1 + o2 => c7h15o2-1
  k_f = 4520000;
  qf[661] *= k_f;
  qr[661] *= k_f * exp(-(g_RT[3] - g_RT[46] + g_RT_qss[13])) * (refC);
  // reaction 662:  c7h15o2-2 => c7h15-2 + o2
  k_f = 1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
  qf[662] *= k_f;
  qr[662] *= k_f * exp(-(-g_RT[3] + g_RT[47] - g_RT_qss[14])) * (refCinv);
  // reaction 663:  c7h15-2 + o2 => c7h15o2-2
  k_f = 7540000;
  qf[663] *= k_f;
  qr[663] *= k_f * exp(-(g_RT[3] - g_RT[47] + g_RT_qss[14])) * (refC);
  // reaction 664:  c7h15o2-3 => c7h15-3 + o2
  k_f = 9.879e+21 * exp((-1.97) * tc[0] - (19051.7829673667) * invT);
  qf[664] *= k_f;
  qr[664] *= k_f * exp(-(-g_RT[3] + g_RT[48] - g_RT_qss[15])) * (refCinv);
  // reaction 665:  c7h15-3 + o2 => c7h15o2-3
  k_f = 7540000;
  qf[665] *= k_f;
  qr[665] *= k_f * exp(-(g_RT[3] - g_RT[48] + g_RT_qss[15])) * (refC);
  // reaction 666:  c7h15o2-4 => c7h15-4 + o2
  k_f = 1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
  qf[666] *= k_f;
  qr[666] *= k_f * exp(-(-g_RT[3] + g_RT[49] - g_RT_qss[16])) * (refCinv);
  // reaction 667:  c7h15-4 + o2 => c7h15o2-4
  k_f = 7540000;
  qf[667] *= k_f;
  qr[667] *= k_f * exp(-(g_RT[3] - g_RT[49] + g_RT_qss[16])) * (refC);
  // reaction 668:  c7h15o2-1 => c7h14ooh1-3
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[668] *= k_f;
  qr[668] *= k_f * exp(-(g_RT[46] - g_RT_qss[19]));
  // reaction 669:  c7h14ooh1-3 => c7h15o2-1
  k_f = 2653000000 * exp((-0.11) * tc[0] - (4146.50532623089) * invT);
  qf[669] *= k_f;
  qr[669] *= k_f * exp(-(-g_RT[46] + g_RT_qss[19]));
  // reaction 670:  c7h15o2-2 => c7h14ooh2-3
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  qf[670] *= k_f;
  qr[670] *= k_f * exp(-(g_RT[47] - g_RT_qss[20]));
  // reaction 671:  c7h14ooh2-3 => c7h15o2-2
  k_f = 22620000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
  qf[671] *= k_f;
  qr[671] *= k_f * exp(-(-g_RT[47] + g_RT_qss[20]));
  // reaction 672:  c7h15o2-2 => c7h14ooh2-4
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[672] *= k_f;
  qr[672] *= k_f * exp(-(g_RT[47] - g_RT_qss[21]));
  // reaction 673:  c7h14ooh2-4 => c7h15o2-2
  k_f = 2827000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
  qf[673] *= k_f;
  qr[673] *= k_f * exp(-(-g_RT[47] + g_RT_qss[21]));
  // reaction 674:  c7h15o2-3 => c7h14ooh3-2
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  qf[674] *= k_f;
  qr[674] *= k_f * exp(-(g_RT[48] - g_RT_qss[22]));
  // reaction 675:  c7h14ooh3-2 => c7h15o2-3
  k_f = 310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
  qf[675] *= k_f;
  qr[675] *= k_f * exp(-(-g_RT[48] + g_RT_qss[22]));
  // reaction 676:  c7h15o2-3 => c7h14ooh3-4
  k_f = 200000000000 * exp(-(13511.3674768567) * invT);
  qf[676] *= k_f;
  qr[676] *= k_f * exp(-(g_RT[48] - g_RT_qss[23]));
  // reaction 677:  c7h14ooh3-4 => c7h15o2-3
  k_f = 310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
  qf[677] *= k_f;
  qr[677] *= k_f * exp(-(-g_RT[48] + g_RT_qss[23]));
  // reaction 678:  c7h15o2-3 => c7h14ooh3-5
  k_f = 25000000000 * exp(-(10492.0674820284) * invT);
  qf[678] *= k_f;
  qr[678] *= k_f * exp(-(g_RT[48] - g_RT_qss[24]));
  // reaction 679:  c7h14ooh3-5 => c7h15o2-3
  k_f = 38840000000 * exp((-0.51) * tc[0] - (4065.99065970213) * invT);
  qf[679] *= k_f;
  qr[679] *= k_f * exp(-(-g_RT[48] + g_RT_qss[24]));
  // reaction 680:  c7h15o2-4 => c7h14ooh4-2
  k_f = 50000000000 * exp(-(10492.0674820284) * invT);
  qf[680] *= k_f;
  qr[680] *= k_f * exp(-(g_RT[49] - g_RT_qss[25]));
  // reaction 681:  c7h14ooh4-2 => c7h15o2-4
  k_f = 5655000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
  qf[681] *= k_f;
  qr[681] *= k_f * exp(-(-g_RT[49] + g_RT_qss[25]));
  // reaction 682:  c7h15o2-4 => c7h14ooh4-3
  k_f = 400000000000 * exp(-(13511.3674768567) * invT);
  qf[682] *= k_f;
  qr[682] *= k_f * exp(-(g_RT[49] - g_RT[50]));
  // reaction 683:  c7h14ooh4-3 => c7h15o2-4
  k_f = 45240000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
  qf[683] *= k_f;
  qr[683] *= k_f * exp(-(-g_RT[49] + g_RT[50]));
  // reaction 684:  c7h14ooh2-3 => c7h14-2 + ho2
  k_f = 1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
  qf[684] *= k_f;
  qr[684] *= k_f * exp(-(-g_RT[10] - g_RT_qss[17] + g_RT_qss[20])) * (refCinv);
  // reaction 685:  c7h14-2 + ho2 => c7h14ooh2-3
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  qf[685] *= k_f;
  qr[685] *= k_f * exp(-(g_RT[10] + g_RT_qss[17] - g_RT_qss[20])) * (refC);
  // reaction 686:  c7h14ooh3-2 => c7h14-2 + ho2
  k_f = 1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
  qf[686] *= k_f;
  qr[686] *= k_f * exp(-(-g_RT[10] - g_RT_qss[17] + g_RT_qss[22])) * (refCinv);
  // reaction 687:  c7h14-2 + ho2 => c7h14ooh3-2
  k_f = 100000 * exp(-(5802.08815672842) * invT);
  qf[687] *= k_f;
  qr[687] *= k_f * exp(-(g_RT[10] + g_RT_qss[17] - g_RT_qss[22])) * (refC);
  // reaction 688:  c7h14ooh3-4 => c7h14-3 + ho2
  k_f = 1.199e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
  qf[688] *= k_f;
  qr[688] *= k_f * exp(-(-g_RT[10] - g_RT_qss[18] + g_RT_qss[23])) * (refCinv);
  // reaction 689:  c7h14-3 + ho2 => c7h14ooh3-4
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  qf[689] *= k_f;
  qr[689] *= k_f * exp(-(g_RT[10] + g_RT_qss[18] - g_RT_qss[23])) * (refC);
  // reaction 690:  c7h14ooh4-3 => c7h14-3 + ho2
  k_f = 2.389e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
  qf[690] *= k_f;
  qr[690] *= k_f * exp(-(-g_RT[10] + g_RT[50] - g_RT_qss[18])) * (refCinv);
  // reaction 691:  c7h14-3 + ho2 => c7h14ooh4-3
  k_f = 100000 * exp(-(5298.8714909237) * invT);
  qf[691] *= k_f;
  qr[691] *= k_f * exp(-(g_RT[10] - g_RT[50] + g_RT_qss[18])) * (refC);
  // reaction 692:  c7h14ooh1-3 => c7h14o1-3 + oh
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  qf[692] *= k_f;
  qr[692] *= k_f * exp(-(-g_RT[4] - g_RT[52] + g_RT_qss[19])) * (refCinv);
  // reaction 693:  c7h14ooh2-4 => c7h14o2-4 + oh
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  qf[693] *= k_f;
  qr[693] *= k_f * exp(-(-g_RT[4] - g_RT[53] + g_RT_qss[21])) * (refCinv);
  // reaction 694:  c7h14ooh4-2 => c7h14o2-4 + oh
  k_f = 75000000000 * exp(-(7674.05415352198) * invT);
  qf[694] *= k_f;
  qr[694] *= k_f * exp(-(-g_RT[4] - g_RT[53] + g_RT_qss[25])) * (refCinv);
  // reaction 695:  c7h14ooh2-4 => c5h10-1 + ch3cho + oh
  k_f = 5.364e+17 * exp((-1.4) * tc[0] - (13461.0458102763) * invT);
  qf[695] *= k_f;
  qr[695] *= k_f * exp(-(-g_RT[4] - g_RT[20] - g_RT[30] + g_RT_qss[21])) *
             ((refCinv * refCinv));
  // reaction 696:  c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
  k_f = 2.47e+18 * exp((-1.55) * tc[0] - (13596.9143100435) * invT);
  qf[696] *= k_f;
  qr[696] *= k_f * exp(-(-g_RT[4] - g_RT[26] - g_RT[28] + g_RT_qss[24])) *
             ((refCinv * refCinv));
  // reaction 697:  c7h14ooh4-2 => c3h6 + nc3h7cho + oh
  k_f = 1.3e+18 * exp((-1.49) * tc[0] - (13486.2066435665) * invT);
  qf[697] *= k_f;
  qr[697] *= k_f * exp(-(-g_RT[4] - g_RT[22] - g_RT[40] + g_RT_qss[25])) *
             ((refCinv * refCinv));
  // reaction 698:  c7h14ooh1-3o2 => c7h14ooh1-3 + o2
  k_f = 1.367e+23 * exp((-2.37) * tc[0] - (18941.0753008896) * invT);
  qf[698] *= k_f;
  qr[698] *= k_f * exp(-(-g_RT[3] + g_RT[51] - g_RT_qss[19])) * (refCinv);
  // reaction 699:  c7h14ooh1-3 + o2 => c7h14ooh1-3o2
  k_f = 7540000;
  qf[699] *= k_f;
  qr[699] *= k_f * exp(-(g_RT[3] - g_RT[51] + g_RT_qss[19])) * (refC);
  // reaction 700:  c7h14ooh2-4o2 => c7h14ooh2-4 + o2
  k_f = 1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
  qf[700] *= k_f;
  qr[700] *= k_f * exp(-(-g_RT[3] - g_RT_qss[21] + g_RT_qss[26])) * (refCinv);
  // reaction 701:  c7h14ooh2-4 + o2 => c7h14ooh2-4o2
  k_f = 7540000;
  qf[701] *= k_f;
  qr[701] *= k_f * exp(-(g_RT[3] + g_RT_qss[21] - g_RT_qss[26])) * (refC);
  // reaction 702:  c7h14ooh3-5o2 => c7h14ooh3-5 + o2
  k_f = 1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
  qf[702] *= k_f;
  qr[702] *= k_f * exp(-(-g_RT[3] - g_RT_qss[24] + g_RT_qss[27])) * (refCinv);
  // reaction 703:  c7h14ooh3-5 + o2 => c7h14ooh3-5o2
  k_f = 7540000;
  qf[703] *= k_f;
  qr[703] *= k_f * exp(-(g_RT[3] + g_RT_qss[24] - g_RT_qss[27])) * (refC);
  // reaction 704:  c7h14ooh4-2o2 => c7h14ooh4-2 + o2
  k_f = 6.969e+22 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
  qf[704] *= k_f;
  qr[704] *= k_f * exp(-(-g_RT[3] - g_RT_qss[25] + g_RT_qss[28])) * (refCinv);
  // reaction 705:  c7h14ooh4-2 + o2 => c7h14ooh4-2o2
  k_f = 7540000;
  qf[705] *= k_f;
  qr[705] *= k_f * exp(-(g_RT[3] + g_RT_qss[25] - g_RT_qss[28])) * (refC);
  // reaction 706:  c7h14ooh1-3o2 => nc7ket13 + oh
  k_f = 25000000000 * exp(-(10768.836648221) * invT);
  qf[706] *= k_f;
  qr[706] *= k_f * exp(-(-g_RT[4] + g_RT[51] - g_RT_qss[29])) * (refCinv);
  // reaction 707:  nc7ket13 + oh => c7h14ooh1-3o2
  k_f = 0.003303 * exp((1.41) * tc[0] - (22664.8786278446) * invT);
  qf[707] *= k_f;
  qr[707] *= k_f * exp(-(g_RT[4] - g_RT[51] + g_RT_qss[29])) * (refC);
  // reaction 708:  c7h14ooh2-4o2 => nc7ket24 + oh
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  qf[708] *= k_f;
  qr[708] *= k_f * exp(-(-g_RT[4] + g_RT_qss[26] - g_RT_qss[30])) * (refCinv);
  // reaction 709:  nc7ket24 + oh => c7h14ooh2-4o2
  k_f = 0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
  qf[709] *= k_f;
  qr[709] *= k_f * exp(-(g_RT[4] - g_RT_qss[26] + g_RT_qss[30])) * (refC);
  // reaction 710:  c7h14ooh3-5o2 => nc7ket35 + oh
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  qf[710] *= k_f;
  qr[710] *= k_f * exp(-(-g_RT[4] + g_RT_qss[27] - g_RT_qss[31])) * (refCinv);
  // reaction 711:  nc7ket35 + oh => c7h14ooh3-5o2
  k_f = 0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
  qf[711] *= k_f;
  qr[711] *= k_f * exp(-(g_RT[4] - g_RT_qss[27] + g_RT_qss[31])) * (refC);
  // reaction 712:  c7h14ooh4-2o2 => nc7ket42 + oh
  k_f = 12500000000 * exp(-(8982.41748461425) * invT);
  qf[712] *= k_f;
  qr[712] *= k_f * exp(-(-g_RT[4] + g_RT_qss[28] - g_RT_qss[32])) * (refCinv);
  // reaction 713:  nc7ket42 + oh => c7h14ooh4-2o2
  k_f = 0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
  qf[713] *= k_f;
  qr[713] *= k_f * exp(-(g_RT[4] - g_RT_qss[28] + g_RT_qss[32])) * (refC);
  // reaction 714:  nc7ket13 => ch2cho + nc4h9cho + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[714] *= k_f;
  qr[714] *= k_f * exp(-(-g_RT[4] - g_RT[43] - g_RT_qss[3] + g_RT_qss[29])) *
             ((refCinv * refCinv));
  // reaction 715:  nc7ket24 => ch3coch2 + nc3h7cho + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[715] *= k_f;
  qr[715] *= k_f * exp(-(-g_RT[4] - g_RT[27] - g_RT[40] + g_RT_qss[30])) *
             ((refCinv * refCinv));
  // reaction 716:  nc7ket35 => c2h5cho + c2h5coch2 + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[716] *= k_f;
  qr[716] *= k_f * exp(-(-g_RT[4] - g_RT[28] - g_RT[41] + g_RT_qss[31])) *
             ((refCinv * refCinv));
  // reaction 717:  nc7ket42 => ch3cho + nc3h7coch2 + oh
  k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
  qf[717] *= k_f;
  qr[717] *= k_f * exp(-(-g_RT[4] - g_RT[20] - g_RT[42] + g_RT_qss[32])) *
             ((refCinv * refCinv));
  // reaction 718:  c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
  k_f = 2500000;
  qf[718] *= k_f;
  qr[718] *= k_f *
             exp(-(g_RT[4] - g_RT[5] - g_RT[30] + g_RT[53] - g_RT_qss[2])) *
             (refCinv);
  // reaction 719:  c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
  k_f = 2500000;
  qf[719] *= k_f;
  qr[719] *= k_f * exp(-(g_RT[4] - g_RT[5] - g_RT[14] - g_RT[44] + g_RT[52])) *
             (refCinv);
  // reaction 720:  c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
  k_f = 2500000;
  qf[720] *= k_f;
  qr[720] *= k_f *
             exp(-(g_RT[4] - g_RT[5] - g_RT[22] + g_RT[53] - g_RT_qss[12])) *
             (refCinv);
  // reaction 721:  c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  qf[721] *= k_f;
  qr[721] *= k_f *
             exp(-(g_RT[10] - g_RT[11] - g_RT[30] + g_RT[53] - g_RT_qss[2])) *
             (refCinv);
  // reaction 722:  c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  qf[722] *= k_f;
  qr[722] *= k_f *
             exp(-(g_RT[10] - g_RT[11] - g_RT[14] - g_RT[44] + g_RT[52])) *
             (refCinv);
  // reaction 723:  c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
  k_f = 5000000 * exp(-(8906.93498474354) * invT);
  qf[723] *= k_f;
  qr[723] *= k_f *
             exp(-(g_RT[10] - g_RT[11] - g_RT[22] + g_RT[53] - g_RT_qss[12])) *
             (refCinv);
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 55; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 55; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[55];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[33];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[33];
  amrex::Real kf_qss[397], qf_qss[397], qr_qss[397];
  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  ch3 + h (+M) <=> ch4 (+M)
    const amrex::Real k_f = 2138000000 * exp((-0.4) * tc[0]);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 3.31e+18 * exp(-4 * tc[0] - 1060.78073151635 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(1 * exp(-tc[1] * 1e+15) + exp(-40 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 1:  c2h4 + h (+M) <=> c2h5 (+M)
    const amrex::Real k_f =
      1081000 * exp((0.45) * tc[0] - (916.860765096199) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 1.112e+22 * exp(-5 * tc[0] - 2238.30772949939 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.0105263157894737) + exp(-200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[14] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 2:  2 ch3 (+M) <=> c2h6 (+M)
    const amrex::Real k_f =
      92140000000 * exp((-1.17) * tc[0] - (319.945156118641) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 1.135e+24 * exp(-5.246 * tc[0] - 857.984415197047 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.595 * exp(-tc[1] * 0.000892857142857143) +
      0.405 * exp(-tc[1] * 0.014367816091954) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[13])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 3:  h + o2 (+M) <=> ho2 (+M)
    const amrex::Real k_f = 1475000 * exp((0.6) * tc[0]);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 35000 * exp(-0.41 * tc[0] - -561.589799038067 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) +
      exp(-1e+100 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[10])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 4:  2 oh (+M) <=> h2o2 (+M)
    const amrex::Real k_f = 123600000 * exp((-0.37) * tc[0]);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 3.041e+18 * exp(-4.63 * tc[0] - 1031.09094823387 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.53 * exp(-tc[1] * 0.01) + 0.47 * exp(-tc[1] * 0.0005) +
      exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 5:  c2h3 + h (+M) <=> c2h4 (+M)
    const amrex::Real k_f =
      6100000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 9.8e+17 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00480769230769231) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[17]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[14] + g_RT[17])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 6:  c2h2 + h (+M) <=> c2h3 (+M)
    const amrex::Real k_f =
      311000 * exp((0.58) * tc[0] - (1302.82794776842) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 2.254e+28 * exp(-7.269 * tc[0] - 3309.65601099764 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.00148148148148148) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[16] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 7:  co + o (+M) <=> co2 (+M)
    const amrex::Real k_f = 18000 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real redP = Corr / k_f * 1350000000000 *
                             exp(-2.788 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 8:  ch3o (+M) <=> ch2o + h (+M)
    const amrex::Real k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 2.344e+19 * exp(-2.7 * tc[0] - 15398.4299736244 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] - g_RT[12] + g_RT_qss[1])) *
                           (refCinv) * (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 9:  c2h4 (+M) <=> c2h2 + h2 (+M)
    const amrex::Real k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1500000000 * exp(-27899.8416022111 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[16])) *
                           (refCinv) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 10:  ch3co (+M) <=> ch3 + co (+M)
    const amrex::Real k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1200000000 * exp(-6299.26622254348 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc_qss[2]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[6] - g_RT[8] + g_RT_qss[2])) *
                           (refCinv) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 11:  hco + M => co + h + M
    const amrex::Real k_f =
      186000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc_qss[0]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[6] + g_RT_qss[0])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 12:  co + h + M => hco + M
    const amrex::Real k_f = 64.67 * exp(-(-222.421766285686) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[6] - g_RT_qss[0])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 13:  h2o + M => h + oh + M
    const amrex::Real k_f =
      1.837e+21 * exp((-3) * tc[0] - (61694.3632276586) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[4] + g_RT[5])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 14:  h + oh + M => h2o + M
    const amrex::Real k_f = 22500000000 * exp((-2) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[5])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 15:  ch2o + M => h + hco + M
    const amrex::Real k_f =
      6.283e+23 * exp((-3.57) * tc[0] - (46899.7932529999) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[12] - g_RT_qss[0])) *
                           (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 16:  h + hco + M => ch2o + M
    const amrex::Real k_f =
      2660000000000 * exp((-2.57) * tc[0] - (214.873516298615) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[12] + g_RT_qss[0])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 17:  oh + M => h + o + M
    const amrex::Real k_f =
      3.909e+16 * exp((-2) * tc[0] - (52988.714909237) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[2] + g_RT[4])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 18:  h + o + M => oh + M
    const amrex::Real k_f = 4720000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[4])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 19:  o2 + M => 2 o + M
    const amrex::Real k_f =
      647300000000000 * exp((-1.5) * tc[0] - (61140.8248952734) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-2.000000 * g_RT[2] + g_RT[3])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 20:  2 o + M => o2 + M
    const amrex::Real k_f = 6170 * exp((-0.5) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 21:  h2 + M => 2 h + M
    const amrex::Real k_f =
      45700000000000 * exp((-1.4) * tc[0] - (52535.8199100127) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-2.000000 * g_RT[0] + g_RT[1])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += 2.000000 * qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 22:  2 h + M => h2 + M
    const amrex::Real k_f =
      2423 * exp((-0.4) * tc[0] - (-1529.77866404635) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * ((sc[0] * sc[0]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[0] - g_RT[1])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= 2.000000 * qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 23:  ch2o + M => co + h2 + M
    const amrex::Real k_f =
      1.826e+26 * exp((-4.42) * tc[0] - (43840.2359249072) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[1] - g_RT[6] + g_RT[12])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 24:  co + h2 + M => ch2o + M
    const amrex::Real k_f =
      5.07e+15 * exp((-3.42) * tc[0] - (42446.3257606281) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[6] - g_RT[12])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 25:  c2h5o + M => ch2o + ch3 + M
    const amrex::Real k_f =
      1.35e+32 * exp((-6.96) * tc[0] - (11976.5566461523) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[8] - g_RT[12] + g_RT_qss[6])) *
                           (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 26:  ch2o + ch3 + M => c2h5o + M
    const amrex::Real k_f =
      6.442e+24 * exp((-6.99) * tc[0] - (8479.20081880953) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[12] - g_RT_qss[6])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 27:  ch3o2 + M => ch3 + o2 + M
    const amrex::Real k_f =
      4.343e+21 * exp((-3.42) * tc[0] - (15333.0118070698) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[31]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[31])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 28:  ch3 + o2 + M => ch3o2 + M
    const amrex::Real k_f = 54400000000000 * exp((-3.3) * tc[0]);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[8] - g_RT[31])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 29:  c2h5o + M => ch3cho + h + M
    const amrex::Real k_f =
      1.16e+29 * exp((-5.89) * tc[0] - (12716.2851448853) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] - g_RT[20] + g_RT_qss[6])) *
                           (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 30:  ch3cho + h + M => c2h5o + M
    const amrex::Real k_f =
      3.063e+18 * exp((-4.78) * tc[0] - (3069.62166140879) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[20] - g_RT_qss[6])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 31:  c3h4-a + M => c3h3 + h + M
    const amrex::Real k_f = 114300000000 * exp(-(35225.1666063304) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + g_RT[21] - g_RT[38])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 32:  c3h3 + h + M => c3h4-a + M
    const amrex::Real k_f =
      1798 * exp((-0.38) * tc[0] - (5339.12882418808) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[38]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[21] + g_RT[38])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 33:  ch4 + h => ch3 + h2
    const amrex::Real k_f =
      0.01727 * exp((3) * tc[0] - (4138.45385957801) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 34:  ch3 + h2 => ch4 + h
    const amrex::Real k_f =
      0.000661 * exp((3) * tc[0] - (3896.90985999175) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 35:  ch4 + oh => ch3 + h2o
    const amrex::Real k_f =
      0.193 * exp((2.4) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 36:  ch3 + h2o => ch4 + oh
    const amrex::Real k_f =
      0.03199 * exp((2.4) * tc[0] - (8443.9756522032) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 37:  ch4 + o => ch3 + oh
    const amrex::Real k_f =
      3150000 * exp((0.5) * tc[0] - (5178.09949113057) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 38:  ch3 + oh => ch4 + o
    const amrex::Real k_f =
      52960 * exp((0.5) * tc[0] - (3882.31657668341) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 39:  c2h6 + ch3 => c2h5 + ch4
    const amrex::Real k_f =
      1.51e-13 * exp((6) * tc[0] - (3042.95117812114) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 40:  c2h5 + ch4 => c2h6 + ch3
    const amrex::Real k_f =
      9.649e-16 * exp((6.56) * tc[0] - (5142.87432452423) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 41:  hco + oh => co + h2o
    const amrex::Real k_f = 102000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 42:  co + h2o => hco + oh
    const amrex::Real k_f = 2896000000 * exp(-(52938.3932426565) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  co + oh => co2 + h
    const amrex::Real k_f =
      0.14 * exp((1.95) * tc[0] - (-677.832848838957) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 44:  co2 + h => co + oh
    const amrex::Real k_f =
      15.68 * exp((1.95) * tc[0] - (10562.5178152411) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 45:  h + o2 => o + oh
    const amrex::Real k_f = 197000000 * exp(-(8323.20365241006) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 46:  o + oh => h + o2
    const amrex::Real k_f = 15550000 * exp(-(213.867082967006) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 47:  h2 + o => h + oh
    const amrex::Real k_f =
      0.0508 * exp((2.67) * tc[0] - (3166.2392612433) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 48:  h + oh => h2 + o
    const amrex::Real k_f =
      0.02231 * exp((2.67) * tc[0] - (2112.00034638241) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 49:  h2o + o => 2 oh
    const amrex::Real k_f =
      2.97 * exp((2.02) * tc[0] - (6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 50:  2 oh => h2o + o
    const amrex::Real k_f =
      0.3013 * exp((2.02) * tc[0] - (-1937.38416334817) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 51:  h2 + oh => h + h2o
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 52:  h + h2o => h2 + oh
    const amrex::Real k_f =
      935.2 * exp((1.51) * tc[0] - (9349.76565065169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 53:  h2o2 + oh => h2o + ho2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 54:  h2o + ho2 => h2o2 + oh
    const amrex::Real k_f =
      168500 * exp((0.33) * tc[0] - (15831.1963062165) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 55:  c2h4 + o => ch3 + hco
    const amrex::Real k_f =
      10.2 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 56:  ch3 + hco => c2h4 + o
    const amrex::Real k_f =
      285.1 * exp((1.05) * tc[0] - (15987.1934726159) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 57:  c2h6 + h => c2h5 + h2
    const amrex::Real k_f =
      0.000554 * exp((3.5) * tc[0] - (2600.12051221299) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 58:  c2h5 + h2 => c2h6 + h
    const amrex::Real k_f =
      1.355e-07 * exp((4.06) * tc[0] - (4456.9900090324) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 59:  c2h5 + o2 => c2h4 + ho2
    const amrex::Real k_f =
      1.22e+24 * exp((-5.76) * tc[0] - (5082.48832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 60:  c2h4 + ho2 => c2h5 + o2
    const amrex::Real k_f =
      1.259e+24 * exp((-5.63) * tc[0] - (11221.7316474452) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 61:  c2h6 + oh => c2h5 + h2o
    const amrex::Real k_f =
      58 * exp((1.73) * tc[0] - (583.731332333475) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 62:  c2h5 + h2o => c2h6 + oh
    const amrex::Real k_f =
      0.06142 * exp((2.29) * tc[0] - (10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 63:  c2h6 + o => c2h5 + oh
    const amrex::Real k_f = 13 * exp((2.13) * tc[0] - (2611.6944955265) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 64:  c2h5 + oh => c2h6 + o
    const amrex::Real k_f =
      0.001397 * exp((2.69) * tc[0] - (3414.32507748502) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 65:  ch3 + ho2 => ch3o + oh
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 66:  ch3o + oh => ch3 + ho2
    const amrex::Real k_f =
      478000000 * exp((-0.35) * tc[0] - (12353.9691455059) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 67:  co + ho2 => co2 + oh
    const amrex::Real k_f = 30100000 * exp(-(11573.9833135086) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 68:  co2 + oh => co + ho2
    const amrex::Real k_f =
      6435000000 * exp((-0.33) * tc[0] - (42577.1620937373) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 69:  co + o2 => co2 + o
    const amrex::Real k_f = 16200000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 70:  co2 + o => co + o2
    const amrex::Real k_f = 143300000 * exp(-(27133.4426201905) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 71:  h + hco => co + h2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 72:  co + h2 => h + hco
    const amrex::Real k_f = 481300000 * exp(-(45289.4999224248) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 73:  hco + o => co + oh
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 74:  co + oh => hco + o
    const amrex::Real k_f = 86970000 * exp(-(44232.7449242349) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 75:  ch2o + oh => h2o + hco
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 76:  h2o + hco => ch2o + oh
    const amrex::Real k_f =
      1186 * exp((1.18) * tc[0] - (14784.5056413427) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 77:  ch2o + h => h2 + hco
    const amrex::Real k_f =
      933.4 * exp((1.5) * tc[0] - (1497.57279743485) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 78:  h2 + hco => ch2o + h
    const amrex::Real k_f =
      74.53 * exp((1.5) * tc[0] - (8881.7741514533) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  ch2o + o => hco + oh
    const amrex::Real k_f =
      416000 * exp((0.57) * tc[0] - (1389.88443095264) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 80:  hco + oh => ch2o + o
    const amrex::Real k_f =
      14590 * exp((0.57) * tc[0] - (7719.3436534444) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 81:  ch3 + oh => ch2o + h2
    const amrex::Real k_f = 22500000 * exp(-(2163.83166296029) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 82:  ch2o + h2 => ch3 + oh
    const amrex::Real k_f = 675600000 * exp(-(38254.5309344748) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 83:  ch3 + o => ch2o + h
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 84:  ch2o + h => ch3 + o
    const amrex::Real k_f = 1055000000 * exp(-(35038.9764399826) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 85:  ch3 + o2 => ch3o + o
    const amrex::Real k_f =
      1995000000000 * exp((-1.57) * tc[0] - (14698.9588081559) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 86:  ch3o + o => ch3 + o2
    const amrex::Real k_f =
      3585000000000 * exp((-1.59) * tc[0] - (-820.746381927498) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 87:  ch2o + ch3 => ch4 + hco
    const amrex::Real k_f =
      3.636e-12 * exp((5.42) * tc[0] - (502.21023247311) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  ch4 + hco => ch2o + ch3
    const amrex::Real k_f =
      7.584e-12 * exp((5.42) * tc[0] - (8126.94915274622) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 89:  ch3 + hco => ch4 + co
    const amrex::Real k_f = 121000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 90:  ch4 + co => ch3 + hco
    const amrex::Real k_f = 20730000000 * exp(-(45531.043922011) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 91:  ho2 + o => o2 + oh
    const amrex::Real k_f = 32500000;
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 92:  o2 + oh => ho2 + o
    const amrex::Real k_f =
      785700000 * exp((-0.33) * tc[0] - (27873.1711189234) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 93:  hco + ho2 => ch2o + o2
    const amrex::Real k_f =
      29740 * exp((0.33) * tc[0] - (-1942.91954667202) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 94:  ch2o + o2 => hco + ho2
    const amrex::Real k_f = 20500000 * exp(-(19600.2891330938) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 95:  ch3o + o2 => ch2o + ho2
    const amrex::Real k_f = 55000 * exp(-(1219.79719791064) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 96:  ch2o + ho2 => ch3o + o2
    const amrex::Real k_f =
      1318 * exp((0.35) * tc[0] - (15795.9711396102) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 97:  ch3 + ho2 => ch4 + o2
    const amrex::Real k_f = 3600000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 98:  ch4 + o2 => ch3 + ho2
    const amrex::Real k_f =
      5177000000 * exp((-0.33) * tc[0] - (29166.4379500416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 99:  hco + o2 => co + ho2
    const amrex::Real k_f = 7580000 * exp(-(206.318832979935) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 100:  co + ho2 => hco + o2
    const amrex::Real k_f =
      902900 * exp((0.33) * tc[0] - (16570.9248049494) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 101:  h + ho2 => 2 oh
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 102:  2 oh => h + ho2
    const amrex::Real k_f =
      135200000 * exp((-0.33) * tc[0] - (19912.2834658928) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 103:  h + ho2 => h2 + o2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 104:  h2 + o2 => h + ho2
    const amrex::Real k_f =
      913800000 * exp((-0.33) * tc[0] - (29337.5316164152) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 105:  ho2 + oh => h2o + o2
    const amrex::Real k_f = 28900000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 106:  h2o + o2 => ho2 + oh
    const amrex::Real k_f =
      6888000000 * exp((-0.33) * tc[0] - (36302.0502711525) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 107:  h2o2 + o2 => 2 ho2
    const amrex::Real k_f =
      594200000000 * exp((-0.66) * tc[0] - (26745.9657875209) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 108:  2 ho2 => h2o2 + o2
    const amrex::Real k_f = 420000000 * exp(-(6028.53565634054) * invT);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 109:  h + h2o2 => h2o + oh
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 110:  h2o + oh => h + h2o2
    const amrex::Real k_f = 7750000 * exp(-(37590.2849356126) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 111:  ch4 + ho2 => ch3 + h2o2
    const amrex::Real k_f = 342000 * exp(-(9707.04948337304) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 112:  ch3 + h2o2 => ch4 + ho2
    const amrex::Real k_f =
      336500 * exp((-0.33) * tc[0] - (1259.04809784341) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 113:  ch2o + ho2 => h2o2 + hco
    const amrex::Real k_f =
      5.82e-09 * exp((4.53) * tc[0] - (3299.59167768155) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 114:  h2o2 + hco => ch2o + ho2
    const amrex::Real k_f =
      1.194e-08 * exp((4.2) * tc[0] - (2476.32921242503) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 115:  c2h3 + c2h5 => 2 c2h4
    const amrex::Real k_f =
      576500000 * exp((-0.63) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += 2.000000 * qdot;
    wdot[15] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 116:  2 c2h4 => c2h3 + c2h5
    const amrex::Real k_f = 482000000 * exp(-(35995.0881050116) * invT);
    const amrex::Real qf = k_f * ((sc[14] * sc[14]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= 2.000000 * qdot;
    wdot[15] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 117:  c2h4 + h => c2h3 + h2
    const amrex::Real k_f =
      8.42e-09 * exp((4.62) * tc[0] - (1299.80864777359) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 118:  c2h3 + h2 => c2h4 + h
    const amrex::Real k_f =
      5.723e-07 * exp((3.79) * tc[0] - (1626.89948054666) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 119:  c2h4 + oh => c2h3 + h2o
    const amrex::Real k_f = 20500000 * exp(-(2994.13916153808) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 120:  c2h3 + h2o => c2h4 + oh
    const amrex::Real k_f =
      6033000000 * exp((-0.83) * tc[0] - (10949.9946479107) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 121:  c2h2 + o2 => hcco + oh
    const amrex::Real k_f =
      200 * exp((1.5) * tc[0] - (15146.8216407221) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 122:  hcco + oh => c2h2 + o2
    const amrex::Real k_f =
      0.2232 * exp((1.5) * tc[0] - (12781.7033114399) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 123:  c2h3 + o2 => c2h2 + ho2
    const amrex::Real k_f =
      2.12e-12 * exp((6) * tc[0] - (4772.50685849196) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 124:  c2h2 + ho2 => c2h3 + o2
    const amrex::Real k_f =
      1.114e-13 * exp((6.33) * tc[0] - (8841.51681818893) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 125:  h2o2 + o => ho2 + oh
    const amrex::Real k_f = 9.55 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 126:  ho2 + oh => h2o2 + o
    const amrex::Real k_f =
      0.1632 * exp((2.33) * tc[0] - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 127:  c2h2 + o => h + hcco
    const amrex::Real k_f = 14.3 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 128:  h + hcco => c2h2 + o
    const amrex::Real k_f =
      0.2021 * exp((2) * tc[0] - (6697.81382186082) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 129:  c2h2 + oh => ch2co + h
    const amrex::Real k_f =
      2.19e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 130:  ch2co + h => c2h2 + oh
    const amrex::Real k_f =
      2.161e-09 * exp((4.5) * tc[0] - (9893.23964972079) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 131:  ch2co + h => ch3 + co
    const amrex::Real k_f = 11000000 * exp(-(1710.93666373605) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 132:  ch3 + co => ch2co + h
    const amrex::Real k_f = 2400000 * exp(-(20229.3099653497) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 133:  ch2co + o => hcco + oh
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 134:  hcco + oh => ch2co + o
    const amrex::Real k_f = 14320 * exp(-(-631.536915584923) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 135:  ch2co + oh => h2o + hcco
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 136:  h2o + hcco => ch2co + oh
    const amrex::Real k_f = 141200 * exp(-(5029.65057471817) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 137:  ch2co + h => h2 + hcco
    const amrex::Real k_f = 200000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 138:  h2 + hcco => ch2co + h
    const amrex::Real k_f = 652200 * exp(-(422.701999275965) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 139:  hcco + oh => 2 hco
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 140:  h + hcco => ch2(s) + co
    const amrex::Real k_f = 110000000;
    const amrex::Real qf = k_f * (sc[0] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 141:  ch2(s) + co => h + hcco
    const amrex::Real k_f =
      2046000 * exp((0.89) * tc[0] - (14004.5198093453) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 142:  hcco + o => 2 co + h
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[6] += 2.000000 * qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 143:  c2h6 + o2 => c2h5 + ho2
    const amrex::Real k_f = 60300000 * exp(-(26101.8484552908) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 144:  c2h5 + ho2 => c2h6 + o2
    const amrex::Real k_f =
      267.9 * exp((0.89) * tc[0] - (-967.182431676671) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 145:  c2h6 + ho2 => c2h5 + h2o2
    const amrex::Real k_f = 13200000 * exp(-(10300.8451490226) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 146:  c2h5 + h2o2 => c2h6 + ho2
    const amrex::Real k_f =
      82980 * exp((0.24) * tc[0] - (3951.25725989866) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 147:  c2h3 + ch3 => c2h2 + ch4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 148:  c2h2 + ch4 => c2h3 + ch3
    const amrex::Real k_f = 29620000 * exp(-(33237.4607764017) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 149:  c2h5 + ch3 => c2h4 + ch4
    const amrex::Real k_f = 19500000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 150:  c2h4 + ch4 => c2h5 + ch3
    const amrex::Real k_f =
      28950000000 * exp((-0.7) * tc[0] - (35310.7134395172) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 151:  c2h3 + h => c2h2 + h2
    const amrex::Real k_f = 20000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 152:  c2h2 + h2 => c2h3 + h
    const amrex::Real k_f = 13310000 * exp(-(34258.9906079853) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 153:  c2h5 + h => 2 ch3
    const amrex::Real k_f = 36100000;
    const amrex::Real qf = k_f * (sc[0] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += 2.000000 * qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 154:  2 ch3 => c2h5 + h
    const amrex::Real k_f =
      54460000000 * exp((-1.03) * tc[0] - (8544.61898536414) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 155:  c2h3 + o2 => ch2o + hco
    const amrex::Real k_f =
      1.7e+23 * exp((-5.31) * tc[0] - (3270.90832773068) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 156:  ch2o + hco => c2h3 + o2
    const amrex::Real k_f =
      1.657e+23 * exp((-5.31) * tc[0] - (46824.3107531292) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  c2h6 => c2h5 + h
    const amrex::Real k_f =
      2.783e+21 * exp((-1.56) * tc[0] - (52233.8899105299) * invT);
    const amrex::Real qf = k_f * (sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 158:  c2h5 + h => c2h6
    const amrex::Real k_f = 36100000;
    const amrex::Real qf = k_f * (sc[0] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 159:  c2h4 + ch3 => c2h3 + ch4
    const amrex::Real k_f =
      6.62e-06 * exp((3.7) * tc[0] - (4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 160:  c2h3 + ch4 => c2h4 + ch3
    const amrex::Real k_f =
      1.44e-06 * exp((4.02) * tc[0] - (2753.60159528343) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 161:  ch3cho => ch3 + hco
    const amrex::Real k_f =
      2.614e+15 * exp((0.15) * tc[0] - (40534.1024305702) * invT);
    const amrex::Real qf = k_f * (sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 162:  ch3 + hco => ch3cho
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 163:  ch3cho + o2 => ch3co + ho2
    const amrex::Real k_f = 30100000 * exp(-(19700.9324662548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 164:  ch3co + ho2 => ch3cho + o2
    const amrex::Real k_f =
      85520 * exp((0.32) * tc[0] - (-976.240331661156) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 165:  ch3cho + oh => ch3co + h2o
    const amrex::Real k_f = 2 * exp((1.8) * tc[0] - (654.181665546136) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 166:  ch3co + h2o => ch3cho + oh
    const amrex::Real k_f =
      1.354 * exp((1.79) * tc[0] - (16530.667471685) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 167:  ch3cho + h => ch3co + h2
    const amrex::Real k_f = 13400000 * exp(-(1660.61499715557) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 168:  ch3co + h2 => ch3cho + h
    const amrex::Real k_f =
      2096000 * exp((-0.01) * tc[0] - (9908.33614969493) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 169:  ch3cho + o => ch3co + oh
    const amrex::Real k_f = 5940000 * exp(-(940.008731723216) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 170:  ch3co + oh => ch3cho + o
    const amrex::Real k_f =
      408000 * exp((-0.01) * tc[0] - (8137.01348606232) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 171:  ch3cho + ho2 => ch3co + h2o2
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 172:  ch3co + h2o2 => ch3cho + ho2
    const amrex::Real k_f =
      12100000 * exp((-0.34) * tc[0] - (6043.63215631468) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 173:  ch3 + ch3cho => ch3co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 174:  ch3co + ch4 => ch3 + ch3cho
    const amrex::Real k_f =
      10.66 * exp((1.77) * tc[0] - (11463.2756470315) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 175:  c3h5-a => c2h2 + ch3
    const amrex::Real k_f =
      2.397e+48 * exp((-9.9) * tc[0] - (41304.0239292514) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[16] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 176:  c2h2 + ch3 => c3h5-a
    const amrex::Real k_f =
      2.61e+40 * exp((-9.82) * tc[0] - (18593.8558014844) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[16] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 177:  c3h6 => c2h3 + ch3
    const amrex::Real k_f =
      2.73e+62 * exp((-13.28) * tc[0] - (61996.2932271415) * invT);
    const amrex::Real qf = k_f * (sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 178:  c2h3 + ch3 => c3h6
    const amrex::Real k_f =
      4.712e+53 * exp((-13.19) * tc[0] - (14865.0203078714) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[17] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 179:  c2h2 + ch3 => c3h4-a + h
    const amrex::Real k_f =
      67400000000000 * exp((-2.08) * tc[0] - (15896.6144727711) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= qdot;
    wdot[16] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 180:  c3h4-a + h => c2h2 + ch3
    const amrex::Real k_f =
      11490000000 * exp((-0.7) * tc[0] - (7945.79115305652) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += qdot;
    wdot[16] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 181:  c3h6 => c3h5-a + h
    const amrex::Real k_f =
      2.01e+61 * exp((-13.26) * tc[0] - (59631.1748978593) * invT);
    const amrex::Real qf = k_f * (sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 182:  c3h5-a + h => c3h6
    const amrex::Real k_f =
      4.887e+50 * exp((-12.25) * tc[0] - (14130.3239757965) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 183:  c3h6 + o => ch2co + ch3 + h
    const amrex::Real k_f =
      25 * exp((1.76) * tc[0] - (38.2444666011587) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[18] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 184:  ch2co + ch3 + h => c3h6 + o
    const amrex::Real k_f = 1e-12;
    const amrex::Real qf = k_f * (sc[0] * sc[8] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[18] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 185:  c3h6 + o => c2h5 + hco
    const amrex::Real k_f =
      15.8 * exp((1.76) * tc[0] - (-611.911465618539) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 186:  c2h5 + hco => c3h6 + o
    const amrex::Real k_f =
      0.1402 * exp((1.88) * tc[0] - (13340.2738104831) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[15] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 187:  c3h6 + ho2 => c3h5-a + h2o2
    const amrex::Real k_f = 150000 * exp(-(7140.64448776897) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 188:  c3h5-a + h2o2 => c3h6 + ho2
    const amrex::Real k_f =
      0.5867 * exp((1.33) * tc[0] - (4910.89144158826) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 189:  c3h6 + oh => c3h5-a + h2o
    const amrex::Real k_f =
      3.12 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 190:  c3h5-a + h2o => c3h6 + oh
    const amrex::Real k_f =
      6.194 * exp((2.01) * tc[0] - (16042.5473058545) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 191:  c4h6 => 2 c2h3
    const amrex::Real k_f =
      4.027e+19 * exp((-1) * tc[0] - (49390.7157487332) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 192:  2 c2h3 => c4h6
    const amrex::Real k_f = 12600000;
    const amrex::Real qf = k_f * ((sc[17] * sc[17]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= 2.000000 * qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 193:  c4h6 + oh => c2h5 + ch2co
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[15] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 194:  c2h5 + ch2co => c4h6 + oh
    const amrex::Real k_f = 3730000 * exp(-(15106.5643074577) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[15] -= qdot;
    wdot[18] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 195:  c4h6 + oh => c3h5-a + ch2o
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[23] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 196:  c3h5-a + ch2o => c4h6 + oh
    const amrex::Real k_f = 3.501 * exp(-(35758.5762720834) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[12] -= qdot;
    wdot[23] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 197:  c4h6 + oh => c2h3 + ch3cho
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[17] += qdot;
    wdot[20] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 198:  c2h3 + ch3cho => c4h6 + oh
    const amrex::Real k_f = 543700 * exp(-(9334.66915067755) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[17] -= qdot;
    wdot[20] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 199:  c4h6 + o => c2h4 + ch2co
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 200:  c2h4 + ch2co => c4h6 + o
    const amrex::Real k_f = 637700 * exp(-(47473.4602520173) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[14] -= qdot;
    wdot[18] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 201:  c4h6 + o => c3h4-a + ch2o
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[21] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 202:  c3h4-a + ch2o => c4h6 + o
    const amrex::Real k_f = 1075000 * exp(-(39779.2774318631) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[21] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 203:  c2h4 + o2 => c2h3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(29287.2099498347) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 204:  c2h3 + ho2 => c2h4 + o2
    const amrex::Real k_f =
      49390000 * exp((-0.5) * tc[0] - (688.400398820856) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 205:  nc3h7 => c2h4 + ch3
    const amrex::Real k_f =
      228400000000000 * exp((-0.55) * tc[0] - (14291.353308854) * invT);
    const amrex::Real qf = k_f * (sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 206:  c2h4 + ch3 => nc3h7
    const amrex::Real k_f = 410000 * exp(-(3625.1728604572) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 207:  nc3h7 => c3h6 + h
    const amrex::Real k_f =
      2.667e+15 * exp((-0.64) * tc[0] - (18528.4376349298) * invT);
    const amrex::Real qf = k_f * (sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 208:  c3h6 + h => nc3h7
    const amrex::Real k_f = 10000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 209:  nc3h7 + o2 => c3h6 + ho2
    const amrex::Real k_f = 300000 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 210:  c3h6 + ho2 => nc3h7 + o2
    const amrex::Real k_f = 200000 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 211:  c3h6 + o => c3h5-a + oh
    const amrex::Real k_f =
      524000 * exp((0.7) * tc[0] - (2960.92686159497) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 212:  c3h5-a + oh => c3h6 + o
    const amrex::Real k_f =
      105500 * exp((0.71) * tc[0] - (10476.9709820543) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 213:  c3h6 + h => c3h5-a + h2
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1254.01593118536) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 214:  c3h5-a + h2 => c3h6 + h
    const amrex::Real k_f =
      0.07933 * exp((2.51) * tc[0] - (9822.78931650813) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 215:  c3h6 + h => c2h4 + ch3
    const amrex::Real k_f =
      4.83e+27 * exp((-5.81) * tc[0] - (9309.50831738731) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 216:  c2h4 + ch3 => c3h6 + h
    const amrex::Real k_f =
      2.313e+27 * exp((-5.9) * tc[0] - (15911.7109727452) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 217:  c5h9 => c2h4 + c3h5-a
    const amrex::Real k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[29] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 218:  c5h9 => c4h6 + ch3
    const amrex::Real k_f =
      1.339e+15 * exp((-0.52) * tc[0] - (19283.2626336369) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[23] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 219:  c4h6 + ch3 => c5h9
    const amrex::Real k_f = 175000 * exp(-(3824.44666011587) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[23] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 220:  c4h7 => c4h6 + h
    const amrex::Real k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
    const amrex::Real qf = k_f * (sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 221:  c4h6 + h => c4h7
    const amrex::Real k_f = 40000000 * exp(-(654.181665546136) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 222:  c4h7 => c2h3 + c2h4
    const amrex::Real k_f = 100000000000 * exp(-(18619.0166347746) * invT);
    const amrex::Real qf = k_f * (sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 223:  c2h3 + c2h4 => c4h7
    const amrex::Real k_f = 50000 * exp(-(3522.51666063304) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 224:  c4h6 + c4h8-1 => 2 c4h7
    const amrex::Real k_f = 2350000 * exp(-(23510.2826263965) * invT);
    const amrex::Real qf = k_f * (sc[23] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[23] -= qdot;
    wdot[25] += 2.000000 * qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 225:  2 c4h7 => c4h6 + c4h8-1
    const amrex::Real k_f = 1600000;
    const amrex::Real qf = k_f * ((sc[25] * sc[25]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[23] += qdot;
    wdot[25] -= 2.000000 * qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 226:  c4h7 + ch3 => c4h6 + ch4
    const amrex::Real k_f = 8000000;
    const amrex::Real qf = k_f * (sc[8] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 227:  c4h6 + ch4 => c4h7 + ch3
    const amrex::Real k_f = 70500000 * exp(-(28824.2506172943) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 228:  c3h5-a + c4h7 => c3h6 + c4h6
    const amrex::Real k_f = 6310000;
    const amrex::Real qf = k_f * (sc[25] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 229:  c3h6 + c4h6 => c3h5-a + c4h7
    const amrex::Real k_f = 10000 * exp(-(25160.833290236) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 230:  c4h7 + o2 => c4h6 + ho2
    const amrex::Real k_f = 1000;
    const amrex::Real qf = k_f * (sc[3] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 231:  c4h6 + ho2 => c4h7 + o2
    const amrex::Real k_f = 100000 * exp(-(8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 232:  c4h7 + h => c4h6 + h2
    const amrex::Real k_f = 31600000;
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 233:  c4h6 + h2 => c4h7 + h
    const amrex::Real k_f = 10660000 * exp(-(28587.7387843661) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 234:  c2h5 + c4h7 => c2h6 + c4h6
    const amrex::Real k_f = 3980000;
    const amrex::Real qf = k_f * (sc[15] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 235:  c2h6 + c4h6 => c2h5 + c4h7
    const amrex::Real k_f = 3211000 * exp(-(25080.3186237072) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 236:  c2h5 + c4h7 => c2h4 + c4h8-1
    const amrex::Real k_f =
      9.24 * exp((1.5) * tc[0] - (-484.09443250414) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 237:  c2h4 + c4h8-1 => c2h5 + c4h7
    const amrex::Real k_f =
      0.0007807 * exp((2.91) * tc[0] - (25643.9212894085) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 238:  c2h3 + c4h7 => c2h4 + c4h6
    const amrex::Real k_f = 3980000;
    const amrex::Real qf = k_f * (sc[17] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 239:  c2h4 + c4h6 => c2h3 + c4h7
    const amrex::Real k_f = 11570000 * exp(-(29040.6337835904) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 240:  c4h8-1 => c3h5-a + ch3
    const amrex::Real k_f = 5e+15 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[26] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 241:  c3h5-a + ch3 => c4h8-1
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[8] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[26] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 242:  c4h8-1 => c2h3 + c2h5
    const amrex::Real k_f =
      1e+19 * exp((-1) * tc[0] - (48696.2767499227) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 243:  c2h3 + c2h5 => c4h8-1
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[15] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 244:  c4h8-1 => c4h7 + h
    const amrex::Real k_f =
      4.107e+18 * exp((-1) * tc[0] - (48988.1424160895) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 245:  c4h7 + h => c4h8-1
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 246:  c4h8-1 + ch3 => c4h7 + ch4
    const amrex::Real k_f = 100000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 247:  c4h7 + ch4 => c4h8-1 + ch3
    const amrex::Real k_f = 600000 * exp(-(8987.44965127229) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 248:  c4h8-1 + h => c4h7 + h2
    const amrex::Real k_f = 50000000 * exp(-(1962.54499663841) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 249:  c4h7 + h2 => c4h8-1 + h
    const amrex::Real k_f = 40000000 * exp(-(12681.0599782789) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 250:  c4h8-1 + oh => c4h7 + h2o
    const amrex::Real k_f = 22500000 * exp(-(1115.63134808906) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 251:  c4h7 + h2o => c4h8-1 + oh
    const amrex::Real k_f = 4772000 * exp(-(13320.1451438509) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 252:  c3h5-a + c4h8-1 => c3h6 + c4h7
    const amrex::Real k_f = 79000 * exp(-(6239.88665597852) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 253:  c3h6 + c4h7 => c3h5-a + c4h8-1
    const amrex::Real k_f = 100000 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 254:  c4h8-1 + ho2 => c4h7 + h2o2
    const amrex::Real k_f = 1400000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 255:  c4h7 + h2o2 => c4h8-1 + ho2
    const amrex::Real k_f = 316000 * exp(-(6541.81665546136) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 256:  c4h8-1 + o2 => c4h7 + ho2
    const amrex::Real k_f = 27000000 * exp(-(16706.7933047167) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 257:  c4h7 + ho2 => c4h8-1 + o2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[10] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 258:  pc4h9 => c2h4 + c2h5
    const amrex::Real k_f =
      7.497e+17 * exp((-1.41) * tc[0] - (14885.1489745036) * invT);
    const amrex::Real qf = k_f * (sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 259:  c2h4 + c2h5 => pc4h9
    const amrex::Real k_f = 330000 * exp(-(3623.15999379398) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 260:  pc4h9 => c4h8-1 + h
    const amrex::Real k_f =
      1.159e+17 * exp((-1.17) * tc[0] - (19202.7479671081) * invT);
    const amrex::Real qf = k_f * (sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 261:  c4h8-1 + h => pc4h9
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 262:  o2 + pc4h9 => c4h8-1 + ho2
    const amrex::Real k_f = 3e-25 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 263:  c4h8-1 + ho2 => o2 + pc4h9
    const amrex::Real k_f = 2e-25 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 264:  ch3coch2 => ch2co + ch3
    const amrex::Real k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
    const amrex::Real qf = k_f * (sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[18] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 265:  ch2co + ch3 => ch3coch2
    const amrex::Real k_f = 100000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 266:  c2h5co => c2h5 + co
    const amrex::Real k_f =
      1.834e+15 * exp((-0.73) * tc[0] - (6496.52715553893) * invT);
    const amrex::Real qf = k_f * (sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 267:  c2h5 + co => c2h5co
    const amrex::Real k_f = 151000 * exp(-(2420.4721625207) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 268:  c2h5cho + h => c2h5co + h2
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 269:  c2h5co + h2 => c2h5cho + h
    const amrex::Real k_f = 5854000 * exp(-(10361.2311489192) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 270:  c2h5cho + o => c2h5co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 271:  c2h5co + oh => c2h5cho + o
    const amrex::Real k_f = 321400 * exp(-(8091.72398613989) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 272:  c2h5cho + oh => c2h5co + h2o
    const amrex::Real k_f =
      26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 273:  c2h5co + h2o => c2h5cho + oh
    const amrex::Real k_f =
      17050 * exp((0.76) * tc[0] - (15700.3599731073) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 274:  c2h5cho + ch3 => c2h5co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 275:  c2h5co + ch4 => c2h5cho + ch3
    const amrex::Real k_f =
      9.972 * exp((1.78) * tc[0] - (11463.2756470315) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 276:  c2h5cho + ho2 => c2h5co + h2o2
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 277:  c2h5co + h2o2 => c2h5cho + ho2
    const amrex::Real k_f =
      10530000 * exp((-0.33) * tc[0] - (6884.00398820857) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 278:  c2h5 + c2h5cho => c2h5co + c2h6
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 279:  c2h5co + c2h6 => c2h5 + c2h5cho
    const amrex::Real k_f =
      598400000 * exp((-0.57) * tc[0] - (10416.5849821577) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 280:  c2h5cho => c2h5 + hco
    const amrex::Real k_f =
      9.85e+18 * exp((-0.73) * tc[0] - (41117.8337629036) * invT);
    const amrex::Real qf = k_f * (sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 281:  c2h5 + hco => c2h5cho
    const amrex::Real k_f = 18100000;
    const amrex::Real qf = k_f * (sc[15] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 282:  c2h5cho + o2 => c2h5co + ho2
    const amrex::Real k_f = 10050000 * exp(-(20480.9182982521) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 283:  c2h5co + ho2 => c2h5cho + o2
    const amrex::Real k_f =
      26720 * exp((0.33) * tc[0] - (-199.273799658669) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 284:  c2h3 + c2h5cho => c2h4 + c2h5co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 285:  c2h4 + c2h5co => c2h3 + c2h5cho
    const amrex::Real k_f =
      3661 * exp((0.83) * tc[0] - (12167.7789791581) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 286:  c2h5cho + c3h5-a => c2h5co + c3h6
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[28] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 287:  c2h5co + c3h6 => c2h5cho + c3h5-a
    const amrex::Real k_f = 10000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[28] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 288:  c5h10-1 => c2h5 + c3h5-a
    const amrex::Real k_f =
      9.173e+20 * exp((-1.63) * tc[0] - (37233.0011028912) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[30] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 289:  c2h5 + c3h5-a => c5h10-1
    const amrex::Real k_f = 4000000 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[30] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 290:  c5h10-1 + h => c5h9 + h2
    const amrex::Real k_f = 28000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 291:  c5h9 + h2 => c5h10-1 + h
    const amrex::Real k_f = 1000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 292:  c5h10-1 + o => c5h9 + oh
    const amrex::Real k_f =
      0.254 * exp((2.56) * tc[0] - (-568.634832359333) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 293:  c5h9 + oh => c5h10-1 + o
    const amrex::Real k_f = 700000 * exp(-(15046.1783075611) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 294:  c5h10-1 + o => hco + pc4h9
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 295:  c5h10-1 + o => ch3co + nc3h7
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[24] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 296:  c5h10-1 + oh => c5h9 + h2o
    const amrex::Real k_f =
      5.12 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 297:  c5h9 + h2o => c5h10-1 + oh
    const amrex::Real k_f =
      20.6 * exp((2.16) * tc[0] - (17597.486803191) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 298:  c5h10-1 + oh => ch2o + pc4h9
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 299:  c5h10-1 + oh => ch3cho + nc3h7
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[20] += qdot;
    wdot[24] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 300:  c5h10-1 + ch3 => c5h9 + ch4
    const amrex::Real k_f = 100000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 301:  c5h9 + ch4 => c5h10-1 + ch3
    const amrex::Real k_f = 600000 * exp(-(9007.57831790448) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 302:  h + h2o2 => h2 + ho2
    const amrex::Real k_f = 48200000 * exp(-(4000.57249314752) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 303:  h2 + ho2 => h + h2o2
    const amrex::Real k_f =
      1875000 * exp((0.33) * tc[0] - (12208.0363124225) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 304:  hco + o => co2 + h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 305:  co2 + h => hco + o
    const amrex::Real k_f = 9677000000 * exp(-(55454.4765716801) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 306:  ch3co + h => ch2co + h2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 307:  ch2co + h2 => ch3co + h
    const amrex::Real k_f =
      562600000000 * exp((-1.13) * tc[0] - (32054.9016117606) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 308:  ch3co + o => ch2co + oh
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 309:  ch2co + oh => ch3co + o
    const amrex::Real k_f =
      5951000000000 * exp((-1.13) * tc[0] - (60738.2515626297) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 310:  ch3 + ch3co => ch2co + ch4
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 311:  ch2co + ch4 => ch3 + ch3co
    const amrex::Real k_f =
      819700000000 * exp((-0.67) * tc[0] - (40171.7864311908) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 312:  c2h4 + o => ch2cho + h
    const amrex::Real k_f =
      3.39 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 313:  ch2cho + h => c2h4 + o
    const amrex::Real k_f =
      9.481 * exp((1.79) * tc[0] - (8076.62748616575) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 314:  c2h5 + o => ch3cho + h
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[15] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 315:  ch3cho + h => c2h5 + o
    const amrex::Real k_f =
      550500000 * exp((0.11) * tc[0] - (37434.2877692131) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[15] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 316:  c2h3 + c2h4 => c4h6 + h
    const amrex::Real k_f = 500000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
    wdot[17] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 317:  c4h6 + h => c2h3 + c2h4
    const amrex::Real k_f = 10000000 * exp(-(2365.11832928218) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[14] += qdot;
    wdot[17] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 318:  c2h5o + o2 => ch3cho + ho2
    const amrex::Real k_f = 42800 * exp(-(552.028682387778) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 319:  ch3cho + ho2 => c2h5o + o2
    const amrex::Real k_f =
      387.2 * exp((0.44) * tc[0] - (16042.5473058545) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 320:  h2o2 + o2 => 2 ho2
    const amrex::Real k_f =
      183900000 * exp((-0.66) * tc[0] - (19897.1869659186) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 321:  2 ho2 => h2o2 + o2
    const amrex::Real k_f = 130000 * exp(-(-819.739948595888) * invT);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 322:  c2h3 + o2 => ch2cho + o
    const amrex::Real k_f =
      350000000 * exp((-0.61) * tc[0] - (2646.91966213283) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 323:  ch2cho + o => c2h3 + o2
    const amrex::Real k_f =
      2589000 * exp((0.12) * tc[0] - (3250.27644443268) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 324:  ch3o2h => ch3o + oh
    const amrex::Real k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 325:  ch3o + oh => ch3o2h
    const amrex::Real k_f =
      116600 * exp((0.6) * tc[0] - (-891.196715140159) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 326:  c3h2 + o2 => co + h + hcco
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 327:  ch2o + ch3o2 => ch3o2h + hco
    const amrex::Real k_f = 1990000 * exp(-(5867.50632328303) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 328:  ch3o2h + hco => ch2o + ch3o2
    const amrex::Real k_f =
      8504000 * exp((-0.5) * tc[0] - (3527.04561062528) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 329:  c2h4 + ch3o2 => c2h3 + ch3o2h
    const amrex::Real k_f = 2230000 * exp(-(8650.29448518313) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 330:  c2h3 + ch3o2h => c2h4 + ch3o2
    const amrex::Real k_f =
      8112000000 * exp((-1.33) * tc[0] - (-749.289615383228) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 331:  ch3o2 + ch4 => ch3 + ch3o2h
    const amrex::Real k_f = 181000 * exp(-(9299.44398407122) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 332:  ch3 + ch3o2h => ch3o2 + ch4
    const amrex::Real k_f =
      370800 * exp((-0.5) * tc[0] - (-667.768515522863) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 333:  c2h5 + ho2 => c2h5o + oh
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 334:  c2h5o + oh => c2h5 + ho2
    const amrex::Real k_f =
      3075000000 * exp((-0.32) * tc[0] - (13833.4261429717) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 335:  ch3 + ch3o2 => 2 ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 336:  c2h5 + ch3o2 => c2h5o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 337:  ch3o2 + ho2 => ch3o2h + o2
    const amrex::Real k_f = 17500 * exp(-(-1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 338:  ch3o2h + o2 => ch3o2 + ho2
    const amrex::Real k_f =
      51560000 * exp((-0.83) * tc[0] - (17552.1973032686) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 339:  h2o2 + oh => h2o + ho2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 340:  h2o + ho2 => h2o2 + oh
    const amrex::Real k_f =
      97710000 * exp((0.33) * tc[0] - (20641.9476313096) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 341:  2 ch3o2 => 2 ch3o + o2
    const amrex::Real k_f =
      14000000000 * exp((-1.61) * tc[0] - (935.982998396779) * invT);
    const amrex::Real qf = k_f * ((sc[31] * sc[31]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[31] -= 2.000000 * qdot;
  }

  {
    // reaction 342:  c2h6 + ch3o2 => c2h5 + ch3o2h
    const amrex::Real k_f = 13200000 * exp(-(10300.8451490226) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 343:  c2h5 + ch3o2h => c2h6 + ch3o2
    const amrex::Real k_f =
      172800 * exp((0.06) * tc[0] - (2431.54292916841) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 344:  ch3cho + ch3o2 => ch3co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 345:  ch3co + ch3o2h => ch3cho + ch3o2
    const amrex::Real k_f =
      25190000 * exp((-0.51) * tc[0] - (4524.42104225023) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 346:  c2h3co => c2h3 + co
    const amrex::Real k_f =
      304300000000000 * exp((-0.46) * tc[0] - (15353.140473702) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[17] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 347:  c2h3 + co => c2h3co
    const amrex::Real k_f = 151000 * exp(-(2420.4721625207) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[17] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 348:  c2h3cho + oh => c2h3co + h2o
    const amrex::Real k_f =
      9.24 * exp((1.5) * tc[0] - (-484.09443250414) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 349:  c2h3co + h2o => c2h3cho + oh
    const amrex::Real k_f =
      21.47 * exp((1.48) * tc[0] - (17869.2238027256) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 350:  c2h3cho + h => c2h3co + h2
    const amrex::Real k_f = 13400000 * exp(-(1660.61499715557) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 351:  c2h3co + h2 => c2h3cho + h
    const amrex::Real k_f =
      7191000 * exp((-0.02) * tc[0] - (12389.1943121122) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 352:  c2h3cho + o => c2h3co + oh
    const amrex::Real k_f = 5940000 * exp(-(940.008731723216) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 353:  c2h3co + oh => c2h3cho + o
    const amrex::Real k_f =
      1400000 * exp((-0.02) * tc[0] - (10612.8394818215) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 354:  c2h3cho + ho2 => c2h3co + h2o2
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 355:  c2h3co + h2o2 => c2h3cho + ho2
    const amrex::Real k_f =
      41520000 * exp((-0.35) * tc[0] - (8524.49031873195) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 356:  c2h3cho + ch3 => c2h3co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 357:  c2h3co + ch4 => c2h3cho + ch3
    const amrex::Real k_f =
      36.56 * exp((1.76) * tc[0] - (13944.1338094488) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 358:  c2h3cho + ch3o2 => c2h3co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 359:  c2h3co + ch3o2h => c2h3cho + ch3o2
    const amrex::Real k_f =
      86450000 * exp((-0.53) * tc[0] - (7004.7759880017) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 360:  c3h5o => c2h3cho + h
    const amrex::Real k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
    const amrex::Real qf = k_f * (sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 361:  c2h3cho + h => c3h5o
    const amrex::Real k_f =
      771400 * exp((0.48) * tc[0] - (8932.09581803377) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 362:  c3h5o => c2h3 + ch2o
    const amrex::Real k_f =
      2028000000000 * exp((0.09) * tc[0] - (11855.7846463592) * invT);
    const amrex::Real qf = k_f * (sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 363:  c2h3 + ch2o => c3h5o
    const amrex::Real k_f = 150000 * exp(-(5334.09665753003) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 364:  c3h5o + o2 => c2h3cho + ho2
    const amrex::Real k_f = 1000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 365:  c2h3cho + ho2 => c3h5o + o2
    const amrex::Real k_f = 128800 * exp(-(16102.933305751) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 366:  c3h5-a + ho2 => c3h5o + oh
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 367:  c3h5o + oh => c3h5-a + ho2
    const amrex::Real k_f =
      20410000 * exp((-0.16) * tc[0] - (6169.43632276586) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 368:  c3h5-a + ch3o2 => c3h5o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 369:  c3h6 + ch3o2 => c3h5-a + ch3o2h
    const amrex::Real k_f = 324000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 370:  c3h5-a + ch3o2h => c3h6 + ch3o2
    const amrex::Real k_f = 20000 * exp(-(7548.2499870708) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 371:  ch3 + oh => ch2(s) + h2o
    const amrex::Real k_f = 26500000 * exp(-(1100.03163144912) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 372:  ch2(s) + h2o => ch3 + oh
    const amrex::Real k_f =
      32360 * exp((0.89) * tc[0] - (609.395382289516) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 373:  c4h7o => c2h3 + ch3cho
    const amrex::Real k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 374:  c2h3 + ch3cho => c4h7o
    const amrex::Real k_f = 10000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 375:  c4h7o => c2h3cho + ch3
    const amrex::Real k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 376:  c2h3cho + ch3 => c4h7o
    const amrex::Real k_f = 10000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 377:  c4h7 + ho2 => c4h7o + oh
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 378:  c4h7o + oh => c4h7 + ho2
    const amrex::Real k_f =
      100800 * exp((0.26) * tc[0] - (8499.32948544172) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 379:  c4h7 + ch3o2 => c4h7o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 380:  c4h8-1 + oh => ch2o + nc3h7
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[24] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 381:  ch2o + nc3h7 => c4h8-1 + oh
    const amrex::Real k_f = 1620000 * exp(-(6657.55648859644) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[12] -= qdot;
    wdot[24] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 382:  c4h8-1 + o => c3h6 + ch2o
    const amrex::Real k_f =
      0.723 * exp((2.34) * tc[0] - (-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[22] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 383:  c3h6 + ch2o => c4h8-1 + o
    const amrex::Real k_f =
      0.2 * exp((2.34) * tc[0] - (40398.2339308029) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[22] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 384:  c4h8-1 + o => c2h4 + ch3cho
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 385:  c2h4 + ch3cho => c4h8-1 + o
    const amrex::Real k_f = 2070000 * exp(-(42823.7382599816) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[14] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 386:  c4h8-1 + o => c2h5 + ch3co
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[15] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 387:  c2h5 + ch3co => c4h8-1 + o
    const amrex::Real k_f = 2350000 * exp(-(19197.7158004501) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[15] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 388:  c4h8-1 + oh => c2h5 + ch3cho
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[15] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 389:  c2h5 + ch3cho => c4h8-1 + oh
    const amrex::Real k_f = 9330000 * exp(-(10029.1081494881) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[15] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 390:  c4h8-1 + oh => c2h6 + ch3co
    const amrex::Real k_f = 500000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 391:  c2h6 + ch3co => c4h8-1 + oh
    const amrex::Real k_f = 9830000 * exp(-(16319.3164720471) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 392:  c4h8-1 + o => c2h5co + ch3
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 393:  c2h5co + ch3 => c4h8-1 + o
    const amrex::Real k_f = 480000 * exp(-(16379.7024719436) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 394:  c4h8-1 + oh => c2h5cho + ch3
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 395:  c2h5cho + ch3 => c4h8-1 + oh
    const amrex::Real k_f = 49500 * exp(-(8524.49031873195) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 396:  c4h8-1 + oh => c2h5co + ch4
    const amrex::Real k_f = 500000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 397:  c2h5co + ch4 => c4h8-1 + oh
    const amrex::Real k_f = 22000000 * exp(-(17245.2351371277) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 398:  c4h8-1 + ch3o2 => c4h7 + ch3o2h
    const amrex::Real k_f = 1400000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 399:  c4h7 + ch3o2h => c4h8-1 + ch3o2
    const amrex::Real k_f = 316000 * exp(-(6541.81665546136) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 400:  c4h8ooh1-3o2 => c4h8ooh1-3 + o2
    const amrex::Real k_f =
      5.601e+22 * exp((-2.23) * tc[0] - (19102.1046339472) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 401:  c4h8ooh1-3 + o2 => c4h8ooh1-3o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 402:  c4h8ooh1-3o2 => nc4ket13 + oh
    const amrex::Real k_f = 25000000000 * exp(-(10768.836648221) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[35] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 403:  nc4ket13 + oh => c4h8ooh1-3o2
    const amrex::Real k_f =
      0.006893 * exp((1.3) * tc[0] - (22493.784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[35] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 404:  c4h8ooh1-3 => c3h6 + ch2o + oh
    const amrex::Real k_f =
      66370000000000 * exp((-0.16) * tc[0] - (15046.1783075611) * invT);
    const amrex::Real qf = k_f * (sc_qss[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 405:  pc4h9o2 => c4h8ooh1-3
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[36] -= qdot;
  }

  {
    // reaction 406:  c4h8ooh1-3 => pc4h9o2
    const amrex::Real k_f =
      3231000000 * exp((-0.14) * tc[0] - (3960.81837654895) * invT);
    const amrex::Real qf = k_f * (sc_qss[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[36] += qdot;
  }

  {
    // reaction 407:  c2h5cho + ch3o2 => c2h5co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 408:  c2h5co + ch3o2h => c2h5cho + ch3o2
    const amrex::Real k_f =
      23580000 * exp((-0.51) * tc[0] - (4520.3953089238) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 409:  c2h5cho + c4h7 => c2h5co + c4h8-1
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 410:  c2h5co + c4h8-1 => c2h5cho + c4h7
    const amrex::Real k_f = 10000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 411:  c3h4-a + ho2 => c2h4 + co + oh
    const amrex::Real k_f = 1000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 412:  c2h4 + co + oh => c3h4-a + ho2
    const amrex::Real k_f = 1e-12;
    const amrex::Real qf = k_f * (sc[4] * sc[6] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[10] += qdot;
    wdot[14] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 413:  c3h4-a + ho2 => c3h3 + h2o2
    const amrex::Real k_f = 30000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 414:  c3h3 + h2o2 => c3h4-a + ho2
    const amrex::Real k_f =
      15510000000 * exp((-1.38) * tc[0] - (22141.5332954077) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 415:  c3h6 + o2 => c3h5-a + ho2
    const amrex::Real k_f = 4000000 * exp(-(20078.3449656083) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 416:  c3h5-a + ho2 => c3h6 + o2
    const amrex::Real k_f =
      33320 * exp((0.34) * tc[0] - (-279.788466187424) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 417:  c3h6 + ch3 => c3h5-a + ch4
    const amrex::Real k_f =
      2.21e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 418:  c3h5-a + ch4 => c3h6 + ch3
    const amrex::Real k_f =
      2.647e-05 * exp((3.51) * tc[0] - (11664.5623133534) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 419:  c2h5 + c3h6 => c2h6 + c3h5-a
    const amrex::Real k_f = 100000 * exp(-(4931.52332488625) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 420:  c2h6 + c3h5-a => c2h5 + c3h6
    const amrex::Real k_f =
      0.5369 * exp((1.33) * tc[0] - (8272.88198582959) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 421:  c3h5-a + ho2 => c2h3 + ch2o + oh
    const amrex::Real k_f = 1e-24;
    const amrex::Real qf = k_f * (sc[10] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
    wdot[17] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 422:  c2h3 + ch2o + oh => c3h5-a + ho2
    const amrex::Real k_f = 1e-42;
    const amrex::Real qf = k_f * (sc[4] * sc[12] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
    wdot[17] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 423:  c3h5-a + h => c3h4-a + h2
    const amrex::Real k_f = 18100000;
    const amrex::Real qf = k_f * (sc[0] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 424:  c3h4-a + h2 => c3h5-a + h
    const amrex::Real k_f =
      12300000 * exp((0.12) * tc[0] - (23766.9231259569) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 425:  c3h5-a + ch3 => c3h4-a + ch4
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[8] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 426:  c3h4-a + ch4 => c3h5-a + ch3
    const amrex::Real k_f =
      4921000 * exp((0.05) * tc[0] - (24043.6922921495) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 427:  c2h5 + c3h5-a => c2h6 + c3h4-a
    const amrex::Real k_f = 400000;
    const amrex::Real qf = k_f * (sc[15] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 428:  c2h6 + c3h4-a => c2h5 + c3h5-a
    const amrex::Real k_f =
      1802000 * exp((0.05) * tc[0] - (20294.7281319043) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 429:  c2h5 + c3h5-a => c2h4 + c3h6
    const amrex::Real k_f = 400000;
    const amrex::Real qf = k_f * (sc[15] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 430:  c2h4 + c3h6 => c2h5 + c3h5-a
    const amrex::Real k_f =
      69370000000 * exp((-1.33) * tc[0] - (26569.8399544892) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 431:  c2h3 + c3h5-a => c2h4 + c3h4-a
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[17] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 432:  c2h4 + c3h4-a => c2h3 + c3h5-a
    const amrex::Real k_f =
      16240000 * exp((0.05) * tc[0] - (24250.0111251294) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 433:  c3h4-a + c3h6 => 2 c3h5-a
    const amrex::Real k_f =
      839100000000 * exp((-1.29) * tc[0] - (16953.369470961) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[22] -= qdot;
    wdot[37] += 2.000000 * qdot;
  }

  {
    // reaction 434:  2 c3h5-a => c3h4-a + c3h6
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * ((sc[37] * sc[37]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] += qdot;
    wdot[22] += qdot;
    wdot[37] -= 2.000000 * qdot;
  }

  {
    // reaction 435:  c3h5-a + o2 => c2h3cho + oh
    const amrex::Real k_f =
      24700000 * exp((-0.44) * tc[0] - (11584.0476468246) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[34] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 436:  c2h3cho + oh => c3h5-a + o2
    const amrex::Real k_f =
      190300000 * exp((-0.8) * tc[0] - (37680.8639354574) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[34] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 437:  c3h4-a + o2 => c3h3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(19705.9646329128) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 438:  c3h3 + ho2 => c3h4-a + o2
    const amrex::Real k_f =
      117500 * exp((0.3) * tc[0] - (19.1222333005793) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 439:  c3h3 + h => c3h2 + h2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[0] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 440:  c3h2 + h2 => c3h3 + h
    const amrex::Real k_f =
      38530 * exp((0.38) * tc[0] - (2314.79666270171) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 441:  c3h4-a + oh => c3h3 + h2o
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 442:  c3h3 + h2o => c3h4-a + oh
    const amrex::Real k_f =
      7.003 * exp((1.97) * tc[0] - (17371.0393035789) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 443:  c3h4-a + o => c2h4 + co
    const amrex::Real k_f = 7800000 * exp(-(805.146665287552) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 444:  c2h4 + co => c3h4-a + o
    const amrex::Real k_f =
      82800000 * exp((-0.21) * tc[0] - (62801.439892429) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 445:  c3h2 + oh => c2h2 + hco
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 446:  c2h2 + hco => c3h2 + oh
    const amrex::Real k_f =
      290700000000000 * exp((-1.39) * tc[0] - (39512.5725989866) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 447:  c3h5-a => c3h4-a + h
    const amrex::Real k_f =
      6.663e+15 * exp((-0.43) * tc[0] - (31813.3576121744) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 448:  c3h4-a + h => c3h5-a
    const amrex::Real k_f =
      240000 * exp((0.69) * tc[0] - (1513.17251407479) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 449:  c3h4-a + h => c3h3 + h2
    const amrex::Real k_f = 20 * exp((2) * tc[0] - (2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 450:  c3h3 + h2 => c3h4-a + h
    const amrex::Real k_f =
      3.235 * exp((1.97) * tc[0] - (11755.1413131983) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 451:  c3h4-a + ch3 => c3h3 + ch4
    const amrex::Real k_f =
      3.67e-08 * exp((4.01) * tc[0] - (3436.96982744624) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 452:  c3h3 + ch4 => c3h4-a + ch3
    const amrex::Real k_f =
      1.551e-07 * exp((3.98) * tc[0] - (12917.5718112072) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 453:  c3h4-a + c3h5-a => c3h3 + c3h6
    const amrex::Real k_f = 200000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 454:  c3h3 + c3h6 => c3h4-a + c3h5-a
    const amrex::Real k_f =
      26440000000000 * exp((-2.71) * tc[0] - (21205.5502970109) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 455:  c3h3 + oh => c3h2 + h2o
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 456:  c3h2 + h2o => c3h3 + oh
    const amrex::Real k_f = 1343000000 * exp(-(7890.437319818) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 457:  c3h3 + o2 => ch2co + hco
    const amrex::Real k_f = 30100 * exp(-(1444.23183085955) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[18] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 458:  ch2co + hco => c3h3 + o2
    const amrex::Real k_f = 488100 * exp(-(29926.2951154067) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[18] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 459:  pc4h9o2 => o2 + pc4h9
    const amrex::Real k_f =
      6.155e+19 * exp((-1.38) * tc[0] - (17869.2238027256) * invT);
    const amrex::Real qf = k_f * (sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 460:  o2 + pc4h9 => pc4h9o2
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 461:  ch2cho => ch2co + h
    const amrex::Real k_f =
      3.094e+15 * exp((-0.26) * tc[0] - (25573.4709561959) * invT);
    const amrex::Real qf = k_f * (sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 462:  ch2co + h => ch2cho
    const amrex::Real k_f = 50000000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 463:  ch2cho + o2 => ch2o + co + oh
    const amrex::Real k_f = 20000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 464:  nc4ket13 => ch2cho + ch3cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 465:  c3h5-a + o2 => c3h4-a + ho2
    const amrex::Real k_f =
      2.18e+15 * exp((-2.85) * tc[0] - (15478.9446401532) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 466:  c3h4-a + ho2 => c3h5-a + o2
    const amrex::Real k_f =
      26900000000000 * exp((-2.4) * tc[0] - (10315.9416489968) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 467:  c3h5-a + o2 => ch2cho + ch2o
    const amrex::Real k_f =
      7140000000 * exp((-1.21) * tc[0] - (10592.7108151893) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 468:  ch2cho + ch2o => c3h5-a + o2
    const amrex::Real k_f =
      49440000000 * exp((-1.4) * tc[0] - (44595.0609236143) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[12] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 469:  c3h5-a + o2 => c2h2 + ch2o + oh
    const amrex::Real k_f =
      9.72e+23 * exp((-5.71) * tc[0] - (10793.9974815112) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[16] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 470:  hcco + o2 => co2 + hco
    const amrex::Real k_f = 240000 * exp(-(-429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[7] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 471:  co2 + hco => hcco + o2
    const amrex::Real k_f = 147400000 * exp(-(67229.7465515105) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 472:  ch3 + o2 => ch2o + oh
    const amrex::Real k_f = 747000 * exp(-(7170.83748771726) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 473:  ch2o + oh => ch3 + o2
    const amrex::Real k_f = 777800 * exp(-(34102.9934415859) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 474:  c2h4 + h2 => 2 ch3
    const amrex::Real k_f =
      3767000 * exp((0.83) * tc[0] - (42627.4837603178) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += 2.000000 * qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 475:  2 ch3 => c2h4 + h2
    const amrex::Real k_f = 100000000 * exp(-(16102.933305751) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 476:  nc3h7cho + o2 => ho2 + nc3h7co
    const amrex::Real k_f =
      20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 477:  ho2 + nc3h7co => nc3h7cho + o2
    const amrex::Real k_f = 10 * exp((0.5) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 478:  nc3h7cho + oh => h2o + nc3h7co
    const amrex::Real k_f =
      26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 479:  h2o + nc3h7co => nc3h7cho + oh
    const amrex::Real k_f =
      18520 * exp((0.75) * tc[0] - (15710.4243064233) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 480:  h + nc3h7cho => h2 + nc3h7co
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 481:  h2 + nc3h7co => h + nc3h7cho
    const amrex::Real k_f = 18000000 * exp(-(12077.1999793133) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 482:  nc3h7cho + o => nc3h7co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 483:  nc3h7co + oh => nc3h7cho + o
    const amrex::Real k_f = 1000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 484:  ho2 + nc3h7cho => h2o2 + nc3h7co
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 485:  h2o2 + nc3h7co => ho2 + nc3h7cho
    const amrex::Real k_f = 1000000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 486:  ch3 + nc3h7cho => ch4 + nc3h7co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 487:  ch4 + nc3h7co => ch3 + nc3h7cho
    const amrex::Real k_f = 15000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 488:  ch3o2 + nc3h7cho => ch3o2h + nc3h7co
    const amrex::Real k_f = 1000000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 489:  ch3o2h + nc3h7co => ch3o2 + nc3h7cho
    const amrex::Real k_f = 25000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 490:  nc3h7co => co + nc3h7
    const amrex::Real k_f =
      5.325e+15 * exp((-0.86) * tc[0] - (6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 491:  co + nc3h7 => nc3h7co
    const amrex::Real k_f = 150000 * exp(-(2415.43999586265) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 492:  c2h5coch2 => c2h5 + ch2co
    const amrex::Real k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
    const amrex::Real qf = k_f * (sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[18] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 493:  c2h5 + ch2co => c2h5coch2
    const amrex::Real k_f = 211000 * exp(-(3698.64249366469) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[18] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 494:  nc3h7coch2 => ch2co + nc3h7
    const amrex::Real k_f =
      1.226e+18 * exp((-1.4) * tc[0] - (21864.7641292151) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[24] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 495:  ch2co + nc3h7 => nc3h7coch2
    const amrex::Real k_f = 100000 * exp(-(5837.31332333475) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] -= qdot;
    wdot[24] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 496:  nc4h9cho + o2 => ho2 + nc4h9co
    const amrex::Real k_f =
      20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 497:  ho2 + nc4h9co => nc4h9cho + o2
    const amrex::Real k_f = 10 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 498:  nc4h9cho + oh => h2o + nc4h9co
    const amrex::Real k_f =
      26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 499:  h2o + nc4h9co => nc4h9cho + oh
    const amrex::Real k_f =
      21430 * exp((0.73) * tc[0] - (15720.4886397394) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 500:  h + nc4h9cho => h2 + nc4h9co
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 501:  h2 + nc4h9co => h + nc4h9cho
    const amrex::Real k_f = 18000000 * exp(-(12077.1999793133) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 502:  nc4h9cho + o => nc4h9co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 503:  nc4h9co + oh => nc4h9cho + o
    const amrex::Real k_f = 1000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 504:  ho2 + nc4h9cho => h2o2 + nc4h9co
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 505:  h2o2 + nc4h9co => ho2 + nc4h9cho
    const amrex::Real k_f = 1000000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 506:  ch3 + nc4h9cho => ch4 + nc4h9co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 507:  ch4 + nc4h9co => ch3 + nc4h9cho
    const amrex::Real k_f = 15000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 508:  ch3o2 + nc4h9cho => ch3o2h + nc4h9co
    const amrex::Real k_f = 1000000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 509:  ch3o2h + nc4h9co => ch3o2 + nc4h9cho
    const amrex::Real k_f = 25000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 510:  nc4h9co => co + pc4h9
    const amrex::Real k_f = 100000000000 * exp(-(4830.87999172531) * invT);
    const amrex::Real qf = k_f * (sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 511:  co + pc4h9 => nc4h9co
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 512:  ch2(s) + ch4 => 2 ch3
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 513:  2 ch3 => ch2(s) + ch4
    const amrex::Real k_f =
      5429000000 * exp((-0.89) * tc[0] - (7875.34081984386) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 514:  c2h6 + ch2(s) => c2h5 + ch3
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[13] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 515:  c2h5 + ch3 => c2h6 + ch2(s)
    const amrex::Real k_f =
      104100000 * exp((-0.33) * tc[0] - (9973.75431624954) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 516:  ch2(s) + o2 => co + h + oh
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 517:  ch2(s) + h2 => ch3 + h
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 518:  ch3 + h => ch2(s) + h2
    const amrex::Real k_f =
      248200000000 * exp((-0.89) * tc[0] - (8116.88481943013) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 519:  ch2(s) + o => co + 2 h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 520:  ch2(s) + oh => ch2o + h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 521:  ch2o + h => ch2(s) + oh
    const amrex::Real k_f =
      3194000000000 * exp((-0.89) * tc[0] - (44212.6162576027) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 522:  ch2(s) + co2 => ch2o + co
    const amrex::Real k_f = 3000000;
    const amrex::Real qf = k_f * (sc[7] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 523:  ch2o + co => ch2(s) + co2
    const amrex::Real k_f =
      2852000000 * exp((-0.89) * tc[0] - (32970.7559435252) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 524:  ch2(s) + ch3 => c2h4 + h
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 525:  c2h4 + h => ch2(s) + ch3
    const amrex::Real k_f =
      2671000000 * exp((-0.06) * tc[0] - (34641.4352739969) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 526:  ch2(s) + ch2co => c2h4 + co
    const amrex::Real k_f = 160000000;
    const amrex::Real qf = k_f * (sc[18] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 527:  c2h4 + co => ch2(s) + ch2co
    const amrex::Real k_f =
      4596000000 * exp((-0.06) * tc[0] - (53139.6799089784) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 528:  nc7h16 => c7h15-1 + h
    const amrex::Real k_f =
      1.34e+88 * exp((-21.17) * tc[0] - (71859.339876914) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 529:  c7h15-1 + h => nc7h16
    const amrex::Real k_f =
      3.374e+76 * exp((-20.22) * tc[0] - (19932.4121325249) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 530:  nc7h16 => c7h15-2 + h
    const amrex::Real k_f =
      6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 531:  c7h15-2 + h => nc7h16
    const amrex::Real k_f =
      5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 532:  nc7h16 => c7h15-3 + h
    const amrex::Real k_f =
      6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 533:  c7h15-3 + h => nc7h16
    const amrex::Real k_f =
      5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 534:  nc7h16 => c7h15-4 + h
    const amrex::Real k_f =
      3.25e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 535:  c7h15-4 + h => nc7h16
    const amrex::Real k_f =
      5.187e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 536:  nc7h16 => nc3h7 + pc4h9
    const amrex::Real k_f =
      1.415e+78 * exp((-17.71) * tc[0] - (60738.2515626297) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 537:  nc3h7 + pc4h9 => nc7h16
    const amrex::Real k_f =
      1.363e+62 * exp((-16.11) * tc[0] - (16334.4129720212) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 538:  h + nc7h16 => c7h15-1 + h2
    const amrex::Real k_f =
      0.188 * exp((2.75) * tc[0] - (3160.20066125364) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 539:  c7h15-1 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.008926 * exp((2.7) * tc[0] - (5308.93582423979) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 540:  h + nc7h16 => c7h15-2 + h2
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 541:  c7h15-2 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 542:  h + nc7h16 => c7h15-3 + h2
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 543:  c7h15-3 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 544:  h + nc7h16 => c7h15-4 + h2
    const amrex::Real k_f = 1.3 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 545:  c7h15-4 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003913 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 546:  nc7h16 + o => c7h15-1 + oh
    const amrex::Real k_f =
      0.193 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 547:  c7h15-1 + oh => nc7h16 + o
    const amrex::Real k_f =
      0.004025 * exp((2.63) * tc[0] - (2965.45581158721) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 548:  nc7h16 + o => c7h15-2 + oh
    const amrex::Real k_f =
      0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 549:  c7h15-2 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 550:  nc7h16 + o => c7h15-3 + oh
    const amrex::Real k_f =
      0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 551:  c7h15-3 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 552:  nc7h16 + o => c7h15-4 + oh
    const amrex::Real k_f =
      0.0477 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 553:  c7h15-4 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.306e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 554:  nc7h16 + oh => c7h15-1 + h2o
    const amrex::Real k_f =
      10500 * exp((0.97) * tc[0] - (800.114498629504) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 555:  c7h15-1 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      15000 * exp((1.05) * tc[0] - (11740.0448132241) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 556:  nc7h16 + oh => c7h15-2 + h2o
    const amrex::Real k_f =
      94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 557:  c7h15-2 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 558:  nc7h16 + oh => c7h15-3 + h2o
    const amrex::Real k_f =
      94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 559:  c7h15-3 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 560:  nc7h16 + oh => c7h15-4 + h2o
    const amrex::Real k_f =
      47 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 561:  c7h15-4 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6125 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 562:  ho2 + nc7h16 => c7h15-1 + h2o2
    const amrex::Real k_f = 16800000 * exp(-(10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 563:  c7h15-1 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      20500000 * exp((-0.38) * tc[0] - (4226.51677609384) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 564:  ho2 + nc7h16 => c7h15-2 + h2o2
    const amrex::Real k_f = 11200000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 565:  c7h15-2 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 566:  ho2 + nc7h16 => c7h15-3 + h2o2
    const amrex::Real k_f = 11200000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 567:  c7h15-3 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 568:  ho2 + nc7h16 => c7h15-4 + h2o2
    const amrex::Real k_f = 5600000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 569:  c7h15-4 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      433200 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 570:  ch3 + nc7h16 => c7h15-1 + ch4
    const amrex::Real k_f =
      9.04e-07 * exp((3.65) * tc[0] - (3600.01202716696) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 571:  c7h15-1 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      1.121e-06 * exp((3.6) * tc[0] - (5993.31048973421) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 572:  ch3 + nc7h16 => c7h15-2 + ch4
    const amrex::Real k_f =
      0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 573:  c7h15-2 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 574:  ch3 + nc7h16 => c7h15-3 + ch4
    const amrex::Real k_f =
      0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 575:  c7h15-3 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 576:  ch3 + nc7h16 => c7h15-4 + ch4
    const amrex::Real k_f =
      0.02705 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 577:  c7h15-4 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002127 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 578:  nc7h16 + o2 => c7h15-1 + ho2
    const amrex::Real k_f = 60000000 * exp(-(26569.8399544892) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 579:  c7h15-1 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      51750 * exp((0.28) * tc[0] - (-204.305966316716) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 580:  nc7h16 + o2 => c7h15-2 + ho2
    const amrex::Real k_f = 40000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 581:  c7h15-2 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 582:  nc7h16 + o2 => c7h15-3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 583:  c7h15-3 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 584:  nc7h16 + o2 => c7h15-4 + ho2
    const amrex::Real k_f = 20000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 585:  c7h15-4 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1094 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 586:  c2h5 + nc7h16 => c2h6 + c7h15-1
    const amrex::Real k_f = 100000 * exp(-(6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 587:  c2h6 + c7h15-1 => c2h5 + nc7h16
    const amrex::Real k_f = 320000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 588:  c2h5 + nc7h16 => c2h6 + c7h15-2
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 589:  c2h6 + c7h15-2 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 590:  c2h5 + nc7h16 => c2h6 + c7h15-3
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 591:  c2h6 + c7h15-3 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 592:  c2h5 + nc7h16 => c2h6 + c7h15-4
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 593:  c2h6 + c7h15-4 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 594:  c2h3 + nc7h16 => c2h4 + c7h15-1
    const amrex::Real k_f = 1000000 * exp(-(9057.89998448495) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 595:  c2h4 + c7h15-1 => c2h3 + nc7h16
    const amrex::Real k_f = 2570000 * exp(-(12781.7033114399) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 596:  c2h3 + nc7h16 => c2h4 + c7h15-2
    const amrex::Real k_f = 800000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 597:  c2h4 + c7h15-2 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 598:  c2h3 + nc7h16 => c2h4 + c7h15-3
    const amrex::Real k_f = 800000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 599:  c2h4 + c7h15-3 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 600:  c2h3 + nc7h16 => c2h4 + c7h15-4
    const amrex::Real k_f = 400000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 601:  c2h4 + c7h15-4 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 602:  ch3o2 + nc7h16 => c7h15-1 + ch3o2h
    const amrex::Real k_f = 12100000 * exp(-(10280.7164823904) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 603:  c7h15-1 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 3600000 * exp(-(4931.52332488625) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 604:  ch3o2 + nc7h16 => c7h15-2 + ch3o2h
    const amrex::Real k_f = 8064000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 605:  c7h15-2 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 606:  ch3o2 + nc7h16 => c7h15-3 + ch3o2h
    const amrex::Real k_f = 8064000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 607:  c7h15-3 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 608:  ch3o2 + nc7h16 => c7h15-4 + ch3o2h
    const amrex::Real k_f = 4032000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 609:  c7h15-4 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 610:  c7h15-1 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 611:  c7h15-2 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 612:  c7h15-1 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 613:  c7h15-3 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 614:  c7h15-1 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 615:  c7h15-4 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 616:  c7h15-2 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 617:  c7h15-3 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 618:  c7h15-2 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 619:  c7h15-4 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 620:  c7h15-3 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 621:  c7h15-4 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 622:  c7h15-2 => c3h6 + pc4h9
    const amrex::Real k_f =
      2.218e+16 * exp((-0.89) * tc[0] - (15161.9181406962) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
  }

  {
    // reaction 623:  c3h6 + pc4h9 => c7h15-2
    const amrex::Real k_f = 100000 * exp(-(4126.3766595987) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
  }

  {
    // reaction 624:  c7h15-2 => c7h14-2 + h
    const amrex::Real k_f =
      2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 625:  c7h14-2 + h => c7h15-2
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 626:  c7h15-3 => c4h8-1 + nc3h7
    const amrex::Real k_f =
      9.633e+17 * exp((-1.42) * tc[0] - (15388.3656403083) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 627:  c4h8-1 + nc3h7 => c7h15-3
    const amrex::Real k_f = 100000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 628:  c7h15-3 => c7h14-2 + h
    const amrex::Real k_f =
      2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 629:  c7h14-2 + h => c7h15-3
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 630:  c7h15-3 => c7h14-3 + h
    const amrex::Real k_f =
      2.018e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 631:  c7h14-3 + h => c7h15-3
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 632:  c7h15-4 => c2h5 + c5h10-1
    const amrex::Real k_f =
      5.426e+16 * exp((-0.89) * tc[0] - (15393.3978069664) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 633:  c2h5 + c5h10-1 => c7h15-4
    const amrex::Real k_f = 100000 * exp(-(4126.3766595987) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 634:  c7h15-4 => c7h14-3 + h
    const amrex::Real k_f =
      4.02e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 635:  c7h14-3 + h => c7h15-4
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 636:  c7h15-2 + o2 => c7h14-2 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 637:  c7h14-2 + ho2 => c7h15-2 + o2
    const amrex::Real k_f =
      3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 638:  c7h15-3 + o2 => c7h14-2 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 639:  c7h14-2 + ho2 => c7h15-3 + o2
    const amrex::Real k_f =
      3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 640:  c7h15-3 + o2 => c7h14-3 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 641:  c7h14-3 + ho2 => c7h15-3 + o2
    const amrex::Real k_f =
      5.094e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 642:  c7h15-4 + o2 => c7h14-3 + ho2
    const amrex::Real k_f = 6e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 643:  c7h14-3 + ho2 => c7h15-4 + o2
    const amrex::Real k_f =
      5.113e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 644:  c7h15-1 => c7h15-3
    const amrex::Real k_f =
      1386000000 * exp((0.98) * tc[0] - (16988.5946375673) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 645:  c7h15-3 => c7h15-1
    const amrex::Real k_f =
      44100000 * exp((1.38) * tc[0] - (18256.7006353952) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 646:  c7h15-1 => c7h15-4
    const amrex::Real k_f =
      2541000000 * exp((0.35) * tc[0] - (9943.56131630126) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 647:  c7h15-4 => c7h15-1
    const amrex::Real k_f =
      161100000 * exp((0.74) * tc[0] - (11211.6673141292) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 648:  c7h15-2 => c7h15-3
    const amrex::Real k_f =
      958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 649:  c7h15-3 => c7h15-2
    const amrex::Real k_f =
      958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 650:  c7h15-1 => c7h15-2
    const amrex::Real k_f =
      547800000 * exp((1.62) * tc[0] - (19504.6779665909) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 651:  c7h15-2 => c7h15-1
    const amrex::Real k_f =
      17430000 * exp((2.01) * tc[0] - (20772.7839644188) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 652:  c7h14-2 + oh => c2h5cho + pc4h9
    const amrex::Real k_f = 100000 * exp(-(-2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 653:  c7h14-3 + oh => c2h5cho + pc4h9
    const amrex::Real k_f = 100000 * exp(-(-2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 654:  c7h14-2 + o => c5h10-1 + ch3cho
    const amrex::Real k_f = 100000 * exp(-(-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 655:  c7h14-3 + o => c5h10-1 + ch3cho
    const amrex::Real k_f = 100000 * exp(-(-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 656:  c7h14-2 => c4h7 + nc3h7
    const amrex::Real k_f = 1e+16 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 657:  c4h7 + nc3h7 => c7h14-2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[24] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 658:  c7h14-3 => c4h7 + nc3h7
    const amrex::Real k_f = 1e+16 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 659:  c4h7 + nc3h7 => c7h14-3
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[24] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 660:  c7h15o2-1 => c7h15-1 + o2
    const amrex::Real k_f =
      2.657e+20 * exp((-1.67) * tc[0] - (17813.8699694871) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 661:  c7h15-1 + o2 => c7h15o2-1
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 662:  c7h15o2-2 => c7h15-2 + o2
    const amrex::Real k_f =
      1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 663:  c7h15-2 + o2 => c7h15o2-2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 664:  c7h15o2-3 => c7h15-3 + o2
    const amrex::Real k_f =
      9.879e+21 * exp((-1.97) * tc[0] - (19051.7829673667) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 665:  c7h15-3 + o2 => c7h15o2-3
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 666:  c7h15o2-4 => c7h15-4 + o2
    const amrex::Real k_f =
      1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 667:  c7h15-4 + o2 => c7h15o2-4
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[49] += qdot;
  }

  {
    // reaction 668:  c7h15o2-1 => c7h14ooh1-3
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[46] -= qdot;
  }

  {
    // reaction 669:  c7h14ooh1-3 => c7h15o2-1
    const amrex::Real k_f =
      2653000000 * exp((-0.11) * tc[0] - (4146.50532623089) * invT);
    const amrex::Real qf = k_f * (sc_qss[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[46] += qdot;
  }

  {
    // reaction 670:  c7h15o2-2 => c7h14ooh2-3
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] -= qdot;
  }

  {
    // reaction 671:  c7h14ooh2-3 => c7h15o2-2
    const amrex::Real k_f =
      22620000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
    const amrex::Real qf = k_f * (sc_qss[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] += qdot;
  }

  {
    // reaction 672:  c7h15o2-2 => c7h14ooh2-4
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] -= qdot;
  }

  {
    // reaction 673:  c7h14ooh2-4 => c7h15o2-2
    const amrex::Real k_f =
      2827000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] += qdot;
  }

  {
    // reaction 674:  c7h15o2-3 => c7h14ooh3-2
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
  }

  {
    // reaction 675:  c7h14ooh3-2 => c7h15o2-3
    const amrex::Real k_f =
      310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
    const amrex::Real qf = k_f * (sc_qss[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
  }

  {
    // reaction 676:  c7h15o2-3 => c7h14ooh3-4
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
  }

  {
    // reaction 677:  c7h14ooh3-4 => c7h15o2-3
    const amrex::Real k_f =
      310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
    const amrex::Real qf = k_f * (sc_qss[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
  }

  {
    // reaction 678:  c7h15o2-3 => c7h14ooh3-5
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
  }

  {
    // reaction 679:  c7h14ooh3-5 => c7h15o2-3
    const amrex::Real k_f =
      38840000000 * exp((-0.51) * tc[0] - (4065.99065970213) * invT);
    const amrex::Real qf = k_f * (sc_qss[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
  }

  {
    // reaction 680:  c7h15o2-4 => c7h14ooh4-2
    const amrex::Real k_f = 50000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] -= qdot;
  }

  {
    // reaction 681:  c7h14ooh4-2 => c7h15o2-4
    const amrex::Real k_f =
      5655000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] += qdot;
  }

  {
    // reaction 682:  c7h15o2-4 => c7h14ooh4-3
    const amrex::Real k_f = 400000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 683:  c7h14ooh4-3 => c7h15o2-4
    const amrex::Real k_f =
      45240000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
    const amrex::Real qf = k_f * (sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 684:  c7h14ooh2-3 => c7h14-2 + ho2
    const amrex::Real k_f =
      1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
    const amrex::Real qf = k_f * (sc_qss[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
  }

  {
    // reaction 685:  c7h14-2 + ho2 => c7h14ooh2-3
    const amrex::Real k_f = 100000 * exp(-(5802.08815672842) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
  }

  {
    // reaction 686:  c7h14ooh3-2 => c7h14-2 + ho2
    const amrex::Real k_f =
      1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
    const amrex::Real qf = k_f * (sc_qss[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
  }

  {
    // reaction 687:  c7h14-2 + ho2 => c7h14ooh3-2
    const amrex::Real k_f = 100000 * exp(-(5802.08815672842) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
  }

  {
    // reaction 688:  c7h14ooh3-4 => c7h14-3 + ho2
    const amrex::Real k_f =
      1.199e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc_qss[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
  }

  {
    // reaction 689:  c7h14-3 + ho2 => c7h14ooh3-4
    const amrex::Real k_f = 100000 * exp(-(5298.8714909237) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
  }

  {
    // reaction 690:  c7h14ooh4-3 => c7h14-3 + ho2
    const amrex::Real k_f =
      2.389e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 691:  c7h14-3 + ho2 => c7h14ooh4-3
    const amrex::Real k_f = 100000 * exp(-(5298.8714909237) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 692:  c7h14ooh1-3 => c7h14o1-3 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc_qss[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[52] += qdot;
  }

  {
    // reaction 693:  c7h14ooh2-4 => c7h14o2-4 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 694:  c7h14ooh4-2 => c7h14o2-4 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 695:  c7h14ooh2-4 => c5h10-1 + ch3cho + oh
    const amrex::Real k_f =
      5.364e+17 * exp((-1.4) * tc[0] - (13461.0458102763) * invT);
    const amrex::Real qf = k_f * (sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 696:  c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
    const amrex::Real k_f =
      2.47e+18 * exp((-1.55) * tc[0] - (13596.9143100435) * invT);
    const amrex::Real qf = k_f * (sc_qss[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[26] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 697:  c7h14ooh4-2 => c3h6 + nc3h7cho + oh
    const amrex::Real k_f =
      1.3e+18 * exp((-1.49) * tc[0] - (13486.2066435665) * invT);
    const amrex::Real qf = k_f * (sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[22] += qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 698:  c7h14ooh1-3o2 => c7h14ooh1-3 + o2
    const amrex::Real k_f =
      1.367e+23 * exp((-2.37) * tc[0] - (18941.0753008896) * invT);
    const amrex::Real qf = k_f * (sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[51] -= qdot;
  }

  {
    // reaction 699:  c7h14ooh1-3 + o2 => c7h14ooh1-3o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[51] += qdot;
  }

  {
    // reaction 700:  c7h14ooh2-4o2 => c7h14ooh2-4 + o2
    const amrex::Real k_f =
      1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc_qss[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
  }

  {
    // reaction 701:  c7h14ooh2-4 + o2 => c7h14ooh2-4o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
  }

  {
    // reaction 702:  c7h14ooh3-5o2 => c7h14ooh3-5 + o2
    const amrex::Real k_f =
      1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc_qss[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
  }

  {
    // reaction 703:  c7h14ooh3-5 + o2 => c7h14ooh3-5o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
  }

  {
    // reaction 704:  c7h14ooh4-2o2 => c7h14ooh4-2 + o2
    const amrex::Real k_f =
      6.969e+22 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc_qss[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
  }

  {
    // reaction 705:  c7h14ooh4-2 + o2 => c7h14ooh4-2o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
  }

  {
    // reaction 706:  c7h14ooh1-3o2 => nc7ket13 + oh
    const amrex::Real k_f = 25000000000 * exp(-(10768.836648221) * invT);
    const amrex::Real qf = k_f * (sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[51] -= qdot;
  }

  {
    // reaction 707:  nc7ket13 + oh => c7h14ooh1-3o2
    const amrex::Real k_f =
      0.003303 * exp((1.41) * tc[0] - (22664.8786278446) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[51] += qdot;
  }

  {
    // reaction 708:  c7h14ooh2-4o2 => nc7ket24 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc_qss[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
  }

  {
    // reaction 709:  nc7ket24 + oh => c7h14ooh2-4o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
  }

  {
    // reaction 710:  c7h14ooh3-5o2 => nc7ket35 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc_qss[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
  }

  {
    // reaction 711:  nc7ket35 + oh => c7h14ooh3-5o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
  }

  {
    // reaction 712:  c7h14ooh4-2o2 => nc7ket42 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc_qss[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
  }

  {
    // reaction 713:  nc7ket42 + oh => c7h14ooh4-2o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
  }

  {
    // reaction 714:  nc7ket13 => ch2cho + nc4h9cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 715:  nc7ket24 => ch3coch2 + nc3h7cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[27] += qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 716:  nc7ket35 => c2h5cho + c2h5coch2 + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[28] += qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 717:  nc7ket42 => ch3cho + nc3h7coch2 + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 718:  c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[30] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 719:  c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
    wdot[44] += qdot;
    wdot[52] -= qdot;
  }

  {
    // reaction 720:  c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[22] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 721:  c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[30] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 722:  c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[44] += qdot;
    wdot[52] -= qdot;
  }

  {
    // reaction 723:  c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[22] += qdot;
    wdot[53] -= qdot;
  }
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate_light(
  amrex::Real* wdot,
  amrex::Real* sc,
  amrex::Real* g_RT,
  amrex::Real* g_RT_qss,
  amrex::Real* sc_qss,
  amrex::Real* kf_qss,
  amrex::Real* qf_qss,
  amrex::Real* qr_qss,
  const amrex::Real* tc,
  const amrex::Real invT)
{
  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 55; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 55; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  gibbs(g_RT, tc);
  gibbs_qss(g_RT_qss, tc);

  // Fill sc_qss here
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);

  {
    // reaction 0:  ch3 + h (+M) <=> ch4 (+M)
    const amrex::Real k_f = 2138000000 * exp((-0.4) * tc[0]);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 3.31e+18 * exp(-4 * tc[0] - 1060.78073151635 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(1 * exp(-tc[1] * 1e+15) + exp(-40 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[8] - g_RT[9])) * (refC) * (sc[9]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 1:  c2h4 + h (+M) <=> c2h5 (+M)
    const amrex::Real k_f =
      1081000 * exp((0.45) * tc[0] - (916.860765096199) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 1.112e+22 * exp(-5 * tc[0] - 2238.30772949939 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.0105263157894737) + exp(-200 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[14] - g_RT[15])) * (refC) * (sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 2:  2 ch3 (+M) <=> c2h6 (+M)
    const amrex::Real k_f =
      92140000000 * exp((-1.17) * tc[0] - (319.945156118641) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 1.135e+24 * exp(-5.246 * tc[0] - 857.984415197047 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.595 * exp(-tc[1] * 0.000892857142857143) +
      0.405 * exp(-tc[1] * 0.014367816091954) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[8] * sc[8]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[8] - g_RT[13])) * (refC) * (sc[13]);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 3:  h + o2 (+M) <=> ho2 (+M)
    const amrex::Real k_f = 1475000 * exp((0.6) * tc[0]);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 35000 * exp(-0.41 * tc[0] - -561.589799038067 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.5 * exp(-tc[1] * 1e+30) + 0.5 * exp(-tc[1] * 1e-30) +
      exp(-1e+100 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[3] - g_RT[10])) * (refC) * (sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 4:  2 oh (+M) <=> h2o2 (+M)
    const amrex::Real k_f = 123600000 * exp((-0.37) * tc[0]);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 3.041e+18 * exp(-4.63 * tc[0] - 1031.09094823387 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.53 * exp(-tc[1] * 0.01) + 0.47 * exp(-tc[1] * 0.0005) +
      exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * ((sc[4] * sc[4]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[4] - g_RT[11])) * (refC) * (sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 5:  c2h3 + h (+M) <=> c2h4 (+M)
    const amrex::Real k_f =
      6100000 * exp((0.27) * tc[0] - (140.900666425322) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 9.8e+17 * exp(-3.86 * tc[0] - 1670.67933047167 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00480769230769231) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[17]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[14] + g_RT[17])) * (refC) * (sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 6:  c2h2 + h (+M) <=> c2h3 (+M)
    const amrex::Real k_f =
      311000 * exp((0.58) * tc[0] - (1302.82794776842) * invT);
    amrex::Real Corr = mixture + sc[1] + (4) * sc[5] + sc[6] + (2) * sc[7];
    const amrex::Real redP =
      Corr / k_f * 2.254e+28 * exp(-7.269 * tc[0] - 3309.65601099764 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.00148148148148148) + exp(-1e+15 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[16]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[16] - g_RT[17])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 7:  co + o (+M) <=> co2 (+M)
    const amrex::Real k_f = 18000 * exp(-(1199.66853127845) * invT);
    amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real redP = Corr / k_f * 1350000000000 *
                             exp(-2.788 * tc[0] - 2108.98104638758 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[7])) * (refC) * (sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 8:  ch3o (+M) <=> ch2o + h (+M)
    const amrex::Real k_f = 54500000000000 * exp(-(6793.42498836372) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 2.344e+19 * exp(-2.7 * tc[0] - 15398.4299736244 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc_qss[1]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] - g_RT[12] + g_RT_qss[1])) *
                           (refCinv) * (sc[0] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 9:  c2h4 (+M) <=> c2h2 + h2 (+M)
    const amrex::Real k_f = 18000000000000 * exp(-(38244.4666011587) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1500000000 * exp(0 * tc[0] - 27899.8416022111 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[14]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[1] + g_RT[14] - g_RT[16])) *
                           (refCinv) * (sc[1] * sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 10:  ch3co (+M) <=> ch3 + co (+M)
    const amrex::Real k_f = 3000000000000 * exp(-(8413.78265225491) * invT);
    amrex::Real Corr = mixture;
    const amrex::Real redP =
      Corr / k_f * 1200000000 * exp(0 * tc[0] - 6299.26622254348 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc_qss[2]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[6] - g_RT[8] + g_RT_qss[2])) *
                           (refCinv) * (sc[6] * sc[8]);
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 11:  hco + M => co + h + M
    const amrex::Real k_f =
      186000000000 * exp((-1) * tc[0] - (8554.68331868023) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc_qss[0]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[6] + g_RT_qss[0])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 12:  co + h + M => hco + M
    const amrex::Real k_f = 64.67 * exp(-(-222.421766285686) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[6] - g_RT_qss[0])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 13:  h2o + M => h + oh + M
    const amrex::Real k_f =
      1.837e+21 * exp((-3) * tc[0] - (61694.3632276586) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[4] + g_RT[5])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 14:  h + oh + M => h2o + M
    const amrex::Real k_f = 22500000000 * exp((-2) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[4] - g_RT[5])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 15:  ch2o + M => h + hco + M
    const amrex::Real k_f =
      6.283e+23 * exp((-3.57) * tc[0] - (46899.7932529999) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] + g_RT[12] - g_RT_qss[0])) *
                           (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 16:  h + hco + M => ch2o + M
    const amrex::Real k_f =
      2660000000000 * exp((-2.57) * tc[0] - (214.873516298615) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[12] + g_RT_qss[0])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 17:  oh + M => h + o + M
    const amrex::Real k_f =
      3.909e+16 * exp((-2) * tc[0] - (52988.714909237) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[4]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] - g_RT[2] + g_RT[4])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 18:  h + o + M => oh + M
    const amrex::Real k_f = 4720000 * exp((-1) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[2]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[2] - g_RT[4])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 19:  o2 + M => 2 o + M
    const amrex::Real k_f =
      647300000000000 * exp((-1.5) * tc[0] - (61140.8248952734) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[3]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-2.000000 * g_RT[2] + g_RT[3])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] += 2.000000 * qdot;
    wdot[3] -= qdot;
  }

  {
    // reaction 20:  2 o + M => o2 + M
    const amrex::Real k_f = 6170 * exp((-0.5) * tc[0]);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * ((sc[2] * sc[2]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[2] - g_RT[3])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= 2.000000 * qdot;
    wdot[3] += qdot;
  }

  {
    // reaction 21:  h2 + M => 2 h + M
    const amrex::Real k_f =
      45700000000000 * exp((-1.4) * tc[0] - (52535.8199100127) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * (sc[1]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-2.000000 * g_RT[0] + g_RT[1])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += 2.000000 * qdot;
    wdot[1] -= qdot;
  }

  {
    // reaction 22:  2 h + M => h2 + M
    const amrex::Real k_f =
      2423 * exp((-0.4) * tc[0] - (-1529.77866404635) * invT);
    const amrex::Real Corr =
      mixture + (1.5) * sc[1] + (11) * sc[5] + (0.9) * sc[6] + (2.8) * sc[7];
    const amrex::Real qf = Corr * k_f * ((sc[0] * sc[0]));
    const amrex::Real qr =
      Corr * k_f * exp(-(2.000000 * g_RT[0] - g_RT[1])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= 2.000000 * qdot;
    wdot[1] += qdot;
  }

  {
    // reaction 23:  ch2o + M => co + h2 + M
    const amrex::Real k_f =
      1.826e+26 * exp((-4.42) * tc[0] - (43840.2359249072) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[1] - g_RT[6] + g_RT[12])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 24:  co + h2 + M => ch2o + M
    const amrex::Real k_f =
      5.07e+15 * exp((-3.42) * tc[0] - (42446.3257606281) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] + g_RT[6] - g_RT[12])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 25:  c2h5o + M => ch2o + ch3 + M
    const amrex::Real k_f =
      1.35e+32 * exp((-6.96) * tc[0] - (11976.5566461523) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[8] - g_RT[12] + g_RT_qss[6])) *
                           (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 26:  ch2o + ch3 + M => c2h5o + M
    const amrex::Real k_f =
      6.442e+24 * exp((-6.99) * tc[0] - (8479.20081880953) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[8] * sc[12]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[8] + g_RT[12] - g_RT_qss[6])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 27:  ch3o2 + M => ch3 + o2 + M
    const amrex::Real k_f =
      4.343e+21 * exp((-3.42) * tc[0] - (15333.0118070698) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[31]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[3] - g_RT[8] + g_RT[31])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 28:  ch3 + o2 + M => ch3o2 + M
    const amrex::Real k_f = 54400000000000 * exp((-3.3) * tc[0]);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[8] - g_RT[31])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 29:  c2h5o + M => ch3cho + h + M
    const amrex::Real k_f =
      1.16e+29 * exp((-5.89) * tc[0] - (12716.2851448853) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc_qss[6]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-g_RT[0] - g_RT[20] + g_RT_qss[6])) *
                           (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 30:  ch3cho + h + M => c2h5o + M
    const amrex::Real k_f =
      3.063e+18 * exp((-4.78) * tc[0] - (3069.62166140879) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[20]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] + g_RT[20] - g_RT_qss[6])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 31:  c3h4-a + M => c3h3 + h + M
    const amrex::Real k_f = 114300000000 * exp(-(35225.1666063304) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[0] + g_RT[21] - g_RT[38])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 32:  c3h3 + h + M => c3h4-a + M
    const amrex::Real k_f =
      1798 * exp((-0.38) * tc[0] - (5339.12882418808) * invT);
    const amrex::Real Corr = mixture;
    const amrex::Real qf = Corr * k_f * (sc[0] * sc[38]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[0] - g_RT[21] + g_RT[38])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 33:  ch4 + h => ch3 + h2
    const amrex::Real k_f =
      0.01727 * exp((3) * tc[0] - (4138.45385957801) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 34:  ch3 + h2 => ch4 + h
    const amrex::Real k_f =
      0.000661 * exp((3) * tc[0] - (3896.90985999175) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 35:  ch4 + oh => ch3 + h2o
    const amrex::Real k_f =
      0.193 * exp((2.4) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 36:  ch3 + h2o => ch4 + oh
    const amrex::Real k_f =
      0.03199 * exp((2.4) * tc[0] - (8443.9756522032) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 37:  ch4 + o => ch3 + oh
    const amrex::Real k_f =
      3150000 * exp((0.5) * tc[0] - (5178.09949113057) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 38:  ch3 + oh => ch4 + o
    const amrex::Real k_f =
      52960 * exp((0.5) * tc[0] - (3882.31657668341) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 39:  c2h6 + ch3 => c2h5 + ch4
    const amrex::Real k_f =
      1.51e-13 * exp((6) * tc[0] - (3042.95117812114) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 40:  c2h5 + ch4 => c2h6 + ch3
    const amrex::Real k_f =
      9.649e-16 * exp((6.56) * tc[0] - (5142.87432452423) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 41:  hco + oh => co + h2o
    const amrex::Real k_f = 102000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 42:  co + h2o => hco + oh
    const amrex::Real k_f = 2896000000 * exp(-(52938.3932426565) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 43:  co + oh => co2 + h
    const amrex::Real k_f =
      0.14 * exp((1.95) * tc[0] - (-677.832848838957) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 44:  co2 + h => co + oh
    const amrex::Real k_f =
      15.68 * exp((1.95) * tc[0] - (10562.5178152411) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 45:  h + o2 => o + oh
    const amrex::Real k_f = 197000000 * exp(-(8323.20365241006) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 46:  o + oh => h + o2
    const amrex::Real k_f = 15550000 * exp(-(213.867082967006) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 47:  h2 + o => h + oh
    const amrex::Real k_f =
      0.0508 * exp((2.67) * tc[0] - (3166.2392612433) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[2] -= qdot;
    wdot[4] += qdot;
  }

  {
    // reaction 48:  h + oh => h2 + o
    const amrex::Real k_f =
      0.02231 * exp((2.67) * tc[0] - (2112.00034638241) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[2] += qdot;
    wdot[4] -= qdot;
  }

  {
    // reaction 49:  h2o + o => 2 oh
    const amrex::Real k_f =
      2.97 * exp((2.02) * tc[0] - (6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 50:  2 oh => h2o + o
    const amrex::Real k_f =
      0.3013 * exp((2.02) * tc[0] - (-1937.38416334817) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 51:  h2 + oh => h + h2o
    const amrex::Real k_f =
      216 * exp((1.51) * tc[0] - (1726.03316371019) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
  }

  {
    // reaction 52:  h + h2o => h2 + oh
    const amrex::Real k_f =
      935.2 * exp((1.51) * tc[0] - (9349.76565065169) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
  }

  {
    // reaction 53:  h2o2 + oh => h2o + ho2
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 54:  h2o + ho2 => h2o2 + oh
    const amrex::Real k_f =
      168500 * exp((0.33) * tc[0] - (15831.1963062165) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 55:  c2h4 + o => ch3 + hco
    const amrex::Real k_f =
      10.2 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 56:  ch3 + hco => c2h4 + o
    const amrex::Real k_f =
      285.1 * exp((1.05) * tc[0] - (15987.1934726159) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 57:  c2h6 + h => c2h5 + h2
    const amrex::Real k_f =
      0.000554 * exp((3.5) * tc[0] - (2600.12051221299) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 58:  c2h5 + h2 => c2h6 + h
    const amrex::Real k_f =
      1.355e-07 * exp((4.06) * tc[0] - (4456.9900090324) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 59:  c2h5 + o2 => c2h4 + ho2
    const amrex::Real k_f =
      1.22e+24 * exp((-5.76) * tc[0] - (5082.48832462767) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 60:  c2h4 + ho2 => c2h5 + o2
    const amrex::Real k_f =
      1.259e+24 * exp((-5.63) * tc[0] - (11221.7316474452) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 61:  c2h6 + oh => c2h5 + h2o
    const amrex::Real k_f =
      58 * exp((1.73) * tc[0] - (583.731332333475) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 62:  c2h5 + h2o => c2h6 + oh
    const amrex::Real k_f =
      0.06142 * exp((2.29) * tc[0] - (10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 63:  c2h6 + o => c2h5 + oh
    const amrex::Real k_f = 13 * exp((2.13) * tc[0] - (2611.6944955265) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 64:  c2h5 + oh => c2h6 + o
    const amrex::Real k_f =
      0.001397 * exp((2.69) * tc[0] - (3414.32507748502) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 65:  ch3 + ho2 => ch3o + oh
    const amrex::Real k_f = 11000000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 66:  ch3o + oh => ch3 + ho2
    const amrex::Real k_f =
      478000000 * exp((-0.35) * tc[0] - (12353.9691455059) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 67:  co + ho2 => co2 + oh
    const amrex::Real k_f = 30100000 * exp(-(11573.9833135086) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 68:  co2 + oh => co + ho2
    const amrex::Real k_f =
      6435000000 * exp((-0.33) * tc[0] - (42577.1620937373) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 69:  co + o2 => co2 + o
    const amrex::Real k_f = 16200000 * exp(-(24003.4349588851) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 70:  co2 + o => co + o2
    const amrex::Real k_f = 143300000 * exp(-(27133.4426201905) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[6] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 71:  h + hco => co + h2
    const amrex::Real k_f = 73400000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 72:  co + h2 => h + hco
    const amrex::Real k_f = 481300000 * exp(-(45289.4999224248) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 73:  hco + o => co + oh
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 74:  co + oh => hco + o
    const amrex::Real k_f = 86970000 * exp(-(44232.7449242349) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
  }

  {
    // reaction 75:  ch2o + oh => h2o + hco
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.93784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 76:  h2o + hco => ch2o + oh
    const amrex::Real k_f =
      1186 * exp((1.18) * tc[0] - (14784.5056413427) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 77:  ch2o + h => h2 + hco
    const amrex::Real k_f =
      933.4 * exp((1.5) * tc[0] - (1497.57279743485) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 78:  h2 + hco => ch2o + h
    const amrex::Real k_f =
      74.53 * exp((1.5) * tc[0] - (8881.7741514533) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 79:  ch2o + o => hco + oh
    const amrex::Real k_f =
      416000 * exp((0.57) * tc[0] - (1389.88443095264) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 80:  hco + oh => ch2o + o
    const amrex::Real k_f =
      14590 * exp((0.57) * tc[0] - (7719.3436534444) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 81:  ch3 + oh => ch2o + h2
    const amrex::Real k_f = 22500000 * exp(-(2163.83166296029) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[4] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 82:  ch2o + h2 => ch3 + oh
    const amrex::Real k_f = 675600000 * exp(-(38254.5309344748) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 83:  ch3 + o => ch2o + h
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 84:  ch2o + h => ch3 + o
    const amrex::Real k_f = 1055000000 * exp(-(35038.9764399826) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 85:  ch3 + o2 => ch3o + o
    const amrex::Real k_f =
      1995000000000 * exp((-1.57) * tc[0] - (14698.9588081559) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 86:  ch3o + o => ch3 + o2
    const amrex::Real k_f =
      3585000000000 * exp((-1.59) * tc[0] - (-820.746381927498) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 87:  ch2o + ch3 => ch4 + hco
    const amrex::Real k_f =
      3.636e-12 * exp((5.42) * tc[0] - (502.21023247311) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 88:  ch4 + hco => ch2o + ch3
    const amrex::Real k_f =
      7.584e-12 * exp((5.42) * tc[0] - (8126.94915274622) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 89:  ch3 + hco => ch4 + co
    const amrex::Real k_f = 121000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 90:  ch4 + co => ch3 + hco
    const amrex::Real k_f = 20730000000 * exp(-(45531.043922011) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 91:  ho2 + o => o2 + oh
    const amrex::Real k_f = 32500000;
    const amrex::Real qf = k_f * (sc[2] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[4] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 92:  o2 + oh => ho2 + o
    const amrex::Real k_f =
      785700000 * exp((-0.33) * tc[0] - (27873.1711189234) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 93:  hco + ho2 => ch2o + o2
    const amrex::Real k_f =
      29740 * exp((0.33) * tc[0] - (-1942.91954667202) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 94:  ch2o + o2 => hco + ho2
    const amrex::Real k_f = 20500000 * exp(-(19600.2891330938) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 95:  ch3o + o2 => ch2o + ho2
    const amrex::Real k_f = 55000 * exp(-(1219.79719791064) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 96:  ch2o + ho2 => ch3o + o2
    const amrex::Real k_f =
      1318 * exp((0.35) * tc[0] - (15795.9711396102) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 97:  ch3 + ho2 => ch4 + o2
    const amrex::Real k_f = 3600000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 98:  ch4 + o2 => ch3 + ho2
    const amrex::Real k_f =
      5177000000 * exp((-0.33) * tc[0] - (29166.4379500416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 99:  hco + o2 => co + ho2
    const amrex::Real k_f = 7580000 * exp(-(206.318832979935) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 100:  co + ho2 => hco + o2
    const amrex::Real k_f =
      902900 * exp((0.33) * tc[0] - (16570.9248049494) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 101:  h + ho2 => 2 oh
    const amrex::Real k_f = 70800000 * exp(-(150.964999741416) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += 2.000000 * qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 102:  2 oh => h + ho2
    const amrex::Real k_f =
      135200000 * exp((-0.33) * tc[0] - (19912.2834658928) * invT);
    const amrex::Real qf = k_f * ((sc[4] * sc[4]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= 2.000000 * qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 103:  h + ho2 => h2 + o2
    const amrex::Real k_f = 16600000 * exp(-(412.63766595987) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 104:  h2 + o2 => h + ho2
    const amrex::Real k_f =
      913800000 * exp((-0.33) * tc[0] - (29337.5316164152) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 105:  ho2 + oh => h2o + o2
    const amrex::Real k_f = 28900000 * exp(-(-251.60833290236) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 106:  h2o + o2 => ho2 + oh
    const amrex::Real k_f =
      6888000000 * exp((-0.33) * tc[0] - (36302.0502711525) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 107:  h2o2 + o2 => 2 ho2
    const amrex::Real k_f =
      594200000000 * exp((-0.66) * tc[0] - (26745.9657875209) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 108:  2 ho2 => h2o2 + o2
    const amrex::Real k_f = 420000000 * exp(-(6028.53565634054) * invT);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 109:  h + h2o2 => h2o + oh
    const amrex::Real k_f = 24100000 * exp(-(1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 110:  h2o + oh => h + h2o2
    const amrex::Real k_f = 7750000 * exp(-(37590.2849356126) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[5] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 111:  ch4 + ho2 => ch3 + h2o2
    const amrex::Real k_f = 342000 * exp(-(9707.04948337304) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 112:  ch3 + h2o2 => ch4 + ho2
    const amrex::Real k_f =
      336500 * exp((-0.33) * tc[0] - (1259.04809784341) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 113:  ch2o + ho2 => h2o2 + hco
    const amrex::Real k_f =
      5.82e-09 * exp((4.53) * tc[0] - (3299.59167768155) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 114:  h2o2 + hco => ch2o + ho2
    const amrex::Real k_f =
      1.194e-08 * exp((4.2) * tc[0] - (2476.32921242503) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 115:  c2h3 + c2h5 => 2 c2h4
    const amrex::Real k_f =
      576500000 * exp((-0.63) * tc[0] - (1253.00949785375) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += 2.000000 * qdot;
    wdot[15] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 116:  2 c2h4 => c2h3 + c2h5
    const amrex::Real k_f = 482000000 * exp(-(35995.0881050116) * invT);
    const amrex::Real qf = k_f * ((sc[14] * sc[14]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= 2.000000 * qdot;
    wdot[15] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 117:  c2h4 + h => c2h3 + h2
    const amrex::Real k_f =
      8.42e-09 * exp((4.62) * tc[0] - (1299.80864777359) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 118:  c2h3 + h2 => c2h4 + h
    const amrex::Real k_f =
      5.723e-07 * exp((3.79) * tc[0] - (1626.89948054666) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 119:  c2h4 + oh => c2h3 + h2o
    const amrex::Real k_f = 20500000 * exp(-(2994.13916153808) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 120:  c2h3 + h2o => c2h4 + oh
    const amrex::Real k_f =
      6033000000 * exp((-0.83) * tc[0] - (10949.9946479107) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 121:  c2h2 + o2 => hcco + oh
    const amrex::Real k_f =
      200 * exp((1.5) * tc[0] - (15146.8216407221) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 122:  hcco + oh => c2h2 + o2
    const amrex::Real k_f =
      0.2232 * exp((1.5) * tc[0] - (12781.7033114399) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 123:  c2h3 + o2 => c2h2 + ho2
    const amrex::Real k_f =
      2.12e-12 * exp((6) * tc[0] - (4772.50685849196) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 124:  c2h2 + ho2 => c2h3 + o2
    const amrex::Real k_f =
      1.114e-13 * exp((6.33) * tc[0] - (8841.51681818893) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 125:  h2o2 + o => ho2 + oh
    const amrex::Real k_f = 9.55 * exp((2) * tc[0] - (1997.77016324474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 126:  ho2 + oh => h2o2 + o
    const amrex::Real k_f =
      0.1632 * exp((2.33) * tc[0] - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 127:  c2h2 + o => h + hcco
    const amrex::Real k_f = 14.3 * exp((2) * tc[0] - (956.111665028967) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[16] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 128:  h + hcco => c2h2 + o
    const amrex::Real k_f =
      0.2021 * exp((2) * tc[0] - (6697.81382186082) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[16] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 129:  c2h2 + oh => ch2co + h
    const amrex::Real k_f =
      2.19e-10 * exp((4.5) * tc[0] - (-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[16] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 130:  ch2co + h => c2h2 + oh
    const amrex::Real k_f =
      2.161e-09 * exp((4.5) * tc[0] - (9893.23964972079) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[16] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 131:  ch2co + h => ch3 + co
    const amrex::Real k_f = 11000000 * exp(-(1710.93666373605) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 132:  ch3 + co => ch2co + h
    const amrex::Real k_f = 2400000 * exp(-(20229.3099653497) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[8] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 133:  ch2co + o => hcco + oh
    const amrex::Real k_f = 10000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 134:  hcco + oh => ch2co + o
    const amrex::Real k_f = 14320 * exp(-(-631.536915584923) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 135:  ch2co + oh => h2o + hcco
    const amrex::Real k_f = 10000000 * exp(-(1006.43333160944) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 136:  h2o + hcco => ch2co + oh
    const amrex::Real k_f = 141200 * exp(-(5029.65057471817) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 137:  ch2co + h => h2 + hcco
    const amrex::Real k_f = 200000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 138:  h2 + hcco => ch2co + h
    const amrex::Real k_f = 652200 * exp(-(422.701999275965) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 139:  hcco + oh => 2 hco
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 140:  h + hcco => ch2(s) + co
    const amrex::Real k_f = 110000000;
    const amrex::Real qf = k_f * (sc[0] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[6] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 141:  ch2(s) + co => h + hcco
    const amrex::Real k_f =
      2046000 * exp((0.89) * tc[0] - (14004.5198093453) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[6] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 142:  hcco + o => 2 co + h
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[6] += 2.000000 * qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 143:  c2h6 + o2 => c2h5 + ho2
    const amrex::Real k_f = 60300000 * exp(-(26101.8484552908) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 144:  c2h5 + ho2 => c2h6 + o2
    const amrex::Real k_f =
      267.9 * exp((0.89) * tc[0] - (-967.182431676671) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 145:  c2h6 + ho2 => c2h5 + h2o2
    const amrex::Real k_f = 13200000 * exp(-(10300.8451490226) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 146:  c2h5 + h2o2 => c2h6 + ho2
    const amrex::Real k_f =
      82980 * exp((0.24) * tc[0] - (3951.25725989866) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 147:  c2h3 + ch3 => c2h2 + ch4
    const amrex::Real k_f = 392000;
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 148:  c2h2 + ch4 => c2h3 + ch3
    const amrex::Real k_f = 29620000 * exp(-(33237.4607764017) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 149:  c2h5 + ch3 => c2h4 + ch4
    const amrex::Real k_f = 19500000 * exp((-0.5) * tc[0]);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 150:  c2h4 + ch4 => c2h5 + ch3
    const amrex::Real k_f =
      28950000000 * exp((-0.7) * tc[0] - (35310.7134395172) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 151:  c2h3 + h => c2h2 + h2
    const amrex::Real k_f = 20000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 152:  c2h2 + h2 => c2h3 + h
    const amrex::Real k_f = 13310000 * exp(-(34258.9906079853) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[16] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 153:  c2h5 + h => 2 ch3
    const amrex::Real k_f = 36100000;
    const amrex::Real qf = k_f * (sc[0] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += 2.000000 * qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 154:  2 ch3 => c2h5 + h
    const amrex::Real k_f =
      54460000000 * exp((-1.03) * tc[0] - (8544.61898536414) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= 2.000000 * qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 155:  c2h3 + o2 => ch2o + hco
    const amrex::Real k_f =
      1.7e+23 * exp((-5.31) * tc[0] - (3270.90832773068) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 156:  ch2o + hco => c2h3 + o2
    const amrex::Real k_f =
      1.657e+23 * exp((-5.31) * tc[0] - (46824.3107531292) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[12] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 157:  c2h6 => c2h5 + h
    const amrex::Real k_f =
      2.783e+21 * exp((-1.56) * tc[0] - (52233.8899105299) * invT);
    const amrex::Real qf = k_f * (sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 158:  c2h5 + h => c2h6
    const amrex::Real k_f = 36100000;
    const amrex::Real qf = k_f * (sc[0] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 159:  c2h4 + ch3 => c2h3 + ch4
    const amrex::Real k_f =
      6.62e-06 * exp((3.7) * tc[0] - (4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 160:  c2h3 + ch4 => c2h4 + ch3
    const amrex::Real k_f =
      1.44e-06 * exp((4.02) * tc[0] - (2753.60159528343) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 161:  ch3cho => ch3 + hco
    const amrex::Real k_f =
      2.614e+15 * exp((0.15) * tc[0] - (40534.1024305702) * invT);
    const amrex::Real qf = k_f * (sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 162:  ch3 + hco => ch3cho
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 163:  ch3cho + o2 => ch3co + ho2
    const amrex::Real k_f = 30100000 * exp(-(19700.9324662548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 164:  ch3co + ho2 => ch3cho + o2
    const amrex::Real k_f =
      85520 * exp((0.32) * tc[0] - (-976.240331661156) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 165:  ch3cho + oh => ch3co + h2o
    const amrex::Real k_f = 2 * exp((1.8) * tc[0] - (654.181665546136) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 166:  ch3co + h2o => ch3cho + oh
    const amrex::Real k_f =
      1.354 * exp((1.79) * tc[0] - (16530.667471685) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 167:  ch3cho + h => ch3co + h2
    const amrex::Real k_f = 13400000 * exp(-(1660.61499715557) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 168:  ch3co + h2 => ch3cho + h
    const amrex::Real k_f =
      2096000 * exp((-0.01) * tc[0] - (9908.33614969493) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 169:  ch3cho + o => ch3co + oh
    const amrex::Real k_f = 5940000 * exp(-(940.008731723216) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 170:  ch3co + oh => ch3cho + o
    const amrex::Real k_f =
      408000 * exp((-0.01) * tc[0] - (8137.01348606232) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 171:  ch3cho + ho2 => ch3co + h2o2
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 172:  ch3co + h2o2 => ch3cho + ho2
    const amrex::Real k_f =
      12100000 * exp((-0.34) * tc[0] - (6043.63215631468) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 173:  ch3 + ch3cho => ch3co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 174:  ch3co + ch4 => ch3 + ch3cho
    const amrex::Real k_f =
      10.66 * exp((1.77) * tc[0] - (11463.2756470315) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 175:  c3h5-a => c2h2 + ch3
    const amrex::Real k_f =
      2.397e+48 * exp((-9.9) * tc[0] - (41304.0239292514) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[16] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 176:  c2h2 + ch3 => c3h5-a
    const amrex::Real k_f =
      2.61e+40 * exp((-9.82) * tc[0] - (18593.8558014844) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[16] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 177:  c3h6 => c2h3 + ch3
    const amrex::Real k_f =
      2.73e+62 * exp((-13.28) * tc[0] - (61996.2932271415) * invT);
    const amrex::Real qf = k_f * (sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[17] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 178:  c2h3 + ch3 => c3h6
    const amrex::Real k_f =
      4.712e+53 * exp((-13.19) * tc[0] - (14865.0203078714) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[17] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 179:  c2h2 + ch3 => c3h4-a + h
    const amrex::Real k_f =
      67400000000000 * exp((-2.08) * tc[0] - (15896.6144727711) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= qdot;
    wdot[16] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 180:  c3h4-a + h => c2h2 + ch3
    const amrex::Real k_f =
      11490000000 * exp((-0.7) * tc[0] - (7945.79115305652) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += qdot;
    wdot[16] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 181:  c3h6 => c3h5-a + h
    const amrex::Real k_f =
      2.01e+61 * exp((-13.26) * tc[0] - (59631.1748978593) * invT);
    const amrex::Real qf = k_f * (sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 182:  c3h5-a + h => c3h6
    const amrex::Real k_f =
      4.887e+50 * exp((-12.25) * tc[0] - (14130.3239757965) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 183:  c3h6 + o => ch2co + ch3 + h
    const amrex::Real k_f =
      25 * exp((1.76) * tc[0] - (38.2444666011587) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[18] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 184:  ch2co + ch3 + h => c3h6 + o
    const amrex::Real k_f = 1e-12;
    const amrex::Real qf = k_f * (sc[0] * sc[8] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[18] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 185:  c3h6 + o => c2h5 + hco
    const amrex::Real k_f =
      15.8 * exp((1.76) * tc[0] - (-611.911465618539) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 186:  c2h5 + hco => c3h6 + o
    const amrex::Real k_f =
      0.1402 * exp((1.88) * tc[0] - (13340.2738104831) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[15] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 187:  c3h6 + ho2 => c3h5-a + h2o2
    const amrex::Real k_f = 150000 * exp(-(7140.64448776897) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 188:  c3h5-a + h2o2 => c3h6 + ho2
    const amrex::Real k_f =
      0.5867 * exp((1.33) * tc[0] - (4910.89144158826) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 189:  c3h6 + oh => c3h5-a + h2o
    const amrex::Real k_f =
      3.12 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 190:  c3h5-a + h2o => c3h6 + oh
    const amrex::Real k_f =
      6.194 * exp((2.01) * tc[0] - (16042.5473058545) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 191:  c4h6 => 2 c2h3
    const amrex::Real k_f =
      4.027e+19 * exp((-1) * tc[0] - (49390.7157487332) * invT);
    const amrex::Real qf = k_f * (sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += 2.000000 * qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 192:  2 c2h3 => c4h6
    const amrex::Real k_f = 12600000;
    const amrex::Real qf = k_f * ((sc[17] * sc[17]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= 2.000000 * qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 193:  c4h6 + oh => c2h5 + ch2co
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[15] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 194:  c2h5 + ch2co => c4h6 + oh
    const amrex::Real k_f = 3730000 * exp(-(15106.5643074577) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[15] -= qdot;
    wdot[18] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 195:  c4h6 + oh => c3h5-a + ch2o
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[23] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 196:  c3h5-a + ch2o => c4h6 + oh
    const amrex::Real k_f = 3.501 * exp(-(35758.5762720834) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[12] -= qdot;
    wdot[23] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 197:  c4h6 + oh => c2h3 + ch3cho
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[17] += qdot;
    wdot[20] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 198:  c2h3 + ch3cho => c4h6 + oh
    const amrex::Real k_f = 543700 * exp(-(9334.66915067755) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[17] -= qdot;
    wdot[20] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 199:  c4h6 + o => c2h4 + ch2co
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 200:  c2h4 + ch2co => c4h6 + o
    const amrex::Real k_f = 637700 * exp(-(47473.4602520173) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[14] -= qdot;
    wdot[18] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 201:  c4h6 + o => c3h4-a + ch2o
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[2] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[21] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 202:  c3h4-a + ch2o => c4h6 + o
    const amrex::Real k_f = 1075000 * exp(-(39779.2774318631) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[21] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 203:  c2h4 + o2 => c2h3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(29287.2099498347) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 204:  c2h3 + ho2 => c2h4 + o2
    const amrex::Real k_f =
      49390000 * exp((-0.5) * tc[0] - (688.400398820856) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 205:  nc3h7 => c2h4 + ch3
    const amrex::Real k_f =
      228400000000000 * exp((-0.55) * tc[0] - (14291.353308854) * invT);
    const amrex::Real qf = k_f * (sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 206:  c2h4 + ch3 => nc3h7
    const amrex::Real k_f = 410000 * exp(-(3625.1728604572) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 207:  nc3h7 => c3h6 + h
    const amrex::Real k_f =
      2.667e+15 * exp((-0.64) * tc[0] - (18528.4376349298) * invT);
    const amrex::Real qf = k_f * (sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 208:  c3h6 + h => nc3h7
    const amrex::Real k_f = 10000000 * exp(-(1258.0416645118) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 209:  nc3h7 + o2 => c3h6 + ho2
    const amrex::Real k_f = 300000 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 210:  c3h6 + ho2 => nc3h7 + o2
    const amrex::Real k_f = 200000 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[22] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 211:  c3h6 + o => c3h5-a + oh
    const amrex::Real k_f =
      524000 * exp((0.7) * tc[0] - (2960.92686159497) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 212:  c3h5-a + oh => c3h6 + o
    const amrex::Real k_f =
      105500 * exp((0.71) * tc[0] - (10476.9709820543) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 213:  c3h6 + h => c3h5-a + h2
    const amrex::Real k_f =
      0.173 * exp((2.5) * tc[0] - (1254.01593118536) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 214:  c3h5-a + h2 => c3h6 + h
    const amrex::Real k_f =
      0.07933 * exp((2.51) * tc[0] - (9822.78931650813) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 215:  c3h6 + h => c2h4 + ch3
    const amrex::Real k_f =
      4.83e+27 * exp((-5.81) * tc[0] - (9309.50831738731) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += qdot;
    wdot[14] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 216:  c2h4 + ch3 => c3h6 + h
    const amrex::Real k_f =
      2.313e+27 * exp((-5.9) * tc[0] - (15911.7109727452) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= qdot;
    wdot[14] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 217:  c5h9 => c2h4 + c3h5-a
    const amrex::Real k_f = 25000000000000 * exp(-(22644.7499612124) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[29] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 218:  c5h9 => c4h6 + ch3
    const amrex::Real k_f =
      1.339e+15 * exp((-0.52) * tc[0] - (19283.2626336369) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[23] += qdot;
    wdot[29] -= qdot;
  }

  {
    // reaction 219:  c4h6 + ch3 => c5h9
    const amrex::Real k_f = 175000 * exp(-(3824.44666011587) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[23] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 220:  c4h7 => c4h6 + h
    const amrex::Real k_f = 120000000000000 * exp(-(24808.5816241727) * invT);
    const amrex::Real qf = k_f * (sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 221:  c4h6 + h => c4h7
    const amrex::Real k_f = 40000000 * exp(-(654.181665546136) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 222:  c4h7 => c2h3 + c2h4
    const amrex::Real k_f = 100000000000 * exp(-(18619.0166347746) * invT);
    const amrex::Real qf = k_f * (sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 223:  c2h3 + c2h4 => c4h7
    const amrex::Real k_f = 50000 * exp(-(3522.51666063304) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 224:  c4h6 + c4h8-1 => 2 c4h7
    const amrex::Real k_f = 2350000 * exp(-(23510.2826263965) * invT);
    const amrex::Real qf = k_f * (sc[23] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[23] -= qdot;
    wdot[25] += 2.000000 * qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 225:  2 c4h7 => c4h6 + c4h8-1
    const amrex::Real k_f = 1600000;
    const amrex::Real qf = k_f * ((sc[25] * sc[25]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[23] += qdot;
    wdot[25] -= 2.000000 * qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 226:  c4h7 + ch3 => c4h6 + ch4
    const amrex::Real k_f = 8000000;
    const amrex::Real qf = k_f * (sc[8] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 227:  c4h6 + ch4 => c4h7 + ch3
    const amrex::Real k_f = 70500000 * exp(-(28824.2506172943) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 228:  c3h5-a + c4h7 => c3h6 + c4h6
    const amrex::Real k_f = 6310000;
    const amrex::Real qf = k_f * (sc[25] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 229:  c3h6 + c4h6 => c3h5-a + c4h7
    const amrex::Real k_f = 10000 * exp(-(25160.833290236) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 230:  c4h7 + o2 => c4h6 + ho2
    const amrex::Real k_f = 1000;
    const amrex::Real qf = k_f * (sc[3] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 231:  c4h6 + ho2 => c4h7 + o2
    const amrex::Real k_f = 100000 * exp(-(8554.68331868023) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 232:  c4h7 + h => c4h6 + h2
    const amrex::Real k_f = 31600000;
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 233:  c4h6 + h2 => c4h7 + h
    const amrex::Real k_f = 10660000 * exp(-(28587.7387843661) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 234:  c2h5 + c4h7 => c2h6 + c4h6
    const amrex::Real k_f = 3980000;
    const amrex::Real qf = k_f * (sc[15] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 235:  c2h6 + c4h6 => c2h5 + c4h7
    const amrex::Real k_f = 3211000 * exp(-(25080.3186237072) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 236:  c2h5 + c4h7 => c2h4 + c4h8-1
    const amrex::Real k_f =
      9.24 * exp((1.5) * tc[0] - (-484.09443250414) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 237:  c2h4 + c4h8-1 => c2h5 + c4h7
    const amrex::Real k_f =
      0.0007807 * exp((2.91) * tc[0] - (25643.9212894085) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 238:  c2h3 + c4h7 => c2h4 + c4h6
    const amrex::Real k_f = 3980000;
    const amrex::Real qf = k_f * (sc[17] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[23] += qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 239:  c2h4 + c4h6 => c2h3 + c4h7
    const amrex::Real k_f = 11570000 * exp(-(29040.6337835904) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[23] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 240:  c4h8-1 => c3h5-a + ch3
    const amrex::Real k_f = 5e+15 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[26] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 241:  c3h5-a + ch3 => c4h8-1
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[8] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[26] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 242:  c4h8-1 => c2h3 + c2h5
    const amrex::Real k_f =
      1e+19 * exp((-1) * tc[0] - (48696.2767499227) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[17] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 243:  c2h3 + c2h5 => c4h8-1
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[15] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[17] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 244:  c4h8-1 => c4h7 + h
    const amrex::Real k_f =
      4.107e+18 * exp((-1) * tc[0] - (48988.1424160895) * invT);
    const amrex::Real qf = k_f * (sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 245:  c4h7 + h => c4h8-1
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[0] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 246:  c4h8-1 + ch3 => c4h7 + ch4
    const amrex::Real k_f = 100000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 247:  c4h7 + ch4 => c4h8-1 + ch3
    const amrex::Real k_f = 600000 * exp(-(8987.44965127229) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 248:  c4h8-1 + h => c4h7 + h2
    const amrex::Real k_f = 50000000 * exp(-(1962.54499663841) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 249:  c4h7 + h2 => c4h8-1 + h
    const amrex::Real k_f = 40000000 * exp(-(12681.0599782789) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 250:  c4h8-1 + oh => c4h7 + h2o
    const amrex::Real k_f = 22500000 * exp(-(1115.63134808906) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 251:  c4h7 + h2o => c4h8-1 + oh
    const amrex::Real k_f = 4772000 * exp(-(13320.1451438509) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 252:  c3h5-a + c4h8-1 => c3h6 + c4h7
    const amrex::Real k_f = 79000 * exp(-(6239.88665597852) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 253:  c3h6 + c4h7 => c3h5-a + c4h8-1
    const amrex::Real k_f = 100000 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 254:  c4h8-1 + ho2 => c4h7 + h2o2
    const amrex::Real k_f = 1400000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 255:  c4h7 + h2o2 => c4h8-1 + ho2
    const amrex::Real k_f = 316000 * exp(-(6541.81665546136) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 256:  c4h8-1 + o2 => c4h7 + ho2
    const amrex::Real k_f = 27000000 * exp(-(16706.7933047167) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[25] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 257:  c4h7 + ho2 => c4h8-1 + o2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[10] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[25] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 258:  pc4h9 => c2h4 + c2h5
    const amrex::Real k_f =
      7.497e+17 * exp((-1.41) * tc[0] - (14885.1489745036) * invT);
    const amrex::Real qf = k_f * (sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 259:  c2h4 + c2h5 => pc4h9
    const amrex::Real k_f = 330000 * exp(-(3623.15999379398) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 260:  pc4h9 => c4h8-1 + h
    const amrex::Real k_f =
      1.159e+17 * exp((-1.17) * tc[0] - (19202.7479671081) * invT);
    const amrex::Real qf = k_f * (sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 261:  c4h8-1 + h => pc4h9
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 262:  o2 + pc4h9 => c4h8-1 + ho2
    const amrex::Real k_f = 3e-25 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 263:  c4h8-1 + ho2 => o2 + pc4h9
    const amrex::Real k_f = 2e-25 * exp(-(8806.29165158259) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 264:  ch3coch2 => ch2co + ch3
    const amrex::Real k_f = 100000000000000 * exp(-(15599.7166399463) * invT);
    const amrex::Real qf = k_f * (sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[18] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 265:  ch2co + ch3 => ch3coch2
    const amrex::Real k_f = 100000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[18] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 266:  c2h5co => c2h5 + co
    const amrex::Real k_f =
      1.834e+15 * exp((-0.73) * tc[0] - (6496.52715553893) * invT);
    const amrex::Real qf = k_f * (sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 267:  c2h5 + co => c2h5co
    const amrex::Real k_f = 151000 * exp(-(2420.4721625207) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 268:  c2h5cho + h => c2h5co + h2
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 269:  c2h5co + h2 => c2h5cho + h
    const amrex::Real k_f = 5854000 * exp(-(10361.2311489192) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 270:  c2h5cho + o => c2h5co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 271:  c2h5co + oh => c2h5cho + o
    const amrex::Real k_f = 321400 * exp(-(8091.72398613989) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 272:  c2h5cho + oh => c2h5co + h2o
    const amrex::Real k_f =
      26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 273:  c2h5co + h2o => c2h5cho + oh
    const amrex::Real k_f =
      17050 * exp((0.76) * tc[0] - (15700.3599731073) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 274:  c2h5cho + ch3 => c2h5co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 275:  c2h5co + ch4 => c2h5cho + ch3
    const amrex::Real k_f =
      9.972 * exp((1.78) * tc[0] - (11463.2756470315) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 276:  c2h5cho + ho2 => c2h5co + h2o2
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 277:  c2h5co + h2o2 => c2h5cho + ho2
    const amrex::Real k_f =
      10530000 * exp((-0.33) * tc[0] - (6884.00398820857) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 278:  c2h5 + c2h5cho => c2h5co + c2h6
    const amrex::Real k_f = 1000000 * exp(-(4025.73332643776) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 279:  c2h5co + c2h6 => c2h5 + c2h5cho
    const amrex::Real k_f =
      598400000 * exp((-0.57) * tc[0] - (10416.5849821577) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 280:  c2h5cho => c2h5 + hco
    const amrex::Real k_f =
      9.85e+18 * exp((-0.73) * tc[0] - (41117.8337629036) * invT);
    const amrex::Real qf = k_f * (sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 281:  c2h5 + hco => c2h5cho
    const amrex::Real k_f = 18100000;
    const amrex::Real qf = k_f * (sc[15] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 282:  c2h5cho + o2 => c2h5co + ho2
    const amrex::Real k_f = 10050000 * exp(-(20480.9182982521) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 283:  c2h5co + ho2 => c2h5cho + o2
    const amrex::Real k_f =
      26720 * exp((0.33) * tc[0] - (-199.273799658669) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 284:  c2h3 + c2h5cho => c2h4 + c2h5co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 285:  c2h4 + c2h5co => c2h3 + c2h5cho
    const amrex::Real k_f =
      3661 * exp((0.83) * tc[0] - (12167.7789791581) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 286:  c2h5cho + c3h5-a => c2h5co + c3h6
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[28] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 287:  c2h5co + c3h6 => c2h5cho + c3h5-a
    const amrex::Real k_f = 10000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[28] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 288:  c5h10-1 => c2h5 + c3h5-a
    const amrex::Real k_f =
      9.173e+20 * exp((-1.63) * tc[0] - (37233.0011028912) * invT);
    const amrex::Real qf = k_f * (sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[30] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 289:  c2h5 + c3h5-a => c5h10-1
    const amrex::Real k_f = 4000000 * exp(-(-299.917132819613) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[30] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 290:  c5h10-1 + h => c5h9 + h2
    const amrex::Real k_f = 28000000 * exp(-(2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 291:  c5h9 + h2 => c5h10-1 + h
    const amrex::Real k_f = 1000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 292:  c5h10-1 + o => c5h9 + oh
    const amrex::Real k_f =
      0.254 * exp((2.56) * tc[0] - (-568.634832359333) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 293:  c5h9 + oh => c5h10-1 + o
    const amrex::Real k_f = 700000 * exp(-(15046.1783075611) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 294:  c5h10-1 + o => hco + pc4h9
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 295:  c5h10-1 + o => ch3co + nc3h7
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[2] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[24] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 296:  c5h10-1 + oh => c5h9 + h2o
    const amrex::Real k_f =
      5.12 * exp((2) * tc[0] - (-149.958566409806) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 297:  c5h9 + h2o => c5h10-1 + oh
    const amrex::Real k_f =
      20.6 * exp((2.16) * tc[0] - (17597.486803191) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 298:  c5h10-1 + oh => ch2o + pc4h9
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 299:  c5h10-1 + oh => ch3cho + nc3h7
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[4] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[20] += qdot;
    wdot[24] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 300:  c5h10-1 + ch3 => c5h9 + ch4
    const amrex::Real k_f = 100000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[29] += qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 301:  c5h9 + ch4 => c5h10-1 + ch3
    const amrex::Real k_f = 600000 * exp(-(9007.57831790448) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 302:  h + h2o2 => h2 + ho2
    const amrex::Real k_f = 48200000 * exp(-(4000.57249314752) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 303:  h2 + ho2 => h + h2o2
    const amrex::Real k_f =
      1875000 * exp((0.33) * tc[0] - (12208.0363124225) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 304:  hco + o => co2 + h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 305:  co2 + h => hco + o
    const amrex::Real k_f = 9677000000 * exp(-(55454.4765716801) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[7] -= qdot;
  }

  {
    // reaction 306:  ch3co + h => ch2co + h2
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[0] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 307:  ch2co + h2 => ch3co + h
    const amrex::Real k_f =
      562600000000 * exp((-1.13) * tc[0] - (32054.9016117606) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 308:  ch3co + o => ch2co + oh
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 309:  ch2co + oh => ch3co + o
    const amrex::Real k_f =
      5951000000000 * exp((-1.13) * tc[0] - (60738.2515626297) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 310:  ch3 + ch3co => ch2co + ch4
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 311:  ch2co + ch4 => ch3 + ch3co
    const amrex::Real k_f =
      819700000000 * exp((-0.67) * tc[0] - (40171.7864311908) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 312:  c2h4 + o => ch2cho + h
    const amrex::Real k_f =
      3.39 * exp((1.88) * tc[0] - (90.0757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 313:  ch2cho + h => c2h4 + o
    const amrex::Real k_f =
      9.481 * exp((1.79) * tc[0] - (8076.62748616575) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 314:  c2h5 + o => ch3cho + h
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[2] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[2] -= qdot;
    wdot[15] -= qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 315:  ch3cho + h => c2h5 + o
    const amrex::Real k_f =
      550500000 * exp((0.11) * tc[0] - (37434.2877692131) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[2] += qdot;
    wdot[15] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 316:  c2h3 + c2h4 => c4h6 + h
    const amrex::Real k_f = 500000 * exp(-(3673.48166037445) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[14] -= qdot;
    wdot[17] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 317:  c4h6 + h => c2h3 + c2h4
    const amrex::Real k_f = 10000000 * exp(-(2365.11832928218) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[14] += qdot;
    wdot[17] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 318:  c2h5o + o2 => ch3cho + ho2
    const amrex::Real k_f = 42800 * exp(-(552.028682387778) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 319:  ch3cho + ho2 => c2h5o + o2
    const amrex::Real k_f =
      387.2 * exp((0.44) * tc[0] - (16042.5473058545) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 320:  h2o2 + o2 => 2 ho2
    const amrex::Real k_f =
      183900000 * exp((-0.66) * tc[0] - (19897.1869659186) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += 2.000000 * qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 321:  2 ho2 => h2o2 + o2
    const amrex::Real k_f = 130000 * exp(-(-819.739948595888) * invT);
    const amrex::Real qf = k_f * ((sc[10] * sc[10]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= 2.000000 * qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 322:  c2h3 + o2 => ch2cho + o
    const amrex::Real k_f =
      350000000 * exp((-0.61) * tc[0] - (2646.91966213283) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 323:  ch2cho + o => c2h3 + o2
    const amrex::Real k_f =
      2589000 * exp((0.12) * tc[0] - (3250.27644443268) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 324:  ch3o2h => ch3o + oh
    const amrex::Real k_f = 631000000000000 * exp(-(21286.0649635396) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 325:  ch3o + oh => ch3o2h
    const amrex::Real k_f =
      116600 * exp((0.6) * tc[0] - (-891.196715140159) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[1]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 326:  c3h2 + o2 => co + h + hcco
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 327:  ch2o + ch3o2 => ch3o2h + hco
    const amrex::Real k_f = 1990000 * exp(-(5867.50632328303) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 328:  ch3o2h + hco => ch2o + ch3o2
    const amrex::Real k_f =
      8504000 * exp((-0.5) * tc[0] - (3527.04561062528) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 329:  c2h4 + ch3o2 => c2h3 + ch3o2h
    const amrex::Real k_f = 2230000 * exp(-(8650.29448518313) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 330:  c2h3 + ch3o2h => c2h4 + ch3o2
    const amrex::Real k_f =
      8112000000 * exp((-1.33) * tc[0] - (-749.289615383228) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 331:  ch3o2 + ch4 => ch3 + ch3o2h
    const amrex::Real k_f = 181000 * exp(-(9299.44398407122) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 332:  ch3 + ch3o2h => ch3o2 + ch4
    const amrex::Real k_f =
      370800 * exp((-0.5) * tc[0] - (-667.768515522863) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 333:  c2h5 + ho2 => c2h5o + oh
    const amrex::Real k_f = 32000000;
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 334:  c2h5o + oh => c2h5 + ho2
    const amrex::Real k_f =
      3075000000 * exp((-0.32) * tc[0] - (13833.4261429717) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 335:  ch3 + ch3o2 => 2 ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 336:  c2h5 + ch3o2 => c2h5o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 337:  ch3o2 + ho2 => ch3o2h + o2
    const amrex::Real k_f = 17500 * exp(-(-1648.03458051046) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 338:  ch3o2h + o2 => ch3o2 + ho2
    const amrex::Real k_f =
      51560000 * exp((-0.83) * tc[0] - (17552.1973032686) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 339:  h2o2 + oh => h2o + ho2
    const amrex::Real k_f = 580000000 * exp(-(4810.75132509312) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] += qdot;
    wdot[11] -= qdot;
  }

  {
    // reaction 340:  h2o + ho2 => h2o2 + oh
    const amrex::Real k_f =
      97710000 * exp((0.33) * tc[0] - (20641.9476313096) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 341:  2 ch3o2 => 2 ch3o + o2
    const amrex::Real k_f =
      14000000000 * exp((-1.61) * tc[0] - (935.982998396779) * invT);
    const amrex::Real qf = k_f * ((sc[31] * sc[31]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[31] -= 2.000000 * qdot;
  }

  {
    // reaction 342:  c2h6 + ch3o2 => c2h5 + ch3o2h
    const amrex::Real k_f = 13200000 * exp(-(10300.8451490226) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 343:  c2h5 + ch3o2h => c2h6 + ch3o2
    const amrex::Real k_f =
      172800 * exp((0.06) * tc[0] - (2431.54292916841) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 344:  ch3cho + ch3o2 => ch3co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[20] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 345:  ch3co + ch3o2h => ch3cho + ch3o2
    const amrex::Real k_f =
      25190000 * exp((-0.51) * tc[0] - (4524.42104225023) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[20] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 346:  c2h3co => c2h3 + co
    const amrex::Real k_f =
      304300000000000 * exp((-0.46) * tc[0] - (15353.140473702) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[17] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 347:  c2h3 + co => c2h3co
    const amrex::Real k_f = 151000 * exp(-(2420.4721625207) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[17] -= qdot;
    wdot[33] += qdot;
  }

  {
    // reaction 348:  c2h3cho + oh => c2h3co + h2o
    const amrex::Real k_f =
      9.24 * exp((1.5) * tc[0] - (-484.09443250414) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 349:  c2h3co + h2o => c2h3cho + oh
    const amrex::Real k_f =
      21.47 * exp((1.48) * tc[0] - (17869.2238027256) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 350:  c2h3cho + h => c2h3co + h2
    const amrex::Real k_f = 13400000 * exp(-(1660.61499715557) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 351:  c2h3co + h2 => c2h3cho + h
    const amrex::Real k_f =
      7191000 * exp((-0.02) * tc[0] - (12389.1943121122) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 352:  c2h3cho + o => c2h3co + oh
    const amrex::Real k_f = 5940000 * exp(-(940.008731723216) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 353:  c2h3co + oh => c2h3cho + o
    const amrex::Real k_f =
      1400000 * exp((-0.02) * tc[0] - (10612.8394818215) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 354:  c2h3cho + ho2 => c2h3co + h2o2
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 355:  c2h3co + h2o2 => c2h3cho + ho2
    const amrex::Real k_f =
      41520000 * exp((-0.35) * tc[0] - (8524.49031873195) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 356:  c2h3cho + ch3 => c2h3co + ch4
    const amrex::Real k_f =
      2.608 * exp((1.78) * tc[0] - (2974.5137115717) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 357:  c2h3co + ch4 => c2h3cho + ch3
    const amrex::Real k_f =
      36.56 * exp((1.76) * tc[0] - (13944.1338094488) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 358:  c2h3cho + ch3o2 => c2h3co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[33] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 359:  c2h3co + ch3o2h => c2h3cho + ch3o2
    const amrex::Real k_f =
      86450000 * exp((-0.53) * tc[0] - (7004.7759880017) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[33] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 360:  c3h5o => c2h3cho + h
    const amrex::Real k_f = 100000000000000 * exp(-(14643.6049749173) * invT);
    const amrex::Real qf = k_f * (sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 361:  c2h3cho + h => c3h5o
    const amrex::Real k_f =
      771400 * exp((0.48) * tc[0] - (8932.09581803377) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 362:  c3h5o => c2h3 + ch2o
    const amrex::Real k_f =
      2028000000000 * exp((0.09) * tc[0] - (11855.7846463592) * invT);
    const amrex::Real qf = k_f * (sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 363:  c2h3 + ch2o => c3h5o
    const amrex::Real k_f = 150000 * exp(-(5334.09665753003) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] -= qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 364:  c3h5o + o2 => c2h3cho + ho2
    const amrex::Real k_f = 1000000 * exp(-(3019.29999482832) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 365:  c2h3cho + ho2 => c3h5o + o2
    const amrex::Real k_f = 128800 * exp(-(16102.933305751) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 366:  c3h5-a + ho2 => c3h5o + oh
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 367:  c3h5o + oh => c3h5-a + ho2
    const amrex::Real k_f =
      20410000 * exp((-0.16) * tc[0] - (6169.43632276586) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 368:  c3h5-a + ch3o2 => c3h5o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 369:  c3h6 + ch3o2 => c3h5-a + ch3o2h
    const amrex::Real k_f = 324000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 370:  c3h5-a + ch3o2h => c3h6 + ch3o2
    const amrex::Real k_f = 20000 * exp(-(7548.2499870708) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 371:  ch3 + oh => ch2(s) + h2o
    const amrex::Real k_f = 26500000 * exp(-(1100.03163144912) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 372:  ch2(s) + h2o => ch3 + oh
    const amrex::Real k_f =
      32360 * exp((0.89) * tc[0] - (609.395382289516) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 373:  c4h7o => c2h3 + ch3cho
    const amrex::Real k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] += qdot;
    wdot[20] += qdot;
  }

  {
    // reaction 374:  c2h3 + ch3cho => c4h7o
    const amrex::Real k_f = 10000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[17] -= qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 375:  c4h7o => c2h3cho + ch3
    const amrex::Real k_f = 794000000000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc_qss[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 376:  c2h3cho + ch3 => c4h7o
    const amrex::Real k_f = 10000 * exp(-(10064.3333160944) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 377:  c4h7 + ho2 => c4h7o + oh
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 378:  c4h7o + oh => c4h7 + ho2
    const amrex::Real k_f =
      100800 * exp((0.26) * tc[0] - (8499.32948544172) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 379:  c4h7 + ch3o2 => c4h7o + ch3o
    const amrex::Real k_f = 7000000 * exp(-(-503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 380:  c4h8-1 + oh => ch2o + nc3h7
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[12] += qdot;
    wdot[24] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 381:  ch2o + nc3h7 => c4h8-1 + oh
    const amrex::Real k_f = 1620000 * exp(-(6657.55648859644) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[12] -= qdot;
    wdot[24] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 382:  c4h8-1 + o => c3h6 + ch2o
    const amrex::Real k_f =
      0.723 * exp((2.34) * tc[0] - (-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[12] += qdot;
    wdot[22] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 383:  c3h6 + ch2o => c4h8-1 + o
    const amrex::Real k_f =
      0.2 * exp((2.34) * tc[0] - (40398.2339308029) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[12] -= qdot;
    wdot[22] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 384:  c4h8-1 + o => c2h4 + ch3cho
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 385:  c2h4 + ch3cho => c4h8-1 + o
    const amrex::Real k_f = 2070000 * exp(-(42823.7382599816) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[14] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 386:  c4h8-1 + o => c2h5 + ch3co
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[15] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 387:  c2h5 + ch3co => c4h8-1 + o
    const amrex::Real k_f = 2350000 * exp(-(19197.7158004501) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[15] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 388:  c4h8-1 + oh => c2h5 + ch3cho
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[15] += qdot;
    wdot[20] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 389:  c2h5 + ch3cho => c4h8-1 + oh
    const amrex::Real k_f = 9330000 * exp(-(10029.1081494881) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[15] -= qdot;
    wdot[20] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 390:  c4h8-1 + oh => c2h6 + ch3co
    const amrex::Real k_f = 500000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[13] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 391:  c2h6 + ch3co => c4h8-1 + oh
    const amrex::Real k_f = 9830000 * exp(-(16319.3164720471) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[2]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[13] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 392:  c4h8-1 + o => c2h5co + ch3
    const amrex::Real k_f = 13000000 * exp(-(427.734165934012) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[8] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 393:  c2h5co + ch3 => c4h8-1 + o
    const amrex::Real k_f = 480000 * exp(-(16379.7024719436) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[8] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 394:  c4h8-1 + oh => c2h5cho + ch3
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 395:  c2h5cho + ch3 => c4h8-1 + oh
    const amrex::Real k_f = 49500 * exp(-(8524.49031873195) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 396:  c4h8-1 + oh => c2h5co + ch4
    const amrex::Real k_f = 500000;
    const amrex::Real qf = k_f * (sc[4] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[9] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 397:  c2h5co + ch4 => c4h8-1 + oh
    const amrex::Real k_f = 22000000 * exp(-(17245.2351371277) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[9] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 398:  c4h8-1 + ch3o2 => c4h7 + ch3o2h
    const amrex::Real k_f = 1400000 * exp(-(7497.92832049032) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 399:  c4h7 + ch3o2h => c4h8-1 + ch3o2
    const amrex::Real k_f = 316000 * exp(-(6541.81665546136) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 400:  c4h8ooh1-3o2 => c4h8ooh1-3 + o2
    const amrex::Real k_f =
      5.601e+22 * exp((-2.23) * tc[0] - (19102.1046339472) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[35] -= qdot;
  }

  {
    // reaction 401:  c4h8ooh1-3 + o2 => c4h8ooh1-3o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 402:  c4h8ooh1-3o2 => nc4ket13 + oh
    const amrex::Real k_f = 25000000000 * exp(-(10768.836648221) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[35] -= qdot;
    wdot[39] += qdot;
  }

  {
    // reaction 403:  nc4ket13 + oh => c4h8ooh1-3o2
    const amrex::Real k_f =
      0.006893 * exp((1.3) * tc[0] - (22493.784961471) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[35] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 404:  c4h8ooh1-3 => c3h6 + ch2o + oh
    const amrex::Real k_f =
      66370000000000 * exp((-0.16) * tc[0] - (15046.1783075611) * invT);
    const amrex::Real qf = k_f * (sc_qss[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 405:  pc4h9o2 => c4h8ooh1-3
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[36] -= qdot;
  }

  {
    // reaction 406:  c4h8ooh1-3 => pc4h9o2
    const amrex::Real k_f =
      3231000000 * exp((-0.14) * tc[0] - (3960.81837654895) * invT);
    const amrex::Real qf = k_f * (sc_qss[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[36] += qdot;
  }

  {
    // reaction 407:  c2h5cho + ch3o2 => c2h5co + ch3o2h
    const amrex::Real k_f = 3010000 * exp(-(5998.34265639226) * invT);
    const amrex::Real qf = k_f * (sc[28] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] -= qdot;
    wdot[31] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 408:  c2h5co + ch3o2h => c2h5cho + ch3o2
    const amrex::Real k_f =
      23580000 * exp((-0.51) * tc[0] - (4520.3953089238) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[28] += qdot;
    wdot[31] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 409:  c2h5cho + c4h7 => c2h5co + c4h8-1
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[25] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] -= qdot;
    wdot[26] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 410:  c2h5co + c4h8-1 => c2h5cho + c4h7
    const amrex::Real k_f = 10000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[26] * sc_qss[5]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[26] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 411:  c3h4-a + ho2 => c2h4 + co + oh
    const amrex::Real k_f = 1000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[10] -= qdot;
    wdot[14] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 412:  c2h4 + co + oh => c3h4-a + ho2
    const amrex::Real k_f = 1e-12;
    const amrex::Real qf = k_f * (sc[4] * sc[6] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[6] -= qdot;
    wdot[10] += qdot;
    wdot[14] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 413:  c3h4-a + ho2 => c3h3 + h2o2
    const amrex::Real k_f = 30000000 * exp(-(7045.03332126608) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 414:  c3h3 + h2o2 => c3h4-a + ho2
    const amrex::Real k_f =
      15510000000 * exp((-1.38) * tc[0] - (22141.5332954077) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 415:  c3h6 + o2 => c3h5-a + ho2
    const amrex::Real k_f = 4000000 * exp(-(20078.3449656083) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 416:  c3h5-a + ho2 => c3h6 + o2
    const amrex::Real k_f =
      33320 * exp((0.34) * tc[0] - (-279.788466187424) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 417:  c3h6 + ch3 => c3h5-a + ch4
    const amrex::Real k_f =
      2.21e-06 * exp((3.5) * tc[0] - (2855.75457844178) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 418:  c3h5-a + ch4 => c3h6 + ch3
    const amrex::Real k_f =
      2.647e-05 * exp((3.51) * tc[0] - (11664.5623133534) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 419:  c2h5 + c3h6 => c2h6 + c3h5-a
    const amrex::Real k_f = 100000 * exp(-(4931.52332488625) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 420:  c2h6 + c3h5-a => c2h5 + c3h6
    const amrex::Real k_f =
      0.5369 * exp((1.33) * tc[0] - (8272.88198582959) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 421:  c3h5-a + ho2 => c2h3 + ch2o + oh
    const amrex::Real k_f = 1e-24;
    const amrex::Real qf = k_f * (sc[10] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
    wdot[17] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 422:  c2h3 + ch2o + oh => c3h5-a + ho2
    const amrex::Real k_f = 1e-42;
    const amrex::Real qf = k_f * (sc[4] * sc[12] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[10] += qdot;
    wdot[12] -= qdot;
    wdot[17] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 423:  c3h5-a + h => c3h4-a + h2
    const amrex::Real k_f = 18100000;
    const amrex::Real qf = k_f * (sc[0] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 424:  c3h4-a + h2 => c3h5-a + h
    const amrex::Real k_f =
      12300000 * exp((0.12) * tc[0] - (23766.9231259569) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 425:  c3h5-a + ch3 => c3h4-a + ch4
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[8] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 426:  c3h4-a + ch4 => c3h5-a + ch3
    const amrex::Real k_f =
      4921000 * exp((0.05) * tc[0] - (24043.6922921495) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 427:  c2h5 + c3h5-a => c2h6 + c3h4-a
    const amrex::Real k_f = 400000;
    const amrex::Real qf = k_f * (sc[15] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 428:  c2h6 + c3h4-a => c2h5 + c3h5-a
    const amrex::Real k_f =
      1802000 * exp((0.05) * tc[0] - (20294.7281319043) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 429:  c2h5 + c3h5-a => c2h4 + c3h6
    const amrex::Real k_f = 400000;
    const amrex::Real qf = k_f * (sc[15] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[15] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 430:  c2h4 + c3h6 => c2h5 + c3h5-a
    const amrex::Real k_f =
      69370000000 * exp((-1.33) * tc[0] - (26569.8399544892) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[15] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 431:  c2h3 + c3h5-a => c2h4 + c3h4-a
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * (sc[17] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 432:  c2h4 + c3h4-a => c2h3 + c3h5-a
    const amrex::Real k_f =
      16240000 * exp((0.05) * tc[0] - (24250.0111251294) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 433:  c3h4-a + c3h6 => 2 c3h5-a
    const amrex::Real k_f =
      839100000000 * exp((-1.29) * tc[0] - (16953.369470961) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[22] -= qdot;
    wdot[37] += 2.000000 * qdot;
  }

  {
    // reaction 434:  2 c3h5-a => c3h4-a + c3h6
    const amrex::Real k_f = 1000000;
    const amrex::Real qf = k_f * ((sc[37] * sc[37]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] += qdot;
    wdot[22] += qdot;
    wdot[37] -= 2.000000 * qdot;
  }

  {
    // reaction 435:  c3h5-a + o2 => c2h3cho + oh
    const amrex::Real k_f =
      24700000 * exp((-0.44) * tc[0] - (11584.0476468246) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[34] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 436:  c2h3cho + oh => c3h5-a + o2
    const amrex::Real k_f =
      190300000 * exp((-0.8) * tc[0] - (37680.8639354574) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[34] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 437:  c3h4-a + o2 => c3h3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(19705.9646329128) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 438:  c3h3 + ho2 => c3h4-a + o2
    const amrex::Real k_f =
      117500 * exp((0.3) * tc[0] - (19.1222333005793) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 439:  c3h3 + h => c3h2 + h2
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[0] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 440:  c3h2 + h2 => c3h3 + h
    const amrex::Real k_f =
      38530 * exp((0.38) * tc[0] - (2314.79666270171) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 441:  c3h4-a + oh => c3h3 + h2o
    const amrex::Real k_f = 10 * exp((2) * tc[0] - (503.21666580472) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 442:  c3h3 + h2o => c3h4-a + oh
    const amrex::Real k_f =
      7.003 * exp((1.97) * tc[0] - (17371.0393035789) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 443:  c3h4-a + o => c2h4 + co
    const amrex::Real k_f = 7800000 * exp(-(805.146665287552) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 444:  c2h4 + co => c3h4-a + o
    const amrex::Real k_f =
      82800000 * exp((-0.21) * tc[0] - (62801.439892429) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 445:  c3h2 + oh => c2h2 + hco
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 446:  c2h2 + hco => c3h2 + oh
    const amrex::Real k_f =
      290700000000000 * exp((-1.39) * tc[0] - (39512.5725989866) * invT);
    const amrex::Real qf = k_f * (sc[16] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 447:  c3h5-a => c3h4-a + h
    const amrex::Real k_f =
      6.663e+15 * exp((-0.43) * tc[0] - (31813.3576121744) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 448:  c3h4-a + h => c3h5-a
    const amrex::Real k_f =
      240000 * exp((0.69) * tc[0] - (1513.17251407479) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 449:  c3h4-a + h => c3h3 + h2
    const amrex::Real k_f = 20 * exp((2) * tc[0] - (2516.0833290236) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 450:  c3h3 + h2 => c3h4-a + h
    const amrex::Real k_f =
      3.235 * exp((1.97) * tc[0] - (11755.1413131983) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 451:  c3h4-a + ch3 => c3h3 + ch4
    const amrex::Real k_f =
      3.67e-08 * exp((4.01) * tc[0] - (3436.96982744624) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[21] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 452:  c3h3 + ch4 => c3h4-a + ch3
    const amrex::Real k_f =
      1.551e-07 * exp((3.98) * tc[0] - (12917.5718112072) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[21] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 453:  c3h4-a + c3h5-a => c3h3 + c3h6
    const amrex::Real k_f = 200000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] -= qdot;
    wdot[22] += qdot;
    wdot[37] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 454:  c3h3 + c3h6 => c3h4-a + c3h5-a
    const amrex::Real k_f =
      26440000000000 * exp((-2.71) * tc[0] - (21205.5502970109) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[21] += qdot;
    wdot[22] -= qdot;
    wdot[37] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 455:  c3h3 + oh => c3h2 + h2o
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[4] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 456:  c3h2 + h2o => c3h3 + oh
    const amrex::Real k_f = 1343000000 * exp(-(7890.437319818) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 457:  c3h3 + o2 => ch2co + hco
    const amrex::Real k_f = 30100 * exp(-(1444.23183085955) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[38]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[18] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 458:  ch2co + hco => c3h3 + o2
    const amrex::Real k_f = 488100 * exp(-(29926.2951154067) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[18] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 459:  pc4h9o2 => o2 + pc4h9
    const amrex::Real k_f =
      6.155e+19 * exp((-1.38) * tc[0] - (17869.2238027256) * invT);
    const amrex::Real qf = k_f * (sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 460:  o2 + pc4h9 => pc4h9o2
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[36] += qdot;
  }

  {
    // reaction 461:  ch2cho => ch2co + h
    const amrex::Real k_f =
      3.094e+15 * exp((-0.26) * tc[0] - (25573.4709561959) * invT);
    const amrex::Real qf = k_f * (sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 462:  ch2co + h => ch2cho
    const amrex::Real k_f = 50000000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 463:  ch2cho + o2 => ch2o + co + oh
    const amrex::Real k_f = 20000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 464:  nc4ket13 => ch2cho + ch3cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 465:  c3h5-a + o2 => c3h4-a + ho2
    const amrex::Real k_f =
      2.18e+15 * exp((-2.85) * tc[0] - (15478.9446401532) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[21] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 466:  c3h4-a + ho2 => c3h5-a + o2
    const amrex::Real k_f =
      26900000000000 * exp((-2.4) * tc[0] - (10315.9416489968) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[21] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 467:  c3h5-a + o2 => ch2cho + ch2o
    const amrex::Real k_f =
      7140000000 * exp((-1.21) * tc[0] - (10592.7108151893) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 468:  ch2cho + ch2o => c3h5-a + o2
    const amrex::Real k_f =
      49440000000 * exp((-1.4) * tc[0] - (44595.0609236143) * invT);
    const amrex::Real qf = k_f * (sc[12] * sc_qss[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[12] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 469:  c3h5-a + o2 => c2h2 + ch2o + oh
    const amrex::Real k_f =
      9.72e+23 * exp((-5.71) * tc[0] - (10793.9974815112) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[12] += qdot;
    wdot[16] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 470:  hcco + o2 => co2 + hco
    const amrex::Real k_f = 240000 * exp(-(-429.747032597231) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[7] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 471:  co2 + hco => hcco + o2
    const amrex::Real k_f = 147400000 * exp(-(67229.7465515105) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc_qss[0]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[7] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 472:  ch3 + o2 => ch2o + oh
    const amrex::Real k_f = 747000 * exp(-(7170.83748771726) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[8] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 473:  ch2o + oh => ch3 + o2
    const amrex::Real k_f = 777800 * exp(-(34102.9934415859) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[4] -= qdot;
    wdot[8] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 474:  c2h4 + h2 => 2 ch3
    const amrex::Real k_f =
      3767000 * exp((0.83) * tc[0] - (42627.4837603178) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[8] += 2.000000 * qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 475:  2 ch3 => c2h4 + h2
    const amrex::Real k_f = 100000000 * exp(-(16102.933305751) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[8] -= 2.000000 * qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 476:  nc3h7cho + o2 => ho2 + nc3h7co
    const amrex::Real k_f =
      20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 477:  ho2 + nc3h7co => nc3h7cho + o2
    const amrex::Real k_f = 10 * exp((0.5) * tc[0] - (2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 478:  nc3h7cho + oh => h2o + nc3h7co
    const amrex::Real k_f =
      26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 479:  h2o + nc3h7co => nc3h7cho + oh
    const amrex::Real k_f =
      18520 * exp((0.75) * tc[0] - (15710.4243064233) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 480:  h + nc3h7cho => h2 + nc3h7co
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 481:  h2 + nc3h7co => h + nc3h7cho
    const amrex::Real k_f = 18000000 * exp(-(12077.1999793133) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 482:  nc3h7cho + o => nc3h7co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 483:  nc3h7co + oh => nc3h7cho + o
    const amrex::Real k_f = 1000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 484:  ho2 + nc3h7cho => h2o2 + nc3h7co
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 485:  h2o2 + nc3h7co => ho2 + nc3h7cho
    const amrex::Real k_f = 1000000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 486:  ch3 + nc3h7cho => ch4 + nc3h7co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 487:  ch4 + nc3h7co => ch3 + nc3h7cho
    const amrex::Real k_f = 15000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 488:  ch3o2 + nc3h7cho => ch3o2h + nc3h7co
    const amrex::Real k_f = 1000000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 489:  ch3o2h + nc3h7co => ch3o2 + nc3h7cho
    const amrex::Real k_f = 25000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 490:  nc3h7co => co + nc3h7
    const amrex::Real k_f =
      5.325e+15 * exp((-0.86) * tc[0] - (6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc_qss[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 491:  co + nc3h7 => nc3h7co
    const amrex::Real k_f = 150000 * exp(-(2415.43999586265) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 492:  c2h5coch2 => c2h5 + ch2co
    const amrex::Real k_f = 15700000000000 * exp(-(15096.4999741416) * invT);
    const amrex::Real qf = k_f * (sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[18] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 493:  c2h5 + ch2co => c2h5coch2
    const amrex::Real k_f = 211000 * exp(-(3698.64249366469) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[18] -= qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 494:  nc3h7coch2 => ch2co + nc3h7
    const amrex::Real k_f =
      1.226e+18 * exp((-1.4) * tc[0] - (21864.7641292151) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[24] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 495:  ch2co + nc3h7 => nc3h7coch2
    const amrex::Real k_f = 100000 * exp(-(5837.31332333475) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] -= qdot;
    wdot[24] -= qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 496:  nc4h9cho + o2 => ho2 + nc4h9co
    const amrex::Real k_f =
      20000000 * exp((0.5) * tc[0] - (21235.7432969592) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 497:  ho2 + nc4h9co => nc4h9cho + o2
    const amrex::Real k_f = 10 * exp(-(20128.6666321888) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 498:  nc4h9cho + oh => h2o + nc4h9co
    const amrex::Real k_f =
      26900 * exp((0.76) * tc[0] - (-171.093666373605) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 499:  h2o + nc4h9co => nc4h9cho + oh
    const amrex::Real k_f =
      21430 * exp((0.73) * tc[0] - (15720.4886397394) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 500:  h + nc4h9cho => h2 + nc4h9co
    const amrex::Real k_f = 40000000 * exp(-(2113.50999637982) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 501:  h2 + nc4h9co => h + nc4h9cho
    const amrex::Real k_f = 18000000 * exp(-(12077.1999793133) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 502:  nc4h9cho + o => nc4h9co + oh
    const amrex::Real k_f = 5000000 * exp(-(900.757831790448) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 503:  nc4h9co + oh => nc4h9cho + o
    const amrex::Real k_f = 1000000 * exp(-(9561.11665028967) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 504:  ho2 + nc4h9cho => h2o2 + nc4h9co
    const amrex::Real k_f = 2800000 * exp(-(6843.74665494419) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 505:  h2o2 + nc4h9co => ho2 + nc4h9cho
    const amrex::Real k_f = 1000000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 506:  ch3 + nc4h9cho => ch4 + nc4h9co
    const amrex::Real k_f = 1700000 * exp(-(4247.14865939183) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 507:  ch4 + nc4h9co => ch3 + nc4h9cho
    const amrex::Real k_f = 15000000 * exp(-(14090.0666425322) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 508:  ch3o2 + nc4h9cho => ch3o2h + nc4h9co
    const amrex::Real k_f = 1000000 * exp(-(4780.55832514484) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[43] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 509:  ch3o2h + nc4h9co => ch3o2 + nc4h9cho
    const amrex::Real k_f = 25000 * exp(-(5032.1666580472) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[43] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 510:  nc4h9co => co + pc4h9
    const amrex::Real k_f = 100000000000 * exp(-(4830.87999172531) * invT);
    const amrex::Real qf = k_f * (sc[44]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 511:  co + pc4h9 => nc4h9co
    const amrex::Real k_f = 100000;
    const amrex::Real qf = k_f * (sc[6] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[44] += qdot;
  }

  {
    // reaction 512:  ch2(s) + ch4 => 2 ch3
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[9] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 513:  2 ch3 => ch2(s) + ch4
    const amrex::Real k_f =
      5429000000 * exp((-0.89) * tc[0] - (7875.34081984386) * invT);
    const amrex::Real qf = k_f * ((sc[8] * sc[8]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= 2.000000 * qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 514:  c2h6 + ch2(s) => c2h5 + ch3
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[13] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[13] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 515:  c2h5 + ch3 => c2h6 + ch2(s)
    const amrex::Real k_f =
      104100000 * exp((-0.33) * tc[0] - (9973.75431624954) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 516:  ch2(s) + o2 => co + h + oh
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 517:  ch2(s) + h2 => ch3 + h
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[1] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[8] += qdot;
  }

  {
    // reaction 518:  ch3 + h => ch2(s) + h2
    const amrex::Real k_f =
      248200000000 * exp((-0.89) * tc[0] - (8116.88481943013) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 519:  ch2(s) + o => co + 2 h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[2] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += 2.000000 * qdot;
    wdot[2] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 520:  ch2(s) + oh => ch2o + h
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[4] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[4] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 521:  ch2o + h => ch2(s) + oh
    const amrex::Real k_f =
      3194000000000 * exp((-0.89) * tc[0] - (44212.6162576027) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[4] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 522:  ch2(s) + co2 => ch2o + co
    const amrex::Real k_f = 3000000;
    const amrex::Real qf = k_f * (sc[7] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[7] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 523:  ch2o + co => ch2(s) + co2
    const amrex::Real k_f =
      2852000000 * exp((-0.89) * tc[0] - (32970.7559435252) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 524:  ch2(s) + ch3 => c2h4 + h
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[8] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[8] -= qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 525:  c2h4 + h => ch2(s) + ch3
    const amrex::Real k_f =
      2671000000 * exp((-0.06) * tc[0] - (34641.4352739969) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[8] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 526:  ch2(s) + ch2co => c2h4 + co
    const amrex::Real k_f = 160000000;
    const amrex::Real qf = k_f * (sc[18] * sc_qss[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 527:  c2h4 + co => ch2(s) + ch2co
    const amrex::Real k_f =
      4596000000 * exp((-0.06) * tc[0] - (53139.6799089784) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 528:  nc7h16 => c7h15-1 + h
    const amrex::Real k_f =
      1.34e+88 * exp((-21.17) * tc[0] - (71859.339876914) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 529:  c7h15-1 + h => nc7h16
    const amrex::Real k_f =
      3.374e+76 * exp((-20.22) * tc[0] - (19932.4121325249) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 530:  nc7h16 => c7h15-2 + h
    const amrex::Real k_f =
      6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 531:  c7h15-2 + h => nc7h16
    const amrex::Real k_f =
      5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 532:  nc7h16 => c7h15-3 + h
    const amrex::Real k_f =
      6.5e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 533:  c7h15-3 + h => nc7h16
    const amrex::Real k_f =
      5.207e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 534:  nc7h16 => c7h15-4 + h
    const amrex::Real k_f =
      3.25e+87 * exp((-21.01) * tc[0] - (70198.7248797584) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 535:  c7h15-4 + h => nc7h16
    const amrex::Real k_f =
      5.187e+74 * exp((-19.67) * tc[0] - (19570.0961331455) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 536:  nc7h16 => nc3h7 + pc4h9
    const amrex::Real k_f =
      1.415e+78 * exp((-17.71) * tc[0] - (60738.2515626297) * invT);
    const amrex::Real qf = k_f * (sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 537:  nc3h7 + pc4h9 => nc7h16
    const amrex::Real k_f =
      1.363e+62 * exp((-16.11) * tc[0] - (16334.4129720212) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 538:  h + nc7h16 => c7h15-1 + h2
    const amrex::Real k_f =
      0.188 * exp((2.75) * tc[0] - (3160.20066125364) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 539:  c7h15-1 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.008926 * exp((2.7) * tc[0] - (5308.93582423979) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 540:  h + nc7h16 => c7h15-2 + h2
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 541:  c7h15-2 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 542:  h + nc7h16 => c7h15-3 + h2
    const amrex::Real k_f = 2.6 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 543:  c7h15-3 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003928 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 544:  h + nc7h16 => c7h15-4 + h2
    const amrex::Real k_f = 1.3 * exp((2.4) * tc[0] - (2249.8817128129) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[1] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 545:  c7h15-4 + h2 => h + nc7h16
    const amrex::Real k_f =
      0.003913 * exp((2.74) * tc[0] - (5666.21965696114) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 546:  nc7h16 + o => c7h15-1 + oh
    const amrex::Real k_f =
      0.193 * exp((2.68) * tc[0] - (1869.95313013034) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 547:  c7h15-1 + oh => nc7h16 + o
    const amrex::Real k_f =
      0.004025 * exp((2.63) * tc[0] - (2965.45581158721) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 548:  nc7h16 + o => c7h15-2 + oh
    const amrex::Real k_f =
      0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 549:  c7h15-2 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 550:  nc7h16 + o => c7h15-3 + oh
    const amrex::Real k_f =
      0.0954 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 551:  c7h15-3 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.33e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 552:  nc7h16 + o => c7h15-4 + oh
    const amrex::Real k_f =
      0.0477 * exp((2.71) * tc[0] - (1059.77429818474) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 553:  c7h15-4 + oh => nc7h16 + o
    const amrex::Real k_f =
      6.306e-05 * exp((3.05) * tc[0] - (3420.86689414048) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 554:  nc7h16 + oh => c7h15-1 + h2o
    const amrex::Real k_f =
      10500 * exp((0.97) * tc[0] - (800.114498629504) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 555:  c7h15-1 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      15000 * exp((1.05) * tc[0] - (11740.0448132241) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 556:  nc7h16 + oh => c7h15-2 + h2o
    const amrex::Real k_f =
      94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 557:  c7h15-2 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 558:  nc7h16 + oh => c7h15-3 + h2o
    const amrex::Real k_f =
      94 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 559:  c7h15-3 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6148 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 560:  nc7h16 + oh => c7h15-4 + h2o
    const amrex::Real k_f =
      47 * exp((1.61) * tc[0] - (-17.6125833031652) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 561:  c7h15-4 + h2o => nc7h16 + oh
    const amrex::Real k_f =
      0.6125 * exp((1.95) * tc[0] - (11025.4771477814) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 562:  ho2 + nc7h16 => c7h15-1 + h2o2
    const amrex::Real k_f = 16800000 * exp(-(10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 563:  c7h15-1 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      20500000 * exp((-0.38) * tc[0] - (4226.51677609384) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 564:  ho2 + nc7h16 => c7h15-2 + h2o2
    const amrex::Real k_f = 11200000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 565:  c7h15-2 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 566:  ho2 + nc7h16 => c7h15-3 + h2o2
    const amrex::Real k_f = 11200000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 567:  c7h15-3 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      434800 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 568:  ho2 + nc7h16 => c7h15-4 + h2o2
    const amrex::Real k_f = 5600000 * exp(-(8901.90281808549) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 569:  c7h15-4 + h2o2 => ho2 + nc7h16
    const amrex::Real k_f =
      433200 * exp((0.01) * tc[0] - (4108.76407629554) * invT);
    const amrex::Real qf = k_f * (sc[11] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 570:  ch3 + nc7h16 => c7h15-1 + ch4
    const amrex::Real k_f =
      9.04e-07 * exp((3.65) * tc[0] - (3600.01202716696) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 571:  c7h15-1 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      1.121e-06 * exp((3.6) * tc[0] - (5993.31048973421) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 572:  ch3 + nc7h16 => c7h15-2 + ch4
    const amrex::Real k_f =
      0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 573:  c7h15-2 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 574:  ch3 + nc7h16 => c7h15-3 + ch4
    const amrex::Real k_f =
      0.0541 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 575:  c7h15-3 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002135 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 576:  ch3 + nc7h16 => c7h15-4 + ch4
    const amrex::Real k_f =
      0.02705 * exp((2.26) * tc[0] - (3666.93984371899) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 577:  c7h15-4 + ch4 => ch3 + nc7h16
    const amrex::Real k_f =
      0.002127 * exp((2.6) * tc[0] - (7321.80248745867) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 578:  nc7h16 + o2 => c7h15-1 + ho2
    const amrex::Real k_f = 60000000 * exp(-(26569.8399544892) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 579:  c7h15-1 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      51750 * exp((0.28) * tc[0] - (-204.305966316716) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 580:  nc7h16 + o2 => c7h15-2 + ho2
    const amrex::Real k_f = 40000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 581:  c7h15-2 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 582:  nc7h16 + o2 => c7h15-3 + ho2
    const amrex::Real k_f = 40000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 583:  c7h15-3 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1098 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 584:  nc7h16 + o2 => c7h15-4 + ho2
    const amrex::Real k_f = 20000000 * exp(-(25236.3157901067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 585:  c7h15-4 + ho2 => nc7h16 + o2
    const amrex::Real k_f =
      1094 * exp((0.67) * tc[0] - (-272.240216200353) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 586:  c2h5 + nc7h16 => c2h6 + c7h15-1
    const amrex::Real k_f = 100000 * exp(-(6743.10332178324) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 587:  c2h6 + c7h15-1 => c2h5 + nc7h16
    const amrex::Real k_f = 320000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 588:  c2h5 + nc7h16 => c2h6 + c7h15-2
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 589:  c2h6 + c7h15-2 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 590:  c2h5 + nc7h16 => c2h6 + c7h15-3
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 591:  c2h6 + c7h15-3 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 592:  c2h5 + nc7h16 => c2h6 + c7h15-4
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] += qdot;
    wdot[15] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 593:  c2h6 + c7h15-4 => c2h5 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(6491.49498888088) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[13] -= qdot;
    wdot[15] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 594:  c2h3 + nc7h16 => c2h4 + c7h15-1
    const amrex::Real k_f = 1000000 * exp(-(9057.89998448495) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 595:  c2h4 + c7h15-1 => c2h3 + nc7h16
    const amrex::Real k_f = 2570000 * exp(-(12781.7033114399) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 596:  c2h3 + nc7h16 => c2h4 + c7h15-2
    const amrex::Real k_f = 800000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 597:  c2h4 + c7h15-2 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 598:  c2h3 + nc7h16 => c2h4 + c7h15-3
    const amrex::Real k_f = 800000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 599:  c2h4 + c7h15-3 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 600:  c2h3 + nc7h16 => c2h4 + c7h15-4
    const amrex::Real k_f = 400000 * exp(-(8454.03998551929) * invT);
    const amrex::Real qf = k_f * (sc[17] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] -= qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 601:  c2h4 + c7h15-4 => c2h3 + nc7h16
    const amrex::Real k_f = 2000000 * exp(-(12177.8433124742) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[17] += qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 602:  ch3o2 + nc7h16 => c7h15-1 + ch3o2h
    const amrex::Real k_f = 12100000 * exp(-(10280.7164823904) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 603:  c7h15-1 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 3600000 * exp(-(4931.52332488625) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 604:  ch3o2 + nc7h16 => c7h15-2 + ch3o2h
    const amrex::Real k_f = 8064000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 605:  c7h15-2 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 606:  ch3o2 + nc7h16 => c7h15-3 + ch3o2h
    const amrex::Real k_f = 8064000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 607:  c7h15-3 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 608:  ch3o2 + nc7h16 => c7h15-4 + ch3o2h
    const amrex::Real k_f = 4032000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[31] * sc[45]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] -= qdot;
    wdot[32] += qdot;
    wdot[45] -= qdot;
  }

  {
    // reaction 609:  c7h15-4 + ch3o2h => ch3o2 + nc7h16
    const amrex::Real k_f = 237600 * exp(-(1861.90166347746) * invT);
    const amrex::Real qf = k_f * (sc[32] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[31] += qdot;
    wdot[32] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 610:  c7h15-1 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 611:  c7h15-2 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 612:  c7h15-1 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 613:  c7h15-3 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 614:  c7h15-1 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 615:  c7h15-4 + nc7h16 => c7h15-1 + nc7h16
    const amrex::Real k_f = 150000 * exp(-(6189.56498939805) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 616:  c7h15-2 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 617:  c7h15-3 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 618:  c7h15-2 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 619:  c7h15-4 + nc7h16 => c7h15-2 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 620:  c7h15-3 + nc7h16 => c7h15-4 + nc7h16
    const amrex::Real k_f = 50000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 621:  c7h15-4 + nc7h16 => c7h15-3 + nc7h16
    const amrex::Real k_f = 100000 * exp(-(5233.45332436908) * invT);
    const amrex::Real qf = k_f * (sc[45] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[45] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 622:  c7h15-2 => c3h6 + pc4h9
    const amrex::Real k_f =
      2.218e+16 * exp((-0.89) * tc[0] - (15161.9181406962) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
  }

  {
    // reaction 623:  c3h6 + pc4h9 => c7h15-2
    const amrex::Real k_f = 100000 * exp(-(4126.3766595987) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc_qss[4]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
  }

  {
    // reaction 624:  c7h15-2 => c7h14-2 + h
    const amrex::Real k_f =
      2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 625:  c7h14-2 + h => c7h15-2
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 626:  c7h15-3 => c4h8-1 + nc3h7
    const amrex::Real k_f =
      9.633e+17 * exp((-1.42) * tc[0] - (15388.3656403083) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 627:  c4h8-1 + nc3h7 => c7h15-3
    const amrex::Real k_f = 100000 * exp(-(3874.76832669634) * invT);
    const amrex::Real qf = k_f * (sc[24] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 628:  c7h15-3 => c7h14-2 + h
    const amrex::Real k_f =
      2.71e+15 * exp((-0.72) * tc[0] - (18915.9144675994) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 629:  c7h14-2 + h => c7h15-3
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 630:  c7h15-3 => c7h14-3 + h
    const amrex::Real k_f =
      2.018e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 631:  c7h14-3 + h => c7h15-3
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 632:  c7h15-4 => c2h5 + c5h10-1
    const amrex::Real k_f =
      5.426e+16 * exp((-0.89) * tc[0] - (15393.3978069664) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 633:  c2h5 + c5h10-1 => c7h15-4
    const amrex::Real k_f = 100000 * exp(-(4126.3766595987) * invT);
    const amrex::Real qf = k_f * (sc[15] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[15] -= qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 634:  c7h15-4 => c7h14-3 + h
    const amrex::Real k_f =
      4.02e+15 * exp((-0.66) * tc[0] - (18961.2039675218) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] += qdot;
  }

  {
    // reaction 635:  c7h14-3 + h => c7h15-4
    const amrex::Real k_f = 10000000 * exp(-(1459.32833083369) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
  }

  {
    // reaction 636:  c7h15-2 + o2 => c7h14-2 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 637:  c7h14-2 + ho2 => c7h15-2 + o2
    const amrex::Real k_f =
      3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 638:  c7h15-3 + o2 => c7h14-2 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 639:  c7h14-2 + ho2 => c7h15-3 + o2
    const amrex::Real k_f =
      3.793e-15 * exp((0.05) * tc[0] - (9193.76848425223) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 640:  c7h15-3 + o2 => c7h14-3 + ho2
    const amrex::Real k_f = 3e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 641:  c7h14-3 + ho2 => c7h15-3 + o2
    const amrex::Real k_f =
      5.094e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 642:  c7h15-4 + o2 => c7h14-3 + ho2
    const amrex::Real k_f = 6e-15 * exp(-(1509.64999741416) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 643:  c7h14-3 + ho2 => c7h15-4 + o2
    const amrex::Real k_f =
      5.113e-15 * exp((-0.01) * tc[0] - (9148.4789843298) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 644:  c7h15-1 => c7h15-3
    const amrex::Real k_f =
      1386000000 * exp((0.98) * tc[0] - (16988.5946375673) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 645:  c7h15-3 => c7h15-1
    const amrex::Real k_f =
      44100000 * exp((1.38) * tc[0] - (18256.7006353952) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 646:  c7h15-1 => c7h15-4
    const amrex::Real k_f =
      2541000000 * exp((0.35) * tc[0] - (9943.56131630126) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 647:  c7h15-4 => c7h15-1
    const amrex::Real k_f =
      161100000 * exp((0.74) * tc[0] - (11211.6673141292) * invT);
    const amrex::Real qf = k_f * (sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 648:  c7h15-2 => c7h15-3
    const amrex::Real k_f =
      958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 649:  c7h15-3 => c7h15-2
    const amrex::Real k_f =
      958700000 * exp((1.39) * tc[0] - (19977.7016324474) * invT);
    const amrex::Real qf = k_f * (sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 650:  c7h15-1 => c7h15-2
    const amrex::Real k_f =
      547800000 * exp((1.62) * tc[0] - (19504.6779665909) * invT);
    const amrex::Real qf = k_f * (sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 651:  c7h15-2 => c7h15-1
    const amrex::Real k_f =
      17430000 * exp((2.01) * tc[0] - (20772.7839644188) * invT);
    const amrex::Real qf = k_f * (sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
  }

  {
    // reaction 652:  c7h14-2 + oh => c2h5cho + pc4h9
    const amrex::Real k_f = 100000 * exp(-(-2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 653:  c7h14-3 + oh => c2h5cho + pc4h9
    const amrex::Real k_f = 100000 * exp(-(-2012.86666321888) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 654:  c7h14-2 + o => c5h10-1 + ch3cho
    const amrex::Real k_f = 100000 * exp(-(-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 655:  c7h14-3 + o => c5h10-1 + ch3cho
    const amrex::Real k_f = 100000 * exp(-(-528.377499094956) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 656:  c7h14-2 => c4h7 + nc3h7
    const amrex::Real k_f = 1e+16 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 657:  c4h7 + nc3h7 => c7h14-2
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[24] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 658:  c7h14-3 => c4h7 + nc3h7
    const amrex::Real k_f = 1e+16 * exp(-(35728.3832721351) * invT);
    const amrex::Real qf = k_f * (sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] += qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 659:  c4h7 + nc3h7 => c7h14-3
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[24] * sc[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[24] -= qdot;
    wdot[25] -= qdot;
  }

  {
    // reaction 660:  c7h15o2-1 => c7h15-1 + o2
    const amrex::Real k_f =
      2.657e+20 * exp((-1.67) * tc[0] - (17813.8699694871) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 661:  c7h15-1 + o2 => c7h15o2-1
    const amrex::Real k_f = 4520000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 662:  c7h15o2-2 => c7h15-2 + o2
    const amrex::Real k_f =
      1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[47] -= qdot;
  }

  {
    // reaction 663:  c7h15-2 + o2 => c7h15o2-2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[47] += qdot;
  }

  {
    // reaction 664:  c7h15o2-3 => c7h15-3 + o2
    const amrex::Real k_f =
      9.879e+21 * exp((-1.97) * tc[0] - (19051.7829673667) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[48] -= qdot;
  }

  {
    // reaction 665:  c7h15-3 + o2 => c7h15o2-3
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[48] += qdot;
  }

  {
    // reaction 666:  c7h15o2-4 => c7h15-4 + o2
    const amrex::Real k_f =
      1.357e+23 * exp((-2.36) * tc[0] - (18956.1718008638) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[49] -= qdot;
  }

  {
    // reaction 667:  c7h15-4 + o2 => c7h15o2-4
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[49] += qdot;
  }

  {
    // reaction 668:  c7h15o2-1 => c7h14ooh1-3
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[46] -= qdot;
  }

  {
    // reaction 669:  c7h14ooh1-3 => c7h15o2-1
    const amrex::Real k_f =
      2653000000 * exp((-0.11) * tc[0] - (4146.50532623089) * invT);
    const amrex::Real qf = k_f * (sc_qss[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[46] += qdot;
  }

  {
    // reaction 670:  c7h15o2-2 => c7h14ooh2-3
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] -= qdot;
  }

  {
    // reaction 671:  c7h14ooh2-3 => c7h15o2-2
    const amrex::Real k_f =
      22620000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
    const amrex::Real qf = k_f * (sc_qss[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] += qdot;
  }

  {
    // reaction 672:  c7h15o2-2 => c7h14ooh2-4
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[47]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] -= qdot;
  }

  {
    // reaction 673:  c7h14ooh2-4 => c7h15o2-2
    const amrex::Real k_f =
      2827000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[47] += qdot;
  }

  {
    // reaction 674:  c7h15o2-3 => c7h14ooh3-2
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
  }

  {
    // reaction 675:  c7h14ooh3-2 => c7h15o2-3
    const amrex::Real k_f =
      310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
    const amrex::Real qf = k_f * (sc_qss[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
  }

  {
    // reaction 676:  c7h15o2-3 => c7h14ooh3-4
    const amrex::Real k_f = 200000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
  }

  {
    // reaction 677:  c7h14ooh3-4 => c7h15o2-3
    const amrex::Real k_f =
      310700000000 * exp((-0.51) * tc[0] - (7085.29065453045) * invT);
    const amrex::Real qf = k_f * (sc_qss[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
  }

  {
    // reaction 678:  c7h15o2-3 => c7h14ooh3-5
    const amrex::Real k_f = 25000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[48]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] -= qdot;
  }

  {
    // reaction 679:  c7h14ooh3-5 => c7h15o2-3
    const amrex::Real k_f =
      38840000000 * exp((-0.51) * tc[0] - (4065.99065970213) * invT);
    const amrex::Real qf = k_f * (sc_qss[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[48] += qdot;
  }

  {
    // reaction 680:  c7h15o2-4 => c7h14ooh4-2
    const amrex::Real k_f = 50000000000 * exp(-(10492.0674820284) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] -= qdot;
  }

  {
    // reaction 681:  c7h14ooh4-2 => c7h15o2-4
    const amrex::Real k_f =
      5655000000 * exp((-0.11) * tc[0] - (4161.60182620503) * invT);
    const amrex::Real qf = k_f * (sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] += qdot;
  }

  {
    // reaction 682:  c7h15o2-4 => c7h14ooh4-3
    const amrex::Real k_f = 400000000000 * exp(-(13511.3674768567) * invT);
    const amrex::Real qf = k_f * (sc[49]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 683:  c7h14ooh4-3 => c7h15o2-4
    const amrex::Real k_f =
      45240000000 * exp((-0.11) * tc[0] - (7180.90182103335) * invT);
    const amrex::Real qf = k_f * (sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[49] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 684:  c7h14ooh2-3 => c7h14-2 + ho2
    const amrex::Real k_f =
      1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
    const amrex::Real qf = k_f * (sc_qss[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
  }

  {
    // reaction 685:  c7h14-2 + ho2 => c7h14ooh2-3
    const amrex::Real k_f = 100000 * exp(-(5802.08815672842) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
  }

  {
    // reaction 686:  c7h14ooh3-2 => c7h14-2 + ho2
    const amrex::Real k_f =
      1.61e+20 * exp((-2.52) * tc[0] - (10743.6758149308) * invT);
    const amrex::Real qf = k_f * (sc_qss[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
  }

  {
    // reaction 687:  c7h14-2 + ho2 => c7h14ooh3-2
    const amrex::Real k_f = 100000 * exp(-(5802.08815672842) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
  }

  {
    // reaction 688:  c7h14ooh3-4 => c7h14-3 + ho2
    const amrex::Real k_f =
      1.199e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc_qss[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
  }

  {
    // reaction 689:  c7h14-3 + ho2 => c7h14ooh3-4
    const amrex::Real k_f = 100000 * exp(-(5298.8714909237) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
  }

  {
    // reaction 690:  c7h14ooh4-3 => c7h14-3 + ho2
    const amrex::Real k_f =
      2.389e+20 * exp((-2.46) * tc[0] - (10285.7486490485) * invT);
    const amrex::Real qf = k_f * (sc[50]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[50] -= qdot;
  }

  {
    // reaction 691:  c7h14-3 + ho2 => c7h14ooh4-3
    const amrex::Real k_f = 100000 * exp(-(5298.8714909237) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc_qss[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[50] += qdot;
  }

  {
    // reaction 692:  c7h14ooh1-3 => c7h14o1-3 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc_qss[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[52] += qdot;
  }

  {
    // reaction 693:  c7h14ooh2-4 => c7h14o2-4 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 694:  c7h14ooh4-2 => c7h14o2-4 + oh
    const amrex::Real k_f = 75000000000 * exp(-(7674.05415352198) * invT);
    const amrex::Real qf = k_f * (sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[53] += qdot;
  }

  {
    // reaction 695:  c7h14ooh2-4 => c5h10-1 + ch3cho + oh
    const amrex::Real k_f =
      5.364e+17 * exp((-1.4) * tc[0] - (13461.0458102763) * invT);
    const amrex::Real qf = k_f * (sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 696:  c7h14ooh3-5 => c2h5cho + c4h8-1 + oh
    const amrex::Real k_f =
      2.47e+18 * exp((-1.55) * tc[0] - (13596.9143100435) * invT);
    const amrex::Real qf = k_f * (sc_qss[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[26] += qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 697:  c7h14ooh4-2 => c3h6 + nc3h7cho + oh
    const amrex::Real k_f =
      1.3e+18 * exp((-1.49) * tc[0] - (13486.2066435665) * invT);
    const amrex::Real qf = k_f * (sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[22] += qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 698:  c7h14ooh1-3o2 => c7h14ooh1-3 + o2
    const amrex::Real k_f =
      1.367e+23 * exp((-2.37) * tc[0] - (18941.0753008896) * invT);
    const amrex::Real qf = k_f * (sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[51] -= qdot;
  }

  {
    // reaction 699:  c7h14ooh1-3 + o2 => c7h14ooh1-3o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[51] += qdot;
  }

  {
    // reaction 700:  c7h14ooh2-4o2 => c7h14ooh2-4 + o2
    const amrex::Real k_f =
      1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc_qss[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
  }

  {
    // reaction 701:  c7h14ooh2-4 + o2 => c7h14ooh2-4o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
  }

  {
    // reaction 702:  c7h14ooh3-5o2 => c7h14ooh3-5 + o2
    const amrex::Real k_f =
      1.389e+23 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc_qss[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
  }

  {
    // reaction 703:  c7h14ooh3-5 + o2 => c7h14ooh3-5o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
  }

  {
    // reaction 704:  c7h14ooh4-2o2 => c7h14ooh4-2 + o2
    const amrex::Real k_f =
      6.969e+22 * exp((-2.38) * tc[0] - (18920.9466342575) * invT);
    const amrex::Real qf = k_f * (sc_qss[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
  }

  {
    // reaction 705:  c7h14ooh4-2 + o2 => c7h14ooh4-2o2
    const amrex::Real k_f = 7540000;
    const amrex::Real qf = k_f * (sc[3] * sc_qss[25]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
  }

  {
    // reaction 706:  c7h14ooh1-3o2 => nc7ket13 + oh
    const amrex::Real k_f = 25000000000 * exp(-(10768.836648221) * invT);
    const amrex::Real qf = k_f * (sc[51]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[51] -= qdot;
  }

  {
    // reaction 707:  nc7ket13 + oh => c7h14ooh1-3o2
    const amrex::Real k_f =
      0.003303 * exp((1.41) * tc[0] - (22664.8786278446) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[51] += qdot;
  }

  {
    // reaction 708:  c7h14ooh2-4o2 => nc7ket24 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc_qss[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
  }

  {
    // reaction 709:  nc7ket24 + oh => c7h14ooh2-4o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
  }

  {
    // reaction 710:  c7h14ooh3-5o2 => nc7ket35 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc_qss[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
  }

  {
    // reaction 711:  nc7ket35 + oh => c7h14ooh3-5o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
  }

  {
    // reaction 712:  c7h14ooh4-2o2 => nc7ket42 + oh
    const amrex::Real k_f = 12500000000 * exp(-(8982.41748461425) * invT);
    const amrex::Real qf = k_f * (sc_qss[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
  }

  {
    // reaction 713:  nc7ket42 + oh => c7h14ooh4-2o2
    const amrex::Real k_f =
      0.0001615 * exp((1.83) * tc[0] - (22242.1766285686) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc_qss[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
  }

  {
    // reaction 714:  nc7ket13 => ch2cho + nc4h9cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[43] += qdot;
  }

  {
    // reaction 715:  nc7ket24 => ch3coch2 + nc3h7cho + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[27] += qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 716:  nc7ket35 => c2h5cho + c2h5coch2 + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[28] += qdot;
    wdot[41] += qdot;
  }

  {
    // reaction 717:  nc7ket42 => ch3cho + nc3h7coch2 + oh
    const amrex::Real k_f = 1.05e+16 * exp(-(20933.8132974763) * invT);
    const amrex::Real qf = k_f * (sc_qss[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[20] += qdot;
    wdot[42] += qdot;
  }

  {
    // reaction 718:  c7h14o2-4 + oh => c5h10-1 + ch3co + h2o
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[30] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 719:  c7h14o1-3 + oh => c2h4 + h2o + nc4h9co
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
    wdot[44] += qdot;
    wdot[52] -= qdot;
  }

  {
    // reaction 720:  c7h14o2-4 + oh => c3h6 + h2o + nc3h7co
    const amrex::Real k_f = 2500000;
    const amrex::Real qf = k_f * (sc[4] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[22] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 721:  c7h14o2-4 + ho2 => c5h10-1 + ch3co + h2o2
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[30] += qdot;
    wdot[53] -= qdot;
  }

  {
    // reaction 722:  c7h14o1-3 + ho2 => c2h4 + h2o2 + nc4h9co
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[52]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[44] += qdot;
    wdot[52] -= qdot;
  }

  {
    // reaction 723:  c7h14o2-4 + ho2 => c3h6 + h2o2 + nc3h7co
    const amrex::Real k_f = 5000000 * exp(-(8906.93498474354) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[53]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[22] += qdot;
    wdot[53] -= qdot;
  }

  return;
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 55; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[55]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 55; i++) {
    YOW += y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 55; i++) {
    c[i] = PWORT * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[55]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 55; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[55]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 55; i++) {
    c[i] = 1e6 * rho * y[i] *
#if AMREX_DEVICE_COMPILE
           global_imw[i]
#else
           h_global_imw[i]
#endif
      ;
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[55];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 1.008000;    // h
  XW += x[1] * 2.016000;    // h2
  XW += x[2] * 15.999000;   // o
  XW += x[3] * 31.998000;   // o2
  XW += x[4] * 17.007000;   // oh
  XW += x[5] * 18.015000;   // h2o
  XW += x[6] * 28.010000;   // co
  XW += x[7] * 44.009000;   // co2
  XW += x[8] * 15.035000;   // ch3
  XW += x[9] * 16.043000;   // ch4
  XW += x[10] * 33.006000;  // ho2
  XW += x[11] * 34.014000;  // h2o2
  XW += x[12] * 30.026000;  // ch2o
  XW += x[13] * 30.070000;  // c2h6
  XW += x[14] * 28.054000;  // c2h4
  XW += x[15] * 29.062000;  // c2h5
  XW += x[16] * 26.038000;  // c2h2
  XW += x[17] * 27.046000;  // c2h3
  XW += x[18] * 42.037000;  // ch2co
  XW += x[19] * 41.029000;  // hcco
  XW += x[20] * 44.053000;  // ch3cho
  XW += x[21] * 40.065000;  // c3h4-a
  XW += x[22] * 42.081000;  // c3h6
  XW += x[23] * 54.092000;  // c4h6
  XW += x[24] * 43.089000;  // nc3h7
  XW += x[25] * 55.100000;  // c4h7
  XW += x[26] * 56.108000;  // c4h8-1
  XW += x[27] * 57.072000;  // ch3coch2
  XW += x[28] * 58.080000;  // c2h5cho
  XW += x[29] * 69.127000;  // c5h9
  XW += x[30] * 70.135000;  // c5h10-1
  XW += x[31] * 47.033000;  // ch3o2
  XW += x[32] * 48.041000;  // ch3o2h
  XW += x[33] * 55.056000;  // c2h3co
  XW += x[34] * 56.064000;  // c2h3cho
  XW += x[35] * 121.112000; // c4h8ooh1-3o2
  XW += x[36] * 89.114000;  // pc4h9o2
  XW += x[37] * 41.073000;  // c3h5-a
  XW += x[38] * 39.057000;  // c3h3
  XW += x[39] * 104.105000; // nc4ket13
  XW += x[40] * 72.107000;  // nc3h7cho
  XW += x[41] * 71.099000;  // c2h5coch2
  XW += x[42] * 85.126000;  // nc3h7coch2
  XW += x[43] * 86.134000;  // nc4h9cho
  XW += x[44] * 85.126000;  // nc4h9co
  XW += x[45] * 100.205000; // nc7h16
  XW += x[46] * 131.195000; // c7h15o2-1
  XW += x[47] * 131.195000; // c7h15o2-2
  XW += x[48] * 131.195000; // c7h15o2-3
  XW += x[49] * 131.195000; // c7h15o2-4
  XW += x[50] * 131.195000; // c7h14ooh4-3
  XW += x[51] * 163.193000; // c7h14ooh1-3o2
  XW += x[52] * 114.188000; // c7h14o1-3
  XW += x[53] * 114.188000; // c7h14o2-4
  XW += x[54] * 28.014000;  // n2
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 55; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 55; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // h
  kcharge[1] = 0;  // h2
  kcharge[2] = 0;  // o
  kcharge[3] = 0;  // o2
  kcharge[4] = 0;  // oh
  kcharge[5] = 0;  // h2o
  kcharge[6] = 0;  // co
  kcharge[7] = 0;  // co2
  kcharge[8] = 0;  // ch3
  kcharge[9] = 0;  // ch4
  kcharge[10] = 0; // ho2
  kcharge[11] = 0; // h2o2
  kcharge[12] = 0; // ch2o
  kcharge[13] = 0; // c2h6
  kcharge[14] = 0; // c2h4
  kcharge[15] = 0; // c2h5
  kcharge[16] = 0; // c2h2
  kcharge[17] = 0; // c2h3
  kcharge[18] = 0; // ch2co
  kcharge[19] = 0; // hcco
  kcharge[20] = 0; // ch3cho
  kcharge[21] = 0; // c3h4-a
  kcharge[22] = 0; // c3h6
  kcharge[23] = 0; // c4h6
  kcharge[24] = 0; // nc3h7
  kcharge[25] = 0; // c4h7
  kcharge[26] = 0; // c4h8-1
  kcharge[27] = 0; // ch3coch2
  kcharge[28] = 0; // c2h5cho
  kcharge[29] = 0; // c5h9
  kcharge[30] = 0; // c5h10-1
  kcharge[31] = 0; // ch3o2
  kcharge[32] = 0; // ch3o2h
  kcharge[33] = 0; // c2h3co
  kcharge[34] = 0; // c2h3cho
  kcharge[35] = 0; // c4h8ooh1-3o2
  kcharge[36] = 0; // pc4h9o2
  kcharge[37] = 0; // c3h5-a
  kcharge[38] = 0; // c3h3
  kcharge[39] = 0; // nc4ket13
  kcharge[40] = 0; // nc3h7cho
  kcharge[41] = 0; // c2h5coch2
  kcharge[42] = 0; // nc3h7coch2
  kcharge[43] = 0; // nc4h9cho
  kcharge[44] = 0; // nc4h9co
  kcharge[45] = 0; // nc7h16
  kcharge[46] = 0; // c7h15o2-1
  kcharge[47] = 0; // c7h15o2-2
  kcharge[48] = 0; // c7h15o2-3
  kcharge[49] = 0; // c7h15o2-4
  kcharge[50] = 0; // c7h14ooh4-3
  kcharge[51] = 0; // c7h14ooh1-3o2
  kcharge[52] = 0; // c7h14o1-3
  kcharge[53] = 0; // c7h14o2-4
  kcharge[54] = 0; // n2
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[55];
  CKCHRG(kchrg);

  for (int id = 0; id < 55; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] *
#if AMREX_DEVICE_COMPILE
             global_imw[id]
#else
             h_global_imw[id]
#endif
      ;
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: h
    species[0] = +0.00000000e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3];
    // species 1: h2
    species[1] = +8.24944200e-04 - 1.62860300e-06 * tc[1] -
                 2.84263020e-10 * tc[2] + 1.65394880e-12 * tc[3];
    // species 2: o
    species[2] = -1.63816600e-03 + 4.84206400e-06 * tc[1] -
                 4.80852900e-09 * tc[2] + 1.55627840e-12 * tc[3];
    // species 3: o2
    species[3] = +1.12748600e-03 - 1.15123000e-06 * tc[1] +
                 3.94163100e-09 * tc[2] - 3.50742160e-12 * tc[3];
    // species 5: h2o
    species[5] = +3.47498200e-03 - 1.27093920e-05 * tc[1] +
                 2.09057430e-08 * tc[2] - 1.00263520e-11 * tc[3];
    // species 6: co
    species[6] = +1.51194100e-03 - 7.76351000e-06 * tc[1] +
                 1.67458320e-08 * tc[2] - 9.89980400e-12 * tc[3];
    // species 7: co2
    species[7] = +9.92207200e-03 - 2.08182200e-05 * tc[1] +
                 2.06000610e-08 * tc[2] - 8.46912000e-12 * tc[3];
    // species 8: ch3
    species[8] = +1.11241000e-02 - 3.36044000e-05 * tc[1] +
                 4.86548700e-08 * tc[2] - 2.34598120e-11 * tc[3];
    // species 9: ch4
    species[9] = +1.74766800e-02 - 5.56681800e-05 * tc[1] +
                 9.14912400e-08 * tc[2] - 4.89572400e-11 * tc[3];
    // species 11: h2o2
    species[11] = +6.56922600e-03 - 2.97002600e-07 * tc[1] -
                  1.38774180e-08 * tc[2] + 9.88606000e-12 * tc[3];
    // species 12: ch2o
    species[12] = +1.26314400e-02 - 3.77633600e-05 * tc[1] +
                  6.15009300e-08 * tc[2] - 3.36529480e-11 * tc[3];
    // species 14: c2h4
    species[14] = +2.79616300e-02 - 6.77735400e-05 * tc[1] +
                  8.35545600e-08 * tc[2] - 3.89515160e-11 * tc[3];
    // species 15: c2h5
    species[15] = +8.71913300e-03 + 8.83967800e-06 * tc[1] +
                  2.80161090e-09 * tc[2] - 1.57110920e-11 * tc[3];
    // species 16: c2h2
    species[16] = +1.51904500e-02 - 3.23263800e-05 * tc[1] +
                  2.72369760e-08 * tc[2] - 7.65098400e-12 * tc[3];
    // species 17: c2h3
    species[17] = +7.37147600e-03 + 4.21974600e-06 * tc[1] -
                  3.96492600e-09 * tc[2] - 4.73913600e-12 * tc[3];
    // species 18: ch2co
    species[18] = +1.21187100e-02 - 4.69009200e-06 * tc[1] -
                  1.94000550e-08 * tc[2] + 1.56225960e-11 * tc[3];
    // species 19: hcco
    species[19] = +4.45347800e-03 + 4.53656600e-07 * tc[1] -
                  4.44628500e-09 * tc[2] + 9.00296800e-13 * tc[3];
    // species 20: ch3cho
    species[20] = +1.33699100e-02 + 9.34390600e-06 * tc[1] -
                  3.38442000e-08 * tc[2] + 1.70542640e-11 * tc[3];
    // species 24: nc3h7
    species[24] = +2.47892700e-02 + 3.62049800e-06 * tc[1] -
                  5.34979800e-08 * tc[2] + 3.43319840e-11 * tc[3];
    // species 38: c3h3
    species[38] = +1.10802800e-02 + 5.58664600e-07 * tc[1] -
                  1.64376360e-08 * tc[2] + 7.79851600e-12 * tc[3];
    // species 54: n2
    species[54] = +1.40824000e-03 - 7.92644400e-06 * tc[1] +
                  1.69245450e-08 * tc[2] - 9.77942000e-12 * tc[3];
  } else {
    // species 0: h
    species[0] = +0.00000000e+00 + 0.00000000e+00 * tc[1] +
                 0.00000000e+00 * tc[2] + 0.00000000e+00 * tc[3];
    // species 1: h2
    species[1] = +7.00064400e-04 - 1.12676580e-07 * tc[1] -
                 2.76947340e-11 * tc[2] + 6.33100800e-15 * tc[3];
    // species 2: o
    species[2] = -2.75506200e-05 - 6.20560600e-09 * tc[1] +
                 1.36532010e-11 * tc[2] - 1.74722080e-15 * tc[3];
    // species 3: o2
    species[3] = +6.13519700e-04 - 2.51768400e-07 * tc[1] +
                 5.32584300e-11 * tc[2] - 4.54574000e-15 * tc[3];
    // species 5: h2o
    species[5] = +3.05629300e-03 - 1.74605200e-06 * tc[1] +
                 3.60298800e-10 * tc[2] - 2.55664720e-14 * tc[3];
    // species 6: co
    species[6] = +1.44268900e-03 - 1.12616560e-06 * tc[1] +
                 3.05574300e-10 * tc[2] - 2.76438080e-14 * tc[3];
    // species 7: co2
    species[7] = +3.14016900e-03 - 2.55682200e-06 * tc[1] +
                 7.18199100e-10 * tc[2] - 6.67613200e-14 * tc[3];
    // species 8: ch3
    species[8] = +6.13797400e-03 - 4.46069000e-06 * tc[1] +
                 1.13554830e-09 * tc[2] - 9.80863600e-14 * tc[3];
    // species 9: ch4
    species[9] = +1.02372400e-02 - 7.75025800e-06 * tc[1] +
                 2.03567550e-09 * tc[2] - 1.80136920e-13 * tc[3];
    // species 11: h2o2
    species[11] = +4.33613600e-03 - 2.94937800e-06 * tc[1] +
                  7.04671200e-10 * tc[2] - 5.72661600e-14 * tc[3];
    // species 12: ch2o
    species[12] = +6.68132100e-03 - 5.25791000e-06 * tc[1] +
                  1.42114590e-09 * tc[2] - 1.28500680e-13 * tc[3];
    // species 14: c2h4
    species[14] = +1.14851800e-02 - 8.83677000e-06 * tc[1] +
                  2.35338030e-09 * tc[2] - 2.10673920e-13 * tc[3];
    // species 15: c2h5
    species[15] = +6.48407700e-03 - 1.28561300e-06 * tc[1] -
                  7.04363700e-10 * tc[2] + 1.55235080e-13 * tc[3];
    // species 16: c2h2
    species[16] = +5.37603900e-03 - 3.82563400e-06 * tc[1] +
                  9.85913700e-10 * tc[2] - 8.62684000e-14 * tc[3];
    // species 17: c2h3
    species[17] = +4.01774600e-03 - 7.93348000e-07 * tc[1] -
                  4.32380100e-10 * tc[2] + 9.51457600e-14 * tc[3];
    // species 18: ch2co
    species[18] = +5.80484000e-03 - 3.84190800e-06 * tc[1] +
                  8.38345500e-10 * tc[2] - 5.83547200e-14 * tc[3];
    // species 19: hcco
    species[19] = +2.00040000e-03 - 4.05521400e-07 * tc[1] -
                  3.12339600e-10 * tc[2] + 7.86066000e-14 * tc[3];
    // species 20: ch3cho
    species[20] = +1.07942400e-02 - 7.29106000e-06 * tc[1] +
                  1.62387360e-09 * tc[2] - 1.15873760e-13 * tc[3];
    // species 24: nc3h7
    species[24] = +1.57611300e-02 - 1.03464860e-05 * tc[1] +
                  2.23316760e-09 * tc[2] - 1.52999120e-13 * tc[3];
    // species 38: c3h3
    species[38] = +4.35719500e-03 - 8.21813400e-07 * tc[1] -
                  7.10616900e-10 * tc[2] + 1.75060800e-13 * tc[3];
    // species 54: n2
    species[54] = +1.48797700e-03 - 1.13695220e-06 * tc[1] +
                  3.02911200e-10 * tc[2] - 2.70134040e-14 * tc[3];
  }

  // species with midpoint at T=1357 kelvin
  if (T < 1357) {
    // species 4: oh
    species[4] = +2.02235804e-04 - 2.27092824e-07 * tc[1] +
                 7.27335447e-10 * tc[2] - 2.97460412e-13 * tc[3];
  } else {
    // species 4: oh
    species[4] = +1.31992406e-03 - 7.19449340e-07 * tc[1] +
                 1.27689240e-10 * tc[2] - 7.28192064e-15 * tc[3];
  }

  // species with midpoint at T=1390 kelvin
  if (T < 1390) {
    // species 10: ho2
    species[10] = +3.66767950e-03 - 1.86477024e-06 * tc[1] -
                  9.77558757e-10 * tc[2] + 6.04559648e-13 * tc[3];
    // species 32: ch3o2h
    species[32] = +1.90129767e-02 - 2.26772574e-05 * tc[1] +
                  1.02091996e-08 * tc[2] - 1.64732089e-12 * tc[3];
    // species 47: c7h15o2-2
    species[47] = +9.42381007e-02 - 1.33391021e-04 * tc[1] +
                  7.64386749e-08 * tc[2] - 1.65284442e-11 * tc[3];
    // species 48: c7h15o2-3
    species[48] = +9.42381007e-02 - 1.33391021e-04 * tc[1] +
                  7.64386749e-08 * tc[2] - 1.65284442e-11 * tc[3];
    // species 49: c7h15o2-4
    species[49] = +9.42381007e-02 - 1.33391021e-04 * tc[1] +
                  7.64386749e-08 * tc[2] - 1.65284442e-11 * tc[3];
  } else {
    // species 10: ho2
    species[10] = +2.38452835e-03 - 1.61269598e-06 * tc[1] +
                  3.72575169e-10 * tc[2] - 2.86560043e-14 * tc[3];
    // species 32: ch3o2h
    species[32] = +8.06817909e-03 - 5.54189842e-06 * tc[1] +
                  1.29399673e-09 * tc[2] - 1.00276858e-13 * tc[3];
    // species 47: c7h15o2-2
    species[47] = +3.43831688e-02 - 2.37426494e-05 * tc[1] +
                  5.56350723e-09 * tc[2] - 4.32209596e-13 * tc[3];
    // species 48: c7h15o2-3
    species[48] = +3.43831688e-02 - 2.37426494e-05 * tc[1] +
                  5.56350723e-09 * tc[2] - 4.32209596e-13 * tc[3];
    // species 49: c7h15o2-4
    species[49] = +3.43831688e-02 - 2.37426494e-05 * tc[1] +
                  5.56350723e-09 * tc[2] - 4.32209596e-13 * tc[3];
  }

  // species with midpoint at T=1384 kelvin
  if (T < 1384) {
    // species 13: c2h6
    species[13] = +2.40764754e-02 - 2.23786944e-05 * tc[1] +
                  6.25022703e-09 * tc[2] - 2.11947446e-13 * tc[3];
  } else {
    // species 13: c2h6
    species[13] = +1.29236361e-02 - 8.85054392e-06 * tc[1] +
                  2.06217518e-09 * tc[2] - 1.59560693e-13 * tc[3];
  }

  // species with midpoint at T=1400 kelvin
  if (T < 1400) {
    // species 21: c3h4-a
    species[21] = +1.63343700e-02 - 3.52990000e-06 * tc[1] -
                  1.39420950e-08 * tc[2] + 6.91652400e-12 * tc[3];
  } else {
    // species 21: c3h4-a
    species[21] = +5.30213800e-03 - 7.40223600e-07 * tc[1] -
                  9.07915800e-10 * tc[2] + 2.03583240e-13 * tc[3];
  }

  // species with midpoint at T=1388 kelvin
  if (T < 1388) {
    // species 22: c3h6
    species[22] = +2.89107662e-02 - 3.09773616e-05 * tc[1] +
                  1.16644263e-08 * tc[2] - 1.35156141e-12 * tc[3];
    // species 46: c7h15o2-1
    species[46] = +8.84061706e-02 - 1.15972252e-04 * tc[1] +
                  6.10724067e-08 * tc[2] - 1.22584134e-11 * tc[3];
    // species 51: c7h14ooh1-3o2
    species[51] = +1.06229796e-01 - 1.60554044e-04 * tc[1] +
                  9.70947279e-08 * tc[2] - 2.18340189e-11 * tc[3];
  } else {
    // species 22: c3h6
    species[22] = +1.37023634e-02 - 9.32499466e-06 * tc[1] +
                  2.16376321e-09 * tc[2] - 1.66948050e-13 * tc[3];
    // species 46: c7h15o2-1
    species[46] = +3.50803587e-02 - 2.42357602e-05 * tc[1] +
                  5.68082418e-09 * tc[2] - 4.41416500e-13 * tc[3];
    // species 51: c7h14ooh1-3o2
    species[51] = +3.40055996e-02 - 2.36831712e-05 * tc[1] +
                  5.58181041e-09 * tc[2] - 4.35404048e-13 * tc[3];
  }

  // species with midpoint at T=1398 kelvin
  if (T < 1398) {
    // species 23: c4h6
    species[23] = +4.78706062e-02 - 8.30893600e-05 * tc[1] +
                  5.74648656e-08 * tc[2] - 1.42863403e-11 * tc[3];
  } else {
    // species 23: c4h6
    species[23] = +1.37163965e-02 - 9.39431566e-06 * tc[1] +
                  2.18908151e-09 * tc[2] - 1.69394481e-13 * tc[3];
  }

  // species with midpoint at T=1392 kelvin
  if (T < 1392) {
    // species 25: c4h7
    species[25] = +4.26511243e-02 - 5.81958746e-05 * tc[1] +
                  3.16211742e-08 * tc[2] - 6.40239416e-12 * tc[3];
    // species 26: c4h8-1
    species[26] = +4.52580978e-02 - 5.87317118e-05 * tc[1] +
                  3.00661308e-08 * tc[2] - 5.72766720e-12 * tc[3];
    // species 29: c5h9
    species[29] = +5.57608487e-02 - 7.40287856e-05 * tc[1] +
                  3.80651703e-08 * tc[2] - 7.14155340e-12 * tc[3];
    // species 30: c5h10-1
    species[30] = +5.74218294e-02 - 7.48973780e-05 * tc[1] +
                  3.82094967e-08 * tc[2] - 7.18439156e-12 * tc[3];
  } else {
    // species 25: c4h7
    species[25] = +1.60483196e-02 - 1.09300458e-05 * tc[1] +
                  2.53782316e-09 * tc[2] - 1.95909096e-13 * tc[3];
    // species 26: c4h8-1
    species[26] = +1.80617877e-02 - 1.23218606e-05 * tc[1] +
                  2.86395888e-09 * tc[2] - 2.21235856e-13 * tc[3];
    // species 29: c5h9
    species[29] = +2.07128899e-02 - 1.41392123e-05 * tc[1] +
                  3.28821399e-09 * tc[2] - 2.54128883e-13 * tc[3];
    // species 30: c5h10-1
    species[30] = +2.24072471e-02 - 1.52669605e-05 * tc[1] +
                  3.54566898e-09 * tc[2] - 2.73754056e-13 * tc[3];
  }

  // species with midpoint at T=1391 kelvin
  if (T < 1391) {
    // species 27: ch3coch2
    species[27] = +3.01407085e-02 - 3.87011104e-05 * tc[1] +
                  1.91459710e-08 * tc[2] - 3.46441272e-12 * tc[3];
    // species 45: nc7h16
    species[45] = +8.54355820e-02 - 1.05069357e-04 * tc[1] +
                  4.88837163e-08 * tc[2] - 8.09579700e-12 * tc[3];
  } else {
    // species 27: ch3coch2
    species[27] = +1.16494161e-02 - 8.02011074e-06 * tc[1] +
                  1.87561574e-09 * tc[2] - 1.45513745e-13 * tc[3];
    // species 45: nc7h16
    species[45] = +3.47675750e-02 - 2.36814258e-05 * tc[1] +
                  5.49895434e-09 * tc[2] - 4.24521064e-13 * tc[3];
  }

  // species with midpoint at T=1378 kelvin
  if (T < 1378) {
    // species 28: c2h5cho
    species[28] = +2.95501264e-02 - 3.04892504e-05 * tc[1] +
                  1.04851184e-08 * tc[2] - 9.55586508e-13 * tc[3];
    // species 40: nc3h7cho
    species[40] = +4.19240315e-02 - 4.70297558e-05 * tc[1] +
                  1.88074102e-08 * tc[2] - 2.43777563e-12 * tc[3];
  } else {
    // species 28: c2h5cho
    species[28] = +1.39641989e-02 - 9.52496002e-06 * tc[1] +
                  2.21431712e-09 * tc[2] - 1.71103801e-13 * tc[3];
    // species 40: nc3h7cho
    species[40] = +1.81652474e-02 - 1.23568892e-05 * tc[1] +
                  2.86794062e-09 * tc[2] - 2.21377183e-13 * tc[3];
  }

  // species with midpoint at T=1385 kelvin
  if (T < 1385) {
    // species 31: ch3o2
    species[31] = +1.00873599e-02 - 6.43012368e-06 * tc[1] +
                  6.28227801e-10 * tc[2] + 1.67335641e-13 * tc[3];
    // species 36: pc4h9o2
    species[36] = +5.15513163e-02 - 6.56568800e-05 * tc[1] +
                  3.39194580e-08 * tc[2] - 6.80474424e-12 * tc[3];
  } else {
    // species 31: ch3o2
    species[31] = +7.90728626e-03 - 5.36492468e-06 * tc[1] +
                  1.24167401e-09 * tc[2] - 9.56029320e-14 * tc[3];
    // species 36: pc4h9o2
    species[36] = +2.15210910e-02 - 1.48981803e-05 * tc[1] +
                  3.49674213e-09 * tc[2] - 2.71954244e-13 * tc[3];
  }

  // species with midpoint at T=1402 kelvin
  if (T < 1402) {
    // species 33: c2h3co
    species[33] = +3.15273972e-02 - 6.00437870e-05 * tc[1] +
                  4.44501336e-08 * tc[2] - 1.15188612e-11 * tc[3];
  } else {
    // species 33: c2h3co
    species[33] = +7.91296900e-03 - 5.34396560e-06 * tc[1] +
                  1.23334629e-09 * tc[2] - 9.47915924e-14 * tc[3];
  }

  // species with midpoint at T=1393 kelvin
  if (T < 1393) {
    // species 34: c2h3cho
    species[34] = +3.54321417e-02 - 5.89872648e-05 * tc[1] +
                  3.84300372e-08 * tc[2] - 9.04576432e-12 * tc[3];
  } else {
    // species 34: c2h3cho
    species[34] = +9.48963321e-03 - 6.58621058e-06 * tc[1] +
                  1.54883761e-09 * tc[2] - 1.20634916e-13 * tc[3];
  }

  // species with midpoint at T=1387 kelvin
  if (T < 1387) {
    // species 35: c4h8ooh1-3o2
    species[35] = +7.04994620e-02 - 1.13395765e-04 * tc[1] +
                  7.27883253e-08 * tc[2] - 1.71886184e-11 * tc[3];
  } else {
    // species 35: c4h8ooh1-3o2
    species[35] = +2.05474775e-02 - 1.43815270e-05 * tc[1] +
                  3.40084608e-09 * tc[2] - 2.65897753e-13 * tc[3];
  }

  // species with midpoint at T=1397 kelvin
  if (T < 1397) {
    // species 37: c3h5-a
    species[37] = +3.34559100e-02 - 5.06802054e-05 * tc[1] +
                  3.08597262e-08 * tc[2] - 6.93033360e-12 * tc[3];
  } else {
    // species 37: c3h5-a
    species[37] = +1.12695483e-02 - 7.67585728e-06 * tc[1] +
                  1.78217736e-09 * tc[2] - 1.37567212e-13 * tc[3];
  }

  // species with midpoint at T=1386 kelvin
  if (T < 1386) {
    // species 39: nc4ket13
    species[39] = +5.86936745e-02 - 8.99211790e-05 * tc[1] +
                  5.49600390e-08 * tc[2] - 1.24706148e-11 * tc[3];
  } else {
    // species 39: nc4ket13
    species[39] = +1.80940566e-02 - 1.26612646e-05 * tc[1] +
                  2.99358120e-09 * tc[2] - 2.34030583e-13 * tc[3];
  }

  // species with midpoint at T=1383 kelvin
  if (T < 1383) {
    // species 41: c2h5coch2
    species[41] = +4.39486258e-02 - 5.94004842e-05 * tc[1] +
                  3.16485939e-08 * tc[2] - 6.34395076e-12 * tc[3];
  } else {
    // species 41: c2h5coch2
    species[41] = +1.57866459e-02 - 1.10105837e-05 * tc[1] +
                  2.59761162e-09 * tc[2] - 2.02765332e-13 * tc[3];
  }

  // species with midpoint at T=1389 kelvin
  if (T < 1389) {
    // species 42: nc3h7coch2
    species[42] = +5.68162532e-02 - 7.98225562e-05 * tc[1] +
                  4.58014542e-08 * tc[2] - 9.96884188e-12 * tc[3];
    // species 50: c7h14ooh4-3
    species[50] = +9.25107196e-02 - 1.25071967e-04 * tc[1] +
                  6.53641170e-08 * tc[2] - 1.25088159e-11 * tc[3];
  } else {
    // species 42: nc3h7coch2
    species[42] = +2.14093466e-02 - 1.47211923e-05 * tc[1] +
                  3.43970448e-09 * tc[2] - 2.66685089e-13 * tc[3];
    // species 50: c7h14ooh4-3
    species[50] = +3.27527893e-02 - 2.25983540e-05 * tc[1] +
                  5.29333947e-09 * tc[2] - 4.11147780e-13 * tc[3];
  }

  // species with midpoint at T=1381 kelvin
  if (T < 1381) {
    // species 43: nc4h9cho
    species[43] = +5.43541416e-02 - 6.42041302e-05 * tc[1] +
                  2.80732068e-08 * tc[2] - 4.26755728e-12 * tc[3];
  } else {
    // species 43: nc4h9cho
    species[43] = +2.25684519e-02 - 1.53526318e-05 * tc[1] +
                  3.56308107e-09 * tc[2] - 2.75018222e-13 * tc[3];
  }

  // species with midpoint at T=1382 kelvin
  if (T < 1382) {
    // species 44: nc4h9co
    species[44] = +4.93682376e-02 - 5.79766164e-05 * tc[1] +
                  2.52859144e-08 * tc[2] - 3.87314869e-12 * tc[3];
  } else {
    // species 44: nc4h9co
    species[44] = +2.07991920e-02 - 1.42357578e-05 * tc[1] +
                  3.31679925e-09 * tc[2] - 2.56678875e-13 * tc[3];
  }

  // species with midpoint at T=1395 kelvin
  if (T < 1395) {
    // species 52: c7h14o1-3
    species[52] = +1.00155088e-01 - 1.45987171e-04 * tc[1] +
                  8.38032810e-08 * tc[2] - 1.76898278e-11 * tc[3];
  } else {
    // species 52: c7h14o1-3
    species[52] = +3.32510472e-02 - 2.28915530e-05 * tc[1] +
                  5.35366605e-09 * tc[2] - 4.15364448e-13 * tc[3];
  }

  // species with midpoint at T=1399 kelvin
  if (T < 1399) {
    // species 53: c7h14o2-4
    species[53] = +1.01846577e-01 - 1.52009247e-04 * tc[1] +
                  8.89614060e-08 * tc[2] - 1.89941748e-11 * tc[3];
  } else {
    // species 53: c7h14o2-4
    species[53] = +3.25585391e-02 - 2.23249812e-05 * tc[1] +
                  5.20720974e-09 * tc[2] - 4.03252860e-13 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

  // Analytical Jacobian with QSSA is only supported with symbolic
  // implementation. Re-build in ceptr with -qsj flag.
  amrex::Abort();
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[55];

  for (int k = 0; k < 55; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 55; k++) {
    J[3080 + k] *= 1.e-6;
    J[k * 56 + 55] *= 1.e6;
  }
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(amrex::Real* J, amrex::Real* sc, amrex::Real T, const int consP)
{
#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;
  amrex::Real g_RT[55];
  amrex::Real h_RT[55];
  amrex::Real g_RT_qss[33];
  amrex::Real h_RT_qss[33];
  amrex::Real sc_qss[33];
  amrex::Real kf_qss[397];
  amrex::Real T_pert1, pertT;
  amrex::Real wdot_pert1[55], wdot[55];

  // dwdot/dT by finite difference
  pertT = 1e-2;
  T_pert1 = T + pertT;

  tc[0] = log(T_pert1);
  tc[1] = T_pert1;
  tc[2] = T_pert1 * T_pert1;
  tc[3] = T_pert1 * T_pert1 * T_pert1;
  tc[4] = T_pert1 * T_pert1 * T_pert1 * T_pert1;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot_pert1, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[397], tc, invT);
  tc[0] = log(T);
  tc[1] = T;
  tc[2] = T * T;
  tc[3] = T * T * T;
  tc[4] = T * T * T * T;
  invT = 1.0 / tc[1];
  productionRate_light(
    wdot, sc, g_RT, g_RT_qss, sc_qss, kf_qss, &J[0], &J[397], tc, invT);

  // compute the species enthalpy
  speciesEnthalpy(h_RT, tc);
  for (int i = 0; i < 3136; i++) {
    J[i] = 0.0;
  }
  // Species terms
  amrex::Real x1 = -kf_qss[108] * sc[3] - kf_qss[154] * sc[1] -
                   kf_qss[155] * sc[4] - kf_qss[158] * sc[5] + 10.0e-13;
  const amrex::Real x5 = (kf_qss[156] * sc[16] + 10.0e-13) / x1;
  amrex::Real x7 = kf_qss[295] * sc[45] + 10.0e-13;
  amrex::Real x19 =
    -kf_qss[212] * sc[0] - kf_qss[222] * sc[1] - kf_qss[230] * sc[4] -
    kf_qss[238] * sc[5] - kf_qss[246] * sc[11] - kf_qss[254] * sc[9] -
    kf_qss[262] * sc[10] - kf_qss[270] * sc[13] - kf_qss[278] * sc[14] -
    kf_qss[286] * sc[32] - kf_qss[292] * sc[45] - kf_qss[296] * sc[45] -
    kf_qss[298] * sc[45] - kf_qss[309] - kf_qss[311] - kf_qss[319] * sc[3] -
    kf_qss[324] - kf_qss[344] * sc[3] + 10.0e-13;
  amrex::Real x21 = kf_qss[311] + kf_qss[319] * sc[3] + 10.0e-13;
  const amrex::Real x22 = (1.0 / ((-kf_qss[354] - kf_qss[363] + 10.0e-13)));
  const amrex::Real x24 = x22 * (kf_qss[364] * sc[10] + 10.0e-13);
  const amrex::Real x30 =
    -kf_qss[308] * sc[0] - kf_qss[312] * sc[0] - kf_qss[318] * sc[10] -
    kf_qss[320] * sc[10] - kf_qss[330] * sc[4] - kf_qss[332] * sc[2] -
    kf_qss[335] - kf_qss[364] * sc[10] - kf_qss[366] * sc[10] + 10.0e-13;
  const amrex::Real x34 = -x24 * (kf_qss[363] + 10.0e-13) / x30 + 1;
  const amrex::Real x36 = 1 / (x30 * x34);
  const amrex::Real x37 = x21 * x36;
  const amrex::Real x38 = kf_qss[312] * sc[0] + kf_qss[320] * sc[10] + 10.0e-13;
  amrex::Real x39 = x38 / x19;
  amrex::Real x41 = (1.0 / ((-x37 * x39 + 1)));
  const amrex::Real x47 =
    -kf_qss[210] * sc[0] - kf_qss[220] * sc[1] - kf_qss[228] * sc[4] -
    kf_qss[236] * sc[5] - kf_qss[244] * sc[11] - kf_qss[252] * sc[9] -
    kf_qss[260] * sc[10] - kf_qss[268] * sc[13] - kf_qss[276] * sc[14] -
    kf_qss[284] * sc[32] - kf_qss[290] * sc[45] - kf_qss[294] * sc[45] -
    kf_qss[297] * sc[45] - kf_qss[303] - kf_qss[305] - kf_qss[307] -
    kf_qss[315] * sc[3] - kf_qss[317] * sc[3] - kf_qss[322] - kf_qss[326] -
    kf_qss[342] * sc[3] + 10.0e-13;
  amrex::Real x49 = kf_qss[308] * sc[0] + kf_qss[318] * sc[10] + 10.0e-13;
  amrex::Real x50 = x49 / x47;
  amrex::Real x52 = -x37 * x50 + (kf_qss[298] * sc[45] + 10.0e-13) / x47;
  amrex::Real x53 = x41 * x52;
  const amrex::Real x54 = x53 / x19;
  amrex::Real x57 = kf_qss[293] * sc[45] + kf_qss[325] + 10.0e-13;
  const amrex::Real x59 = (1.0 / ((-kf_qss[348] - kf_qss[359] + 10.0e-13)));
  const amrex::Real x61 = x59 * (kf_qss[360] * sc[10] + 10.0e-13);
  amrex::Real x68 = -kf_qss[302] * sc[0] - kf_qss[306] * sc[0] -
                    kf_qss[314] * sc[10] - kf_qss[316] * sc[10] -
                    kf_qss[329] * sc[4] - kf_qss[331] * sc[2] - kf_qss[333] -
                    kf_qss[360] * sc[10] - kf_qss[362] * sc[10] + 10.0e-13;
  const amrex::Real x72 = (1.0 / ((-kf_qss[352] - kf_qss[361] + 10.0e-13)));
  const amrex::Real x73 = x72 * (kf_qss[362] * sc[10] + 10.0e-13);
  const amrex::Real x77 =
    (1.0 / ((-x61 * (kf_qss[359] + 10.0e-13) / x68 + 1 -
             x73 * (kf_qss[361] + 10.0e-13) / x68)));
  amrex::Real x79 = kf_qss[301] + kf_qss[313] * sc[3] + 10.0e-13;
  amrex::Real x80 = x79 / x68;
  const amrex::Real x81 = x77 * x80;
  amrex::Real x82 = kf_qss[306] * sc[0] + kf_qss[316] * sc[10] + 10.0e-13;
  amrex::Real x83 = x82 / x47;
  amrex::Real x85 = -x54 * x7 - x81 * x83 + x57 / x47;
  amrex::Real x86 = kf_qss[307] + kf_qss[317] * sc[3] + 10.0e-13;
  const amrex::Real x87 = x36 * x86;
  amrex::Real x91 = -x39 * x87 + (kf_qss[297] * sc[45] + 10.0e-13) / x19;
  amrex::Real x92 = kf_qss[305] + kf_qss[315] * sc[3] + 10.0e-13;
  const amrex::Real x94 = x77 * x92 / x68;
  const amrex::Real x95 = -x50 * x87 - x53 * x91 - x83 * x94 + 1;
  amrex::Real x97 = x41 * x91;
  amrex::Real x101 =
    -kf_qss[206] * sc[0] - kf_qss[216] * sc[1] - kf_qss[224] * sc[4] -
    kf_qss[232] * sc[5] - kf_qss[240] * sc[11] - kf_qss[248] * sc[9] -
    kf_qss[256] * sc[10] - kf_qss[264] * sc[13] - kf_qss[272] * sc[14] -
    kf_qss[280] * sc[32] - kf_qss[287] * sc[45] - kf_qss[289] * sc[45] -
    kf_qss[291] * sc[45] - kf_qss[321] - kf_qss[323] - kf_qss[327] -
    kf_qss[338] * sc[3] + 10.0e-13;
  amrex::Real x103 = kf_qss[292] * sc[45] + kf_qss[324] + 10.0e-13;
  amrex::Real x104 = x103 / x101;
  amrex::Real x106 =
    -x104 * x97 + (kf_qss[290] * sc[45] + kf_qss[322] + 10.0e-13) / x101;
  amrex::Real x107 = x106 / x95;
  const amrex::Real x112 = x41 / x19;
  const amrex::Real x113 = x112 * x7;
  amrex::Real x115 = -x104 * x113 - x107 * x85 +
                     (kf_qss[288] * sc[45] + kf_qss[328] + 10.0e-13) / x101;
  amrex::Real x116 = kf_qss[291] * sc[45] + kf_qss[323] + 10.0e-13;
  amrex::Real x118 = kf_qss[289] * sc[45] + kf_qss[321] + 10.0e-13;
  amrex::Real x120 = -x116 * x54 + x118 / x47;
  const amrex::Real x121 = x112 * x116;
  amrex::Real x122 = -x104 * x121 - x107 * x120 + 1;
  amrex::Real x124 =
    -kf_qss[208] * sc[0] - kf_qss[218] * sc[1] - kf_qss[226] * sc[4] -
    kf_qss[234] * sc[5] - kf_qss[242] * sc[11] - kf_qss[250] * sc[9] -
    kf_qss[258] * sc[10] - kf_qss[266] * sc[13] - kf_qss[274] * sc[14] -
    kf_qss[282] * sc[32] - kf_qss[288] * sc[45] - kf_qss[293] * sc[45] -
    kf_qss[295] * sc[45] - kf_qss[299] - kf_qss[301] - kf_qss[313] * sc[3] -
    kf_qss[325] - kf_qss[328] - kf_qss[340] * sc[3] + 10.0e-13;
  amrex::Real x126 = kf_qss[296] * sc[45] + 10.0e-13;
  amrex::Real x127 = x126 / x124;
  amrex::Real x129 = kf_qss[302] * sc[0] + kf_qss[314] * sc[10] + 10.0e-13;
  amrex::Real x130 = x129 / x124;
  amrex::Real x131 = -x127 * x97 - x130 * x94 +
                     (kf_qss[294] * sc[45] + kf_qss[326] + 10.0e-13) / x124;
  amrex::Real x132 = x131 / x95;
  amrex::Real x134 = -x120 * x132 - x121 * x127 +
                     (kf_qss[287] * sc[45] + kf_qss[327] + 10.0e-13) / x124;
  amrex::Real x135 = x134 / x122;
  amrex::Real x136 = -x113 * x127 - x115 * x135 - x130 * x81 - x132 * x85 + 1;
  amrex::Real x139 = kf_qss[300] * sc[22] + 10.0e-13;
  const amrex::Real x141 = x139 / (x124 * x136);
  const amrex::Real x143 = -kf_qss[384] * sc[4] - kf_qss[390] + 10.0e-13;
  const amrex::Real x146 = (kf_qss[383] + 10.0e-13) / x143;
  const amrex::Real x147 = (1.0 / ((-kf_qss[375] - kf_qss[383] + 10.0e-13)));
  const amrex::Real x151 =
    (1.0 / ((-x146 * x147 * (kf_qss[384] * sc[4] + 10.0e-13) + 1)));
  const amrex::Real x153 = x147 * (kf_qss[376] * sc[3] + 10.0e-13);
  const amrex::Real x157 = (1.0 / ((-kf_qss[377] - kf_qss[385] + 10.0e-13)));
  const amrex::Real x158 = -kf_qss[386] * sc[4] - kf_qss[391] + 10.0e-13;
  const amrex::Real x161 = (kf_qss[385] + 10.0e-13) / x158;
  const amrex::Real x164 =
    (1.0 / ((-x157 * x161 * (kf_qss[386] * sc[4] + 10.0e-13) + 1)));
  const amrex::Real x166 = x157 * (kf_qss[378] * sc[3] + 10.0e-13);
  const amrex::Real x170 = (1.0 / ((-kf_qss[379] - kf_qss[387] + 10.0e-13)));
  const amrex::Real x171 = -kf_qss[388] * sc[4] - kf_qss[392] + 10.0e-13;
  const amrex::Real x174 = (kf_qss[387] + 10.0e-13) / x171;
  const amrex::Real x177 =
    (1.0 / ((-x170 * x174 * (kf_qss[388] * sc[4] + 10.0e-13) + 1)));
  const amrex::Real x179 = x170 * (kf_qss[380] * sc[3] + 10.0e-13);
  const amrex::Real x181 =
    (x104 * x113 + x107 * x85 -
     (kf_qss[288] * sc[45] + kf_qss[328] + 10.0e-13) / x101) /
    x122;
  const amrex::Real x182 = (x54 * x7 + x81 * x83 - x57 / x47) / x95;
  const amrex::Real x183 = (x116 * x54 - x118 / x47) / x95;
  const amrex::Real x184 =
    x41 * (x39 * x87 - (kf_qss[297] * sc[45] + 10.0e-13) / x19);
  amrex::Real x185 =
    sc[0] + sc[10] + sc[11] + sc[12] + sc[13] + sc[14] + sc[15] + sc[16] +
    sc[17] + sc[18] + sc[19] + sc[20] + sc[21] + sc[22] + sc[23] + sc[24] +
    sc[25] + sc[26] + sc[27] + sc[28] + sc[29] + sc[2] + sc[30] + sc[31] +
    sc[32] + sc[33] + sc[34] + sc[35] + sc[36] + sc[37] + sc[38] + sc[39] +
    sc[3] + sc[40] + sc[41] + sc[42] + sc[43] + sc[44] + sc[45] + sc[46] +
    sc[47] + sc[48] + sc[49] + sc[4] + sc[50] + sc[51] + sc[52] + sc[53] +
    sc[54] + sc[8] + sc[9];
  const amrex::Real x186 = sc[1] + sc[5] + sc[6] + sc[7] + x185;
  amrex::Real x188 = -kf_qss[5] * sc[0];
  amrex::Real x189 = -kf_qss[2] + x188;
  amrex::Real x190 = -kf_qss[16] - kf_qss[5] * x186 + x189;
  const amrex::Real x194 =
    (kf_qss[153] * sc[0] * sc[38] + kf_qss[157] * sc[38] * sc[4] + 10.0e-13) /
    x1;
  const amrex::Real x196 =
    2.5 * sc[1] + 12.0 * sc[5] + 1.9 * sc[6] + 3.8 * sc[7] + x185;
  amrex::Real x197 =
    -kf_qss[10] * sc[4] - kf_qss[110] * sc[32] - kf_qss[13] * sc[8] -
    kf_qss[156] * sc[16] - kf_qss[160] * sc[18] - kf_qss[16] * sc[0] -
    kf_qss[170] * sc[7] - kf_qss[18] * sc[2] - kf_qss[21] * sc[5] -
    kf_qss[23] * sc[1] - kf_qss[25] * sc[4] - kf_qss[29] * sc[9] -
    kf_qss[2] * x196 - kf_qss[30] * sc[8] - kf_qss[32] * sc[10] -
    kf_qss[36] * sc[3] - kf_qss[39] * sc[11] - kf_qss[44] * sc[12] -
    kf_qss[46] * sc[8] - kf_qss[5] * sc[0] * x186 - kf_qss[60] * sc[15] -
    kf_qss[82] * sc[15] - kf_qss[92] * sc[2] + 10.0e-13;
  amrex::Real x200 = (kf_qss[155] * sc[4] + 10.0e-13) / x197;
  amrex::Real x224 =
    kf_qss[109] * sc[12] * sc[31] + kf_qss[11] * sc[5] * sc[6] +
    kf_qss[12] * sc[14] * sc[2] + kf_qss[159] * sc[38] * sc[3] +
    kf_qss[169] * sc[19] * sc[3] + kf_qss[17] * sc[1] * sc[6] +
    kf_qss[19] * sc[4] * sc[6] + kf_qss[20] * sc[12] * sc[4] +
    kf_qss[22] * sc[0] * sc[12] + kf_qss[24] * sc[12] * sc[2] +
    kf_qss[28] * sc[12] * sc[8] + kf_qss[31] * sc[6] * sc[9] +
    kf_qss[33] * sc[12] * sc[3] + kf_qss[37] * sc[10] * sc[6] +
    kf_qss[38] * sc[10] * sc[12] + kf_qss[3] * sc[0] * sc[6] * x196 +
    2.0 * kf_qss[40] * sc[19] * sc[4] + kf_qss[43] * sc[17] * sc[3] +
    kf_qss[45] * sc[20] + kf_qss[4] * sc[12] * x186 +
    kf_qss[59] * sc[22] * sc[2] + kf_qss[81] * sc[28] +
    kf_qss[93] * sc[0] * sc[7] + 10.0e-13;
  amrex::Real x228 = (x194 * x200 - x224 / x197) /
                     ((1 - x5 * (kf_qss[155] * sc[4] + 10.0e-13) / x197) *
                      (1 - x5 * (kf_qss[155] * sc[4] + 10.0e-13) / x197));
  amrex::Real x231 = x5 * (kf_qss[155] * sc[4] + 10.0e-13) / ((x197) * (x197));
  amrex::Real x232 = x228 * x231;
  const amrex::Real x233 = x190 * x232;
  amrex::Real x234 =
    (1.0 / ((1 - x5 * (kf_qss[155] * sc[4] + 10.0e-13) / x197)));
  amrex::Real x238 = kf_qss[3] * sc[0] * sc[6] + kf_qss[4] * sc[12];
  amrex::Real x239 =
    x194 * (kf_qss[155] * sc[4] + 10.0e-13) / ((x197) * (x197));
  amrex::Real x240 = x224 / ((x197) * (x197));
  const amrex::Real x242 = kf_qss[153] * sc[38] / x1;
  x190 = x234 * (-x190 * x239 + x190 * x240 + x200 * x242 -
                 (kf_qss[22] * sc[12] + kf_qss[3] * sc[6] * x196 +
                  kf_qss[93] * sc[7] + x238) /
                   x197);
  amrex::Real x245 = (kf_qss[156] * sc[16] + 10.0e-13) / ((x1) * (x1));
  const amrex::Real x248 =
    x228 * (-kf_qss[154] * x200 * x245 +
            x231 * (-kf_qss[23] - 2.5 * kf_qss[2] + x188));
  amrex::Real x249 =
    (kf_qss[153] * sc[0] * sc[38] + kf_qss[157] * sc[38] * sc[4] + 10.0e-13) /
    ((x1) * (x1));
  const amrex::Real x251 =
    x234 *
    (kf_qss[154] * x200 * x249 - x239 * (-kf_qss[23] - 2.5 * kf_qss[2] + x188) +
     x240 * (-kf_qss[23] - 2.5 * kf_qss[2] + x188) -
     (kf_qss[17] * sc[6] + 2.5 * kf_qss[3] * sc[0] * sc[6] +
      kf_qss[4] * sc[12]) /
       x197);
  const amrex::Real x253 = x232 * (-kf_qss[18] - kf_qss[92] + x189);
  const amrex::Real x254 =
    x234 *
    (-x239 * (-kf_qss[18] - kf_qss[92] + x189) +
     x240 * (-kf_qss[18] - kf_qss[92] + x189) -
     (kf_qss[12] * sc[14] + kf_qss[24] * sc[12] + kf_qss[59] * sc[22] + x238) /
       x197);
  const amrex::Real x256 =
    x228 * (-kf_qss[108] * x200 * x245 + x231 * (-kf_qss[36] + x189));
  const amrex::Real x258 =
    x234 * (kf_qss[108] * x200 * x249 - x239 * (-kf_qss[36] + x189) +
            x240 * (-kf_qss[36] + x189) -
            (kf_qss[159] * sc[38] + kf_qss[169] * sc[19] + kf_qss[33] * sc[12] +
             kf_qss[43] * sc[17] + x238) /
              x197);
  const amrex::Real x260 =
    x228 * (-kf_qss[155] * x200 * x245 - kf_qss[155] * x5 / x197 +
            x231 * (-kf_qss[10] - kf_qss[25] + x189));
  const amrex::Real x263 =
    x234 * (kf_qss[155] * x194 / x197 + kf_qss[155] * x200 * x249 +
            kf_qss[157] * sc[38] * x200 / x1 -
            x239 * (-kf_qss[10] - kf_qss[25] + x189) +
            x240 * (-kf_qss[10] - kf_qss[25] + x189) -
            (kf_qss[19] * sc[6] + kf_qss[20] * sc[12] +
             2.0 * kf_qss[40] * sc[19] + x238) /
              x197);
  const amrex::Real x265 =
    x228 * (-kf_qss[158] * x200 * x245 +
            x231 * (-kf_qss[21] - 12.0 * kf_qss[2] + x188));
  const amrex::Real x267 =
    x234 * (kf_qss[158] * x200 * x249 -
            x239 * (-kf_qss[21] - 12.0 * kf_qss[2] + x188) +
            x240 * (-kf_qss[21] - 12.0 * kf_qss[2] + x188) -
            (kf_qss[11] * sc[6] + 12.0 * kf_qss[3] * sc[0] * sc[6] +
             kf_qss[4] * sc[12]) /
              x197);
  const amrex::Real x269 = x232 * (-1.9 * kf_qss[2] + x188);
  const amrex::Real x270 =
    x234 *
    (-x239 * (-1.9 * kf_qss[2] + x188) + x240 * (-1.9 * kf_qss[2] + x188) -
     (kf_qss[11] * sc[5] + kf_qss[17] * sc[1] + kf_qss[19] * sc[4] +
      kf_qss[31] * sc[9] + kf_qss[37] * sc[10] +
      1.9 * kf_qss[3] * sc[0] * sc[6] + kf_qss[3] * sc[0] * x196 +
      kf_qss[4] * sc[12]) /
       x197);
  const amrex::Real x272 = x232 * (-kf_qss[170] - 3.8 * kf_qss[2] + x188);
  x188 = x234 * (-x239 * (-kf_qss[170] - 3.8 * kf_qss[2] + x188) +
                 x240 * (-kf_qss[170] - 3.8 * kf_qss[2] + x188) -
                 (3.8 * kf_qss[3] * sc[0] * sc[6] + kf_qss[4] * sc[12] +
                  kf_qss[93] * sc[0]) /
                   x197);
  amrex::Real x274 = -kf_qss[13] - kf_qss[30] - kf_qss[46] + x189;
  const amrex::Real x275 = x232 * x274;
  x274 =
    x234 * (-x239 * x274 + x240 * x274 - (kf_qss[28] * sc[12] + x238) / x197);
  const amrex::Real x278 = x232 * (-kf_qss[29] + x189);
  const amrex::Real x279 =
    x234 * (-x239 * (-kf_qss[29] + x189) + x240 * (-kf_qss[29] + x189) -
            (kf_qss[31] * sc[6] + x238) / x197);
  const amrex::Real x281 = x232 * (-kf_qss[32] + x189);
  const amrex::Real x282 =
    x234 * (-x239 * (-kf_qss[32] + x189) + x240 * (-kf_qss[32] + x189) -
            (kf_qss[37] * sc[6] + kf_qss[38] * sc[12] + x238) / x197);
  const amrex::Real x284 = x232 * (-kf_qss[39] + x189);
  amrex::Real x285 = -x238 / x197;
  const amrex::Real x286 =
    x234 * (-x239 * (-kf_qss[39] + x189) + x240 * (-kf_qss[39] + x189) + x285);
  const amrex::Real x288 = x232 * (-kf_qss[44] + x189);
  const amrex::Real x289 =
    x234 * (-x239 * (-kf_qss[44] + x189) + x240 * (-kf_qss[44] + x189) -
            (kf_qss[109] * sc[31] + kf_qss[20] * sc[4] + kf_qss[22] * sc[0] +
             kf_qss[24] * sc[2] + kf_qss[28] * sc[8] + kf_qss[33] * sc[3] +
             kf_qss[38] * sc[10] + kf_qss[4] * x186 + x238) /
              x197);
  const amrex::Real x290 = x189 * x232;
  amrex::Real x292 = -x189 * x239 + x189 * x240;
  const amrex::Real x293 = x234 * (x285 + x292);
  const amrex::Real x294 = -x290 + x293;
  const amrex::Real x295 = x234 * (x292 - (kf_qss[12] * sc[2] + x238) / x197);
  const amrex::Real x297 = x232 * (-kf_qss[60] - kf_qss[82] + x189);
  const amrex::Real x298 =
    x234 * (-x239 * (-kf_qss[60] - kf_qss[82] + x189) +
            x240 * (-kf_qss[60] - kf_qss[82] + x189) + x285);
  x228 = x228 * (-kf_qss[156] * x200 / x1 + x231 * (-kf_qss[156] + x189));
  x231 = x234 *
         (-x239 * (-kf_qss[156] + x189) + x240 * (-kf_qss[156] + x189) + x285);
  const amrex::Real x303 = x234 * (x292 - (kf_qss[43] * sc[3] + x238) / x197);
  const amrex::Real x305 = x232 * (-kf_qss[160] + x189);
  const amrex::Real x306 = x234 * (-x239 * (-kf_qss[160] + x189) +
                                   x240 * (-kf_qss[160] + x189) + x285);
  const amrex::Real x307 =
    x234 *
    (x292 - (kf_qss[169] * sc[3] + 2.0 * kf_qss[40] * sc[4] + x238) / x197);
  const amrex::Real x308 = x234 * (x292 - (kf_qss[45] + x238) / x197);
  const amrex::Real x309 = x234 * (x292 - (kf_qss[59] * sc[2] + x238) / x197);
  const amrex::Real x310 = x234 * (x292 - (kf_qss[81] + x238) / x197);
  const amrex::Real x311 = x234 * (x292 - (kf_qss[109] * sc[12] + x238) / x197);
  x232 = x232 * (-kf_qss[110] + x189);
  x189 = x234 *
         (-x239 * (-kf_qss[110] + x189) + x240 * (-kf_qss[110] + x189) + x285);
  x239 = (kf_qss[153] * sc[0] + kf_qss[157] * sc[4]) / x1;
  x238 = x234 * (x200 * x239 + x292 - (kf_qss[159] * sc[3] + x238) / x197);
  x240 = 1.0 + 2.344e+19 * x186 *
                 exp(-15398.429973624399 * invT - 2.7 * tc[0]) / kf_qss[0];
  x285 =
    -kf_qss[107] * sc[4] - kf_qss[15] * sc[4] - kf_qss[27] * sc[2] -
    kf_qss[34] * sc[3] -
    2.344e+19 * x186 * exp(-15398.429973624399 * invT - 2.7 * tc[0]) / x240 +
    10.0e-13;
  x292 = g_RT[0] + g_RT[12] - g_RT_qss[1];
  amrex::Real x331 =
    2.344e+19 * exp(-15398.429973624399 * invT - 2.7 * tc[0] + x292) / x240;
  amrex::Real x338 = refCinv * sc[0] * sc[12] * x331 -
                     5.494336e+38 * refCinv * sc[0] * sc[12] * x186 *
                       exp(-30796.859947248799 * invT - 5.4 * tc[0] + x292) /
                       (kf_qss[0] * ((x240) * (x240)));
  const amrex::Real x339 = (refCinv * sc[12] * x186 * x331 + x338) / x285;
  x240 = -2.344e+19 * exp(-15398.429973624399 * invT - 2.7 * tc[0]) / x240 +
         5.494336e+38 * x186 * exp(-30796.859947248799 * invT - 5.4 * tc[0]) /
           (kf_qss[0] * ((x240) * (x240)));
  amrex::Real x346 = kf_qss[106] * sc[32] + 2.0 * kf_qss[113] * sc[31] * sc[8] +
                     2.0 * kf_qss[115] * ((sc[31]) * (sc[31])) +
                     kf_qss[14] * sc[10] * sc[8] + kf_qss[26] * sc[3] * sc[8] +
                     kf_qss[35] * sc[10] * sc[12] +
                     refCinv * sc[0] * sc[12] * x186 * x331 + 10.0e-13;
  const amrex::Real x348 = x240 * x346 / ((x285) * (x285));
  const amrex::Real x349 = x338 / x285;
  const amrex::Real x351 = x348 - x349;
  const amrex::Real x352 = x346 * (-kf_qss[27] + x240) / ((x285) * (x285));
  const amrex::Real x353 = (kf_qss[26] * sc[8] + x338) / x285;
  const amrex::Real x354 = x346 * (-kf_qss[34] + x240) / ((x285) * (x285));
  x240 = x346 * (-kf_qss[107] - kf_qss[15] + x240) / ((x285) * (x285));
  const amrex::Real x356 = (2.0 * kf_qss[113] * sc[31] + kf_qss[14] * sc[10] +
                            kf_qss[26] * sc[3] + x338) /
                           x285;
  const amrex::Real x357 =
    (kf_qss[14] * sc[8] + kf_qss[35] * sc[12] + x338) / x285;
  const amrex::Real x358 = sc[0] * x186;
  x331 = (kf_qss[35] * sc[10] + refCinv * x331 * x358 + x338) / x285;
  const amrex::Real x361 =
    (2.0 * kf_qss[113] * sc[8] + 4.0 * kf_qss[115] * ((sc[31])) + x338) / x285;
  x338 = (kf_qss[106] + x338) / x285;
  amrex::Real x364 = 1200000000.0 * exp(-6299.2662225434797 * invT);
  amrex::Real x367 = 1.0 + x186 * x364 / kf_qss[1];
  amrex::Real x370 =
    -kf_qss[117] * sc[32] - kf_qss[137] * sc[15] - kf_qss[139] * sc[13] -
    kf_qss[48] * sc[10] - kf_qss[50] * sc[5] - kf_qss[52] * sc[1] -
    kf_qss[54] * sc[4] - kf_qss[56] * sc[11] - kf_qss[58] * sc[9] -
    kf_qss[94] * sc[0] - kf_qss[96] * sc[2] - kf_qss[98] * sc[8] -
    x186 * x364 / x367 + 10.0e-13;
  amrex::Real x373 = g_RT[6] + g_RT[8] - g_RT_qss[2];
  amrex::Real x375 =
    1200000000.0 * exp(-6299.2662225434797 * invT + x373) / x367;
  amrex::Real x382 =
    refCinv * sc[6] * sc[8] * x375 - 1.44e+18 * refCinv * sc[6] * sc[8] * x186 *
                                       exp(-12598.532445086999 * invT + x373) /
                                       (kf_qss[1] * ((x367) * (x367)));
  const amrex::Real x383 = (kf_qss[51] * sc[20] + x382) / x370;
  x367 = -x364 / x367 + 1.44e+18 * x186 * exp(-12598.532445086999 * invT) /
                          (kf_qss[1] * ((x367) * (x367)));
  amrex::Real x400 =
    kf_qss[116] * sc[20] * sc[31] + kf_qss[136] * sc[26] * sc[2] +
    kf_qss[138] * sc[26] * sc[4] + kf_qss[393] * sc[4] * sc[53] +
    kf_qss[395] * sc[10] * sc[53] + kf_qss[47] * sc[20] * sc[3] +
    kf_qss[49] * sc[20] * sc[4] + kf_qss[51] * sc[0] * sc[20] +
    kf_qss[53] * sc[20] * sc[2] + kf_qss[55] * sc[10] * sc[20] +
    kf_qss[57] * sc[20] * sc[8] + kf_qss[90] * sc[2] * sc[30] +
    kf_qss[95] * sc[18] * sc[1] + kf_qss[97] * sc[18] * sc[4] +
    kf_qss[99] * sc[18] * sc[9] + refCinv * sc[6] * sc[8] * x186 * x375 +
    10.0e-13;
  amrex::Real x401 = x400 / ((x370) * (x370));
  const amrex::Real x402 = x401 * (-kf_qss[94] + x367);
  const amrex::Real x403 = (kf_qss[95] * sc[18] + x382) / x370;
  const amrex::Real x404 = x401 * (-kf_qss[52] + x367);
  const amrex::Real x405 =
    (kf_qss[136] * sc[26] + kf_qss[53] * sc[20] + kf_qss[90] * sc[30] + x382) /
    x370;
  const amrex::Real x406 = x401 * (-kf_qss[96] + x367);
  const amrex::Real x407 = (kf_qss[47] * sc[20] + x382) / x370;
  const amrex::Real x408 = x367 * x401;
  const amrex::Real x409 = (kf_qss[138] * sc[26] + kf_qss[393] * sc[53] +
                            kf_qss[49] * sc[20] + kf_qss[97] * sc[18] + x382) /
                           x370;
  const amrex::Real x410 = x401 * (-kf_qss[54] + x367);
  const amrex::Real x411 = x382 / x370;
  const amrex::Real x413 = x401 * (-kf_qss[50] + x367);
  const amrex::Real x416 = (refCinv * sc[8] * x186 * x375 + x382) / x370;
  const amrex::Real x417 = x408 - x411;
  x375 = (kf_qss[57] * sc[20] + refCinv * sc[6] * x186 * x375 + x382) / x370;
  const amrex::Real x419 = x401 * (-kf_qss[98] + x367);
  const amrex::Real x420 = (kf_qss[99] * sc[18] + x382) / x370;
  const amrex::Real x421 = x401 * (-kf_qss[58] + x367);
  const amrex::Real x422 =
    (kf_qss[395] * sc[53] + kf_qss[55] * sc[20] + x382) / x370;
  const amrex::Real x423 = x401 * (-kf_qss[48] + x367);
  const amrex::Real x424 = x401 * (-kf_qss[56] + x367);
  const amrex::Real x425 = x401 * (-kf_qss[139] + x367);
  const amrex::Real x426 = x401 * (-kf_qss[137] + x367);
  const amrex::Real x427 =
    (kf_qss[95] * sc[1] + kf_qss[97] * sc[4] + kf_qss[99] * sc[9] + x382) /
    x370;
  const amrex::Real x428 =
    (kf_qss[116] * sc[31] + kf_qss[47] * sc[3] + kf_qss[49] * sc[4] +
     kf_qss[51] * sc[0] + kf_qss[53] * sc[2] + kf_qss[55] * sc[10] +
     kf_qss[57] * sc[8] + x382) /
    x370;
  const amrex::Real x429 =
    (kf_qss[136] * sc[2] + kf_qss[138] * sc[4] + x382) / x370;
  const amrex::Real x430 = (kf_qss[90] * sc[2] + x382) / x370;
  const amrex::Real x431 = (kf_qss[116] * sc[20] + x382) / x370;
  x367 = x401 * (-kf_qss[117] + x367);
  x382 = (kf_qss[393] * sc[4] + kf_qss[395] * sc[10] + x382) / x370;
  x401 = kf_qss[100] * sc[14] * sc[2] + kf_qss[104] * sc[17] * sc[3] +
         kf_qss[164] * sc[0] * sc[18] + kf_qss[166] * sc[39] +
         kf_qss[167] * sc[37] * sc[3] + 10.0e-13;
  const amrex::Real x443 = -kf_qss[101] * sc[0] - kf_qss[105] * sc[2] -
                           kf_qss[163] - kf_qss[165] * sc[3] -
                           kf_qss[168] * sc[12] + 10.0e-13;
  const amrex::Real x444 = x401 / ((x443) * (x443));
  const amrex::Real x445 = kf_qss[101] * x444;
  const amrex::Real x448 = kf_qss[164] * sc[18] / x443;
  const amrex::Real x449 = kf_qss[105] * x444;
  const amrex::Real x451 = kf_qss[100] * sc[14] / x443;
  const amrex::Real x453 = (kf_qss[104] * sc[17] + kf_qss[167] * sc[37]) / x443;
  const amrex::Real x454 = kf_qss[168] * x444;
  const amrex::Real x455 = kf_qss[100] * sc[2] / x443;
  const amrex::Real x457 = kf_qss[104] * sc[3] / x443;
  const amrex::Real x458 = kf_qss[164] * sc[0] / x443;
  const amrex::Real x459 = kf_qss[167] * sc[3] / x443;
  const amrex::Real x460 = kf_qss[166] / x443;
  amrex::Real x461 = -kf_qss[162] * sc[3] - kf_qss[188] * sc[6] -
                     kf_qss[214] * sc[24] - kf_qss[300] * sc[22] - kf_qss[61] -
                     kf_qss[63] - kf_qss[65] * sc[3] + 10.0e-13;
  amrex::Real x463 = kf_qss[329] * sc[4] + 10.0e-13;
  amrex::Real x464 = x463 / x461;
  amrex::Real x465 = x464 * x77;
  amrex::Real x466 = -kf_qss[302] - kf_qss[306];
  amrex::Real x468 = x79 / ((x68) * (x68));
  amrex::Real x470 =
    (1.0 / ((-x61 * (kf_qss[359] + 10.0e-13) / x68 + 1 -
             x73 * (kf_qss[361] + 10.0e-13) / x68) *
            (-x61 * (kf_qss[359] + 10.0e-13) / x68 + 1 -
             x73 * (kf_qss[361] + 10.0e-13) / x68)));
  amrex::Real x476 = x466 * x61 * (kf_qss[359] + 10.0e-13) / ((x68) * (x68)) +
                     x466 * x73 * (kf_qss[361] + 10.0e-13) / ((x68) * (x68));
  amrex::Real x481 = x127 * x41;
  amrex::Real x482 = x481 * x7;
  amrex::Real x485 = x116 * x481;
  amrex::Real x488 = x121 * x126 / ((x124) * (x124));
  amrex::Real x491 = x49 * x87 / ((x47) * (x47));
  amrex::Real x493 = -kf_qss[308] - kf_qss[312];
  const amrex::Real x497 = x24 * (kf_qss[363] + 10.0e-13) / ((x34) * (x34));
  amrex::Real x498 = x497 / ((x30) * (x30) * (x30));
  amrex::Real x501 = x82 * x94 / ((x47) * (x47));
  amrex::Real x503 = x37 * x49 / ((x47) * (x47));
  amrex::Real x505 = x493 / ((x30) * (x30));
  amrex::Real x508 = (kf_qss[298] * sc[45] + 10.0e-13) / ((x47) * (x47));
  amrex::Real x511 = -kf_qss[210] * x503 + kf_qss[210] * x508 -
                     kf_qss[308] * x37 / x47 + x21 * x493 * x498 * x50 +
                     x21 * x50 * x505 / x34;
  amrex::Real x512 = (kf_qss[297] * sc[45] + 10.0e-13) / ((x19) * (x19));
  amrex::Real x513 = x38 * x87;
  amrex::Real x519 = kf_qss[212] * x512 - kf_qss[212] * x513 / ((x19) * (x19)) -
                     kf_qss[312] * x87 / x19 + x39 * x493 * x498 * x86 +
                     x39 * x505 * x86 / x34;
  amrex::Real x521 = x77 * x83;
  amrex::Real x524 = x37 * x38;
  amrex::Real x528 = -kf_qss[212] * x524 / ((x19) * (x19)) -
                     kf_qss[312] * x37 / x19 + x21 * x39 * x493 * x498 +
                     x21 * x39 * x505 / x34;
  amrex::Real x529 = (1.0 / ((-x37 * x39 + 1) * (-x37 * x39 + 1)));
  amrex::Real x531 = x52 * x529 * x91;
  amrex::Real x536 =
    -kf_qss[210] * x491 - kf_qss[210] * x501 - kf_qss[306] * x94 / x47 -
    kf_qss[308] * x87 / x47 + x466 * x521 * x92 / ((x68) * (x68)) +
    x470 * x476 * x83 * x92 / x68 + x493 * x498 * x50 * x86 - x511 * x97 -
    x519 * x53 + x528 * x531 + x50 * x505 * x86 / x34;
  amrex::Real x539 = x120 * x131 / ((x95) * (x95));
  amrex::Real x543 = x116 * x52 * x529 / x19;
  amrex::Real x544 = kf_qss[210] * x118 / ((x47) * (x47)) -
                     kf_qss[212] * x116 * x53 / ((x19) * (x19)) - x121 * x511 +
                     x528 * x543;
  amrex::Real x545 =
    (kf_qss[287] * sc[45] + kf_qss[327] + 10.0e-13) / ((x124) * (x124));
  amrex::Real x546 = x130 * x77;
  amrex::Real x550 = x129 * x94 / ((x124) * (x124));
  amrex::Real x552 = x126 * x97 / ((x124) * (x124));
  amrex::Real x553 = x127 * x529;
  amrex::Real x554 = x553 * x91;
  amrex::Real x555 =
    (kf_qss[294] * sc[45] + kf_qss[326] + 10.0e-13) / ((x124) * (x124));
  amrex::Real x557 =
    -kf_qss[208] * x550 - kf_qss[208] * x552 + kf_qss[208] * x555 -
    kf_qss[302] * x94 / x124 + x130 * x470 * x476 * x92 / x68 +
    x466 * x546 * x92 / ((x68) * (x68)) - x481 * x519 + x528 * x554;
  amrex::Real x558 = x120 / x95;
  amrex::Real x561 = -kf_qss[208] * x488 + kf_qss[208] * x545 -
                     kf_qss[212] * x485 / ((x19) * (x19)) +
                     x116 * x528 * x553 / x19 - x132 * x544 + x536 * x539 -
                     x557 * x558;
  amrex::Real x562 = x115 / x122;
  amrex::Real x564 = x113 * x126 / ((x124) * (x124));
  amrex::Real x566 = x106 * x120 / ((x95) * (x95));
  amrex::Real x569 = x103 * x97 / ((x101) * (x101));
  amrex::Real x570 =
    (kf_qss[290] * sc[45] + kf_qss[322] + 10.0e-13) / ((x101) * (x101));
  amrex::Real x571 = x104 * x529;
  amrex::Real x572 = x571 * x91;
  amrex::Real x573 = x104 * x41;
  amrex::Real x574 =
    -kf_qss[206] * x569 + kf_qss[206] * x570 - x519 * x573 + x528 * x572;
  amrex::Real x576 = x103 * x121 / ((x101) * (x101));
  amrex::Real x579 = -kf_qss[206] * x576 -
                     kf_qss[212] * x116 * x573 / ((x19) * (x19)) - x107 * x544 +
                     x116 * x528 * x571 / x19 + x536 * x566 - x558 * x574;
  amrex::Real x582 = x115 * x134 / ((x122) * (x122));
  amrex::Real x585 = x129 * x81 / ((x124) * (x124));
  amrex::Real x586 = x85 / x95;
  amrex::Real x587 = x52 * x529 * x7 / x19;
  amrex::Real x591 = x81 * x82 / ((x47) * (x47));
  amrex::Real x593 = -kf_qss[210] * x591 + kf_qss[210] * x57 / ((x47) * (x47)) -
                     kf_qss[212] * x53 * x7 / ((x19) * (x19)) -
                     kf_qss[306] * x81 / x47 - x113 * x511 +
                     x466 * x468 * x521 + x470 * x476 * x80 * x83 + x528 * x587;
  amrex::Real x594 = x131 * x85 / ((x95) * (x95));
  amrex::Real x595 = x106 * x85 / ((x95) * (x95));
  amrex::Real x597 =
    (kf_qss[288] * sc[45] + kf_qss[328] + 10.0e-13) / ((x101) * (x101));
  amrex::Real x599 = x103 * x113 / ((x101) * (x101));
  amrex::Real x602 = kf_qss[206] * x597 - kf_qss[206] * x599 -
                     kf_qss[212] * x573 * x7 / ((x19) * (x19)) - x107 * x593 +
                     x536 * x595 - x574 * x586 + x528 * x571 * x7 / x19;
  amrex::Real x604 = -kf_qss[208] * x564 - kf_qss[208] * x585 -
                     kf_qss[212] * x482 / ((x19) * (x19)) -
                     kf_qss[302] * x81 / x124 + x130 * x470 * x476 * x80 -
                     x132 * x593 - x135 * x602 + x466 * x468 * x546 +
                     x536 * x594 - x557 * x586 - x561 * x562 + x579 * x582 +
                     x528 * x553 * x7 / x19;
  amrex::Real x606 = -x464 * x81 + (kf_qss[299] + 10.0e-13) / x461;
  amrex::Real x609 = x139 * x606 / (x124 * ((x136) * (x136)));
  amrex::Real x610 = x606 / x136;
  amrex::Real x612 = x139 * x610 / ((x124) * (x124));
  amrex::Real x615 =
    kf_qss[336] * sc[24] * sc[25] + kf_qss[365] * sc[50] + 10.0e-13;
  amrex::Real x616 =
    x22 * (kf_qss[363] + 10.0e-13) * (kf_qss[353] * sc[48] + 10.0e-13) / x30 -
    x615 / x30;
  amrex::Real x617 = x616 / x34;
  amrex::Real x628 =
    kf_qss[211] * sc[45] + kf_qss[221] * sc[0] * sc[45] +
    kf_qss[229] * sc[2] * sc[45] + kf_qss[237] * sc[45] * sc[4] +
    kf_qss[245] * sc[10] * sc[45] + kf_qss[253] * sc[45] * sc[8] +
    kf_qss[261] * sc[3] * sc[45] + kf_qss[269] * sc[15] * sc[45] +
    kf_qss[277] * sc[17] * sc[45] + kf_qss[285] * sc[31] * sc[45] +
    kf_qss[310] * sc[15] * sc[30] + kf_qss[343] * sc[49] + 10.0e-13;
  amrex::Real x629 = -x39 * x617 - x628 / x19;
  amrex::Real x640 =
    kf_qss[209] * sc[45] + kf_qss[219] * sc[0] * sc[45] +
    kf_qss[227] * sc[2] * sc[45] + kf_qss[235] * sc[45] * sc[4] +
    kf_qss[243] * sc[10] * sc[45] + kf_qss[251] * sc[45] * sc[8] +
    kf_qss[259] * sc[3] * sc[45] + kf_qss[267] * sc[15] * sc[45] +
    kf_qss[275] * sc[17] * sc[45] + kf_qss[283] * sc[31] * sc[45] +
    kf_qss[304] * sc[24] * sc[26] + kf_qss[341] * sc[48] + 10.0e-13;
  amrex::Real x641 = x59 * (kf_qss[347] * sc[47] + 10.0e-13);
  amrex::Real x643 = x72 * (kf_qss[351] * sc[48] + 10.0e-13);
  amrex::Real x644 = x641 * (kf_qss[359] + 10.0e-13) / x68 +
                     x643 * (kf_qss[361] + 10.0e-13) / x68 -
                     (kf_qss[334] * sc[24] * sc[25] + 10.0e-13) / x68;
  amrex::Real x645 = x644 * x77;
  amrex::Real x646 = -x50 * x617 - x53 * x629 - x645 * x83 - x640 / x47;
  amrex::Real x647 = x646 / x95;
  amrex::Real x657 =
    kf_qss[205] * sc[45] + kf_qss[215] * sc[0] * sc[45] +
    kf_qss[223] * sc[2] * sc[45] + kf_qss[231] * sc[45] * sc[4] +
    kf_qss[239] * sc[10] * sc[45] + kf_qss[247] * sc[45] * sc[8] +
    kf_qss[255] * sc[3] * sc[45] + kf_qss[263] * sc[15] * sc[45] +
    kf_qss[271] * sc[17] * sc[45] + kf_qss[279] * sc[31] * sc[45] +
    kf_qss[337] * sc[46] + 10.0e-13;
  amrex::Real x658 = x41 * x629;
  amrex::Real x659 = -x104 * x658 - x106 * x647 - x657 / x101;
  amrex::Real x669 =
    kf_qss[207] * sc[45] + kf_qss[217] * sc[0] * sc[45] +
    kf_qss[225] * sc[2] * sc[45] + kf_qss[233] * sc[45] * sc[4] +
    kf_qss[241] * sc[10] * sc[45] + kf_qss[249] * sc[45] * sc[8] +
    kf_qss[257] * sc[3] * sc[45] + kf_qss[265] * sc[15] * sc[45] +
    kf_qss[273] * sc[17] * sc[45] + kf_qss[281] * sc[31] * sc[45] +
    kf_qss[339] * sc[47] + 10.0e-13;
  amrex::Real x670 =
    -x127 * x658 - x130 * x645 - x132 * x646 - x135 * x659 - x669 / x124;
  amrex::Real x672 = (kf_qss[330] * sc[4] + 10.0e-13) / x461;
  amrex::Real x677 =
    kf_qss[161] * sc[36] + kf_qss[187] * sc[44] + kf_qss[213] * sc[45] +
    kf_qss[62] * sc[14] * sc[15] + kf_qss[64] * sc[0] * sc[26] +
    kf_qss[66] * sc[10] * sc[26] + kf_qss[91] * sc[30] * sc[4] + 10.0e-13;
  const amrex::Real x678 =
    -x464 * x645 - x610 * x670 - x617 * x672 - x677 / x461;
  amrex::Real x680 =
    x678 / ((1 - x139 * x610 / x124) * (1 - x139 * x610 / x124));
  const amrex::Real x681 =
    x680 *
    (-kf_qss[208] * x612 -
     x141 * (x464 * x470 * x476 * x80 + x465 * x466 * x468) + x604 * x609);
  amrex::Real x682 =
    (kf_qss[334] * sc[24] * sc[25] + 10.0e-13) / ((x68) * (x68));
  amrex::Real x683 = -x466 * x641 * (kf_qss[359] + 10.0e-13) / ((x68) * (x68)) -
                     x466 * x643 * (kf_qss[361] + 10.0e-13) / ((x68) * (x68)) +
                     x466 * x682;
  amrex::Real x684 = x470 * x644;
  amrex::Real x688 = x126 * x658 / ((x124) * (x124));
  amrex::Real x689 = x134 * x659 / ((x122) * (x122));
  amrex::Real x692 = x103 * x658 / ((x101) * (x101));
  amrex::Real x693 = x571 * x629;
  x628 = x628 / ((x19) * (x19));
  amrex::Real x700 =
    x22 * (kf_qss[363] + 10.0e-13) * (kf_qss[353] * sc[48] + 10.0e-13);
  x493 = -x505 * x700 + x493 * x615 / ((x30) * (x30));
  amrex::Real x704 = -kf_qss[212] * x628 -
                     kf_qss[212] * x38 * x617 / ((x19) * (x19)) -
                     kf_qss[221] * sc[45] / x19 - kf_qss[312] * x617 / x19 +
                     x39 * x497 * x505 * x616 - x39 * x493 / x34;
  amrex::Real x706 = x106 * x646 / ((x95) * (x95));
  amrex::Real x707 = sc[45] / x101;
  x657 = x657 / ((x101) * (x101));
  amrex::Real x710 = x645 * x82 / ((x47) * (x47));
  amrex::Real x712 = x49 * x617 / ((x47) * (x47));
  amrex::Real x717 = x52 * x529 * x629;
  x511 = -kf_qss[210] * x710 - kf_qss[210] * x712 -
         kf_qss[210] * x640 / ((x47) * (x47)) - kf_qss[219] * sc[45] / x47 -
         kf_qss[306] * x645 / x47 - kf_qss[308] * x617 / x47 +
         x476 * x684 * x83 + x497 * x50 * x505 * x616 - x511 * x658 -
         x521 * x683 + x528 * x717 - x53 * x704 - x493 * x50 / x34;
  x574 = -kf_qss[206] * x657 - kf_qss[206] * x692 - kf_qss[215] * x707 -
         x107 * x511 + x528 * x693 + x536 * x706 - x573 * x704 - x574 * x647;
  amrex::Real x723 = x129 * x645 / ((x124) * (x124));
  amrex::Real x724 = x131 * x646 / ((x95) * (x95));
  amrex::Real x725 = x659 / x122;
  amrex::Real x726 = sc[45] / x124;
  amrex::Real x727 = x669 / ((x124) * (x124));
  amrex::Real x728 = x553 * x629;
  x557 = -kf_qss[208] * x688 - kf_qss[208] * x723 - kf_qss[208] * x727 -
         kf_qss[217] * x726 - kf_qss[302] * x645 / x124 + x130 * x476 * x684 -
         x132 * x511 - x135 * x574 - x481 * x704 + x528 * x728 + x536 * x724 -
         x546 * x683 - x557 * x647 - x561 * x725 + x579 * x689;
  x561 = x606 * x670 / ((x136) * (x136));
  const amrex::Real x733 = (1.0 / ((1 - x139 * x610 / x124)));
  const amrex::Real x734 =
    x733 *
    (-kf_qss[64] * sc[26] / x461 + x464 * x476 * x684 - x465 * x683 +
     x497 * x505 * x616 * x672 - x557 * x610 + x561 * x604 - x493 * x672 / x34 -
     x670 * (x464 * x470 * x476 * x80 + x465 * x466 * x468) / x136);
  amrex::Real x738 = kf_qss[222] * x512 - kf_qss[222] * x513 / ((x19) * (x19));
  amrex::Real x741 = -kf_qss[220] * x503 + kf_qss[220] * x508;
  amrex::Real x742 = -kf_qss[220] * x491 - kf_qss[220] * x501 -
                     kf_qss[222] * x524 * x531 / ((x19) * (x19)) - x53 * x738 -
                     x741 * x97;
  amrex::Real x745 = -kf_qss[216] * x569 + kf_qss[216] * x570 -
                     kf_qss[222] * x524 * x572 / ((x19) * (x19)) - x573 * x738;
  amrex::Real x747 = x116 * x573 / ((x19) * (x19));
  x52 = x52 * x529 / ((x19) * (x19) * (x19));
  amrex::Real x751 = x116 * x52 * x524;
  amrex::Real x752 = x116 * x53 / ((x19) * (x19));
  amrex::Real x753 = kf_qss[220] * x118 / ((x47) * (x47)) - kf_qss[222] * x751 -
                     kf_qss[222] * x752 - x121 * x741;
  amrex::Real x755 = x116 * x571 / ((x19) * (x19) * (x19));
  amrex::Real x756 = -kf_qss[216] * x576 - kf_qss[222] * x524 * x755 -
                     kf_qss[222] * x747 - x107 * x753 - x558 * x745 +
                     x566 * x742;
  amrex::Real x758 = -kf_qss[218] * x552 + kf_qss[218] * x555 -
                     kf_qss[218] * x129 * x94 / ((x124) * (x124)) -
                     kf_qss[222] * x524 * x554 / ((x19) * (x19)) - x481 * x738;
  amrex::Real x759 = x573 * x7 / ((x19) * (x19));
  amrex::Real x760 = x53 * x7 / ((x19) * (x19));
  amrex::Real x762 = x52 * x524 * x7;
  amrex::Real x763 = -kf_qss[220] * x591 + kf_qss[220] * x57 / ((x47) * (x47)) -
                     kf_qss[222] * x760 - kf_qss[222] * x762 - x113 * x741;
  amrex::Real x764 = x571 * x7 / ((x19) * (x19) * (x19));
  amrex::Real x765 = kf_qss[216] * x597 - kf_qss[216] * x599 -
                     kf_qss[222] * x524 * x764 - kf_qss[222] * x759 -
                     x107 * x763 - x586 * x745 + x595 * x742;
  amrex::Real x767 = x553 * x7 / ((x19) * (x19) * (x19));
  amrex::Real x769 = x116 * x553 / ((x19) * (x19) * (x19));
  amrex::Real x770 = -kf_qss[218] * x121 * x126 / ((x124) * (x124)) +
                     kf_qss[218] * x545 - kf_qss[222] * x524 * x769 -
                     kf_qss[222] * x485 / ((x19) * (x19)) - x132 * x753 +
                     x539 * x742 - x558 * x758;
  amrex::Real x771 =
    -kf_qss[218] * x113 * x126 / ((x124) * (x124)) -
    kf_qss[218] * x129 * x81 / ((x124) * (x124)) - kf_qss[222] * x524 * x767 -
    kf_qss[222] * x482 / ((x19) * (x19)) - x132 * x763 - x135 * x765 -
    x562 * x770 + x582 * x756 - x586 * x758 + x594 * x742;
  const amrex::Real x772 = x680 * (-kf_qss[218] * x612 + x609 * x771);
  amrex::Real x773 = x38 * x617 / ((x19) * (x19));
  amrex::Real x774 = -kf_qss[222] * x628 - kf_qss[222] * x773;
  x741 = -kf_qss[220] * x710 - kf_qss[220] * x712 -
         kf_qss[220] * x640 / ((x47) * (x47)) -
         kf_qss[222] * x524 * x717 / ((x19) * (x19)) - x53 * x774 - x658 * x741;
  x745 = -kf_qss[216] * x657 - kf_qss[216] * x692 -
         kf_qss[222] * x524 * x693 / ((x19) * (x19)) - x107 * x741 -
         x573 * x774 - x647 * x745 + x706 * x742;
  x758 = -kf_qss[218] * x688 - kf_qss[218] * x723 - kf_qss[218] * x727 -
         kf_qss[222] * x524 * x728 / ((x19) * (x19)) - x132 * x741 -
         x135 * x745 - x481 * x774 - x647 * x758 + x689 * x756 + x724 * x742 -
         x725 * x770;
  x770 = x733 * (x561 * x771 - x610 * x758);
  amrex::Real x785 =
    -kf_qss[331] * x61 * (kf_qss[359] + 10.0e-13) / ((x68) * (x68)) -
    kf_qss[331] * x73 * (kf_qss[361] + 10.0e-13) / ((x68) * (x68));
  amrex::Real x789 = kf_qss[332] / ((x30) * (x30));
  amrex::Real x790 = -kf_qss[332] * x21 * x39 * x498 - x21 * x39 * x789 / x34;
  amrex::Real x791 = -kf_qss[332] * x39 * x498 * x86 - x39 * x789 * x86 / x34;
  amrex::Real x792 = -kf_qss[331] * x546 * x92 / ((x68) * (x68)) +
                     x130 * x470 * x785 * x92 / x68 - x481 * x791 + x554 * x790;
  amrex::Real x793 = -kf_qss[332] * x21 * x498 * x50 - x21 * x50 * x789 / x34;
  amrex::Real x796 = -kf_qss[331] * x521 * x92 / ((x68) * (x68)) -
                     kf_qss[332] * x498 * x50 * x86 +
                     x470 * x785 * x83 * x92 / x68 - x53 * x791 + x531 * x790 -
                     x793 * x97 - x50 * x789 * x86 / x34;
  amrex::Real x797 = -x107 * (-x121 * x793 + x543 * x790) +
                     x116 * x571 * x790 / x19 -
                     x558 * (x572 * x790 - x573 * x791) + x566 * x796;
  amrex::Real x799 = -kf_qss[331] * x468 * x521 - x113 * x793 +
                     x470 * x785 * x80 * x83 + x587 * x790;
  amrex::Real x800 = -x107 * x799 - x586 * (x572 * x790 - x573 * x791) +
                     x595 * x796 + x571 * x7 * x790 / x19;
  amrex::Real x801 = x116 * x553 * x790 / x19 -
                     x132 * (-x121 * x793 + x543 * x790) + x539 * x796 -
                     x558 * x792;
  amrex::Real x803 = -kf_qss[331] * x468 * x546 + x130 * x470 * x785 * x80 -
                     x132 * x799 - x135 * x800 - x562 * x801 + x582 * x797 -
                     x586 * x792 + x594 * x796 + x553 * x7 * x790 / x19;
  const amrex::Real x804 =
    x680 * (-x141 * (-kf_qss[331] * x465 * x468 + x464 * x470 * x785 * x80) +
            x609 * x803);
  amrex::Real x807 =
    kf_qss[331] * x641 * (kf_qss[359] + 10.0e-13) / ((x68) * (x68)) +
    kf_qss[331] * x643 * (kf_qss[361] + 10.0e-13) / ((x68) * (x68)) -
    kf_qss[331] * x682;
  amrex::Real x809 = -kf_qss[332] * x615 / ((x30) * (x30)) + x700 * x789;
  amrex::Real x811 =
    -kf_qss[229] * sc[45] / x19 - x39 * x497 * x616 * x789 - x39 * x809 / x34;
  amrex::Real x812 = -kf_qss[227] * sc[45] / x47 - x497 * x50 * x616 * x789 -
                     x521 * x807 - x53 * x811 - x658 * x793 +
                     x684 * x785 * x83 + x717 * x790 - x50 * x809 / x34;
  amrex::Real x813 = -kf_qss[223] * x707 - x107 * x812 - x573 * x811 -
                     x647 * (x572 * x790 - x573 * x791) + x693 * x790 +
                     x706 * x796;
  x792 = (-kf_qss[225] * x726 + x130 * x684 * x785 - x132 * x812 - x135 * x813 -
          x481 * x811 - x546 * x807 - x647 * x792 + x689 * x797 + x724 * x796 -
          x725 * x801 + x728 * x790) /
         x136;
  x801 =
    x733 *
    (x464 * x684 * x785 - x465 * x807 - x497 * x616 * x672 * x789 +
     x561 * x803 - x606 * x792 - x672 * x809 / x34 -
     x670 * (-kf_qss[331] * x465 * x468 + x464 * x470 * x785 * x80) / x136);
  amrex::Real x817 = (-kf_qss[162] - kf_qss[65]) / ((x461) * (x461));
  amrex::Real x820 = -kf_qss[313] * x465 / x68 + x463 * x81 * x817 -
                     x817 * (kf_qss[299] + 10.0e-13);
  amrex::Real x821 = (-kf_qss[313] - kf_qss[340]) / ((x124) * (x124));
  amrex::Real x823 = (-kf_qss[319] - kf_qss[344]) / ((x19) * (x19));
  amrex::Real x826 = -kf_qss[319] * x36 * x39 + x37 * x38 * x823;
  amrex::Real x827 = -kf_qss[317] * x36 * x39 + x38 * x823 * x87 -
                     x512 * (-kf_qss[319] - kf_qss[344]);
  amrex::Real x829 = -kf_qss[315] * x130 * x77 / x68 + x126 * x821 * x97 +
                     x129 * x821 * x94 - x481 * x827 + x554 * x826 -
                     x821 * (kf_qss[294] * sc[45] + kf_qss[326] + 10.0e-13);
  amrex::Real x831 =
    (-kf_qss[315] - kf_qss[317] - kf_qss[342]) / ((x47) * (x47));
  amrex::Real x833 = -kf_qss[319] * x36 * x50 + x37 * x49 * x831 -
                     x508 * (-kf_qss[315] - kf_qss[317] - kf_qss[342]);
  amrex::Real x834 = -kf_qss[315] * x77 * x83 / x68 - kf_qss[317] * x36 * x50 +
                     x49 * x831 * x87 - x53 * x827 + x531 * x826 +
                     x82 * x831 * x94 - x833 * x97;
  amrex::Real x835 = -kf_qss[313] * x521 / x68 - x113 * x833 + x53 * x7 * x823 -
                     x57 * x831 + x587 * x826 + x81 * x82 * x831;
  amrex::Real x836 =
    x116 * x53 * x823 - x118 * x831 - x121 * x833 + x543 * x826;
  amrex::Real x837 = x116 * x553 * x826 / x19 + x121 * x126 * x821 -
                     x132 * x836 + x485 * x823 + x539 * x834 - x558 * x829 -
                     x821 * (kf_qss[287] * sc[45] + kf_qss[327] + 10.0e-13);
  amrex::Real x838 =
    -kf_qss[338] * x569 + kf_qss[338] * x570 + x572 * x826 - x573 * x827;
  amrex::Real x839 = kf_qss[338] * x597 - kf_qss[338] * x599 - x107 * x835 +
                     x573 * x7 * x823 - x586 * x838 + x595 * x834 +
                     x571 * x7 * x826 / x19;
  amrex::Real x840 = -kf_qss[338] * x576 - x107 * x836 + x116 * x573 * x823 +
                     x116 * x571 * x826 / x19 - x558 * x838 + x566 * x834;
  amrex::Real x841 = -kf_qss[313] * x546 / x68 + x113 * x126 * x821 +
                     x129 * x81 * x821 - x132 * x835 - x135 * x839 +
                     x482 * x823 - x562 * x837 + x582 * x840 - x586 * x829 +
                     x594 * x834 + x553 * x7 * x826 / x19;
  const amrex::Real x842 =
    x680 * (x139 * x610 * x821 - x141 * x820 + x609 * x841);
  amrex::Real x844 = -kf_qss[261] * sc[45] / x19 + x38 * x617 * x823 +
                     x628 * (-kf_qss[319] - kf_qss[344]);
  x831 = -kf_qss[259] * sc[45] / x47 + x49 * x617 * x831 - x53 * x844 +
         x640 * x831 + x645 * x82 * x831 - x658 * x833 + x717 * x826;
  x833 = -kf_qss[255] * x707 - kf_qss[338] * x657 - kf_qss[338] * x692 -
         x107 * x831 + x571 * x629 * x826 - x573 * x844 - x647 * x838 +
         x706 * x834;
  x669 = -kf_qss[257] * x726 + x126 * x658 * x821 + x129 * x645 * x821 -
         x132 * x831 - x135 * x833 - x481 * x844 + x553 * x629 * x826 -
         x647 * x829 + x669 * x821 + x689 * x840 + x724 * x834 - x725 * x837;
  x817 = x733 * (x463 * x645 * x817 + x561 * x841 - x610 * x669 +
                 x617 * x817 * (kf_qss[330] * sc[4] + 10.0e-13) + x677 * x817 -
                 x670 * x820 / x136);
  x820 = -kf_qss[329] * x61 * (kf_qss[359] + 10.0e-13) / ((x68) * (x68)) -
         kf_qss[329] * x73 * (kf_qss[361] + 10.0e-13) / ((x68) * (x68));
  x829 = -kf_qss[329] * x465 * x468 - kf_qss[329] * x81 / x461 +
         x464 * x470 * x80 * x820;
  x837 = kf_qss[330] / ((x30) * (x30));
  x838 = -kf_qss[230] * x524 / ((x19) * (x19)) -
         kf_qss[330] * x21 * x39 * x498 - x21 * x39 * x837 / x34;
  amrex::Real x859 = kf_qss[230] * x512 - kf_qss[230] * x513 / ((x19) * (x19)) -
                     kf_qss[330] * x39 * x498 * x86 - x39 * x837 * x86 / x34;
  amrex::Real x861 = -kf_qss[228] * x37 * x49 / ((x47) * (x47)) +
                     kf_qss[228] * x508 - kf_qss[330] * x21 * x498 * x50 -
                     x21 * x50 * x837 / x34;
  x498 = -kf_qss[228] * x49 * x87 / ((x47) * (x47)) -
         kf_qss[228] * x82 * x94 / ((x47) * (x47)) -
         kf_qss[329] * x521 * x92 / ((x68) * (x68)) -
         kf_qss[330] * x498 * x50 * x86 + x470 * x820 * x83 * x92 / x68 -
         x53 * x859 + x531 * x838 - x861 * x97 - x50 * x837 * x86 / x34;
  amrex::Real x863 =
    -kf_qss[224] * x569 + kf_qss[224] * x570 + x572 * x838 - x573 * x859;
  amrex::Real x864 = kf_qss[228] * x118 / ((x47) * (x47)) - kf_qss[230] * x752 -
                     x121 * x861 + x543 * x838;
  amrex::Real x865 = -kf_qss[224] * x576 - kf_qss[230] * x747 - x107 * x864 +
                     x116 * x571 * x838 / x19 + x498 * x566 - x558 * x863;
  amrex::Real x866 = kf_qss[228] * x57 / ((x47) * (x47)) -
                     kf_qss[228] * x81 * x82 / ((x47) * (x47)) -
                     kf_qss[230] * x760 - kf_qss[329] * x468 * x521 -
                     x113 * x861 + x470 * x80 * x820 * x83 + x587 * x838;
  amrex::Real x868 = kf_qss[224] * x597 - kf_qss[224] * x599 -
                     kf_qss[230] * x759 - x107 * x866 + x498 * x595 -
                     x586 * x863 + x571 * x7 * x838 / x19;
  amrex::Real x869 = -kf_qss[226] * x550 - kf_qss[226] * x552 +
                     kf_qss[226] * x555 -
                     kf_qss[329] * x546 * x92 / ((x68) * (x68)) +
                     x130 * x470 * x820 * x92 / x68 - x481 * x859 + x554 * x838;
  amrex::Real x870 = -kf_qss[226] * x488 + kf_qss[226] * x545 -
                     kf_qss[230] * x485 / ((x19) * (x19)) +
                     x116 * x553 * x838 / x19 - x132 * x864 + x498 * x539 -
                     x558 * x869;
  x468 = -kf_qss[226] * x564 - kf_qss[226] * x585 -
         kf_qss[230] * x482 / ((x19) * (x19)) - kf_qss[329] * x468 * x546 +
         x130 * x470 * x80 * x820 - x132 * x866 - x135 * x868 + x498 * x594 -
         x562 * x870 + x582 * x865 - x586 * x869 + x553 * x7 * x838 / x19;
  const amrex::Real x872 =
    x680 * (-kf_qss[226] * x612 - x141 * x829 + x468 * x609);
  amrex::Real x874 =
    kf_qss[329] * x641 * (kf_qss[359] + 10.0e-13) / ((x68) * (x68)) +
    kf_qss[329] * x643 * (kf_qss[361] + 10.0e-13) / ((x68) * (x68)) -
    kf_qss[329] * x682;
  amrex::Real x875 = -kf_qss[330] * x615 / ((x30) * (x30)) + x700 * x837;
  amrex::Real x877 = -kf_qss[230] * x628 - kf_qss[230] * x773 -
                     kf_qss[237] * sc[45] / x19 - x39 * x497 * x616 * x837 -
                     x39 * x875 / x34;
  x861 = -kf_qss[228] * x710 - kf_qss[228] * x712 -
         kf_qss[228] * x640 / ((x47) * (x47)) - kf_qss[235] * sc[45] / x47 -
         x497 * x50 * x616 * x837 - x521 * x874 - x53 * x877 - x658 * x861 +
         x684 * x820 * x83 + x717 * x838 - x50 * x875 / x34;
  x863 = -kf_qss[224] * x657 - kf_qss[224] * x692 - kf_qss[231] * x707 -
         x107 * x861 + x498 * x706 - x573 * x877 - x647 * x863 + x693 * x838;
  x869 = -kf_qss[226] * x688 - kf_qss[226] * x723 - kf_qss[226] * x727 -
         kf_qss[233] * x726 + x130 * x684 * x820 - x132 * x861 - x135 * x863 -
         x481 * x877 + x498 * x724 - x546 * x874 - x647 * x869 + x689 * x865 -
         x725 * x870 + x728 * x838;
  x829 = x733 * (-kf_qss[329] * x645 / x461 - kf_qss[330] * x617 / x461 -
                 kf_qss[91] * sc[30] / x461 + x464 * x684 * x820 - x465 * x874 +
                 x468 * x561 - x497 * x616 * x672 * x837 - x610 * x869 -
                 x672 * x875 / x34 - x670 * x829 / x136);
  x870 = kf_qss[238] * x512 - kf_qss[238] * x513 / ((x19) * (x19));
  amrex::Real x885 = -kf_qss[234] * x550 - kf_qss[234] * x552 +
                     kf_qss[234] * x555 -
                     kf_qss[238] * x524 * x554 / ((x19) * (x19)) - x481 * x870;
  amrex::Real x886 = -kf_qss[236] * x503 + kf_qss[236] * x508;
  amrex::Real x887 = -kf_qss[236] * x591 + kf_qss[236] * x57 / ((x47) * (x47)) -
                     kf_qss[238] * x760 - kf_qss[238] * x762 - x113 * x886;
  amrex::Real x889 = -kf_qss[232] * x569 + kf_qss[232] * x570 -
                     kf_qss[238] * x524 * x572 / ((x19) * (x19)) - x573 * x870;
  amrex::Real x890 = kf_qss[236] * x118 / ((x47) * (x47)) - kf_qss[238] * x751 -
                     kf_qss[238] * x752 - x121 * x886;
  amrex::Real x891 = -kf_qss[236] * x491 - kf_qss[236] * x501 -
                     kf_qss[238] * x524 * x531 / ((x19) * (x19)) - x53 * x870 -
                     x886 * x97;
  amrex::Real x893 = -kf_qss[232] * x576 - kf_qss[238] * x524 * x755 -
                     kf_qss[238] * x747 - x107 * x890 - x558 * x889 +
                     x566 * x891;
  amrex::Real x894 = kf_qss[232] * x597 - kf_qss[232] * x599 -
                     kf_qss[238] * x524 * x764 - kf_qss[238] * x759 -
                     x107 * x887 - x586 * x889 + x595 * x891;
  amrex::Real x895 = -kf_qss[234] * x488 + kf_qss[234] * x545 -
                     kf_qss[238] * x524 * x769 -
                     kf_qss[238] * x485 / ((x19) * (x19)) - x132 * x890 +
                     x539 * x891 - x558 * x885;
  amrex::Real x896 =
    -kf_qss[234] * x564 - kf_qss[234] * x585 - kf_qss[238] * x524 * x767 -
    kf_qss[238] * x482 / ((x19) * (x19)) - x132 * x887 - x135 * x894 -
    x562 * x895 + x582 * x893 - x586 * x885 + x594 * x891;
  const amrex::Real x897 = x680 * (-kf_qss[234] * x612 + x609 * x896);
  amrex::Real x899 = -kf_qss[238] * x628 - kf_qss[238] * x773;
  x886 = -kf_qss[236] * x710 - kf_qss[236] * x712 -
         kf_qss[236] * x640 / ((x47) * (x47)) -
         kf_qss[238] * x524 * x717 / ((x19) * (x19)) - x53 * x899 - x658 * x886;
  x889 = -kf_qss[232] * x657 - kf_qss[232] * x692 -
         kf_qss[238] * x524 * x693 / ((x19) * (x19)) - x104 * x41 * x899 -
         x107 * x886 - x647 * x889 + x706 * x891;
  x885 = -kf_qss[234] * x688 - kf_qss[234] * x723 - kf_qss[234] * x727 -
         kf_qss[238] * x524 * x728 / ((x19) * (x19)) - x127 * x41 * x899 -
         x132 * x886 - x135 * x889 - x647 * x885 + x689 * x893 + x724 * x891 -
         x725 * x895;
  x895 = x733 * (x561 * x896 - x610 * x885);
  const amrex::Real x909 =
    x141 * x680 *
    (-kf_qss[188] * x463 * x81 / ((x461) * (x461)) +
     kf_qss[188] * (kf_qss[299] + 10.0e-13) / ((x461) * (x461)));
  const amrex::Real x913 =
    x733 *
    (-kf_qss[188] * x463 * x645 / ((x461) * (x461)) -
     kf_qss[188] * x617 * (kf_qss[330] * sc[4] + 10.0e-13) / ((x461) * (x461)) -
     kf_qss[188] * x677 / ((x461) * (x461)) -
     x670 *
       (-kf_qss[188] * x463 * x81 / ((x461) * (x461)) +
        kf_qss[188] * (kf_qss[299] + 10.0e-13) / ((x461) * (x461))) /
       x136);
  const amrex::Real x915 =
    (-kf_qss[251] * sc[45] / x47 + kf_qss[253] * sc[45] * x53 / x19) / x95;
  const amrex::Real x919 =
    (-kf_qss[247] * x707 + kf_qss[253] * x103 * x112 * x707 - x106 * x915) /
    x122;
  const amrex::Real x920 =
    (-kf_qss[249] * x726 + kf_qss[253] * x112 * x126 * x726 - x131 * x915 -
     x134 * x919) /
    x136;
  const amrex::Real x922 = x606 * x733 * x920;
  amrex::Real x924 = kf_qss[254] / ((x19) * (x19));
  amrex::Real x925 = kf_qss[254] * x512 - x513 * x924;
  amrex::Real x926 = kf_qss[250] * x555 -
                     kf_qss[250] * x126 * x97 / ((x124) * (x124)) -
                     kf_qss[250] * x129 * x94 / ((x124) * (x124)) -
                     x481 * x925 - x524 * x554 * x924;
  amrex::Real x927 = -kf_qss[252] * x503 + kf_qss[252] * x508;
  amrex::Real x928 = -kf_qss[252] * x491 - kf_qss[252] * x501 -
                     x524 * x531 * x924 - x53 * x925 - x927 * x97;
  amrex::Real x929 =
    -kf_qss[248] * x569 + kf_qss[248] * x570 - x524 * x572 * x924 - x573 * x925;
  amrex::Real x930 = kf_qss[252] * x118 / ((x47) * (x47)) - kf_qss[254] * x751 -
                     kf_qss[254] * x752 - x121 * x927;
  amrex::Real x932 = -kf_qss[248] * x576 - kf_qss[254] * x524 * x755 -
                     x107 * x930 - x116 * x573 * x924 - x558 * x929 +
                     x566 * x928;
  amrex::Real x933 = -kf_qss[252] * x591 + kf_qss[252] * x57 / ((x47) * (x47)) -
                     kf_qss[254] * x760 - kf_qss[254] * x762 - x113 * x927;
  amrex::Real x934 = kf_qss[248] * x597 - kf_qss[248] * x599 -
                     kf_qss[254] * x524 * x764 - x107 * x933 -
                     x573 * x7 * x924 - x586 * x929 + x595 * x928;
  amrex::Real x935 = -kf_qss[250] * x121 * x126 / ((x124) * (x124)) +
                     kf_qss[250] * x545 - kf_qss[254] * x524 * x769 -
                     x132 * x930 - x485 * x924 + x539 * x928 - x558 * x926;
  amrex::Real x936 = -kf_qss[250] * x113 * x126 / ((x124) * (x124)) -
                     kf_qss[250] * x129 * x81 / ((x124) * (x124)) -
                     kf_qss[254] * x524 * x767 - x132 * x933 - x135 * x934 -
                     x482 * x924 - x562 * x935 + x582 * x932 - x586 * x926 +
                     x594 * x928;
  const amrex::Real x937 =
    x680 * (-kf_qss[250] * x139 * x610 / ((x124) * (x124)) + x609 * x936);
  amrex::Real x938 = -kf_qss[254] * x628 - x38 * x617 * x924;
  x927 = -kf_qss[252] * x710 - kf_qss[252] * x712 -
         kf_qss[252] * x640 / ((x47) * (x47)) - x524 * x717 * x924 -
         x53 * x938 - x658 * x927;
  x929 = -kf_qss[248] * x657 - kf_qss[248] * x692 - x107 * x927 -
         x524 * x693 * x924 - x573 * x938 - x647 * x929 + x706 * x928;
  x926 = -kf_qss[250] * x727 - kf_qss[250] * x126 * x658 / ((x124) * (x124)) -
         kf_qss[250] * x129 * x645 / ((x124) * (x124)) - x132 * x927 -
         x135 * x929 - x481 * x938 - x524 * x728 * x924 - x647 * x926 +
         x689 * x932 + x724 * x928 - x725 * x935;
  x935 = x733 * (x561 * x936 - x610 * x926);
  amrex::Real x944 =
    (-kf_qss[314] - kf_qss[316] - kf_qss[360] - kf_qss[362]) / ((x68) * (x68));
  amrex::Real x950 = -kf_qss[360] * x59 * (kf_qss[359] + 10.0e-13) / x68 -
                     kf_qss[362] * x72 * (kf_qss[361] + 10.0e-13) / x68 +
                     x61 * x944 * (kf_qss[359] + 10.0e-13) +
                     x73 * x944 * (kf_qss[361] + 10.0e-13);
  amrex::Real x956 =
    (-kf_qss[318] - kf_qss[320] - kf_qss[364] - kf_qss[366]) / ((x30) * (x30));
  amrex::Real x958 = (-kf_qss[364] * x22 * (kf_qss[363] + 10.0e-13) / x30 +
                      x24 * x956 * (kf_qss[363] + 10.0e-13)) /
                     ((x34) * (x34));
  amrex::Real x963 = kf_qss[262] * x512 - kf_qss[262] * x513 / ((x19) * (x19)) -
                     kf_qss[320] * x87 / x19 + x39 * x86 * x956 / x34 +
                     x39 * x86 * x958 / x30;
  amrex::Real x964 = -kf_qss[260] * x503 + kf_qss[260] * x508 -
                     kf_qss[318] * x37 / x47 + x21 * x50 * x956 / x34 +
                     x21 * x50 * x958 / x30;
  amrex::Real x966 = -kf_qss[262] * x524 / ((x19) * (x19)) -
                     kf_qss[320] * x37 / x19 + x21 * x39 * x956 / x34 +
                     x21 * x39 * x958 / x30;
  amrex::Real x967 = -kf_qss[260] * x491 - kf_qss[260] * x501 -
                     kf_qss[316] * x94 / x47 - kf_qss[318] * x87 / x47 +
                     x470 * x83 * x92 * x950 / x68 + x521 * x92 * x944 -
                     x53 * x963 + x531 * x966 - x964 * x97 +
                     x50 * x86 * x956 / x34 + x50 * x86 * x958 / x30;
  amrex::Real x968 = kf_qss[258] * x555 -
                     kf_qss[258] * x126 * x97 / ((x124) * (x124)) -
                     kf_qss[258] * x129 * x94 / ((x124) * (x124)) -
                     kf_qss[314] * x94 / x124 + x130 * x470 * x92 * x950 / x68 -
                     x481 * x963 + x546 * x92 * x944 + x554 * x966;
  amrex::Real x969 = kf_qss[260] * x118 / ((x47) * (x47)) - kf_qss[262] * x752 -
                     x121 * x964 + x543 * x966;
  amrex::Real x970 = -kf_qss[258] * x121 * x126 / ((x124) * (x124)) +
                     kf_qss[258] * x545 - kf_qss[262] * x485 / ((x19) * (x19)) +
                     x116 * x553 * x966 / x19 - x132 * x969 + x539 * x967 -
                     x558 * x968;
  x521 = -kf_qss[260] * x591 + kf_qss[260] * x57 / ((x47) * (x47)) -
         kf_qss[262] * x760 - kf_qss[316] * x81 / x47 - x113 * x964 +
         x470 * x80 * x83 * x950 + x521 * x79 * x944 + x587 * x966;
  x587 = -kf_qss[256] * x569 + kf_qss[256] * x570 + x572 * x966 - x573 * x963;
  amrex::Real x974 = kf_qss[256] * x597 - kf_qss[256] * x599 -
                     kf_qss[262] * x759 - x107 * x521 - x586 * x587 +
                     x595 * x967 + x571 * x7 * x966 / x19;
  amrex::Real x975 = -kf_qss[256] * x576 - kf_qss[262] * x747 - x107 * x969 +
                     x116 * x571 * x966 / x19 - x558 * x587 + x566 * x967;
  x546 = -kf_qss[258] * x113 * x126 / ((x124) * (x124)) -
         kf_qss[258] * x129 * x81 / ((x124) * (x124)) -
         kf_qss[262] * x482 / ((x19) * (x19)) - kf_qss[314] * x81 / x124 +
         x130 * x470 * x80 * x950 - x132 * x521 - x135 * x974 +
         x546 * x79 * x944 - x562 * x970 + x582 * x975 - x586 * x968 +
         x594 * x967 + x553 * x7 * x966 / x19;
  const amrex::Real x977 =
    x680 *
    (-kf_qss[258] * x612 -
     x141 * (x464 * x470 * x80 * x950 + x465 * x79 * x944) + x546 * x609);
  x641 = -x641 * x944 * (kf_qss[359] + 10.0e-13) -
         x643 * x944 * (kf_qss[361] + 10.0e-13) +
         x682 * (-kf_qss[314] - kf_qss[316] - kf_qss[360] - kf_qss[362]);
  x615 = -x700 * x956 +
         x615 * (-kf_qss[318] - kf_qss[320] - kf_qss[364] - kf_qss[366]) /
           ((x30) * (x30));
  x39 = -kf_qss[245] * sc[45] / x19 - kf_qss[262] * x628 - kf_qss[262] * x773 -
        kf_qss[320] * x617 / x19 + x39 * x616 * x958 - x39 * x615 / x34;
  x643 = -kf_qss[243] * sc[45] / x47 - kf_qss[260] * x710 - kf_qss[260] * x712 -
         kf_qss[260] * x640 / ((x47) * (x47)) - kf_qss[316] * x645 / x47 -
         kf_qss[318] * x617 / x47 - x39 * x53 + x50 * x616 * x958 -
         x641 * x77 * x83 - x658 * x964 + x684 * x83 * x950 + x717 * x966 -
         x50 * x615 / x34;
  x682 = -kf_qss[239] * x707 - kf_qss[256] * x657 - kf_qss[256] * x692 -
         x107 * x643 - x39 * x573 + x571 * x629 * x966 - x587 * x647 +
         x706 * x967;
  x700 = -kf_qss[241] * x726 - kf_qss[258] * x688 - kf_qss[258] * x723 -
         kf_qss[258] * x727 - kf_qss[314] * x645 / x124 - x130 * x641 * x77 +
         x130 * x684 * x950 - x132 * x643 - x135 * x682 - x39 * x481 +
         x553 * x629 * x966 - x647 * x968 + x689 * x975 + x724 * x967 -
         x725 * x970;
  x465 = x733 *
         (-kf_qss[66] * sc[26] / x461 - x464 * x641 * x77 + x464 * x684 * x950 +
          x546 * x561 - x610 * x700 + x616 * x672 * x958 - x615 * x672 / x34 -
          x670 * (x464 * x470 * x80 * x950 + x465 * x79 * x944) / x136);
  x684 = kf_qss[246] * x512 - kf_qss[246] * x513 / ((x19) * (x19));
  x964 = -kf_qss[244] * x37 * x49 / ((x47) * (x47)) + kf_qss[244] * x508;
  x968 = -kf_qss[244] * x49 * x87 / ((x47) * (x47)) -
         kf_qss[244] * x82 * x94 / ((x47) * (x47)) -
         kf_qss[246] * x524 * x531 / ((x19) * (x19)) - x53 * x684 - x964 * x97;
  x970 = -kf_qss[240] * x569 + kf_qss[240] * x570 -
         kf_qss[246] * x524 * x572 / ((x19) * (x19)) - x573 * x684;
  x587 = kf_qss[244] * x118 / ((x47) * (x47)) - kf_qss[246] * x751 -
         kf_qss[246] * x752 - x121 * x964;
  amrex::Real x999 = -kf_qss[240] * x576 - kf_qss[246] * x524 * x755 -
                     kf_qss[246] * x747 - x107 * x587 - x558 * x970 +
                     x566 * x968;
  amrex::Real x1000 = -kf_qss[242] * x550 - kf_qss[242] * x552 +
                      kf_qss[242] * x555 -
                      kf_qss[246] * x524 * x554 / ((x19) * (x19)) - x481 * x684;
  amrex::Real x1001 = -kf_qss[242] * x488 + kf_qss[242] * x545 -
                      kf_qss[246] * x524 * x769 -
                      kf_qss[246] * x485 / ((x19) * (x19)) - x1000 * x558 -
                      x132 * x587 + x539 * x968;
  amrex::Real x1002 = kf_qss[244] * x57 / ((x47) * (x47)) -
                      kf_qss[244] * x81 * x82 / ((x47) * (x47)) -
                      kf_qss[246] * x760 - kf_qss[246] * x762 - x113 * x964;
  amrex::Real x1003 = kf_qss[240] * x597 - kf_qss[240] * x599 -
                      kf_qss[246] * x524 * x764 - kf_qss[246] * x759 -
                      x1002 * x107 - x586 * x970 + x595 * x968;
  amrex::Real x1004 =
    -kf_qss[242] * x564 - kf_qss[242] * x585 - kf_qss[246] * x524 * x767 -
    kf_qss[246] * x482 / ((x19) * (x19)) - x1000 * x586 - x1001 * x562 -
    x1002 * x132 - x1003 * x135 + x582 * x999 + x594 * x968;
  const amrex::Real x1005 = x680 * (-kf_qss[242] * x612 + x1004 * x609);
  amrex::Real x1006 = -kf_qss[246] * x628 - kf_qss[246] * x773;
  x964 = -kf_qss[244] * x49 * x617 / ((x47) * (x47)) -
         kf_qss[244] * x640 / ((x47) * (x47)) -
         kf_qss[244] * x645 * x82 / ((x47) * (x47)) -
         kf_qss[246] * x524 * x717 / ((x19) * (x19)) - x1006 * x53 -
         x658 * x964;
  x970 = -kf_qss[240] * x657 - kf_qss[240] * x692 -
         kf_qss[246] * x524 * x693 / ((x19) * (x19)) - x1006 * x573 -
         x107 * x964 - x647 * x970 + x706 * x968;
  x1000 = -kf_qss[242] * x688 - kf_qss[242] * x723 - kf_qss[242] * x727 -
          kf_qss[246] * x524 * x728 / ((x19) * (x19)) - x1000 * x647 -
          x1001 * x725 - x1006 * x481 - x132 * x964 - x135 * x970 +
          x689 * x999 + x724 * x968;
  x1001 = x733 * (-x1000 * x610 + x1004 * x561);
  amrex::Real x1011 = kf_qss[270] * x512 - kf_qss[270] * x513 / ((x19) * (x19));
  amrex::Real x1014 =
    -kf_qss[266] * x550 - kf_qss[266] * x552 + kf_qss[266] * x555 -
    kf_qss[270] * x524 * x554 / ((x19) * (x19)) - x1011 * x481;
  amrex::Real x1015 = -kf_qss[268] * x503 + kf_qss[268] * x508;
  amrex::Real x1016 = -kf_qss[268] * x491 - kf_qss[268] * x501 -
                      kf_qss[270] * x524 * x531 / ((x19) * (x19)) -
                      x1011 * x53 - x1015 * x97;
  amrex::Real x1018 = -kf_qss[264] * x569 + kf_qss[264] * x570 -
                      kf_qss[270] * x524 * x572 / ((x19) * (x19)) -
                      x1011 * x573;
  amrex::Real x1019 = -kf_qss[268] * x591 +
                      kf_qss[268] * x57 / ((x47) * (x47)) - kf_qss[270] * x760 -
                      kf_qss[270] * x762 - x1015 * x113;
  amrex::Real x1020 = kf_qss[264] * x597 - kf_qss[264] * x599 -
                      kf_qss[270] * x524 * x764 - kf_qss[270] * x759 +
                      x1016 * x106 * x85 / ((x95) * (x95)) - x1018 * x586 -
                      x1019 * x107;
  amrex::Real x1023 = kf_qss[268] * x118 / ((x47) * (x47)) -
                      kf_qss[270] * x116 * x52 * x524 - kf_qss[270] * x752 -
                      x1015 * x121;
  x553 = -kf_qss[266] * x488 + kf_qss[266] * x545 -
         kf_qss[270] * x116 * x481 / ((x19) * (x19)) -
         kf_qss[270] * x116 * x524 * x553 / ((x19) * (x19) * (x19)) -
         x1014 * x558 + x1016 * x539 - x1023 * x132;
  x571 = -kf_qss[264] * x576 - kf_qss[270] * x116 * x573 / ((x19) * (x19)) -
         kf_qss[270] * x116 * x524 * x571 / ((x19) * (x19) * (x19)) +
         x1016 * x566 - x1018 * x558 - x1023 * x107;
  amrex::Real x1026 = -kf_qss[266] * x564 - kf_qss[266] * x585 -
                      kf_qss[270] * x524 * x767 -
                      kf_qss[270] * x482 / ((x19) * (x19)) - x1014 * x586 +
                      x1016 * x131 * x85 / ((x95) * (x95)) - x1019 * x132 -
                      x1020 * x135 - x553 * x562 + x571 * x582;
  const amrex::Real x1027 = x680 * (-kf_qss[266] * x612 + x1026 * x609);
  amrex::Real x1028 = -kf_qss[270] * x628 - kf_qss[270] * x773;
  x1015 = -kf_qss[268] * x710 - kf_qss[268] * x712 -
          kf_qss[268] * x640 / ((x47) * (x47)) -
          kf_qss[270] * x524 * x717 / ((x19) * (x19)) - x1015 * x658 -
          x1028 * x53;
  x1018 = -kf_qss[264] * x657 - kf_qss[264] * x692 -
          kf_qss[270] * x524 * x693 / ((x19) * (x19)) - x1015 * x107 +
          x1016 * x706 - x1018 * x647 - x1028 * x573;
  x1014 = -kf_qss[266] * x688 - kf_qss[266] * x723 - kf_qss[266] * x727 -
          kf_qss[270] * x524 * x728 / ((x19) * (x19)) - x1014 * x647 -
          x1015 * x132 + x1016 * x724 - x1018 * x135 - x1028 * x481 -
          x553 * x725 + x571 * x689;
  x553 = x733 * (-x1014 * x610 + x1026 * x561);
  amrex::Real x1033 = kf_qss[278] * x524;
  amrex::Real x1035 = kf_qss[278] * x512 - kf_qss[278] * x513 / ((x19) * (x19));
  amrex::Real x1037 =
    -kf_qss[276] * x37 * x49 / ((x47) * (x47)) + kf_qss[276] * x508;
  amrex::Real x1038 = -kf_qss[276] * x49 * x87 / ((x47) * (x47)) -
                      kf_qss[276] * x82 * x94 / ((x47) * (x47)) -
                      x1033 * x531 / ((x19) * (x19)) - x1035 * x53 -
                      x1037 * x97;
  amrex::Real x1039 = -kf_qss[274] * x550 - kf_qss[274] * x552 +
                      kf_qss[274] * x555 - x1033 * x554 / ((x19) * (x19)) -
                      x1035 * x481;
  amrex::Real x1040 = kf_qss[276] * x118 / ((x47) * (x47)) -
                      kf_qss[278] * x752 - x1033 * x116 * x52 - x1037 * x121;
  amrex::Real x1041 = -kf_qss[274] * x488 + kf_qss[274] * x545 -
                      kf_qss[278] * x485 / ((x19) * (x19)) - x1033 * x769 +
                      x1038 * x539 - x1039 * x558 - x1040 * x132;
  x52 = kf_qss[276] * x57 / ((x47) * (x47)) -
        kf_qss[276] * x81 * x82 / ((x47) * (x47)) - kf_qss[278] * x760 -
        x1033 * x52 * x7 - x1037 * x113;
  amrex::Real x1043 = -kf_qss[272] * x569 + kf_qss[272] * x570 -
                      x1033 * x572 / ((x19) * (x19)) - x1035 * x573;
  amrex::Real x1044 = kf_qss[272] * x597 - kf_qss[272] * x599 -
                      kf_qss[278] * x759 - x1033 * x764 + x1038 * x595 -
                      x1043 * x586 - x107 * x52;
  amrex::Real x1045 = -kf_qss[272] * x576 - kf_qss[278] * x747 - x1033 * x755 +
                      x1038 * x566 - x1040 * x107 - x1043 * x558;
  amrex::Real x1046 = -kf_qss[274] * x564 - kf_qss[274] * x585 -
                      kf_qss[278] * x482 / ((x19) * (x19)) - x1033 * x767 +
                      x1038 * x594 - x1039 * x586 - x1041 * x562 -
                      x1044 * x135 + x1045 * x582 - x132 * x52;
  const amrex::Real x1047 = x680 * (-kf_qss[274] * x612 + x1046 * x609);
  amrex::Real x1048 = -kf_qss[278] * x628 - kf_qss[278] * x773;
  x1037 = -kf_qss[276] * x712 - kf_qss[276] * x640 / ((x47) * (x47)) -
          kf_qss[276] * x645 * x82 / ((x47) * (x47)) -
          x1033 * x717 / ((x19) * (x19)) - x1037 * x658 - x1048 * x53;
  x1043 = -kf_qss[272] * x657 - kf_qss[272] * x692 -
          x1033 * x693 / ((x19) * (x19)) - x1037 * x107 + x1038 * x706 -
          x1043 * x647 - x1048 * x573;
  x1033 = -kf_qss[274] * x688 - kf_qss[274] * x723 - kf_qss[274] * x727 -
          x1033 * x728 / ((x19) * (x19)) - x1037 * x132 + x1038 * x724 -
          x1039 * x647 - x1041 * x725 - x1043 * x135 + x1045 * x689 -
          x1048 * x481;
  x1039 = x733 * (-kf_qss[62] * sc[15] / x461 - x1033 * x610 + x1046 * x561);
  x1041 = x112 * (kf_qss[269] * sc[45] + kf_qss[310] * sc[30]);
  const amrex::Real x1055 =
    (-kf_qss[267] * sc[45] / x47 +
     x54 * (kf_qss[269] * sc[45] + kf_qss[310] * sc[30])) /
    x95;
  const amrex::Real x1056 =
    (-kf_qss[263] * x707 + x104 * x1041 - x1055 * x106) / x122;
  const amrex::Real x1057 =
    (-kf_qss[265] * x726 + x1041 * x127 - x1055 * x131 - x1056 * x134) / x136;
  const amrex::Real x1058 = x733 * (-kf_qss[62] * sc[14] / x461 - x1057 * x606);
  const amrex::Real x1060 =
    (-kf_qss[275] * sc[45] / x47 + kf_qss[277] * sc[45] * x53 / x19) / x95;
  const amrex::Real x1061 =
    (-kf_qss[271] * x707 + kf_qss[277] * x103 * x112 * x707 - x106 * x1060) /
    x122;
  const amrex::Real x1062 =
    (-kf_qss[273] * x726 + kf_qss[277] * x112 * x126 * x726 - x1060 * x131 -
     x1061 * x134) /
    x136;
  const amrex::Real x1063 = x1062 * x606 * x733;
  const amrex::Real x1067 =
    x680 *
    (-kf_qss[300] * x610 / x124 -
     x141 * (-kf_qss[300] * x463 * x81 / ((x461) * (x461)) +
             kf_qss[300] * (kf_qss[299] + 10.0e-13) / ((x461) * (x461))));
  const amrex::Real x1068 =
    x733 *
    (-kf_qss[300] * x463 * x645 / ((x461) * (x461)) -
     kf_qss[300] * x617 * (kf_qss[330] * sc[4] + 10.0e-13) / ((x461) * (x461)) -
     kf_qss[300] * x677 / ((x461) * (x461)) -
     x670 *
       (-kf_qss[300] * x463 * x81 / ((x461) * (x461)) +
        kf_qss[300] * (kf_qss[299] + 10.0e-13) / ((x461) * (x461))) /
       x136);
  const amrex::Real x1070 =
    x141 * x680 *
    (-kf_qss[214] * x463 * x81 / ((x461) * (x461)) +
     kf_qss[214] * (kf_qss[299] + 10.0e-13) / ((x461) * (x461)));
  const amrex::Real x1071 = kf_qss[334] * x77 / x68;
  const amrex::Real x1072 = sc[25] * x1071;
  const amrex::Real x1074 = kf_qss[336] * sc[25] * x36;
  const amrex::Real x1076 = (-kf_qss[304] * sc[26] / x47 + x1072 * x83 -
                             x1074 * x38 * x54 + x1074 * x50) /
                            x95;
  const amrex::Real x1079 = (-x104 * x1074 * x112 * x38 - x106 * x1076) / x122;
  const amrex::Real x1082 =
    (x1072 * x130 - x1074 * x112 * x127 * x38 - x1076 * x131 - x1079 * x134) /
    x136;
  x463 =
    x733 *
    (-kf_qss[214] * x463 * x645 / ((x461) * (x461)) -
     kf_qss[214] * x617 * (kf_qss[330] * sc[4] + 10.0e-13) / ((x461) * (x461)) -
     kf_qss[214] * x677 / ((x461) * (x461)) + x1072 * x464 + x1074 * x672 -
     x1082 * x606 -
     x670 *
       (-kf_qss[214] * x463 * x81 / ((x461) * (x461)) +
        kf_qss[214] * (kf_qss[299] + 10.0e-13) / ((x461) * (x461))) /
       x136);
  x677 = kf_qss[336] * sc[24] * x36;
  const amrex::Real x1085 = sc[24] * x1071;
  const amrex::Real x1086 = (x1085 * x83 - x38 * x54 * x677 + x50 * x677) / x95;
  const amrex::Real x1087 = (-x104 * x112 * x38 * x677 - x106 * x1086) / x122;
  const amrex::Real x1088 =
    (x1085 * x130 - x1086 * x131 - x1087 * x134 - x112 * x127 * x38 * x677) /
    x136;
  const amrex::Real x1089 = x733 * (x1085 * x464 - x1088 * x606 + x672 * x677);
  const amrex::Real x1092 = (-kf_qss[304] * sc[24] * x107 * x135 / x47 +
                             kf_qss[304] * sc[24] * x132 / x47) /
                            x136;
  const amrex::Real x1093 =
    x733 * (-x1092 * x606 - (kf_qss[64] * sc[0] + kf_qss[66] * sc[10]) / x461);
  const amrex::Real x1095 = kf_qss[310] * sc[15] * x112;
  const amrex::Real x1097 =
    (-kf_qss[310] * sc[15] * x107 * x54 + x104 * x1095) / x122;
  const amrex::Real x1098 =
    (-kf_qss[310] * sc[15] * x132 * x54 + x1095 * x127 - x1097 * x134) / x136;
  const amrex::Real x1099 = x733 * (-kf_qss[91] * sc[4] / x461 - x1098 * x606);
  const amrex::Real x1100 =
    (-kf_qss[283] * sc[45] / x47 + kf_qss[285] * sc[45] * x53 / x19) / x95;
  x707 =
    (-kf_qss[279] * x707 + kf_qss[285] * x103 * x112 * x707 - x106 * x1100) /
    x122;
  x726 = (-kf_qss[281] * x726 + kf_qss[285] * x112 * x126 * x726 -
          x1100 * x131 - x134 * x707) /
         x136;
  const amrex::Real x1104 = x606 * x726 * x733;
  amrex::Real x1106 = kf_qss[286] * x512 - kf_qss[286] * x513 / ((x19) * (x19));
  x503 = -kf_qss[284] * x503 + kf_qss[284] * x508;
  x491 = -kf_qss[284] * x491 - kf_qss[284] * x501 -
         kf_qss[286] * x524 * x531 / ((x19) * (x19)) - x1106 * x53 - x503 * x97;
  x501 = -kf_qss[284] * x591 + kf_qss[284] * x57 / ((x47) * (x47)) -
         kf_qss[286] * x760 - kf_qss[286] * x762 - x113 * x503;
  x569 = -kf_qss[280] * x569 + kf_qss[280] * x570 -
         kf_qss[286] * x524 * x572 / ((x19) * (x19)) - x1106 * x573;
  x570 = kf_qss[284] * x118 / ((x47) * (x47)) - kf_qss[286] * x751 -
         kf_qss[286] * x752 - x121 * x503;
  x576 = -kf_qss[280] * x576 - kf_qss[286] * x524 * x755 - kf_qss[286] * x747 -
         x107 * x570 + x491 * x566 - x558 * x569;
  x550 = -kf_qss[282] * x550 - kf_qss[282] * x552 + kf_qss[282] * x555 -
         kf_qss[286] * x524 * x554 / ((x19) * (x19)) - x1106 * x481;
  x488 = -kf_qss[282] * x488 + kf_qss[282] * x545 - kf_qss[286] * x524 * x769 -
         kf_qss[286] * x485 / ((x19) * (x19)) - x132 * x570 + x491 * x539 -
         x550 * x558;
  x552 = kf_qss[280] * x597 - kf_qss[280] * x599 - kf_qss[286] * x524 * x764 -
         kf_qss[286] * x759 - x107 * x501 + x491 * x595 - x569 * x586;
  x564 = -kf_qss[282] * x564 - kf_qss[282] * x585 - kf_qss[286] * x524 * x767 -
         kf_qss[286] * x482 / ((x19) * (x19)) - x132 * x501 - x135 * x552 -
         x488 * x562 + x491 * x594 - x550 * x586 + x576 * x582;
  x585 = x680 * (-kf_qss[282] * x612 + x564 * x609);
  x591 = -kf_qss[286] * x628 - kf_qss[286] * x773;
  x597 = -kf_qss[284] * x710 - kf_qss[284] * x712 -
         kf_qss[284] * x640 / ((x47) * (x47)) -
         kf_qss[286] * x524 * x717 / ((x19) * (x19)) - x503 * x658 - x53 * x591;
  x599 = -kf_qss[280] * x657 - kf_qss[280] * x692 -
         kf_qss[286] * x524 * x693 / ((x19) * (x19)) - x104 * x41 * x591 -
         x107 * x597 + x491 * x706 - x569 * x647;
  x612 = -kf_qss[282] * x688 - kf_qss[282] * x723 - kf_qss[282] * x727 -
         kf_qss[286] * x524 * x728 / ((x19) * (x19)) - x127 * x41 * x591 -
         x132 * x597 - x135 * x599 - x488 * x725 + x491 * x724 - x550 * x647 +
         x576 * x689;
  x688 = x733 * (x561 * x564 - x610 * x612);
  x692 = kf_qss[161] * x733 / x461;
  x710 = kf_qss[187] * x733 / x461;
  x712 = -kf_qss[288] - kf_qss[293] - kf_qss[295];
  x723 = -kf_qss[292] - kf_qss[296] - kf_qss[298];
  x747 = x723 / ((x19) * (x19));
  x752 = (-kf_qss[290] - kf_qss[294] - kf_qss[297]) / ((x47) * (x47));
  x512 = kf_qss[297] / x19 - x512 * x723 + x513 * x747;
  x508 = kf_qss[298] / x47 + x37 * x49 * x752 -
         x508 * (-kf_qss[290] - kf_qss[294] - kf_qss[297]);
  x513 = x49 * x752 * x87 - x508 * x97 - x512 * x53 + x524 * x531 * x747 +
         x752 * x82 * x94;
  x57 = kf_qss[293] / x47 - kf_qss[295] * x54 - x113 * x508 + x53 * x7 * x747 -
        x57 * x752 + x723 * x762 + x752 * x81 * x82;
  x531 = (-kf_qss[287] - kf_qss[289] - kf_qss[291]) / ((x101) * (x101));
  x572 = kf_qss[290] / x101 - kf_qss[292] * x97 / x101 + x103 * x531 * x97 -
         x512 * x573 + x524 * x572 * x747 -
         x531 * (kf_qss[290] * sc[45] + kf_qss[322] + 10.0e-13);
  x595 = kf_qss[288] / x101 - kf_qss[292] * x113 / x101 -
         kf_qss[295] * x104 * x112 + x103 * x113 * x531 - x107 * x57 +
         x513 * x595 + x524 * x723 * x764 -
         x531 * (kf_qss[288] * sc[45] + kf_qss[328] + 10.0e-13) - x572 * x586 +
         x573 * x7 * x747;
  x118 = kf_qss[289] / x47 - kf_qss[291] * x54 + x116 * x53 * x747 -
         x118 * x752 - x121 * x508 + x723 * x751;
  x97 = kf_qss[294] / x124 - kf_qss[296] * x97 / x124 - x481 * x512 +
        x524 * x554 * x747 - x555 * x712 +
        x126 * x712 * x97 / ((x124) * (x124)) +
        x129 * x712 * x94 / ((x124) * (x124));
  x485 = kf_qss[287] / x124 - kf_qss[291] * x112 * x127 -
         kf_qss[296] * x121 / x124 - x118 * x132 +
         x121 * x126 * x712 / ((x124) * (x124)) + x485 * x747 + x513 * x539 +
         x524 * x723 * x769 - x545 * x712 - x558 * x97;
  x539 = -kf_qss[291] * x104 * x112 - kf_qss[292] * x121 / x101 +
         x103 * x121 * x531 - x107 * x118 + x116 * x573 * x747 + x513 * x566 +
         x524 * x723 * x755 - x558 * x572;
  x482 = -kf_qss[295] * x112 * x127 - kf_qss[296] * x113 / x124 +
         x113 * x126 * x712 / ((x124) * (x124)) - x132 * x57 - x135 * x595 +
         x482 * x747 - x485 * x562 + x513 * x594 + x524 * x723 * x767 +
         x539 * x582 - x586 * x97 + x129 * x712 * x81 / ((x124) * (x124));
  x545 = x680 * (x482 * x609 + x139 * x610 * x712 / ((x124) * (x124)));
  x554 = x38 * x617 * x747 + x628 * x723 -
         (kf_qss[211] + kf_qss[221] * sc[0] + kf_qss[229] * sc[2] +
          kf_qss[237] * sc[4] + kf_qss[245] * sc[10] + kf_qss[253] * sc[8] +
          kf_qss[261] * sc[3] + kf_qss[269] * sc[15] + kf_qss[277] * sc[17] +
          kf_qss[285] * sc[31]) /
           x19;
  x49 = x49 * x617 * x752 - x508 * x658 + x524 * x717 * x747 - x53 * x554 +
        x640 * x752 + x645 * x752 * x82 -
        (kf_qss[209] + kf_qss[219] * sc[0] + kf_qss[227] * sc[2] +
         kf_qss[235] * sc[4] + kf_qss[243] * sc[10] + kf_qss[251] * sc[8] +
         kf_qss[259] * sc[3] + kf_qss[267] * sc[15] + kf_qss[275] * sc[17] +
         kf_qss[283] * sc[31]) /
          x47;
  x53 = -kf_qss[292] * x658 / x101 + x103 * x531 * x658 - x107 * x49 +
        x513 * x706 + x524 * x693 * x747 - x554 * x573 - x572 * x647 +
        x657 * (-kf_qss[287] - kf_qss[289] - kf_qss[291]) -
        (kf_qss[205] + kf_qss[215] * sc[0] + kf_qss[223] * sc[2] +
         kf_qss[231] * sc[4] + kf_qss[239] * sc[10] + kf_qss[247] * sc[8] +
         kf_qss[255] * sc[3] + kf_qss[263] * sc[15] + kf_qss[271] * sc[17] +
         kf_qss[279] * sc[31]) /
          x101;
  x82 = -kf_qss[296] * x658 / x124 - x132 * x49 - x135 * x53 - x481 * x554 -
        x485 * x725 + x513 * x724 + x524 * x728 * x747 + x539 * x689 -
        x647 * x97 + x712 * x727 -
        (kf_qss[207] + kf_qss[217] * sc[0] + kf_qss[225] * sc[2] +
         kf_qss[233] * sc[4] + kf_qss[241] * sc[10] + kf_qss[249] * sc[8] +
         kf_qss[257] * sc[3] + kf_qss[265] * sc[15] + kf_qss[273] * sc[17] +
         kf_qss[281] * sc[31]) /
          x124 +
        x126 * x658 * x712 / ((x124) * (x124)) +
        x129 * x645 * x712 / ((x124) * (x124));
  x103 = x733 * (-kf_qss[213] / x461 + x482 * x561 - x610 * x82);
  x126 = kf_qss[337] * x135 * x610 * x733 / x101;
  x129 = kf_qss[347] * x59 * x77 * (kf_qss[359] + 10.0e-13) / x68;
  x461 = (-kf_qss[339] / x124 - x107 * x129 * x135 * x83 - x129 * x130 +
          x129 * x132 * x83) /
         x136;
  x481 = x733 * (-x129 * x464 - x461 * x606);
  x555 = kf_qss[353] * x22 * x36 * (kf_qss[363] + 10.0e-13);
  x558 = kf_qss[351] * x72 * x77 * (kf_qss[361] + 10.0e-13) / x68;
  x562 =
    (-kf_qss[341] / x47 + x38 * x54 * x555 - x50 * x555 - x558 * x83) / x95;
  x566 = (x104 * x112 * x38 * x555 - x106 * x562) / x122;
  x130 =
    (x112 * x127 * x38 * x555 - x130 * x558 - x131 * x562 - x134 * x566) / x136;
  x464 = x733 * (-x130 * x606 - x464 * x558 - x555 * x672);
  x573 = kf_qss[343] * x112;
  x582 = (-kf_qss[343] * x107 * x54 + x104 * x573) / x122;
  x132 = (-kf_qss[343] * x132 * x54 + x127 * x573 - x134 * x582) / x136;
  x586 = x132 * x606 * x733;
  x594 = kf_qss[365] * x36;
  x50 = (-x38 * x54 * x594 + x50 * x594) / x95;
  x104 = (-x104 * x112 * x38 * x594 - x106 * x50) / x122;
  x106 = (-x104 * x134 - x112 * x127 * x38 * x594 - x131 * x50) / x136;
  x127 = x733 * (-x106 * x606 + x594 * x672);
  x131 = -kf_qss[141] * sc[8] - kf_qss[143] * sc[9] - kf_qss[150] * sc[32] -
         kf_qss[152] * sc[26] - kf_qss[67] - kf_qss[70] * sc[1] -
         kf_qss[72] * sc[4] - kf_qss[74] * sc[5] - kf_qss[76] * sc[9] -
         kf_qss[78] * sc[11] - kf_qss[80] * sc[13] - kf_qss[84] * sc[10] -
         kf_qss[86] * sc[14] - kf_qss[88] * sc[22] + 10.0e-13;
  x134 = sc[28] / x131;
  x606 = kf_qss[69] * x134;
  x609 = kf_qss[140] * sc[26] * sc[2] + kf_qss[142] * sc[26] * sc[4] +
         kf_qss[149] * sc[28] * sc[31] + kf_qss[151] * sc[25] * sc[28] +
         kf_qss[68] * sc[15] * sc[6] + kf_qss[69] * sc[0] * sc[28] +
         kf_qss[71] * sc[28] * sc[2] + kf_qss[73] * sc[28] * sc[4] +
         kf_qss[75] * sc[28] * sc[8] + kf_qss[77] * sc[10] * sc[28] +
         kf_qss[79] * sc[15] * sc[28] + kf_qss[83] * sc[28] * sc[3] +
         kf_qss[85] * sc[17] * sc[28] + kf_qss[87] * sc[28] * sc[37] + 10.0e-13;
  x610 = x609 / ((x131) * (x131));
  x617 = kf_qss[70] * x610;
  x640 = (kf_qss[140] * sc[26] + kf_qss[71] * sc[28]) / x131;
  x645 = kf_qss[83] * x134;
  x647 = kf_qss[72] * x610;
  x658 = (kf_qss[142] * sc[26] + kf_qss[73] * sc[28]) / x131;
  x672 = kf_qss[74] * x610;
  x680 = kf_qss[68] * sc[15] / x131;
  x689 = kf_qss[141] * x610;
  x693 = kf_qss[75] * x134;
  x628 = x610 * (-kf_qss[143] - kf_qss[76]);
  x706 = kf_qss[84] * x610;
  x657 = kf_qss[77] * x134;
  x717 = kf_qss[78] * x610;
  x724 = kf_qss[80] * x610;
  x725 = kf_qss[86] * x610;
  x727 = (kf_qss[68] * sc[6] + kf_qss[79] * sc[28]) / x131;
  x728 = kf_qss[85] * x134;
  x561 = kf_qss[88] * x610;
  x751 = kf_qss[151] * x134;
  x755 = kf_qss[152] * x610;
  x759 = (kf_qss[140] * sc[2] + kf_qss[142] * sc[4]) / x131;
  x760 = (kf_qss[149] * sc[31] + kf_qss[151] * sc[25] + kf_qss[69] * sc[0] +
          kf_qss[71] * sc[2] + kf_qss[73] * sc[4] + kf_qss[75] * sc[8] +
          kf_qss[77] * sc[10] + kf_qss[79] * sc[15] + kf_qss[83] * sc[3] +
          kf_qss[85] * sc[17] + kf_qss[87] * sc[37]) /
         x131;
  x762 = kf_qss[149] * x134;
  x764 = kf_qss[150] * x610;
  x767 = kf_qss[87] * x134;
  x769 = kf_qss[103] * sc[10] * sc[20] + kf_qss[111] * sc[10] * sc[15] +
         kf_qss[7] * sc[12] * sc[8] * x186 + kf_qss[9] * sc[0] * sc[20] * x186 +
         10.0e-13;
  x773 = -kf_qss[102] * sc[3] - kf_qss[112] * sc[4] - kf_qss[6] * x186 -
         kf_qss[8] * x186 + 10.0e-13;
  x503 = x769 * (-kf_qss[6] - kf_qss[8]) / ((x773) * (x773));
  x569 = kf_qss[7] * sc[12] * sc[8] + kf_qss[9] * sc[0] * sc[20];
  x550 = (kf_qss[9] * sc[20] * x186 + x569) / x773;
  x488 = x569 / x773;
  x752 = -x488 + x503;
  x508 = x769 * (-kf_qss[102] - kf_qss[6] - kf_qss[8]) / ((x773) * (x773));
  x531 = x769 * (-kf_qss[112] - kf_qss[6] - kf_qss[8]) / ((x773) * (x773));
  x572 = (kf_qss[7] * sc[12] * x186 + x569) / x773;
  x97 = (kf_qss[103] * sc[20] + kf_qss[111] * sc[15] + x569) / x773;
  x485 = (kf_qss[7] * sc[8] * x186 + x569) / x773;
  const amrex::Real x1264 = (kf_qss[111] * sc[10] + x569) / x773;
  x569 = (kf_qss[103] * sc[10] + kf_qss[9] * sc[0] * x186 + x569) / x773;
  const amrex::Real x1268 = -kf_qss[118] - kf_qss[120] - kf_qss[122] * sc[3] -
                            kf_qss[125] * sc[4] + 10.0e-13;
  const amrex::Real x1270 = kf_qss[119] * sc[34] / x1268;
  const amrex::Real x1275 =
    kf_qss[119] * sc[0] * sc[34] + kf_qss[121] * sc[12] * sc[17] +
    kf_qss[123] * sc[10] * sc[34] + kf_qss[124] * sc[10] * sc[37] + 10.0e-13;
  const amrex::Real x1276 = x1275 / ((x1268) * (x1268));
  const amrex::Real x1279 =
    (kf_qss[123] * sc[34] + kf_qss[124] * sc[37]) / x1268;
  const amrex::Real x1280 = kf_qss[121] * sc[17] / x1268;
  const amrex::Real x1282 = kf_qss[121] * sc[12] / x1268;
  const amrex::Real x1283 =
    (kf_qss[119] * sc[0] + kf_qss[123] * sc[10]) / x1268;
  const amrex::Real x1284 = kf_qss[124] * sc[10] / x1268;
  const amrex::Real x1286 =
    -kf_qss[129] - kf_qss[131] - kf_qss[134] * sc[4] + 10.0e-13;
  const amrex::Real x1289 = kf_qss[130] * sc[17] * sc[20] +
                            kf_qss[132] * sc[34] * sc[8] +
                            kf_qss[133] * sc[10] * sc[25] + 10.0e-13;
  const amrex::Real x1293 = kf_qss[132] * sc[34] / x1286;
  const amrex::Real x1295 = kf_qss[133] * sc[25] / x1286;
  const amrex::Real x1297 = kf_qss[130] * sc[20] / x1286;
  const amrex::Real x1298 = kf_qss[130] * sc[17] / x1286;
  const amrex::Real x1299 = kf_qss[133] * sc[10] / x1286;
  const amrex::Real x1300 = kf_qss[132] * sc[8] / x1286;
  const amrex::Real x1302 =
    -kf_qss[145] * sc[3] - kf_qss[146] - kf_qss[148] + 10.0e-13;
  const amrex::Real x1303 =
    kf_qss[144] * sc[35] + kf_qss[147] * sc[36] + 10.0e-13;
  const amrex::Real x1307 = kf_qss[144] / x1302;
  const amrex::Real x1308 = kf_qss[147] / x1302;
  const amrex::Real x1323 =
    -kf_qss[128] * sc[5] - kf_qss[189] * sc[9] - kf_qss[191] * sc[13] -
    kf_qss[193] * sc[3] - kf_qss[194] * sc[1] - kf_qss[196] * sc[2] -
    kf_qss[197] * sc[4] - kf_qss[199] * sc[7] - kf_qss[201] * sc[8] -
    kf_qss[203] * sc[18] - kf_qss[42] * sc[6] + 10.0e-13;
  const amrex::Real x1325 = (kf_qss[195] * sc[8] + kf_qss[198] * sc[12] +
                             kf_qss[202] * sc[14] + kf_qss[41] * sc[19]) /
                            x1323;
  amrex::Real x1332 =
    kf_qss[127] * sc[4] * sc[8] + kf_qss[190] * ((sc[8]) * (sc[8])) +
    kf_qss[192] * sc[15] * sc[8] + kf_qss[195] * sc[0] * sc[8] +
    kf_qss[198] * sc[0] * sc[12] + kf_qss[200] * sc[12] * sc[6] +
    kf_qss[202] * sc[0] * sc[14] + kf_qss[204] * sc[14] * sc[6] +
    kf_qss[41] * sc[0] * sc[19] + 10.0e-13;
  const amrex::Real x1333 = x1332 / ((x1323) * (x1323));
  const amrex::Real x1334 = kf_qss[194] * x1333;
  const amrex::Real x1335 = kf_qss[196] * x1333;
  const amrex::Real x1336 = kf_qss[193] * x1333;
  const amrex::Real x1337 = kf_qss[197] * x1333;
  const amrex::Real x1339 = kf_qss[127] * sc[8] / x1323;
  const amrex::Real x1340 = kf_qss[128] * x1333;
  const amrex::Real x1341 = kf_qss[42] * x1333;
  const amrex::Real x1342 =
    (kf_qss[200] * sc[12] + kf_qss[204] * sc[14]) / x1323;
  const amrex::Real x1343 = kf_qss[199] * x1333;
  const amrex::Real x1344 = kf_qss[201] * x1333;
  const amrex::Real x1345 =
    (kf_qss[127] * sc[4] + 2.0 * kf_qss[190] * ((sc[8])) +
     kf_qss[192] * sc[15] + kf_qss[195] * sc[0]) /
    x1323;
  const amrex::Real x1346 = kf_qss[189] * x1333;
  const amrex::Real x1347 = (kf_qss[198] * sc[0] + kf_qss[200] * sc[6]) / x1323;
  const amrex::Real x1348 = kf_qss[191] * x1333;
  const amrex::Real x1349 = (kf_qss[202] * sc[0] + kf_qss[204] * sc[6]) / x1323;
  const amrex::Real x1350 = kf_qss[192] * sc[8] / x1323;
  const amrex::Real x1351 = kf_qss[203] * x1333;
  const amrex::Real x1353 = kf_qss[41] * sc[0] / x1323;
  amrex::Real x1360 = -kf_qss[172] * sc[10] - kf_qss[174] * sc[5] -
                      kf_qss[176] * sc[1] - kf_qss[178] * sc[4] -
                      kf_qss[180] * sc[11] - kf_qss[182] * sc[9] -
                      kf_qss[184] * sc[32] - kf_qss[185] + 10.0e-13;
  const amrex::Real x1363 = kf_qss[175] * sc[40] / x1360;
  amrex::Real x1373 =
    kf_qss[171] * sc[3] * sc[40] + kf_qss[173] * sc[40] * sc[4] +
    kf_qss[175] * sc[0] * sc[40] + kf_qss[177] * sc[2] * sc[40] +
    kf_qss[179] * sc[10] * sc[40] + kf_qss[181] * sc[40] * sc[8] +
    kf_qss[183] * sc[31] * sc[40] + kf_qss[186] * sc[24] * sc[6] +
    kf_qss[394] * sc[4] * sc[53] + kf_qss[396] * sc[10] * sc[53] + 10.0e-13;
  const amrex::Real x1374 = x1373 / ((x1360) * (x1360));
  const amrex::Real x1375 = kf_qss[176] * x1374;
  const amrex::Real x1376 = kf_qss[177] * sc[40] / x1360;
  const amrex::Real x1377 = kf_qss[171] * sc[40] / x1360;
  const amrex::Real x1378 = kf_qss[178] * x1374;
  const amrex::Real x1379 =
    (kf_qss[173] * sc[40] + kf_qss[394] * sc[53]) / x1360;
  const amrex::Real x1380 = kf_qss[174] * x1374;
  const amrex::Real x1382 = kf_qss[186] * sc[24] / x1360;
  const amrex::Real x1383 = kf_qss[181] * sc[40] / x1360;
  const amrex::Real x1384 = kf_qss[182] * x1374;
  const amrex::Real x1385 = kf_qss[172] * x1374;
  const amrex::Real x1386 =
    (kf_qss[179] * sc[40] + kf_qss[396] * sc[53]) / x1360;
  const amrex::Real x1387 = kf_qss[180] * x1374;
  const amrex::Real x1388 = kf_qss[186] * sc[6] / x1360;
  const amrex::Real x1389 = kf_qss[183] * sc[40] / x1360;
  const amrex::Real x1390 = kf_qss[184] * x1374;
  const amrex::Real x1391 =
    (kf_qss[171] * sc[3] + kf_qss[173] * sc[4] + kf_qss[175] * sc[0] +
     kf_qss[177] * sc[2] + kf_qss[179] * sc[10] + kf_qss[181] * sc[8] +
     kf_qss[183] * sc[31]) /
    x1360;
  const amrex::Real x1392 =
    (kf_qss[394] * sc[4] + kf_qss[396] * sc[10]) / x1360;
  const amrex::Real x1394 =
    -kf_qss[346] - kf_qss[367] - kf_qss[374] * sc[3] + 10.0e-13;
  const amrex::Real x1396 =
    kf_qss[345] * sc[46] + kf_qss[373] * sc[51] + 10.0e-13;
  const amrex::Real x1399 = kf_qss[345] / x1394;
  const amrex::Real x1400 = kf_qss[373] / x1394;
  const amrex::Real x1401 =
    -kf_qss[350] - kf_qss[368] - kf_qss[370] - kf_qss[376] * sc[3] + 10.0e-13;
  amrex::Real x1404 = (kf_qss[375] + 10.0e-13) / x1401;
  const amrex::Real x1405 = -x1404 * x151 * x153 + 1;
  const amrex::Real x1411 =
    -10.0e-13 * x147 +
    10.0e-13 * x147 * (kf_qss[384] * sc[4] + 10.0e-13) / x143;
  const amrex::Real x1414 =
    (-kf_qss[376] * x1411 * x151 * (kf_qss[375] + 10.0e-13) /
       ((x1401) * (x1401)) -
     kf_qss[376] * (kf_qss[349] * sc[47] + 10.0e-13) / ((x1401) * (x1401))) /
    x1405;
  const amrex::Real x1416 =
    -x1404 * x1411 * x151 - (kf_qss[349] * sc[47] + 10.0e-13) / x1401;
  const amrex::Real x1418 = x1416 *
                            (-kf_qss[376] * x1404 * x147 * x151 -
                             kf_qss[376] * x151 * x153 *
                               (kf_qss[375] + 10.0e-13) / ((x1401) * (x1401))) /
                            ((x1405) * (x1405));
  const amrex::Real x1421 =
    x151 * (10.0e-13 * kf_qss[384] * x147 / x143 +
            10.0e-13 * kf_qss[384] * x147 * (kf_qss[384] * sc[4] + 10.0e-13) /
              ((x143) * (x143)));
  const amrex::Real x1423 =
    (-kf_qss[384] * x146 * x147 -
     kf_qss[384] * x147 * (kf_qss[383] + 10.0e-13) *
       (kf_qss[384] * sc[4] + 10.0e-13) / ((x143) * (x143))) /
    ((-x146 * x147 * (kf_qss[384] * sc[4] + 10.0e-13) + 1) *
     (-x146 * x147 * (kf_qss[384] * sc[4] + 10.0e-13) + 1));
  const amrex::Real x1425 = (x1404 * x1411 * x1423 - x1404 * x1421) / x1405;
  x1404 = x1404 * x1416 * x1423 * x153 / ((x1405) * (x1405));
  const amrex::Real x1428 = kf_qss[349] / (x1401 * x1405);
  amrex::Real x1430 =
    -kf_qss[356] - kf_qss[371] - kf_qss[378] * sc[3] + 10.0e-13;
  const amrex::Real x1435 =
    -10.0e-13 * x157 +
    10.0e-13 * x157 * (kf_qss[386] * sc[4] + 10.0e-13) / x158;
  amrex::Real x1439 = (kf_qss[377] + 10.0e-13) / x1430;
  const amrex::Real x1440 = -x1439 * x164 * x166 + 1;
  const amrex::Real x1442 =
    (-kf_qss[378] * x1435 * x164 * (kf_qss[377] + 10.0e-13) /
       ((x1430) * (x1430)) -
     kf_qss[378] * (kf_qss[355] * sc[48] + 10.0e-13) / ((x1430) * (x1430))) /
    x1440;
  const amrex::Real x1445 =
    -x1435 * x1439 * x164 - (kf_qss[355] * sc[48] + 10.0e-13) / x1430;
  const amrex::Real x1447 = x1445 *
                            (-kf_qss[378] * x1439 * x157 * x164 -
                             kf_qss[378] * x164 * x166 *
                               (kf_qss[377] + 10.0e-13) / ((x1430) * (x1430))) /
                            ((x1440) * (x1440));
  const amrex::Real x1449 =
    x164 * (10.0e-13 * kf_qss[386] * x157 / x158 +
            10.0e-13 * kf_qss[386] * x157 * (kf_qss[386] * sc[4] + 10.0e-13) /
              ((x158) * (x158)));
  const amrex::Real x1451 =
    (-kf_qss[386] * x157 * x161 -
     kf_qss[386] * x157 * (kf_qss[385] + 10.0e-13) *
       (kf_qss[386] * sc[4] + 10.0e-13) / ((x158) * (x158))) /
    ((-x157 * x161 * (kf_qss[386] * sc[4] + 10.0e-13) + 1) *
     (-x157 * x161 * (kf_qss[386] * sc[4] + 10.0e-13) + 1));
  const amrex::Real x1452 = (x1435 * x1439 * x1451 - x1439 * x1449) / x1440;
  x1439 = x1439 * x1445 * x1451 * x166 / ((x1440) * (x1440));
  x1430 = kf_qss[355] / (x1430 * x1440);
  const amrex::Real x1455 =
    -kf_qss[358] - kf_qss[369] - kf_qss[372] - kf_qss[380] * sc[3] + 10.0e-13;
  amrex::Real x1458 = (kf_qss[379] + 10.0e-13) / x1455;
  const amrex::Real x1459 = -x1458 * x177 * x179 + 1;
  const amrex::Real x1466 =
    -10.0e-13 * x170 +
    10.0e-13 * x170 * (kf_qss[388] * sc[4] + 10.0e-13) / x171;
  const amrex::Real x1469 =
    (-kf_qss[380] * x1466 * x177 * (kf_qss[379] + 10.0e-13) /
       ((x1455) * (x1455)) -
     kf_qss[380] * (kf_qss[357] * sc[49] + 10.0e-13) / ((x1455) * (x1455))) /
    x1459;
  const amrex::Real x1471 =
    -x1458 * x1466 * x177 - (kf_qss[357] * sc[49] + 10.0e-13) / x1455;
  const amrex::Real x1473 = x1471 *
                            (-kf_qss[380] * x1458 * x170 * x177 -
                             kf_qss[380] * x177 * x179 *
                               (kf_qss[379] + 10.0e-13) / ((x1455) * (x1455))) /
                            ((x1459) * (x1459));
  const amrex::Real x1475 =
    x177 * (10.0e-13 * kf_qss[388] * x170 / x171 +
            10.0e-13 * kf_qss[388] * x170 * (kf_qss[388] * sc[4] + 10.0e-13) /
              ((x171) * (x171)));
  const amrex::Real x1477 =
    (-kf_qss[388] * x170 * x174 -
     kf_qss[388] * x170 * (kf_qss[387] + 10.0e-13) *
       (kf_qss[388] * sc[4] + 10.0e-13) / ((x171) * (x171))) /
    ((-x170 * x174 * (kf_qss[388] * sc[4] + 10.0e-13) + 1) *
     (-x170 * x174 * (kf_qss[388] * sc[4] + 10.0e-13) + 1));
  const amrex::Real x1479 = (x1458 * x1466 * x1477 - x1458 * x1475) / x1459;
  x1458 = x1458 * x1471 * x1477 * x179 / ((x1459) * (x1459));
  const amrex::Real x1482 = kf_qss[357] / (x1455 * x1459);
  const amrex::Real x1484 = -kf_qss[382] * sc[4] - kf_qss[389] + 10.0e-13;
  const amrex::Real x1486 =
    (kf_qss[381] * sc[51] + 10.0e-13) / ((x1484) * (x1484));
  const amrex::Real x1491 =
    -kf_qss[154] * sc_qss[0] * x245 - kf_qss[154] * x249;
  const amrex::Real x1492 =
    -kf_qss[108] * sc_qss[0] * x245 - kf_qss[108] * x249;
  const amrex::Real x1493 = -kf_qss[155] * sc_qss[0] * x245 -
                            kf_qss[155] * x249 - kf_qss[157] * sc[38] / x1;
  x245 = -kf_qss[158] * sc_qss[0] * x245 - kf_qss[158] * x249;
  x249 = kf_qss[156] * sc_qss[0] / x1;
  amrex::Real x1497 = sc_qss[4] * x139 / ((x124) * (x124));
  x557 = (-kf_qss[208] * x1497 + x557) / x136;
  amrex::Real x1500 = (-sc_qss[4] * x139 / x124 + x670) / ((x136) * (x136));
  x604 = x1500 * x604;
  x758 = (-kf_qss[218] * x1497 + x758) / x136;
  x771 = x1500 * x771;
  x803 = x1500 * x803;
  x821 = (sc_qss[4] * x139 * x821 + x669) / x136;
  x841 = x1500 * x841;
  x669 = (-kf_qss[226] * x1497 + x869) / x136;
  x468 = x1500 * x468;
  x869 = (-kf_qss[234] * x1497 + x885) / x136;
  x896 = x1500 * x896;
  x885 = (-kf_qss[250] * x1497 + x926) / x136;
  x936 = x1500 * x936;
  x926 = (-kf_qss[258] * x1497 + x700) / x136;
  x546 = x1500 * x546;
  x700 = (-kf_qss[242] * x1497 + x1000) / x136;
  x1004 = x1004 * x1500;
  x1000 = (-kf_qss[266] * x1497 + x1014) / x136;
  x1026 = x1026 * x1500;
  x1014 = (-kf_qss[274] * x1497 + x1033) / x136;
  x1046 = x1046 * x1500;
  x1033 = kf_qss[300] * sc_qss[4] / (x124 * x136);
  x612 = (-kf_qss[282] * x1497 + x612) / x136;
  x564 = x1500 * x564;
  x712 = (sc_qss[4] * x139 * x712 / ((x124) * (x124)) + x82) / x136;
  x482 = x1500 * x482;
  x135 = kf_qss[337] * x135 / (x101 * x136);
  x82 = (-sc_qss[14] * x115 + x659) / ((x122) * (x122));
  x579 = x579 * x82;
  x602 = (-sc_qss[14] * x602 + x574) / x122;
  x574 = x756 * x82;
  x756 = (-sc_qss[14] * x765 + x745) / x122;
  x765 = x797 * x82;
  x745 = (-sc_qss[14] * x800 + x813) / x122;
  x797 = x82 * x840;
  x800 = (-sc_qss[14] * x839 + x833) / x122;
  x813 = x82 * x865;
  x839 = (-sc_qss[14] * x868 + x863) / x122;
  x840 = x82 * x893;
  x833 = (-sc_qss[14] * x894 + x889) / x122;
  x865 = x82 * x932;
  x868 = (-sc_qss[14] * x934 + x929) / x122;
  x863 = x82 * x975;
  x893 = (-sc_qss[14] * x974 + x682) / x122;
  x894 = x82 * x999;
  x889 = (-sc_qss[14] * x1003 + x970) / x122;
  x932 = x571 * x82;
  x934 = (-sc_qss[14] * x1020 + x1018) / x122;
  x929 = x1045 * x82;
  x974 = (-sc_qss[14] * x1044 + x1043) / x122;
  x975 = kf_qss[304] * sc[24] * x107 / (x122 * x47);
  x682 = x576 * x82;
  x999 = (-sc_qss[14] * x552 + x599) / x122;
  x1003 = x539 * x82;
  x970 = (-sc_qss[14] * x595 + x53) / x122;
  x101 = kf_qss[337] / (x101 * x122);
  x107 = x107 * x129 * x83 / x122;
  x1020 =
    -kf_qss[384] * sc_qss[26] * (kf_qss[383] + 10.0e-13) / ((x143) * (x143)) -
    10.0e-13 * kf_qss[384] / ((x143) * (x143));
  x571 =
    -kf_qss[386] * sc_qss[27] * (kf_qss[385] + 10.0e-13) / ((x158) * (x158)) -
    10.0e-13 * kf_qss[386] / ((x158) * (x158));
  x1018 =
    -kf_qss[388] * sc_qss[28] * (kf_qss[387] + 10.0e-13) / ((x171) * (x171)) -
    10.0e-13 * kf_qss[388] / ((x171) * (x171));
  x544 = (-sc_qss[13] * x544 - sc_qss[14] * x593 + x511) / x95;
  x593 = (-sc_qss[13] * x120 - sc_qss[14] * x85 + x646) / ((x95) * (x95));
  x536 = x536 * x593;
  x511 = (-sc_qss[13] * x753 - sc_qss[14] * x763 + x741) / x95;
  x742 = x593 * x742;
  x543 =
    (-sc_qss[13] * (-x121 * x793 + x543 * x790) - sc_qss[14] * x799 + x812) /
    x95;
  x753 = x593 * x796;
  x763 = (-sc_qss[13] * x836 - sc_qss[14] * x835 + x831) / x95;
  x741 = x593 * x834;
  x793 = (-sc_qss[13] * x864 - sc_qss[14] * x866 + x861) / x95;
  x796 = x498 * x593;
  x799 = (-sc_qss[13] * x890 - sc_qss[14] * x887 + x886) / x95;
  x812 = x593 * x891;
  x834 = (-sc_qss[13] * x930 - sc_qss[14] * x933 + x927) / x95;
  x835 = x593 * x928;
  x836 = (-sc_qss[13] * x969 - sc_qss[14] * x521 + x643) / x95;
  x831 = x593 * x967;
  x498 = (-sc_qss[13] * x587 - sc_qss[14] * x1002 + x964) / x95;
  x864 = x593 * x968;
  x866 = (-sc_qss[13] * x1023 - sc_qss[14] * x1019 + x1015) / x95;
  x861 = x1016 * x593;
  x887 = (-sc_qss[13] * x1040 - sc_qss[14] * x52 + x1037) / x95;
  x890 = x1038 * x593;
  x891 = kf_qss[304] * sc[24] / (x47 * x95);
  x886 = kf_qss[310] * sc[15] * x54 / x95;
  x928 = (-sc_qss[13] * x570 - sc_qss[14] * x501 + x597) / x95;
  x930 = x491 * x593;
  x933 = (-sc_qss[13] * x118 - sc_qss[14] * x57 + x49) / x95;
  x927 = x513 * x593;
  x83 = x129 * x83 / x95;
  x967 = kf_qss[343] * x54 / x95;
  x91 =
    -sc_qss[13] * x116 / x19 - sc_qss[14] * x7 / x19 - sc_qss[15] * x91 + x629;
  x528 = x528 * x529 * x91;
  x629 = sc_qss[13] * x116 / ((x19) * (x19));
  x969 = sc_qss[14] * x7 / ((x19) * (x19));
  x519 =
    x41 * (-kf_qss[212] * x629 - kf_qss[212] * x969 - sc_qss[15] * x519 + x704);
  x704 = x524 * x529 * x91 / ((x19) * (x19));
  x521 = kf_qss[222] * x704;
  x738 =
    x41 * (-kf_qss[222] * x629 - kf_qss[222] * x969 - sc_qss[15] * x738 + x774);
  x774 = x529 * x790 * x91;
  x790 = x41 * (-sc_qss[15] * x791 + x811);
  x791 = x529 * x826 * x91;
  x116 = x41 * (sc_qss[13] * x116 * x823 + sc_qss[14] * x7 * x823 -
                sc_qss[15] * x827 + x844);
  x811 = x529 * x838 * x91;
  x823 =
    x41 * (-kf_qss[230] * x629 - kf_qss[230] * x969 - sc_qss[15] * x859 + x877);
  x826 = kf_qss[238] * x704;
  x827 =
    x41 * (-kf_qss[238] * x629 - kf_qss[238] * x969 - sc_qss[15] * x870 + x899);
  x844 = kf_qss[253] * sc[45] * x112;
  x838 = x524 * x529 * x91 * x924;
  x859 =
    x41 * (-kf_qss[254] * x629 - kf_qss[254] * x969 - sc_qss[15] * x925 + x938);
  x877 = x529 * x91 * x966;
  x870 =
    x41 * (-kf_qss[262] * x629 - kf_qss[262] * x969 - sc_qss[15] * x963 + x39);
  x899 = kf_qss[246] * x524 * x529 * x91 / ((x19) * (x19));
  x924 = x41 *
         (-kf_qss[246] * x629 - kf_qss[246] * x969 - sc_qss[15] * x684 + x1006);
  x925 = kf_qss[270] * x704;
  x938 = x41 * (-kf_qss[270] * x629 - kf_qss[270] * x969 - sc_qss[15] * x1011 +
                x1028);
  x963 = kf_qss[278] * x704;
  x966 = x41 * (-kf_qss[278] * x629 - kf_qss[278] * x969 - sc_qss[15] * x1035 +
                x1048);
  x39 = kf_qss[277] * sc[45] * x112;
  x643 = x1074 * x112 * x38;
  x684 = x112 * x38 * x677;
  x968 = kf_qss[285] * sc[45] * x112;
  x587 = kf_qss[286] * x704;
  x1002 = x41 * (-kf_qss[286] * x629 - kf_qss[286] * x969 - sc_qss[15] * x1106 +
                 x591);
  x524 = x524 * x529 * x747 * x91;
  x7 = x41 * (-kf_qss[291] * sc_qss[13] / x19 - kf_qss[295] * sc_qss[14] / x19 +
              sc_qss[14] * x7 * x747 - sc_qss[15] * x512 + x554 + x629 * x723);
  x19 = x112 * x38 * x555;
  x529 = x112 * x38 * x594;
  x80 = -sc_qss[14] * x80 - sc_qss[15] * x92 / x68 + x644;
  x476 = x470 * x476 * x80;
  x466 = x77 * (sc_qss[14] * x466 * x79 / ((x68) * (x68)) +
                sc_qss[15] * x466 * x92 / ((x68) * (x68)) + x683);
  x644 = x470 * x785 * x80;
  x683 = x77 * (-kf_qss[331] * sc_qss[14] * x79 / ((x68) * (x68)) -
                kf_qss[331] * sc_qss[15] * x92 / ((x68) * (x68)) + x807);
  x785 =
    x77 * (-kf_qss[313] * sc_qss[14] / x68 - kf_qss[315] * sc_qss[15] / x68);
  x807 = x470 * x80 * x820;
  x68 = x77 * (-kf_qss[329] * sc_qss[14] * x79 / ((x68) * (x68)) -
               kf_qss[329] * sc_qss[15] * x92 / ((x68) * (x68)) + x874);
  x470 = x470 * x80 * x950;
  x79 = x77 * (sc_qss[14] * x79 * x944 + sc_qss[15] * x92 * x944 + x641);
  x92 = (sc_qss[15] * x505 * x86 + sc_qss[16] * x21 * x505 + x493) / x34;
  x616 = -sc_qss[15] * x86 / x30 - sc_qss[16] * x21 / x30 + x616;
  x505 = x497 * x505 * x616;
  x493 = (-sc_qss[15] * x789 * x86 - sc_qss[16] * x21 * x789 + x809) / x34;
  x789 = x497 * x616 * x789;
  x809 =
    (-kf_qss[317] * sc_qss[15] / x30 - kf_qss[319] * sc_qss[16] / x30) / x34;
  x820 = (-sc_qss[15] * x837 * x86 - sc_qss[16] * x21 * x837 + x875) / x34;
  x837 = x497 * x616 * x837;
  x21 = (sc_qss[15] * x86 * x956 + sc_qss[16] * x21 * x956 + x615) / x34;
  x86 = x616 * x958;
  x874 = 38530.0 * exp(-2314.7966627017099 * invT + 0.38 * tc[0]);
  x875 = sc[1] * x874;
  x944 = exp(-5666.2196569611397 * invT + 2.74 * tc[0]);
  x950 = 0.003928 * sc[1] * x944;
  x956 = 2710000000000000.0 * exp(-18915.914467599399 * invT - 0.72 * tc[0]);
  x958 = exp(-19570.0961331455 * invT - 19.67 * tc[0]);
  x641 = 5.207e+74 * sc[0] * x958;
  x615 = 3.374e+76 * exp(-19932.4121325249 * invT - 20.22 * tc[0]);
  x1006 = sc[0] * x615;
  x964 = 5.187e+74 * sc[0] * x958;
  x1011 = 2018000000000000.0 * exp(-18961.2039675218 * invT - 0.66 * tc[0]);
  x1016 = 4020000000000000.0 * exp(-18961.2039675218 * invT - 0.66 * tc[0]);
  x1019 = exp(-1459.32833083369 * invT);
  x1023 = 20000000.0 * sc[0] * x1019;
  x1028 = 0.003913 * sc[1] * x944;
  x1015 = 0.008926 * exp(-5308.9358242397902 * invT + 2.7 * tc[0]);
  x1035 = sc[1] * x1015;
  x1038 = exp(-3420.8668941404799 * invT + 3.05 * tc[0]);
  x1040 = 6.33e-5 * sc[4] * x1038;
  x52 = 100000.0 * sc[2] * exp(528.37749909495597 * invT);
  x1044 = 0.004025 * exp(-2965.4558115872101 * invT + 2.63 * tc[0]);
  x1045 = sc[4] * x1044;
  x1048 = 6.306e-5 * sc[4] * x1038;
  x1037 = 1098.0 * exp(272.24021620035302 * invT + 0.67 * tc[0]);
  x1043 = sc[10] * x1037;
  x1106 = exp(-1509.64999741416 * invT);
  x491 = 3.0e-15 * sc[3] * x1106;
  x501 = exp(-18920.9466342575 * invT - 2.38 * tc[0]);
  x570 = 6.0e-15 * sc[3] * x1106;
  x576 = 7.586e-15 * exp(-9193.7684842522303 * invT + 0.05 * tc[0]);
  x552 = sc[10] * x576;
  x591 = 51750.0 * exp(204.305966316716 * invT + 0.28 * tc[0]);
  x597 = sc[10] * x591;
  x599 = 1094.0 * exp(272.24021620035302 * invT + 0.67 * tc[0]);
  x723 = sc[10] * x599;
  x747 = 1.0207e-14 * exp(-9148.4789843298004 * invT - 0.01 * tc[0]);
  x512 = sc[10] * x747;
  x513 = 1343000000.0 * sc[5] * exp(-7890.4373198180001 * invT);
  x57 = exp(-11025.477147781399 * invT + 1.95 * tc[0]);
  x595 = 0.6148 * sc[5] * x57;
  x118 = 12500000000.0 * exp(-8982.4174846142505 * invT);
  x539 = exp(2012.8666632188799 * invT);
  x554 = 100000.0 * sc[4] * x539;
  x49 = 0.6125 * sc[5] * x57;
  x53 = 15000.0 * exp(-11740.0448132241 * invT + 1.05 * tc[0]);
  x1497 = sc[5] * x53;
  x1500 = 1.05e+16 * exp(-20933.813297476299 * invT);
  x82 = 0.0001615 * exp(-22242.176628568599 * invT + 1.83 * tc[0]);
  x593 = exp(-7321.8024874586699 * invT + 2.6 * tc[0]);
  x629 = 0.002135 * sc[9] * x593;
  x969 = 0.002127 * sc[9] * x593;
  const amrex::Real x1851 =
    1.121e-6 * exp(-5993.31048973421 * invT + 3.6 * tc[0]);
  const amrex::Real x1852 = sc[9] * x1851;
  const amrex::Real x1859 = exp(-4108.7640762955398 * invT + 0.01 * tc[0]);
  const amrex::Real x1861 = 434800.0 * sc[11] * x1859;
  const amrex::Real x1865 = 200000.0 * sc[10] * exp(-5802.0881567284196 * invT);
  const amrex::Real x1867 =
    20500000.0 * exp(-4226.5167760938402 * invT - 0.38 * tc[0]);
  const amrex::Real x1868 = sc[11] * x1867;
  const amrex::Real x1871 = 433200.0 * sc[11] * x1859;
  const amrex::Real x1878 = exp(-5298.8714909236996 * invT);
  const amrex::Real x1880 = 200000.0 * sc[10] * x1878;
  const amrex::Real x1882 =
    1.61e+20 * exp(-10743.675814930801 * invT - 2.52 * tc[0]);
  const amrex::Real x1883 = exp(-10285.748649048501 * invT - 2.46 * tc[0]);
  const amrex::Real x1886 = 100000.0 * exp(-6491.4949888808796 * invT);
  const amrex::Real x1887 = sc[13] * x1886;
  const amrex::Real x1892 = 320000.0 * sc[13] * exp(-6189.5649893980499 * invT);
  const amrex::Real x1898 = 2000000.0 * exp(-12177.843312474201 * invT);
  const amrex::Real x1899 = sc[14] * x1898;
  const amrex::Real x1903 = 2570000.0 * sc[14] * exp(-12781.7033114399 * invT);
  const amrex::Real x1912 =
    5.426e+16 * exp(-15393.397806966401 * invT - 0.89 * tc[0]);
  const amrex::Real x1924 =
    2.218e+16 * exp(-15161.9181406962 * invT - 0.89 * tc[0]);
  const amrex::Real x1926 = 1e+16 * exp(-35728.383272135099 * invT);
  const amrex::Real x1929 =
    9.633e+17 * exp(-15388.3656403083 * invT - 1.42 * tc[0]);
  const amrex::Real x1934 = 237600.0 * exp(-1861.90166347746 * invT);
  const amrex::Real x1935 = sc[32] * x1934;
  const amrex::Real x1938 = exp(-4931.5233248862496 * invT);
  const amrex::Real x1940 = 3600000.0 * sc[32] * x1938;
  const amrex::Real x1951 = exp(-7180.9018210333497 * invT - 0.11 * tc[0]);
  const amrex::Real x1954 =
    310700000000.0 * exp(-7085.2906545304504 * invT - 0.51 * tc[0]);
  const amrex::Real x1955 = 100000.0 * sc[10] * x1878;
  x185 = 2 * sc[1] + 5.0 * sc[5] + 2 * sc[6] + 3.0 * sc[7] + x185;
  amrex::Real x1963 = -3309.6560109976399 * invT - 7.269 * tc[0];
  amrex::Real x1967 = 7.2475884244373003e+22 * x185 *
                      exp(-2006.8280632292199 * invT - 7.849 * tc[0]);
  amrex::Real x1969 =
    log(exp(-0.0014814814814814801 * tc[1]) + exp(-1000000000000000.0 * invT));
  amrex::Real x1971 =
    -0.29097730287517898 * x1969 + 0.43429448190325198 * log(x1967) - 0.4;
  amrex::Real x1974 = -0.55155399201712996 * x1969 - 0.14 * x1971 + 0.75;
  const amrex::Real x1979 =
    exp(
      M_LN10 * (0.43429448190325198 * x1969 /
                (((x1971) * (x1971)) / ((x1974) * (x1974)) + 1.0))) /
    (x1967 + 1.0);
  const amrex::Real x1981 = 2.254e+28 * x1979 * exp(x1963);
  const amrex::Real x1985 =
    0.000554 * exp(-2600.12051221299 * invT + 3.5 * tc[0]);
  const amrex::Real x1989 =
    935.2 * exp(-9349.7656506516905 * invT + 1.51 * tc[0]);
  const amrex::Real x1993 =
    0.01727 * exp(-4138.4538595780105 * invT + 3.0 * tc[0]);
  const amrex::Real x2001 = 4720000.0 * sc[2] * x196 * exp(-tc[0]);
  x370 = x400 / x370;
  x400 = 2660000000000.0 * exp(-214.87351629861499 * invT - 2.57 * tc[0]);
  const amrex::Real x2010 = x358 * x400;
  x197 = x234 * (x194 * x200 - x224 / x197);
  x85 = (-sc_qss[13] * x120 - sc_qss[14] * x85 + x646) / x95;
  x120 = (-sc_qss[4] * x139 / x124 + x670) / x136;
  x124 = sc[0] * x196;
  x136 = 40000000.0 * exp(-2113.5099963798202 * invT);
  x139 = 9.481 * exp(-8076.6274861657503 * invT + 1.79 * tc[0]);
  x115 = (-sc_qss[14] * x115 + x659) / x122;
  x41 = x41 * x91;
  x122 = 10000000.0 * exp(-2365.1183292821802 * invT);
  x200 = 40000000.0 * exp(-654.18166554613595 * invT);
  x224 = 13400000.0 * exp(-1660.6149971555701 * invT);
  x234 = 100000000000000.0 * exp(-14643.6049749173 * invT);
  x646 = -sc[34] * x224 -
         771400.0 * sc[34] * exp(-8932.0958180337693 * invT + 0.48 * tc[0]) -
         x1270 * x234;
  x659 = 240000.0 * exp(-1513.1725140747899 * invT + 0.69 * tc[0]);
  x670 = 20.0 * exp(-2516.0833290236001 * invT + 2.0 * tc[0]);
  x91 = 11490000000.0 * exp(-7945.7911530565198 * invT - 0.7 * tc[0]);
  const amrex::Real x2071 =
    0.2021 * exp(-6697.8138218608201 * invT + 2.0 * tc[0]);
  x1 = 50000000.0 * kf_qss[153] * sc[38] / x1;
  const amrex::Real x2078 =
    2046000.0 * exp(-14004.5198093453 * invT + 0.89 * tc[0]);
  const amrex::Real x2079 = sc[6] * x2078;
  const amrex::Real x2081 =
    -sc[19] * x2071 - 110000000.0 * sc[19] - sc[3] * x1 - x1325 * x2079;
  const amrex::Real x2082 = 18000000.0 * exp(-12077.1999793133 * invT);
  const amrex::Real x2083 = sc[1] * x2082;
  const amrex::Real x2088 =
    4.887e+50 * exp(-14130.3239757965 * invT - 12.25 * tc[0]);
  const amrex::Real x2092 =
    1798.0 * exp(-5339.1288241880802 * invT - 0.38 * tc[0]);
  const amrex::Real x2095 = 114300000000.0 * exp(-35225.1666063304 * invT);
  const amrex::Real x2098 = -sc[0] * sc[38] * x2092 + sc[21] * x2095;
  const amrex::Real x2103 =
    15.68 * exp(-10562.517815241101 * invT + 1.95 * tc[0]);
  const amrex::Real x2105 =
    30000000.0 * sc[2] * x190 - 30000000.0 * sc[2] * x233 - sc[7] * x2103 -
    9677000000.0 * sc[7] * exp(-55454.476571680098 * invT);
  const amrex::Real x2106 =
    4.83e+27 * exp(-9309.5083173873099 * invT - 5.81 * tc[0]);
  const amrex::Real x2108 = exp(-1258.0416645118 * invT);
  const amrex::Real x2111 =
    0.173 * exp(-1254.0159311853599 * invT + 2.5 * tc[0]);
  const amrex::Real x2115 =
    1.159e+17 * exp(-19202.747967108098 * invT - 1.17 * tc[0]);
  const amrex::Real x2119 =
    -10000000.0 * sc[26] * x1019 -
    50000000.0 * sc[26] * exp(-1962.5449966384101 * invT) - x2115 * x681 +
    x2115 * x734;
  const amrex::Real x2121 =
    2.161e-9 * exp(-9893.2396497207901 * invT + 4.5 * tc[0]);
  const amrex::Real x2124 =
    3094000000000000.0 * exp(-25573.470956195899 * invT - 0.26 * tc[0]);
  const amrex::Real x2128 = 11000000.0 * exp(-1710.9366637360499 * invT);
  const amrex::Real x2130 = exp(-4025.7333264377598 * invT);
  const amrex::Real x2133 =
    -10.0e-13 * sc[18] * sc[8] - sc[18] * x2121 - sc[18] * x2128 -
    200000000.0 * sc[18] * x2130 -
    50000000.0 * sc[18] * exp(-6189.5649893980499 * invT) - x2124 * x445 -
    x2124 * x448;
  const amrex::Real x2135 = 5854000.0 * exp(-10361.2311489192 * invT);
  const amrex::Real x2136 = sc[1] * x2135;
  amrex::Real x2139 =
    3.063e+18 * exp(-3069.6216614087898 * invT - 4.78 * tc[0]);
  const amrex::Real x2140 = -sc[0] * sc[20] * x2139;
  amrex::Real x2142 = 1.16e+29 * exp(-12716.2851448853 * invT - 5.89 * tc[0]);
  const amrex::Real x2143 = -x2142 * x769 / x773;
  const amrex::Real x2144 = x186 * x2142;
  const amrex::Real x2145 = x2140 + x2143 + x2144 * x503;
  const amrex::Real x2146 = 24100000.0 * exp(-1997.7701632447399 * invT);
  const amrex::Real x2148 = 48200000.0 * exp(-4000.5724931475202 * invT);
  const amrex::Real x2151 =
    2096000.0 * exp(-9908.3361496949292 * invT - 0.01 * tc[0]);
  const amrex::Real x2152 = sc[1] * x2151;
  const amrex::Real x2156 =
    550500000.0 * exp(-37434.287769213101 * invT + 0.11 * tc[0]);
  const amrex::Real x2158 = -sc[20] * x186 * x2139 - sc[20] * x2156 -
                            sc[20] * x224 - x2144 * x550 - x2152 * x383 +
                            x2152 * x402;
  amrex::Real x2164 =
    160655737704.918 * x186 * exp(-1529.778664046348 * invT - 4.13 * tc[0]);
  amrex::Real x2165 = log(
    0.218 * exp(-0.0048076923076923097 * tc[1]) +
    0.782 * exp(-0.000375516334960571 * tc[1]) + exp(-6095.0 * invT));
  amrex::Real x2166 =
    -0.29097730287517898 * x2165 + 0.43429448190325198 * log(x2164) - 0.4;
  amrex::Real x2168 = -0.55155399201712996 * x2165 - 0.14 * x2166 + 0.75;
  amrex::Real x2172 = exp(
    M_LN10 * (0.43429448190325198 * x2165 /
              (((x2166) * (x2166)) / ((x2168) * (x2168)) + 1.0)));
  amrex::Real x2174 = -1670.679330471668 * invT - 3.86 * tc[0];
  const amrex::Real x2178 =
    9.8e+17 * sc[17] * x2172 * exp(x2174) / (x2164 + 1.0);
  const amrex::Real x2185 =
    2671000000.0 * exp(-34641.435273996904 * invT - 0.06 * tc[0]);
  const amrex::Real x2189 = -2238.3077294993909 * invT - 5.0 * tc[0];
  amrex::Real x2192 =
    1.02867715078631e+16 * x185 * exp(-1321.446964403191 * invT - 5.45 * tc[0]);
  amrex::Real x2193 =
    log(exp(-0.0105263157894737 * tc[1]) + exp(-200.0 * invT));
  amrex::Real x2194 =
    -0.29097730287517898 * x2193 + 0.43429448190325198 * log(x2192) - 0.4;
  amrex::Real x2199 =
    1.7777777777777777 * ((x2194) * (x2194)) /
      ((-0.73540532268950665 * x2193 - 0.18666666666666668 * x2194 + 1) *
       (-0.73540532268950665 * x2193 - 0.18666666666666668 * x2194 + 1)) +
    1.0;
  const amrex::Real x2202 =
    exp(M_LN10 * (0.43429448190325198 * x2193 / x2199)) / (x2192 + 1.0);
  const amrex::Real x2206 =
    8.42e-9 * exp(-1299.8086477735901 * invT + 4.62 * tc[0]);
  const amrex::Real x2208 = -1.112e+22 * sc[14] * x185 * x2202 * exp(x2189) -
                            sc[14] * x2185 - sc[14] * x2206 -
                            20000000.0 * sc[8] * x1325;
  const amrex::Real x2217 =
    186000000000.0 * x196 * exp(-8554.6833186802305 * invT - tc[0]);
  const amrex::Real x2218 =
    -70000000.0 * sc[3] * x1325 -
    64.67 * sc[6] * x196 * exp(222.421766285686 * invT) + x190 * x2217 -
    x2217 * x233;
  const amrex::Real x2220 =
    933.4 * exp(-1497.5727974348499 * invT + 1.5 * tc[0]);
  const amrex::Real x2222 =
    3194000000000.0 * exp(-44212.616257602698 * invT - 0.89 * tc[0]);
  const amrex::Real x2224 =
    74.53 * exp(-8881.7741514533009 * invT + 1.5 * tc[0]);
  const amrex::Real x2225 = sc[1] * x2224;
  const amrex::Real x2228 = 1055000000.0 * exp(-35038.976439982602 * invT);
  amrex::Real x2233 =
    430091.743119266 * x186 * exp(-8605.0049852607099 * invT - 2.7 * tc[0]) +
    1.0;
  amrex::Real x2235 =
    2.344e+19 * exp(-15398.429973624399 * invT - 2.7 * tc[0] + x292) / x2233;
  const amrex::Real x2237 =
    2.344e+19 * x186 * exp(-15398.429973624399 * invT - 2.7 * tc[0]) / x2233;
  const amrex::Real x2238 = -refCinv * sc[12] * x186 * x2235 - sc[12] * x2220 -
                            sc[12] * x2222 - sc[12] * x2228 -
                            30000000.0 * sc[4] * x1325 + x190 * x2225 -
                            x2225 * x233 - x2237 * x339;
  amrex::Real x2243 =
    1548175865.29467 * x185 * exp(-1060.78073151635 * invT - 3.6 * tc[0]);
  amrex::Real x2244 = log(exp(-1000000000000000.0 * tc[1]) + exp(-40.0 * invT));
  amrex::Real x2245 =
    -0.29097730287517898 * x2244 + 0.43429448190325198 * log(x2243) - 0.4;
  amrex::Real x2247 = -0.55155399201712996 * x2244 - 0.14 * x2245 + 0.75;
  const amrex::Real x2253 =
    exp(
      M_LN10 * (0.43429448190325198 * x2244 /
                (((x2245) * (x2245)) / ((x2247) * (x2247)) + 1.0))) /
    (x2243 + 1.0);
  const amrex::Real x2255 =
    3.31e+18 * x2253 * exp(-1060.78073151635 * invT - 4.0 * tc[0]);
  const amrex::Real x2258 =
    248200000000.0 * exp(-8116.8848194301299 * invT - 0.89 * tc[0]);
  const amrex::Real x2262 = 16600000.0 * exp(-412.63766595986999 * invT);
  const amrex::Real x2264 = exp(-150.96499974141599 * invT);
  const amrex::Real x2267 = 197000000.0 * exp(-8323.2036524100604 * invT);
  const amrex::Real x2270 = 561.58979903806699 * invT - 0.41 * tc[0];
  amrex::Real x2272 =
    0.023728813559322 * x196 * exp(561.58979903806699 * invT - 1.01 * tc[0]);
  amrex::Real x2273 =
    log(0.5 + 0.5 * exp(-1.0e+30 * tc[1]) + exp(-1.0e+100 * invT));
  amrex::Real x2275 =
    -0.29097730287517898 * x2273 + 0.43429448190325198 * log(x2272) - 0.4;
  amrex::Real x2276 = -0.55155399201712996 * x2273 - 0.14 * x2275 + 0.75;
  const amrex::Real x2282 =
    exp(
      M_LN10 * (0.43429448190325198 * x2273 /
                (((x2275) * (x2275)) / ((x2276) * (x2276)) + 1.0))) /
    (x2272 + 1.0);
  const amrex::Real x2284 = sc[3] * x2282 * exp(x2270);
  const amrex::Real x2289 = 22500000000.0 * sc[4] * exp(-2.0 * tc[0]);
  const amrex::Real x2292 =
    0.02231 * exp(-2112.00034638241 * invT + 2.67 * tc[0]);
  const amrex::Real x2299 =
    0.188 * exp(-3160.2006612536402 * invT + 2.75 * tc[0]);
  const amrex::Real x2305 = 6.5 * exp(-2249.8817128128999 * invT + 2.4 * tc[0]);
  const amrex::Real x2308 = -sc[45] * x2299 - sc[45] * x2305 + x1028 * x519 -
                            x1028 * x528 - x1035 * x579 + x1035 * x602 -
                            x536 * x950 + x544 * x950 + x557 * x950 -
                            x604 * x950;
  const amrex::Real x2309 =
    6.283e+23 * exp(-46899.793252999902 * invT - 3.57 * tc[0]);
  const amrex::Real x2315 = 9.8e+17 * refC * x2172 *
                            exp(-g_RT[0] + g_RT[14] - g_RT[17] + x2174) /
                            (x2164 + 1.0);
  amrex::Real x2320 = 1.5744262295081999e+29 * refC * sc[14] * x186 * x2172 *
                      exp(
                        -g_RT[0] + g_RT[14] - g_RT[17] -
                        3200.4579945180158 * invT - 7.99 * tc[0]) /
                      ((x2164 + 1.0) * (x2164 + 1.0));
  x2165 = x2165 *
          (0.12160245493291 * ((x2166) * (x2166)) /
             (x186 * ((x2168) * (x2168) * (x2168))) +
           0.86858896380650297 * x2166 / (x186 * ((x2168) * (x2168)))) /
          ((((x2166) * (x2166)) / ((x2168) * (x2168)) + 1.0) *
           (((x2166) * (x2166)) / ((x2168) * (x2168)) + 1.0));
  x2166 = 1.5744262295081999e+29 * sc[17] * x2172 * x358 *
          exp(-3200.4579945180158 * invT - 7.99 * tc[0]) /
          ((x2164 + 1.0) * (x2164 + 1.0));
  x2168 = -sc[0] * x2178 - sc[14] * x186 * x2165 * x2315 + sc[14] * x2315 +
          x2165 * x2178 * x358 + x2166 - x2320;
  const amrex::Real x2327 = -sc[0] * x197 * x400 + sc[12] * x2309 + x2168;
  x285 = x346 / x285;
  x292 = 1.00813504587156e+25 * refCinv * sc[0] * sc[12] * x186 *
           exp(-24003.4349588851 * invT - 5.4 * tc[0] + x292) /
           ((x2233) * (x2233)) -
         refCinv * sc[0] * sc[12] * x2235 +
         1.00813504587156e+25 * x186 * x285 *
           exp(-24003.4349588851 * invT - 5.4 * tc[0]) / ((x2233) * (x2233)) -
         2.344e+19 * x285 * exp(-15398.4299736244 * invT - 2.7 * tc[0]) / x2233;
  x346 = x2237 * x348 + x292;
  x2233 = sc[0] * sc[6] * exp(222.421766285686 * invT);
  const amrex::Real x2334 = x197 * exp(-8554.6833186802305 * invT - tc[0]);
  const amrex::Real x2335 = -64.67 * x2233 + 186000000000.0 * x2334;
  const amrex::Real x2338 =
    sc[1] * exp(-52535.819910012702 * invT - 1.4 * tc[0]);
  const amrex::Real x2340 =
    ((sc[0]) * (sc[0])) * exp(1529.7786640463501 * invT - 0.4 * tc[0]);
  const amrex::Real x2344 = refC * sc[17] * x185 *
                            exp(
                              -g_RT[0] - g_RT[16] + g_RT[17] -
                              5316.4840742268598 * invT - 15.118 * tc[0]);
  x1967 = exp(
            M_LN10 * (0.43429448190325198 * x1969 /
                      (((x1971) * (x1971)) / ((x1974) * (x1974)) + 1.0))) /
          ((x1967 + 1.0) * (x1967 + 1.0));
  const amrex::Real x2349 = sc[0] * sc[16] * exp(x1963);
  x1963 = exp(-g_RT[0] - g_RT[16] + g_RT[17] + x1963);
  amrex::Real x2355 = 0.43429448190325198 / x185;
  amrex::Real x2360 = ((x1971) * (x1971)) / ((x1974) * (x1974) * (x1974));
  amrex::Real x2361 =
    2.0 * x1971 * x2355 / ((x1974) * (x1974)) + 0.28 * x2355 * x2360;
  x1969 = x1969 / ((((x1971) * (x1971)) / ((x1974) * (x1974)) + 1.0) *
                   (((x1971) * (x1971)) / ((x1974) * (x1974)) + 1.0));
  const amrex::Real x2363 = 2.254e+28 * refC * x185 * x1963 * x1979;
  const amrex::Real x2365 = sc[17] * x1969 * x2363;
  const amrex::Real x2367 =
    sc[0] * sc[16] * x185 * exp(-5316.4840742268598 * invT - 15.118 * tc[0]);
  const amrex::Real x2370 = 2.254e+28 * x185 * x1969 * x1979 * x2349;
  amrex::Real x2372 = 2.254e+28 * refC * sc[17] * x1963 * x1979 -
                      1.6336064308681701e+51 * x1967 * x2344 +
                      1.6336064308681701e+51 * x1967 * x2367 -
                      2.254e+28 * x1979 * x2349 - x2361 * x2365 + x2361 * x2370;
  const amrex::Real x2374 =
    2.3703703703703702 * ((x2194) * (x2194)) * x2355 /
    ((-0.73540532269 * x2193 - 0.18666666666666668 * x2194 + 1) *
     (-0.73540532269 * x2193 - 0.18666666666666668 * x2194 + 1) *
     (-0.73540532269 * x2193 - 0.18666666666666668 * x2194 + 1));
  x2194 = 1.7777777777777777 * x2194 * x2355 /
          ((-0.73540532268950665 * x2193 - 0.18666666666666668 * x2194 + 1) *
           (-0.73540532268950665 * x2193 - 0.18666666666666668 * x2194 + 1));
  const amrex::Real x2378 = sc[0] * sc[14] * exp(x2189);
  const amrex::Real x2381 =
    1.112e+22 * x185 * x2193 * x2202 * x2378 / ((x2199) * (x2199));
  const amrex::Real x2386 =
    refC * sc[15] * exp(-g_RT[0] - g_RT[14] + g_RT[15] + x2189);
  const amrex::Real x2388 =
    1.112e+22 * x185 * x2193 * x2202 * x2386 / ((x2199) * (x2199));
  x2192 = exp(M_LN10 * (0.43429448190325198 * x2193 / x2199)) * x185 /
          ((x2192 + 1.0) * (x2192 + 1.0));
  x2193 = refC * sc[15] *
          exp(
            -g_RT[0] - g_RT[14] + g_RT[15] - 3559.7546939025924 * invT -
            10.45 * tc[0]);
  x2199 = sc[0] * sc[14] * exp(-3559.7546939025924 * invT - 10.45 * tc[0]);
  amrex::Real x2397 = -1.1438889916743799e+38 * x2192 * x2193 +
                      1.1438889916743799e+38 * x2192 * x2199 -
                      1.112e+22 * x2202 * x2378 + 1.112e+22 * x2202 * x2386 +
                      x2381 * (2.0 * x2194 + 0.28 * x2374) -
                      x2388 * (2.0 * x2194 + 0.28 * x2374);
  const amrex::Real x2398 = exp(-52988.714909237002 * invT - 2.0 * tc[0]);
  const amrex::Real x2401 = sc[0] * sc[2] * exp(-tc[0]);
  const amrex::Real x2406 = 0.43429448190325198 * ((x2275) * (x2275)) /
                            (x196 * ((x2276) * (x2276) * (x2276)));
  const amrex::Real x2407 =
    0.43429448190325198 * x2275 / (x196 * ((x2276) * (x2276)));
  amrex::Real x2409 =
    x2273 / ((((x2275) * (x2275)) / ((x2276) * (x2276)) + 1.0) *
             (((x2275) * (x2275)) / ((x2276) * (x2276)) + 1.0));
  const amrex::Real x2411 = x2282 * exp(-g_RT[0] + g_RT[10] - g_RT[3] + x2270);
  const amrex::Real x2413 = refC * x196;
  const amrex::Real x2416 = 35000.0 * sc[10] * x2409 * x2411 * x2413;
  const amrex::Real x2420 = 35000.0 * x124 * x2284 * x2409;
  x2272 = exp(
            M_LN10 * (0.43429448190325198 * x2273 /
                      (((x2275) * (x2275)) / ((x2276) * (x2276)) + 1.0))) /
          ((x2272 + 1.0) * (x2272 + 1.0));
  x2273 = sc[3] * x124 * exp(1123.1795980761301 * invT - 1.42 * tc[0]);
  x2275 = refC * sc[10] * x2411;
  x2276 =
    sc[10] * x2413 *
    exp(
      -g_RT[0] + g_RT[10] - g_RT[3] + 1123.1795980761301 * invT - 1.42 * tc[0]);
  amrex::Real x2434 =
    -35000.0 * sc[0] * x2284 + 830.50847457627106 * x2272 * x2273 -
    830.50847457627106 * x2272 * x2276 + 35000.0 * x2275 -
    x2416 * (0.28 * x2406 + 2.0 * x2407) + x2420 * (0.28 * x2406 + 2.0 * x2407);
  const amrex::Real x2435 = exp(-61694.363227658599 * invT - 3.0 * tc[0]);
  const amrex::Real x2436 = sc[5] * x2435;
  amrex::Real x2442 =
    ((x2245) * (x2245)) * x2355 / ((x2247) * (x2247) * (x2247));
  const amrex::Real x2445 =
    x2244 / ((((x2245) * (x2245)) / ((x2247) * (x2247)) + 1.0) *
             (((x2245) * (x2245)) / ((x2247) * (x2247)) + 1.0));
  amrex::Real x2446 =
    x2445 * (2.0 * x2245 * x2355 / ((x2247) * (x2247)) + 0.28 * x2442);
  const amrex::Real x2449 = sc[0] * sc[8] * x185 * x2255;
  x2243 = exp(
            M_LN10 * (0.43429448190325198 * x2244 /
                      (((x2245) * (x2245)) / ((x2247) * (x2247)) + 1.0))) /
          ((x2243 + 1.0) * (x2243 + 1.0));
  x2244 =
    refC * sc[9] * x185 *
    exp(-g_RT[0] - g_RT[8] + g_RT[9] - 2121.5614630327 * invT - 7.6 * tc[0]);
  const amrex::Real x2460 =
    3.31e+18 * x2253 *
    exp(-g_RT[0] - g_RT[8] + g_RT[9] - 1060.78073151635 * invT - 4.0 * tc[0]);
  const amrex::Real x2463 =
    sc[0] * sc[8] * x185 * exp(-2121.5614630327 * invT - 7.6 * tc[0]);
  const amrex::Real x2467 = refC * sc[9] * x185 * x2460;
  amrex::Real x2469 = refC * sc[9] * x2460 - sc[0] * sc[8] * x2255 -
                      5.1244621141253505e+27 * x2243 * x2244 +
                      5.1244621141253505e+27 * x2243 * x2463 + x2446 * x2449 -
                      x2446 * x2467;
  const amrex::Real x2470 = -sc[0] * x2289 + 3.909e+16 * sc[4] * x2398 +
                            91400000000000.0 * x2338 - 4846.0 * x2340 + x2372 +
                            x2397 - 4720000.0 * x2401 + x2434 +
                            1.837e+21 * x2436 + x2469;
  const amrex::Real x2471 = x2335 + x2470;
  const amrex::Real x2474 = exp(-7045.0333212660798 * invT);
  const amrex::Real x2478 =
    12300000.0 * exp(-23766.923125956899 * invT + 0.12 * tc[0]);
  const amrex::Real x2481 =
    10660000.0 * sc[23] * exp(-28587.738784366102 * invT);
  const amrex::Real x2483 =
    3.235 * exp(-11755.141313198301 * invT + 1.97 * tc[0]);
  const amrex::Real x2485 =
    0.07933 * exp(-9822.7893165081296 * invT + 2.51 * tc[0]);
  const amrex::Real x2488 = 652200.0 * sc[19] * exp(-422.70199927596502 * invT);
  const amrex::Real x2489 =
    1.355e-7 * exp(-4456.9900090323999 * invT + 4.06 * tc[0]);
  const amrex::Real x2491 =
    216.0 * exp(-1726.0331637101899 * invT + 1.51 * tc[0]);
  const amrex::Real x2494 =
    1875000.0 * exp(-12208.0363124225 * invT + 0.33 * tc[0]);
  const amrex::Real x2496 = 13310000.0 * exp(-34258.990607985303 * invT);
  const amrex::Real x2498 =
    0.000661 * exp(-3896.9098599917502 * invT + 3.0 * tc[0]);
  const amrex::Real x2504 =
    913800000.0 * exp(-29337.531616415199 * invT - 0.33 * tc[0]);
  const amrex::Real x2507 =
    562600000000.0 * exp(-32054.901611760601 * invT - 1.13 * tc[0]);
  const amrex::Real x2518 =
    7191000.0 * exp(-12389.1943121122 * invT - 0.02 * tc[0]);
  x1360 = x1373 / x1360;
  x1373 = -sc_qss[0] * x5 - x194;
  const amrex::Real x2544 = 40000000.0 * exp(-12681.0599782789 * invT);
  x131 = x609 / x131;
  x609 = 5.723e-7 * exp(-1626.89948054666 * invT + 3.79 * tc[0]);
  const amrex::Real x2559 = sc[4] * x2398;
  x1332 = x1332 / x1323;
  const amrex::Real x2575 =
    sc[0] * sc[8] * exp(-1060.78073151635 * invT - 4.0 * tc[0]);
  amrex::Real x2578 =
    x2445 * (4.0 * x2245 * x2355 / ((x2247) * (x2247)) + 0.56 * x2442);
  const amrex::Real x2583 =
    refC * sc[9] *
    exp(-g_RT[0] - g_RT[8] + g_RT[9] - 1060.78073151635 * invT - 4.0 * tc[0]);
  const amrex::Real x2585 =
    -1.0248924228250701e+28 * x2243 * x2244 +
    1.0248924228250701e+28 * x2243 * x2463 - 6.62e+18 * x2253 * x2575 +
    6.62e+18 * x2253 * x2583 + x2449 * x2578 - x2467 * x2578;
  const amrex::Real x2594 =
    -87500.0 * sc[0] * x2284 + 2076.2711864406801 * x2272 * x2273 -
    2076.2711864406801 * x2272 * x2276 + 87500.0 * x2275 -
    x2416 * (0.7 * x2406 + 5.0 * x2407) + x2420 * (0.7 * x2406 + 5.0 * x2407);
  const amrex::Real x2595 = sc[0] * sc[4] * exp(-2.0 * tc[0]);
  const amrex::Real x2598 =
    0.0508 * exp(-3166.2392612433 * invT + 2.67 * tc[0]);
  const amrex::Real x2613 = 0.003913 * kf_qss[222] * sc[1] * x704 * x944 +
                            x1015 * x115 + x1028 * x738 - x1035 * x574 +
                            x1035 * x756 + 0.003928 * x120 * x944 +
                            0.003913 * x41 * x944 + x511 * x950 - x742 * x950 +
                            x758 * x950 - x771 * x950 + 0.003928 * x85 * x944;
  x1969 =
    x1969 * (4.0 * x1971 * x2355 / ((x1974) * (x1974)) + 0.56 * x2355 * x2360);
  const amrex::Real x2622 = refC * sc[17] * x1963;
  const amrex::Real x2625 =
    -sc[17] * x1969 * x2363 + 2.254e+28 * x185 * x1969 * x1979 * x2349 -
    3.2672128617363303e+51 * x1967 * x2344 +
    3.2672128617363303e+51 * x1967 * x2367 - 4.508e+28 * x1979 * x2349 +
    4.508e+28 * x1979 * x2622;
  const amrex::Real x2636 =
    -2.28777798334875e+38 * x2192 * x2193 +
    2.28777798334875e+38 * x2192 * x2199 - 2.224e+22 * x2202 * x2378 +
    2.224e+22 * x2202 * x2386 + x2381 * (4.0 * x2194 + 0.56 * x2374) -
    x2388 * (4.0 * x2194 + 0.56 * x2374);
  const amrex::Real x2638 = -x2237 * x349 + x346;
  const amrex::Real x2640 = -x2144 * x488;
  const amrex::Real x2652 =
    15550000.0 * sc[4] * exp(-213.86708296700601 * invT);
  const amrex::Real x2657 = exp(-90.075783179044805 * invT + 1.88 * tc[0]);
  const amrex::Real x2663 = sc[0] * x139;
  const amrex::Real x2679 =
    14.3 * exp(-956.11166502896697 * invT + 2.0 * tc[0]);
  const amrex::Real x2686 =
    25.0 * exp(-38.244466601158699 * invT + 1.76 * tc[0]);
  const amrex::Real x2701 = -30000000.0 * sc[4] * x1335 + 80000000.0 * sc[8] -
                            x2225 * x253 + x2225 * x254 + x2237 * x352;
  const amrex::Real x2710 = -x1028 * x774 + x1028 * x790 + x1035 * x745 -
                            x1035 * x765 + x543 * x950 - x753 * x950 +
                            x792 * x950 - x803 * x950;
  const amrex::Real x2723 = 20000000.0 * sc[0] * x408;
  const amrex::Real x2746 = -50000000.0 * sc_qss[0] * x5 - 50000000.0 * x194;
  const amrex::Real x2759 = -70000000.0 * kf_qss[193] * sc[3] * x1333 -
                            70000000.0 * x1332 - x2217 * x256 + x2217 * x258;
  const amrex::Real x2763 = -30000000.0 * sc[4] * x1336 - x2225 * x256 +
                            x2225 * x258 - x2237 * x353 + x2237 * x354 + x292;
  const amrex::Real x2772 = x1028 * x116 - x1028 * x791 - x1035 * x797 +
                            x1035 * x800 - x741 * x950 + x763 * x950 +
                            x821 * x950 - x841 * x950;
  const amrex::Real x2780 =
    2.19e-10 * exp(503.21666580471998 * invT + 4.5 * tc[0]);
  const amrex::Real x2783 = 7750000.0 * sc[5] * exp(-37590.284935612603 * invT);
  const amrex::Real x2786 =
    sc[4] * exp(-19912.2834658928 * invT - 0.33 * tc[0]);
  const amrex::Real x2788 =
    15550000.0 * sc[2] * exp(-213.86708296700601 * invT);
  const amrex::Real x2810 =
    0.14 * exp(677.83284883895703 * invT + 1.95 * tc[0]);
  const amrex::Real x2835 = -30000000.0 * kf_qss[127] * sc[4] * sc[8] / x1323 -
                            30000000.0 * kf_qss[197] * sc[4] * x1333 -
                            30000000.0 * x1332 - x2225 * x260 + x2225 * x263 +
                            x2237 * x240;
  const amrex::Real x2840 = -70000000.0 * sc[3] * x1337 -
                            70000000.0 * sc[3] * x1339 - x2217 * x260 +
                            x2217 * x263;
  const amrex::Real x2852 = -x1028 * x811 + x1028 * x823 - x1035 * x813 +
                            x1035 * x839 - x468 * x950 + x669 * x950 +
                            x793 * x950 - x796 * x950;
  const amrex::Real x2861 = 7750000.0 * sc[4] * exp(-37590.284935612603 * invT);
  const amrex::Real x2893 =
    10.0 * x1971 * x2355 / ((x1974) * (x1974)) + 1.4 * x2355 * x2360;
  const amrex::Real x2896 =
    -8.16803215434084e+51 * x1967 * x2344 +
    8.16803215434084e+51 * x1967 * x2367 - 1.127e+29 * x1979 * x2349 +
    1.127e+29 * x1979 * x2622 - x2365 * x2893 + x2370 * x2893;
  const amrex::Real x2908 =
    -20000000.0 * sc[8] * x1340 - 5.7194449583718799e+38 * x2192 * x2193 +
    5.7194449583718799e+38 * x2192 * x2199 - 5.56e+22 * x2202 * x2378 +
    5.56e+22 * x2202 * x2386 + x2381 * (10.0 * x2194 + 1.4 * x2374) -
    x2388 * (10.0 * x2194 + 1.4 * x2374);
  const amrex::Real x2924 =
    10.0 * x2245 * x2355 / ((x2247) * (x2247)) + 1.4 * x2442;
  const amrex::Real x2929 =
    -70000000.0 * sc[1] * x1340 - 2.5622310570626699e+28 * x2243 * x2244 +
    2.5622310570626699e+28 * x2243 * x2463 - 1.655e+19 * x2253 * x2575 +
    1.655e+19 * x2253 * x2583 + x2445 * x2449 * x2924 - x2445 * x2467 * x2924;
  const amrex::Real x2938 =
    -420000.0 * sc[0] * x2284 + 9966.1016949152508 * x2272 * x2273 -
    9966.1016949152508 * x2272 * x2276 + 420000.0 * x2275 -
    x2416 * (3.36 * x2406 + 24.0 * x2407) +
    x2420 * (3.36 * x2406 + 24.0 * x2407);
  const amrex::Real x2943 = 20000000.0 * sc[0] * x411 - x2152 * x411 + x2327;
  const amrex::Real x2952 = x1028 * x826 + x1028 * x827 + x1035 * x833 -
                            x1035 * x840 + x799 * x950 - x812 * x950 +
                            x869 * x950 - x896 * x950;
  const amrex::Real x2959 = 2400000.0 * exp(-20229.309965349701 * invT);
  const amrex::Real x2974 =
    -kf_qss[42] * sc[6] * x1333 * x2078 - x1332 * x2078 - x1342 * x2079;
  const amrex::Real x2980 = x2145 + x2152 * x408 + x2640;
  const amrex::Real x2995 =
    -66500.0 * sc[0] * x2284 + 1577.9661016949101 * x2272 * x2273 -
    1577.9661016949101 * x2272 * x2276 + 66500.0 * x2275 -
    x2416 * (0.532 * x2406 + 3.8 * x2407) +
    x2420 * (0.532 * x2406 + 3.8 * x2407);
  const amrex::Real x3000 = -30000000.0 * sc[4] * x1341 -
                            30000000.0 * sc[4] * x1342 - x2225 * x269 +
                            x2225 * x270;
  const amrex::Real x3012 = -64.67 * x124 * exp(222.421766285686 * invT) -
                            x2217 * x269 + x2217 * x270 - 122.873 * x2233 +
                            353400000000.0 * x2334;
  const amrex::Real x3013 = x2098 + x2327 - x2723;
  x1971 = 6.0 * x1971 * x2355 / ((x1974) * (x1974)) + 0.84 * x2355 * x2360;
  x1974 = -4.9008192926044998e+51 * x1967 * x2344 +
          4.9008192926044998e+51 * x1967 * x2367 - x1971 * x2365 +
          x1971 * x2370 - 6.762e+28 * x1979 * x2349 + 6.762e+28 * x1979 * x2622;
  x2360 = -sc[0] * x2103 -
          9677000000.0 * sc[0] * exp(-55454.476571680098 * invT) +
          30000000.0 * sc[2] * x188 - 30000000.0 * sc[2] * x272;
  const amrex::Real x3043 =
    -20000000.0 * sc[8] * x1343 - 3.4316669750231299e+38 * x2192 * x2193 +
    3.4316669750231299e+38 * x2192 * x2199 - 3.336e+22 * x2202 * x2378 +
    3.336e+22 * x2202 * x2386 + x2381 * (6.0 * x2194 + 0.84 * x2374) -
    x2388 * (6.0 * x2194 + 0.84 * x2374);
  x2409 = x2409 * (1.064 * x2406 + 7.6 * x2407);
  const amrex::Real x3054 =
    -133000.0 * sc[0] * x2284 - 35000.0 * sc[10] * x2409 * x2411 * x2413 +
    35000.0 * x124 * x2284 * x2409 + 3155.9322033898302 * x2272 * x2273 -
    3155.9322033898302 * x2272 * x2276 + 133000.0 * x2275;
  x2245 = 6.0 * x2245 * x2355 / ((x2247) * (x2247)) + 0.84 * x2442;
  x2247 = -70000000.0 * sc[1] * x1343 - 1.5373386342376e+28 * x2243 * x2244 +
          1.5373386342376e+28 * x2243 * x2463 + x2245 * x2445 * x2449 -
          x2245 * x2445 * x2467 - 9.93e+18 * x2253 * x2575 +
          9.93e+18 * x2253 * x2583;
  x2442 = 20000000.0 * sc[0] * x411 - x2152 * x411 + x2980 + x3013;
  const amrex::Real x3074 =
    67400000000000.0 * exp(-15896.6144727711 * invT - 2.08 * tc[0]);
  const amrex::Real x3078 =
    2.313e+27 * exp(-15911.710972745201 * invT - 5.9 * tc[0]);
  const amrex::Real x3081 =
    sc[8] * exp(-8544.6189853641408 * invT - 1.03 * tc[0]);
  const amrex::Real x3127 = 80000000.0 * sc[2] - 30000000.0 * sc[4] * x1344 -
                            30000000.0 * sc[4] * x1345 + x2225 * x274 -
                            x2225 * x275 - x2237 * x356;
  const amrex::Real x3133 = -sc[0] * x185 * x2255 - sc[0] * x2258 -
                            70000000.0 * sc[1] * x1344 -
                            70000000.0 * sc[1] * x1345;
  const amrex::Real x3180 = x1028 * x838 + x1028 * x859 - x1035 * x865 +
                            x1035 * x868 + x834 * x950 - x835 * x950 +
                            x885 * x950 - x936 * x950;
  const amrex::Real x3221 = x1028 * x870 - x1028 * x877 - x1035 * x863 +
                            x1035 * x893 - x546 * x950 - x831 * x950 +
                            x836 * x950 + x926 * x950;
  const amrex::Real x3261 = -x1004 * x950 + x1028 * x899 + x1028 * x924 +
                            x1035 * x889 - x1035 * x894 + x498 * x950 +
                            x700 * x950 - x864 * x950;
  x2235 = -refCinv * x2235 * x358 - sc[0] * x2220 - sc[0] * x2222 -
          sc[0] * x2228 - 30000000.0 * sc[4] * x1347 - x2225 * x288 +
          x2225 * x289 - x2237 * x331;
  const amrex::Real x3302 =
    2.783e+21 * exp(-52233.889910529899 * invT - 1.56 * tc[0]);
  const amrex::Real x3318 = 73400000.0 * sc[0] * x290 -
                            30000000.0 * sc[2] * x290 + x2010 * x290 + x2470;
  const amrex::Real x3322 = -x2217 * x290 + x2335;
  const amrex::Real x3327 = -x2225 * x290 + x2638;
  const amrex::Real x3329 = -73400000.0 * sc[0] * x293 +
                            30000000.0 * sc[2] * x293 - x2010 * x293 +
                            x2217 * x293 + x2225 * x293 + x3322 + x3327;
  const amrex::Real x3338 = x1000 * x950 - x1026 * x950 + x1028 * x925 +
                            x1028 * x938 - x1035 * x932 + x1035 * x934 -
                            x861 * x950 + x866 * x950;
  const amrex::Real x3341 = exp(-3673.4816603744498 * invT);
  const amrex::Real x3378 = -1.112e+22 * sc[0] * x185 * x2202 * exp(x2189) -
                            sc[0] * x2185 - sc[0] * x2206 -
                            20000000.0 * sc[8] * x1349;
  const amrex::Real x3390 = x1014 * x950 + x1028 * x963 + x1028 * x966 -
                            x1035 * x929 + x1035 * x974 - x1046 * x950 +
                            x887 * x950 - x890 * x950;
  const amrex::Real x3416 = 1.112e+22 * refC * x185 * x2202 *
                            exp(-g_RT[0] - g_RT[14] + g_RT[15] + x2189);
  x2164 = 9.8e+17 * x2172 * x358 * exp(x2174) / (x2164 + 1.0);
  x2172 = -sc[0] * x2121 - sc[0] * x2128 - 200000000.0 * sc[0] * x2130 -
          50000000.0 * sc[0] * exp(-6189.5649893980499 * invT) - x2124 * x458;
  x2174 = 652200.0 * sc[1] * exp(-422.70199927596502 * invT);
  x2139 = -sc[0] * x2156 - sc[0] * x224 - x186 * x2142 * x569 - x2139 * x358 +
          x2145 + x2152 * x408 - x2152 * x428;
  x2142 = x2442 + x3318 + x3329;
  const amrex::Real x3551 =
    2.01e+61 * exp(-59631.174897859302 * invT - 13.26 * tc[0]);
  const amrex::Real x3563 =
    10660000.0 * sc[1] * exp(-28587.738784366102 * invT);
  const amrex::Real x3567 =
    2667000000000000.0 * exp(-18528.4376349298 * invT - 0.64 * tc[0]);
  const amrex::Real x3600 = 4.107e+18 * exp(-48988.142416089497 * invT - tc[0]);
  const amrex::Real x3614 =
    50000000.0 * sc[0] * exp(-1962.5449966384101 * invT);
  const amrex::Real x3700 = x1002 * x1028 + x1028 * x587 - x1035 * x682 +
                            x1035 * x999 - x564 * x950 + x612 * x950 +
                            x928 * x950 - x930 * x950;
  const amrex::Real x3702 =
    -sc[0] * x224 -
    771400.0 * sc[0] * exp(-8932.0958180337693 * invT + 0.48 * tc[0]) -
    x1283 * x234;
  const amrex::Real x3706 =
    6663000000000000.0 * exp(-31813.357612174401 * invT - 0.43 * tc[0]);
  const amrex::Real x3754 =
    -sc[0] * x2299 - sc[0] * x2305 - x1003 * x1035 - x1028 * x524 + x1028 * x7 +
    x1035 * x970 - x482 * x950 + x712 * x950 - x927 * x950 + x933 * x950;
  amrex::Real x3809 =
    8.3333333333333303e-5 * x186 * exp(10344.6249989476 * invT) + 1.0;
  const amrex::Real x3811 =
    1500000000.0 *
    exp(-g_RT[14] + g_RT[16] + g_RT[1] - 27899.841602211101 * invT) / x3809;
  amrex::Real x3817 =
    125000.0 * refCinv * sc[16] * sc[1] * x186 *
    exp(-g_RT[14] + g_RT[16] + g_RT[1] - 17555.216603263401 * invT) /
    ((x3809) * (x3809));
  const amrex::Real x3819 =
    1500000000.0 * exp(-27899.841602211101 * invT) / x3809;
  const amrex::Real x3821 = -refCinv * sc[16] * sc[1] * x3811 -
                            125000.0 * sc[14] * x186 *
                              exp(-17555.216603263401 * invT) /
                              ((x3809) * (x3809)) +
                            sc[14] * x3819 + x3817;
  const amrex::Real x3822 =
    1.826e+26 * exp(-43840.235924907203 * invT - 4.42 * tc[0]);
  const amrex::Real x3825 =
    5070000000000000.0 * exp(-42446.325760628097 * invT - 3.42 * tc[0]);
  const amrex::Real x3828 = sc[12] * x3822 - sc[1] * sc[6] * x3825;
  const amrex::Real x3829 = -45700000000000.0 * x2338 + 2423.0 * x2340;
  const amrex::Real x3831 = x3821 + x3828 + x3829;
  const amrex::Real x3842 = exp(-42627.483760317802 * invT + 0.83 * tc[0]);
  const amrex::Real x3846 = 675600000.0 * exp(-38254.530934474802 * invT);
  const amrex::Real x3860 =
    -73400000.0 * sc[0] * x248 + 73400000.0 * sc[0] * x251 -
    sc[6] * x186 * x3825 -
    481300000.0 * sc[6] * exp(-45289.499922424802 * invT) + x3828;
  const amrex::Real x3866 = -x2152 * x408 + x3821;
  const amrex::Real x3871 = 22500000.0 * exp(-2163.83166296029 * invT);
  const amrex::Real x3875 = -20000000.0 * sc[0] * x411;
  const amrex::Real x3881 =
    -73400000.0 * sc[0] * x269 + 73400000.0 * sc[0] * x270 -
    sc[1] * x186 * x3825 -
    481300000.0 * sc[1] * exp(-45289.499922424802 * invT);
  const amrex::Real x3883 = x2152 * x411 + x2723 + x3866 + x3875;
  const amrex::Real x3886 = exp(-16102.933305750999 * invT);
  const amrex::Real x3907 = -73400000.0 * sc[0] * x290 + x3828;
  const amrex::Real x3910 =
    73400000.0 * sc[0] * x293 + x2225 * x290 - x2225 * x293 + x3829 + x3907;
  const amrex::Real x3915 = x2225 * x290 + x3829 + x3883 + x3907;
  const amrex::Real x3929 = x3883 + x3910;
  const amrex::Real x3946 = exp(-9561.1166502896704 * invT);
  const amrex::Real x3948 = 1000000.0 * sc[4] * x3946;
  const amrex::Real x3951 = 321400.0 * exp(-8091.7239861398903 * invT);
  const amrex::Real x3952 = sc[4] * x3951;
  const amrex::Real x3957 =
    2589000.0 * exp(-3250.2764444326799 * invT + 0.12 * tc[0]);
  const amrex::Real x3958 = sc[2] * x3957;
  const amrex::Real x3965 =
    3585000000000.0 * exp(820.74638192749796 * invT - 1.59 * tc[0]);
  const amrex::Real x3966 = sc[2] * x3965;
  const amrex::Real x3971 =
    0.1402 * exp(-13340.273810483101 * invT + 1.88 * tc[0]);
  const amrex::Real x3972 = sc[15] * x3971;
  const amrex::Real x3977 = 2350000.0 * sc[15] * exp(-19197.7158004501 * invT);
  const amrex::Real x3980 = 480000.0 * exp(-16379.702471943599 * invT);
  const amrex::Real x3981 = sc[8] * x3980;
  const amrex::Real x3984 =
    408000.0 * exp(-8137.0134860623202 * invT - 0.01 * tc[0]);
  const amrex::Real x3985 = sc[4] * x3984;
  const amrex::Real x3989 =
    285.1 * exp(-15987.1934726159 * invT + 1.05 * tc[0]);
  const amrex::Real x3990 = sc[8] * x3989;
  const amrex::Real x3993 = -kf_qss[101] * sc[0] * x139 * x444 -
                            sc[18] * x139 * x458 - x139 * x401 / x443 +
                            x190 * x3990 - x233 * x3990;
  const amrex::Real x3995 = -x348 * x3966;
  const amrex::Real x3997 =
    sc[3] * exp(-61140.824895273399 * invT - 1.5 * tc[0]);
  const amrex::Real x3999 = exp(-0.5 * tc[0]);
  const amrex::Real x4001 = ((sc[2]) * (sc[2])) * x3999;
  const amrex::Real x4004 =
    1.7777777777777778e-16 /
    ((x196 * exp(-909.31251510912796 * invT - 2.788 * tc[0]) +
      1.3333333333333334e-8) *
     (x196 * exp(-909.31251510912796 * invT - 2.788 * tc[0]) +
      1.3333333333333334e-8));
  const amrex::Real x4005 = -g_RT[2] - g_RT[6] + g_RT[7];
  const amrex::Real x4008 =
    refC * sc[7] * x196 * exp(-3018.29356149671 * invT - 5.576 * tc[0] + x4005);
  const amrex::Real x4011 =
    (1.0 /
     ((75000000.0 * x196 * exp(-909.31251510912796 * invT - 2.788 * tc[0]) +
       1.0)));
  const amrex::Real x4013 = -2108.9810463875801 * invT - 2.788 * tc[0];
  const amrex::Real x4015 = sc[2] * sc[6] * exp(x4013);
  const amrex::Real x4018 = refC * sc[7] * exp(x4005 + x4013);
  const amrex::Real x4020 =
    sc[2] * sc[6] * x196 * exp(-3018.29356149671 * invT - 5.576 * tc[0]);
  const amrex::Real x4023 =
    -1.0125e+20 * x4004 * x4008 + 1.0125e+20 * x4004 * x4020 -
    1350000000000.0 * x4011 * x4015 + 1350000000000.0 * x4011 * x4018;
  const amrex::Real x4024 = 3.909e+16 * sc[4] * x2398 - 4720000.0 * x2401 +
                            1294600000000000.0 * x3997 - 12340.0 * x4001 +
                            x4023;
  const amrex::Real x4027 =
    14590.0 * exp(-7719.3436534443999 * invT + 0.57 * tc[0]);
  const amrex::Real x4028 = sc[4] * x4027;
  const amrex::Real x4040 = -x1040 * x536 + x1040 * x544 + x1040 * x557 -
                            x1040 * x604 - x1045 * x579 + x1045 * x602 +
                            x1048 * x519 - x1048 * x528;
  const amrex::Real x4059 = x349 * x3966 + x3995;
  const amrex::Real x4071 =
    -2.53125e+20 * x4004 * x4008 + 2.53125e+20 * x4004 * x4020 -
    3375000000000.0 * x4011 * x4015 + 3375000000000.0 * x4011 * x4018;
  const amrex::Real x4080 = x1040 * x511 - x1040 * x742 + x1040 * x758 -
                            x1040 * x771 - x1045 * x574 + x1045 * x756 +
                            x1048 * x521 + x1048 * x738;
  const amrex::Real x4081 = 7800000.0 * exp(-805.14666528755197 * invT);
  const amrex::Real x4086 =
    143300000.0 * sc[7] * exp(-27133.442620190501 * invT);
  const amrex::Real x4092 =
    13.0 * exp(-2611.6944955264998 * invT + 2.13 * tc[0]);
  const amrex::Real x4097 = exp(-6743.1033217832401 * invT + 2.02 * tc[0]);
  const amrex::Real x4100 =
    9.55 * exp(-1997.7701632447399 * invT + 2.0 * tc[0]);
  const amrex::Real x4103 =
    3150000.0 * exp(-5178.0994911305697 * invT + 0.5 * tc[0]);
  const amrex::Real x4108 = 1350000000000.0 * sc[6] * x196 * x4011 * exp(x4013);
  const amrex::Real x4128 = 5940000.0 * exp(-940.00873172321599 * invT);
  const amrex::Real x4132 = 5000000.0 * exp(-900.75783179044799 * invT);
  const amrex::Real x4141 =
    0.254 * exp(568.63483235933302 * invT + 2.56 * tc[0]);
  const amrex::Real x4146 =
    524000.0 * exp(-2960.92686159497 * invT + 0.7 * tc[0]);
  const amrex::Real x4148 =
    15.8 * exp(611.91146561853895 * invT + 1.76 * tc[0]);
  const amrex::Real x4150 = -sc[22] * x2686 - sc[22] * x4146 - sc[22] * x4148 -
                            x253 * x3972 + x254 * x3972;
  const amrex::Real x4151 = exp(-427.73416593401203 * invT);
  const amrex::Real x4155 =
    0.723 * exp(528.37749909495597 * invT + 2.34 * tc[0]);
  const amrex::Real x4159 = -39000000.0 * sc[26] * x4151 - sc[26] * x4155 -
                            x3977 * x405 + x3977 * x406 - x3981 * x640;
  const amrex::Real x4169 = -13.59 * sc[14] * x2657 - x253 * x3990 +
                            x254 * x3990 - x2663 * x449 - x2663 * x451;
  const amrex::Real x4172 =
    416000.0 * exp(-1389.8844309526401 * invT + 0.57 * tc[0]);
  const amrex::Real x4184 =
    0.2385 * exp(-1059.77429818474 * invT + 2.71 * tc[0]);
  const amrex::Real x4187 =
    0.193 * exp(-1869.95313013034 * invT + 2.68 * tc[0]);
  const amrex::Real x4190 = -sc[45] * x4184 - sc[45] * x4187 + x1040 * x543 -
                            x1040 * x753 + x1040 * x792 - x1040 * x803 +
                            x1045 * x745 - x1045 * x765 - x1048 * x774 +
                            x1048 * x790;
  const amrex::Real x4194 = 16200000.0 * sc[6] * exp(-24003.4349588851 * invT);
  const amrex::Real x4203 =
    785700000.0 * exp(-27873.171118923401 * invT - 0.33 * tc[0]);
  const amrex::Real x4207 =
    1995000000000.0 * exp(-14698.9588081559 * invT - 1.57 * tc[0]);
  const amrex::Real x4209 =
    350000000.0 * exp(-2646.9196621328301 * invT - 0.61 * tc[0]);
  const amrex::Real x4218 = x3985 * x408;
  const amrex::Real x4222 = 20000000.0 * sc[2] * x408;
  const amrex::Real x4227 =
    -kf_qss[165] * x2663 * x444 - x256 * x3990 + x258 * x3990 - x2663 * x453;
  const amrex::Real x4239 = -x1040 * x741 + x1040 * x763 + x1040 * x821 -
                            x1040 * x841 - x1045 * x797 + x1045 * x800 +
                            x1048 * x116 - x1048 * x791;
  const amrex::Real x4242 =
    1400000.0 * exp(-10612.8394818215 * invT - 0.02 * tc[0]);
  const amrex::Real x4245 = 700000.0 * sc[29] * exp(-15046.1783075611 * invT);
  const amrex::Real x4246 = 14320.0 * exp(631.53691558492301 * invT);
  const amrex::Real x4248 =
    0.001397 * exp(-3414.3250774850198 * invT + 2.69 * tc[0]);
  const amrex::Real x4250 =
    0.1632 * exp(-9148.4789843298004 * invT + 2.33 * tc[0]);
  const amrex::Real x4252 =
    52960.0 * exp(-3882.3165766834099 * invT + 0.5 * tc[0]);
  const amrex::Real x4254 = sc[4] * exp(1937.38416334817 * invT + 2.02 * tc[0]);
  const amrex::Real x4258 =
    5951000000000.0 * exp(-60738.251562629703 * invT - 1.13 * tc[0]);
  const amrex::Real x4273 =
    105500.0 * exp(-10476.970982054299 * invT + 0.71 * tc[0]);
  const amrex::Real x4285 =
    -x3977 * x409 + x3977 * x410 - x3981 * x647 - x3981 * x658;
  const amrex::Real x4293 =
    -kf_qss[72] * sc[4] * x3951 * x610 - x131 * x3951 - x3952 * x658;
  const amrex::Real x4313 =
    6.33e-5 * x1038 * x120 + 6.306e-5 * x1038 * x41 + 6.33e-5 * x1038 * x85 -
    x1040 * x468 + x1040 * x669 + x1040 * x793 - x1040 * x796 + x1044 * x115 -
    x1045 * x813 + x1045 * x839 - x1048 * x811 + x1048 * x823;
  const amrex::Real x4328 = -x3985 * x411;
  const amrex::Real x4334 = x3977 * x411;
  const amrex::Real x4337 = 20000000.0 * sc[2] * x411 - x4334;
  const amrex::Real x4347 =
    -1.215e+21 * x4004 * x4008 + 1.215e+21 * x4004 * x4020 -
    16200000000000.0 * x4011 * x4015 + 16200000000000.0 * x4011 * x4018;
  const amrex::Real x4356 = x1040 * x799 - x1040 * x812 + x1040 * x869 -
                            x1040 * x896 + x1045 * x833 - x1045 * x840 +
                            x1048 * x826 + x1048 * x827;
  const amrex::Real x4357 =
    82800000.0 * exp(-62801.439892429 * invT - 0.21 * tc[0]);
  const amrex::Real x4363 = 16200000.0 * sc[3] * exp(-24003.4349588851 * invT);
  const amrex::Real x4378 = x3977 * x408 + x4059 - x4222;
  const amrex::Real x4392 =
    -1350000000000.0 * sc[2] * x196 * x4011 * exp(x4013) -
    1.92375e+20 * x4004 * x4008 + 1.92375e+20 * x4004 * x4020 -
    2565000000000.0 * x4011 * x4015 + 2565000000000.0 * x4011 * x4018;
  const amrex::Real x4393 =
    143300000.0 * sc[2] * exp(-27133.442620190501 * invT);
  const amrex::Real x4403 = x4218 + x4328 + x4337 + x4378;
  const amrex::Real x4414 =
    1350000000000.0 * x2413 * x4011 * exp(x4005 + x4013) -
    3.8475e+20 * x4004 * x4008 + 3.8475e+20 * x4004 * x4020 -
    5130000000000.0 * x4011 * x4015 + 5130000000000.0 * x4011 * x4018;
  const amrex::Real x4433 = -kf_qss[141] * sc[8] * x3980 * x610 -
                            kf_qss[75] * sc[8] * x134 * x3980 - x131 * x3980 -
                            x375 * x3977 + x3977 * x419;
  const amrex::Real x4484 = x1040 * x834 - x1040 * x835 + x1040 * x885 -
                            x1040 * x936 - x1045 * x865 + x1045 * x868 +
                            x1048 * x838 + x1048 * x859;
  const amrex::Real x4505 =
    -x3977 * x422 + x3977 * x423 - x3981 * x657 - x3981 * x706;
  const amrex::Real x4526 = -x1040 * x546 - x1040 * x831 + x1040 * x836 +
                            x1040 * x926 - x1045 * x863 + x1045 * x893 +
                            x1048 * x870 - x1048 * x877;
  const amrex::Real x4558 = -x1004 * x1040 + x1040 * x498 + x1040 * x700 -
                            x1040 * x864 + x1045 * x889 - x1045 * x894 +
                            x1048 * x899 + x1048 * x924;
  const amrex::Real x4560 =
    1075000.0 * sc[21] * exp(-39779.277431863098 * invT);
  const amrex::Real x4561 =
    0.2 * exp(-40398.233930802897 * invT + 2.34 * tc[0]);
  const amrex::Real x4591 = -x290 * x3972;
  const amrex::Real x4592 = x293 * x3972 + x4591;
  const amrex::Real x4594 = -x290 * x3990;
  const amrex::Real x4597 = 60200000.0 * sc[2] * x290 + x4024;
  const amrex::Real x4599 = -x290 * x4028;
  const amrex::Real x4602 = -60200000.0 * sc[2] * x293 + x293 * x3990 +
                            x293 * x4028 + x4592 + x4594 + x4597 + x4599;
  const amrex::Real x4611 = x1000 * x1040 - x1026 * x1040 - x1040 * x861 +
                            x1040 * x866 - x1045 * x932 + x1045 * x934 +
                            x1048 * x925 + x1048 * x938;
  const amrex::Real x4613 = 637700.0 * sc[18] * exp(-47473.460252017299 * invT);
  const amrex::Real x4622 = 2070000.0 * exp(-42823.738259981597 * invT);
  const amrex::Real x4628 = x4403 + x4594 + x4597 + x4599;
  const amrex::Real x4639 = x1014 * x1040 - x1040 * x1046 + x1040 * x887 -
                            x1040 * x890 - x1045 * x929 + x1045 * x974 +
                            x1048 * x963 + x1048 * x966;
  const amrex::Real x4693 = 637700.0 * sc[14] * exp(-47473.460252017299 * invT);
  const amrex::Real x4709 = -kf_qss[164] * ((sc[0]) * (sc[0])) * x139 / x443 -
                            x305 * x3990 + x306 * x3990;
  const amrex::Real x4734 =
    1075000.0 * sc[12] * exp(-39779.277431863098 * invT);
  const amrex::Real x4735 = x4403 + x4602;
  const amrex::Real x4748 =
    -sc[2] * x2686 - sc[2] * x4146 - sc[2] * x4148 + x309 * x3972 + x4591;
  const amrex::Real x4785 = -39000000.0 * sc[2] * x4151 - sc[2] * x4155 -
                            x3977 * x429 - x3981 * x755 - x3981 * x759;
  const amrex::Real x4796 = 700000.0 * sc[4] * exp(-15046.1783075611 * invT);
  const amrex::Real x4857 = x1002 * x1048 - x1040 * x564 + x1040 * x612 +
                            x1040 * x928 - x1040 * x930 - x1045 * x682 +
                            x1045 * x999 + x1048 * x587;
  const amrex::Real x4887 = -sc[2] * x4184 - sc[2] * x4187 - x1003 * x1045 -
                            x1040 * x482 + x1040 * x712 - x1040 * x927 +
                            x1040 * x933 + x1045 * x970 - x1048 * x524 +
                            x1048 * x7;
  const amrex::Real x4921 =
    10.0 * exp(-2012.8666632188799 * invT + 0.5 * tc[0]);
  const amrex::Real x4922 = sc[10] * x4921;
  const amrex::Real x4925 =
    26720.0 * exp(199.27379965866899 * invT + 0.33 * tc[0]);
  const amrex::Real x4926 = sc[10] * x4925;
  const amrex::Real x4935 = 3.0e-25 * sc[3] * x1106;
  const amrex::Real x4939 = 20000000.0 * exp(-2113.5099963798202 * invT);
  const amrex::Real x4940 = sc[3] * x4939;
  const amrex::Real x4952 = 7580000.0 * sc[3] * exp(-206.318832979935 * invT);
  const amrex::Real x4957 = exp(-3019.29999482832 * invT);
  const amrex::Real x4959 = 1000000.0 * sc[3] * x4957;
  const amrex::Real x4963 = 55000.0 * sc[3] * exp(-1219.7971979106401 * invT);
  const amrex::Real x4967 = 42800.0 * sc[3] * exp(-552.02868238777796 * invT);
  const amrex::Real x4973 = 147400000.0 * sc[7] * exp(-67229.7465515105 * invT);
  const amrex::Real x4977 =
    49440000000.0 * exp(-44595.060923614299 * invT - 1.4 * tc[0]);
  const amrex::Real x4978 = sc[12] * x4977;
  const amrex::Real x4983 = 488100.0 * sc[18] * exp(-29926.295115406701 * invT);
  const amrex::Real x4988 =
    85520.0 * exp(976.24033166115601 * invT + 0.32 * tc[0]);
  const amrex::Real x4989 = sc[10] * x4988;
  const amrex::Real x4994 =
    1.657e+23 * exp(-46824.310753129197 * invT - 5.31 * tc[0]);
  const amrex::Real x4995 = sc[12] * x4994;
  const amrex::Real x4998 =
    x190 * x4995 - x233 * x4995 - x3958 * x445 - x3958 * x448;
  x2434 = x2434 - 647300000000000.0 * x3997 + 6170.0 * x4001;
  const amrex::Real x5001 = 54400000000000.0 * sc[8] * exp(-3.3 * tc[0]);
  const amrex::Real x5003 =
    4.343e+21 * exp(-15333.011807069801 * invT - 3.42 * tc[0]);
  const amrex::Real x5005 = sc[31] * x5003 - sc[3] * x5001;
  const amrex::Real x5006 = x348 * x3966 + x5005;
  const amrex::Real x5007 = x348 * x4963;
  const amrex::Real x5009 = x4967 * x503;
  const amrex::Real x5011 = -x5007 - x5009;
  const amrex::Real x5014 =
    29740.0 * exp(1942.91954667202 * invT + 0.33 * tc[0]);
  const amrex::Real x5015 = sc[10] * x5014;
  const amrex::Real x5027 = -x1043 * x536 + x1043 * x544 + x1043 * x557 -
                            x1043 * x604 + x519 * x723 - x528 * x723 -
                            x579 * x597 + x597 * x602;
  const amrex::Real x5066 = -x349 * x3966;
  const amrex::Real x5068 =
    x349 * x4963 + x488 * x4967 + x5006 - x5007 - x5009 + x5066;
  const amrex::Real x5080 = x1043 * x511 - x1043 * x742 + x1043 * x758 -
                            x1043 * x771 + x521 * x723 - x574 * x597 +
                            x597 * x756 + x723 * x738;
  const amrex::Real x5109 = kf_qss[100] * sc[14] * sc[3] * x4939 / x443;
  const amrex::Real x5124 = -kf_qss[105] * sc[2] * x3957 * x444 -
                            sc[14] * x3957 * x455 - x253 * x4995 +
                            x254 * x4995 - x3957 * x401 / x443;
  const amrex::Real x5143 = x1043 * x543 - x1043 * x753 + x1043 * x792 -
                            x1043 * x803 + x597 * x745 - x597 * x765 -
                            x723 * x774 + x723 * x790;
  const amrex::Real x5145 =
    40000000.0 * sc[21] * exp(-19705.964632912801 * invT);
  const amrex::Real x5152 = 4000000.0 * exp(-20078.344965608299 * invT);
  const amrex::Real x5155 =
    200.0 * exp(-15146.821640722101 * invT + 1.5 * tc[0]);
  const amrex::Real x5159 =
    27000000.0 * sc[26] * exp(-16706.793304716699 * invT);
  const amrex::Real x5162 =
    51560000.0 * exp(-17552.1973032686 * invT - 0.83 * tc[0]);
  const amrex::Real x5165 = 60300000.0 * exp(-26101.848455290801 * invT);
  const amrex::Real x5168 =
    6888000000.0 * exp(-36302.050271152497 * invT - 0.33 * tc[0]);
  const amrex::Real x5171 =
    5177000000.0 * exp(-29166.4379500416 * invT - 0.33 * tc[0]);
  const amrex::Real x5174 =
    1.22e+24 * exp(-5082.4883246276704 * invT - 5.76 * tc[0]);
  const amrex::Real x5178 =
    40000000.0 * sc[14] * exp(-29287.209949834702 * invT);
  const amrex::Real x5224 =
    20000000.0 * exp(-21235.743296959201 * invT + 0.5 * tc[0]);
  const amrex::Real x5238 = 240000.0 * exp(429.747032597231 * invT);
  const amrex::Real x5242 = 30100.0 * exp(-1444.23183085955 * invT);
  const amrex::Real x5247 =
    9.72e+23 * exp(-10793.9974815112 * invT - 5.71 * tc[0]);
  const amrex::Real x5251 =
    24700000.0 * exp(-11584.0476468246 * invT - 0.44 * tc[0]);
  const amrex::Real x5253 =
    7140000000.0 * exp(-10592.710815189301 * invT - 1.21 * tc[0]);
  const amrex::Real x5255 =
    2180000000000000.0 * exp(-15478.9446401532 * invT - 2.85 * tc[0]);
  const amrex::Real x5257 = -kf_qss[165] * x444 * x4978 - sc[37] * x5247 -
                            sc[37] * x5251 - sc[37] * x5253 - sc[37] * x5255 -
                            x453 * x4978;
  const amrex::Real x5261 = 10050000.0 * exp(-20480.918298252102 * invT);
  const amrex::Real x5265 = exp(-26745.965787520901 * invT - 0.66 * tc[0]);
  const amrex::Real x5267 = exp(-19897.186965918601 * invT - 0.66 * tc[0]);
  const amrex::Real x5270 = x408 * x4989;
  const amrex::Real x5272 = 30100000.0 * exp(-19700.932466254799 * invT);
  const amrex::Real x5277 =
    2.12e-12 * exp(-4772.50685849196 * invT + 6.0 * tc[0]);
  const amrex::Real x5280 =
    1.7e+23 * exp(-3270.90832773068 * invT - 5.31 * tc[0]);
  const amrex::Real x5282 = -kf_qss[165] * x3958 * x444 - sc[17] * x4209 -
                            sc[17] * x5277 - sc[17] * x5280 - x256 * x4995 +
                            x258 * x4995 - x3958 * x453;
  const amrex::Real x5284 = 20500000.0 * exp(-19600.2891330938 * invT);
  const amrex::Real x5289 = 747000.0 * exp(-7170.83748771726 * invT);
  const amrex::Real x5291 =
    -sc[8] * x4207 - sc[8] * x5289 - x186 * x5001 - x353 * x3966 + x354 * x3966;
  const amrex::Real x5304 =
    -60000000.0 * sc[45] * exp(-26569.839954489202 * invT) -
    100000000.0 * sc[45] * exp(-25236.315790106699 * invT) - x1043 * x741 +
    x1043 * x763 + x1043 * x821 - x1043 * x841 + x116 * x723 - x597 * x797 +
    x597 * x800 - x723 * x791;
  const amrex::Real x5306 =
    190300000.0 * exp(-37680.863935457397 * invT - 0.8 * tc[0]);
  const amrex::Real x5308 =
    0.2232 * exp(-12781.7033114399 * invT + 1.5 * tc[0]);
  const amrex::Real x5310 = 28900000.0 * exp(251.60833290235999 * invT);
  const amrex::Real x5361 = 777800.0 * exp(-34102.993441585902 * invT);
  const amrex::Real x5372 = -x1043 * x468 + x1043 * x669 + x1043 * x793 -
                            x1043 * x796 - x597 * x813 + x597 * x839 -
                            x723 * x811 + x723 * x823;
  const amrex::Real x5406 = -x411 * x4989;
  const amrex::Real x5423 = x1043 * x799 - x1043 * x812 + x1043 * x869 -
                            x1043 * x896 + x597 * x833 - x597 * x840 +
                            x723 * x826 + x723 * x827;
  const amrex::Real x5430 =
    902900.0 * exp(-16570.924804949402 * invT + 0.33 * tc[0]);
  const amrex::Real x5509 =
    -54400000000000.0 * sc[3] * x186 * exp(-3.3 * tc[0]) - sc[3] * x4207 -
    sc[3] * x5289 - x356 * x3966;
  const amrex::Real x5559 = x1043 * x834 - x1043 * x835 + x1043 * x885 -
                            x1043 * x936 - x597 * x865 + x597 * x868 +
                            x723 * x838 + x723 * x859;
  const amrex::Real x5561 = 10.0 * sc[44] * exp(-20128.666632188801 * invT);
  const amrex::Real x5562 =
    117500.0 * exp(-19.1222333005793 * invT + 0.3 * tc[0]);
  const amrex::Real x5564 =
    26900000000000.0 * exp(-10315.941648996801 * invT - 2.4 * tc[0]);
  const amrex::Real x5566 = exp(-8806.2916515825891 * invT);
  const amrex::Real x5570 = 100000.0 * sc[23] * exp(-8554.6833186802305 * invT);
  const amrex::Real x5572 =
    33320.0 * exp(279.78846618742398 * invT + 0.34 * tc[0]);
  const amrex::Real x5576 = 17500.0 * sc[31] * exp(1648.03458051046 * invT);
  const amrex::Real x5577 =
    267.9 * exp(967.18243167667094 * invT + 0.89 * tc[0]);
  const amrex::Real x5581 =
    1.259e+24 * exp(-11221.7316474452 * invT - 5.63 * tc[0]);
  const amrex::Real x5584 =
    49390000.0 * exp(-688.40039882085603 * invT - 0.5 * tc[0]);
  const amrex::Real x5607 =
    1318.0 * exp(-15795.971139610199 * invT + 0.35 * tc[0]);
  const amrex::Real x5624 =
    387.2 * exp(-16042.547305854499 * invT + 0.44 * tc[0]);
  const amrex::Real x5636 =
    -kf_qss[172] * sc[10] * x1374 * x4921 - x1360 * x4921 - x1386 * x4922;
  const amrex::Real x5638 =
    1.114e-13 * exp(-8841.5168181889294 * invT + 6.33 * tc[0]);
  const amrex::Real x5645 = -kf_qss[77] * sc[10] * x134 * x4925 -
                            kf_qss[84] * sc[10] * x4925 * x610 - x131 * x4925;
  const amrex::Real x5669 = x1037 * x120 + x1037 * x85 - x1043 * x546 -
                            x1043 * x831 + x1043 * x836 + x1043 * x926 +
                            x115 * x591 + x41 * x599 - x597 * x863 +
                            x597 * x893 + x723 * x870 - x723 * x877;
  const amrex::Real x5718 = -x1004 * x1043 + x1043 * x498 + x1043 * x700 -
                            x1043 * x864 + x597 * x889 - x597 * x894 +
                            x723 * x899 + x723 * x924;
  const amrex::Real x5722 =
    1000000.0 * kf_qss[121] * sc[17] * sc[3] * x4957 / x1268;
  const amrex::Real x5774 = -x290 * x4973;
  const amrex::Real x5775 = x293 * x4973 + x5774;
  const amrex::Real x5778 = -x290 * x4995;
  const amrex::Real x5781 = x290 * x5015;
  const amrex::Real x5784 = -x293 * x4952 + x293 * x4983 + x293 * x4995 +
                            x293 * x5015 + x5775 + x5778 - x5781;
  const amrex::Real x5788 = x290 * x4952 - x290 * x4983;
  const amrex::Real x5799 = x1000 * x1043 - x1026 * x1043 - x1043 * x861 +
                            x1043 * x866 - x597 * x932 + x597 * x934 +
                            x723 * x925 + x723 * x938;
  const amrex::Real x5812 = kf_qss[100] * sc[2] * sc[3] * x4939 / x443;
  const amrex::Real x5819 =
    40000000.0 * sc[3] * exp(-29287.209949834702 * invT);
  const amrex::Real x5834 =
    x2434 + x5068 + x5270 + x5406 + x5778 - x5781 + x5788;
  const amrex::Real x5845 = x1014 * x1043 - x1043 * x1046 + x1043 * x887 -
                            x1043 * x890 - x597 * x929 + x597 * x974 +
                            x723 * x963 + x723 * x966;
  const amrex::Real x5912 = ((sc[3]) * (sc[3])) * x4939 / x443;
  const amrex::Real x5930 = -sc[3] * x4209 - sc[3] * x5277 - sc[3] * x5280 +
                            x303 * x4995 - x3958 * x457;
  const amrex::Real x5972 =
    40000000.0 * sc[3] * exp(-19705.964632912801 * invT);
  const amrex::Real x5974 = x2434 + x5068 + x5270 + x5406 + x5784 + x5788;
  const amrex::Real x5994 = 100000.0 * sc[10] * exp(-8554.6833186802305 * invT);
  const amrex::Real x6002 = kf_qss[336] * sc[10] * sc[25] * x36;
  const amrex::Real x6040 =
    27000000.0 * sc[3] * exp(-16706.793304716699 * invT);
  const amrex::Real x6090 = 17500.0 * sc[10] * exp(1648.03458051046 * invT);
  const amrex::Real x6166 = x1002 * x723 - x1043 * x564 + x1043 * x612 +
                            x1043 * x928 - x1043 * x930 + x587 * x723 -
                            x597 * x682 + x597 * x999;
  const amrex::Real x6189 = -sc[3] * x5247 - sc[3] * x5251 - sc[3] * x5253 -
                            sc[3] * x5255 - x459 * x4978;
  const amrex::Real x6208 = 10.0 * sc[10] * exp(-20128.666632188801 * invT);
  const amrex::Real x6239 =
    -60000000.0 * sc[3] * exp(-26569.839954489202 * invT) -
    100000000.0 * sc[3] * exp(-25236.315790106699 * invT) - x1003 * x597 -
    x1043 * x482 + x1043 * x712 - x1043 * x927 + x1043 * x933 - x524 * x723 +
    x597 * x970 + x7 * x723;
  const amrex::Real x6262 =
    1.357e+23 * exp(-18956.171800863802 * invT - 2.36 * tc[0]);
  const amrex::Real x6316 =
    18520.0 * exp(-15710.4243064233 * invT + 0.75 * tc[0]);
  const amrex::Real x6317 = sc[5] * x6316;
  const amrex::Real x6323 =
    17050.0 * exp(-15700.359973107301 * invT + 0.76 * tc[0]);
  const amrex::Real x6324 = sc[5] * x6323;
  const amrex::Real x6329 =
    32360.0 * exp(-609.39538228951596 * invT + 0.89 * tc[0]);
  const amrex::Real x6330 = sc[5] * x6329;
  const amrex::Real x6333 =
    116600.0 * exp(891.19671514015897 * invT + 0.6 * tc[0]);
  const amrex::Real x6334 = sc[4] * x6333;
  const amrex::Real x6337 =
    478000000.0 * exp(-12353.9691455059 * invT - 0.35 * tc[0]);
  const amrex::Real x6338 = sc[4] * x6337;
  const amrex::Real x6340 =
    3075000000.0 * exp(-13833.426142971701 * invT - 0.32 * tc[0]);
  const amrex::Real x6341 = sc[4] * x6340;
  const amrex::Real x6343 =
    290700000000000.0 * exp(-39512.572598986597 * invT - 1.39 * tc[0]);
  const amrex::Real x6344 = sc[16] * x6343;
  const amrex::Real x6355 =
    20410000.0 * exp(-6169.4363227658596 * invT - 0.16 * tc[0]);
  const amrex::Real x6356 = sc[4] * x6355;
  const amrex::Real x6360 = 9830000.0 * sc[13] * exp(-16319.3164720471 * invT);
  const amrex::Real x6363 = 22000000.0 * exp(-17245.2351371277 * invT);
  const amrex::Real x6364 = sc[9] * x6363;
  const amrex::Real x6368 =
    1.354 * exp(-16530.667471684999 * invT + 1.79 * tc[0]);
  const amrex::Real x6369 = sc[5] * x6368;
  const amrex::Real x6376 =
    1186.0 * exp(-14784.505641342699 * invT + 1.18 * tc[0]);
  const amrex::Real x6377 = sc[5] * x6376;
  amrex::Real x6383 =
    24603559870.5502 * x196 * exp(-1031.09094823387 * invT - 4.26 * tc[0]);
  amrex::Real x6384 = log(
    0.53 * exp(-0.01 * tc[1]) + 0.47 * exp(-0.0005 * tc[1]) +
    exp(-1000000000000000.0 * invT));
  amrex::Real x6386 =
    -0.29097730287517898 * x6384 + 0.43429448190325198 * log(x6383) - 0.4;
  amrex::Real x6388 = -0.55155399201712996 * x6384 - 0.14 * x6386 + 0.75;
  const amrex::Real x6393 =
    exp(
      M_LN10 * (0.43429448190325198 * x6384 /
                (((x6386) * (x6386)) / ((x6388) * (x6388)) + 1.0))) /
    ((x6383 + 1.0) * (x6383 + 1.0));
  const amrex::Real x6396 =
    sc[11] * x2413 *
    exp(g_RT[11] - 2.0 * g_RT[4] - 2062.18189646774 * invT - 8.89 * tc[0]);
  x6383 = exp(
            M_LN10 * (0.43429448190325198 * x6384 /
                      (((x6386) * (x6386)) / ((x6388) * (x6388)) + 1.0))) /
          (x6383 + 1.0);
  const amrex::Real x6399 = -1031.09094823387 * invT - 4.63 * tc[0];
  const amrex::Real x6400 = exp(g_RT[11] - 2.0 * g_RT[4] + x6399);
  const amrex::Real x6403 = refC * sc[11] * x6383 * x6400;
  const amrex::Real x6405 =
    0.43429448190325198 * x6386 / (x196 * ((x6388) * (x6388)));
  const amrex::Real x6406 = 0.43429448190325198 * ((x6386) * (x6386)) /
                            (x196 * ((x6388) * (x6388) * (x6388)));
  x6384 = x6384 / ((((x6386) * (x6386)) / ((x6388) * (x6388)) + 1.0) *
                   (((x6386) * (x6386)) / ((x6388) * (x6388)) + 1.0));
  x6386 = 6.082e+18 * sc[11] * x2413 * x6383 * x6384 * x6400;
  x6388 = ((sc[4]) * (sc[4])) * x196 * x6393 *
          exp(-2062.18189646774 * invT - 8.89 * tc[0]);
  const amrex::Real x6417 = ((sc[4]) * (sc[4])) * x6383 * exp(x6399);
  const amrex::Real x6420 = 6.082e+18 * x196 * x6384 * x6417;
  const amrex::Real x6421 =
    -sc[0] * x2289 - 3.909e+16 * sc[4] * x2398 + 4720000.0 * x2401 +
    1.837e+21 * x2436 - x6386 * (2.0 * x6405 + 0.28 * x6406) +
    1.49638851132686e+29 * x6388 - 1.49638851132686e+29 * x6393 * x6396 +
    6.082e+18 * x6403 - 6.082e+18 * x6417 +
    x6420 * (2.0 * x6405 + 0.28 * x6406);
  const amrex::Real x6422 = x348 * x6334;
  const amrex::Real x6424 = x503 * x6341;
  const amrex::Real x6426 = x348 * x6338;
  const amrex::Real x6428 = -x6422 - x6424 - x6426;
  const amrex::Real x6438 = -x1497 * x579 + x1497 * x602 + x49 * x519 -
                            x49 * x528 - x536 * x595 + x544 * x595 +
                            x557 * x595 - x595 * x604;
  const amrex::Real x6459 = x488 * x6341;
  const amrex::Real x6461 =
    x349 * x6334 + x349 * x6338 - x6422 - x6424 - x6426 + x6459;
  const amrex::Real x6476 = -x1497 * x574 + x1497 * x756 + x49 * x521 +
                            x49 * x738 + x511 * x595 - x595 * x742 +
                            x595 * x758 - x595 * x771;
  const amrex::Real x6516 = x1497 * x745 - x1497 * x765 - x49 * x774 +
                            x49 * x790 + x543 * x595 - x595 * x753 +
                            x595 * x792 - x595 * x803;
  const amrex::Real x6530 = 75000000000.0 * exp(-7674.05415352198 * invT);
  const amrex::Real x6544 =
    5.364e+17 * exp(-13461.0458102763 * invT - 1.4 * tc[0]);
  const amrex::Real x6547 =
    1.3e+18 * exp(-13486.2066435665 * invT - 1.49 * tc[0]);
  const amrex::Real x6553 =
    2.47e+18 * exp(-13596.914310043499 * invT - 1.55 * tc[0]);
  const amrex::Real x6555 =
    x1442 * x6553 - x1447 * x6553 - x407 * x6360 - x6364 * x645;
  const amrex::Real x6556 = x408 * x6369;
  const amrex::Real x6563 =
    66370000000000.0 * exp(-15046.1783075611 * invT - 0.16 * tc[0]);
  const amrex::Real x6567 = -kf_qss[145] * x1303 * x6563 / ((x1302) * (x1302)) +
                            sc[37] * x5247 + sc[8] * x5289 - x256 * x6377 +
                            x258 * x6377;
  const amrex::Real x6576 = x116 * x49 - x1497 * x797 + x1497 * x800 -
                            x49 * x791 - x595 * x741 + x595 * x763 +
                            x595 * x821 - x595 * x841;
  const amrex::Real x6579 =
    10.0 * exp(-503.21666580471998 * invT + 2.0 * tc[0]);
  const amrex::Real x6584 =
    6435000000.0 * exp(-42577.162093737301 * invT - 0.33 * tc[0]);
  const amrex::Real x6588 =
    58.0 * exp(-583.73133233347505 * invT + 1.73 * tc[0]);
  const amrex::Real x6593 = 0.193 * exp(-1059.77429818474 * invT + 2.4 * tc[0]);
  const amrex::Real x6605 =
    100800.0 * exp(-8499.32948544172 * invT + 0.26 * tc[0]);
  const amrex::Real x6612 =
    0.006893 * exp(-22493.784961470999 * invT + 1.3 * tc[0]);
  const amrex::Real x6621 =
    0.003303 * exp(-22664.878627844599 * invT + 1.41 * tc[0]);
  const amrex::Real x6633 =
    26900.0 * exp(171.093666373605 * invT + 0.76 * tc[0]);
  const amrex::Real x6637 = -5000000.0 * sc[53] - x1404 * x6530 +
                            x1425 * x6530 - x1458 * x6530 + x1479 * x6530;
  const amrex::Real x6638 = 9.24 * exp(484.09443250414 * invT + 1.5 * tc[0]);
  const amrex::Real x6647 = exp(149.958566409806 * invT + 2.0 * tc[0]);
  const amrex::Real x6657 =
    -sc[18] * x4258 - 10000000.0 * sc[18] * exp(-1006.43333160944 * invT) -
    20000000.0 * sc[2] * x409 + 20000000.0 * sc[2] * x410;
  const amrex::Real x6662 =
    -sc[40] * x6633 + x1020 * x1500 - x1378 * x6317 - x1379 * x6317;
  const amrex::Real x6664 = 22500000.0 * exp(-1115.6313480890601 * invT);
  const amrex::Real x6670 = -sc[26] * x6664 - 4000000.0 * sc[26] -
                            x1439 * x6553 + x1452 * x6553 - x409 * x6360 +
                            x410 * x6360 - x6364 * x647 - x6364 * x658;
  const amrex::Real x6672 = 580000000.0 * exp(-4810.7513250931197 * invT);
  const amrex::Real x6678 = 2.0 * exp(-654.18166554613595 * invT + 1.8 * tc[0]);
  const amrex::Real x6685 =
    -sc[28] * x6633 + x1500 * x571 - x6324 * x647 - x6324 * x658;
  const amrex::Real x6686 = 20500000.0 * exp(-2994.1391615380799 * invT);
  const amrex::Real x6693 =
    3430.0 * exp(224.93784961470999 * invT + 1.18 * tc[0]);
  const amrex::Real x6695 =
    -sc[12] * x5361 - sc[12] * x6693 - x260 * x6377 + x263 * x6377;
  const amrex::Real x6696 =
    -30200000.0 * sc[2] * x260 + 30200000.0 * sc[2] * x263 - sc[6] * x2810 -
    86970000.0 * sc[6] * exp(-44232.744924234903 * invT);
  const amrex::Real x6701 =
    -sc[8] * x3871 - sc[8] * x4252 -
    26500000.0 * sc[8] * exp(-1100.0316314491199 * invT) - x1337 * x6330 -
    x1339 * x6330;
  const amrex::Real x6705 =
    235.0 * exp(17.612583303165199 * invT + 1.61 * tc[0]);
  const amrex::Real x6709 =
    10500.0 * exp(-800.11449862950406 * invT + 0.97 * tc[0]);
  const amrex::Real x6715 = -sc[45] * x6705 - sc[45] * x6709 - x1497 * x813 +
                            x1497 * x839 - x468 * x595 - x49 * x811 +
                            x49 * x823 + x595 * x669 + x595 * x793 -
                            x595 * x796;
  const amrex::Real x6716 =
    7.003 * exp(-17371.039303578898 * invT + 1.97 * tc[0]);
  const amrex::Real x6718 =
    20.6 * exp(-17597.486803191001 * invT + 2.16 * tc[0]);
  const amrex::Real x6720 =
    6.194 * exp(-16042.547305854499 * invT + 2.01 * tc[0]);
  const amrex::Real x6722 =
    0.06142 * exp(-10064.3333160944 * invT + 2.29 * tc[0]);
  const amrex::Real x6724 =
    0.03199 * exp(-8443.9756522032003 * invT + 2.4 * tc[0]);
  const amrex::Real x6726 =
    6033000000.0 * exp(-10949.9946479107 * invT - 0.83 * tc[0]);
  const amrex::Real x6730 =
    21430.0 * exp(-15720.4886397394 * invT + 0.73 * tc[0]);
  const amrex::Real x6738 =
    21.47 * exp(-17869.223802725599 * invT + 1.48 * tc[0]);
  const amrex::Real x6740 = 2896000000.0 * exp(-52938.393242656501 * invT);
  const amrex::Real x6748 = -20000000.0 * sc[2] * x411;
  const amrex::Real x6749 = 141200.0 * exp(-5029.65057471817 * invT);
  const amrex::Real x6754 = 4772000.0 * exp(-13320.145143850899 * invT);
  const amrex::Real x6761 = -x411 * x6369;
  const amrex::Real x6765 =
    97710000.0 * exp(-20641.947631309598 * invT + 0.33 * tc[0]);
  const amrex::Real x6767 =
    168500.0 * exp(-15831.1963062165 * invT + 0.33 * tc[0]);
  const amrex::Real x6780 = x3985 * x411 - x411 * x6360;
  const amrex::Real x6794 = 0.6125 * kf_qss[238] * sc[5] * x57 * x704 +
                            x115 * x53 + 0.6148 * x120 * x57 + x1497 * x833 -
                            x1497 * x840 + 0.6125 * x41 * x57 + x49 * x827 +
                            0.6148 * x57 * x85 + x595 * x799 - x595 * x812 +
                            x595 * x869 - x595 * x896;
  const amrex::Real x6799 = 30100000.0 * exp(-11573.983313508599 * invT);
  const amrex::Real x6821 = x408 * x6360 - x4218 + x6461;
  const amrex::Real x6828 =
    -30200000.0 * sc[2] * x269 + 30200000.0 * sc[2] * x270 - sc[4] * x2810 -
    86970000.0 * sc[4] * exp(-44232.744924234903 * invT);
  const amrex::Real x6840 = x4222 + x6556 + x6748 + x6761 + x6780 + x6821;
  const amrex::Real x6854 = sc[4] * x6605;
  const amrex::Real x6862 = 49500.0 * exp(-8524.4903187319505 * invT);
  const amrex::Real x6864 =
    sc[28] * x6862 - x375 * x6360 + x419 * x6360 - x6364 * x689 - x6364 * x693;
  const amrex::Real x6879 =
    30200000.0 * sc[2] * x274 - 30200000.0 * sc[2] * x275 -
    70000000.0 * sc[3] * x1344 - 70000000.0 * sc[3] * x1345;
  const amrex::Real x6883 =
    -sc[4] * x3871 - sc[4] * x4252 -
    26500000.0 * sc[4] * exp(-1100.0316314491199 * invT) - x1344 * x6330 -
    x1345 * x6330;
  const amrex::Real x6916 = -x1497 * x865 + x1497 * x868 + x49 * x838 +
                            x49 * x859 + x595 * x834 - x595 * x835 +
                            x595 * x885 - x595 * x936;
  const amrex::Real x6919 = 7000000.0 * exp(503.21666580471998 * invT);
  const amrex::Real x6944 =
    -x422 * x6360 + x423 * x6360 - x6364 * x657 - x6364 * x706;
  const amrex::Real x6968 = -x1497 * x863 + x1497 * x893 + x49 * x870 -
                            x49 * x877 - x546 * x595 - x595 * x831 +
                            x595 * x836 + x595 * x926;
  const amrex::Real x6999 = -x1004 * x595 + x1497 * x889 - x1497 * x894 +
                            x49 * x899 + x49 * x924 + x498 * x595 +
                            x595 * x700 - x595 * x864;
  const amrex::Real x7001 = 3.501 * sc[37] * exp(-35758.576272083403 * invT);
  const amrex::Real x7003 =
    1620000.0 * sc[24] * exp(-6657.5564885964404 * invT);
  const amrex::Real x7023 =
    -sc[4] * x5361 - sc[4] * x6693 - x288 * x6377 + x289 * x6377;
  const amrex::Real x7039 =
    102000000.0 * sc[4] * x290 + x290 * x4028 - x290 * x6344 + x6421;
  const amrex::Real x7042 = -30200000.0 * sc[2] * x290;
  const amrex::Real x7045 = -x290 * x6377;
  const amrex::Real x7048 = 30200000.0 * sc[2] * x293 -
                            102000000.0 * sc[4] * x293 - x293 * x4028 +
                            x293 * x6344 + x293 * x6377 + x7042 + x7045;
  const amrex::Real x7058 = x1000 * x595 - x1026 * x595 - x1497 * x932 +
                            x1497 * x934 + x49 * x925 + x49 * x938 -
                            x595 * x861 + x595 * x866;
  const amrex::Real x7085 = x1014 * x595 - x1046 * x595 - x1497 * x929 +
                            x1497 * x974 + x49 * x963 + x49 * x966 +
                            x595 * x887 - x595 * x890;
  const amrex::Real x7086 = 3730000.0 * exp(-15106.5643074577 * invT);
  const amrex::Real x7102 = 9330000.0 * exp(-10029.1081494881 * invT);
  const amrex::Real x7131 = 543700.0 * exp(-9334.6691506775496 * invT);
  const amrex::Real x7167 = -20000000.0 * sc[2] * x427 - sc[4] * x4258 -
                            10000000.0 * sc[4] * exp(-1006.43333160944 * invT) +
                            x4222;
  const amrex::Real x7200 = x6840 + x7039 + x7048;
  const amrex::Real x7216 =
    1620000.0 * sc[12] * exp(-6657.5564885964404 * invT);
  const amrex::Real x7253 = -sc[4] * x6664 - 4000000.0 * sc[4] - x429 * x6360 -
                            x6364 * x755 - x6364 * x759;
  const amrex::Real x7333 = x1002 * x49 - x1497 * x682 + x1497 * x999 +
                            x49 * x587 - x564 * x595 + x595 * x612 +
                            x595 * x928 - x595 * x930;
  const amrex::Real x7341 = 25000000000.0 * exp(-10768.836648221 * invT);
  const amrex::Real x7344 = 3.501 * sc[12] * exp(-35758.576272083403 * invT);
  const amrex::Real x7382 = -sc[4] * x6705 - sc[4] * x6709 - x1003 * x1497 +
                            x1497 * x970 - x482 * x595 - x49 * x524 + x49 * x7 +
                            x595 * x712 - x595 * x927 + x595 * x933;
  const amrex::Real x7429 = sc[0] * x2289 - 1.837e+21 * x2436;
  const amrex::Real x7462 = x411 * x6369 - x6556 + x7429;
  const amrex::Real x7464 = -102000000.0 * sc[4] * x290;
  const amrex::Real x7466 = 102000000.0 * sc[4] * x293 - x293 * x6377 + x7464;
  const amrex::Real x7468 = x290 * x6377 + x7462 + x7464;
  const amrex::Real x7476 = x290 * x6377 - x6556 + x7429;
  const amrex::Real x7477 = x290 * x6377 + x7462 + x7466;
  const amrex::Real x7488 =
    5325000000000000.0 * exp(-6743.1033217832401 * invT - 0.86 * tc[0]);
  const amrex::Real x7491 =
    1834000000000000.0 * exp(-6496.5271555389299 * invT - 0.73 * tc[0]);
  amrex::Real x7502 = 0.0004 * x186 * exp(2114.5164297114302 * invT) + 1.0;
  amrex::Real x7506 =
    1200000000.0 * exp(-6299.2662225434797 * invT + x373) / x7502;
  x373 = 480000.0 * refCinv * sc[6] * sc[8] * x186 *
           exp(-4184.7497928320499 * invT + x373) / ((x7502) * (x7502)) -
         refCinv * sc[6] * sc[8] * x7506 +
         480000.0 * x186 * x370 * exp(-4184.7497928320499 * invT) /
           ((x7502) * (x7502)) -
         x364 * x370 / x7502;
  const amrex::Real x7509 = x2335 + x373 + x3828 + x4023;
  x364 = x186 * x364 / x7502;
  x7502 = x364 * x408 + x373;
  const amrex::Real x7551 = -kf_qss[165] * sc[3] * x444 * x4939 -
                            3000000.0 * sc[7] * x1336 - x401 * x4939 / x443 -
                            x453 * x4940;
  const amrex::Real x7575 = -x364 * x411;
  const amrex::Real x7578 = 151000.0 * exp(-2420.4721625206998 * invT);
  const amrex::Real x7586 = 20730000000.0 * exp(-45531.043922010998 * invT);
  const amrex::Real x7591 =
    4596000000.0 * exp(-53139.679908978404 * invT - 0.06 * tc[0]);
  const amrex::Real x7594 = -10.0e-13 * sc[14] * sc[4] - sc[14] * x4357 -
                            sc[14] * x7591 - 160000000.0 * sc[18] * x1341 -
                            160000000.0 * sc[18] * x1342;
  const amrex::Real x7595 =
    -sc[10] * x5430 - sc[10] * x6799 - x269 * x4952 + x270 * x4952;
  const amrex::Real x7596 =
    2852000000.0 * exp(-32970.755943525197 * invT - 0.89 * tc[0]);
  const amrex::Real x7601 =
    -refCinv * sc[8] * x186 * x7506 - sc[8] * x2959 - x364 * x416;
  x7506 =
    -refCinv * sc[6] * x186 * x7506 - sc[6] * x2959 - x364 * x375 + x364 * x419;
  const amrex::Real x7640 =
    -sc[6] * x5430 - sc[6] * x6799 - x281 * x4952 + x282 * x4952;
  const amrex::Real x7668 = -121000000.0 * sc[8] * x290;
  const amrex::Real x7670 = -x290 * x4952;
  const amrex::Real x7672 =
    73400000.0 * sc[0] * x293 + 30200000.0 * sc[2] * x293 +
    102000000.0 * sc[4] * x293 + 121000000.0 * sc[8] * x293 + x2217 * x293 +
    x293 * x4952 + x3322 + x3907 + x7042 + x7464 + x7668 + x7670;
  const amrex::Real x7680 =
    x3322 + x3907 + x4023 + x7042 + x7464 + x7502 + x7575 + x7668 + x7670;
  const amrex::Real x7718 = x4023 + x7502 + x7575 + x7672;
  const amrex::Real x7748 =
    304300000000000.0 * exp(-15353.140473702 * invT - 0.46 * tc[0]);
  const amrex::Real x7764 =
    1.0125e+20 * x4004 * x4008 - 1.0125e+20 * x4004 * x4020 +
    1350000000000.0 * x4011 * x4015 - 1350000000000.0 * x4011 * x4018;
  const amrex::Real x7766 = -30000000.0 * sc[2] * x290 + x290 * x4973 + x7764;
  const amrex::Real x7767 = 30000000.0 * sc[2] * x293 - x293 * x4973 + x7766;
  const amrex::Real x7769 = 15000000.0 * exp(-14090.0666425322 * invT);
  const amrex::Real x7770 = sc[9] * x7769;
  const amrex::Real x7775 =
    9.972 * exp(-11463.2756470315 * invT + 1.78 * tc[0]);
  const amrex::Real x7776 = sc[9] * x7775;
  const amrex::Real x7788 =
    10.66 * exp(-11463.2756470315 * invT + 1.77 * tc[0]);
  const amrex::Real x7789 = sc[9] * x7788;
  const amrex::Real x7793 =
    1.35e+32 * exp(-11976.556646152299 * invT - 6.96 * tc[0]);
  const amrex::Real x7794 = x186 * x7793;
  const amrex::Real x7796 =
    7.584e-12 * exp(-8126.9491527462196 * invT + 5.42 * tc[0]);
  const amrex::Real x7797 = sc[9] * x7796;
  amrex::Real x7803 =
    6.442e+24 * exp(-8479.2008188095297 * invT - 6.99 * tc[0]);
  const amrex::Real x7806 =
    -sc[12] * sc[8] * x7803 + x503 * x7794 - x769 * x7793 / x773;
  const amrex::Real x7809 = -857.98441519704897 * invT - 5.246 * tc[0];
  amrex::Real x7811 =
    12318211417408.3 * x185 * exp(-538.03925907840608 * invT - 4.076 * tc[0]);
  amrex::Real x7812 = log(
    0.405 * exp(-0.014367816091954 * tc[1]) +
    0.595 * exp(-0.00089285714285714305 * tc[1]) +
    exp(-1000000000000000.0 * invT));
  amrex::Real x7813 =
    -0.29097730287517898 * x7812 + 0.43429448190325198 * log(x7811) - 0.4;
  amrex::Real x7815 = -0.55155399201712996 * x7812 - 0.14 * x7813 + 0.75;
  const amrex::Real x7821 =
    exp(
      M_LN10 * (0.43429448190325198 * x7812 /
                (((x7813) * (x7813)) / ((x7815) * (x7815)) + 1.0))) /
    (x7811 + 1.0);
  const amrex::Real x7823 = ((sc[8]) * (sc[8])) * x7821 * exp(x7809);
  x7811 = exp(
            M_LN10 * (0.43429448190325198 * x7812 /
                      (((x7813) * (x7813)) / ((x7815) * (x7815)) + 1.0))) *
          x185 / ((x7811 + 1.0) * (x7811 + 1.0));
  amrex::Real x7826 = -1396.0236742754478 * invT - 9.322 * tc[0];
  const amrex::Real x7828 = ((sc[8]) * (sc[8])) * x7811 * exp(x7826);
  const amrex::Real x7832 =
    refC * sc[13] * exp(g_RT[13] - 2.0 * g_RT[8] + x7826);
  const amrex::Real x7835 = x7821 * exp(g_RT[13] - 2.0 * g_RT[8] + x7809);
  const amrex::Real x7836 = refC * sc[13] * x7835;
  amrex::Real x7839 = ((x7813) * (x7813)) / ((x7815) * (x7815) * (x7815));
  amrex::Real x7842 =
    2.0 * x2355 * x7813 / ((x7815) * (x7815)) + 0.28 * x2355 * x7839;
  x7812 = x185 * x7812 /
          ((((x7813) * (x7813)) / ((x7815) * (x7815)) + 1.0) *
           (((x7813) * (x7813)) / ((x7815) * (x7815)) + 1.0));
  x2469 = x2469 - 2.7962339917516799e+37 * x7811 * x7832 +
          2.27e+24 * x7812 * x7823 * x7842 - 2.27e+24 * x7812 * x7836 * x7842 -
          2.27e+24 * x7823 + 2.7962339917516799e+37 * x7828 + 2.27e+24 * x7836;
  const amrex::Real x7857 = -x1852 * x579 + x1852 * x602 + x519 * x969 -
                            x528 * x969 - x536 * x629 + x544 * x629 +
                            x557 * x629 - x604 * x629;
  const amrex::Real x7869 = -x349 * x6338;
  const amrex::Real x7871 = x5006 + x5066 + x6426 + x7869;
  amrex::Real x7877 =
    4.0 * x2355 * x7813 / ((x7815) * (x7815)) + 0.56 * x2355 * x7839;
  const amrex::Real x7879 = -x488 * x7794 + x7806;
  x7826 = 5.5924679835033703e+37 * ((sc[8]) * (sc[8])) * x7811 * exp(x7826) -
          5.5924679835033703e+37 * x7811 * x7832 +
          2.27e+24 * x7812 * x7823 * x7877 - 2.27e+24 * x7812 * x7836 * x7877 -
          4.54e+24 * x7823 + 4.54e+24 * x7836 + x7879;
  const amrex::Real x7889 = -x1852 * x574 + x1852 * x756 + x511 * x629 +
                            x521 * x969 - x629 * x742 + x629 * x758 -
                            x629 * x771 + x738 * x969;
  const amrex::Real x7917 = x1852 * x745 - x1852 * x765 + x543 * x629 -
                            x629 * x753 + x629 * x792 - x629 * x803 -
                            x774 * x969 + x790 * x969;
  const amrex::Real x7924 = 50000000.0 * sc[8] * x408;
  const amrex::Real x7927 = x408 * x7789;
  const amrex::Real x7933 =
    -sc[12] * sc[8] * x7803 - x488 * x7794 - x769 * x7793 / x773;
  const amrex::Real x7944 = x116 * x969 - x1852 * x797 + x1852 * x800 -
                            x629 * x741 + x629 * x763 + x629 * x821 -
                            x629 * x841 - x791 * x969;
  const amrex::Real x7946 =
    -794000000000000.0 * kf_qss[134] * x1289 * x3946 / ((x1286) * (x1286));
  const amrex::Real x7975 = -x1852 * x813 + x1852 * x839 - x468 * x629 +
                            x629 * x669 + x629 * x793 - x629 * x796 -
                            x811 * x969 + x823 * x969;
  const amrex::Real x7983 =
    10.0 * x2355 * x7813 / ((x7815) * (x7815)) + 1.4 * x2355 * x7839;
  const amrex::Real x7986 = -x411 * x7789;
  const amrex::Real x8000 = x1852 * x833 - x1852 * x840 + x629 * x799 -
                            x629 * x812 + x629 * x869 - x629 * x896 +
                            x826 * x969 + x827 * x969;
  const amrex::Real x8014 = x7871 - x7924;
  x2355 = 6.0 * x2355 * x7813 / ((x7815) * (x7815)) + 0.84 * x2355 * x7839;
  x7813 = 50000000.0 * sc[8] * x411 + x7502 + x7575 + x7927 + x7986 + x8014;
  x7815 = 175000.0 * exp(-3824.4466601158701 * invT);
  x7839 = 3.67e-8 * exp(-3436.9698274462398 * invT + 4.01 * tc[0]);
  const amrex::Real x8037 = -sc[31] * x6919;
  const amrex::Real x8038 =
    2.21e-6 * exp(-2855.7545784417798 * invT + 3.5 * tc[0]);
  const amrex::Real x8041 =
    370800.0 * exp(667.76851552286303 * invT - 0.5 * tc[0]);
  const amrex::Real x8049 =
    336500.0 * exp(-1259.04809784341 * invT - 0.33 * tc[0]);
  const amrex::Real x8052 =
    1.51e-13 * exp(-3042.9511781211399 * invT + 6.0 * tc[0]);
  const amrex::Real x8055 = 1700000.0 * exp(-4247.1486593918298 * invT);
  const amrex::Real x8063 =
    2.608 * exp(-2974.5137115716998 * invT + 1.78 * tc[0]);
  const amrex::Real x8066 = 10000.0 * exp(-10064.3333160944 * invT);
  const amrex::Real x8071 =
    2.61e+40 * exp(-18593.855801484398 * invT - 9.82 * tc[0]);
  const amrex::Real x8075 =
    4.712e+53 * exp(-14865.0203078714 * invT - 13.19 * tc[0]);
  const amrex::Real x8085 =
    -sc[28] * x6862 - sc[28] * x8063 - x689 * x7776 - x693 * x7776;
  const amrex::Real x8087 =
    104100000.0 * exp(-9973.7543162495404 * invT - 0.33 * tc[0]);
  const amrex::Real x8092 = -120000000.0 * sc[13] * x1344 -
                            120000000.0 * sc[13] * x1345 -
                            19500000.0 * sc[15] * x3999 - sc[15] * x8087;
  const amrex::Real x8093 = 410000.0 * exp(-3625.1728604571999 * invT);
  const amrex::Real x8095 =
    6.62e-6 * exp(-4780.5583251448397 * invT + 3.7 * tc[0]);
  const amrex::Real x8098 =
    0.13525 * exp(-3666.9398437189898 * invT + 2.26 * tc[0]);
  const amrex::Real x8100 =
    9.04e-7 * exp(-3600.0120271669598 * invT + 3.65 * tc[0]);
  const amrex::Real x8106 = -sc[45] * x8098 - sc[45] * x8100 + x1852 * x919 +
                            x629 * x915 + x629 * x920 - x844 * x969;
  const amrex::Real x8108 =
    3.636e-12 * exp(-502.21023247311001 * invT + 5.42 * tc[0]);
  const amrex::Real x8111 = -sc[12] * x186 * x7803 - sc[12] * x8108 +
                            x274 * x7797 - x275 * x7797 - x572 * x7794;
  const amrex::Real x8113 =
    4921000.0 * exp(-24043.692292149499 * invT + 0.05 * tc[0]);
  const amrex::Real x8116 =
    70500000.0 * sc[23] * exp(-28824.250617294299 * invT);
  const amrex::Real x8118 = 600000.0 * sc[29] * exp(-9007.5783179044793 * invT);
  const amrex::Real x8119 =
    1.551e-7 * exp(-12917.571811207201 * invT + 3.98 * tc[0]);
  const amrex::Real x8121 =
    2.647e-5 * exp(-11664.562313353401 * invT + 3.51 * tc[0]);
  const amrex::Real x8124 = 600000.0 * sc[25] * exp(-8987.4496512722908 * invT);
  const amrex::Real x8126 = 181000.0 * sc[31] * exp(-9299.4439840712203 * invT);
  const amrex::Real x8127 =
    9.649e-16 * exp(-5142.8743245242304 * invT + 6.56 * tc[0]);
  const amrex::Real x8130 = 342000.0 * sc[10] * exp(-9707.0494833730409 * invT);
  const amrex::Real x8132 =
    29620000.0 * sc[16] * exp(-33237.460776401698 * invT);
  const amrex::Real x8133 =
    1.44e-6 * exp(-2753.60159528343 * invT + 4.02 * tc[0]);
  const amrex::Real x8135 =
    819700000000.0 * exp(-40171.786431190798 * invT - 0.67 * tc[0]);
  const amrex::Real x8139 =
    36.56 * exp(-13944.1338094488 * invT + 1.76 * tc[0]);
  const amrex::Real x8153 =
    28950000000.0 * exp(-35310.713439517203 * invT - 0.7 * tc[0]);
  const amrex::Real x8173 =
    0.002127 * kf_qss[254] * sc[9] * x593 * x704 + x115 * x1851 +
    0.002135 * x120 * x593 - x1852 * x865 + x1852 * x868 +
    0.002127 * x41 * x593 + 0.002135 * x593 * x85 + x629 * x834 - x629 * x835 +
    x629 * x885 - x629 * x936 + x859 * x969;
  const amrex::Real x8174 = 342000.0 * sc[9] * exp(-9707.0494833730409 * invT);
  const amrex::Real x8199 = -x1852 * x863 + x1852 * x893 - x546 * x629 -
                            x629 * x831 + x629 * x836 + x629 * x926 +
                            x870 * x969 - x877 * x969;
  const amrex::Real x8222 = -x1004 * x629 + x1852 * x889 - x1852 * x894 +
                            x498 * x629 + x629 * x700 - x629 * x864 +
                            x899 * x969 + x924 * x969;
  x7803 = -sc[8] * x186 * x7803 - sc[8] * x8108 - x288 * x7797 + x289 * x7797 -
          x485 * x7794;
  const amrex::Real x8240 = 141000000.0 * sc[8] * x290 + x2469 + x290 * x3990;
  const amrex::Real x8242 = x290 * x7797;
  const amrex::Real x8244 = x7879 - x8242;
  const amrex::Real x8246 =
    -141000000.0 * sc[8] * x293 - x293 * x3990 + x293 * x7797 + x8244;
  const amrex::Real x8258 = x1000 * x629 - x1026 * x629 - x1852 * x932 +
                            x1852 * x934 - x629 * x861 + x629 * x866 +
                            x925 * x969 + x938 * x969;
  const amrex::Real x8278 = x1014 * x629 - x1046 * x629 - x1852 * x929 +
                            x1852 * x974 + x629 * x887 - x629 * x890 +
                            x963 * x969 + x966 * x969;
  const amrex::Real x8297 =
    29620000.0 * sc[9] * exp(-33237.460776401698 * invT);
  const amrex::Real x8344 = x7813 + x8240 + x8246;
  const amrex::Real x8349 =
    2.73e+62 * exp(-61996.293227141497 * invT - 13.28 * tc[0]);
  const amrex::Real x8353 =
    70500000.0 * sc[9] * exp(-28824.250617294299 * invT);
  const amrex::Real x8358 =
    228400000000000.0 * exp(-14291.353308854001 * invT - 0.55 * tc[0]);
  const amrex::Real x8366 = 600000.0 * sc[9] * exp(-8987.4496512722908 * invT);
  const amrex::Real x8388 = 100000.0 * sc[8] * x3341;
  const amrex::Real x8397 = 600000.0 * sc[9] * exp(-9007.5783179044793 * invT);
  const amrex::Real x8398 =
    1339000000000000.0 * exp(-19283.262633636899 * invT - 0.52 * tc[0]);
  const amrex::Real x8411 = 181000.0 * sc[9] * exp(-9299.4439840712203 * invT);
  const amrex::Real x8444 = x1002 * x969 - x1852 * x682 + x1852 * x999 -
                            x564 * x629 + x587 * x969 + x612 * x629 +
                            x629 * x928 - x629 * x930;
  const amrex::Real x8450 =
    2.397e+48 * exp(-41304.023929251402 * invT - 9.9 * tc[0]);
  const amrex::Real x8471 = -sc[8] * x8098 - sc[8] * x8100 - x1003 * x1852 +
                            x1852 * x970 - x482 * x629 - x524 * x969 +
                            x629 * x712 - x629 * x927 + x629 * x933 + x7 * x969;
  x2446 = -refC * sc[9] * x2460 + sc[0] * sc[8] * x2255 +
          5.1244621141253505e+27 * x2243 * x2244 -
          5.1244621141253505e+27 * x2243 * x2463 - x2446 * x2449 +
          x2446 * x2467;
  x2578 = 1.0248924228250701e+28 * x2243 * x2244 -
          1.0248924228250701e+28 * x2243 * x2463 + 6.62e+18 * x2253 * x2575 -
          6.62e+18 * x2253 * x2583 - x2449 * x2578 + x2467 * x2578;
  const amrex::Real x8507 = x2446 - x7927;
  const amrex::Real x8510 = -50000000.0 * sc[8] * x411;
  const amrex::Real x8514 = x411 * x7789 + x7924 - x7927 + x8510;
  const amrex::Real x8538 = 121000000.0 * sc[8] * x293 - x293 * x7797 + x7668;
  const amrex::Real x8541 = x2446 + x7668 + x8242 + x8514;
  const amrex::Real x8551 = x2446 + x8242 + x8514 + x8538;
  const amrex::Real x8570 = exp(-5032.1666580472001 * invT);
  const amrex::Real x8571 = 1000000.0 * sc[11] * x8570;
  const amrex::Real x8575 =
    10530000.0 * exp(-6884.0039882085703 * invT - 0.33 * tc[0]);
  const amrex::Real x8576 = sc[11] * x8575;
  const amrex::Real x8581 =
    12100000.0 * exp(-6043.6321563146803 * invT - 0.34 * tc[0]);
  const amrex::Real x8582 = sc[11] * x8581;
  const amrex::Real x8587 =
    35000.0 * sc[0] * x2284 - 830.50847457627106 * x2272 * x2273 +
    830.50847457627106 * x2272 * x2276 - 35000.0 * x2275 +
    x2416 * (0.28 * x2406 + 2.0 * x2407) - x2420 * (0.28 * x2406 + 2.0 * x2407);
  const amrex::Real x8591 =
    1.194e-8 * exp(-2476.3292124250302 * invT + 4.2 * tc[0]);
  const amrex::Real x8592 = sc[11] * x8591;
  const amrex::Real x8604 = -x1861 * x536 + x1861 * x544 + x1861 * x557 -
                            x1861 * x604 - x1868 * x579 + x1868 * x602 +
                            x1871 * x519 - x1871 * x528;
  const amrex::Real x8617 = -x349 * x4963 + x5007;
  const amrex::Real x8618 = -x488 * x4967;
  const amrex::Real x8620 = x6424 - x6459;
  const amrex::Real x8622 = x6426 + x7869 + x8618 + x8620;
  const amrex::Real x8633 = x1861 * x511 - x1861 * x742 + x1861 * x758 -
                            x1861 * x771 - x1868 * x574 + x1868 * x756 +
                            x1871 * x521 + x1871 * x738;
  const amrex::Real x8654 = x1861 * x543 - x1861 * x753 + x1861 * x792 -
                            x1861 * x803 + x1868 * x745 - x1868 * x765 -
                            x1871 * x774 + x1871 * x790;
  const amrex::Real x8667 =
    -x407 * x8582 + x408 * x8582 + x4967 * x508 -
    42800.0 * x769 * exp(-552.02868238777796 * invT) / x773;
  const amrex::Real x8671 = -x256 * x8592 + x258 * x8592 -
                            55000.0 * x285 * exp(-1219.7971979106401 * invT) -
                            x353 * x4963 + x354 * x4963;
  const amrex::Real x8680 = x116 * x1871 - x1861 * x741 + x1861 * x763 +
                            x1861 * x821 - x1861 * x841 - x1868 * x797 +
                            x1868 * x800 - x1871 * x791;
  const amrex::Real x8682 =
    -kf_qss[134] * sc[4] * x1289 * x6605 / ((x1286) * (x1286)) -
    x1289 * x6605 / x1286;
  const amrex::Real x8683 = -kf_qss[125] * sc[4] * x1276 * x6355 +
                            1.0e-42 * sc[12] * sc[17] - x1275 * x6355 / x1268;
  const amrex::Real x8706 = -x1861 * x468 + x1861 * x669 + x1861 * x793 -
                            x1861 * x796 - x1868 * x813 + x1868 * x839 -
                            x1871 * x811 + x1871 * x823;
  const amrex::Real x8713 = x411 * x8582;
  const amrex::Real x8715 = x411 * x4989 - x8713;
  const amrex::Real x8727 = x1861 * x799 - x1861 * x812 + x1861 * x869 -
                            x1861 * x896 + x1868 * x833 - x1868 * x840 +
                            x1871 * x826 + x1871 * x827;
  const amrex::Real x8735 = x408 * x8582 + x5009 + x8618;
  const amrex::Real x8737 = -x5270 + x6426 + x7869 + x8620;
  const amrex::Real x8783 = x1861 * x834 - x1861 * x835 + x1861 * x885 -
                            x1861 * x936 - x1868 * x865 + x1868 * x868 +
                            x1871 * x838 + x1871 * x859;
  const amrex::Real x8784 = 2800000.0 * exp(-6843.7466549441897 * invT);
  const amrex::Real x8794 = exp(-8906.9349847435406 * invT);
  const amrex::Real x8804 = 3010000.0 * exp(-5998.3426563922603 * invT);
  const amrex::Real x8809 =
    -sc[37] * x5572 - sc[37] * x6919 - 10.0e-25 * sc[37] - x1279 * x6356;
  const amrex::Real x8811 = 150000.0 * exp(-7140.6444877689701 * invT);
  const amrex::Real x8818 = exp(-7497.9283204903204 * invT);
  const amrex::Real x8820 = 1400000.0 * sc[26] * x8818;
  const amrex::Real x8831 = -sc[20] * x5624 - sc[20] * x8804 - x422 * x8582 +
                            x423 * x8582 - x4967 * x97;
  const amrex::Real x8833 = 13200000.0 * exp(-10300.8451490226 * invT);
  const amrex::Real x8840 =
    5.82e-9 * exp(-3299.5916776815502 * invT + 4.53 * tc[0]);
  const amrex::Real x8842 = -sc[12] * x5607 - sc[12] * x8840 - x281 * x8592 +
                            x282 * x8592 - x357 * x4963;
  const amrex::Real x8855 =
    -16800000.0 * sc[45] * exp(-10285.748649048501 * invT) -
    28000000.0 * sc[45] * exp(-8901.9028180854893 * invT) - x1861 * x546 -
    x1861 * x831 + x1861 * x836 + x1861 * x926 - x1868 * x863 + x1868 * x893 +
    x1871 * x870 - x1871 * x877;
  const amrex::Real x8856 =
    15510000000.0 * exp(-22141.533295407698 * invT - 1.38 * tc[0]);
  const amrex::Real x8859 =
    0.5867 * exp(-4910.89144158826 * invT + 1.33 * tc[0]);
  const amrex::Real x8861 = 316000.0 * exp(-6541.8166554613599 * invT);
  const amrex::Real x8863 =
    82980.0 * exp(-3951.2572598986599 * invT + 0.24 * tc[0]);
  const amrex::Real x8867 =
    41520000.0 * exp(-8524.4903187319505 * invT - 0.35 * tc[0]);
  const amrex::Real x8898 =
    433200.0 * kf_qss[246] * sc[11] * x1859 * x704 - x1004 * x1861 +
    x115 * x1867 + 434800.0 * x120 * x1859 + 433200.0 * x1859 * x41 +
    434800.0 * x1859 * x85 + x1861 * x498 + x1861 * x700 - x1861 * x864 +
    x1868 * x889 - x1868 * x894 + x1871 * x924;
  const amrex::Real x8907 = -sc[10] * x5607 - sc[10] * x8840 - x288 * x8592 +
                            x289 * x8592 - x331 * x4963;
  const amrex::Real x8917 = -x290 * x8592 + x8617;
  const amrex::Real x8919 =
    x293 * x4952 - x293 * x5015 + x293 * x8592 + x7670 + x8917;
  const amrex::Real x8928 = x1000 * x1861 - x1026 * x1861 - x1861 * x861 +
                            x1861 * x866 - x1868 * x932 + x1868 * x934 +
                            x1871 * x925 + x1871 * x938;
  const amrex::Real x8938 =
    x5781 + x7670 + x8587 + x8715 + x8735 + x8737 + x8917;
  const amrex::Real x8947 = x1014 * x1861 - x1046 * x1861 + x1861 * x887 -
                            x1861 * x890 - x1868 * x929 + x1868 * x974 +
                            x1871 * x963 + x1871 * x966;
  const amrex::Real x8991 = -sc[10] * x5624 - sc[10] * x8804 + x408 * x8582 -
                            x428 * x8582 - x4967 * x569 + x5009;
  const amrex::Real x8993 = x5781 + x8587 + x8715 + x8735 + x8737 + x8919;
  const amrex::Real x9081 = x1002 * x1871 - x1861 * x564 + x1861 * x612 +
                            x1861 * x928 - x1861 * x930 - x1868 * x682 +
                            x1868 * x999 + x1871 * x587;
  const amrex::Real x9111 =
    -16800000.0 * sc[10] * exp(-10285.748649048501 * invT) -
    28000000.0 * sc[10] * exp(-8901.9028180854893 * invT) - x1003 * x1868 -
    x1861 * x482 + x1861 * x712 - x1861 * x927 + x1861 * x933 + x1868 * x970 -
    x1871 * x524 + x1871 * x7;
  const amrex::Real x9146 = 3.041e+18 * sc[11] * x2413 * x6383 * x6384 * x6400;
  x6384 = 3.041e+18 * x196 * x6384 * x6417;
  const amrex::Real x9149 =
    -x6384 * (2.0 * x6405 + 0.28 * x6406) - 7.4819425566342999e+28 * x6388 +
    7.4819425566342999e+28 * x6393 * x6396 - 3.041e+18 * x6403 +
    3.041e+18 * x6417 + x9146 * (2.0 * x6405 + 0.28 * x6406);
  const amrex::Real x9151 = -x408 * x8582;
  const amrex::Real x9167 = x290 * x8592 + x8713 + x9149 + x9151;
  const amrex::Real x9169 = x290 * x8592 + x9149 + x9151;
  const amrex::Real x9171 = -x293 * x8592 + x9167;
  const amrex::Real x9179 =
    2028000000000.0 * exp(-11855.7846463592 * invT + 0.09 * tc[0]);
  const amrex::Real x9181 =
    8504000.0 * exp(-3527.04561062528 * invT - 0.5 * tc[0]);
  const amrex::Real x9182 = sc[32] * x9181;
  const amrex::Real x9187 = sc[0] * x197 * x400 - sc[12] * x2309 -
                            sc[12] * x3822 + sc[1] * sc[6] * x3825;
  const amrex::Real x9195 = x2638 + x7879 + x8617 + x9187;
  const amrex::Real x9237 = 1990000.0 * exp(-5867.5063232830298 * invT);
  const amrex::Real x9243 =
    -1.0e-42 * sc[17] * sc[4] -
    150000.0 * sc[17] * exp(-5334.0966575300299 * invT) - x1280 * x9179;
  const amrex::Real x9244 = x290 * x9182;
  const amrex::Real x9247 = x293 * x9182 - x9244;
  const amrex::Real x9249 =
    -x2010 * x290 + x2010 * x293 + x2225 * x293 + x290 * x4995 + x293 * x4028 -
    x293 * x4995 + x293 * x5015 + x293 * x6377 + x293 * x7797 + x293 * x8592 +
    x3327 + x4599 - x5781 + x7045 + x8244 + x8917 + x9187 + x9247;
  const amrex::Real x9251 =
    -x2010 * x290 + x290 * x4995 - x5781 + x9187 - x9244;
  const amrex::Real x9256 = x3327 + x4599 + x7045 + x8244 + x8917 + x9251;
  const amrex::Real x9288 =
    598400000.0 * exp(-10416.584982157699 * invT - 0.57 * tc[0]);
  const amrex::Real x9289 = sc[13] * x9288;
  x7842 = 1.39811699587584e+37 * x7811 * x7832 -
          1.135e+24 * x7812 * x7823 * x7842 +
          1.135e+24 * x7812 * x7836 * x7842 + 1.135e+24 * x7823 -
          1.39811699587584e+37 * x7828 - 1.135e+24 * x7836;
  x7877 = 2.7962339917516799e+37 * x7811 * x7832 -
          1.135e+24 * x7812 * x7823 * x7877 +
          1.135e+24 * x7812 * x7836 * x7877 + 2.27e+24 * x7823 -
          2.7962339917516799e+37 * x7828 - 2.27e+24 * x7836;
  const amrex::Real x9333 = -x408 * x6360 + x7842;
  const amrex::Real x9390 = -x408 * x6360 + x411 * x6360 + x7842;
  const amrex::Real x9391 =
    0.5369 * exp(-8272.8819858295901 * invT + 1.33 * tc[0]);
  const amrex::Real x9394 =
    1802000.0 * exp(-20294.7281319043 * invT + 0.05 * tc[0]);
  const amrex::Real x9401 = 3211000.0 * sc[23] * exp(-25080.3186237072 * invT);
  const amrex::Real x9429 =
    172800.0 * exp(-2431.54292916841 * invT + 0.06 * tc[0]);
  const amrex::Real x9453 = 3211000.0 * sc[13] * exp(-25080.3186237072 * invT);
  const amrex::Real x9466 =
    100000.0 * sc[13] * sc[24] * exp(-6491.4949888808796 * invT);
  const amrex::Real x9475 =
    100000.0 * kf_qss[310] * sc[13] * sc[15] * exp(-6491.4949888808796 * invT);
  const amrex::Real x9527 =
    3661.0 * exp(-12167.7789791581 * invT + 0.83 * tc[0]);
  const amrex::Real x9528 = sc[14] * x9527;
  x2320 = refCinv * sc[16] * sc[1] * x3811 + sc[0] * x2178 +
          sc[14] * x186 * x2165 * x2315 +
          125000.0 * sc[14] * x186 * exp(-17555.216603263401 * invT) /
            ((x3809) * (x3809)) -
          sc[14] * x2315 - sc[14] * x3819 - x2165 * x2178 * x358 - x2166 +
          x2320 - x3817;
  x2165 = x2320 + x2397;
  x2166 = 7.497e+17 * exp(-14885.1489745036 * invT - 1.41 * tc[0]);
  x2397 = x2165 + x293 * x3990 + x4594;
  x3809 = 11570000.0 * sc[23] * exp(-29040.633783590401 * invT);
  x3817 = 16240000.0 * exp(-24250.0111251294 * invT + 0.05 * tc[0]);
  const amrex::Real x9651 =
    69370000000.0 * exp(-26569.839954489202 * invT - 1.33 * tc[0]);
  const amrex::Real x9655 =
    0.00078069999999999995 * exp(-25643.921289408499 * invT + 2.91 * tc[0]);
  const amrex::Real x9659 =
    2230000.0 * sc[31] * exp(-8650.2944851831307 * invT);
  const amrex::Real x9680 = 50000.0 * exp(-3522.5166606330399 * invT);
  const amrex::Real x9684 = exp(-1253.00949785375 * invT - 0.63 * tc[0]);
  const amrex::Real x9693 =
    8112000000.0 * exp(749.28961538322801 * invT - 1.33 * tc[0]);
  const amrex::Real x9717 =
    11570000.0 * sc[14] * exp(-29040.633783590401 * invT);
  const amrex::Real x9755 =
    2230000.0 * sc[14] * exp(-8650.2944851831307 * invT);
  const amrex::Real x9804 = 5000000.0 * sc[10] * x8794 + 2500000.0 * sc[4];
  const amrex::Real x9810 =
    1.1438889916743799e+38 * x2192 * x2193 -
    1.1438889916743799e+38 * x2192 * x2199 + 1.112e+22 * x2202 * x2378 -
    1.112e+22 * x2202 * x2386 - x2381 * (2.0 * x2194 + 0.28 * x2374) +
    x2388 * (2.0 * x2194 + 0.28 * x2374);
  const amrex::Real x9812 = x1887 * x519 - x1887 * x528 - x1887 * x536 +
                            x1887 * x544 + x1887 * x557 - x1887 * x604 -
                            x1892 * x579 + x1892 * x602;
  const amrex::Real x9817 =
    2.28777798334875e+38 * x2192 * x2193 -
    2.28777798334875e+38 * x2192 * x2199 + 2.224e+22 * x2202 * x2378 -
    2.224e+22 * x2202 * x2386 - x2381 * (4.0 * x2194 + 0.56 * x2374) +
    x2388 * (4.0 * x2194 + 0.56 * x2374);
  const amrex::Real x9818 = x1887 * x511 + x1887 * x521 + x1887 * x738 -
                            x1887 * x742 + x1887 * x758 - x1887 * x771 -
                            x1892 * x574 + x1892 * x756;
  const amrex::Real x9824 = x1887 * x543 - x1887 * x753 - x1887 * x774 +
                            x1887 * x790 + x1887 * x792 - x1887 * x803 +
                            x1892 * x745 - x1892 * x765;
  const amrex::Real x9829 = -x3977 * x408;
  const amrex::Real x9831 = x116 * x1887 - x1887 * x741 + x1887 * x763 -
                            x1887 * x791 + x1887 * x821 - x1887 * x841 -
                            x1892 * x797 + x1892 * x800;
  const amrex::Real x9836 = -x1887 * x468 + x1887 * x669 + x1887 * x793 -
                            x1887 * x796 - x1887 * x811 + x1887 * x823 -
                            x1892 * x813 + x1892 * x839;
  const amrex::Real x9841 = x1887 * x799 - x1887 * x812 + x1887 * x826 +
                            x1887 * x827 + x1887 * x869 - x1887 * x896 +
                            x1892 * x833 - x1892 * x840;
  const amrex::Real x9856 = x1887 * x834 - x1887 * x835 + x1887 * x838 +
                            x1887 * x859 + x1887 * x885 - x1887 * x936 -
                            x1892 * x865 + x1892 * x868;
  const amrex::Real x9861 = -x1887 * x546 - x1887 * x831 + x1887 * x836 +
                            x1887 * x870 - x1887 * x877 + x1887 * x926 -
                            x1892 * x863 + x1892 * x893;
  const amrex::Real x9868 = -x1004 * x1887 + x1887 * x498 + x1887 * x700 -
                            x1887 * x864 + x1887 * x899 + x1887 * x924 +
                            x1892 * x889 - x1892 * x894;
  const amrex::Real x9874 = 18100000.0 * sc[15] * x290 + x290 * x3972;
  const amrex::Real x9877 =
    kf_qss[270] * sc[13] * x1886 * x704 + x1000 * x1887 - x1026 * x1887 +
    320000.0 * x115 * exp(-6189.5649893980499 * invT) + x120 * x1886 +
    x1886 * x41 + x1886 * x85 - x1887 * x861 + x1887 * x866 + x1887 * x938 -
    x1892 * x932 + x1892 * x934;
  const amrex::Real x9884 = x4334 + x8620 + x9810 + x9829 + x9874;
  const amrex::Real x9885 = x1014 * x1887 - x1046 * x1887 + x1887 * x887 -
                            x1887 * x890 + x1887 * x963 + x1887 * x966 -
                            x1892 * x929 + x1892 * x974;
  const amrex::Real x9892 = exp(-4126.3766595986999 * invT);
  const amrex::Real x9900 = 211000.0 * exp(-3698.6424936646899 * invT);
  const amrex::Real x9907 =
    -100000.0 * sc[45] * exp(-6743.1033217832401 * invT) -
    250000.0 * sc[45] * exp(-5233.4533243690803 * invT) - x1041 * x1887 +
    x1055 * x1887 + x1056 * x1892 + x1057 * x1887;
  const amrex::Real x9923 =
    -18100000.0 * sc[15] * x293 - x293 * x3972 + x8620 + x9810 + x9829 + x9874;
  const amrex::Real x9924 = x4334 + x9923;
  const amrex::Real x9934 = kf_qss[336] * x112 * x36 * x38 * x9466 +
                            x1086 * x1887 + x1087 * x1892 + x1088 * x1887;
  const amrex::Real x9935 = 1.0e+19 * exp(-48696.276749922697 * invT - tc[0]);
  const amrex::Real x9941 =
    9.173e+20 * exp(-37233.001102891198 * invT - 1.63 * tc[0]);
  const amrex::Real x9954 = x1002 * x1887 - x1887 * x564 + x1887 * x587 +
                            x1887 * x612 + x1887 * x928 - x1887 * x930 -
                            x1892 * x682 + x1892 * x999;
  const amrex::Real x9961 =
    -100000.0 * sc[15] * exp(-6743.1033217832401 * invT) -
    250000.0 * sc[15] * exp(-5233.4533243690803 * invT) - x1003 * x1892 -
    x1887 * x482 - x1887 * x524 + x1887 * x7 + x1887 * x712 - x1887 * x927 +
    x1887 * x933 + x1892 * x970;
  x2372 = x2372 + x3821;
  const amrex::Real x9972 = x2372 + x290 * x6344;
  const amrex::Real x9973 = -x293 * x6344 + x9972;
  x1963 = -2.254e+28 * refC * sc[17] * x1963 * x1979 +
          1.6336064308681701e+51 * x1967 * x2344 -
          1.6336064308681701e+51 * x1967 * x2367 + 2.254e+28 * x1979 * x2349 +
          x2168 + x2361 * x2365 - x2361 * x2370;
  x2361 = x1899 * x519 - x1899 * x528 - x1899 * x536 + x1899 * x544 +
          x1899 * x557 - x1899 * x604 - x1903 * x579 + x1903 * x602;
  x1969 = sc[17] * x1969 * x2363 - 2.254e+28 * x185 * x1969 * x1979 * x2349 +
          3.2672128617363303e+51 * x1967 * x2344 -
          3.2672128617363303e+51 * x1967 * x2367 + 4.508e+28 * x1979 * x2349 -
          4.508e+28 * x1979 * x2622 + x2168;
  const amrex::Real x9979 = x1899 * x511 + x1899 * x521 + x1899 * x738 -
                            x1899 * x742 + x1899 * x758 - x1899 * x771 -
                            x1903 * x574 + x1903 * x756;
  const amrex::Real x9981 = x1899 * x543 - x1899 * x753 - x1899 * x774 +
                            x1899 * x790 + x1899 * x792 - x1899 * x803 +
                            x1903 * x745 - x1903 * x765;
  const amrex::Real x9983 = x116 * x1899 - x1899 * x741 + x1899 * x763 -
                            x1899 * x791 + x1899 * x821 - x1899 * x841 -
                            x1903 * x797 + x1903 * x800;
  const amrex::Real x9986 = -x1899 * x468 + x1899 * x669 + x1899 * x793 -
                            x1899 * x796 - x1899 * x811 + x1899 * x823 -
                            x1903 * x813 + x1903 * x839;
  const amrex::Real x9988 = x1899 * x799 - x1899 * x812 + x1899 * x826 +
                            x1899 * x827 + x1899 * x869 - x1899 * x896 +
                            x1903 * x833 - x1903 * x840;
  const amrex::Real x9992 = x1899 * x834 - x1899 * x835 + x1899 * x838 +
                            x1899 * x859 + x1899 * x885 - x1899 * x936 -
                            x1903 * x865 + x1903 * x868;
  const amrex::Real x9994 = -x1899 * x546 - x1899 * x831 + x1899 * x836 +
                            x1899 * x870 - x1899 * x877 + x1899 * x926 -
                            x1903 * x863 + x1903 * x893;
  const amrex::Real x9996 = -x1004 * x1899 + x1899 * x498 + x1899 * x700 -
                            x1899 * x864 + x1899 * x899 + x1899 * x924 +
                            x1903 * x889 - x1903 * x894;
  const amrex::Real x9998 = x1963 + x293 * x4995 + x5778;
  const amrex::Real x9999 = x1000 * x1899 - x1026 * x1899 - x1899 * x861 +
                            x1899 * x866 + x1899 * x925 + x1899 * x938 -
                            x1903 * x932 + x1903 * x934;
  const amrex::Real x10002 =
    kf_qss[278] * sc[14] * x1898 * x704 + x1014 * x1899 - x1046 * x1899 +
    2570000.0 * x115 * exp(-12781.7033114399 * invT) + x120 * x1898 +
    x1898 * x41 + x1898 * x85 + x1899 * x887 - x1899 * x890 + x1899 * x966 -
    x1903 * x929 + x1903 * x974;
  const amrex::Real x10007 = -sc[28] * x8055;
  const amrex::Real x10010 =
    -1000000.0 * sc[45] * exp(-9057.8999844849495 * invT) -
    2000000.0 * sc[45] * exp(-8454.03998551929 * invT) + x1060 * x1899 +
    x1061 * x1903 + x1062 * x1899 - x1899 * x39;
  const amrex::Real x10027 = x1002 * x1899 - x1899 * x564 + x1899 * x587 +
                             x1899 * x612 + x1899 * x928 - x1899 * x930 -
                             x1903 * x682 + x1903 * x999;
  const amrex::Real x10030 =
    -1000000.0 * sc[17] * exp(-9057.8999844849495 * invT) -
    2000000.0 * sc[17] * exp(-8454.03998551929 * invT) - x1003 * x1903 -
    x1899 * x482 - x1899 * x524 + x1899 * x7 + x1899 * x712 - x1899 * x927 +
    x1899 * x933 + x1903 * x970;
  const amrex::Real x10036 = x2723 + x3875 + x4222 + x6748 + x7924 + x8510;
  const amrex::Real x10037 = x290 * x4983 - x293 * x4983;
  const amrex::Real x10038 = x10036 + x290 * x4983;
  const amrex::Real x10039 = 100000.0 * exp(-5837.3133233347498 * invT);
  const amrex::Real x10042 = x10036 + x10037;
  const amrex::Real x10045 =
    1.226e+18 * exp(-21864.764129215098 * invT - 1.4 * tc[0]);
  const amrex::Real x10047 =
    25190000.0 * exp(-4524.4210422502301 * invT - 0.51 * tc[0]);
  const amrex::Real x10048 = sc[32] * x10047;
  const amrex::Real x10057 = x2145 + x2640 + x5009 + x8618;
  const amrex::Real x10058 =
    x493 * x52 - x52 * x644 + x52 * x683 + x52 * x789 +
    100000.0 * x77 * x80 * exp(528.37749909495597 * invT) +
    100000.0 * x616 * exp(528.37749909495597 * invT) / x34;
  const amrex::Real x10062 = x10048 * x408;
  const amrex::Real x10072 = -x2152 * x411 - x8713;
  const amrex::Real x10074 = -x10048 * x411;
  const amrex::Real x10079 = x10062 + x10074 + x4218 + x4328 + x5270 + x5406 +
                             x6556 + x6761 + x7927 + x7986;
  const amrex::Real x10082 = x10072 + x10079 + x2980 + x8735;
  const amrex::Real x10095 = -20000000.0 * sc[8] * x290;
  const amrex::Real x10106 =
    20000000.0 * sc[8] * x293 + x10072 + x10079 + x10095 + x2980 + x8735;
  const amrex::Real x10112 =
    20000000.0 * sc[8] * x293 + x10062 + x10095 + x2980 + x8735;
  const amrex::Real x10125 = sc[0] * sc[38] * x2092 - sc[21] * x2095;
  const amrex::Real x10126 = exp(-16953.369470960999 * invT - 1.29 * tc[0]);
  const amrex::Real x10129 = exp(-3874.76832669634 * invT);
  const amrex::Real x10134 =
    26440000000000.0 * exp(-21205.550297010901 * invT - 2.71 * tc[0]);
  const amrex::Real x10140 = 100000.0 * sc[22] * x9892;
  const amrex::Real x10141 = 10000000.0 * exp(-14090.0666425322 * invT);
  const amrex::Real x10142 = sc[22] * x10141;
  const amrex::Real x10177 = 10000.0 * sc[23] * exp(-25160.833290236002 * invT);
  const amrex::Real x10179 = 10000.0 * sc[22] * exp(-25160.833290236002 * invT);
  const amrex::Real x10187 = 79000.0 * sc[37] * exp(-6239.8866559785201 * invT);
  const amrex::Real x10198 = 20000.0 * sc[37] * exp(-7548.2499870707998 * invT);
  const amrex::Real x10200 = 79000.0 * sc[26] * exp(-6239.8866559785201 * invT);
  const amrex::Real x10201 = 20000.0 * sc[32] * exp(-7548.2499870707998 * invT);
  const amrex::Real x10204 = exp(-23510.2826263965 * invT);
  const amrex::Real x10209 =
    1.363e+62 * exp(-16334.4129720212 * invT - 16.11 * tc[0]);
  const amrex::Real x10210 = sc[24] * x10209;
  const amrex::Real x10294 = sc[26] * x10141;
  const amrex::Real x10341 = -kf_qss[152] * sc[26] * x10141 * x610 -
                             sc[26] * x10141 * x759 - x10141 * x131;
  const amrex::Real x10352 = x3977 * x408 + x408 * x6360;
  const amrex::Real x10353 = -x411 * x6360 - x4334;
  const amrex::Real x10354 = x10352 + x10353;
  const amrex::Real x10360 =
    23580000.0 * exp(-4520.3953089238003 * invT - 0.51 * tc[0]);
  const amrex::Real x10361 = sc[32] * x10360;
  const amrex::Real x10398 = -18100000.0 * sc[15] * x290;
  const amrex::Real x10399 = 18100000.0 * sc[15] * x293 + x10398;
  const amrex::Real x10421 =
    -sc[0] * x136 - sc[10] * x8784 - sc[2] * x4132 - sc[4] * x6633;
  const amrex::Real x10436 = 25000.0 * sc[32] * x8570;
  const amrex::Real x10439 = -sc[31] * x5003 + sc[3] * x5001;
  const amrex::Real x10448 = x1935 * x519 - x1935 * x528 - x1935 * x536 +
                             x1935 * x544 + x1935 * x557 - x1935 * x604 -
                             x1940 * x579 + x1940 * x602;
  const amrex::Real x10459 = x1935 * x511 + x1935 * x521 + x1935 * x738 -
                             x1935 * x742 + x1935 * x758 - x1935 * x771 -
                             x1940 * x574 + x1940 * x756;
  const amrex::Real x10470 = x1935 * x543 - x1935 * x753 - x1935 * x774 +
                             x1935 * x790 + x1935 * x792 - x1935 * x803 +
                             x1940 * x745 - x1940 * x765;
  const amrex::Real x10473 = x10062 + x10439;
  const amrex::Real x10482 = x116 * x1935 - x1935 * x741 + x1935 * x763 -
                             x1935 * x791 + x1935 * x821 - x1935 * x841 -
                             x1940 * x797 + x1940 * x800;
  const amrex::Real x10494 = -x1935 * x468 + x1935 * x669 + x1935 * x793 -
                             x1935 * x796 - x1935 * x811 + x1935 * x823 -
                             x1940 * x813 + x1940 * x839;
  const amrex::Real x10506 = x1935 * x799 - x1935 * x812 + x1935 * x826 +
                             x1935 * x827 + x1935 * x869 - x1935 * x896 +
                             x1940 * x833 - x1940 * x840;
  const amrex::Real x10527 = x1935 * x834 - x1935 * x835 + x1935 * x838 +
                             x1935 * x859 + x1935 * x885 - x1935 * x936 -
                             x1940 * x865 + x1940 * x868;
  const amrex::Real x10539 = -x1935 * x546 - x1935 * x831 + x1935 * x836 +
                             x1935 * x870 - x1935 * x877 + x1935 * x926 -
                             x1940 * x863 + x1940 * x893;
  const amrex::Real x10550 = -x1004 * x1935 + x1935 * x498 + x1935 * x700 -
                             x1935 * x864 + x1935 * x899 + x1935 * x924 +
                             x1940 * x889 - x1940 * x894;
  const amrex::Real x10559 = x1000 * x1935 - x1026 * x1935 - x1935 * x861 +
                             x1935 * x866 + x1935 * x925 + x1935 * x938 -
                             x1940 * x932 + x1940 * x934;
  const amrex::Real x10560 = x10074 + x10473 - x9244;
  const amrex::Real x10569 = x1014 * x1935 - x1046 * x1935 + x1935 * x887 -
                             x1935 * x890 + x1935 * x963 + x1935 * x966 -
                             x1940 * x929 + x1940 * x974;
  const amrex::Real x10581 = x10074 + x10473 + x9247;
  const amrex::Real x10607 = 1000000.0 * exp(-4780.5583251448397 * invT);
  const amrex::Real x10621 =
    -20160000.0 * sc[45] * x8794 -
    12100000.0 * sc[45] * exp(-10280.7164823904 * invT) + x1100 * x1935 +
    x1935 * x726 - x1935 * x968 + x1940 * x707;
  const amrex::Real x10622 =
    86450000.0 * exp(-7004.7759880017002 * invT - 0.53 * tc[0]);
  const amrex::Real x10640 = kf_qss[286] * sc[32] * x1934 * x704 +
                             x1002 * x1935 + 3600000.0 * x115 * x1938 +
                             x120 * x1934 + x1934 * x41 + x1934 * x85 -
                             x1935 * x564 + x1935 * x612 + x1935 * x928 -
                             x1935 * x930 - x1940 * x682 + x1940 * x999;
  const amrex::Real x10657 =
    -20160000.0 * sc[31] * x8794 -
    12100000.0 * sc[31] * exp(-10280.7164823904 * invT) - x1003 * x1940 -
    x1935 * x482 - x1935 * x524 + x1935 * x7 + x1935 * x712 - x1935 * x927 +
    x1935 * x933 + x1940 * x970;
  const amrex::Real x10682 = -x349 * x6334;
  const amrex::Real x10686 = -x10062 + x10682 + x6422;
  const amrex::Real x10690 = x10048 * x411 + x10686 + x9244;
  const amrex::Real x10692 = x10690 - x293 * x9182;
  const amrex::Real x10702 =
    3231000000.0 * exp(-3960.8183765489498 * invT - 0.14 * tc[0]);
  const amrex::Real x10706 = x2098 - x290 * x4983;
  const amrex::Real x10707 = x10706 + x293 * x4983;
  const amrex::Real x10709 =
    2653000000.0 * exp(-4146.5053262308902 * invT - 0.11 * tc[0]);
  const amrex::Real x10711 =
    2827000000.0 * exp(-4161.6018262050302 * invT - 0.11 * tc[0]);
  const amrex::Real x10714 =
    38840000000.0 * exp(-4065.99065970213 * invT - 0.51 * tc[0]);
  const amrex::Real x10717 =
    5655000000.0 * exp(-4161.6018262050302 * invT - 0.11 * tc[0]);
  // Write the full Jacobian expression...
  J[0] =
    kf_qss[101] * sc[0] * x139 * x444 - 73400000.0 * sc[0] * x190 +
    73400000.0 * sc[0] * x233 + 20000000.0 * sc[0] * x383 -
    20000000.0 * sc[0] * x402 - sc[10] * x2262 - 70800000.0 * sc[10] * x2264 -
    sc[11] * x2146 - sc[11] * x2148 - sc[13] * x1985 - 72200000.0 * sc[15] -
    sc[16] * x185 * x1981 - 20000000.0 * sc[17] * x2108 + sc[18] * x139 * x458 -
    70000000.0 * sc[1] * x1325 - sc[21] * x659 - sc[21] * x670 - sc[21] * x91 -
    sc[22] * x2106 - 10000000.0 * sc[22] * x2108 - sc[22] * x2111 -
    sc[23] * x122 - sc[23] * x200 - 81600000.0 * sc[25] - sc[28] * x136 -
    60000000.0 * sc[2] * x1325 - 28000000.0 * sc[30] / x539 - sc[37] * x2088 -
    18100000.0 * sc[37] - sc[38] * x186 * x2092 - 50000000.0 * sc[38] -
    sc[3] * x2267 - sc[40] * x136 - sc[43] * x136 - sc[4] * x2292 -
    sc[5] * x1989 - sc[8] * x185 * x2255 - sc[8] * x2258 - sc[9] * x1993 +
    x1006 * x579 - x1006 * x602 - x1011 * x536 + x1011 * x544 + x1016 * x519 -
    x1016 * x528 - 20000000.0 * x1019 * x77 * x80 -
    20000000.0 * x1019 * x616 / x34 - x1023 * x466 + x1023 * x476 +
    x1023 * x505 - x1023 * x92 - x115 * x615 - 5.207e+74 * x120 * x958 -
    9692.0 * x124 * exp(1529.7786640463501 * invT - 0.4 * tc[0]) -
    x1363 * x2083 + x139 * x401 / x443 - x186 * x197 * x400 - x186 * x2178 -
    x190 * x2010 - 35000.0 * x196 * x2284 - x196 * x2289 - 73400000.0 * x197 -
    x2001 + x2010 * x233 + x2081 + x2098 + x2105 + x2119 + x2133 -
    x2136 * x606 + x2145 + x2158 + x2208 + x2218 + x2238 + x2308 + x2327 -
    x242 * x875 + x2471 + x346 + 20000000.0 * x370 - 5.187e+74 * x41 * x958 -
    x519 * x964 + x528 * x964 + x536 * x641 - x536 * x956 - x544 * x641 +
    x544 * x956 - x557 * x641 + x557 * x956 + x604 * x641 - x604 * x956 + x646 -
    5.207e+74 * x85 * x958 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x190 - x233) +
    (x1023 * x37) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x681 + x734) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[56] =
    -kf_qss[176] * sc[1] * x1374 * x2082 -
    70000000.0 * kf_qss[194] * sc[1] * x1333 -
    kf_qss[70] * sc[1] * x2135 * x610 + 73400000.0 * sc[0] * x248 -
    73400000.0 * sc[0] * x251 + 20000000.0 * sc[0] * x403 -
    20000000.0 * sc[0] * x404 + sc[10] * x2494 + sc[15] * x2489 +
    sc[16] * x2496 + sc[17] * x609 + sc[18] * x2507 + sc[21] * x2478 +
    sc[25] * x2544 + 1000000.0 * sc[29] * x2474 - 60000000.0 * sc[2] * x1334 -
    30000000.0 * sc[2] * x248 + 30000000.0 * sc[2] * x251 + sc[2] * x2598 +
    sc[33] * x2518 + sc[37] * x2485 + sc[38] * x2483 -
    70000000.0 * sc[3] * x1334 + 50000000.0 * sc[3] * x1491 + sc[3] * x2504 +
    sc[44] * x2082 - 30000000.0 * sc[4] * x1334 + sc[4] * x2491 +
    481300000.0 * sc[6] * exp(-45289.499922424802 * invT) -
    20000000.0 * sc[8] * x1334 + sc[8] * x2498 + x1006 * x574 - x1006 * x756 +
    x1011 * x511 - x1011 * x742 + x1016 * x521 + x1016 * x738 - x131 * x2135 -
    70000000.0 * x1332 - x1334 * x2079 - x1360 * x2082 + x1373 * x874 +
    x1491 * x875 +
    91400000000000.0 * x196 * exp(-52535.819910012702 * invT - 1.4 * tc[0]) +
    x197 * x2224 + x2010 * x248 - x2010 * x251 + x2098 + x2115 * x770 -
    x2115 * x772 + x2145 - x2151 * x370 - x2152 * x403 + x2152 * x404 -
    x2217 * x248 + x2217 * x251 - x2225 * x248 + x2225 * x251 -
    161.675 * x2233 + x2327 + 465000000000.0 * x2334 +
    228500000000000.0 * x2338 - 12115.0 * x2340 - 11800000.0 * x2401 +
    4.5925e+21 * x2436 + x2481 + x2488 + 9.7725e+16 * x2559 + x2585 + x2594 -
    56250000000.0 * x2595 + x2613 + x2625 + x2636 + x2638 + x2640 -
    x511 * x641 + x511 * x956 - x521 * x964 + x641 * x742 - x641 * x758 +
    x641 * x771 - x738 * x964 - x742 * x956 + x758 * x956 - x771 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x248 + x251) +
    (x1023 * x37) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x770 - x772) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[112] =
    -60000000.0 * kf_qss[196] * sc[2] * x1333 + 73400000.0 * sc[0] * x253 -
    73400000.0 * sc[0] * x254 + 20000000.0 * sc[0] * x405 -
    20000000.0 * sc[0] * x406 + 3.39 * sc[14] * x2657 + 50000000.0 * sc[15] +
    sc[16] * x2679 + 80000000.0 * sc[19] - 70000000.0 * sc[1] * x1335 +
    sc[1] * x2598 + sc[22] * x2686 - 30000000.0 * sc[2] * x253 +
    30000000.0 * sc[2] * x254 - 70000000.0 * sc[3] * x1335 -
    20000000.0 * sc[8] * x1335 - x1006 * x745 + x1006 * x765 + x1011 * x543 -
    x1011 * x753 - x1016 * x774 + x1016 * x790 - x1023 * x493 + x1023 * x644 -
    x1023 * x683 - x1023 * x789 - 4720000.0 * x124 * exp(-tc[0]) -
    60000000.0 * x1332 - x1335 * x2079 - x1376 * x2083 + 30000000.0 * x197 +
    x2010 * x253 - x2010 * x254 + x2098 + x2115 * x801 - x2115 * x804 -
    x2124 * x449 - x2124 * x451 - x2136 * x640 + x2145 - x2152 * x405 +
    x2152 * x406 - x2217 * x253 + x2217 * x254 - x2237 * x349 + x2327 + x2471 +
    x2640 + x2652 + x2663 * x449 + x2663 * x451 + x2701 + x2710 + x292 -
    x543 * x641 + x543 * x956 + x641 * x753 - x641 * x792 + x641 * x803 -
    x753 * x956 + x774 * x964 - x790 * x964 + x792 * x956 - x803 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x253 + x254) +
    (x1023 * x37) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x801 - x804) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[168] =
    -kf_qss[122] * x1276 * x234 - kf_qss[165] * x2124 * x444 +
    kf_qss[165] * x2663 * x444 - sc[0] * x2267 + 73400000.0 * sc[0] * x256 -
    73400000.0 * sc[0] * x258 + 20000000.0 * sc[0] * x407 -
    70000000.0 * sc[1] * x1336 + sc[1] * x2504 - 60000000.0 * sc[2] * x1336 -
    30000000.0 * sc[2] * x256 + 30000000.0 * sc[2] * x258 +
    50000000.0 * sc[3] * x1492 - 20000000.0 * sc[8] * x1336 + x1006 * x797 -
    x1006 * x800 - x1011 * x741 + x1011 * x763 + x1016 * x116 - x1016 * x791 -
    x1023 * x785 - x1023 * x809 - x116 * x964 -
    35000.0 * x124 * x2282 * exp(x2270) - x1336 * x2079 - x1377 * x2083 +
    x1492 * x875 + x2010 * x256 - x2010 * x258 + x2098 + x2115 * x817 -
    x2115 * x842 - x2124 * x453 - x2136 * x645 + x2140 + x2143 + x2144 * x508 -
    x2152 * x407 + x2152 * x408 + x2327 + x2471 + x2640 + x2663 * x453 - x2723 +
    x2746 + x2759 + x2763 + x2772 + x641 * x741 - x641 * x763 - x641 * x821 +
    x641 * x841 - x741 * x956 + x763 * x956 + x791 * x964 + x821 * x956 -
    x841 * x956 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x256 + x258) +
    (x1023 * x37) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x817 - x842) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[224] =
    -kf_qss[125] * x1276 * x234 -
    20000000.0 * kf_qss[127] * ((sc[8]) * (sc[8])) / x1323 - sc[0] * x2292 +
    73400000.0 * sc[0] * x260 - 73400000.0 * sc[0] * x263 +
    20000000.0 * sc[0] * x409 - 20000000.0 * sc[0] * x410 + sc[16] * x2780 -
    70000000.0 * sc[1] * x1337 - 70000000.0 * sc[1] * x1339 + sc[1] * x2491 -
    60000000.0 * sc[2] * x1337 - 60000000.0 * sc[2] * x1339 -
    30000000.0 * sc[2] * x260 + 30000000.0 * sc[2] * x263 +
    50000000.0 * sc[3] * x1493 + sc[6] * x2810 - 20000000.0 * sc[8] * x1337 +
    x1006 * x813 - x1006 * x839 + x1011 * x793 - x1011 * x796 - x1016 * x811 +
    x1016 * x823 - x1023 * x68 + x1023 * x807 - x1023 * x820 - x1023 * x837 -
    22500000000.0 * x124 * exp(-2.0 * tc[0]) - x1337 * x2079 - x1339 * x2079 -
    x1378 * x2083 - x1379 * x2083 + x1493 * x875 + 3.909e+16 * x196 * x2398 +
    x2010 * x260 - x2010 * x263 + x2098 + x2115 * x829 - x2115 * x872 -
    x2136 * x647 - x2136 * x658 + x2140 + x2143 + x2144 * x531 - x2152 * x409 +
    x2152 * x410 - x2237 * x349 + x2327 + x2471 + x2640 + x2783 +
    270400000.0 * x2786 + x2788 + x2835 + x2840 + x2852 + x292 + x468 * x641 -
    x468 * x956 - x641 * x669 - x641 * x793 + x641 * x796 + x669 * x956 +
    x793 * x956 - x796 * x956 + x811 * x964 - x823 * x964 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x260 + x263) +
    (x1023 * x37) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x829 - x872) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[280] =
    -sc[0] * x1989 + 73400000.0 * sc[0] * x265 - 73400000.0 * sc[0] * x267 -
    20000000.0 * sc[0] * x413 - 60000000.0 * sc[2] * x1340 -
    30000000.0 * sc[2] * x265 + 30000000.0 * sc[2] * x267 -
    70000000.0 * sc[3] * x1340 + 50000000.0 * sc[3] * x245 -
    30000000.0 * sc[4] * x1340 - x1006 * x833 + x1006 * x840 + x1011 * x799 -
    x1011 * x812 + x1016 * x826 + x1016 * x827 - x1340 * x2079 - x1380 * x2083 +
    1.837e+21 * x196 * x2435 + x2010 * x265 - x2010 * x267 + x2098 +
    x2115 * x895 - x2115 * x897 - x2136 * x672 + x2145 + x2152 * x413 -
    x2217 * x265 + x2217 * x267 - x2225 * x265 + x2225 * x267 - 776.04 * x2233 +
    2232000000000.0 * x2334 + 1096800000000000.0 * x2338 - 58152.0 * x2340 -
    56640000.0 * x2401 + 2.2044e+22 * x2436 + x245 * x875 + 4.6908e+17 * x2559 -
    270000000000.0 * x2595 + x2638 + x2640 + x2861 + x2896 + x2908 + x2929 +
    x2938 + x2943 + x2952 - x641 * x799 + x641 * x812 - x641 * x869 +
    x641 * x896 + x799 * x956 - x812 * x956 - x826 * x964 - x827 * x964 +
    x869 * x956 - x896 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x265 + x267) +
    (x1023 * x37) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x895 - x897) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[336] =
    73400000.0 * sc[0] * x269 - 73400000.0 * sc[0] * x270 +
    20000000.0 * sc[0] * x416 - 70000000.0 * sc[1] * x1341 -
    70000000.0 * sc[1] * x1342 +
    481300000.0 * sc[1] * exp(-45289.499922424802 * invT) -
    60000000.0 * sc[2] * x1341 - 60000000.0 * sc[2] * x1342 -
    30000000.0 * sc[2] * x269 + 30000000.0 * sc[2] * x270 -
    70000000.0 * sc[3] * x1341 - 70000000.0 * sc[3] * x1342 + sc[4] * x2810 -
    20000000.0 * sc[8] * x1341 - 20000000.0 * sc[8] * x1342 + sc[8] * x2959 -
    x1382 * x2083 + x2010 * x269 - x2010 * x270 + x2115 * x909 + x2115 * x913 -
    x2136 * x680 - x2152 * x416 + 173660000000000.0 * x2338 - 9207.4 * x2340 -
    8968000.0 * x2401 + 3.4903e+21 * x2436 + 7.4271e+16 * x2559 + x2585 -
    42750000000.0 * x2595 + x2625 + x2636 + x2638 + x2974 + x2980 + x2995 +
    x3000 + x3012 + x3013 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x269 + x270) +
    (x1023 * x37) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x909 + x913) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (0 + (-x141) * (x909 + x913)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[392] = -73400000.0 * sc[0] * x188 + 73400000.0 * sc[0] * x272 -
           60000000.0 * sc[2] * x1343 - 70000000.0 * sc[3] * x1343 -
           30000000.0 * sc[4] * x1343 - x1343 * x2079 - x188 * x2010 +
           x188 * x2217 + x188 * x2225 + x1974 + x2010 * x272 - x2217 * x272 -
           x2225 * x272 - 245.746 * x2233 + x2247 + 706800000000.0 * x2334 +
           347320000000000.0 * x2338 - 18414.8 * x2340 + x2360 -
           17936000.0 * x2401 + 6.9806e+21 * x2436 + x2442 +
           1.48542e+17 * x2559 - 85500000000.0 * x2595 + x2638 + x3043 + x3054 +
           (-50000000.0 * sc[3] * x5 - x5 * x875) * (x188 - x272);
  J[448] =
    -20000000.0 * kf_qss[201] * sc[8] * x1333 - 10.0e-13 * sc[0] * sc[18] -
    73400000.0 * sc[0] * x274 + 73400000.0 * sc[0] * x275 +
    20000000.0 * sc[0] * x375 - 20000000.0 * sc[0] * x419 + sc[14] * x3078 +
    sc[16] * x3074 + sc[1] * x2498 - 60000000.0 * sc[2] * x1344 -
    60000000.0 * sc[2] * x1345 + 30000000.0 * sc[2] * x274 -
    30000000.0 * sc[2] * x275 - 70000000.0 * sc[3] * x1344 -
    70000000.0 * sc[3] * x1345 + sc[6] * x2959 - 20000000.0 * sc[8] * x1345 -
    x1006 * x919 + x1011 * x915 - x1016 * x844 - x1028 * x844 + x1035 * x919 -
    20000000.0 * x1332 - x1344 * x2079 - x1345 * x2079 - x1383 * x2083 -
    x2010 * x274 + x2010 * x275 + x2098 - x2115 * x922 - x2136 * x689 -
    x2136 * x693 - x2144 * x572 + x2145 - x2152 * x375 + x2152 * x419 +
    x2217 * x274 - x2217 * x275 + x2327 + x2471 + 108920000000.0 * x3081 +
    x3127 + x3133 + x346 - x641 * x915 - x641 * x920 + x844 * x964 +
    x915 * x950 + x915 * x956 + x920 * x950 + x920 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x274 - x275) +
    (x1023 * x37) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x922) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x920 + (-x141) * (-x922)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[504] =
    refC * x185 * x2460 - sc[0] * x1993 + 73400000.0 * sc[0] * x278 -
    73400000.0 * sc[0] * x279 + 20000000.0 * sc[0] * x420 -
    20000000.0 * sc[0] * x421 - 70000000.0 * sc[1] * x1346 -
    60000000.0 * sc[2] * x1346 - 30000000.0 * sc[2] * x278 +
    30000000.0 * sc[2] * x279 - 70000000.0 * sc[3] * x1346 -
    30000000.0 * sc[4] * x1346 - 20000000.0 * sc[8] * x1346 + x1006 * x865 -
    x1006 * x868 + x1011 * x834 - x1011 * x835 + x1016 * x838 + x1016 * x859 -
    x1346 * x2079 - x1384 * x2083 + x2010 * x278 - x2010 * x279 + x2098 +
    x2115 * x935 - x2115 * x937 + x2136 * x628 + x2145 - x2152 * x420 +
    x2152 * x421 - x2217 * x278 + x2217 * x279 - x2225 * x278 + x2225 * x279 +
    x2327 + x2471 + x2638 + x2640 + x3180 - x641 * x834 + x641 * x835 -
    x641 * x885 + x641 * x936 + x834 * x956 - x835 * x956 - x838 * x964 -
    x859 * x964 + x885 * x956 - x936 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x278 + x279) +
    (x1023 * x37) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x935 - x937) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[560] =
    -sc[0] * x2262 - 70800000.0 * sc[0] * x2264 + 73400000.0 * sc[0] * x281 -
    73400000.0 * sc[0] * x282 + 20000000.0 * sc[0] * x422 -
    20000000.0 * sc[0] * x423 + sc[1] * x2494 - 30000000.0 * sc[2] * x281 +
    30000000.0 * sc[2] * x282 + x1006 * x863 - x1006 * x893 - x1011 * x831 +
    x1011 * x836 + x1016 * x870 - x1016 * x877 - x1023 * x21 + x1023 * x470 -
    x1023 * x79 + x1023 * x86 - x1279 * x234 - x1385 * x2083 - x1386 * x2083 +
    x2010 * x281 - x2010 * x282 + x2098 + x2115 * x465 - x2115 * x977 -
    x2136 * x657 - x2136 * x706 - x2144 * x97 + x2145 - x2152 * x422 +
    x2152 * x423 - x2217 * x281 + x2217 * x282 - x2225 * x281 + x2225 * x282 -
    x2237 * x357 + x2327 + 35000.0 * x2411 * x2413 + x2471 + x3221 + x346 +
    x546 * x641 - x546 * x956 + x641 * x831 - x641 * x836 - x641 * x926 -
    x831 * x956 + x836 * x956 - x870 * x964 + x877 * x964 + x926 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x281 + x282) +
    (x1023 * x37) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x465 - x977) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[616] =
    -sc[0] * x2146 - sc[0] * x2148 + 73400000.0 * sc[0] * x284 -
    73400000.0 * sc[0] * x286 - 20000000.0 * sc[0] * x424 -
    30000000.0 * sc[2] * x284 + 30000000.0 * sc[2] * x286 + x1001 * x2115 +
    x1004 * x641 - x1004 * x956 - x1005 * x2115 - x1006 * x889 + x1006 * x894 +
    x1011 * x498 - x1011 * x864 + x1016 * x899 + x1016 * x924 - x1387 * x2083 +
    x2010 * x284 - x2010 * x286 + x2098 - x2136 * x717 + x2145 + x2152 * x424 -
    x2217 * x284 + x2217 * x286 - x2225 * x284 + x2225 * x286 + x2471 + x2638 +
    x2640 + x2943 + x3261 - x498 * x641 + x498 * x956 - x641 * x700 +
    x641 * x864 + x700 * x956 - x864 * x956 - x899 * x964 - x924 * x964 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x284 + x286) +
    (x1023 * x37) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1001 - x1005) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[672] = 73400000.0 * sc[0] * x288 - 73400000.0 * sc[0] * x289 +
           20000000.0 * sc[0] * x411 - 70000000.0 * sc[1] * x1347 -
           60000000.0 * sc[2] * x1347 - 30000000.0 * sc[2] * x288 +
           30000000.0 * sc[2] * x289 - 70000000.0 * sc[3] * x1347 -
           20000000.0 * sc[8] * x1347 - x1280 * x234 - x1347 * x2079 +
           x186 * x2309 + x2010 * x288 - x2010 * x289 - x2124 * x454 -
           x2144 * x485 + x2145 + x2152 * x408 - x2152 * x411 - x2217 * x288 +
           x2217 * x289 + x2235 + x2471 + x2663 * x454 + x3013 + x346 +
           (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x288 + x289);
  J[728] =
    -sc[0] * x1985 - 20000000.0 * sc[0] * x425 - 70000000.0 * sc[1] * x1348 -
    60000000.0 * sc[2] * x1348 - 70000000.0 * sc[3] * x1348 -
    30000000.0 * sc[4] * x1348 - 20000000.0 * sc[8] * x1348 - x1000 * x641 +
    x1000 * x956 + x1006 * x932 - x1006 * x934 - x1011 * x861 + x1011 * x866 +
    x1016 * x925 + x1016 * x938 + x1026 * x641 - x1026 * x956 - x1027 * x2115 -
    x1348 * x2079 + x2098 + x2115 * x553 - x2136 * x724 + x2145 + x2152 * x425 +
    x2640 + x2943 + x3302 + x3318 + x3329 + x3338 + x641 * x861 - x641 * x866 -
    x861 * x956 + x866 * x956 - x925 * x964 - x938 * x964 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x1027 + x553) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[784] =
    -73400000.0 * sc[0] * x295 + 500000.0 * sc[17] * x3341 -
    70000000.0 * sc[1] * x1349 - 60000000.0 * sc[2] * x1349 +
    3.39 * sc[2] * x2657 + 30000000.0 * sc[2] * x295 -
    70000000.0 * sc[3] * x1349 - 30000000.0 * sc[4] * x1349 + sc[8] * x3078 +
    x1006 * x929 - x1006 * x974 + x1011 * x887 - x1011 * x890 - x1014 * x641 +
    x1014 * x956 + x1016 * x963 + x1016 * x966 + x1039 * x2115 + x1046 * x641 -
    x1046 * x956 - x1047 * x2115 - x1349 * x2079 + x186 * x2315 - x2010 * x295 -
    x2124 * x455 - x2136 * x725 + x2217 * x295 + x2225 * x295 + x2442 +
    x2663 * x455 + x3318 + x3322 + x3327 + x3378 + x3390 - x641 * x887 +
    x641 * x890 + x887 * x956 - x890 * x956 - x963 * x964 - x964 * x966 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x295) +
    (x1023 * x37) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1039 - x1047) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[840] =
    -20000000.0 * kf_qss[192] * ((sc[8]) * (sc[8])) / x1323 +
    73400000.0 * sc[0] * x297 - 73400000.0 * sc[0] * x298 -
    20000000.0 * sc[0] * x426 - 72200000.0 * sc[0] -
    70000000.0 * sc[1] * x1350 + sc[1] * x2489 - 60000000.0 * sc[2] * x1350 -
    30000000.0 * sc[2] * x297 + 30000000.0 * sc[2] * x298 + 50000000.0 * sc[2] -
    70000000.0 * sc[3] * x1350 - 30000000.0 * sc[4] * x1350 - x1006 * x1056 +
    x1011 * x1055 - x1016 * x1041 - x1028 * x1041 + x1035 * x1056 +
    x1041 * x964 - x1055 * x641 + x1055 * x950 + x1055 * x956 - x1057 * x641 +
    x1057 * x950 + x1057 * x956 + x1058 * x2115 - x1264 * x2144 -
    x1350 * x2079 + x2010 * x297 - x2010 * x298 + x2098 - x2136 * x727 + x2145 +
    x2152 * x426 - x2217 * x297 + x2217 * x298 - x2225 * x297 + x2225 * x298 +
    x2471 + x2638 + x2943 + x3416 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x297 + x298) +
    (x1023 * x37) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1058) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1057 + (-x141) * (x1058)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[896] = -sc[0] * x185 * x1981 + 73400000.0 * sc[0] * x228 -
           73400000.0 * sc[0] * x231 + sc[1] * x2496 -
           30000000.0 * sc[2] * x228 + 30000000.0 * sc[2] * x231 +
           sc[2] * x2679 - 50000000.0 * sc[3] * x249 + sc[4] * x2780 +
           sc[8] * x3074 + x2010 * x228 - x2010 * x231 + x2098 - x2217 * x228 +
           x2217 * x231 - x2225 * x228 + x2225 * x231 + x2471 - x249 * x875 +
           x2638 - x2723 + x2943 + x2980 +
           (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x228 + x231);
  J[952] =
    -20000000.0 * sc[0] * x2108 - 73400000.0 * sc[0] * x303 +
    500000.0 * sc[14] * x3341 + sc[1] * x609 + 30000000.0 * sc[2] * x303 -
    x1006 * x1061 + x1011 * x1060 - x1016 * x39 - x1028 * x39 + x1035 * x1061 -
    x1060 * x641 + x1060 * x950 + x1060 * x956 - x1062 * x641 + x1062 * x950 +
    x1062 * x956 - x1063 * x2115 - x1282 * x234 - x2010 * x303 - x2124 * x457 -
    x2136 * x728 - x2164 + x2217 * x303 + x2225 * x303 + x2363 + x2442 +
    x2663 * x457 + x3318 + x3322 + x3327 + x39 * x964 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x303) +
    (x1023 * x37) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x1063) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1062 + (-x141) * (-x1063)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1008] =
    kf_qss[164] * ((sc[0]) * (sc[0])) * x139 / x443 - 10.0e-13 * sc[0] * sc[8] +
    73400000.0 * sc[0] * x305 - 73400000.0 * sc[0] * x306 +
    20000000.0 * sc[0] * x427 - 70000000.0 * sc[1] * x1351 + sc[1] * x2507 -
    60000000.0 * sc[2] * x1351 - 30000000.0 * sc[2] * x305 +
    30000000.0 * sc[2] * x306 - 70000000.0 * sc[3] * x1351 -
    30000000.0 * sc[4] * x1351 - 20000000.0 * sc[8] * x1351 - x1351 * x2079 +
    x2010 * x305 - x2010 * x306 - x2152 * x427 + x2172 - x2217 * x305 +
    x2217 * x306 - x2225 * x305 + x2225 * x306 + x2471 + x2638 + x2980 + x3013 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x305 + x306);
  J[1064] = -sc[0] * x2071 - 73400000.0 * sc[0] * x307 - 110000000.0 * sc[0] -
            70000000.0 * sc[1] * x1353 - 60000000.0 * sc[2] * x1353 +
            30000000.0 * sc[2] * x307 + 80000000.0 * sc[2] -
            70000000.0 * sc[3] * x1353 - 30000000.0 * sc[4] * x1353 -
            20000000.0 * sc[8] * x1353 - x1353 * x2079 - x2010 * x307 + x2174 +
            x2217 * x307 + x2225 * x307 + x2442 + x3318 + x3322 + x3327 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x307);
  J[1120] = -73400000.0 * sc[0] * x308 + 20000000.0 * sc[0] * x428 +
            30000000.0 * sc[2] * x308 - x2010 * x308 + x2139 + x2217 * x308 +
            x2225 * x308 + x3013 + x3318 + x3322 + x3327 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x308);
  J[1176] = -sc[0] * x659 - sc[0] * x670 - sc[0] * x91 + sc[1] * x2478 +
            x186 * x2095 + x2142 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1232] =
    -sc[0] * x2106 - 10000000.0 * sc[0] * x2108 - sc[0] * x2111 -
    73400000.0 * sc[0] * x309 + sc[2] * x2686 + 30000000.0 * sc[2] * x309 +
    x1033 * x641 - x1033 * x950 - x1033 * x956 - x1067 * x2115 + x1068 * x2115 -
    x2010 * x309 - x2136 * x561 + x2217 * x309 + x2225 * x309 + x2442 + x3318 +
    x3322 + x3327 + x3551 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x309) +
    (x1023 * x37) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x1067 + x1068) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (-x1033 + (-x141) * (-x1067 + x1068)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1288] = -sc[0] * x122 - sc[0] * x200 + x2142 + x3563 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1344] =
    20000000.0 * kf_qss[336] * sc[0] * sc[25] * x1019 * x36 +
    20000000.0 * sc[0] * sc[25] * x1019 * x1071 - x1006 * x1079 +
    x1011 * x1076 + x1016 * x643 + x1028 * x643 + x1035 * x1079 +
    x1070 * x2115 - x1076 * x641 + x1076 * x950 + x1076 * x956 - x1082 * x641 +
    x1082 * x950 + x1082 * x956 - x1388 * x2083 + x2115 * x463 + x2142 + x3567 -
    x643 * x964 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1070 + x463) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1082 + (-x141) * (x1070 + x463)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1400] =
    20000000.0 * kf_qss[336] * sc[0] * sc[24] * x1019 * x36 +
    20000000.0 * sc[0] * sc[24] * x1019 * x1071 - 81600000.0 * sc[0] +
    sc[1] * x2544 - x1006 * x1087 + x1011 * x1086 + x1016 * x684 +
    x1028 * x684 + x1035 * x1087 - x1086 * x641 + x1086 * x950 + x1086 * x956 -
    x1088 * x641 + x1088 * x950 + x1088 * x956 + x1089 * x2115 - x2136 * x751 +
    x2142 - x684 * x964 + 120000000000000.0 * exp(-24808.581624172701 * invT) +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1089) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1088 + (-x141) * (x1089)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1456] =
    -10000000.0 * sc[0] * x1019 + 20000000.0 * sc[0] * x429 - x1006 * x975 -
    x1011 * x891 + x1035 * x975 - x1092 * x641 + x1092 * x950 + x1092 * x956 +
    x1093 * x2115 - x2136 * x755 - x2136 * x759 - x2152 * x429 + x2980 + x3013 +
    x3318 + x3329 + x3600 - x3614 + x641 * x891 - x891 * x950 - x891 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1093) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1092 + (-x141) * (x1093)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1512] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1568] = -sc[0] * x136 - 73400000.0 * sc[0] * x310 +
            30000000.0 * sc[2] * x310 - x2010 * x310 - x2136 * x760 +
            x2217 * x310 + x2225 * x310 + x2442 + x3318 + x3322 + x3327 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x310);
  J[1624] = 1000000.0 * sc[1] * x2474 + x2142 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1680] =
    20000000.0 * sc[0] * x430 - 28000000.0 * sc[0] / x539 - x1006 * x1097 +
    x1011 * x886 - x1016 * x1095 - x1028 * x1095 + x1035 * x1097 +
    x1095 * x964 - x1098 * x641 + x1098 * x950 + x1098 * x956 + x1099 * x2115 -
    x2152 * x430 + x2980 + x3013 + x3318 + x3329 - x641 * x886 + x886 * x950 +
    x886 * x956 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x1099) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x1098 + (-x141) * (x1099)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1736] =
    -73400000.0 * sc[0] * x311 + 20000000.0 * sc[0] * x431 +
    30000000.0 * sc[2] * x311 - x1006 * x707 + x1011 * x1100 - x1016 * x968 -
    x1028 * x968 + x1035 * x707 - x1100 * x641 + x1100 * x950 + x1100 * x956 -
    x1104 * x2115 - x1389 * x2083 - x2010 * x311 - x2136 * x762 - x2152 * x431 +
    x2217 * x311 - x2225 * x290 + x2225 * x311 - x2237 * x361 + x2980 + x3013 +
    x3318 + x3322 + x346 - x641 * x726 + x726 * x950 + x726 * x956 +
    x964 * x968 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (-x290 + x311) +
    (x1023 * x37) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x1104) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x726 + (-x141) * (-x1104)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1792] =
    -73400000.0 * sc[0] * x189 + 73400000.0 * sc[0] * x232 -
    20000000.0 * sc[0] * x367 + 30000000.0 * sc[2] * x189 -
    30000000.0 * sc[2] * x232 + x1002 * x1016 - x1002 * x964 + x1006 * x682 -
    x1006 * x999 + x1011 * x928 - x1011 * x930 + x1016 * x587 - x1390 * x2083 -
    x189 * x2010 + x189 * x2217 + x189 * x2225 + x2010 * x232 + x2098 -
    x2115 * x585 + x2115 * x688 - x2136 * x764 + x2145 + x2152 * x367 -
    x2217 * x232 - x2225 * x232 - x2237 * x338 + x2471 + x2640 + x2943 + x346 +
    x3700 + x564 * x641 - x564 * x956 - x587 * x964 - x612 * x641 +
    x612 * x956 - x641 * x928 + x641 * x930 + x928 * x956 - x930 * x956 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x189 - x232) +
    (x1023 * x37) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x585 + x688) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1848] =
    sc[1] * x2518 + x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1904] = x2142 + x3702 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1960] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2016] =
    -x2115 * x692 + x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (0 + (-x113) * (0 + (-x141) * (-x692)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (0 + (x182) * (0 + (-x141) * (-x692)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x692) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (0 + (-x141) * (-x692)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2072] = -sc[0] * x2088 - 18100000.0 * sc[0] + sc[1] * x2485 - x1284 * x234 -
            x2124 * x459 - x2136 * x767 + x2142 + x2663 * x459 + x3706 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2128] = -73400000.0 * sc[0] * x238 + 73400000.0 * sc[0] * x290 -
            50000000.0 * sc[0] + sc[1] * x2483 + 30000000.0 * sc[2] * x238 -
            30000000.0 * sc[2] * x290 - 50000000.0 * sc[3] * x239 -
            x2010 * x238 + x2010 * x290 - x2092 * x358 + x2217 * x238 +
            x2225 * x238 - x239 * x875 + x2442 + x2470 + x3322 + x3327 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x238 - x290);
  J[2184] = -x2124 * x460 + x2142 + x2663 * x460 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2240] = -sc[0] * x136 - x1391 * x2083 + x2142 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2296] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2352] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2408] =
    -sc[0] * x136 + x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2464] =
    x2083 - x2115 * x710 + x2142 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (0 + (-x113) * (0 + (-x141) * (-x710)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (0 + (x182) * (0 + (-x141) * (-x710)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x710) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (0 + (-x141) * (-x710)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2520] =
    x1003 * x1006 - x1006 * x970 - x1011 * x927 + x1011 * x933 - x1016 * x524 +
    x1016 * x7 + x103 * x2115 - x2115 * x545 + x2142 + x3754 + x482 * x641 -
    x482 * x956 + x524 * x964 - x641 * x712 + x641 * x927 - x641 * x933 -
    x7 * x964 + x712 * x956 - x927 * x956 + x933 * x956 +
    1.34e+88 * exp(-71859.339876914004 * invT - 21.17 * tc[0]) +
    1.625e+88 * exp(-70198.724879758403 * invT - 21.01 * tc[0]) +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x103 - x545) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2576] =
    x1006 * x101 - x101 * x1035 - x126 * x2115 - x135 * x641 + x135 * x950 +
    x135 * x956 + x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x126) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x135 + (-x141) * (-x126)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2632] =
    -x1006 * x107 - x1011 * x83 - x1023 * x129 + x1035 * x107 + x2115 * x481 +
    x2142 - x461 * x641 + x461 * x950 + x461 * x956 + x641 * x83 - x83 * x950 -
    x83 * x956 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x481) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x461 + (-x141) * (x481)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2688] =
    -x1006 * x566 + x1011 * x562 - x1016 * x19 - x1023 * x555 - x1023 * x558 -
    x1028 * x19 + x1035 * x566 - x130 * x641 + x130 * x950 + x130 * x956 +
    x19 * x964 + x2115 * x464 + x2142 - x562 * x641 + x562 * x950 +
    x562 * x956 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x464) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x130 + (-x141) * (x464)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2744] =
    -x1006 * x582 + x1011 * x967 - x1016 * x573 - x1028 * x573 + x1035 * x582 -
    x132 * x641 + x132 * x950 + x132 * x956 - x2115 * x586 + x2142 +
    x573 * x964 - x641 * x967 + x950 * x967 + x956 * x967 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (-x586) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x132 + (-x141) * (-x586)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2800] =
    -x1006 * x104 + x1011 * x50 + x1016 * x529 + x1023 * x594 + x1028 * x529 +
    x1035 * x104 - x106 * x641 + x106 * x950 + x106 * x956 + x127 * x2115 +
    x2142 - x50 * x641 + x50 * x950 + x50 * x956 - x529 * x964 +
    (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294) +
    (x1023 * x37) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (x1016 * x184 + x1023 * x87 + x1023 * x94 + x1028 * x184 - x184 * x964) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x641 - x141 * x950 - x141 * x956) * (x127) +
    (-x1006 * x181 + x1011 * x182 - x1016 * x113 + x1023 * x81 - x1028 * x113 +
     x1035 * x181 + x113 * x964 - x182 * x641 + x182 * x950 + x182 * x956) *
      (x106 + (-x141) * (x127)) +
    (x1011 * x183 - x1016 * x121 - x1028 * x121 + x121 * x964 - x183 * x641 +
     x183 * x950 + x183 * x956) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2856] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2912] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[2968] = 20000000.0 * sc[0] * x382 - x1392 * x2083 - x2152 * x382 + x2980 +
            x3013 + x3318 + x3329 +
            (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[3024] = x2142 + (-50000000.0 * sc[3] * x5 - x5 * x875) * (x294);
  J[1] =
    73400000.0 * sc[0] * x190 - 73400000.0 * sc[0] * x233 -
    20000000.0 * sc[0] * x383 + 20000000.0 * sc[0] * x402 + sc[10] * x2262 +
    sc[11] * x2148 + sc[12] * x2220 + sc[13] * x1985 + sc[14] * x2206 +
    20000000.0 * sc[17] * x2108 + 200000000.0 * sc[18] * x2130 +
    70000000.0 * sc[1] * x1325 + sc[20] * x224 + sc[21] * x670 +
    sc[22] * x2111 + 31600000.0 * sc[25] +
    50000000.0 * sc[26] * exp(-1962.5449966384101 * invT) + sc[28] * x136 +
    28000000.0 * sc[30] / x539 + sc[34] * x224 + 18100000.0 * sc[37] +
    50000000.0 * sc[38] + sc[40] * x136 + sc[43] * x136 + sc[45] * x2299 +
    sc[45] * x2305 + sc[4] * x2292 + sc[5] * x1989 + sc[8] * x2258 +
    sc[9] * x1993 - x1028 * x519 + x1028 * x528 + x1035 * x579 - x1035 * x602 +
    4846.0 * x124 * exp(1529.7786640463501 * invT - 0.4 * tc[0]) +
    x1363 * x2083 - x190 * x2225 + 73400000.0 * x197 + x2136 * x606 +
    x2152 * x383 - x2152 * x402 + x2225 * x233 + x242 * x875 -
    20000000.0 * x370 + x3831 + x536 * x950 - x544 * x950 - x557 * x950 +
    x604 * x950 + (x5 * x875) * (x190 - x233) +
    (-x1028 * x184) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (x141 * x950) * (-x681 + x734) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (x1028 * x121 - x183 * x950) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[57] =
    kf_qss[176] * sc[1] * x1374 * x2082 +
    70000000.0 * kf_qss[194] * sc[1] * x1333 -
    0.003913 * kf_qss[222] * sc[1] * x704 * x944 +
    kf_qss[70] * sc[1] * x2135 * x610 - refCinv * sc[16] * x186 * x3811 -
    20000000.0 * sc[0] * x403 + 20000000.0 * sc[0] * x404 - sc[10] * x2494 -
    sc[12] * x3846 - 3767000.0 * sc[14] * x3842 - sc[15] * x2489 -
    sc[16] * x2496 - sc[17] * x609 - sc[18] * x2507 - sc[21] * x2478 -
    sc[25] * x2544 - 1000000.0 * sc[29] * x2474 - sc[2] * x2598 -
    sc[33] * x2518 - sc[37] * x2485 - sc[38] * x2483 - sc[3] * x2504 -
    sc[44] * x2082 - sc[4] * x2491 - sc[8] * x2498 - x1015 * x115 -
    x1028 * x738 + x1035 * x574 - x1035 * x756 - 0.003928 * x120 * x944 +
    x131 * x2135 + 70000000.0 * x1332 + x1360 * x2082 - x1373 * x874 -
    x1491 * x875 -
    45700000000000.0 * x196 * exp(-52535.819910012702 * invT - 1.4 * tc[0]) -
    x197 * x2224 + x2151 * x370 + x2152 * x403 - x2152 * x404 + x2225 * x248 -
    x2225 * x251 - 114250000000000.0 * x2338 + 6057.5 * x2340 - x2481 - x2488 +
    x3821 + x3860 - 0.003913 * x41 * x944 - x511 * x950 + x742 * x950 -
    x758 * x950 + x771 * x950 - 0.003928 * x85 * x944 +
    (x5 * x875) * (-x248 + x251) +
    (-x1028 * x184) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x141 * x950) * (x770 - x772) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (x1028 * x121 - x183 * x950) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[113] =
    -73400000.0 * sc[0] * x253 + 73400000.0 * sc[0] * x254 -
    20000000.0 * sc[0] * x405 + 20000000.0 * sc[0] * x406 +
    70000000.0 * sc[1] * x1335 - sc[1] * x2598 + x1028 * x774 - x1028 * x790 -
    x1035 * x745 + x1035 * x765 + x1376 * x2083 + x2136 * x640 + x2152 * x405 -
    x2152 * x406 + x2225 * x253 - x2225 * x254 + x3831 - x543 * x950 +
    x753 * x950 - x792 * x950 + x803 * x950 + (x5 * x875) * (-x253 + x254) +
    (-x1028 * x184) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (x141 * x950) * (x801 - x804) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (x1028 * x121 - x183 * x950) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[169] =
    -73400000.0 * sc[0] * x256 + 73400000.0 * sc[0] * x258 -
    20000000.0 * sc[0] * x407 + 70000000.0 * sc[1] * x1336 - sc[1] * x2504 -
    x1028 * x116 + x1028 * x791 + x1035 * x797 - x1035 * x800 + x1377 * x2083 -
    x1492 * x875 + x2136 * x645 + x2152 * x407 + x2225 * x256 - x2225 * x258 +
    x2723 + x3828 + x3829 + x3866 + x741 * x950 - x763 * x950 - x821 * x950 +
    x841 * x950 + (x5 * x875) * (-x256 + x258) +
    (-x1028 * x184) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x950) * (x817 - x842) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x1028 * x121 - x183 * x950) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[225] =
    sc[0] * x2292 - 73400000.0 * sc[0] * x260 + 73400000.0 * sc[0] * x263 -
    20000000.0 * sc[0] * x409 + 20000000.0 * sc[0] * x410 +
    70000000.0 * sc[1] * x1337 + 70000000.0 * sc[1] * x1339 - sc[1] * x2491 +
    sc[8] * x3871 + x1028 * x811 - x1028 * x823 + x1035 * x813 - x1035 * x839 +
    x1378 * x2083 + x1379 * x2083 - x1493 * x875 + x2136 * x647 + x2136 * x658 +
    x2152 * x409 - x2152 * x410 + x2225 * x260 - x2225 * x263 + x3831 +
    x468 * x950 - x669 * x950 - x793 * x950 + x796 * x950 +
    (x5 * x875) * (-x260 + x263) +
    (-x1028 * x184) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x141 * x950) * (x829 - x872) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x1028 * x121 - x183 * x950) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[281] =
    sc[0] * x1989 - 73400000.0 * sc[0] * x265 + 73400000.0 * sc[0] * x267 +
    20000000.0 * sc[0] * x413 + 70000000.0 * sc[1] * x1340 - x1028 * x826 -
    x1028 * x827 - x1035 * x833 + x1035 * x840 + x1380 * x2083 + x2136 * x672 +
    x2152 * x411 - x2152 * x413 + x2225 * x265 - x2225 * x267 -
    548400000000000.0 * x2338 + 29076.0 * x2340 - x245 * x875 + x3821 + x3828 +
    x3875 - x799 * x950 + x812 * x950 - x869 * x950 + x896 * x950 +
    (x5 * x875) * (-x265 + x267) +
    (-x1028 * x184) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x950) * (x895 - x897) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x1028 * x121 - x183 * x950) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[337] =
    -20000000.0 * sc[0] * x416 + 70000000.0 * sc[1] * x1341 +
    70000000.0 * sc[1] * x1342 + x1382 * x2083 + x2136 * x680 + x2152 * x416 +
    x2225 * x269 - x2225 * x270 - 86830000000000.0 * x2338 + 4603.7 * x2340 +
    x2723 + x3828 + x3866 + x3881 + (x5 * x875) * (-x269 + x270) +
    (-x1028 * x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x950) * (x909 + x913) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (0 + (-x141) * (x909 + x913)) +
    (x1028 * x121 - x183 * x950) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[393] = 73400000.0 * sc[0] * x188 - 73400000.0 * sc[0] * x272 +
           70000000.0 * sc[1] * x1343 - x188 * x2225 + x2225 * x272 -
           173660000000000.0 * x2338 + 9207.4 * x2340 + x3828 + x3883 +
           (x5 * x875) * (x188 - x272);
  J[449] =
    sc[0] * x2258 + 73400000.0 * sc[0] * x274 - 73400000.0 * sc[0] * x275 -
    20000000.0 * sc[0] * x375 + 20000000.0 * sc[0] * x419 +
    70000000.0 * sc[1] * x1344 + 70000000.0 * sc[1] * x1345 - sc[1] * x2498 +
    sc[4] * x3871 + 200000000.0 * sc[8] * x3886 + x1028 * x844 - x1035 * x919 +
    x1383 * x2083 + x2136 * x689 + x2136 * x693 + x2152 * x375 - x2152 * x419 -
    x2225 * x274 + x2225 * x275 + x3831 - x915 * x950 - x920 * x950 +
    (x5 * x875) * (x274 - x275) +
    (-x1028 * x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x950) * (-x922) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x920 + (-x141) * (-x922)) +
    (x1028 * x121 - x183 * x950) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[505] =
    sc[0] * x1993 - 73400000.0 * sc[0] * x278 + 73400000.0 * sc[0] * x279 -
    20000000.0 * sc[0] * x420 + 20000000.0 * sc[0] * x421 +
    70000000.0 * sc[1] * x1346 - x1028 * x838 - x1028 * x859 + x1035 * x865 -
    x1035 * x868 + x1384 * x2083 - x2136 * x628 + x2152 * x420 - x2152 * x421 +
    x2225 * x278 - x2225 * x279 + x3831 - x834 * x950 + x835 * x950 -
    x885 * x950 + x936 * x950 + (x5 * x875) * (-x278 + x279) +
    (-x1028 * x184) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (x141 * x950) * (x935 - x937) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (x1028 * x121 - x183 * x950) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[561] =
    sc[0] * x2262 - 73400000.0 * sc[0] * x281 + 73400000.0 * sc[0] * x282 -
    20000000.0 * sc[0] * x422 + 20000000.0 * sc[0] * x423 - sc[1] * x2494 -
    x1028 * x870 + x1028 * x877 + x1035 * x863 - x1035 * x893 + x1385 * x2083 +
    x1386 * x2083 + x2136 * x657 + x2136 * x706 + x2152 * x422 - x2152 * x423 +
    x2225 * x281 - x2225 * x282 + x3831 + x546 * x950 + x831 * x950 -
    x836 * x950 - x926 * x950 + (x5 * x875) * (-x281 + x282) +
    (-x1028 * x184) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x141 * x950) * (x465 - x977) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x1028 * x121 - x183 * x950) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[617] =
    sc[0] * x2148 - 73400000.0 * sc[0] * x284 + 73400000.0 * sc[0] * x286 +
    20000000.0 * sc[0] * x424 + x1004 * x950 - x1028 * x899 - x1028 * x924 -
    x1035 * x889 + x1035 * x894 + x1387 * x2083 + x2136 * x717 + x2152 * x411 -
    x2152 * x424 + x2225 * x284 - x2225 * x286 + x3821 + x3828 + x3829 + x3875 -
    x498 * x950 - x700 * x950 + x864 * x950 + (x5 * x875) * (-x284 + x286) +
    (-x1028 * x184) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x950) * (x1001 - x1005) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x1028 * x121 - x183 * x950) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[673] = sc[0] * x2220 - 73400000.0 * sc[0] * x288 +
           73400000.0 * sc[0] * x289 + 70000000.0 * sc[1] * x1347 -
           sc[1] * x3846 + x186 * x3822 + x2225 * x288 - x2225 * x289 + x3828 +
           x3829 + x3883 + (x5 * x875) * (-x288 + x289);
  J[729] =
    sc[0] * x1985 + 20000000.0 * sc[0] * x425 + 70000000.0 * sc[1] * x1348 -
    x1000 * x950 + x1026 * x950 - x1028 * x925 - x1028 * x938 + x1035 * x932 -
    x1035 * x934 + x2136 * x724 + x2152 * x411 - x2152 * x425 + x3821 + x3875 +
    x3910 + x861 * x950 - x866 * x950 + (x5 * x875) * (x294) +
    (-x1028 * x184) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x950) * (-x1027 + x553) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x1028 * x121 - x183 * x950) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[785] =
    sc[0] * x2206 + 73400000.0 * sc[0] * x295 + 70000000.0 * sc[1] * x1349 -
    3767000.0 * sc[1] * x3842 - x1014 * x950 - x1028 * x963 - x1028 * x966 +
    x1035 * x929 - x1035 * x974 + x1046 * x950 + x186 * x3819 + x2136 * x725 -
    x2225 * x295 + x3915 - x887 * x950 + x890 * x950 +
    (x5 * x875) * (-x290 + x295) +
    (-x1028 * x184) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x950) * (x1039 - x1047) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x1028 * x121 - x183 * x950) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[841] =
    -73400000.0 * sc[0] * x297 + 73400000.0 * sc[0] * x298 +
    20000000.0 * sc[0] * x426 + 70000000.0 * sc[1] * x1350 - sc[1] * x2489 +
    x1028 * x1041 - x1035 * x1056 - x1055 * x950 - x1057 * x950 + x2136 * x727 +
    x2152 * x411 - x2152 * x426 + x2225 * x297 - x2225 * x298 + x3821 + x3828 +
    x3829 + x3875 + (x5 * x875) * (-x297 + x298) +
    (-x1028 * x184) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x950) * (x1058) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x1057 + (-x141) * (x1058)) +
    (x1028 * x121 - x183 * x950) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[897] = -refCinv * sc[1] * x186 * x3811 - 73400000.0 * sc[0] * x228 +
           73400000.0 * sc[0] * x231 - sc[1] * x2496 + x2225 * x228 -
           x2225 * x231 + x249 * x875 + x3828 + x3829 + x3883 +
           (x5 * x875) * (-x228 + x231);
  J[953] =
    20000000.0 * sc[0] * x2108 + 73400000.0 * sc[0] * x303 - sc[1] * x609 +
    x1028 * x39 - x1035 * x1061 - x1060 * x950 - x1062 * x950 + x2136 * x728 -
    x2225 * x303 + x3915 + (x5 * x875) * (-x290 + x303) +
    (-x1028 * x184) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (x141 * x950) * (-x1063) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x1062 + (-x141) * (-x1063)) +
    (x1028 * x121 - x183 * x950) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1009] = 200000000.0 * sc[0] * x2130 - 73400000.0 * sc[0] * x305 +
            73400000.0 * sc[0] * x306 - 20000000.0 * sc[0] * x427 +
            70000000.0 * sc[1] * x1351 - sc[1] * x2507 + x2152 * x427 +
            x2225 * x305 - x2225 * x306 + x2723 + x3828 + x3829 + x3866 +
            (x5 * x875) * (-x305 + x306);
  J[1065] = 73400000.0 * sc[0] * x307 + 70000000.0 * sc[1] * x1353 - x2174 -
            x2225 * x307 + x3915 + (x5 * x875) * (-x290 + x307);
  J[1121] = sc[0] * x224 + 73400000.0 * sc[0] * x308 -
            20000000.0 * sc[0] * x428 + x2152 * x428 + x2225 * x290 -
            x2225 * x308 + x2723 + x3829 + x3866 + x3907 +
            (x5 * x875) * (-x290 + x308);
  J[1177] = sc[0] * x670 - sc[1] * x2478 + x3929 + (x5 * x875) * (x294);
  J[1233] = sc[0] * x2111 + 73400000.0 * sc[0] * x309 + x1033 * x950 +
            x2136 * x561 - x2225 * x309 + x3915 + (x5 * x875) * (-x290 + x309) +
            (-x1028 * x184) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x950) * (-x1067 + x1068) +
            (x1028 * x113 - x1035 * x181 - x182 * x950) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x1028 * x121 - x183 * x950) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1289] = -x3563 + x3929 + (x5 * x875) * (x294);
  J[1345] = -x1028 * x643 - x1035 * x1079 - x1076 * x950 - x1082 * x950 +
            x1388 * x2083 + x3929 + (x5 * x875) * (x294) +
            (-x1028 * x184) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x950) * (x1070 + x463) +
            (x1028 * x113 - x1035 * x181 - x182 * x950) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x1028 * x121 - x183 * x950) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1401] =
    31600000.0 * sc[0] - sc[1] * x2544 - x1028 * x684 - x1035 * x1087 -
    x1086 * x950 - x1088 * x950 + x2136 * x751 + x3929 + (x5 * x875) * (x294) +
    (-x1028 * x184) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x950) * (x1089) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x1088 + (-x141) * (x1089)) +
    (x1028 * x121 - x183 * x950) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1457] =
    -20000000.0 * sc[0] * x429 - x1035 * x975 - x1092 * x950 + x2136 * x755 +
    x2136 * x759 + x2152 * x429 + x2723 + x3614 + x3866 + x3910 + x891 * x950 +
    (x5 * x875) * (x294) +
    (-x1028 * x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x950) * (x1093) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x1092 + (-x141) * (x1093)) +
    (x1028 * x121 - x183 * x950) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1513] = x3929 + (x5 * x875) * (x294);
  J[1569] = sc[0] * x136 + 73400000.0 * sc[0] * x310 + x2136 * x760 -
            x2225 * x310 + x3915 + (x5 * x875) * (-x290 + x310);
  J[1625] = -1000000.0 * sc[1] * x2474 + x3929 + (x5 * x875) * (x294);
  J[1681] =
    -20000000.0 * sc[0] * x430 + 28000000.0 * sc[0] / x539 + x1028 * x1095 -
    x1035 * x1097 - x1098 * x950 + x2152 * x430 + x2723 + x3866 + x3910 -
    x886 * x950 + (x5 * x875) * (x294) +
    (-x1028 * x184) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x950) * (x1099) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x1098 + (-x141) * (x1099)) +
    (x1028 * x121 - x183 * x950) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1737] =
    73400000.0 * sc[0] * x311 - 20000000.0 * sc[0] * x431 + x1028 * x968 -
    x1035 * x707 - x1100 * x950 + x1389 * x2083 + x2136 * x762 + x2152 * x431 +
    x2225 * x290 - x2225 * x311 + x2723 + x3829 + x3866 + x3907 - x726 * x950 +
    (x5 * x875) * (-x290 + x311) +
    (-x1028 * x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x950) * (-x1104) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x726 + (-x141) * (-x1104)) +
    (x1028 * x121 - x183 * x950) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1793] =
    73400000.0 * sc[0] * x189 - 73400000.0 * sc[0] * x232 +
    20000000.0 * sc[0] * x367 - x1002 * x1028 - x1028 * x587 + x1035 * x682 -
    x1035 * x999 + x1390 * x2083 - x189 * x2225 + x2136 * x764 - x2152 * x367 +
    x2152 * x411 + x2225 * x232 + x3821 + x3828 + x3829 + x3875 + x564 * x950 -
    x612 * x950 - x928 * x950 + x930 * x950 + (x5 * x875) * (x189 - x232) +
    (-x1028 * x184) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x950) * (-x585 + x688) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x1028 * x121 - x183 * x950) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1849] = -sc[1] * x2518 + x3929 + (x5 * x875) * (x294);
  J[1905] = sc[0] * x224 + x3929 + (x5 * x875) * (x294);
  J[1961] = x3929 + (x5 * x875) * (x294);
  J[2017] =
    x3929 + (x5 * x875) * (x294) +
    (-x1028 * x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x950) * (-x692) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (0 + (-x141) * (-x692)) +
    (x1028 * x121 - x183 * x950) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2073] = 18100000.0 * sc[0] - sc[1] * x2485 + x2136 * x767 + x3929 +
            (x5 * x875) * (x294);
  J[2129] = 73400000.0 * sc[0] * x238 + 50000000.0 * sc[0] - sc[1] * x2483 -
            x2225 * x238 + x239 * x875 + x3915 + (x5 * x875) * (x238 - x290);
  J[2185] = x3929 + (x5 * x875) * (x294);
  J[2241] = sc[0] * x136 + x1391 * x2083 + x3929 + (x5 * x875) * (x294);
  J[2297] = x3929 + (x5 * x875) * (x294);
  J[2353] = x3929 + (x5 * x875) * (x294);
  J[2409] = sc[0] * x136 + x3929 + (x5 * x875) * (x294);
  J[2465] =
    -x2083 + x3929 + (x5 * x875) * (x294) +
    (-x1028 * x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x950) * (-x710) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (0 + (-x141) * (-x710)) +
    (x1028 * x121 - x183 * x950) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2521] =
    sc[0] * x2299 + sc[0] * x2305 + x1003 * x1035 + x1028 * x524 - x1028 * x7 -
    x1035 * x970 + x3929 + x482 * x950 - x712 * x950 + x927 * x950 -
    x933 * x950 + (x5 * x875) * (x294) +
    (-x1028 * x184) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x950) * (x103 - x545) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x1028 * x121 - x183 * x950) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2577] =
    x101 * x1035 - x135 * x950 + x3929 + (x5 * x875) * (x294) +
    (-x1028 * x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x950) * (-x126) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x135 + (-x141) * (-x126)) +
    (x1028 * x121 - x183 * x950) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2633] =
    -x1035 * x107 + x3929 - x461 * x950 + x83 * x950 + (x5 * x875) * (x294) +
    (-x1028 * x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x950) * (x481) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x461 + (-x141) * (x481)) +
    (x1028 * x121 - x183 * x950) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2689] =
    x1028 * x19 - x1035 * x566 - x130 * x950 + x3929 - x562 * x950 +
    (x5 * x875) * (x294) +
    (-x1028 * x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x950) * (x464) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x130 + (-x141) * (x464)) +
    (x1028 * x121 - x183 * x950) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2745] =
    x1028 * x573 - x1035 * x582 - x132 * x950 + x3929 - x950 * x967 +
    (x5 * x875) * (x294) +
    (-x1028 * x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x950) * (-x586) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x132 + (-x141) * (-x586)) +
    (x1028 * x121 - x183 * x950) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2801] =
    -x1028 * x529 - x1035 * x104 - x106 * x950 + x3929 - x50 * x950 +
    (x5 * x875) * (x294) +
    (-x1028 * x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x950) * (x127) +
    (x1028 * x113 - x1035 * x181 - x182 * x950) * (x106 + (-x141) * (x127)) +
    (x1028 * x121 - x183 * x950) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2857] = x3929 + (x5 * x875) * (x294);
  J[2913] = x3929 + (x5 * x875) * (x294);
  J[2969] = -20000000.0 * sc[0] * x382 + x1392 * x2083 + x2152 * x382 + x2723 +
            x3866 + x3910 + (x5 * x875) * (x294);
  J[3025] = x3929 + (x5 * x875) * (x294);
  J[2] =
    sc[12] * x2228 + 10.0e-13 * sc[18] * sc[8] + sc[19] * x2071 +
    sc[20] * x2156 + 30000000.0 * sc[2] * x1325 - 60200000.0 * sc[2] * x190 +
    60200000.0 * sc[2] * x233 + 20000000.0 * sc[2] * x383 -
    20000000.0 * sc[2] * x402 + sc[3] * x2267 + sc[4] * x2292 +
    9677000000.0 * sc[7] * exp(-55454.476571680098 * invT) - x1363 * x3948 +
    x190 * x3972 + x190 * x4028 - x2001 - x233 * x3972 - x233 * x4028 +
    x339 * x3966 - x383 * x3977 - x383 * x3985 - x3952 * x606 + x3958 * x445 +
    x3958 * x448 + x3977 * x402 - x3981 * x606 + x3985 * x402 + x3993 + x3995 +
    x4024 + x4040 - x466 * x52 + x476 * x52 + x505 * x52 - x52 * x92 +
    (x37 * x52) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x1040 * x141) * (-x681 + x734) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (x1040 * x183 - x1048 * x121) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[58] =
    30000000.0 * sc[2] * x1334 + 60200000.0 * sc[2] * x248 -
    60200000.0 * sc[2] * x251 - sc[2] * x2598 + 20000000.0 * sc[2] * x403 -
    20000000.0 * sc[2] * x404 - x1375 * x3948 - 11800000.0 * x2401 -
    x248 * x3972 - x248 * x3990 - x248 * x4028 + x251 * x3972 + x251 * x3990 +
    x251 * x4028 + 9.7725e+16 * x2559 - x3952 * x617 - x3977 * x403 +
    x3977 * x404 - x3981 * x617 - x3985 * x403 + x3985 * x404 +
    3236500000000000.0 * x3997 - 30850.0 * x4001 + x4059 + x4071 + x4080 +
    (x37 * x52) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x1040 * x141) * (x770 - x772) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (x1040 * x183 - x1048 * x121) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[114] =
    kf_qss[105] * sc[2] * x3957 * x444 +
    30000000.0 * kf_qss[196] * sc[2] * x1333 - 32500000.0 * sc[10] -
    sc[11] * x4100 - sc[12] * x4172 - sc[13] * x4092 + sc[14] * x3957 * x455 -
    50000000.0 * sc[15] - sc[16] * x2679 - 10000000.0 * sc[18] * x2130 -
    80000000.0 * sc[19] - sc[1] * x2598 - sc[20] * x4128 - sc[21] * x4081 -
    2000000.0 * sc[23] - sc[28] * x4132 - 24680.0 * sc[2] * x196 * x3999 +
    60200000.0 * sc[2] * x253 - 60200000.0 * sc[2] * x254 +
    20000000.0 * sc[2] * x405 - 20000000.0 * sc[2] * x406 - sc[30] * x4141 -
    200000.0 * sc[30] - sc[34] * x4128 - sc[40] * x4132 - sc[43] * x4132 -
    2.97 * sc[5] * x4097 - 80000000.0 * sc[8] - sc[9] * x4103 -
    4720000.0 * x124 * exp(-tc[0]) + 30000000.0 * x1332 - x1376 * x3948 -
    60200000.0 * x197 - x253 * x4028 + x254 * x4028 - x2652 + x285 * x3965 +
    x349 * x3966 - x352 * x3966 + 20000000.0 * x370 - x3952 * x640 +
    x3957 * x401 / x443 - x3985 * x405 + x3985 * x406 + x4024 - x4086 - x4108 +
    x4150 + x4159 + x4169 + x4190 - x493 * x52 + x52 * x644 - x52 * x683 -
    x52 * x789 - 100000.0 * x77 * x80 * exp(528.37749909495597 * invT) -
    100000.0 * x616 * exp(528.37749909495597 * invT) / x34 +
    (x37 * x52) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x1040 * x141) * (x801 - x804) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (x1040 * x183 - x1048 * x121) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[170] =
    kf_qss[165] * x3958 * x444 + sc[0] * x2267 + sc[17] * x4209 +
    30000000.0 * sc[2] * x1336 + 60200000.0 * sc[2] * x256 -
    60200000.0 * sc[2] * x258 + 20000000.0 * sc[2] * x407 + sc[4] * x4203 +
    sc[8] * x4207 - x1377 * x3948 +
    1294600000000000.0 * x196 * exp(-61140.824895273399 * invT - 1.5 * tc[0]) -
    x256 * x3972 - x256 * x4028 + x258 * x3972 + x258 * x4028 + x353 * x3966 -
    x354 * x3966 - x3952 * x645 + x3958 * x453 - x3977 * x407 + x3977 * x408 -
    x3981 * x645 - x3985 * x407 + x4024 + x4194 + x4218 - x4222 + x4227 +
    x4239 - x52 * x785 - x52 * x809 +
    (x37 * x52) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x1040 * x141) * (x817 - x842) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x1040 * x183 - x1048 * x121) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[226] =
    sc[0] * x2292 + sc[10] * x4250 + sc[15] * x4248 + sc[18] * x4258 +
    sc[19] * x4246 + 30000000.0 * sc[2] * x1337 + 30000000.0 * sc[2] * x1339 +
    60200000.0 * sc[2] * x260 - 60200000.0 * sc[2] * x263 +
    20000000.0 * sc[2] * x409 - 20000000.0 * sc[2] * x410 + sc[33] * x4242 +
    sc[37] * x4273 + sc[3] * x4203 + 1000000.0 * sc[44] * x3946 +
    86970000.0 * sc[6] * exp(-44232.744924234903 * invT) + sc[8] * x4252 -
    1000000.0 * x1360 * x3946 - x1378 * x3948 - x1379 * x3948 +
    3.909e+16 * x196 * x2398 + x197 * x4027 - x240 * x3966 - x260 * x3972 -
    x260 * x3990 - x260 * x4028 + x263 * x3972 + x263 * x3990 + x263 * x4028 -
    x2788 + x349 * x3966 - x370 * x3984 - x3985 * x409 + x3985 * x410 + x4024 +
    x4245 + 0.6026 * x4254 + x4285 + x4293 + x4313 - x52 * x68 + x52 * x807 -
    x52 * x820 - x52 * x837 +
    (x37 * x52) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x1040 * x141) * (x829 - x872) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x1040 * x183 - x1048 * x121) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[282] =
    30000000.0 * sc[2] * x1340 + 60200000.0 * sc[2] * x265 -
    60200000.0 * sc[2] * x267 - 2.97 * sc[2] * x4097 -
    20000000.0 * sc[2] * x413 - x1380 * x3948 - 56640000.0 * x2401 +
    4.6908e+17 * x2559 - x265 * x3972 - x265 * x3990 - x265 * x4028 +
    x267 * x3972 + x267 * x3990 + x267 * x4028 - x3952 * x672 + x3977 * x413 -
    x3981 * x672 + x3985 * x413 + 1.55352e+16 * x3997 - 148080.0 * x4001 +
    x4059 + x4328 + x4337 + x4347 + x4356 +
    (x37 * x52) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x1040 * x141) * (x895 - x897) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x1040 * x183 - x1048 * x121) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[338] =
    sc[14] * x4357 + 30000000.0 * sc[2] * x1341 + 30000000.0 * sc[2] * x1342 +
    60200000.0 * sc[2] * x269 - 60200000.0 * sc[2] * x270 +
    20000000.0 * sc[2] * x416 +
    86970000.0 * sc[4] * exp(-44232.744924234903 * invT) - x1382 * x3948 -
    8968000.0 * x2401 + 7.4271e+16 * x2559 - x269 * x3972 - x269 * x3990 -
    x269 * x4028 + x270 * x3972 + x270 * x3990 + x270 * x4028 - x3952 * x680 -
    x3977 * x416 - x3981 * x680 - x3985 * x416 + 2459740000000000.0 * x3997 -
    23446.0 * x4001 + x4218 + x4363 + x4378 + x4392 +
    (x37 * x52) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x1040 * x141) * (x909 + x913) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (0 + (-x141) * (x909 + x913)) +
    (x1040 * x183 - x1048 * x121) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[394] = 9677000000.0 * sc[0] * exp(-55454.476571680098 * invT) +
           30000000.0 * sc[2] * x1343 - 60200000.0 * sc[2] * x188 +
           60200000.0 * sc[2] * x272 + x188 * x3972 + x188 * x3990 +
           x188 * x4028 - 17936000.0 * x2401 + 1.48542e+17 * x2559 -
           x272 * x3972 - x272 * x3990 - x272 * x4028 +
           4919480000000000.0 * x3997 - 46892.0 * x4001 - x4393 + x4403 + x4414;
  J[450] =
    10.0e-13 * sc[0] * sc[18] + 30000000.0 * sc[2] * x1344 +
    30000000.0 * sc[2] * x1345 - 60200000.0 * sc[2] * x274 +
    60200000.0 * sc[2] * x275 + 20000000.0 * sc[2] * x375 -
    20000000.0 * sc[2] * x419 - 80000000.0 * sc[2] + sc[3] * x4207 +
    sc[4] * x4252 + x1040 * x915 + x1040 * x920 + x1045 * x919 - x1048 * x844 -
    x1383 * x3948 + x197 * x3989 + x274 * x3972 + x274 * x3990 + x274 * x4028 -
    x275 * x3972 - x275 * x3990 - x275 * x4028 + x356 * x3966 - x375 * x3985 -
    x3952 * x689 - x3952 * x693 + x3985 * x419 + x3995 + x4024 + x4433 +
    (x37 * x52) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x1040 * x141) * (-x922) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x920 + (-x141) * (-x922)) +
    (x1040 * x183 - x1048 * x121) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[506] =
    30000000.0 * sc[2] * x1346 + 60200000.0 * sc[2] * x278 -
    60200000.0 * sc[2] * x279 - sc[2] * x4103 + 20000000.0 * sc[2] * x420 -
    20000000.0 * sc[2] * x421 - x1384 * x3948 - x278 * x3972 - x278 * x3990 -
    x278 * x4028 + x279 * x3972 + x279 * x3990 + x279 * x4028 + x3952 * x628 -
    x3977 * x420 + x3977 * x421 + x3981 * x628 - x3985 * x420 + x3985 * x421 +
    x4024 + x4059 + x4484 +
    (x37 * x52) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-x1040 * x141) * (x935 - x937) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (x1040 * x183 - x1048 * x121) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[562] =
    60200000.0 * sc[2] * x281 - 60200000.0 * sc[2] * x282 +
    20000000.0 * sc[2] * x422 - 20000000.0 * sc[2] * x423 - 32500000.0 * sc[2] +
    sc[4] * x4250 - x1385 * x3948 - x1386 * x3948 - x21 * x52 - x281 * x3972 -
    x281 * x3990 - x281 * x4028 + x282 * x3972 + x282 * x3990 + x282 * x4028 +
    x357 * x3966 - x3952 * x657 - x3952 * x706 - x3985 * x422 + x3985 * x423 +
    x3995 + x4024 + x4505 + x4526 + x470 * x52 - x52 * x79 + x52 * x86 +
    (x37 * x52) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x1040 * x141) * (x465 - x977) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x1040 * x183 - x1048 * x121) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[618] =
    60200000.0 * sc[2] * x284 - 60200000.0 * sc[2] * x286 - sc[2] * x4100 -
    20000000.0 * sc[2] * x424 - x1387 * x3948 - x284 * x3972 - x284 * x3990 -
    x284 * x4028 + x286 * x3972 + x286 * x3990 + x286 * x4028 - x3952 * x717 +
    x3977 * x424 - x3981 * x717 + x3985 * x424 + x4024 + x4059 + x4328 + x4337 +
    x4558 +
    (x37 * x52) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x1040 * x141) * (x1001 - x1005) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x1040 * x183 - x1048 * x121) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[674] = sc[0] * x2228 + sc[22] * x4561 + 30000000.0 * sc[2] * x1347 +
           60200000.0 * sc[2] * x288 - 60200000.0 * sc[2] * x289 -
           sc[2] * x4172 - x2663 * x454 - x288 * x3972 - x288 * x3990 -
           x288 * x4028 + x289 * x3972 + x289 * x3990 + x289 * x4028 +
           x331 * x3966 + x3958 * x454 + x3977 * x408 + x3995 + x4024 + x4218 -
           x4222 + x4328 + x4337 + x4560;
  J[730] =
    30000000.0 * sc[2] * x1348 - sc[2] * x4092 - 20000000.0 * sc[2] * x425 -
    x3952 * x724 + x3977 * x425 - x3981 * x724 + x3985 * x425 + x4059 + x4328 +
    x4337 + x4602 + x4611 +
    (x37 * x52) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x1040 * x141) * (-x1027 + x553) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x1040 * x183 - x1048 * x121) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[786] =
    kf_qss[100] * ((sc[2]) * (sc[2])) * x3957 / x443 + sc[20] * x4622 +
    30000000.0 * sc[2] * x1349 - 13.59 * sc[2] * x2657 -
    60200000.0 * sc[2] * x295 + sc[6] * x4357 - x2663 * x455 + x295 * x3972 +
    x295 * x3990 + x295 * x4028 - x3952 * x725 - x3981 * x725 + x4591 + x4613 +
    x4628 + x4639 +
    (x37 * x52) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x1040 * x141) * (x1039 - x1047) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x1040 * x183 - x1048 * x121) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[842] =
    30000000.0 * sc[2] * x1350 + 60200000.0 * sc[2] * x297 -
    60200000.0 * sc[2] * x298 - 20000000.0 * sc[2] * x426 - 50000000.0 * sc[2] +
    sc[4] * x4248 + x1040 * x1055 + x1040 * x1057 - x1041 * x1048 +
    x1045 * x1056 + x197 * x3971 - x297 * x3972 - x297 * x3990 - x297 * x4028 +
    x298 * x3972 + x298 * x3990 + x298 * x4028 -
    2350000.0 * x370 * exp(-19197.7158004501 * invT) - x3952 * x727 +
    x3977 * x426 - x3981 * x727 + x3985 * x426 + x4024 + x4059 + x4328 + x4337 +
    (x37 * x52) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x1040 * x141) * (x1058) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1057 + (-x141) * (x1058)) +
    (x1040 * x183 - x1048 * x121) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[898] = 60200000.0 * sc[2] * x228 - 60200000.0 * sc[2] * x231 -
           sc[2] * x2679 - x228 * x3972 - x228 * x3990 - x228 * x4028 +
           x231 * x3972 + x231 * x3990 + x231 * x4028 + x4024 + x4403;
  J[954] =
    -60200000.0 * sc[2] * x303 + sc[3] * x4209 + x1040 * x1060 + x1040 * x1062 +
    x1045 * x1061 - x1048 * x39 - x2663 * x457 + x303 * x3972 + x303 * x3990 +
    x303 * x4028 - x3952 * x728 + x3958 * x457 - x3981 * x728 + x4591 + x4628 +
    (x37 * x52) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x1040 * x141) * (-x1063) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1062 + (-x141) * (-x1063)) +
    (x1040 * x183 - x1048 * x121) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1010] = 10.0e-13 * sc[0] * sc[8] + 30000000.0 * sc[2] * x1351 -
            10000000.0 * sc[2] * x2130 + 60200000.0 * sc[2] * x305 -
            60200000.0 * sc[2] * x306 + 20000000.0 * sc[2] * x427 +
            sc[4] * x4258 - x305 * x3972 - x305 * x4028 + x306 * x3972 +
            x306 * x4028 + x3958 * x458 - x3977 * x427 - x3985 * x427 + x4024 +
            x4218 + x4378 + x4693 + x4709;
  J[1066] = sc[0] * x2071 + 30000000.0 * sc[2] * x1353 -
            60200000.0 * sc[2] * x307 - 80000000.0 * sc[2] + sc[4] * x4246 +
            x307 * x3972 + x307 * x3990 + x307 * x4028 + x4591 + x4628;
  J[1122] = sc[0] * x2156 + sc[14] * x4622 - 60200000.0 * sc[2] * x308 -
            sc[2] * x4128 + 20000000.0 * sc[2] * x428 + x308 * x3972 +
            x308 * x3990 + x308 * x4028 - x3977 * x428 - x3985 * x428 + x4218 +
            x4378 + x4591 + x4594 + x4597 + x4599;
  J[1178] = -sc[2] * x4081 + x4734 + x4735;
  J[1234] =
    sc[12] * x4561 - 60200000.0 * sc[2] * x309 - x1033 * x1040 + x309 * x3990 +
    x309 * x4028 - x3952 * x561 - x3981 * x561 + x4628 + x4748 +
    (x37 * x52) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-x1040 * x141) * (-x1067 + x1068) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (-x1033 + (-x141) * (-x1067 + x1068)) +
    (x1040 * x183 - x1048 * x121) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1290] = -2000000.0 * sc[2] + x4735;
  J[1346] =
    x1040 * x1076 + x1040 * x1082 + x1045 * x1079 + x1048 * x643 + x1072 * x52 +
    x1074 * x52 - x1388 * x3948 + x4735 +
    (x37 * x52) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-x1040 * x141) * (x1070 + x463) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1082 + (-x141) * (x1070 + x463)) +
    (x1040 * x183 - x1048 * x121) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1402] =
    x1040 * x1086 + x1040 * x1088 + x1045 * x1087 + x1048 * x684 + x1085 * x52 -
    x3952 * x751 - x3981 * x751 + x4735 + x52 * x677 +
    (x37 * x52) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x1040 * x141) * (x1089) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1088 + (-x141) * (x1089)) +
    (x1040 * x183 - x1048 * x121) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1458] =
    20000000.0 * sc[2] * x429 + x1040 * x1092 - x1040 * x891 + x1045 * x975 -
    x3952 * x755 - x3952 * x759 - x3985 * x429 + x4218 + x4378 + x4602 + x4785 +
    (x37 * x52) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x1040 * x141) * (x1093) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1092 + (-x141) * (x1093)) +
    (x1040 * x183 - x1048 * x121) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1514] = x4735;
  J[1570] = -60200000.0 * sc[2] * x310 - sc[2] * x4132 + x310 * x3972 +
            x310 * x3990 + x310 * x4028 - x3952 * x760 - x3981 * x760 + x4591 +
            x4628;
  J[1626] = x4735 + x4796;
  J[1682] =
    -sc[2] * x4141 + 20000000.0 * sc[2] * x430 - 200000.0 * sc[2] +
    x1040 * x1098 + x1040 * x886 + x1045 * x1097 - x1048 * x1095 -
    x3977 * x430 - x3985 * x430 + x4218 + x4378 + x4602 +
    (x37 * x52) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x1040 * x141) * (x1099) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x1098 + (-x141) * (x1099)) +
    (x1040 * x183 - x1048 * x121) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1738] =
    -60200000.0 * sc[2] * x311 + 20000000.0 * sc[2] * x431 + x1040 * x1100 +
    x1040 * x726 + x1045 * x707 - x1048 * x968 - x1389 * x3948 + x311 * x3972 +
    x311 * x3990 + x311 * x4028 + x361 * x3966 - x3952 * x762 + x3977 * x408 -
    x3977 * x431 - x3981 * x762 - x3985 * x431 + x3995 + x4218 - x4222 + x4591 +
    x4594 + x4597 + x4599 +
    (x37 * x52) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x1040 * x141) * (-x1104) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x726 + (-x141) * (-x1104)) +
    (x1040 * x183 - x1048 * x121) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1794] =
    -60200000.0 * sc[2] * x189 + 60200000.0 * sc[2] * x232 -
    20000000.0 * sc[2] * x367 - x1390 * x3948 + x189 * x3972 + x189 * x3990 +
    x189 * x4028 - x232 * x3972 - x232 * x3990 - x232 * x4028 + x338 * x3966 +
    x367 * x3977 + x367 * x3985 - x3952 * x764 - x3981 * x764 + x3995 + x4024 +
    x4328 + x4337 + x4857 +
    (x37 * x52) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x1040 * x141) * (-x585 + x688) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x1040 * x183 - x1048 * x121) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1850] = sc[4] * x4242 + x4735;
  J[1906] = -sc[2] * x4128 + x4735;
  J[1962] = x4735;
  J[2018] =
    x4735 +
    (x37 * x52) * (0 + (-x113) * (0 + (-x141) * (-x692)) +
                   (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
                   (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                             (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (0 + (x182) * (0 + (-x141) * (-x692)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-x1040 * x141) * (-x692) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (0 + (-x141) * (-x692)) +
    (x1040 * x183 - x1048 * x121) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2074] = -60200000.0 * sc[2] * x293 + sc[4] * x4273 - x2663 * x459 +
            x293 * x3990 + x293 * x4028 - x3952 * x767 + x3958 * x459 -
            x3981 * x767 + x4403 + x4592 + x4594 + x4597 + x4599;
  J[2130] = -60200000.0 * sc[2] * x238 + x238 * x3972 + x238 * x3990 +
            x238 * x4028 + x4403 + x4591 + x4594 + x4597 + x4599;
  J[2186] = -x2663 * x460 + x3958 * x460 + x4735;
  J[2242] = -sc[2] * x4132 - x1391 * x3948 + x4735;
  J[2298] = x4735;
  J[2354] = x4735;
  J[2410] = -sc[2] * x4132 + x4735;
  J[2466] =
    x3948 + x4735 +
    (x37 * x52) * (0 + (-x113) * (0 + (-x141) * (-x710)) +
                   (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
                   (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                             (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (0 + (x182) * (0 + (-x141) * (-x710)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-x1040 * x141) * (-x710) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (0 + (-x141) * (-x710)) +
    (x1040 * x183 - x1048 * x121) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2522] =
    x4735 + x4887 +
    (x37 * x52) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x1040 * x141) * (x103 - x545) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x1040 * x183 - x1048 * x121) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2578] =
    -x101 * x1045 + x1040 * x135 + x4735 +
    (x37 * x52) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x1040 * x141) * (-x126) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x135 + (-x141) * (-x126)) +
    (x1040 * x183 - x1048 * x121) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2634] =
    x1040 * x461 - x1040 * x83 + x1045 * x107 - x129 * x52 + x4735 +
    (x37 * x52) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x1040 * x141) * (x481) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x461 + (-x141) * (x481)) +
    (x1040 * x183 - x1048 * x121) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2690] =
    x1040 * x130 + x1040 * x562 + x1045 * x566 - x1048 * x19 + x4735 -
    x52 * x555 - x52 * x558 +
    (x37 * x52) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x1040 * x141) * (x464) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x130 + (-x141) * (x464)) +
    (x1040 * x183 - x1048 * x121) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2746] =
    x1040 * x132 + x1040 * x967 + x1045 * x582 - x1048 * x573 + x4735 +
    (x37 * x52) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x1040 * x141) * (-x586) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x132 + (-x141) * (-x586)) +
    (x1040 * x183 - x1048 * x121) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2802] =
    x104 * x1045 + x1040 * x106 + x1040 * x50 + x1048 * x529 + x4735 +
    x52 * x594 +
    (x37 * x52) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (x1048 * x184 + x52 * x87 + x52 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x1040 * x141) * (x127) +
    (x1040 * x182 + x1045 * x181 - x1048 * x113 + x52 * x81) *
      (x106 + (-x141) * (x127)) +
    (x1040 * x183 - x1048 * x121) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2858] = x4735;
  J[2914] = x4735;
  J[2970] = 20000000.0 * sc[2] * x382 - x1392 * x3948 - x382 * x3977 -
            x382 * x3985 + x4218 + x4378 + x4602;
  J[3026] = x4735;
  J[3] =
    sc[10] * x2262 + sc[3] * x1 + 70000000.0 * sc[3] * x1325 - sc[3] * x2267 -
    7540000.0 * sc[3] * x519 + 7540000.0 * sc[3] * x528 +
    7540000.0 * sc[3] * x536 - 7540000.0 * sc[3] * x544 -
    7540000.0 * sc[3] * x557 + 4520000.0 * sc[3] * x579 -
    4520000.0 * sc[3] * x602 + 7540000.0 * sc[3] * x604 +
    4520000.0 * sc[3] * x681 - 4520000.0 * sc[3] * x734 + x1270 * x4959 -
    x1363 * x4922 - x190 * x4952 + x190 * x4973 + x190 * x4983 + x190 * x5015 -
    35000.0 * x196 * x2284 + x233 * x4952 - x233 * x4973 - x233 * x4983 -
    x233 * x5015 + x2434 - x339 * x3966 + x339 * x4963 - x383 * x4989 +
    x402 * x4989 + x445 * x4940 - x445 * x4978 + x448 * x4940 - x448 * x4978 +
    x466 * x552 - x476 * x552 - x491 * x557 + x491 * x604 - x4926 * x606 +
    x4935 * x681 - x4935 * x734 + x4967 * x550 + x4998 + x5006 + x5011 + x5027 -
    x505 * x512 + x512 * x92 - x519 * x570 + x528 * x570 + x536 * x570 -
    x544 * x570 + (50000000.0 * sc[3] * x5) * (x190 - x233) +
    (-x37 * x512) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x681 + x734) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[59] =
    70000000.0 * sc[3] * x1334 - 50000000.0 * sc[3] * x1491 - sc[3] * x2504 -
    7540000.0 * sc[3] * x511 - 7540000.0 * sc[3] * x521 +
    4520000.0 * sc[3] * x574 - 7540000.0 * sc[3] * x738 +
    7540000.0 * sc[3] * x742 - 4520000.0 * sc[3] * x756 -
    7540000.0 * sc[3] * x758 - 4520000.0 * sc[3] * x770 +
    7540000.0 * sc[3] * x771 + 4520000.0 * sc[3] * x772 - x1375 * x4922 +
    x248 * x4952 - x248 * x4973 - x248 * x4983 - x248 * x4995 - x248 * x5015 -
    x251 * x4952 + x251 * x4973 + x251 * x4983 + x251 * x4995 + x251 * x5015 +
    x2594 - 1618250000000000.0 * x3997 + 15425.0 * x4001 - x403 * x4989 +
    x404 * x4989 - x491 * x758 + x491 * x771 - x4926 * x617 - x4935 * x770 +
    x4935 * x772 + x5068 + x5080 - x511 * x570 - x521 * x570 - x570 * x738 +
    x570 * x742 + (50000000.0 * sc[3] * x5) * (-x248 + x251) +
    (-x37 * x512) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x770 - x772) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[115] =
    32500000.0 * sc[10] + 12340.0 * sc[2] * x196 * x3999 +
    70000000.0 * sc[3] * x1335 - 7540000.0 * sc[3] * x543 -
    4520000.0 * sc[3] * x745 + 7540000.0 * sc[3] * x753 +
    4520000.0 * sc[3] * x765 + 7540000.0 * sc[3] * x774 -
    7540000.0 * sc[3] * x790 - 7540000.0 * sc[3] * x792 -
    4520000.0 * sc[3] * x801 + 7540000.0 * sc[3] * x803 +
    4520000.0 * sc[3] * x804 - x1376 * x4922 + x2434 + x253 * x4952 -
    x253 * x4973 - x253 * x4983 - x253 * x5015 - x254 * x4952 + x254 * x4973 +
    x254 * x4983 + x254 * x5015 + x2652 - x285 * x3965 + x349 * x4963 +
    x352 * x3966 - x352 * x4963 - x405 * x4989 + x406 * x4989 + x4086 +
    x449 * x4940 - x449 * x4978 - x451 * x4978 + x488 * x4967 - x491 * x792 +
    x491 * x803 - x4926 * x640 + x493 * x512 - x4935 * x801 + x4935 * x804 +
    x5005 - x5009 + x5066 + x5109 + x512 * x789 + x5124 + x5143 - x543 * x570 -
    x552 * x644 + x552 * x683 + x570 * x753 + x570 * x774 - x570 * x790 +
    (50000000.0 * sc[3] * x5) * (-x253 + x254) +
    (-x37 * x512) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x801 - x804) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[171] =
    1000000.0 * kf_qss[122] * sc[3] * x1276 * x4957 +
    7540000.0 * kf_qss[145] * sc[3] * x1303 / ((x1302) * (x1302)) +
    kf_qss[165] * sc[3] * x444 * x4939 +
    70000000.0 * kf_qss[193] * sc[3] * x1333 +
    7540000.0 * kf_qss[374] * sc[3] * x1396 / ((x1394) * (x1394)) -
    1.389e+23 * kf_qss[376] * sc_qss[21] * x147 * x151 * x501 -
    1.389e+23 * kf_qss[378] * sc_qss[24] * x157 * x164 * x501 -
    6.969e+22 * kf_qss[380] * sc_qss[25] * x170 * x177 * x501 - sc[0] * x2267 -
    594200000000.0 * sc[11] * x5265 - 183900000.0 * sc[11] * x5267 -
    sc[12] * x5284 - sc[13] * x5165 - sc[15] * x5174 - sc[16] * x5155 -
    sc[19] * x5238 - sc[1] * x2504 - sc[20] * x5272 - sc[22] * x5152 -
    300000.0 * sc[24] * x1106 - 1000.0 * sc[25] - sc[28] * x5261 -
    sc[32] * x5162 - sc[38] * x5242 - 7540000.0 * sc[3] * x116 -
    7540000.0 * sc[3] * x1414 + 7540000.0 * sc[3] * x1418 -
    7540000.0 * sc[3] * x1442 + 7540000.0 * sc[3] * x1447 -
    7540000.0 * sc[3] * x1469 + 7540000.0 * sc[3] * x1473 -
    50000000.0 * sc[3] * x1492 + 7540000.0 * sc[3] * x741 -
    7540000.0 * sc[3] * x763 + 7540000.0 * sc[3] * x791 +
    4520000.0 * sc[3] * x797 - 4520000.0 * sc[3] * x800 -
    4520000.0 * sc[3] * x817 - 7540000.0 * sc[3] * x821 +
    7540000.0 * sc[3] * x841 + 4520000.0 * sc[3] * x842 - sc[40] * x5224 -
    sc[43] * x5224 - sc[4] * x4203 - sc[5] * x5168 - sc[9] * x5171 +
    50000000.0 * sc_qss[0] * x5 - 3.0e-15 * x1106 * x120 -
    6.0e-15 * x1106 * x41 - 3.0e-25 * x1106 * x678 * x733 -
    6.0e-15 * x1106 * x85 - 4520000.0 * x115 - x116 * x570 - 7540000.0 * x120 -
    35000.0 * x124 * x2282 * exp(x2270) + 70000000.0 * x1332 - x1377 * x4922 +
    50000000.0 * x194 -
    647300000000000.0 * x196 * exp(-61140.824895273399 * invT - 1.5 * tc[0]) -
    7580000.0 * x197 * exp(-206.318832979935 * invT) + x2434 + x256 * x4952 -
    x256 * x4973 - x256 * x4983 - x256 * x5015 - x258 * x4952 + x258 * x4973 +
    x258 * x4983 + x258 * x5015 +
    55000.0 * x285 * exp(-1219.7971979106401 * invT) + x353 * x4963 -
    x354 * x4963 + x401 * x4939 / x443 - x407 * x4989 - 7540000.0 * x41 -
    x4194 + x453 * x4940 + x488 * x4967 - x491 * x821 + x491 * x841 -
    x4926 * x645 - x4935 * x817 + x4935 * x842 - x4967 * x508 + x5005 +
    x512 * x809 - x5145 - x5159 - x5178 + x5257 + x5270 + x5282 + x5291 +
    x5304 + x552 * x785 + x570 * x741 - x570 * x763 + x570 * x791 -
    4520000.0 * x678 * x733 +
    42800.0 * x769 * exp(-552.02868238777796 * invT) / x773 - 7540000.0 * x85 -
    7540000.0 * x1471 / x1459 - 7540000.0 * x1445 / x1440 -
    7540000.0 * x1416 / x1405 + 7540000.0 * x1396 / x1394 +
    7540000.0 * x1303 / x1302 + 1000000.0 * x1275 * x4957 / x1268 +
    (-1.389e+23 * x151 * x153 * x501) * (x1414 - x1418) +
    (-1.389e+23 * x164 * x166 * x501) * (x1442 - x1447) +
    (-6.969e+22 * x177 * x179 * x501) * (x1469 - x1473) +
    (50000000.0 * sc[3] * x5) * (-x256 + x258) +
    (-x37 * x512) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x817 - x842) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[227] =
    kf_qss[125] * x1276 * x4959 + sc[10] * x5310 + sc[12] * x5361 +
    sc[19] * x5308 + sc[34] * x5306 + 70000000.0 * sc[3] * x1337 +
    70000000.0 * sc[3] * x1339 + 7540000.0 * sc[3] * x1404 -
    7540000.0 * sc[3] * x1425 + 7540000.0 * sc[3] * x1439 -
    7540000.0 * sc[3] * x1452 + 7540000.0 * sc[3] * x1458 -
    7540000.0 * sc[3] * x1479 - 50000000.0 * sc[3] * x1493 - sc[3] * x4203 +
    7540000.0 * sc[3] * x468 - 7540000.0 * sc[3] * x669 -
    7540000.0 * sc[3] * x793 + 7540000.0 * sc[3] * x796 +
    7540000.0 * sc[3] * x811 + 4520000.0 * sc[3] * x813 -
    7540000.0 * sc[3] * x823 - 4520000.0 * sc[3] * x829 -
    4520000.0 * sc[3] * x839 + 4520000.0 * sc[3] * x872 - x1378 * x4922 -
    x1379 * x4922 + 1.389e+23 * x1421 * x501 -
    1.389e+23 * x1423 * x501 * (-sc_qss[21] * x153 + x1411) +
    1.389e+23 * x1449 * x501 -
    1.389e+23 * x1451 * x501 * (-sc_qss[24] * x166 + x1435) +
    6.969e+22 * x1475 * x501 -
    6.969e+22 * x1477 * x501 * (-sc_qss[25] * x179 + x1466) + x240 * x3966 -
    x240 * x4963 + x2434 + x260 * x4952 - x260 * x4973 - x260 * x4983 -
    x260 * x4995 - x260 * x5015 - x263 * x4952 + x263 * x4973 + x263 * x4983 +
    x263 * x4995 + x263 * x5015 + x2788 + x349 * x4963 - x409 * x4989 +
    x410 * x4989 + x468 * x491 + x488 * x4967 - x491 * x669 - x4926 * x647 -
    x4926 * x658 - x4935 * x829 + x4935 * x872 - x4967 * x531 + x5005 + x5066 +
    x512 * x820 + x512 * x837 + x5372 + x552 * x68 - x552 * x807 - x570 * x793 +
    x570 * x796 + x570 * x811 - x570 * x823 +
    (-1.389e+23 * x151 * x153 * x501) * (-x1404 + x1425) +
    (-1.389e+23 * x164 * x166 * x501) * (-x1439 + x1452) +
    (-6.969e+22 * x177 * x179 * x501) * (-x1458 + x1479) +
    (50000000.0 * sc[3] * x5) * (-x260 + x263) +
    (-x37 * x512) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x829 - x872) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[283] =
    70000000.0 * sc[3] * x1340 - 50000000.0 * sc[3] * x245 - sc[3] * x5168 -
    7540000.0 * sc[3] * x799 + 7540000.0 * sc[3] * x812 -
    7540000.0 * sc[3] * x826 - 7540000.0 * sc[3] * x827 -
    4520000.0 * sc[3] * x833 + 4520000.0 * sc[3] * x840 -
    7540000.0 * sc[3] * x869 - 4520000.0 * sc[3] * x895 +
    7540000.0 * sc[3] * x896 + 4520000.0 * sc[3] * x897 - x1380 * x4922 +
    x265 * x4952 - x265 * x4973 - x265 * x4983 - x265 * x4995 - x265 * x5015 -
    x267 * x4952 + x267 * x4973 + x267 * x4983 + x267 * x4995 + x267 * x5015 +
    x2938 - 7767600000000000.0 * x3997 + 74040.0 * x4001 + x413 * x4989 -
    x491 * x869 + x491 * x896 - x4926 * x672 - x4935 * x895 + x4935 * x897 +
    x5068 + x5406 + x5423 - x570 * x799 + x570 * x812 - x570 * x826 -
    x570 * x827 + (50000000.0 * sc[3] * x5) * (-x265 + x267) +
    (-x37 * x512) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x895 - x897) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[339] =
    sc[10] * x5430 + 70000000.0 * sc[3] * x1341 + 70000000.0 * sc[3] * x1342 -
    4520000.0 * sc[3] * x909 - 4520000.0 * sc[3] * x913 - x1382 * x4922 +
    x269 * x4952 - x269 * x4973 - x269 * x4983 - x269 * x4995 - x269 * x5015 -
    x270 * x4952 + x270 * x4973 + x270 * x4983 + x270 * x4995 + x270 * x5015 +
    x2995 - 1229870000000000.0 * x3997 + 11723.0 * x4001 - x416 * x4989 -
    x4363 - x4926 * x680 - x4935 * x909 - x4935 * x913 + x5068 + x5270 +
    (50000000.0 * sc[3] * x5) * (-x269 + x270) +
    (-x37 * x512) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x909 + x913) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (0 + (-x141) * (x909 + x913)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[395] = 70000000.0 * sc[3] * x1343 - x188 * x4952 + x188 * x4973 +
           x188 * x4983 + x188 * x4995 + x188 * x5015 +
           147400000.0 * x197 * exp(-67229.7465515105 * invT) + x272 * x4952 -
           x272 * x4973 - x272 * x4983 - x272 * x4995 - x272 * x5015 + x3054 -
           2459740000000000.0 * x3997 + 23446.0 * x4001 + x4393 + x5068 +
           x5270 + x5406 + (50000000.0 * sc[3] * x5) * (x188 - x272);
  J[451] =
    3600000.0 * sc[10] + 70000000.0 * sc[3] * x1344 +
    70000000.0 * sc[3] * x1345 + 7540000.0 * sc[3] * x844 -
    7540000.0 * sc[3] * x915 - 4520000.0 * sc[3] * x919 -
    7540000.0 * sc[3] * x920 + 4520000.0 * sc[3] * x922 + x1043 * x915 +
    x1043 * x920 - x1383 * x4922 + x2434 - x274 * x4952 + x274 * x4973 +
    x274 * x4983 + x274 * x4995 + x274 * x5015 + x275 * x4952 - x275 * x4973 -
    x275 * x4983 - x275 * x4995 - x275 * x5015 + x356 * x4963 - x375 * x4989 +
    x419 * x4989 - x491 * x920 - x4926 * x689 - x4926 * x693 + x4935 * x922 +
    x4967 * x572 + x5006 + x5011 + x5509 + x570 * x844 - x570 * x915 +
    x597 * x919 - x723 * x844 + (50000000.0 * sc[3] * x5) * (x274 - x275) +
    (-x37 * x512) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x922) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x920 + (-x141) * (-x922)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[507] =
    70000000.0 * sc[3] * x1346 - sc[3] * x5171 - 7540000.0 * sc[3] * x834 +
    7540000.0 * sc[3] * x835 - 7540000.0 * sc[3] * x838 -
    7540000.0 * sc[3] * x859 + 4520000.0 * sc[3] * x865 -
    4520000.0 * sc[3] * x868 - 7540000.0 * sc[3] * x885 -
    4520000.0 * sc[3] * x935 + 7540000.0 * sc[3] * x936 +
    4520000.0 * sc[3] * x937 - x1384 * x4922 + x2434 + x278 * x4952 -
    x278 * x4973 - x278 * x4983 - x278 * x4995 - x278 * x5015 - x279 * x4952 +
    x279 * x4973 + x279 * x4983 + x279 * x4995 + x279 * x5015 - x420 * x4989 +
    x421 * x4989 - x491 * x885 + x491 * x936 + x4926 * x628 - x4935 * x935 +
    x4935 * x937 + x5068 + x5559 - x570 * x834 + x570 * x835 - x570 * x838 -
    x570 * x859 + (50000000.0 * sc[3] * x5) * (-x278 + x279) +
    (-x37 * x512) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x935 - x937) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[563] =
    sc[0] * x2262 + 260000.0 * sc[10] * exp(819.73994859588799 * invT) +
    840000000.0 * sc[10] * exp(-6028.5356563405403 * invT) + sc[12] * x5607 +
    sc[14] * x5581 + sc[15] * x5577 + sc[16] * x5638 + sc[17] * x5584 +
    sc[20] * x5624 + sc[21] * x5564 + 200000.0 * sc[22] * x5566 +
    300000.0 * sc[25] + 2.0e-25 * sc[26] * x5566 + 32500000.0 * sc[2] +
    128800.0 * sc[34] * x3886 + sc[37] * x5572 + sc[38] * x5562 -
    4520000.0 * sc[3] * x465 + 7540000.0 * sc[3] * x546 +
    7540000.0 * sc[3] * x831 - 7540000.0 * sc[3] * x836 +
    4520000.0 * sc[3] * x863 - 7540000.0 * sc[3] * x870 +
    7540000.0 * sc[3] * x877 - 4520000.0 * sc[3] * x893 -
    7540000.0 * sc[3] * x926 + 4520000.0 * sc[3] * x977 + sc[4] * x5310 +
    sc[6] * x5430 + 3600000.0 * sc[8] + x1279 * x4959 + x197 * x5014 +
    x21 * x512 + 35000.0 * x2411 * x2413 + x2434 + x281 * x4952 - x281 * x4973 -
    x281 * x4983 - x281 * x4995 - x281 * x5015 - x282 * x4952 + x282 * x4973 +
    x282 * x4983 + x282 * x4995 + x282 * x5015 - x357 * x3966 + x357 * x4963 -
    x370 * x4988 - x422 * x4989 + x423 * x4989 - x465 * x4935 - x470 * x552 +
    x491 * x546 - x491 * x926 + x4935 * x977 + x4967 * x97 + x5006 + x5011 -
    x512 * x86 + x552 * x79 + x5561 + x5570 + x5576 + x5636 + x5645 + x5669 +
    x570 * x831 - x570 * x836 - x570 * x870 + x570 * x877 + x576 * x77 * x80 +
    x616 * x747 / x34 + (50000000.0 * sc[3] * x5) * (-x281 + x282) +
    (-x37 * x512) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x465 - x977) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[619] =
    -4520000.0 * sc[3] * x1001 + 7540000.0 * sc[3] * x1004 +
    4520000.0 * sc[3] * x1005 - 7540000.0 * sc[3] * x498 -
    594200000000.0 * sc[3] * x5265 - 183900000.0 * sc[3] * x5267 -
    7540000.0 * sc[3] * x700 + 7540000.0 * sc[3] * x864 -
    4520000.0 * sc[3] * x889 + 4520000.0 * sc[3] * x894 -
    7540000.0 * sc[3] * x899 - 7540000.0 * sc[3] * x924 - x1001 * x4935 +
    x1004 * x491 + x1005 * x4935 - x1387 * x4922 + x2434 + x284 * x4952 -
    x284 * x4973 - x284 * x4983 - x284 * x4995 - x284 * x5015 - x286 * x4952 +
    x286 * x4973 + x286 * x4983 + x286 * x4995 + x286 * x5015 + x424 * x4989 -
    x491 * x700 - x4926 * x717 - x498 * x570 + x5068 + x5406 + x570 * x864 -
    x570 * x899 - x570 * x924 + x5718 +
    (50000000.0 * sc[3] * x5) * (-x284 + x286) +
    (-x37 * x512) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1001 - x1005) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[675] = -kf_qss[168] * sc[12] * x444 * x4977 + sc[10] * x5607 +
           70000000.0 * sc[3] * x1347 - sc[3] * x5284 + sc[4] * x5361 +
           x197 * x4994 + x2434 + x288 * x4952 - x288 * x4973 - x288 * x4983 -
           x288 * x4995 - x288 * x5015 - x289 * x4952 + x289 * x4973 +
           x289 * x4983 + x289 * x4995 + x289 * x5015 - x331 * x3966 +
           x331 * x4963 - x3958 * x454 - x401 * x4977 / x443 + x454 * x4940 +
           x485 * x4967 + x5006 + x5011 + x5270 + x5406 + x5722 +
           (50000000.0 * sc[3] * x5) * (-x288 + x289);
  J[731] =
    -7540000.0 * sc[3] * x1000 + 7540000.0 * sc[3] * x1026 +
    4520000.0 * sc[3] * x1027 + 70000000.0 * sc[3] * x1348 - sc[3] * x5165 -
    4520000.0 * sc[3] * x553 + 7540000.0 * sc[3] * x861 -
    7540000.0 * sc[3] * x866 - 7540000.0 * sc[3] * x925 +
    4520000.0 * sc[3] * x932 - 4520000.0 * sc[3] * x934 -
    7540000.0 * sc[3] * x938 - x1000 * x491 + x1026 * x491 + x1027 * x4935 +
    x2434 + x425 * x4989 - x4926 * x724 - x4935 * x553 + x5068 + x5406 +
    x570 * x861 - x570 * x866 - x570 * x925 - x570 * x938 + x5784 + x5788 +
    x5799 + (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x1027 + x553) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[787] =
    -kf_qss[100] * ((sc[2]) * (sc[2])) * x3957 / x443 + sc[10] * x5581 -
    7540000.0 * sc[3] * x1014 - 4520000.0 * sc[3] * x1039 +
    7540000.0 * sc[3] * x1046 + 4520000.0 * sc[3] * x1047 +
    70000000.0 * sc[3] * x1349 - 7540000.0 * sc[3] * x887 +
    7540000.0 * sc[3] * x890 + 4520000.0 * sc[3] * x929 -
    7540000.0 * sc[3] * x963 - 7540000.0 * sc[3] * x966 -
    4520000.0 * sc[3] * x974 - x1014 * x491 - x1039 * x4935 + x1046 * x491 +
    x1047 * x4935 - x295 * x4952 + x295 * x4973 + x295 * x4983 + x295 * x4995 +
    x295 * x5015 - x455 * x4978 - x4926 * x725 - x570 * x887 + x570 * x890 -
    x570 * x963 - x570 * x966 + x5774 + x5812 - x5819 + x5834 + x5845 +
    (50000000.0 * sc[3] * x5) * (-x290 + x295) +
    (-x37 * x512) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1039 - x1047) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[843] =
    sc[10] * x5577 + 7540000.0 * sc[3] * x1041 - 7540000.0 * sc[3] * x1055 -
    4520000.0 * sc[3] * x1056 - 7540000.0 * sc[3] * x1057 -
    4520000.0 * sc[3] * x1058 + 70000000.0 * sc[3] * x1350 - sc[3] * x5174 +
    x1041 * x570 - x1041 * x723 + x1043 * x1055 + x1043 * x1057 - x1055 * x570 +
    x1056 * x597 - x1057 * x491 - x1058 * x4935 + x1264 * x4967 + x2434 +
    x297 * x4952 - x297 * x4973 - x297 * x4983 - x297 * x4995 - x297 * x5015 -
    x298 * x4952 + x298 * x4973 + x298 * x4983 + x298 * x4995 + x298 * x5015 +
    x349 * x4963 + x426 * x4989 - x4926 * x727 + x5006 + x5011 + x5066 + x5406 +
    (50000000.0 * sc[3] * x5) * (-x297 + x298) +
    (-x37 * x512) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1058) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1057 + (-x141) * (x1058)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[899] = sc[10] * x5638 + 50000000.0 * sc[3] * x249 - sc[3] * x5155 +
           x228 * x4952 - x228 * x4973 - x228 * x4983 - x228 * x4995 -
           x228 * x5015 - x231 * x4952 + x231 * x4973 + x231 * x4983 +
           x231 * x4995 + x231 * x5015 + x2434 + x5068 + x5270 + x5406 +
           (50000000.0 * sc[3] * x5) * (-x228 + x231);
  J[955] =
    kf_qss[104] * x5912 + sc[10] * x5584 - 7540000.0 * sc[3] * x1060 -
    4520000.0 * sc[3] * x1061 - 7540000.0 * sc[3] * x1062 +
    4520000.0 * sc[3] * x1063 + 7540000.0 * sc[3] * x39 + x1043 * x1060 +
    x1043 * x1062 - x1060 * x570 + x1061 * x597 - x1062 * x491 + x1063 * x4935 +
    x1282 * x4959 - x303 * x4952 + x303 * x4973 + x303 * x4983 + x303 * x5015 +
    x39 * x570 - x39 * x723 - x457 * x4978 - x4926 * x728 + x5774 + x5834 +
    x5930 + (50000000.0 * sc[3] * x5) * (-x290 + x303) +
    (-x37 * x512) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x1063) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1062 + (-x141) * (-x1063)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1011] = 70000000.0 * sc[3] * x1351 +
            488100.0 * x197 * exp(-29926.295115406701 * invT) + x2434 +
            x305 * x4952 - x305 * x4973 - x305 * x4983 - x305 * x4995 -
            x305 * x5015 - x306 * x4952 + x306 * x4973 + x306 * x4983 +
            x306 * x4995 + x306 * x5015 - x3958 * x458 - x427 * x4989 +
            x458 * x4940 - x458 * x4978 + x5068 + x5270 +
            (50000000.0 * sc[3] * x5) * (-x305 + x306);
  J[1067] = 70000000.0 * sc[3] * x1353 - sc[3] * x5238 + sc[4] * x5308 -
            x307 * x4952 + x307 * x4973 + x307 * x4983 + x307 * x4995 +
            x307 * x5015 + x5774 + x5834 +
            (50000000.0 * sc[3] * x5) * (-x290 + x307);
  J[1123] = sc[10] * x5624 - sc[3] * x5272 + x2434 - x308 * x4952 +
            x308 * x4973 + x308 * x4983 + x308 * x4995 + x308 * x5015 +
            x349 * x4963 - x428 * x4989 + x4967 * x569 + x5006 + x5011 + x5066 +
            x5270 + x5774 + x5778 - x5781 + x5788 +
            (50000000.0 * sc[3] * x5) * (-x290 + x308);
  J[1179] = sc[10] * x5564 - x5972 + x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[1235] =
    200000.0 * sc[10] * x5566 + 7540000.0 * sc[3] * x1033 +
    4520000.0 * sc[3] * x1067 - 4520000.0 * sc[3] * x1068 - sc[3] * x5152 -
    x1033 * x1043 + x1033 * x491 + x1067 * x4935 - x1068 * x4935 -
    x309 * x4952 + x309 * x4973 + x309 * x4983 + x309 * x4995 + x309 * x5015 -
    x4926 * x561 + x5774 + x5834 + (50000000.0 * sc[3] * x5) * (-x290 + x309) +
    (-x37 * x512) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x1067 + x1068) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (-x1033 + (-x141) * (-x1067 + x1068)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1291] = x5974 + x5994 + (50000000.0 * sc[3] * x5) * (x294);
  J[1347] =
    -sc[10] * sc[25] * x1071 * x576 - 4520000.0 * sc[3] * x1070 -
    7540000.0 * sc[3] * x1076 - 4520000.0 * sc[3] * x1079 -
    7540000.0 * sc[3] * x1082 - 300000.0 * sc[3] * x1106 -
    4520000.0 * sc[3] * x463 - 7540000.0 * sc[3] * x643 + x1043 * x1076 +
    x1043 * x1082 - x1070 * x4935 - x1076 * x570 + x1079 * x597 - x1082 * x491 +
    x112 * x38 * x599 * x6002 - x1388 * x4922 - x463 * x4935 - x570 * x643 +
    x5974 - x6002 * x747 + (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1070 + x463) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1082 + (-x141) * (x1070 + x463)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1403] =
    300000.0 * sc[10] - 7540000.0 * sc[3] * x1086 - 4520000.0 * sc[3] * x1087 -
    7540000.0 * sc[3] * x1088 - 4520000.0 * sc[3] * x1089 -
    7540000.0 * sc[3] * x684 - 1000.0 * sc[3] + x1043 * x1086 + x1043 * x1088 -
    x1085 * x552 - x1086 * x570 + x1087 * x597 - x1088 * x491 - x1089 * x4935 -
    x4926 * x751 - x512 * x677 - x570 * x684 + x5974 + x684 * x723 +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1089) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1088 + (-x141) * (x1089)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1459] =
    2.0e-25 * sc[10] * x5566 - 7540000.0 * sc[3] * x1092 -
    4520000.0 * sc[3] * x1093 + 7540000.0 * sc[3] * x891 -
    4520000.0 * sc[3] * x975 + x1043 * x1092 - x1043 * x891 - x1092 * x491 -
    x1093 * x4935 + x2434 - x429 * x4989 - x4926 * x755 - x4926 * x759 + x5068 +
    x5270 + x570 * x891 + x5784 + x5788 + x597 * x975 - x6040 +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1093) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1092 + (-x141) * (x1093)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1515] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[1571] = -sc[3] * x5261 - x310 * x4952 + x310 * x4973 + x310 * x4983 +
            x310 * x4995 + x310 * x5015 - x4926 * x760 + x5774 + x5834 +
            (50000000.0 * sc[3] * x5) * (-x290 + x310);
  J[1627] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[1683] =
    7540000.0 * sc[3] * x1095 - 4520000.0 * sc[3] * x1097 -
    7540000.0 * sc[3] * x1098 - 4520000.0 * sc[3] * x1099 -
    7540000.0 * sc[3] * x886 + x1043 * x1098 + x1043 * x886 + x1095 * x570 -
    x1095 * x723 + x1097 * x597 - x1098 * x491 - x1099 * x4935 + x2434 -
    x430 * x4989 + x5068 + x5270 - x570 * x886 + x5784 + x5788 +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x1099) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x1098 + (-x141) * (x1099)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1739] =
    28000000000.0 * sc[31] * exp(-935.98299839677895 * invT - 1.61 * tc[0]) -
    7540000.0 * sc[3] * x1100 + 4520000.0 * sc[3] * x1104 -
    4520000.0 * sc[3] * x707 - 7540000.0 * sc[3] * x726 +
    7540000.0 * sc[3] * x968 + x1043 * x1100 + x1043 * x726 - x1100 * x570 +
    x1104 * x4935 - x1389 * x4922 + x186 * x5003 + x2434 - x311 * x4952 +
    x311 * x4973 + x311 * x4983 + x311 * x4995 + x311 * x5015 - x361 * x3966 +
    x361 * x4963 - x431 * x4989 + x488 * x4967 - x491 * x726 - x4926 * x762 +
    x5006 + x5011 + x5270 + x570 * x968 + x5774 + x5778 - x5781 + x5788 +
    x597 * x707 + x6090 - x723 * x968 +
    (50000000.0 * sc[3] * x5) * (-x290 + x311) +
    (-x37 * x512) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x1104) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x726 + (-x141) * (-x1104)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1795] =
    -7540000.0 * sc[3] * x1002 - sc[3] * x5162 + 7540000.0 * sc[3] * x564 +
    4520000.0 * sc[3] * x585 - 7540000.0 * sc[3] * x587 -
    7540000.0 * sc[3] * x612 + 4520000.0 * sc[3] * x682 -
    4520000.0 * sc[3] * x688 - 7540000.0 * sc[3] * x928 +
    7540000.0 * sc[3] * x930 - 4520000.0 * sc[3] * x999 - x1002 * x570 -
    x1390 * x4922 - x189 * x4952 + x189 * x4973 + x189 * x4983 + x189 * x4995 +
    x189 * x5015 + x232 * x4952 - x232 * x4973 - x232 * x4983 - x232 * x4995 -
    x232 * x5015 + x2434 - x338 * x3966 + x338 * x4963 + x367 * x4989 +
    x488 * x4967 + x491 * x564 - x491 * x612 - x4926 * x764 + x4935 * x585 -
    x4935 * x688 + x5006 + x5011 + x5406 - x570 * x587 - x570 * x928 +
    x570 * x930 + x6166 + (50000000.0 * sc[3] * x5) * (x189 - x232) +
    (-x37 * x512) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x585 + x688) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1851] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[1907] = 128800.0 * sc[10] * x3886 + sc[4] * x5306 + x1283 * x4959 + x5974 +
            (50000000.0 * sc[3] * x5) * (x294);
  J[1963] = 7540000.0 * sc[3] * x1307 + x5974 +
            5.601e+22 * exp(-19102.104633947201 * invT - 2.23 * tc[0]) +
            (50000000.0 * sc[3] * x5) * (x294);
  J[2019] = 7540000.0 * sc[3] * x1308 + 4520000.0 * sc[3] * x692 +
            x4935 * x692 + x5974 +
            6.155e+19 * exp(-17869.223802725599 * invT - 1.38 * tc[0]) +
            (50000000.0 * sc[3] * x5) * (x294) +
            (-x37 * x512) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 -
             x512 * x87 - x552 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x692) +
            (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
             7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 -
             x113 * x723 + x181 * x597 - x182 * x570 - x552 * x81) *
              (0 + (-x141) * (-x692)) +
            (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 +
             x1043 * x183 + x121 * x570 - x121 * x723 - x183 * x570) *
              (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2075] = kf_qss[167] * x5912 + sc[10] * x5572 + x1284 * x4959 -
            x3958 * x459 - x4926 * x767 + x5974 + x6189 +
            (50000000.0 * sc[3] * x5) * (x294);
  J[2131] = sc[10] * x5562 + 50000000.0 * sc[3] * x239 - sc[3] * x5242 -
            x238 * x4952 + x238 * x4973 + x238 * x4983 + x238 * x4995 +
            x238 * x5015 + x5774 + x5834 +
            (50000000.0 * sc[3] * x5) * (x238 - x290);
  J[2187] = -x3958 * x460 + x460 * x4940 - x460 * x4978 + x5974 +
            (50000000.0 * sc[3] * x5) * (x294);
  J[2243] =
    -sc[3] * x5224 - x1391 * x4922 + x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[2299] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[2355] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[2411] = -sc[3] * x5224 + x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[2467] = 4520000.0 * sc[3] * x710 + x4935 * x710 + x5974 + x6208 +
            (50000000.0 * sc[3] * x5) * (x294) +
            (-x37 * x512) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 -
             x512 * x87 - x552 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x710) +
            (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
             7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 -
             x113 * x723 + x181 * x597 - x182 * x570 - x552 * x81) *
              (0 + (-x141) * (-x710)) +
            (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 +
             x1043 * x183 + x121 * x570 - x121 * x723 - x183 * x570) *
              (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2523] =
    4520000.0 * sc[3] * x1003 - 4520000.0 * sc[3] * x103 +
    7540000.0 * sc[3] * x482 + 7540000.0 * sc[3] * x524 +
    4520000.0 * sc[3] * x545 - 7540000.0 * sc[3] * x7 -
    7540000.0 * sc[3] * x712 + 7540000.0 * sc[3] * x927 -
    7540000.0 * sc[3] * x933 - 4520000.0 * sc[3] * x970 - x103 * x4935 +
    x482 * x491 - x491 * x712 + x4935 * x545 + x524 * x570 - x570 * x7 +
    x570 * x927 - x570 * x933 + x5974 + x6239 +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x103 - x545) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2579] =
    4520000.0 * sc[3] * x101 + 4520000.0 * sc[3] * x126 -
    7540000.0 * sc[3] * x135 + 7540000.0 * sc[3] * x1399 - x101 * x597 +
    x1043 * x135 + x126 * x4935 - x135 * x491 + x5974 +
    2.657e+20 * exp(-17813.869969487099 * invT - 1.67 * tc[0]) +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x126) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x135 + (-x141) * (-x126)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2635] =
    7540000.0 * kf_qss[349] * sc[3] / (x1401 * x1405) -
    4520000.0 * sc[3] * x107 - 7540000.0 * sc[3] * x461 -
    4520000.0 * sc[3] * x481 + 7540000.0 * sc[3] * x83 + x1043 * x461 -
    x1043 * x83 + x107 * x597 + x129 * x552 - x461 * x491 - x481 * x4935 +
    x570 * x83 + x5974 + x6262 + (-1.389e+23 * x151 * x153 * x501) * (-x1428) +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x481) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x461 + (-x141) * (x481)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2691] =
    -7540000.0 * sc[3] * x130 + 7540000.0 * sc[3] * x1430 +
    7540000.0 * sc[3] * x19 - 4520000.0 * sc[3] * x464 -
    7540000.0 * sc[3] * x562 - 4520000.0 * sc[3] * x566 + x1043 * x130 +
    x1043 * x562 - x130 * x491 + x19 * x570 - x19 * x723 - x464 * x4935 +
    x512 * x555 + x552 * x558 - x562 * x570 + x566 * x597 + x5974 +
    9.879e+21 * exp(-19051.7829673667 * invT - 1.97 * tc[0]) +
    (-1.389e+23 * x164 * x166 * x501) * (-x1430) +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x464) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x130 + (-x141) * (x464)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2747] =
    7540000.0 * kf_qss[357] * sc[3] / (x1455 * x1459) -
    7540000.0 * sc[3] * x132 + 7540000.0 * sc[3] * x573 -
    4520000.0 * sc[3] * x582 + 4520000.0 * sc[3] * x586 -
    7540000.0 * sc[3] * x967 + x1043 * x132 + x1043 * x967 - x132 * x491 +
    x4935 * x586 + x570 * x573 - x570 * x967 - x573 * x723 + x582 * x597 +
    x5974 + x6262 + (-6.969e+22 * x177 * x179 * x501) * (-x1482) +
    (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (-x586) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x132 + (-x141) * (-x586)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2803] =
    -4520000.0 * sc[3] * x104 - 7540000.0 * sc[3] * x106 -
    4520000.0 * sc[3] * x127 - 7540000.0 * sc[3] * x50 -
    7540000.0 * sc[3] * x529 + x104 * x597 + x1043 * x106 + x1043 * x50 -
    x106 * x491 - x127 * x4935 - x50 * x570 - x512 * x594 - x529 * x570 +
    x529 * x723 + x5974 + (50000000.0 * sc[3] * x5) * (x294) +
    (-x37 * x512) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-7540000.0 * sc[3] * x184 - x184 * x570 + x184 * x723 - x512 * x87 -
     x552 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (7540000.0 * sc[3] * x141 - x1043 * x141 + x141 * x491) * (x127) +
    (7540000.0 * sc[3] * x113 - 4520000.0 * sc[3] * x181 -
     7540000.0 * sc[3] * x182 + x1043 * x182 + x113 * x570 - x113 * x723 +
     x181 * x597 - x182 * x570 - x552 * x81) *
      (x106 + (-x141) * (x127)) +
    (7540000.0 * sc[3] * x121 - 7540000.0 * sc[3] * x183 + x1043 * x183 +
     x121 * x570 - x121 * x723 - x183 * x570) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2859] = 7540000.0 * sc[3] * x1400 + x5974 +
            1.367e+23 * exp(-18941.075300889599 * invT - 2.37 * tc[0]) +
            (50000000.0 * sc[3] * x5) * (x294);
  J[2915] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[2971] = -x1392 * x4922 + x2434 - x382 * x4989 + x5068 + x5270 + x5784 +
            x5788 + (50000000.0 * sc[3] * x5) * (x294);
  J[3027] = x5974 + (50000000.0 * sc[3] * x5) * (x294);
  J[4] =
    141600000.0 * sc[10] * x2264 + sc[11] * x2146 + sc[12] * x2222 +
    sc[18] * x2121 + 30200000.0 * sc[2] * x190 - 30200000.0 * sc[2] * x233 -
    20000000.0 * sc[2] * x383 + 20000000.0 * sc[2] * x402 -
    70000000.0 * sc[3] * x1325 + sc[3] * x2267 + sc[4] * x1 +
    30000000.0 * sc[4] * x1325 - 102000000.0 * sc[4] * x190 - sc[4] * x2292 +
    102000000.0 * sc[4] * x233 + sc[5] * x1989 + sc[7] * x2103 + x1040 * x536 -
    x1040 * x544 - x1040 * x557 + x1040 * x604 + x1045 * x579 - x1045 * x602 -
    x1048 * x519 + x1048 * x528 + x1270 * x6356 - x1325 * x6330 +
    x1363 * x3948 - x1363 * x6317 - x190 * x4028 + x190 * x6344 + x190 * x6377 -
    x196 * x2289 + x2001 + x233 * x4028 - x233 * x6344 - x233 * x6377 -
    x242 * x513 + x339 * x6334 + x339 * x6338 + x383 * x3985 - x383 * x6360 -
    x383 * x6369 + x3952 * x606 - x3985 * x402 + x402 * x6360 + x402 * x6369 -
    x445 * x4940 - x448 * x4940 - x466 * x554 + x476 * x554 + x505 * x554 +
    x550 * x6341 - x554 * x92 - x606 * x6324 - x606 * x6364 + x6421 + x6428 +
    x6438 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x190 - x233) +
    (x37 * x554) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (x1040 * x141 - x141 * x595) * (-x681 + x734) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[60] =
    sc[12] * x3846 - 30200000.0 * sc[2] * x248 + 30200000.0 * sc[2] * x251 +
    sc[2] * x2598 - 20000000.0 * sc[2] * x403 + 20000000.0 * sc[2] * x404 -
    70000000.0 * sc[3] * x1334 + 30000000.0 * sc[4] * x1334 -
    50000000.0 * sc[4] * x1491 + 102000000.0 * sc[4] * x248 - sc[4] * x2491 -
    102000000.0 * sc[4] * x251 - x1040 * x511 + x1040 * x742 - x1040 * x758 +
    x1040 * x771 + x1045 * x574 - x1045 * x756 - x1048 * x521 - x1048 * x738 -
    x1334 * x6330 + x1375 * x3948 - x1375 * x6317 + x1491 * x513 +
    11800000.0 * x2401 + 4.5925e+21 * x2436 + x248 * x4028 - x248 * x6344 -
    x248 * x6377 - x251 * x4028 + x251 * x6344 + x251 * x6377 -
    9.7725e+16 * x2559 - 56250000000.0 * x2595 + x3952 * x617 + x3985 * x403 -
    x3985 * x404 - x403 * x6360 - x403 * x6369 + x404 * x6360 + x404 * x6369 -
    x617 * x6324 - x617 * x6364 - x6386 * (5.0 * x6405 + 0.7 * x6406) +
    3.7409712783171501e+29 * x6388 - 3.7409712783171501e+29 * x6393 * x6396 +
    1.5205e+19 * x6403 - 1.5205e+19 * x6417 +
    x6420 * (5.0 * x6405 + 0.7 * x6406) + x6461 + x6476 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x248 + x251) +
    (x37 * x554) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x1040 * x141 - x141 * x595) * (x770 - x772) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[116] =
    32500000.0 * sc[10] + sc[11] * x4100 + sc[12] * x4172 + sc[13] * x4092 +
    10000000.0 * sc[18] * x2130 + sc[1] * x2598 + sc[20] * x4128 +
    sc[22] * x4146 + sc[28] * x4132 - 30200000.0 * sc[2] * x253 +
    30200000.0 * sc[2] * x254 - 20000000.0 * sc[2] * x405 +
    20000000.0 * sc[2] * x406 + sc[30] * x4141 + sc[34] * x4128 -
    70000000.0 * sc[3] * x1335 + sc[40] * x4132 + sc[43] * x4132 +
    sc[45] * x4184 + sc[45] * x4187 + 30000000.0 * sc[4] * x1335 +
    102000000.0 * sc[4] * x253 - 102000000.0 * sc[4] * x254 +
    5.94 * sc[5] * x4097 + sc[9] * x4103 - x1040 * x543 + x1040 * x753 -
    x1040 * x792 + x1040 * x803 - x1045 * x745 + x1045 * x765 + x1048 * x774 -
    x1048 * x790 + 4720000.0 * x124 * exp(-tc[0]) - x1335 * x6330 +
    x1376 * x3948 - x1376 * x6317 + 30200000.0 * x197 + x253 * x4028 -
    x253 * x6344 - x253 * x6377 - x254 * x4028 + x254 * x6344 + x254 * x6377 -
    x2652 + x349 * x6334 + x349 * x6338 - x352 * x6334 - x352 * x6338 -
    20000000.0 * x370 + x3952 * x640 + x3985 * x405 - x3985 * x406 -
    x405 * x6360 - x405 * x6369 + x406 * x6360 + x406 * x6369 - x449 * x4940 -
    x493 * x554 - x5109 + x554 * x644 - x554 * x683 - x554 * x789 -
    x6324 * x640 - x6364 * x640 + x6421 - x6424 + x6459 + x6516 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x253 + x254) +
    (x37 * x554) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (x1040 * x141 - x141 * x595) * (x801 - x804) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[172] =
    kf_qss[122] * x1276 * x6356 - kf_qss[165] * sc[3] * x444 * x4939 -
    70000000.0 * kf_qss[193] * sc[3] * x1333 -
    kf_qss[374] * x1396 * x6530 / ((x1394) * (x1394)) -
    kf_qss[376] * sc_qss[21] * x118 * x147 * x151 -
    kf_qss[378] * sc_qss[24] * x118 * x157 * x164 -
    kf_qss[380] * sc_qss[25] * x118 * x170 * x177 + sc[0] * x2267 +
    sc[16] * x5155 - 30200000.0 * sc[2] * x256 + 30200000.0 * sc[2] * x258 -
    20000000.0 * sc[2] * x407 + sc[37] * x5251 + 30000000.0 * sc[4] * x1336 -
    50000000.0 * sc[4] * x1492 + 102000000.0 * sc[4] * x256 -
    102000000.0 * sc[4] * x258 - sc[4] * x4203 + sc[5] * x5168 + x1040 * x741 -
    x1040 * x763 - x1040 * x821 + x1040 * x841 + x1045 * x797 - x1045 * x800 -
    x1048 * x116 + x1048 * x791 - 70000000.0 * x1332 - x1336 * x6330 +
    x1377 * x3948 - x1377 * x6317 + x1414 * x6530 + x1414 * x6544 -
    x1418 * x6530 - x1418 * x6544 + x1469 * x6530 + x1469 * x6547 -
    x1473 * x6530 - x1473 * x6547 + x1492 * x513 + x256 * x4028 - x256 * x6344 -
    x258 * x4028 + x258 * x6344 + x353 * x6334 + x353 * x6338 - x354 * x6334 -
    x354 * x6338 + x3952 * x645 + x3985 * x407 - x401 * x4939 / x443 -
    x407 * x6369 + x408 * x6360 - x4218 + x4222 - x453 * x4940 - x508 * x6341 -
    x554 * x785 - x554 * x809 - x6324 * x645 + x6421 + x6459 + x6555 + x6556 +
    x6567 + x6576 + (-x118 * x151 * x153) * (x1414 - x1418) +
    (-x118 * x164 * x166) * (x1442 - x1447) +
    (sc[4] * x161 * x82 - x1500 * x161) *
      (-kf_qss[378] * sc_qss[24] * x157 * x164 +
       (-x164 * x166) * (x1442 - x1447)) +
    (-x118 * x177 * x179) * (x1469 - x1473) +
    (sc[4] * x174 * x82 - x1500 * x174) *
      (-kf_qss[380] * sc_qss[25] * x170 * x177 +
       (-x177 * x179) * (x1469 - x1473)) +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x256 + x258) +
    (x37 * x554) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (sc[4] * x146 * x82 - x146 * x1500) *
      (-kf_qss[376] * sc_qss[21] * x147 * x151 +
       (-x151 * x153) * (x1414 - x1418)) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x1040 * x141 - x141 * x595) * (x817 - x842) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[228] =
    kf_qss[125] * sc[4] * x1276 * x6355 +
    30000000.0 * kf_qss[127] * sc[4] * sc[8] / x1323 +
    kf_qss[134] * sc[4] * x1289 * x6605 / ((x1286) * (x1286)) +
    30000000.0 * kf_qss[197] * sc[4] * x1333 -
    100000.0 * kf_qss[330] * sc[4] * x497 * x539 * x616 / ((x30) * (x30)) +
    kf_qss[382] * sc[4] * x1486 * x6621 - kf_qss[382] * x1486 * x1500 +
    kf_qss[72] * sc[4] * x3951 * x610 - sc[0] * x2292 - sc[10] * x4250 -
    sc[10] * x5310 - sc[11] * x6672 - 1000000.0 * sc[11] -
    1.0e-42 * sc[12] * sc[17] - sc[13] * x6588 - 10.0e-13 * sc[14] * sc[6] -
    sc[14] * x6686 - sc[15] * x4248 - sc[16] * x2780 - sc[19] * x4246 -
    sc[19] * x5308 - 10000000.0 * sc[19] - sc[1] * x2491 - sc[20] * x6678 -
    sc[21] * x6579 - 3.12 * sc[22] * x6647 - 3000000.0 * sc[23] -
    5.12 * sc[30] * x6647 - 200000.0 * sc[30] - sc[33] * x4242 -
    sc[34] * x5306 - sc[34] * x6638 - sc[37] * x4273 - 10000000.0 * sc[38] -
    sc[39] * x6612 - 70000000.0 * sc[3] * x1337 - 70000000.0 * sc[3] * x1339 -
    sc[3] * x4203 - sc[43] * x6633 - 1000000.0 * sc[44] * x3946 -
    sc[4] * x1018 * x82 - sc[4] * x1020 * x82 - 50000000.0 * sc[4] * x1493 -
    1.2164e+19 * sc[4] * x196 * x6383 * exp(x6399) +
    102000000.0 * sc[4] * x260 - 102000000.0 * sc[4] * x263 -
    sc[4] * x571 * x82 - 2500000.0 * sc[52] - sc[7] * x6584 - sc[9] * x6593 +
    50000000.0 * sc_qss[0] * x5 + x1018 * x1500 - 6.33e-5 * x1038 * x120 -
    6.306e-5 * x1038 * x41 - 6.33e-5 * x1038 * x85 + x1040 * x468 -
    x1040 * x669 - x1040 * x793 + x1040 * x796 - x1044 * x115 + x1045 * x813 -
    x1045 * x839 + x1048 * x811 - x1048 * x823 + x118 * x1421 -
    x118 * x1423 * (-sc_qss[21] * x153 + x1411) + x118 * x1449 -
    x118 * x1451 * (-sc_qss[24] * x166 + x1435) + x118 * x1475 -
    x118 * x1477 * (-sc_qss[25] * x179 + x1466) -
    22500000000.0 * x124 * exp(-2.0 * tc[0]) + x131 * x3951 +
    30000000.0 * x1332 + 1000000.0 * x1360 * x3946 + x1378 * x3948 +
    x1379 * x3948 - x1404 * x6544 + x1425 * x6544 - x1458 * x6547 +
    x1479 * x6547 + x1493 * x513 + 50000000.0 * x194 -
    3.909e+16 * x196 * x2398 - x197 * x4027 - 102000000.0 * x197 -
    x240 * x6334 - x240 * x6338 + x260 * x4028 - x260 * x6344 - x263 * x4028 +
    x263 * x6344 - x2783 - 540800000.0 * x2786 - x2788 + x285 * x6333 +
    x285 * x6337 + x349 * x6334 + x349 * x6338 + x370 * x3984 + x3952 * x658 +
    x3985 * x409 - x3985 * x410 - x409 * x6369 + x410 * x6369 - x4245 -
    1.2052 * x4254 - x531 * x6341 - 100000.0 * x539 * x77 * x80 - x554 * x68 +
    x554 * x807 - x554 * x820 + x6340 * x769 / x773 + x6421 + x6459 + x6637 +
    x6657 + x6662 + x6670 + x6685 + x6695 + x6696 + x6701 + x6715 -
    x82 * (-sc_qss[26] * x146 - 10.0e-13 / x143) -
    x82 * (-sc_qss[27] * x161 - 10.0e-13 / x158) -
    x82 * (-sc_qss[28] * x174 - 10.0e-13 / x171) -
    100000.0 * x539 * x616 / x34 +
    x6621 * (kf_qss[381] * sc[51] + 10.0e-13) / x1484 + x1289 * x6605 / x1286 +
    x1275 * x6355 / x1268 + (-x118 * x151 * x153) * (-x1404 + x1425) +
    (-x118 * x164 * x166) * (-x1439 + x1452) +
    (sc[4] * x161 * x82 - x1500 * x161) *
      (x1449 - x1451 * (-sc_qss[24] * x166 + x1435) +
       (-x164 * x166) * (-x1439 + x1452)) +
    (-x118 * x177 * x179) * (-x1458 + x1479) +
    (sc[4] * x174 * x82 - x1500 * x174) *
      (x1475 - x1477 * (-sc_qss[25] * x179 + x1466) +
       (-x177 * x179) * (-x1458 + x1479)) +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x260 + x263) +
    (x37 * x554) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (sc[4] * x146 * x82 - x146 * x1500) *
      (x1421 - x1423 * (-sc_qss[21] * x153 + x1411) +
       (-x151 * x153) * (-x1404 + x1425)) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x1040 * x141 - x141 * x595) * (x829 - x872) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[284] =
    -kf_qss[128] * sc[5] * x1333 * x6329 - kf_qss[174] * sc[5] * x1374 * x6316 -
    kf_qss[74] * sc[5] * x610 * x6323 + sc[0] * x1989 + sc[10] * x6765 +
    sc[10] * x6767 + sc[15] * x6722 + sc[17] * x6726 + sc[19] * x6749 +
    sc[25] * x6754 + sc[29] * x6718 - 30200000.0 * sc[2] * x265 +
    30200000.0 * sc[2] * x267 + 5.94 * sc[2] * x4097 +
    20000000.0 * sc[2] * x413 + sc[33] * x6738 + sc[37] * x6720 +
    sc[38] * x6716 - 70000000.0 * sc[3] * x1340 + sc[3] * x5168 +
    sc[44] * x6730 + 30000000.0 * sc[4] * x1340 - 50000000.0 * sc[4] * x245 +
    102000000.0 * sc[4] * x265 - 102000000.0 * sc[4] * x267 + sc[6] * x6740 +
    sc[8] * x6724 - x1040 * x799 + x1040 * x812 - x1040 * x869 + x1040 * x896 -
    x1045 * x833 + x1045 * x840 - x1048 * x826 - x1048 * x827 - x131 * x6323 -
    x1332 * x6329 - x1360 * x6316 +
    1343000000.0 * x1373 * exp(-7890.4373198180001 * invT) + x1380 * x3948 +
    1.837e+21 * x196 * x2435 + x197 * x6376 + 56640000.0 * x2401 +
    2.2044e+22 * x2436 + x245 * x513 - 4.6908e+17 * x2559 -
    270000000000.0 * x2595 + x265 * x4028 - x265 * x6344 - x265 * x6377 -
    x267 * x4028 + x267 * x6344 + x267 * x6377 - x2861 - x370 * x6368 +
    x3952 * x672 - x3985 * x413 + x413 * x6360 + x413 * x6369 - x6364 * x672 -
    x6386 * (24.0 * x6405 + 3.36 * x6406) + 1.7956662135922301e+30 * x6388 -
    1.7956662135922301e+30 * x6393 * x6396 + 7.2984e+19 * x6403 -
    7.2984e+19 * x6417 + x6420 * (24.0 * x6405 + 3.36 * x6406) + x6461 + x6748 +
    x6761 + x6780 + x6794 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x265 + x267) +
    (x37 * x554) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x1040 * x141 - x141 * x595) * (x895 - x897) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[340] =
    1.15558e+19 * refC * sc[11] * x6383 * x6400 + sc[10] * x6799 -
    10.0e-13 * sc[14] * sc[4] - 20000000.0 * sc[2] * x416 -
    70000000.0 * sc[3] * x1341 - 70000000.0 * sc[3] * x1342 -
    1.15558e+19 * ((sc[4]) * (sc[4])) * x6383 * exp(x6399) +
    30000000.0 * sc[4] * x1341 + 30000000.0 * sc[4] * x1342 +
    102000000.0 * sc[4] * x269 - 102000000.0 * sc[4] * x270 + sc[5] * x6740 -
    x1341 * x6330 - x1342 * x6330 + x1382 * x3948 - x1382 * x6317 +
    8968000.0 * x2401 + 3.4903e+21 * x2436 - 7.4271e+16 * x2559 -
    42750000000.0 * x2595 + x269 * x4028 - x269 * x6344 - x269 * x6377 -
    x270 * x4028 + x270 * x6344 + x270 * x6377 + x3952 * x680 + x3985 * x416 -
    x416 * x6360 - x416 * x6369 + x4222 - x6324 * x680 - x6364 * x680 -
    x6386 * (3.8 * x6405 + 0.532 * x6406) + 2.8431381715210298e+29 * x6388 -
    2.8431381715210298e+29 * x6393 * x6396 +
    x6420 * (3.8 * x6405 + 0.532 * x6406) + x6556 + x6821 + x6828 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x269 + x270) +
    (x37 * x554) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x1040 * x141 - x141 * x595) * (x909 + x913) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (0 + (-x141) * (x909 + x913)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[396] =
    sc[0] * x2103 + 30200000.0 * sc[2] * x188 - 30200000.0 * sc[2] * x272 -
    70000000.0 * sc[3] * x1343 + 30000000.0 * sc[4] * x1343 -
    102000000.0 * sc[4] * x188 + 102000000.0 * sc[4] * x272 - sc[4] * x6584 -
    x1343 * x6330 - x188 * x4028 + x188 * x6344 + x188 * x6377 +
    17936000.0 * x2401 + 6.9806e+21 * x2436 - 1.48542e+17 * x2559 -
    85500000000.0 * x2595 + x272 * x4028 - x272 * x6344 - x272 * x6377 -
    x6386 * (7.6 * x6405 + 1.064 * x6406) + 5.6862763430420702e+29 * x6388 -
    5.6862763430420702e+29 * x6393 * x6396 + 2.31116e+19 * x6403 -
    2.31116e+19 * x6417 + x6420 * (7.6 * x6405 + 1.064 * x6406) + x6840 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x188 - x272);
  J[452] =
    11000000.0 * sc[10] - 20000000.0 * sc[2] * x375 +
    20000000.0 * sc[2] * x419 + sc[3] * x5289 + 30000000.0 * sc[4] * x1344 +
    30000000.0 * sc[4] * x1345 - 102000000.0 * sc[4] * x274 +
    102000000.0 * sc[4] * x275 + sc[5] * x6724 - x1040 * x915 - x1040 * x920 -
    x1045 * x919 + x1048 * x844 + x1293 * x6854 + x1383 * x3948 -
    x1383 * x6317 + x1497 * x919 - x274 * x4028 + x274 * x6344 + x274 * x6377 +
    x275 * x4028 - x275 * x6344 - x275 * x6377 + x356 * x6334 + x356 * x6338 +
    x375 * x3985 - x375 * x6369 + x3952 * x689 + x3952 * x693 - x3985 * x419 +
    x419 * x6369 - x49 * x844 + x572 * x6341 + x595 * x915 + x595 * x920 -
    x6324 * x689 - x6324 * x693 + x6421 + x6428 + x6864 + x6879 + x6883 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x274 - x275) +
    (x37 * x554) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x1040 * x141 - x141 * x595) * (-x922) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x920 + (-x141) * (-x922)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[508] =
    -30200000.0 * sc[2] * x278 + 30200000.0 * sc[2] * x279 + sc[2] * x4103 -
    20000000.0 * sc[2] * x420 + 20000000.0 * sc[2] * x421 -
    70000000.0 * sc[3] * x1346 + 30000000.0 * sc[4] * x1346 +
    102000000.0 * sc[4] * x278 - 102000000.0 * sc[4] * x279 - sc[4] * x6593 -
    x1040 * x834 + x1040 * x835 - x1040 * x885 + x1040 * x936 + x1045 * x865 -
    x1045 * x868 - x1048 * x838 - x1048 * x859 - x131 * x6363 - x1346 * x6330 +
    x1384 * x3948 - x1384 * x6317 + x278 * x4028 - x278 * x6344 - x278 * x6377 -
    x279 * x4028 + x279 * x6344 + x279 * x6377 - x3952 * x628 + x3985 * x420 -
    x3985 * x421 - x420 * x6360 - x420 * x6369 + x421 * x6360 + x421 * x6369 +
    x628 * x6324 + x628 * x6364 + x6421 + x6461 + x6916 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x278 + x279) +
    (x37 * x554) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (x1040 * x141 - x141 * x595) * (x935 - x937) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[564] =
    141600000.0 * sc[0] * x2264 + 32000000.0 * sc[15] +
    1000000.0 * sc[21] * x2474 + sc[25] * x6919 - 30200000.0 * sc[2] * x281 +
    30200000.0 * sc[2] * x282 - 20000000.0 * sc[2] * x422 +
    20000000.0 * sc[2] * x423 + 32500000.0 * sc[2] + sc[37] * x6919 +
    10.0e-25 * sc[37] + 102000000.0 * sc[4] * x281 -
    102000000.0 * sc[4] * x282 - sc[4] * x4250 - sc[4] * x5310 + sc[5] * x6765 +
    sc[5] * x6767 + sc[6] * x6799 + 11000000.0 * sc[8] + x1040 * x546 +
    x1040 * x831 - x1040 * x836 - x1040 * x926 + x1045 * x863 - x1045 * x893 -
    x1048 * x870 + x1048 * x877 + x1279 * x6356 + x1295 * x6854 +
    x1385 * x3948 - x1385 * x6317 + x1386 * x3948 - x1386 * x6317 - x21 * x554 +
    x281 * x4028 - x281 * x6344 - x281 * x6377 - x282 * x4028 + x282 * x6344 +
    x282 * x6377 + x357 * x6334 + x357 * x6338 + x3952 * x657 + x3952 * x706 +
    x3985 * x422 - x3985 * x423 - x422 * x6369 + x423 * x6369 + x470 * x554 -
    x554 * x79 + x554 * x86 - x6324 * x657 - x6324 * x706 + x6341 * x97 +
    x6421 + x6428 + x6944 + x6968 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x281 + x282) +
    (x37 * x554) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x1040 * x141 - x141 * x595) * (x465 - x977) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[620] =
    sc[0] * x2146 - 30200000.0 * sc[2] * x284 + 30200000.0 * sc[2] * x286 +
    sc[2] * x4100 + 20000000.0 * sc[2] * x424 + 102000000.0 * sc[4] * x284 -
    102000000.0 * sc[4] * x286 - sc[4] * x6672 - 1000000.0 * sc[4] +
    x1004 * x1040 - x1040 * x498 - x1040 * x700 + x1040 * x864 - x1045 * x889 +
    x1045 * x894 - x1048 * x899 - x1048 * x924 + x1387 * x3948 - x1387 * x6317 +
    6.082e+18 * x2413 * x6383 * x6400 + x284 * x4028 - x284 * x6344 -
    x284 * x6377 - x286 * x4028 + x286 * x6344 + x286 * x6377 + x3952 * x717 -
    x3985 * x424 + x424 * x6360 + x424 * x6369 - x6324 * x717 - x6364 * x717 +
    x6421 + x6461 + x6748 + x6761 + x6780 + x6999 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x284 + x286) +
    (x37 * x554) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x1040 * x141 - x141 * x595) * (x1001 - x1005) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[676] =
    sc[0] * x2222 - 1.0e-42 * sc[17] * sc[4] + sc[1] * x3846 -
    30200000.0 * sc[2] * x288 + 30200000.0 * sc[2] * x289 + sc[2] * x4172 -
    70000000.0 * sc[3] * x1347 + 30000000.0 * sc[4] * x1347 +
    102000000.0 * sc[4] * x288 - 102000000.0 * sc[4] * x289 + x1280 * x6356 -
    x1347 * x6330 + x288 * x4028 - x288 * x6344 - x289 * x4028 + x289 * x6344 +
    x331 * x6334 + x331 * x6338 + x408 * x6360 - x4218 + x4222 - x454 * x4940 +
    x485 * x6341 + x6421 + x6428 + x6556 + x6748 + x6761 + x6780 + x7001 +
    x7003 + x7023 + (50000000.0 * sc[4] * x5 - x5 * x513) * (-x288 + x289);
  J[732] =
    sc[2] * x4092 + 20000000.0 * sc[2] * x425 - 70000000.0 * sc[3] * x1348 +
    30000000.0 * sc[4] * x1348 - sc[4] * x6588 - x1000 * x1040 + x1026 * x1040 +
    x1040 * x861 - x1040 * x866 + x1045 * x932 - x1045 * x934 - x1048 * x925 -
    x1048 * x938 - x1348 * x6330 -
    9830000.0 * x370 * exp(-16319.3164720471 * invT) + x3952 * x724 -
    x3985 * x425 + x425 * x6360 + x425 * x6369 - x6324 * x724 - x6364 * x724 +
    x6461 + x6748 + x6761 + x6780 + x7039 + x7048 + x7058 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x1040 * x141 - x141 * x595) * (-x1027 + x553) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[788] =
    30200000.0 * sc[2] * x295 - 70000000.0 * sc[3] * x1349 -
    10.0e-13 * sc[4] * sc[6] + 30000000.0 * sc[4] * x1349 -
    102000000.0 * sc[4] * x295 - sc[4] * x6686 - x1014 * x1040 + x1040 * x1046 -
    x1040 * x887 + x1040 * x890 + x1045 * x929 - x1045 * x974 - x1048 * x963 -
    x1048 * x966 - x1349 * x6330 - x295 * x4028 + x295 * x6344 + x295 * x6377 +
    x3952 * x725 - x5812 - x6324 * x725 - x6364 * x725 + x6840 + x7039 + x7042 +
    x7045 + x7085 + (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x295) +
    (x37 * x554) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x1040 * x141 - x141 * x595) * (x1039 - x1047) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[844] =
    32000000.0 * sc[10] + sc[18] * x7086 + sc[20] * x7102 -
    30200000.0 * sc[2] * x297 + 30200000.0 * sc[2] * x298 +
    20000000.0 * sc[2] * x426 - 70000000.0 * sc[3] * x1350 +
    30000000.0 * sc[4] * x1350 + 102000000.0 * sc[4] * x297 -
    102000000.0 * sc[4] * x298 - sc[4] * x4248 + sc[5] * x6722 - x1040 * x1055 -
    x1040 * x1057 + x1041 * x1048 - x1041 * x49 - x1045 * x1056 + x1055 * x595 +
    x1056 * x1497 + x1057 * x595 + x1264 * x6341 - x1350 * x6330 +
    x297 * x4028 - x297 * x6344 - x297 * x6377 - x298 * x4028 + x298 * x6344 +
    x298 * x6377 + x349 * x6334 + x349 * x6338 + x3952 * x727 - x3985 * x426 +
    x426 * x6360 + x426 * x6369 - x6324 * x727 - x6364 * x727 + x6421 + x6428 +
    x6748 + x6761 + x6780 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x297 + x298) +
    (x37 * x554) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x1040 * x141 - x141 * x595) * (x1058) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1057 + (-x141) * (x1058)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[900] = -30200000.0 * sc[2] * x228 + 30200000.0 * sc[2] * x231 +
           sc[3] * x5155 + 102000000.0 * sc[4] * x228 -
           102000000.0 * sc[4] * x231 + 50000000.0 * sc[4] * x249 -
           sc[4] * x2780 + x197 * x6343 + x228 * x4028 - x228 * x6344 -
           x228 * x6377 - x231 * x4028 + x231 * x6344 + x231 * x6377 -
           x249 * x513 + x6421 + x6840 +
           (50000000.0 * sc[4] * x5 - x5 * x513) * (-x228 + x231);
  J[956] =
    -kf_qss[104] * x5912 - 1.0e-42 * sc[12] * sc[4] + sc[20] * x7131 +
    30200000.0 * sc[2] * x303 - 102000000.0 * sc[4] * x303 + sc[5] * x6726 -
    x1040 * x1060 - x1040 * x1062 - x1045 * x1061 + x1048 * x39 + x1060 * x595 +
    x1061 * x1497 + x1062 * x595 + x1282 * x6356 + x1297 * x6854 -
    x303 * x4028 + x303 * x6344 + x303 * x6377 - x39 * x49 + x3952 * x728 -
    x6324 * x728 - x6364 * x728 + x6840 + x7039 + x7042 + x7045 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x303) +
    (x37 * x554) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (x1040 * x141 - x141 * x595) * (-x1063) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1062 + (-x141) * (-x1063)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1012] = sc[0] * x2121 + sc[15] * x7086 + 10000000.0 * sc[2] * x2130 -
            30200000.0 * sc[2] * x305 + 30200000.0 * sc[2] * x306 -
            70000000.0 * sc[3] * x1351 + 30000000.0 * sc[4] * x1351 +
            102000000.0 * sc[4] * x305 - 102000000.0 * sc[4] * x306 -
            x1351 * x6330 + x305 * x4028 - x305 * x6344 - x305 * x6377 -
            x306 * x4028 + x306 * x6344 + x306 * x6377 + x3985 * x427 -
            x427 * x6360 - x427 * x6369 - x458 * x4940 + x6421 + x6556 + x6821 +
            x7167 + (50000000.0 * sc[4] * x5 - x5 * x513) * (-x305 + x306);
  J[1068] = 30200000.0 * sc[2] * x307 - 70000000.0 * sc[3] * x1353 +
            30000000.0 * sc[4] * x1353 - 102000000.0 * sc[4] * x307 -
            sc[4] * x4246 - sc[4] * x5308 - 10000000.0 * sc[4] + sc[5] * x6749 -
            x1353 * x6330 - x307 * x4028 + x307 * x6344 + x307 * x6377 + x6840 +
            x7039 + x7042 + x7045 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x307);
  J[1124] =
    sc[15] * x7102 + sc[17] * x7131 + 30200000.0 * sc[2] * x308 +
    sc[2] * x4128 - 20000000.0 * sc[2] * x428 - 102000000.0 * sc[4] * x308 -
    sc[4] * x6678 + x1298 * x6854 - x308 * x4028 + x308 * x6344 + x308 * x6377 +
    x349 * x6334 + x349 * x6338 + x3985 * x428 + x408 * x6360 - x4218 + x4222 -
    x428 * x6360 - x428 * x6369 + x569 * x6341 + x6428 + x6556 + x7039 + x7042 +
    x7045 + (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x308);
  J[1180] = 1000000.0 * sc[10] * x2474 - sc[4] * x6579 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[1236] =
    30200000.0 * sc[2] * x309 + sc[2] * x4146 - 102000000.0 * sc[4] * x309 -
    3.12 * sc[4] * x6647 + x1033 * x1040 - x1033 * x595 - x309 * x4028 +
    x309 * x6344 + x309 * x6377 + x3952 * x561 - x561 * x6324 - x561 * x6364 +
    x6840 + x7039 + x7042 + x7045 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x309) +
    (x37 * x554) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (x1040 * x141 - x141 * x595) * (-x1067 + x1068) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (-x1033 + (-x141) * (-x1067 + x1068)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1292] =
    -3000000.0 * sc[4] + x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[1348] =
    -x1040 * x1076 - x1040 * x1082 - x1045 * x1079 - x1048 * x643 +
    x1072 * x554 + x1074 * x554 + x1076 * x595 + x1079 * x1497 + x1082 * x595 +
    x1388 * x3948 - x1388 * x6317 + x49 * x643 + x7200 + x7216 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (x1040 * x141 - x141 * x595) * (x1070 + x463) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1082 + (-x141) * (x1070 + x463)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1404] =
    sc[10] * x6919 + sc[5] * x6754 - x1040 * x1086 - x1040 * x1088 -
    x1045 * x1087 - x1048 * x684 + x1085 * x554 + x1086 * x595 + x1087 * x1497 +
    x1088 * x595 + x1299 * x6854 + x3952 * x751 + x49 * x684 + x554 * x677 -
    x6324 * x751 - x6364 * x751 + x7200 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x1040 * x141 - x141 * x595) * (x1089) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1088 + (-x141) * (x1089)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1460] =
    -20000000.0 * sc[2] * x429 - x1040 * x1092 + x1040 * x891 - x1045 * x975 +
    x1092 * x595 + x1497 * x975 + x3952 * x755 + x3952 * x759 + x3985 * x429 +
    x4222 - x429 * x6369 - x595 * x891 - x6324 * x755 - x6324 * x759 + x6556 +
    x6821 + x7039 + x7048 + x7253 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x1040 * x141 - x141 * x595) * (x1093) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1092 + (-x141) * (x1093)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1516] = x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[1572] = 30200000.0 * sc[2] * x310 + sc[2] * x4132 -
            102000000.0 * sc[4] * x310 - sc[4] * x6633 + sc[8] * x6862 -
            sc[9] * x6363 * x760 - x310 * x4028 + x310 * x6344 + x310 * x6377 +
            x3952 * x760 - x6324 * x760 + x6840 + x7039 + x7042 + x7045 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x310);
  J[1628] = sc[5] * x6718 - x4796 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[1684] =
    sc[2] * x4141 - 20000000.0 * sc[2] * x430 - 5.12 * sc[4] * x6647 -
    200000.0 * sc[4] - x1040 * x1098 - x1040 * x886 - x1045 * x1097 +
    x1048 * x1095 - x1095 * x49 + x1097 * x1497 + x1098 * x595 + x3985 * x430 +
    x4222 - x430 * x6360 - x430 * x6369 + x595 * x886 + x6556 + x6821 + x7039 +
    x7048 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x1040 * x141 - x141 * x595) * (x1099) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x1098 + (-x141) * (x1099)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1740] =
    30200000.0 * sc[2] * x311 - 20000000.0 * sc[2] * x431 -
    102000000.0 * sc[4] * x311 - x1040 * x1100 - x1040 * x726 - x1045 * x707 +
    x1048 * x968 + x1100 * x595 + x1389 * x3948 - x1389 * x6317 + x1497 * x707 -
    x311 * x4028 + x311 * x6344 + x311 * x6377 + x361 * x6334 + x361 * x6338 +
    x3952 * x762 + x3985 * x431 + x408 * x6360 - x4218 + x4222 - x431 * x6360 -
    x431 * x6369 - x49 * x968 + x595 * x726 - x6324 * x762 - x6364 * x762 +
    x6428 + x6459 + x6556 + x7039 + x7042 + x7045 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (-x290 + x311) +
    (x37 * x554) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x1040 * x141 - x141 * x595) * (-x1104) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x726 + (-x141) * (-x1104)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1796] =
    30200000.0 * sc[2] * x189 - 30200000.0 * sc[2] * x232 +
    20000000.0 * sc[2] * x367 - 102000000.0 * sc[4] * x189 +
    102000000.0 * sc[4] * x232 - x1002 * x1048 + x1040 * x564 - x1040 * x612 -
    x1040 * x928 + x1040 * x930 + x1045 * x682 - x1045 * x999 - x1048 * x587 +
    x1390 * x3948 - x1390 * x6317 - x189 * x4028 + x189 * x6344 + x189 * x6377 +
    x232 * x4028 - x232 * x6344 - x232 * x6377 + x338 * x6334 + x338 * x6338 -
    x367 * x3985 + x367 * x6360 + x367 * x6369 + x3952 * x764 - x6324 * x764 -
    x6364 * x764 + x6421 + x6428 + x6459 + x6748 + x6761 + x6780 + x7333 +
    631000000000000.0 * exp(-21286.0649635396 * invT) +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x189 - x232) +
    (x37 * x554) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x1040 * x141 - x141 * x595) * (-x585 + x688) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1852] = -sc[4] * x4242 + sc[5] * x6738 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[1908] = sc[2] * x4128 - sc[4] * x5306 - sc[4] * x6638 + x1283 * x6356 +
            x1300 * x6854 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[1964] = -x1307 * x6563 + x7200 + x7341 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2020] = -x1308 * x6563 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
            (x37 * x554) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (x1040 * x141 - x141 * x595) * (-x692) +
            (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 +
             x1497 * x181 + x182 * x595 + x554 * x81) *
              (0 + (-x141) * (-x692)) +
            (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
              (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2076] = -kf_qss[167] * x5912 + sc[10] * x6919 + 10.0e-25 * sc[10] +
            sc[3] * x5247 + sc[3] * x5251 - sc[4] * x4273 + sc[5] * x6720 +
            x1284 * x6356 + x3952 * x767 - x6324 * x767 - x6364 * x767 + x7200 +
            x7344 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2132] = 30200000.0 * sc[2] * x238 - 102000000.0 * sc[4] * x238 +
            50000000.0 * sc[4] * x239 - 10000000.0 * sc[4] + sc[5] * x6716 -
            x238 * x4028 + x238 * x6344 + x238 * x6377 - x239 * x513 + x6840 +
            x7039 + x7042 + x7045 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x238 - x290);
  J[2188] = -sc[4] * x6612 + x1500 - x460 * x4940 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2244] = sc[2] * x4132 - sc[4] * x6633 + x1391 * x3948 - x1391 * x6317 +
            x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2300] = x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2356] = x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2412] = sc[2] * x4132 - sc[4] * x6633 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2468] = sc[5] * x6730 - x3948 + x7200 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
            (x37 * x554) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (x1040 * x141 - x141 * x595) * (-x710) +
            (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 +
             x1497 * x181 + x182 * x595 + x554 * x81) *
              (0 + (-x141) * (-x710)) +
            (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
              (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2524] =
    sc[2] * x4184 + sc[2] * x4187 + x1003 * x1045 + x1040 * x482 -
    x1040 * x712 + x1040 * x927 - x1040 * x933 - x1045 * x970 + x1048 * x524 -
    x1048 * x7 + x7200 + x7382 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x1040 * x141 - x141 * x595) * (x103 - x545) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2580] =
    x101 * x1045 - x101 * x1497 - x1040 * x135 + x135 * x595 - x1399 * x6530 +
    x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x1040 * x141 - x141 * x595) * (-x126) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x135 + (-x141) * (-x126)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2636] =
    -x1040 * x461 + x1040 * x83 - x1045 * x107 + x107 * x1497 - x129 * x554 -
    x1428 * x6530 - x1428 * x6544 + x461 * x595 - x595 * x83 + x7200 +
    (-x118 * x151 * x153) * (-x1428) +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (sc[4] * x146 * x82 - x146 * x1500) * (0 + (-x151 * x153) * (-x1428)) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x1040 * x141 - x141 * x595) * (x481) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x461 + (-x141) * (x481)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2692] =
    -x1040 * x130 - x1040 * x562 - x1045 * x566 + x1048 * x19 + x130 * x595 -
    x1430 * x6553 + x1497 * x566 - x19 * x49 - x554 * x555 - x554 * x558 +
    x562 * x595 + x7200 + (-x118 * x164 * x166) * (-x1430) +
    (sc[4] * x161 * x82 - x1500 * x161) * (0 + (-x164 * x166) * (-x1430)) +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x1040 * x141 - x141 * x595) * (x464) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x130 + (-x141) * (x464)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2748] =
    -x1040 * x132 - x1040 * x967 - x1045 * x582 + x1048 * x573 + x132 * x595 -
    x1482 * x6530 - x1482 * x6547 + x1497 * x582 - x49 * x573 + x595 * x967 +
    x7200 + (-x118 * x177 * x179) * (-x1482) +
    (sc[4] * x174 * x82 - x1500 * x174) * (0 + (-x177 * x179) * (-x1482)) +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x1040 * x141 - x141 * x595) * (-x586) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x132 + (-x141) * (-x586)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2804] =
    -x104 * x1045 + x104 * x1497 - x1040 * x106 - x1040 * x50 - x1048 * x529 +
    x106 * x595 + x49 * x529 + x50 * x595 + x554 * x594 + x7200 +
    (50000000.0 * sc[4] * x5 - x5 * x513) * (x294) +
    (x37 * x554) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x1048 * x184 + x184 * x49 + x554 * x87 + x554 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x1040 * x141 - x141 * x595) * (x127) +
    (-x1040 * x182 - x1045 * x181 + x1048 * x113 - x113 * x49 + x1497 * x181 +
     x182 * x595 + x554 * x81) *
      (x106 + (-x141) * (x127)) +
    (-x1040 * x183 + x1048 * x121 - x121 * x49 + x183 * x595) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2860] = kf_qss[381] * sc[4] * x6621 / x1484 - kf_qss[381] * x1500 / x1484 -
            x1400 * x6530 + x7200 + x7341 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2916] =
    -2500000.0 * sc[4] + x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[2972] = -20000000.0 * sc[2] * x382 - 5000000.0 * sc[4] + x1392 * x3948 -
            x1392 * x6317 + x382 * x3985 - x382 * x6360 - x382 * x6369 + x4222 +
            x6556 + x6821 + x7039 + x7048 +
            (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[3028] = x7200 + (50000000.0 * sc[4] * x5 - x5 * x513) * (x294);
  J[5] =
    sc[11] * x2146 + 102000000.0 * sc[4] * x190 - 102000000.0 * sc[4] * x233 -
    sc[5] * x1989 + x1325 * x6330 + x1363 * x6317 + x1497 * x579 -
    x1497 * x602 - x190 * x6377 + x196 * x2289 + x233 * x6377 + x242 * x513 +
    x383 * x6369 - x402 * x6369 - x49 * x519 + x49 * x528 + x536 * x595 -
    x544 * x595 - x557 * x595 + x595 * x604 + x606 * x6324 + x7429 +
    (x5 * x513) * (x190 - x233) +
    (-x184 * x49) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (x141 * x595) * (-x681 + x734) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (x121 * x49 - x183 * x595) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[61] =
    -102000000.0 * sc[4] * x248 + sc[4] * x2491 + 102000000.0 * sc[4] * x251 +
    x1334 * x6330 + x1375 * x6317 - x1491 * x513 + x1497 * x574 - x1497 * x756 -
    4.5925e+21 * x2436 + x248 * x6377 - x251 * x6377 + 56250000000.0 * x2595 +
    x403 * x6369 - x404 * x6369 - x49 * x521 - x49 * x738 - x511 * x595 +
    x595 * x742 - x595 * x758 + x595 * x771 + x617 * x6324 +
    (x5 * x513) * (-x248 + x251) +
    (-x184 * x49) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x141 * x595) * (x770 - x772) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (x121 * x49 - x183 * x595) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[117] =
    -102000000.0 * sc[4] * x253 + 102000000.0 * sc[4] * x254 -
    2.97 * sc[5] * x4097 + x1335 * x6330 + x1376 * x6317 - x1497 * x745 +
    x1497 * x765 + x253 * x6377 - x254 * x6377 + x405 * x6369 - x406 * x6369 +
    x49 * x774 - x49 * x790 - x543 * x595 + x595 * x753 - x595 * x792 +
    x595 * x803 + x6324 * x640 + x7429 + (x5 * x513) * (-x253 + x254) +
    (-x184 * x49) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (x141 * x595) * (x801 - x804) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (x121 * x49 - x183 * x595) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[173] =
    -102000000.0 * sc[4] * x256 + 102000000.0 * sc[4] * x258 - sc[5] * x5168 -
    x116 * x49 + x1336 * x6330 + x1377 * x6317 - x1492 * x513 + x1497 * x797 -
    x1497 * x800 + x256 * x6377 - x258 * x6377 + x407 * x6369 + x49 * x791 +
    x595 * x741 - x595 * x763 - x595 * x821 + x595 * x841 + x6324 * x645 -
    x6556 + x7429 + (x5 * x513) * (-x256 + x258) +
    (-x184 * x49) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x595) * (x817 - x842) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x121 * x49 - x183 * x595) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[229] =
    sc[10] * x5310 + sc[11] * x6672 + 1000000.0 * sc[11] + sc[12] * x6693 +
    sc[13] * x6588 + sc[14] * x6686 +
    10000000.0 * sc[18] * exp(-1006.43333160944 * invT) + sc[1] * x2491 +
    sc[20] * x6678 + sc[21] * x6579 + 3.12 * sc[22] * x6647 + sc[26] * x6664 +
    sc[28] * x6633 + 5.12 * sc[30] * x6647 + sc[34] * x6638 +
    10000000.0 * sc[38] + sc[40] * x6633 + sc[43] * x6633 + sc[45] * x6705 +
    sc[45] * x6709 - 102000000.0 * sc[4] * x260 + 102000000.0 * sc[4] * x263 +
    2500000.0 * sc[52] + 5000000.0 * sc[53] +
    26500000.0 * sc[8] * exp(-1100.0316314491199 * invT) + sc[9] * x6593 +
    22500000000.0 * x124 * exp(-2.0 * tc[0]) + x1337 * x6330 + x1339 * x6330 +
    x1378 * x6317 + x1379 * x6317 - x1493 * x513 + x1497 * x813 - x1497 * x839 +
    102000000.0 * x197 + x260 * x6377 - x263 * x6377 - x2783 + x409 * x6369 -
    x410 * x6369 + 0.6026 * x4254 + x468 * x595 + x49 * x811 - x49 * x823 -
    x595 * x669 - x595 * x793 + x595 * x796 + x6324 * x647 + x6324 * x658 +
    x7429 + (x5 * x513) * (-x260 + x263) +
    (-x184 * x49) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x141 * x595) * (x829 - x872) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x121 * x49 - x183 * x595) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[285] =
    kf_qss[128] * sc[5] * x1333 * x6329 + kf_qss[174] * sc[5] * x1374 * x6316 -
    0.6125 * kf_qss[238] * sc[5] * x57 * x704 +
    kf_qss[74] * sc[5] * x610 * x6323 - sc[0] * x1989 - sc[10] * x6765 -
    sc[10] * x6767 - sc[15] * x6722 - sc[17] * x6726 - sc[19] * x6749 -
    sc[25] * x6754 - sc[29] * x6718 - 2.97 * sc[2] * x4097 - sc[33] * x6738 -
    sc[37] * x6720 - sc[38] * x6716 - sc[3] * x5168 - sc[44] * x6730 -
    102000000.0 * sc[4] * x265 + 102000000.0 * sc[4] * x267 - sc[6] * x6740 -
    sc[8] * x6724 - x115 * x53 - 0.6148 * x120 * x57 + x131 * x6323 +
    x1332 * x6329 + x1360 * x6316 -
    1343000000.0 * x1373 * exp(-7890.4373198180001 * invT) - x1497 * x833 +
    x1497 * x840 - 1.837e+21 * x196 * x2435 - x197 * x6376 -
    2.2044e+22 * x2436 - x245 * x513 + 270000000000.0 * x2595 + x265 * x6377 -
    x267 * x6377 - x2861 + x370 * x6368 - 0.6125 * x41 * x57 + x411 * x6369 -
    x413 * x6369 - x49 * x827 - 0.6148 * x57 * x85 - x595 * x799 + x595 * x812 -
    x595 * x869 + x595 * x896 + (x5 * x513) * (-x265 + x267) +
    (-x184 * x49) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x595) * (x895 - x897) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x121 * x49 - x183 * x595) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[341] =
    -102000000.0 * sc[4] * x269 + 102000000.0 * sc[4] * x270 - sc[5] * x6740 +
    x1341 * x6330 + x1342 * x6330 + x1382 * x6317 - 3.4903e+21 * x2436 +
    42750000000.0 * x2595 + x269 * x6377 - x270 * x6377 + x416 * x6369 +
    x6324 * x680 - x6556 + (x5 * x513) * (-x269 + x270) +
    (-x184 * x49) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                     (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x595) * (x909 + x913) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (0 + (-x141) * (x909 + x913)) +
    (x121 * x49 - x183 * x595) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[397] = 102000000.0 * sc[4] * x188 - 102000000.0 * sc[4] * x272 +
           x1343 * x6330 - x188 * x6377 - 6.9806e+21 * x2436 +
           85500000000.0 * x2595 + x272 * x6377 + x411 * x6369 - x6556 +
           (x5 * x513) * (x188 - x272);
  J[453] =
    102000000.0 * sc[4] * x274 - 102000000.0 * sc[4] * x275 +
    26500000.0 * sc[4] * exp(-1100.0316314491199 * invT) - sc[5] * x6724 +
    x1344 * x6330 + x1345 * x6330 + x1383 * x6317 - x1497 * x919 -
    x274 * x6377 + x275 * x6377 + x375 * x6369 - x419 * x6369 + x49 * x844 -
    x595 * x915 - x595 * x920 + x6324 * x689 + x6324 * x693 + x7429 +
    (x5 * x513) * (x274 - x275) +
    (-x184 * x49) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                     (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x595) * (-x922) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x920 + (-x141) * (-x922)) +
    (x121 * x49 - x183 * x595) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[509] =
    -102000000.0 * sc[4] * x278 + 102000000.0 * sc[4] * x279 + sc[4] * x6593 +
    x1346 * x6330 + x1384 * x6317 + x1497 * x865 - x1497 * x868 + x278 * x6377 -
    x279 * x6377 + x420 * x6369 - x421 * x6369 - x49 * x838 - x49 * x859 -
    x595 * x834 + x595 * x835 - x595 * x885 + x595 * x936 - x628 * x6324 +
    x7429 + (x5 * x513) * (-x278 + x279) +
    (-x184 * x49) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (x141 * x595) * (x935 - x937) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (x121 * x49 - x183 * x595) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[565] = -102000000.0 * sc[4] * x281 + 102000000.0 * sc[4] * x282 +
           sc[4] * x5310 - sc[5] * x6765 - sc[5] * x6767 + x1385 * x6317 +
           x1386 * x6317 + x1497 * x863 - x1497 * x893 + x281 * x6377 -
           x282 * x6377 + x422 * x6369 - x423 * x6369 - x49 * x870 +
           x49 * x877 + x546 * x595 + x595 * x831 - x595 * x836 - x595 * x926 +
           x6324 * x657 + x6324 * x706 + x7429 + (x5 * x513) * (-x281 + x282) +
           (-x184 * x49) *
             (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
              (x183) * (-x863 + x893 +
                        (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
           (x141 * x595) * (x465 - x977) +
           (x113 * x49 - x1497 * x181 - x182 * x595) *
             (-x546 + x926 + (-x141) * (x465 - x977)) +
           (x121 * x49 - x183 * x595) *
             (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[621] =
    sc[0] * x2146 - 102000000.0 * sc[4] * x284 + 102000000.0 * sc[4] * x286 +
    sc[4] * x6672 + 1000000.0 * sc[4] + x1004 * x595 + x1387 * x6317 -
    x1497 * x889 + x1497 * x894 + x284 * x6377 - x286 * x6377 + x411 * x6369 -
    x424 * x6369 - x49 * x899 - x49 * x924 - x498 * x595 - x595 * x700 +
    x595 * x864 + x6324 * x717 + x7429 + (x5 * x513) * (-x284 + x286) +
    (-x184 * x49) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x595) * (x1001 - x1005) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x121 * x49 - x183 * x595) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[677] = -102000000.0 * sc[4] * x288 + 102000000.0 * sc[4] * x289 +
           sc[4] * x6693 + x1347 * x6330 + x288 * x6377 - x289 * x6377 + x7462 +
           (x5 * x513) * (-x288 + x289);
  J[733] =
    sc[4] * x6588 - x1000 * x595 + x1026 * x595 + x1348 * x6330 + x1497 * x932 -
    x1497 * x934 + x290 * x6377 + x411 * x6369 - x425 * x6369 - x49 * x925 -
    x49 * x938 + x595 * x861 - x595 * x866 + x6324 * x724 + x7429 + x7466 +
    (x5 * x513) * (x294) +
    (-x184 * x49) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x595) * (-x1027 + x553) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x121 * x49 - x183 * x595) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[789] =
    102000000.0 * sc[4] * x295 + sc[4] * x6686 - x1014 * x595 + x1046 * x595 +
    x1349 * x6330 + x1497 * x929 - x1497 * x974 - x295 * x6377 - x49 * x963 -
    x49 * x966 - x595 * x887 + x595 * x890 + x6324 * x725 + x7468 +
    (x5 * x513) * (-x290 + x295) +
    (-x184 * x49) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x595) * (x1039 - x1047) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x121 * x49 - x183 * x595) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[845] =
    -102000000.0 * sc[4] * x297 + 102000000.0 * sc[4] * x298 - sc[5] * x6722 +
    x1041 * x49 - x1055 * x595 - x1056 * x1497 - x1057 * x595 + x1350 * x6330 +
    x297 * x6377 - x298 * x6377 + x411 * x6369 - x426 * x6369 + x6324 * x727 +
    x7429 + (x5 * x513) * (-x297 + x298) +
    (-x184 * x49) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                     (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x595) * (x1058) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x1057 + (-x141) * (x1058)) +
    (x121 * x49 - x183 * x595) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[901] = -102000000.0 * sc[4] * x228 + 102000000.0 * sc[4] * x231 +
           x228 * x6377 - x231 * x6377 + x249 * x513 + x7462 +
           (x5 * x513) * (-x228 + x231);
  J[957] =
    102000000.0 * sc[4] * x303 - sc[5] * x6726 - x1060 * x595 - x1061 * x1497 -
    x1062 * x595 - x303 * x6377 + x39 * x49 + x6324 * x728 + x7468 +
    (x5 * x513) * (-x290 + x303) +
    (-x184 * x49) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                     (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (x141 * x595) * (-x1063) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x1062 + (-x141) * (-x1063)) +
    (x121 * x49 - x183 * x595) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1013] = -102000000.0 * sc[4] * x305 + 102000000.0 * sc[4] * x306 +
            10000000.0 * sc[4] * exp(-1006.43333160944 * invT) + x1351 * x6330 +
            x305 * x6377 - x306 * x6377 + x427 * x6369 - x6556 + x7429 +
            (x5 * x513) * (-x305 + x306);
  J[1069] = 102000000.0 * sc[4] * x307 - sc[5] * x6749 + x1353 * x6330 -
            x307 * x6377 + x7468 + (x5 * x513) * (-x290 + x307);
  J[1125] = 102000000.0 * sc[4] * x308 + sc[4] * x6678 - x308 * x6377 +
            x428 * x6369 + x7464 + x7476 + (x5 * x513) * (-x290 + x308);
  J[1181] = sc[4] * x6579 + x7477 + (x5 * x513) * (x294);
  J[1237] = 102000000.0 * sc[4] * x309 + 3.12 * sc[4] * x6647 + x1033 * x595 -
            x309 * x6377 + x561 * x6324 + x7468 + (x5 * x513) * (-x290 + x309) +
            (-x184 * x49) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x595) * (-x1067 + x1068) +
            (x113 * x49 - x1497 * x181 - x182 * x595) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x121 * x49 - x183 * x595) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1293] = x7477 + (x5 * x513) * (x294);
  J[1349] = -x1076 * x595 - x1079 * x1497 - x1082 * x595 + x1388 * x6317 -
            x49 * x643 + x7477 + (x5 * x513) * (x294) +
            (-x184 * x49) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x595) * (x1070 + x463) +
            (x113 * x49 - x1497 * x181 - x182 * x595) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x121 * x49 - x183 * x595) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1405] =
    -sc[5] * x6754 - x1086 * x595 - x1087 * x1497 - x1088 * x595 - x49 * x684 +
    x6324 * x751 + x7477 + (x5 * x513) * (x294) +
    (-x184 * x49) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                     (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x595) * (x1089) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x1088 + (-x141) * (x1089)) +
    (x121 * x49 - x183 * x595) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1461] =
    sc[4] * x6664 - x1092 * x595 - x1497 * x975 + x429 * x6369 + x595 * x891 +
    x6324 * x755 + x6324 * x759 + x7466 + x7476 + (x5 * x513) * (x294) +
    (-x184 * x49) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                     (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x595) * (x1093) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x1092 + (-x141) * (x1093)) +
    (x121 * x49 - x183 * x595) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1517] = x7477 + (x5 * x513) * (x294);
  J[1573] = 102000000.0 * sc[4] * x310 + sc[4] * x6633 - x310 * x6377 +
            x6324 * x760 + x7468 + (x5 * x513) * (-x290 + x310);
  J[1629] = -sc[5] * x6718 + x7477 + (x5 * x513) * (x294);
  J[1685] =
    5.12 * sc[4] * x6647 + x1095 * x49 - x1097 * x1497 - x1098 * x595 +
    x430 * x6369 - x595 * x886 + x7466 + x7476 + (x5 * x513) * (x294) +
    (-x184 * x49) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                     (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x595) * (x1099) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x1098 + (-x141) * (x1099)) +
    (x121 * x49 - x183 * x595) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1741] =
    102000000.0 * sc[4] * x311 - x1100 * x595 + x1389 * x6317 - x1497 * x707 -
    x311 * x6377 + x431 * x6369 + x49 * x968 - x595 * x726 + x6324 * x762 +
    x7464 + x7476 + (x5 * x513) * (-x290 + x311) +
    (-x184 * x49) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                     (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x595) * (-x1104) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x726 + (-x141) * (-x1104)) +
    (x121 * x49 - x183 * x595) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1797] =
    102000000.0 * sc[4] * x189 - 102000000.0 * sc[4] * x232 - x1002 * x49 +
    x1390 * x6317 + x1497 * x682 - x1497 * x999 - x189 * x6377 + x232 * x6377 -
    x367 * x6369 + x411 * x6369 - x49 * x587 + x564 * x595 - x595 * x612 -
    x595 * x928 + x595 * x930 + x6324 * x764 + x7429 +
    (x5 * x513) * (x189 - x232) +
    (-x184 * x49) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x595) * (-x585 + x688) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x121 * x49 - x183 * x595) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1853] = -sc[5] * x6738 + x7477 + (x5 * x513) * (x294);
  J[1909] = sc[4] * x6638 + x7477 + (x5 * x513) * (x294);
  J[1965] = x7477 + (x5 * x513) * (x294);
  J[2021] =
    x7477 + (x5 * x513) * (x294) +
    (-x184 * x49) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                     (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x595) * (-x692) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (0 + (-x141) * (-x692)) +
    (x121 * x49 - x183 * x595) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2077] = -sc[5] * x6720 + x6324 * x767 + x7477 + (x5 * x513) * (x294);
  J[2133] = 102000000.0 * sc[4] * x238 + 10000000.0 * sc[4] - sc[5] * x6716 -
            x238 * x6377 + x239 * x513 + x7468 + (x5 * x513) * (x238 - x290);
  J[2189] = x7477 + (x5 * x513) * (x294);
  J[2245] = sc[4] * x6633 + x1391 * x6317 + x7477 + (x5 * x513) * (x294);
  J[2301] = x7477 + (x5 * x513) * (x294);
  J[2357] = x7477 + (x5 * x513) * (x294);
  J[2413] = sc[4] * x6633 + x7477 + (x5 * x513) * (x294);
  J[2469] =
    -sc[5] * x6730 + x7477 + (x5 * x513) * (x294) +
    (-x184 * x49) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                     (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x595) * (-x710) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (0 + (-x141) * (-x710)) +
    (x121 * x49 - x183 * x595) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2525] =
    sc[4] * x6705 + sc[4] * x6709 + x1003 * x1497 - x1497 * x970 + x482 * x595 +
    x49 * x524 - x49 * x7 - x595 * x712 + x595 * x927 - x595 * x933 + x7477 +
    (x5 * x513) * (x294) +
    (-x184 * x49) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x595) * (x103 - x545) +
    (x113 * x49 - x1497 * x181 - x182 * x595) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x121 * x49 - x183 * x595) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2581] =
    x101 * x1497 - x135 * x595 + x7477 + (x5 * x513) * (x294) +
    (-x184 * x49) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                     (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x595) * (-x126) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x135 + (-x141) * (-x126)) +
    (x121 * x49 - x183 * x595) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2637] =
    -x107 * x1497 - x461 * x595 + x595 * x83 + x7477 + (x5 * x513) * (x294) +
    (-x184 * x49) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                     (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x595) * (x481) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x461 + (-x141) * (x481)) +
    (x121 * x49 - x183 * x595) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2693] =
    -x130 * x595 - x1497 * x566 + x19 * x49 - x562 * x595 + x7477 +
    (x5 * x513) * (x294) +
    (-x184 * x49) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                     (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x595) * (x464) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x130 + (-x141) * (x464)) +
    (x121 * x49 - x183 * x595) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2749] =
    -x132 * x595 - x1497 * x582 + x49 * x573 - x595 * x967 + x7477 +
    (x5 * x513) * (x294) +
    (-x184 * x49) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                     (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x595) * (-x586) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x132 + (-x141) * (-x586)) +
    (x121 * x49 - x183 * x595) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2805] =
    -x104 * x1497 - x106 * x595 - x49 * x529 - x50 * x595 + x7477 +
    (x5 * x513) * (x294) +
    (-x184 * x49) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                     (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x595) * (x127) +
    (x113 * x49 - x1497 * x181 - x182 * x595) * (x106 + (-x141) * (x127)) +
    (x121 * x49 - x183 * x595) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2861] = x7477 + (x5 * x513) * (x294);
  J[2917] = 2500000.0 * sc[4] + x7477 + (x5 * x513) * (x294);
  J[2973] = 5000000.0 * sc[4] + x1392 * x6317 + x382 * x6369 + x7466 + x7476 +
            (x5 * x513) * (x294);
  J[3029] = x7477 + (x5 * x513) * (x294);
  J[6] = 73400000.0 * sc[0] * x190 - 73400000.0 * sc[0] * x233 -
         160000000.0 * sc[18] * x1325 + sc[18] * x2128 + 110000000.0 * sc[19] -
         30000000.0 * sc[2] * x1325 + 30200000.0 * sc[2] * x190 -
         30200000.0 * sc[2] * x233 - sc[3] * x1 + 102000000.0 * sc[4] * x190 -
         102000000.0 * sc[4] * x233 + 100000.0 * sc[6] * x681 -
         100000.0 * sc[6] * x734 - 3000000.0 * sc[7] * x1325 + sc[7] * x2103 +
         121000000.0 * sc[8] * x190 - 121000000.0 * sc[8] * x233 +
         x1325 * x2079 - x1363 * x7488 + x190 * x4952 + 73400000.0 * x197 +
         x2218 - x233 * x4952 - x364 * x383 + x364 * x402 - x445 * x4940 -
         x448 * x4940 - x606 * x7491 + x7509 +
         (-50000000.0 * sc[3] * x5) * (x190 - x233);
  J[62] = -160000000.0 * sc[18] * x1334 - 30000000.0 * sc[2] * x1334 -
          30200000.0 * sc[2] * x248 + 30200000.0 * sc[2] * x251 -
          70000000.0 * sc[3] * x1334 + 50000000.0 * sc[3] * x1491 -
          102000000.0 * sc[4] * x248 + 102000000.0 * sc[4] * x251 -
          100000.0 * sc[6] * x770 + 100000.0 * sc[6] * x772 -
          3000000.0 * sc[7] * x1334 - 121000000.0 * sc[8] * x248 +
          121000000.0 * sc[8] * x251 + x1334 * x2079 - x1375 * x7488 -
          x2217 * x248 + x2217 * x251 - 161.675 * x2233 +
          465000000000.0 * x2334 - x248 * x4952 + x251 * x4952 - x364 * x403 +
          x364 * x404 + x373 + x3860 + x4071 - x617 * x7491 +
          (-50000000.0 * sc[3] * x5) * (-x248 + x251);
  J[118] = -30000000.0 * kf_qss[196] * sc[2] * x1333 -
           73400000.0 * sc[0] * x253 + 73400000.0 * sc[0] * x254 -
           160000000.0 * sc[18] * x1335 + 160000000.0 * sc[19] +
           sc[21] * x4081 - 30200000.0 * sc[2] * x253 +
           30200000.0 * sc[2] * x254 - 70000000.0 * sc[3] * x1335 -
           102000000.0 * sc[4] * x253 + 102000000.0 * sc[4] * x254 -
           100000.0 * sc[6] * x801 + 100000.0 * sc[6] * x804 -
           3000000.0 * sc[7] * x1335 - 121000000.0 * sc[8] * x253 +
           121000000.0 * sc[8] * x254 - 30000000.0 * x1332 + x1335 * x2079 -
           x1376 * x7488 + 30200000.0 * x197 - x2217 * x253 + x2217 * x254 -
           x253 * x4952 + x254 * x4952 - x364 * x405 + x364 * x406 + x4086 -
           x4108 - x449 * x4940 - x5109 - x640 * x7491 + x7509 +
           (-50000000.0 * sc[3] * x5) * (-x253 + x254);
  J[174] = -73400000.0 * sc[0] * x256 + 73400000.0 * sc[0] * x258 -
           160000000.0 * sc[18] * x1336 - 30000000.0 * sc[2] * x1336 -
           30200000.0 * sc[2] * x256 + 30200000.0 * sc[2] * x258 +
           50000000.0 * sc[3] * x1492 - 102000000.0 * sc[4] * x256 +
           102000000.0 * sc[4] * x258 - 100000.0 * sc[6] * x817 +
           100000.0 * sc[6] * x842 - 121000000.0 * sc[8] * x256 +
           121000000.0 * sc[8] * x258 + x1336 * x2079 - x1377 * x7488 +
           7580000.0 * x197 * exp(-206.318832979935 * invT) + x2335 -
           x256 * x4952 + x258 * x4952 + x2746 + x2759 - x364 * x407 + x3828 +
           x4023 - x4194 - x645 * x7491 + x7502 + x7551 +
           (-50000000.0 * sc[3] * x5) * (-x256 + x258);
  J[230] = -73400000.0 * sc[0] * x260 + 73400000.0 * sc[0] * x263 -
           10.0e-13 * sc[14] * sc[6] - 160000000.0 * sc[18] * x1337 -
           160000000.0 * sc[18] * x1339 - 30000000.0 * sc[2] * x1337 -
           30000000.0 * sc[2] * x1339 + 50000000.0 * sc[3] * x1493 -
           102000000.0 * sc[4] * x260 + 102000000.0 * sc[4] * x263 -
           100000.0 * sc[6] * x829 + 100000.0 * sc[6] * x872 -
           3000000.0 * sc[7] * x1337 - 3000000.0 * sc[7] * x1339 +
           sc[7] * x6584 - 121000000.0 * sc[8] * x260 +
           121000000.0 * sc[8] * x263 + x1337 * x2079 + x1339 * x2079 -
           x1378 * x7488 - x1379 * x7488 + 102000000.0 * x197 - x260 * x4952 +
           x263 * x4952 + x2840 - x364 * x409 + x364 * x410 - x647 * x7491 -
           x658 * x7491 + x6696 + x7509 +
           (-50000000.0 * sc[3] * x5) * (-x260 + x263);
  J[286] = -73400000.0 * sc[0] * x265 + 73400000.0 * sc[0] * x267 -
           160000000.0 * sc[18] * x1340 - 30000000.0 * sc[2] * x1340 -
           30200000.0 * sc[2] * x265 + 30200000.0 * sc[2] * x267 -
           70000000.0 * sc[3] * x1340 + 50000000.0 * sc[3] * x245 -
           102000000.0 * sc[4] * x265 + 102000000.0 * sc[4] * x267 -
           sc[6] * x6740 - 100000.0 * sc[6] * x895 + 100000.0 * sc[6] * x897 -
           3000000.0 * sc[7] * x1340 - 121000000.0 * sc[8] * x265 +
           121000000.0 * sc[8] * x267 + x1340 * x2079 - x1380 * x7488 -
           x2217 * x265 + x2217 * x267 - 776.04 * x2233 +
           2232000000000.0 * x2334 - x265 * x4952 + x267 * x4952 + x364 * x413 +
           x373 + x3828 + x4347 - x672 * x7491 + x7575 +
           (-50000000.0 * sc[3] * x5) * (-x265 + x267);
  J[342] =
    kf_qss[42] * sc[6] * x1333 * x2078 - sc[12] * x7596 - sc[15] * x7578 -
    sc[17] * x7578 - 150000.0 * sc[24] * exp(-2415.43999586265 * invT) -
    30000000.0 * sc[2] * x1341 - 30000000.0 * sc[2] * x1342 -
    70000000.0 * sc[3] * x1341 - 70000000.0 * sc[3] * x1342 -
    102000000.0 * sc[4] * x269 + 102000000.0 * sc[4] * x270 - sc[5] * x6740 -
    100000.0 * sc[6] * x909 - 100000.0 * sc[6] * x913 -
    3000000.0 * sc[7] * x1341 - 3000000.0 * sc[7] * x1342 -
    121000000.0 * sc[8] * x269 + 121000000.0 * sc[8] * x270 - sc[9] * x7586 +
    x1332 * x2078 + x1342 * x2079 - x1382 * x7488 + x3012 + x3828 + x3881 -
    x4363 + x4392 - 100000.0 * x678 * x733 - x680 * x7491 + x6828 + x7502 +
    x7594 + x7595 + x7601 + (-50000000.0 * sc[3] * x5) * (-x269 + x270);
  J[398] = -3000000.0 * kf_qss[199] * sc[7] * x1333 +
           73400000.0 * sc[0] * x188 + sc[0] * x2103 -
           73400000.0 * sc[0] * x272 - 160000000.0 * sc[18] * x1343 -
           30000000.0 * sc[2] * x1343 + 30200000.0 * sc[2] * x188 -
           30200000.0 * sc[2] * x272 - 70000000.0 * sc[3] * x1343 +
           102000000.0 * sc[4] * x188 - 102000000.0 * sc[4] * x272 +
           sc[4] * x6584 + 121000000.0 * sc[8] * x188 -
           121000000.0 * sc[8] * x272 - 3000000.0 * x1332 + x1343 * x2079 +
           x188 * x2217 + x188 * x4952 - x2217 * x272 - 245.746 * x2233 +
           706800000000.0 * x2334 - x272 * x4952 + x3828 + x4393 + x4414 +
           x7502 + x7575 + (-50000000.0 * sc[3] * x5) * (x188 - x272);
  J[454] = 73400000.0 * sc[0] * x274 - 73400000.0 * sc[0] * x275 -
           160000000.0 * sc[18] * x1344 - 160000000.0 * sc[18] * x1345 -
           30000000.0 * sc[2] * x1344 - 30000000.0 * sc[2] * x1345 +
           102000000.0 * sc[4] * x274 - 102000000.0 * sc[4] * x275 +
           100000.0 * sc[6] * x922 - 3000000.0 * sc[7] * x1344 -
           3000000.0 * sc[7] * x1345 + 121000000.0 * sc[8] * x274 -
           121000000.0 * sc[8] * x275 + x1344 * x2079 + x1345 * x2079 -
           x1383 * x7488 + 121000000.0 * x197 + x2217 * x274 - x2217 * x275 +
           x274 * x4952 - x275 * x4952 + x6879 - x689 * x7491 - x693 * x7491 +
           x7506 + x7509 + (-50000000.0 * sc[3] * x5) * (x274 - x275);
  J[510] = -73400000.0 * sc[0] * x278 + 73400000.0 * sc[0] * x279 -
           160000000.0 * sc[18] * x1346 - 30000000.0 * sc[2] * x1346 -
           30200000.0 * sc[2] * x278 + 30200000.0 * sc[2] * x279 -
           70000000.0 * sc[3] * x1346 - 102000000.0 * sc[4] * x278 +
           102000000.0 * sc[4] * x279 - sc[6] * x7586 -
           100000.0 * sc[6] * x935 + 100000.0 * sc[6] * x937 -
           3000000.0 * sc[7] * x1346 - 121000000.0 * sc[8] * x278 +
           121000000.0 * sc[8] * x279 + x1346 * x2079 - x1384 * x7488 -
           x2217 * x278 + x2217 * x279 - x278 * x4952 + x279 * x4952 -
           x364 * x420 + x364 * x421 + x628 * x7491 + x7509 +
           (-50000000.0 * sc[3] * x5) * (-x278 + x279);
  J[566] = -73400000.0 * sc[0] * x281 + 73400000.0 * sc[0] * x282 +
           1000000.0 * sc[21] * x2474 - 30200000.0 * sc[2] * x281 +
           30200000.0 * sc[2] * x282 - 102000000.0 * sc[4] * x281 +
           102000000.0 * sc[4] * x282 - 100000.0 * sc[6] * x465 +
           100000.0 * sc[6] * x977 - 121000000.0 * sc[8] * x281 +
           121000000.0 * sc[8] * x282 - x1385 * x7488 - x1386 * x7488 -
           x2217 * x281 + x2217 * x282 - x364 * x422 + x364 * x423 -
           x657 * x7491 - x706 * x7491 + x7509 + x7640 +
           (-50000000.0 * sc[3] * x5) * (-x281 + x282);
  J[622] = -73400000.0 * sc[0] * x284 + 73400000.0 * sc[0] * x286 -
           30200000.0 * sc[2] * x284 + 30200000.0 * sc[2] * x286 -
           102000000.0 * sc[4] * x284 + 102000000.0 * sc[4] * x286 -
           100000.0 * sc[6] * x1001 + 100000.0 * sc[6] * x1005 -
           121000000.0 * sc[8] * x284 + 121000000.0 * sc[8] * x286 -
           x1387 * x7488 - x2217 * x284 + x2217 * x286 + x2335 - x284 * x4952 +
           x286 * x4952 + x364 * x424 + x373 + x3828 + x4023 - x717 * x7491 +
           x7575 + (-50000000.0 * sc[3] * x5) * (-x284 + x286);
  J[678] = -73400000.0 * sc[0] * x288 + 73400000.0 * sc[0] * x289 -
           160000000.0 * sc[18] * x1347 - 30000000.0 * sc[2] * x1347 -
           30200000.0 * sc[2] * x288 + 30200000.0 * sc[2] * x289 -
           70000000.0 * sc[3] * x1347 - 102000000.0 * sc[4] * x288 +
           102000000.0 * sc[4] * x289 - sc[6] * x7596 -
           3000000.0 * sc[7] * x1347 - 121000000.0 * sc[8] * x288 +
           121000000.0 * sc[8] * x289 + x1347 * x2079 + x186 * x3822 -
           x2217 * x288 + x2217 * x289 + x2335 - x288 * x4952 + x289 * x4952 +
           x3828 + x4023 - x454 * x4940 + x7502 + x7575 +
           (-50000000.0 * sc[3] * x5) * (-x288 + x289);
  J[734] = -160000000.0 * sc[18] * x1348 - 30000000.0 * sc[2] * x1348 -
           70000000.0 * sc[3] * x1348 + 100000.0 * sc[6] * x1027 -
           100000.0 * sc[6] * x553 - 3000000.0 * sc[7] * x1348 + x1348 * x2079 +
           x364 * x425 + x373 + x4023 - x724 * x7491 + x7575 + x7672 +
           (-50000000.0 * sc[3] * x5) * (x294);
  J[790] = 73400000.0 * sc[0] * x295 - 160000000.0 * sc[18] * x1349 -
           30000000.0 * sc[2] * x1349 + 30200000.0 * sc[2] * x295 -
           70000000.0 * sc[3] * x1349 - 10.0e-13 * sc[4] * sc[6] +
           102000000.0 * sc[4] * x295 - 100000.0 * sc[6] * x1039 +
           100000.0 * sc[6] * x1047 - sc[6] * x4357 - sc[6] * x7591 -
           3000000.0 * sc[7] * x1349 + 121000000.0 * sc[8] * x295 +
           x1349 * x2079 + x2217 * x295 + x295 * x4952 - x5812 - x725 * x7491 +
           x7680 + (-50000000.0 * sc[3] * x5) * (-x290 + x295);
  J[846] = -73400000.0 * sc[0] * x297 + 73400000.0 * sc[0] * x298 -
           160000000.0 * sc[18] * x1350 - 30000000.0 * sc[2] * x1350 -
           30200000.0 * sc[2] * x297 + 30200000.0 * sc[2] * x298 -
           70000000.0 * sc[3] * x1350 - 102000000.0 * sc[4] * x297 +
           102000000.0 * sc[4] * x298 - 100000.0 * sc[6] * x1058 -
           sc[6] * x7578 - 3000000.0 * sc[7] * x1350 -
           121000000.0 * sc[8] * x297 + 121000000.0 * sc[8] * x298 +
           x1350 * x2079 - x2217 * x297 + x2217 * x298 + x2335 - x297 * x4952 +
           x298 * x4952 + x364 * x426 + x373 + x3828 + x4023 - x727 * x7491 +
           x7575 + (-50000000.0 * sc[3] * x5) * (-x297 + x298);
  J[902] = -73400000.0 * sc[0] * x228 + 73400000.0 * sc[0] * x231 -
           30200000.0 * sc[2] * x228 + 30200000.0 * sc[2] * x231 -
           50000000.0 * sc[3] * x249 - 102000000.0 * sc[4] * x228 +
           102000000.0 * sc[4] * x231 - 121000000.0 * sc[8] * x228 +
           121000000.0 * sc[8] * x231 - x2217 * x228 + x2217 * x231 -
           x228 * x4952 + x231 * x4952 + x2335 + x3828 + x4023 + x7502 + x7575 +
           (-50000000.0 * sc[3] * x5) * (-x228 + x231);
  J[958] = -kf_qss[104] * x5912 + 73400000.0 * sc[0] * x303 +
           30200000.0 * sc[2] * x303 + 102000000.0 * sc[4] * x303 +
           100000.0 * sc[6] * x1063 - sc[6] * x7578 +
           121000000.0 * sc[8] * x303 + x2217 * x303 + x303 * x4952 -
           x728 * x7491 + x7680 + (-50000000.0 * sc[3] * x5) * (-x290 + x303);
  J[1014] = -160000000.0 * kf_qss[203] * sc[18] * x1333 + sc[0] * x2128 -
            73400000.0 * sc[0] * x305 + 73400000.0 * sc[0] * x306 -
            30000000.0 * sc[2] * x1351 - 30200000.0 * sc[2] * x305 +
            30200000.0 * sc[2] * x306 - 70000000.0 * sc[3] * x1351 -
            102000000.0 * sc[4] * x305 + 102000000.0 * sc[4] * x306 -
            3000000.0 * sc[7] * x1351 - 121000000.0 * sc[8] * x305 +
            121000000.0 * sc[8] * x306 - 160000000.0 * x1332 + x1351 * x2079 -
            x2217 * x305 + x2217 * x306 + x2335 - x305 * x4952 + x306 * x4952 -
            x364 * x427 + x3828 + x4023 - x458 * x4940 + x7502 +
            (-50000000.0 * sc[3] * x5) * (-x305 + x306);
  J[1070] = -160000000.0 * kf_qss[41] * sc[0] * sc[18] / x1323 +
            73400000.0 * sc[0] * x307 + 110000000.0 * sc[0] -
            30000000.0 * sc[2] * x1353 + 30200000.0 * sc[2] * x307 +
            160000000.0 * sc[2] - 70000000.0 * sc[3] * x1353 +
            102000000.0 * sc[4] * x307 - 3000000.0 * sc[7] * x1353 +
            121000000.0 * sc[8] * x307 + x1353 * x2079 + x2217 * x307 +
            x307 * x4952 + x7680 + (-50000000.0 * sc[3] * x5) * (-x290 + x307);
  J[1126] = 73400000.0 * sc[0] * x308 + 30200000.0 * sc[2] * x308 +
            102000000.0 * sc[4] * x308 + 121000000.0 * sc[8] * x308 +
            x2217 * x308 + x308 * x4952 + x3322 - x364 * x428 + x3907 + x4023 +
            x7042 + x7464 + x7502 + x7668 + x7670 +
            (-50000000.0 * sc[3] * x5) * (-x290 + x308);
  J[1182] = 1000000.0 * sc[10] * x2474 + sc[2] * x4081 + x7718 +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[1238] = 73400000.0 * sc[0] * x309 + 30200000.0 * sc[2] * x309 +
            102000000.0 * sc[4] * x309 + 100000.0 * sc[6] * x1067 -
            100000.0 * sc[6] * x1068 + 121000000.0 * sc[8] * x309 +
            x2217 * x309 + x309 * x4952 - x561 * x7491 + x7680 +
            (-50000000.0 * sc[3] * x5) * (-x290 + x309);
  J[1294] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1350] = -100000.0 * sc[6] * x1070 - 100000.0 * sc[6] * x463 -
            150000.0 * sc[6] * exp(-2415.43999586265 * invT) - x1388 * x7488 +
            x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1406] = -100000.0 * sc[6] * x1089 - x7491 * x751 + x7718 +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[1462] = -100000.0 * sc[6] * x1093 - x364 * x429 + x4023 - x7491 * x755 -
            x7491 * x759 + x7502 + x7672 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1518] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1574] = 73400000.0 * sc[0] * x310 + 30200000.0 * sc[2] * x310 +
            102000000.0 * sc[4] * x310 + 121000000.0 * sc[8] * x310 +
            x2217 * x310 + x310 * x4952 + x3322 + x3907 + x4023 + x7042 +
            x7464 - x7491 * x760 + x7502 + x7575 + x7668 + x7670 +
            (-50000000.0 * sc[3] * x5) * (-x290 + x310);
  J[1630] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1686] = -100000.0 * sc[6] * x1099 - x364 * x430 + x4023 + x7502 + x7672 +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[1742] = 73400000.0 * sc[0] * x311 + 30200000.0 * sc[2] * x311 +
            102000000.0 * sc[4] * x311 + 100000.0 * sc[6] * x1104 +
            121000000.0 * sc[8] * x311 - x1389 * x7488 + x2217 * x311 +
            x311 * x4952 + x3322 - x364 * x431 + x3907 + x4023 + x7042 + x7464 -
            x7491 * x762 + x7502 + x7668 + x7670 +
            (-50000000.0 * sc[3] * x5) * (-x290 + x311);
  J[1798] = 73400000.0 * sc[0] * x189 - 73400000.0 * sc[0] * x232 +
            30200000.0 * sc[2] * x189 - 30200000.0 * sc[2] * x232 +
            102000000.0 * sc[4] * x189 - 102000000.0 * sc[4] * x232 +
            100000.0 * sc[6] * x585 - 100000.0 * sc[6] * x688 +
            121000000.0 * sc[8] * x189 - 121000000.0 * sc[8] * x232 -
            x1390 * x7488 + x189 * x2217 + x189 * x4952 - x2217 * x232 -
            x232 * x4952 + x2335 + x364 * x367 + x373 + x3828 + x4023 -
            x7491 * x764 + x7575 + (-50000000.0 * sc[3] * x5) * (x189 - x232);
  J[1854] = x7718 + x7748 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1910] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1966] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2022] =
    100000.0 * sc[6] * x692 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2078] = -kf_qss[167] * x5912 - x7491 * x767 + x7718 +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[2134] = 73400000.0 * sc[0] * x238 + 30200000.0 * sc[2] * x238 -
            50000000.0 * sc[3] * x239 + 102000000.0 * sc[4] * x238 +
            121000000.0 * sc[8] * x238 + x2217 * x238 + x238 * x4952 + x7680 +
            (-50000000.0 * sc[3] * x5) * (x238 - x290);
  J[2190] = -x460 * x4940 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2246] = -x1391 * x7488 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2302] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2358] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2414] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2470] = 100000.0 * sc[6] * x710 + x7718 +
            100000000000.0 * exp(-4830.87999172531 * invT) +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[2526] = -100000.0 * sc[6] * x103 + 100000.0 * sc[6] * x545 + x7718 +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[2582] =
    100000.0 * sc[6] * x126 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2638] =
    -100000.0 * sc[6] * x481 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2694] =
    -100000.0 * sc[6] * x464 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2750] =
    100000.0 * sc[6] * x586 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2806] =
    -100000.0 * sc[6] * x127 + x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2862] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2918] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2974] = -x1392 * x7488 - x364 * x382 + x4023 + x7502 + x7672 +
            (-50000000.0 * sc[3] * x5) * (x294);
  J[3030] = x7718 + (-50000000.0 * sc[3] * x5) * (x294);
  J[7] =
    3000000.0 * sc[7] * x1325 - x190 * x4973 + x2105 + x233 * x4973 + x7764;
  J[63] = -30000000.0 * sc[2] * x248 + 30000000.0 * sc[2] * x251 +
          3000000.0 * sc[7] * x1334 + x248 * x4973 - x251 * x4973 +
          2.53125e+20 * x4004 * x4008 - 2.53125e+20 * x4004 * x4020 +
          3375000000000.0 * x4011 * x4015 - 3375000000000.0 * x4011 * x4018;
  J[119] = -30000000.0 * sc[2] * x253 + 30000000.0 * sc[2] * x254 +
           3000000.0 * sc[7] * x1335 + 30000000.0 * x197 + x253 * x4973 -
           x254 * x4973 - x4086 + x4108 + x7764;
  J[175] = sc[19] * x5238 - 30000000.0 * sc[2] * x256 +
           30000000.0 * sc[2] * x258 + 3000000.0 * sc[7] * x1336 +
           x256 * x4973 - x258 * x4973 + x4194 + x7764;
  J[231] = -30000000.0 * sc[2] * x260 + 30000000.0 * sc[2] * x263 +
           sc[6] * x2810 + 3000000.0 * sc[7] * x1337 +
           3000000.0 * sc[7] * x1339 - sc[7] * x6584 + x260 * x4973 -
           x263 * x4973 + x7764;
  J[287] = -30000000.0 * sc[2] * x265 + 30000000.0 * sc[2] * x267 +
           3000000.0 * sc[7] * x1340 + x265 * x4973 - x267 * x4973 +
           1.215e+21 * x4004 * x4008 - 1.215e+21 * x4004 * x4020 +
           16200000000000.0 * x4011 * x4015 - 16200000000000.0 * x4011 * x4018;
  J[343] =
    sc[10] * x6799 + sc[12] * x7596 +
    1350000000000.0 * sc[2] * x196 * x4011 * exp(x4013) -
    30000000.0 * sc[2] * x269 + 30000000.0 * sc[2] * x270 + sc[4] * x2810 +
    3000000.0 * sc[7] * x1341 + 3000000.0 * sc[7] * x1342 + x269 * x4973 -
    x270 * x4973 + 1.92375e+20 * x4004 * x4008 - 1.92375e+20 * x4004 * x4020 +
    2565000000000.0 * x4011 * x4015 - 2565000000000.0 * x4011 * x4018 + x4363;
  J[399] = 3000000.0 * kf_qss[199] * sc[7] * x1333 - sc[4] * x6584 +
           3000000.0 * x1332 - x188 * x4973 -
           147400000.0 * x197 * exp(-67229.7465515105 * invT) + x2360 -
           1350000000000.0 * x2413 * x4011 * exp(x4005 + x4013) + x272 * x4973 +
           3.8475e+20 * x4004 * x4008 - 3.8475e+20 * x4004 * x4020 +
           5130000000000.0 * x4011 * x4015 - 5130000000000.0 * x4011 * x4018 -
           x4393;
  J[455] = 30000000.0 * sc[2] * x274 - 30000000.0 * sc[2] * x275 +
           3000000.0 * sc[7] * x1344 + 3000000.0 * sc[7] * x1345 -
           x274 * x4973 + x275 * x4973 + x7764;
  J[511] = -30000000.0 * sc[2] * x278 + 30000000.0 * sc[2] * x279 +
           3000000.0 * sc[7] * x1346 + x278 * x4973 - x279 * x4973 + x7764;
  J[567] = -30000000.0 * sc[2] * x281 + 30000000.0 * sc[2] * x282 +
           sc[6] * x6799 + x281 * x4973 - x282 * x4973 + x7764;
  J[623] = -30000000.0 * sc[2] * x284 + 30000000.0 * sc[2] * x286 +
           x284 * x4973 - x286 * x4973 + x7764;
  J[679] = -30000000.0 * sc[2] * x288 + 30000000.0 * sc[2] * x289 +
           sc[6] * x7596 + 3000000.0 * sc[7] * x1347 + x288 * x4973 -
           x289 * x4973 + x7764;
  J[735] = 3000000.0 * sc[7] * x1348 + x7767;
  J[791] = 30000000.0 * sc[2] * x295 + 3000000.0 * sc[7] * x1349 -
           x295 * x4973 + x7766;
  J[847] = -30000000.0 * sc[2] * x297 + 30000000.0 * sc[2] * x298 +
           3000000.0 * sc[7] * x1350 + x297 * x4973 - x298 * x4973 + x7764;
  J[903] = -30000000.0 * sc[2] * x228 + 30000000.0 * sc[2] * x231 +
           x228 * x4973 - x231 * x4973 + x7764;
  J[959] = 30000000.0 * sc[2] * x303 - x303 * x4973 + x7766;
  J[1015] = -30000000.0 * sc[2] * x305 + 30000000.0 * sc[2] * x306 +
            3000000.0 * sc[7] * x1351 + x305 * x4973 - x306 * x4973 + x7764;
  J[1071] = 30000000.0 * sc[2] * x307 + sc[3] * x5238 +
            3000000.0 * sc[7] * x1353 - x307 * x4973 + x7766;
  J[1127] = 30000000.0 * sc[2] * x308 - x308 * x4973 + x7766;
  J[1183] = x7767;
  J[1239] = 30000000.0 * sc[2] * x309 - x309 * x4973 + x7766;
  J[1295] = x7767;
  J[1351] = x7767;
  J[1407] = x7767;
  J[1463] = x7767;
  J[1519] = x7767;
  J[1575] = 30000000.0 * sc[2] * x310 - x310 * x4973 + x7766;
  J[1631] = x7767;
  J[1687] = x7767;
  J[1743] = 30000000.0 * sc[2] * x311 - x311 * x4973 + x7766;
  J[1799] = 30000000.0 * sc[2] * x189 - 30000000.0 * sc[2] * x232 -
            x189 * x4973 + x232 * x4973 + x7764;
  J[1855] = x7767;
  J[1911] = x7767;
  J[1967] = x7767;
  J[2023] = x7767;
  J[2079] = x7767;
  J[2135] = 30000000.0 * sc[2] * x238 - 30000000.0 * sc[2] * x290 -
            x238 * x4973 + x290 * x4973 + x7764;
  J[2191] = x7767;
  J[2247] = x7767;
  J[2303] = x7767;
  J[2359] = x7767;
  J[2415] = x7767;
  J[2471] = x7767;
  J[2527] = x7767;
  J[2583] = x7767;
  J[2639] = x7767;
  J[2695] = x7767;
  J[2751] = x7767;
  J[2807] = x7767;
  J[2863] = x7767;
  J[2919] = x7767;
  J[2975] = x7767;
  J[3031] = x7767;
  J[8] =
    sc[12] * x2228 - 120000000.0 * sc[13] * x1325 + sc[14] * x2185 +
    72200000.0 * sc[15] - 10.0e-13 * sc[18] * sc[8] + sc[18] * x2128 -
    70000000.0 * sc[1] * x1325 + sc[21] * x91 + sc[22] * x2106 +
    20000000.0 * sc[8] * x1325 - sc[8] * x185 * x2255 -
    141000000.0 * sc[8] * x190 - sc[8] * x2258 + 141000000.0 * sc[8] * x233 +
    50000000.0 * sc[8] * x383 - 50000000.0 * sc[8] * x402 -
    80000000.0 * sc[9] * x1325 + sc[9] * x1993 - x1325 * x6330 - x1363 * x7770 -
    x190 * x3990 + x190 * x7797 + x233 * x3990 - x233 * x7797 + x2469 -
    x339 * x3966 - x339 * x6338 - x364 * x383 + x364 * x402 + x373 -
    x383 * x7789 + x3981 * x606 + x402 * x7789 + x5006 - x550 * x7794 -
    x606 * x7776 + x6426 + x7806 + x7857 +
    (x184 * x969) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x141 * x629) * (-x681 + x734) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (-x121 * x969 + x183 * x629) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[64] =
    -70000000.0 * kf_qss[194] * sc[1] * x1333 + sc[12] * x3846 -
    120000000.0 * sc[13] * x1334 + 7534000.0 * sc[14] * x3842 +
    20000000.0 * sc[8] * x1334 + 141000000.0 * sc[8] * x248 - sc[8] * x2498 -
    141000000.0 * sc[8] * x251 + 50000000.0 * sc[8] * x403 -
    50000000.0 * sc[8] * x404 - 80000000.0 * sc[9] * x1334 -
    70000000.0 * x1332 - x1334 * x6330 - x1375 * x7770 + x248 * x3990 -
    x248 * x7797 - x251 * x3990 + x251 * x7797 + x2585 - x364 * x403 +
    x364 * x404 + x373 + x3981 * x617 - x403 * x7789 + x404 * x7789 -
    x617 * x7776 + x7826 + x7871 + x7889 +
    (x184 * x969) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x141 * x629) * (x770 - x772) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (-x121 * x969 + x183 * x629) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[120] =
    -120000000.0 * sc[13] * x1335 + 10.2 * sc[14] * x2657 -
    70000000.0 * sc[1] * x1335 + sc[22] * x2686 + 13000000.0 * sc[26] * x4151 +
    20000000.0 * sc[8] * x1335 + 141000000.0 * sc[8] * x253 -
    141000000.0 * sc[8] * x254 + 50000000.0 * sc[8] * x405 -
    50000000.0 * sc[8] * x406 - 80000000.0 * sc[8] -
    80000000.0 * sc[9] * x1335 + sc[9] * x4103 - x1335 * x6330 - x1376 * x7770 +
    x2469 + x253 * x3990 - x253 * x7797 - x254 * x3990 + x254 * x7797 -
    x285 * x3965 + x352 * x3966 + x352 * x6338 - x364 * x405 + x364 * x406 +
    x373 + x3981 * x640 - x405 * x7789 + x406 * x7789 + x5005 + x5066 -
    x640 * x7776 + x7869 + x7879 + x7917 +
    (x184 * x969) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x141 * x629) * (x801 - x804) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (-x121 * x969 + x183 * x629) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[176] = -120000000.0 * sc[13] * x1336 - 70000000.0 * sc[1] * x1336 +
           20000000.0 * sc[8] * x1336 + 141000000.0 * sc[8] * x256 -
           141000000.0 * sc[8] * x258 + 50000000.0 * sc[8] * x407 -
           80000000.0 * sc[9] * x1336 + sc[9] * x5171 - x1336 * x6330 -
           x1377 * x7770 + x2469 + x256 * x3990 - x256 * x7797 - x258 * x3990 +
           x258 * x7797 - x353 * x6338 + x354 * x6338 - x364 * x407 +
           x3981 * x645 - x407 * x7789 + x5005 + x508 * x7794 + x5291 -
           x645 * x7776 + x7502 - x7924 + x7927 + x7933 + x7944 +
           (x184 * x969) *
             (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
              (x183) * (-x797 + x800 +
                        (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
           (-x141 * x629) * (x817 - x842) +
           (-x113 * x969 + x181 * x1852 + x182 * x629) *
             (x821 - x841 + (-x141) * (x817 - x842)) +
           (-x121 * x969 + x183 * x629) *
             (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[232] = 20000000.0 * kf_qss[127] * ((sc[8]) * (sc[8])) / x1323 -
           80000000.0 * kf_qss[127] * sc[8] * sc[9] / x1323 + sc[12] * x5361 -
           120000000.0 * sc[13] * x1337 - 120000000.0 * sc[13] * x1339 -
           70000000.0 * sc[1] * x1337 - 70000000.0 * sc[1] * x1339 +
           1000000.0 * sc[26] + 20000000.0 * sc[8] * x1337 +
           141000000.0 * sc[8] * x260 - 141000000.0 * sc[8] * x263 +
           50000000.0 * sc[8] * x409 - 50000000.0 * sc[8] * x410 -
           80000000.0 * sc[9] * x1337 + sc[9] * x6593 - x1378 * x7770 -
           x1379 * x7770 + x240 * x3966 + x240 * x6338 + x2469 + x260 * x3990 -
           x260 * x7797 - x263 * x3990 + x263 * x7797 - x285 * x6337 -
           x364 * x409 + x364 * x410 + x373 + x3981 * x647 + x3981 * x658 -
           x409 * x7789 + x410 * x7789 + x5005 + x5066 + x531 * x7794 -
           x647 * x7776 - x658 * x7776 + x6701 + x7869 + x7933 + x7946 + x7975 +
           (x184 * x969) *
             (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
              (x183) * (-x813 + x839 +
                        (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
           (-x141 * x629) * (x829 - x872) +
           (-x113 * x969 + x181 * x1852 + x182 * x629) *
             (-x468 + x669 + (-x141) * (x829 - x872)) +
           (-x121 * x969 + x183 * x629) *
             (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[288] =
    -kf_qss[128] * sc[5] * x1333 * x6329 - 120000000.0 * sc[13] * x1340 +
    20000000.0 * sc[8] * x1340 + 141000000.0 * sc[8] * x265 -
    141000000.0 * sc[8] * x267 + 50000000.0 * sc[8] * x411 -
    50000000.0 * sc[8] * x413 - sc[8] * x6724 - 80000000.0 * sc[9] * x1340 -
    x1332 * x6329 - x1380 * x7770 + x265 * x3990 - x265 * x7797 - x267 * x3990 +
    x267 * x7797 + x2929 + x364 * x413 + x373 + x3981 * x672 + x413 * x7789 -
    x672 * x7776 + x7575 - 1.3981169958758401e+38 * x7811 * x7832 +
    2.27e+24 * x7812 * x7823 * x7983 - 2.27e+24 * x7812 * x7836 * x7983 -
    1.135e+25 * x7823 + 1.3981169958758401e+38 * x7828 + 1.135e+25 * x7836 +
    x7871 + x7879 + x7986 + x8000 +
    (x184 * x969) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x141 * x629) * (x895 - x897) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (-x121 * x969 + x183 * x629) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[344] =
    -120000000.0 * sc[13] * x1341 - 120000000.0 * sc[13] * x1342 -
    70000000.0 * sc[1] * x1341 - 70000000.0 * sc[1] * x1342 +
    20000000.0 * sc[8] * x1341 + 20000000.0 * sc[8] * x1342 +
    141000000.0 * sc[8] * x269 - 141000000.0 * sc[8] * x270 +
    50000000.0 * sc[8] * x416 - 80000000.0 * sc[9] * x1341 -
    80000000.0 * sc[9] * x1342 + sc[9] * x7586 - x1341 * x6330 - x1342 * x6330 -
    x1382 * x7770 + x2585 + x269 * x3990 - x269 * x7797 - x270 * x3990 +
    x270 * x7797 + x3981 * x680 - x416 * x7789 - x680 * x7776 + x7502 + x7601 +
    x7826 + x7927 + x8014 +
    (x184 * x969) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                     (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x141 * x629) * (x909 + x913) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (0 + (-x141) * (x909 + x913)) +
    (-x121 * x969 + x183 * x629) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[400] = -120000000.0 * sc[13] * x1343 + 20000000.0 * sc[8] * x1343 -
           141000000.0 * sc[8] * x188 + 141000000.0 * sc[8] * x272 -
           80000000.0 * sc[9] * x1343 - x1343 * x6330 - x188 * x3990 +
           x188 * x7797 + x2247 + 2.27e+24 * x2355 * x7812 * x7823 -
           2.27e+24 * x2355 * x7812 * x7836 + x272 * x3990 - x272 * x7797 -
           8.3887019752550502e+37 * x7811 * x7832 + x7813 - 6.81e+24 * x7823 +
           8.3887019752550502e+37 * x7828 + 6.81e+24 * x7836 + x7879;
  J[456] =
    kf_qss[141] * sc[8] * x3980 * x610 +
    20000000.0 * kf_qss[201] * sc[8] * x1333 +
    kf_qss[75] * sc[8] * x134 * x3980 - 10.0e-13 * sc[0] * sc[18] -
    14600000.0 * sc[10] - sc[11] * x8049 - sc[13] * x8052 - sc[14] * x3078 -
    sc[14] * x8093 - sc[14] * x8095 - sc[16] * x3074 - sc[16] * x8071 -
    sc[17] * x8075 - 392000.0 * sc[17] - 100000.0 * sc[18] * x4957 -
    sc[1] * x2498 - sc[20] * x8063 - sc[21] * x7839 - sc[22] * x8038 -
    sc[23] * x7815 - 8000000.0 * sc[25] - 100000.0 * sc[26] * x3341 -
    80000000.0 * sc[2] - 100000.0 * sc[30] * x3341 - sc[32] * x8041 -
    sc[34] * x8063 - sc[34] * x8066 - 5100000.0 * sc[37] - sc[40] * x8055 -
    sc[43] * x8055 - sc[5] * x6724 + 20000000.0 * sc[8] * x1345 -
    4.54e+24 * sc[8] * x185 * x7821 * exp(x7809) - 141000000.0 * sc[8] * x274 +
    141000000.0 * sc[8] * x275 + 50000000.0 * sc[8] * x375 -
    400000000.0 * sc[8] * x3886 - 50000000.0 * sc[8] * x419 -
    21716000000.0 * sc[8] * exp(-7875.3408198438601 * invT - 0.89 * tc[0]) -
    80000000.0 * sc[9] * x1344 - 80000000.0 * sc[9] * x1345 -
    794000000000000.0 * x1293 * x3946 + x131 * x3980 + 20000000.0 * x1332 -
    x1383 * x7770 - x197 * x3989 - 141000000.0 * x197 + x2469 - x274 * x3990 +
    x275 * x3990 - 217840000000.0 * x3081 + x3133 - x356 * x6338 +
    50000000.0 * x370 + x373 - x375 * x7789 + x419 * x7789 + x5006 + x5509 +
    x6426 + x6883 + x7506 + x7806 + x8037 + x8085 + x8092 + x8106 + x8111 +
    (x184 * x969) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                     (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x141 * x629) * (-x922) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x920 + (-x141) * (-x922)) +
    (-x121 * x969 + x183 * x629) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[512] = -kf_qss[182] * sc[9] * x1374 * x7769 -
           80000000.0 * kf_qss[189] * sc[9] * x1333 + refC * x185 * x2460 +
           sc[0] * x1993 - 120000000.0 * sc[13] * x1346 + sc[14] * x8153 +
           sc[15] * x8127 + sc[17] * x8133 + sc[18] * x8135 -
           70000000.0 * sc[1] * x1346 + sc[21] * x8113 + sc[2] * x4103 +
           sc[33] * x8139 + sc[37] * x8121 + sc[38] * x8119 + sc[3] * x5171 +
           sc[44] * x7769 + sc[4] * x6593 + sc[6] * x7586 +
           20000000.0 * sc[8] * x1346 + 141000000.0 * sc[8] * x278 -
           141000000.0 * sc[8] * x279 + 50000000.0 * sc[8] * x420 -
           50000000.0 * sc[8] * x421 - x131 * x7775 - 80000000.0 * x1332 -
           x1346 * x6330 - x1360 * x7769 + x197 * x7796 + x2469 + x278 * x3990 -
           x278 * x7797 - x279 * x3990 + x279 * x7797 - x364 * x420 +
           x364 * x421 - x370 * x7788 + x373 - x3981 * x628 - x420 * x7789 +
           x421 * x7789 + x628 * x7776 + x7871 + x7879 + x8116 + x8118 + x8124 +
           x8126 + x8130 + x8132 + x8173 +
           (x184 * x969) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (-x141 * x629) * (x935 - x937) +
           (-x113 * x969 + x181 * x1852 + x182 * x629) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (-x121 * x969 + x183 * x629) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[568] =
    141000000.0 * sc[8] * x281 - 141000000.0 * sc[8] * x282 +
    50000000.0 * sc[8] * x422 - 50000000.0 * sc[8] * x423 - 14600000.0 * sc[8] -
    794000000000000.0 * x1295 * x3946 - x1385 * x7770 - x1386 * x7770 + x2469 +
    x281 * x3990 - x281 * x7797 - x282 * x3990 + x282 * x7797 - x357 * x3966 -
    x357 * x6338 - x364 * x422 + x364 * x423 + x373 + x3981 * x657 +
    x3981 * x706 - x422 * x7789 + x423 * x7789 + x5006 + x6426 - x657 * x7776 -
    x706 * x7776 - x7794 * x97 + x7806 + x8174 + x8199 +
    (x184 * x969) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x141 * x629) * (x465 - x977) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-x121 * x969 + x183 * x629) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[624] =
    141000000.0 * sc[8] * x284 - 141000000.0 * sc[8] * x286 +
    50000000.0 * sc[8] * x411 - 50000000.0 * sc[8] * x424 - sc[8] * x8049 -
    x1387 * x7770 + x2469 + x284 * x3990 - x284 * x7797 - x286 * x3990 +
    x286 * x7797 + x364 * x424 + x373 + x3981 * x717 + x424 * x7789 -
    x717 * x7776 + x7575 + x7871 + x7879 + x7986 + x8222 +
    (x184 * x969) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x141 * x629) * (x1001 - x1005) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x121 * x969 + x183 * x629) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[680] = sc[0] * x2228 - 120000000.0 * sc[13] * x1347 -
           70000000.0 * sc[1] * x1347 + sc[1] * x3846 + sc[4] * x5361 +
           20000000.0 * sc[8] * x1347 + 141000000.0 * sc[8] * x288 -
           141000000.0 * sc[8] * x289 + 50000000.0 * sc[8] * x411 -
           80000000.0 * sc[9] * x1347 - x1347 * x6330 + x2469 + x288 * x3990 -
           x289 * x3990 - x331 * x3966 - x331 * x6338 + x5006 + x6426 + x7502 +
           x7575 + x7803 + x7806 - x7924 + x7927 + x7986;
  J[736] =
    -120000000.0 * kf_qss[191] * sc[13] * x1333 +
    2.27e+24 * refC * x185 * x7835 - 70000000.0 * sc[1] * x1348 +
    20000000.0 * sc[8] * x1348 + 50000000.0 * sc[8] * x411 -
    50000000.0 * sc[8] * x425 - sc[8] * x8052 - 80000000.0 * sc[9] * x1348 -
    120000000.0 * x1332 - x1348 * x6330 + x364 * x425 + x373 + x3981 * x724 +
    x425 * x7789 - x724 * x7776 + x7575 + x7871 + x7986 + x8240 + x8246 +
    x8258 +
    (x184 * x969) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x141 * x629) * (-x1027 + x553) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x121 * x969 + x183 * x629) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[792] =
    sc[0] * x2185 - 120000000.0 * sc[13] * x1349 - 70000000.0 * sc[1] * x1349 +
    7534000.0 * sc[1] * x3842 + 10.2 * sc[2] * x2657 +
    20000000.0 * sc[8] * x1349 - 141000000.0 * sc[8] * x295 - sc[8] * x3078 -
    sc[8] * x8093 - sc[8] * x8095 - 80000000.0 * sc[9] * x1349 + sc[9] * x8153 -
    x1349 * x6330 - x295 * x3990 + x295 * x7797 + x3981 * x725 - x725 * x7776 +
    x7813 + x8240 + x8244 + x8278 +
    (x184 * x969) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x141 * x629) * (x1039 - x1047) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x121 * x969 + x183 * x629) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[848] =
    20000000.0 * kf_qss[192] * ((sc[8]) * (sc[8])) / x1323 -
    80000000.0 * kf_qss[192] * sc[8] * sc[9] / x1323 + 72200000.0 * sc[0] -
    120000000.0 * sc[13] * x1350 - 70000000.0 * sc[1] * x1350 +
    141000000.0 * sc[8] * x297 - 141000000.0 * sc[8] * x298 -
    19500000.0 * sc[8] * x3999 + 50000000.0 * sc[8] * x411 -
    50000000.0 * sc[8] * x426 - sc[8] * x8087 + sc[9] * x8127 - x1041 * x969 +
    x1055 * x629 + x1056 * x1852 + x1057 * x629 - x1264 * x7794 -
    x1350 * x6330 + x2469 + x297 * x3990 - x297 * x7797 - x298 * x3990 +
    x298 * x7797 + x364 * x426 + x373 + x3981 * x727 + x426 * x7789 -
    x727 * x7776 + x7575 + x7806 + x7871 + x7986 +
    (x184 * x969) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                     (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x141 * x629) * (x1058) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x1057 + (-x141) * (x1058)) +
    (-x121 * x969 + x183 * x629) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[904] = 141000000.0 * sc[8] * x228 - 141000000.0 * sc[8] * x231 -
           sc[8] * x3074 - sc[8] * x8071 + x228 * x3990 - x228 * x7797 -
           x231 * x3990 + x231 * x7797 + x2469 + x7813 + x7879 + x8297;
  J[960] =
    -141000000.0 * sc[8] * x303 - sc[8] * x8075 - 392000.0 * sc[8] +
    sc[9] * x8133 + x1060 * x629 + x1061 * x1852 + x1062 * x629 -
    794000000000000.0 * x1297 * x3946 - x303 * x3990 + x303 * x7797 -
    x39 * x969 + x3981 * x728 - x728 * x7776 + x7813 + x8240 + x8244 +
    (x184 * x969) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                     (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x141 * x629) * (-x1063) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x1062 + (-x141) * (-x1063)) +
    (-x121 * x969 + x183 * x629) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1016] = -10.0e-13 * sc[0] * sc[8] + sc[0] * x2128 -
            120000000.0 * sc[13] * x1351 - 70000000.0 * sc[1] * x1351 +
            20000000.0 * sc[8] * x1351 + 141000000.0 * sc[8] * x305 -
            141000000.0 * sc[8] * x306 + 50000000.0 * sc[8] * x427 -
            100000.0 * sc[8] * x4957 - 80000000.0 * sc[9] * x1351 +
            sc[9] * x8135 - x1351 * x6330 + x2469 + x305 * x3990 -
            x305 * x7797 - x306 * x3990 + x306 * x7797 - x364 * x427 -
            x427 * x7789 + x7502 + x7879 + x7927 + x8014;
  J[1072] = -120000000.0 * sc[13] * x1353 - 70000000.0 * sc[1] * x1353 +
            20000000.0 * sc[8] * x1353 - 141000000.0 * sc[8] * x307 -
            80000000.0 * sc[9] * x1353 - x1353 * x6330 - x307 * x3990 +
            x307 * x7797 + x7813 + x8240 + x8244;
  J[1128] = -141000000.0 * sc[8] * x308 + 50000000.0 * sc[8] * x428 -
            sc[8] * x8063 - 794000000000000.0 * x1298 * x3946 -
            x186 * x569 * x7793 - x308 * x3990 + x308 * x7797 - x364 * x428 -
            x428 * x7789 + x7502 + x7806 + x7927 + x8014 + x8240 - x8242 +
            2614000000000000.0 * exp(-40534.102430570201 * invT + 0.15 * tc[0]);
  J[1184] = sc[0] * x91 - sc[8] * x7839 + sc[9] * x8113 + x8344;
  J[1240] = sc[0] * x2106 + sc[2] * x2686 - 141000000.0 * sc[8] * x309 -
            sc[8] * x8038 - x1033 * x629 - x309 * x3990 + x309 * x7797 +
            x3981 * x561 - x561 * x7776 + x7813 + x8240 + x8244 + x8349 +
            (x184 * x969) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (-x141 * x629) * (-x1067 + x1068) +
            (-x113 * x969 + x181 * x1852 + x182 * x629) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (-x121 * x969 + x183 * x629) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1296] = -sc[8] * x7815 + x8344 + x8353;
  J[1352] = x1076 * x629 + x1079 * x1852 + x1082 * x629 - x1388 * x7770 +
            x643 * x969 + x8344 + x8358 +
            (x184 * x969) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (-x141 * x629) * (x1070 + x463) +
            (-x113 * x969 + x181 * x1852 + x182 * x629) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (-x121 * x969 + x183 * x629) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1408] =
    -8000000.0 * sc[8] + x1086 * x629 + x1087 * x1852 + x1088 * x629 -
    794000000000000.0 * x1299 * x3946 + x3981 * x751 + x684 * x969 -
    x751 * x7776 + x8344 + x8366 +
    (x184 * x969) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                     (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x141 * x629) * (x1089) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x1088 + (-x141) * (x1089)) +
    (-x121 * x969 + x183 * x629) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1464] =
    13000000.0 * sc[2] * x4151 + 1000000.0 * sc[4] + 50000000.0 * sc[8] * x429 +
    x1092 * x629 + x1852 * x975 - x364 * x429 + x3981 * x755 + x3981 * x759 -
    x429 * x7789 - x629 * x891 + x7502 - x755 * x7776 - x759 * x7776 + x7927 +
    x8014 + x8240 + x8246 - x8388 +
    5000000000000000.0 * exp(-35728.383272135099 * invT) +
    (x184 * x969) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                     (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x141 * x629) * (x1093) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x1092 + (-x141) * (x1093)) +
    (-x121 * x969 + x183 * x629) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1520] = x8344 + 100000000000000.0 * exp(-15599.7166399463 * invT);
  J[1576] = -141000000.0 * sc[8] * x310 - sc[8] * x6862 - sc[8] * x8063 -
            sc[9] * x760 * x7775 - x310 * x3990 + x310 * x7797 + x3981 * x760 +
            x7813 + x8240 + x8244;
  J[1632] = x8344 + x8397 + x8398;
  J[1688] =
    50000000.0 * sc[8] * x430 - x1095 * x969 + x1097 * x1852 + x1098 * x629 -
    x364 * x430 - x430 * x7789 + x629 * x886 + x7502 + x7927 + x8014 + x8240 +
    x8246 - x8388 +
    (x184 * x969) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                     (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x141 * x629) * (x1099) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x1098 + (-x141) * (x1099)) +
    (-x121 * x969 + x183 * x629) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1744] =
    -141000000.0 * sc[8] * x311 + 50000000.0 * sc[8] * x431 - sc[8] * x6919 +
    x1100 * x629 - x1389 * x7770 + x1852 * x707 + x186 * x5003 - x311 * x3990 +
    x311 * x7797 - x361 * x3966 - x361 * x6338 - x364 * x431 + x3981 * x762 -
    x431 * x7789 + x5006 + x629 * x726 + x6426 + x7502 - x762 * x7776 - x7924 +
    x7927 + x8240 + x8244 + x8411 - x968 * x969 +
    (x184 * x969) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                     (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x141 * x629) * (-x1104) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x726 + (-x141) * (-x1104)) +
    (-x121 * x969 + x183 * x629) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1800] =
    -141000000.0 * sc[8] * x189 + 141000000.0 * sc[8] * x232 -
    50000000.0 * sc[8] * x367 + 50000000.0 * sc[8] * x411 - sc[8] * x8041 -
    x1390 * x7770 - x189 * x3990 + x189 * x7797 + x232 * x3990 - x232 * x7797 +
    x2469 - x338 * x3966 - x338 * x6338 + x364 * x367 + x367 * x7789 + x373 +
    x3981 * x764 + x5006 + x6426 + x7575 - x764 * x7776 + x7879 + x7986 +
    x8444 +
    (x184 * x969) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x141 * x629) * (-x585 + x688) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x121 * x969 + x183 * x629) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1856] = sc[9] * x8139 + x8344;
  J[1912] =
    -sc[8] * x8063 - sc[8] * x8066 - 794000000000000.0 * x1300 * x3946 + x8344;
  J[1968] = x8344;
  J[2024] =
    x8344 +
    (x184 * x969) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                     (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-x141 * x629) * (-x692) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (0 + (-x141) * (-x692)) +
    (-x121 * x969 + x183 * x629) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2080] = -5100000.0 * sc[8] + sc[9] * x8121 + x3981 * x767 - x767 * x7776 +
            x8344 + x8450;
  J[2136] = -141000000.0 * sc[8] * x238 + sc[9] * x8119 - x238 * x3990 +
            x238 * x7797 + x7813 + x8240 + x8244;
  J[2192] = x8344;
  J[2248] = -sc[8] * x8055 - x1391 * x7770 + x8344;
  J[2304] = x8344;
  J[2360] = x8344;
  J[2416] = -sc[8] * x8055 + x8344;
  J[2472] =
    x7770 + x8344 +
    (x184 * x969) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                     (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-x141 * x629) * (-x710) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (0 + (-x141) * (-x710)) +
    (-x121 * x969 + x183 * x629) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2528] =
    x8344 + x8471 +
    (x184 * x969) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x141 * x629) * (x103 - x545) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x121 * x969 + x183 * x629) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2584] =
    -x101 * x1852 + x135 * x629 + x8344 +
    (x184 * x969) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                     (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x141 * x629) * (-x126) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x135 + (-x141) * (-x126)) +
    (-x121 * x969 + x183 * x629) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2640] =
    x107 * x1852 + x461 * x629 - x629 * x83 + x8344 +
    (x184 * x969) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                     (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x141 * x629) * (x481) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x461 + (-x141) * (x481)) +
    (-x121 * x969 + x183 * x629) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2696] =
    x130 * x629 + x1852 * x566 - x19 * x969 + x562 * x629 + x8344 +
    (x184 * x969) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                     (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x141 * x629) * (x464) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x130 + (-x141) * (x464)) +
    (-x121 * x969 + x183 * x629) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2752] =
    x132 * x629 + x1852 * x582 - x573 * x969 + x629 * x967 + x8344 +
    (x184 * x969) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                     (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x141 * x629) * (-x586) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x132 + (-x141) * (-x586)) +
    (-x121 * x969 + x183 * x629) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2808] =
    x104 * x1852 + x106 * x629 + x50 * x629 + x529 * x969 + x8344 +
    (x184 * x969) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                     (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x141 * x629) * (x127) +
    (-x113 * x969 + x181 * x1852 + x182 * x629) * (x106 + (-x141) * (x127)) +
    (-x121 * x969 + x183 * x629) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2864] = x8344;
  J[2920] = x8344;
  J[2976] = 50000000.0 * sc[8] * x382 - x1392 * x7770 - x364 * x382 -
            x382 * x7789 + x7502 + x7927 + x8014 + x8240 + x8246;
  J[3032] = x8344;
  J[9] = sc[8] * x185 * x2255 + 121000000.0 * sc[8] * x190 -
         121000000.0 * sc[8] * x233 - 50000000.0 * sc[8] * x383 +
         50000000.0 * sc[8] * x402 + 40000000.0 * sc[9] * x1325 -
         sc[9] * x1993 + x1363 * x7770 + x1852 * x579 - x1852 * x602 -
         x190 * x7797 + x233 * x7797 + x2446 + x383 * x7789 - x402 * x7789 -
         x519 * x969 + x528 * x969 + x536 * x629 - x544 * x629 - x557 * x629 +
         x604 * x629 + x606 * x6364 + x606 * x7776 +
         (-x184 * x969) *
           (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
            (x183) * (-x579 + x602 +
                      (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
         (x141 * x629) * (-x681 + x734) +
         (x113 * x969 - x181 * x1852 - x182 * x629) *
           (x557 - x604 + (-x141) * (-x681 + x734)) +
         (x121 * x969 - x183 * x629) *
           (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[65] =
    -121000000.0 * sc[8] * x248 + sc[8] * x2498 + 121000000.0 * sc[8] * x251 -
    50000000.0 * sc[8] * x403 + 50000000.0 * sc[8] * x404 +
    40000000.0 * sc[9] * x1334 + x1375 * x7770 + x1852 * x574 - x1852 * x756 +
    x248 * x7797 - x251 * x7797 + x2578 + x403 * x7789 - x404 * x7789 -
    x511 * x629 - x521 * x969 + x617 * x6364 + x617 * x7776 + x629 * x742 -
    x629 * x758 + x629 * x771 - x738 * x969 +
    (-x184 * x969) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x141 * x629) * (x770 - x772) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (x121 * x969 - x183 * x629) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[121] =
    -121000000.0 * sc[8] * x253 + 121000000.0 * sc[8] * x254 -
    50000000.0 * sc[8] * x405 + 50000000.0 * sc[8] * x406 +
    40000000.0 * sc[9] * x1335 - sc[9] * x4103 + x1376 * x7770 - x1852 * x745 +
    x1852 * x765 + x2446 + x253 * x7797 - x254 * x7797 + x405 * x7789 -
    x406 * x7789 - x543 * x629 + x629 * x753 - x629 * x792 + x629 * x803 +
    x6364 * x640 + x640 * x7776 + x774 * x969 - x790 * x969 +
    (-x184 * x969) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (x141 * x629) * (x801 - x804) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (x121 * x969 - x183 * x629) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[177] =
    -121000000.0 * sc[8] * x256 + 121000000.0 * sc[8] * x258 -
    50000000.0 * sc[8] * x407 + 40000000.0 * sc[9] * x1336 - sc[9] * x5171 -
    x116 * x969 + x1377 * x7770 + x1852 * x797 - x1852 * x800 + x256 * x7797 -
    x258 * x7797 + x407 * x7789 + x629 * x741 - x629 * x763 - x629 * x821 +
    x629 * x841 + x6364 * x645 + x645 * x7776 + x791 * x969 + x7924 + x8507 +
    (-x184 * x969) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x629) * (x817 - x842) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x121 * x969 - x183 * x629) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[233] =
    500000.0 * sc[26] - 121000000.0 * sc[8] * x260 +
    121000000.0 * sc[8] * x263 - 50000000.0 * sc[8] * x409 +
    50000000.0 * sc[8] * x410 + sc[8] * x4252 + 40000000.0 * sc[9] * x1337 +
    40000000.0 * sc[9] * x1339 - sc[9] * x6593 + x1378 * x7770 + x1379 * x7770 +
    x1852 * x813 - x1852 * x839 + x2446 + x260 * x7797 - x263 * x7797 +
    x409 * x7789 - x410 * x7789 + x468 * x629 - x629 * x669 - x629 * x793 +
    x629 * x796 + x6364 * x647 + x6364 * x658 + x647 * x7776 + x658 * x7776 +
    x811 * x969 - x823 * x969 +
    (-x184 * x969) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x141 * x629) * (x829 - x872) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x121 * x969 - x183 * x629) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[289] =
    -121000000.0 * sc[8] * x265 + 121000000.0 * sc[8] * x267 +
    50000000.0 * sc[8] * x413 + sc[8] * x6724 + 40000000.0 * sc[9] * x1340 +
    x1380 * x7770 - x1852 * x833 + x1852 * x840 +
    2.5622310570626699e+28 * x2243 * x2244 -
    2.5622310570626699e+28 * x2243 * x2463 + 1.655e+19 * x2253 * x2575 -
    1.655e+19 * x2253 * x2583 - x2445 * x2449 * x2924 + x2445 * x2467 * x2924 +
    x265 * x7797 - x267 * x7797 + x411 * x7789 - x413 * x7789 - x629 * x799 +
    x629 * x812 - x629 * x869 + x629 * x896 + x6364 * x672 + x672 * x7776 -
    x826 * x969 - x827 * x969 + x8510 +
    (-x184 * x969) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x629) * (x895 - x897) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x121 * x969 - x183 * x629) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[345] =
    -121000000.0 * sc[8] * x269 + 121000000.0 * sc[8] * x270 -
    50000000.0 * sc[8] * x416 + 40000000.0 * sc[9] * x1341 +
    40000000.0 * sc[9] * x1342 - sc[9] * x7586 + x1382 * x7770 + x2578 +
    x269 * x7797 - x270 * x7797 + x416 * x7789 + x6364 * x680 + x680 * x7776 +
    x7924 - x7927 +
    (-x184 * x969) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x629) * (x909 + x913) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (0 + (-x141) * (x909 + x913)) +
    (x121 * x969 - x183 * x629) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[401] = 121000000.0 * sc[8] * x188 - 121000000.0 * sc[8] * x272 +
           40000000.0 * sc[9] * x1343 - x188 * x7797 +
           1.5373386342376e+28 * x2243 * x2244 -
           1.5373386342376e+28 * x2243 * x2463 - x2245 * x2445 * x2449 +
           x2245 * x2445 * x2467 + 9.93e+18 * x2253 * x2575 -
           9.93e+18 * x2253 * x2583 + x272 * x7797 + x8514;
  J[457] =
    sc[0] * x185 * x2255 + 3600000.0 * sc[10] + sc[11] * x8049 +
    sc[12] * x8108 + sc[13] * x8052 + sc[14] * x8095 +
    19500000.0 * sc[15] * x3999 + 392000.0 * sc[17] + sc[1] * x2498 +
    sc[20] * x8063 + sc[21] * x7839 + sc[22] * x8038 + 8000000.0 * sc[25] +
    100000.0 * sc[26] * x3341 + sc[28] * x8063 + 100000.0 * sc[30] * x3341 +
    sc[32] * x8041 + sc[34] * x8063 + 100000.0 * sc[37] + sc[40] * x8055 +
    sc[43] * x8055 + sc[45] * x8098 + sc[45] * x8100 + sc[4] * x4252 +
    sc[5] * x6724 + 121000000.0 * sc[8] * x274 - 121000000.0 * sc[8] * x275 -
    50000000.0 * sc[8] * x375 + 50000000.0 * sc[8] * x419 +
    10858000000.0 * sc[8] * exp(-7875.3408198438601 * invT - 0.89 * tc[0]) +
    40000000.0 * sc[9] * x1344 + 40000000.0 * sc[9] * x1345 + x1383 * x7770 -
    x1852 * x919 + 121000000.0 * x197 + x2446 - x274 * x7797 + x275 * x7797 -
    50000000.0 * x370 + x375 * x7789 - x419 * x7789 - x629 * x915 -
    x629 * x920 + x6364 * x689 + x6364 * x693 + x689 * x7776 + x693 * x7776 +
    x844 * x969 +
    (-x184 * x969) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                      (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x629) * (-x922) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x920 + (-x141) * (-x922)) +
    (x121 * x969 - x183 * x629) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[513] = kf_qss[182] * sc[9] * x1374 * x7769 +
           40000000.0 * kf_qss[189] * sc[9] * x1333 -
           0.002127 * kf_qss[254] * sc[9] * x593 * x704 - refC * x185 * x2460 -
           sc[0] * x1993 - sc[14] * x8153 - sc[15] * x8127 - sc[17] * x8133 -
           sc[18] * x8135 - sc[21] * x8113 - sc[2] * x4103 - sc[33] * x8139 -
           sc[37] * x8121 - sc[38] * x8119 - sc[3] * x5171 - sc[44] * x7769 -
           sc[4] * x6593 - sc[6] * x7586 - 121000000.0 * sc[8] * x278 +
           121000000.0 * sc[8] * x279 - 50000000.0 * sc[8] * x420 +
           50000000.0 * sc[8] * x421 - x115 * x1851 - 0.002135 * x120 * x593 +
           x131 * x6363 + x131 * x7775 + 40000000.0 * x1332 + x1360 * x7769 +
           x1852 * x865 - x1852 * x868 - x197 * x7796 + x2446 + x278 * x7797 -
           x279 * x7797 + x370 * x7788 - 0.002127 * x41 * x593 + x420 * x7789 -
           x421 * x7789 - 0.002135 * x593 * x85 - x628 * x6364 - x628 * x7776 -
           x629 * x834 + x629 * x835 - x629 * x885 + x629 * x936 - x8116 -
           x8118 - x8124 - x8126 - x8130 - x8132 - x859 * x969 +
           (-x184 * x969) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (x141 * x629) * (x935 - x937) +
           (x113 * x969 - x181 * x1852 - x182 * x629) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (x121 * x969 - x183 * x629) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[569] =
    -121000000.0 * sc[8] * x281 + 121000000.0 * sc[8] * x282 -
    50000000.0 * sc[8] * x422 + 50000000.0 * sc[8] * x423 + 3600000.0 * sc[8] +
    x1385 * x7770 + x1386 * x7770 + x1852 * x863 - x1852 * x893 + x2446 +
    x281 * x7797 - x282 * x7797 + x422 * x7789 - x423 * x7789 + x546 * x629 +
    x629 * x831 - x629 * x836 - x629 * x926 + x6364 * x657 + x6364 * x706 +
    x657 * x7776 + x706 * x7776 - x8174 - x870 * x969 + x877 * x969 +
    (-x184 * x969) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x141 * x629) * (x465 - x977) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x121 * x969 - x183 * x629) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[625] =
    -121000000.0 * sc[8] * x284 + 121000000.0 * sc[8] * x286 +
    50000000.0 * sc[8] * x424 + sc[8] * x8049 + x1004 * x629 + x1387 * x7770 -
    x1852 * x889 + x1852 * x894 + x2446 + x284 * x7797 - x286 * x7797 +
    x411 * x7789 - x424 * x7789 - x498 * x629 - x629 * x700 + x629 * x864 +
    x6364 * x717 + x717 * x7776 + x8510 - x899 * x969 - x924 * x969 +
    (-x184 * x969) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x629) * (x1001 - x1005) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x121 * x969 - x183 * x629) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[681] = -121000000.0 * sc[8] * x288 + 121000000.0 * sc[8] * x289 +
           sc[8] * x8108 + 40000000.0 * sc[9] * x1347 + x2446 + x288 * x7797 -
           x289 * x7797 + x8514;
  J[737] =
    50000000.0 * sc[8] * x425 + sc[8] * x8052 + 40000000.0 * sc[9] * x1348 -
    x1000 * x629 + x1026 * x629 + x1852 * x932 - x1852 * x934 + x2446 +
    x411 * x7789 - x425 * x7789 + x629 * x861 - x629 * x866 + x6364 * x724 +
    x724 * x7776 + x8242 + x8510 + x8538 - x925 * x969 - x938 * x969 +
    (-x184 * x969) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x629) * (-x1027 + x553) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x121 * x969 - x183 * x629) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[793] =
    121000000.0 * sc[8] * x295 + sc[8] * x8095 + 40000000.0 * sc[9] * x1349 -
    sc[9] * x8153 - x1014 * x629 + x1046 * x629 + x1852 * x929 - x1852 * x974 -
    x295 * x7797 - x629 * x887 + x629 * x890 + x6364 * x725 + x725 * x7776 +
    x8541 - x963 * x969 - x966 * x969 +
    (-x184 * x969) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x629) * (x1039 - x1047) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x121 * x969 - x183 * x629) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[849] =
    -121000000.0 * sc[8] * x297 + 121000000.0 * sc[8] * x298 +
    19500000.0 * sc[8] * x3999 + 50000000.0 * sc[8] * x426 +
    40000000.0 * sc[9] * x1350 - sc[9] * x8127 + x1041 * x969 - x1055 * x629 -
    x1056 * x1852 - x1057 * x629 + x2446 + x297 * x7797 - x298 * x7797 +
    x411 * x7789 - x426 * x7789 + x6364 * x727 + x727 * x7776 + x8510 +
    (-x184 * x969) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                      (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x629) * (x1058) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x1057 + (-x141) * (x1058)) +
    (x121 * x969 - x183 * x629) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[905] = -121000000.0 * sc[8] * x228 + 121000000.0 * sc[8] * x231 +
           x228 * x7797 - x231 * x7797 + x2446 - x8297 + x8514;
  J[961] =
    121000000.0 * sc[8] * x303 + 392000.0 * sc[8] - sc[9] * x8133 -
    x1060 * x629 - x1061 * x1852 - x1062 * x629 - x303 * x7797 + x39 * x969 +
    x6364 * x728 + x728 * x7776 + x8541 +
    (-x184 * x969) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (x141 * x629) * (-x1063) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x1062 + (-x141) * (-x1063)) +
    (x121 * x969 - x183 * x629) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1017] = -121000000.0 * sc[8] * x305 + 121000000.0 * sc[8] * x306 -
            50000000.0 * sc[8] * x427 + 40000000.0 * sc[9] * x1351 -
            sc[9] * x8135 + x305 * x7797 - x306 * x7797 + x427 * x7789 + x7924 +
            x8507;
  J[1073] = 121000000.0 * sc[8] * x307 + 40000000.0 * sc[9] * x1353 -
            x307 * x7797 + x8541;
  J[1129] = 121000000.0 * sc[8] * x308 - 50000000.0 * sc[8] * x428 +
            sc[8] * x8063 - x308 * x7797 + x428 * x7789 + x7668 + x7924 +
            x8242 + x8507;
  J[1185] = sc[8] * x7839 - sc[9] * x8113 + x8551;
  J[1241] = 121000000.0 * sc[8] * x309 + sc[8] * x8038 + x1033 * x629 -
            x309 * x7797 + x561 * x6364 + x561 * x7776 + x8541 +
            (-x184 * x969) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x629) * (-x1067 + x1068) +
            (x113 * x969 - x181 * x1852 - x182 * x629) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x121 * x969 - x183 * x629) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1297] = -x8353 + x8551;
  J[1353] = -x1076 * x629 - x1079 * x1852 - x1082 * x629 + x1388 * x7770 -
            x643 * x969 + x8551 +
            (-x184 * x969) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x629) * (x1070 + x463) +
            (x113 * x969 - x181 * x1852 - x182 * x629) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x121 * x969 - x183 * x629) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1409] =
    8000000.0 * sc[8] - x1086 * x629 - x1087 * x1852 - x1088 * x629 +
    x6364 * x751 - x684 * x969 + x751 * x7776 - x8366 + x8551 +
    (-x184 * x969) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                      (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x629) * (x1089) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x1088 + (-x141) * (x1089)) +
    (x121 * x969 - x183 * x629) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1465] =
    500000.0 * sc[4] - 50000000.0 * sc[8] * x429 - x1092 * x629 - x1852 * x975 +
    x429 * x7789 + x629 * x891 + x6364 * x755 + x6364 * x759 + x755 * x7776 +
    x759 * x7776 + x7924 + x8242 + x8388 + x8507 + x8538 +
    (-x184 * x969) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                      (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x629) * (x1093) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x1092 + (-x141) * (x1093)) +
    (x121 * x969 - x183 * x629) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1521] = x8551;
  J[1577] = 121000000.0 * sc[8] * x310 + sc[8] * x8063 + sc[9] * x6363 * x760 +
            sc[9] * x760 * x7775 - x310 * x7797 + x8541;
  J[1633] = -x8397 + x8551;
  J[1689] =
    -50000000.0 * sc[8] * x430 + x1095 * x969 - x1097 * x1852 - x1098 * x629 +
    x430 * x7789 - x629 * x886 + x7924 + x8242 + x8388 + x8507 + x8538 +
    (-x184 * x969) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                      (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x629) * (x1099) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x1098 + (-x141) * (x1099)) +
    (x121 * x969 - x183 * x629) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1745] =
    121000000.0 * sc[8] * x311 - 50000000.0 * sc[8] * x431 - x1100 * x629 +
    x1389 * x7770 - x1852 * x707 - x311 * x7797 + x431 * x7789 - x629 * x726 +
    x6364 * x762 + x762 * x7776 + x7668 + x7924 + x8242 - x8411 + x8507 +
    x968 * x969 +
    (-x184 * x969) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                      (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x629) * (-x1104) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x726 + (-x141) * (-x1104)) +
    (x121 * x969 - x183 * x629) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1801] =
    121000000.0 * sc[8] * x189 - 121000000.0 * sc[8] * x232 +
    50000000.0 * sc[8] * x367 + sc[8] * x8041 - x1002 * x969 + x1390 * x7770 +
    x1852 * x682 - x1852 * x999 - x189 * x7797 + x232 * x7797 + x2446 -
    x367 * x7789 + x411 * x7789 + x564 * x629 - x587 * x969 - x612 * x629 -
    x629 * x928 + x629 * x930 + x6364 * x764 + x764 * x7776 + x8510 +
    (-x184 * x969) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x629) * (-x585 + x688) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x121 * x969 - x183 * x629) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1857] = -sc[9] * x8139 + x8551;
  J[1913] = sc[8] * x8063 + x8551;
  J[1969] = x8551;
  J[2025] =
    x8551 +
    (-x184 * x969) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x629) * (-x692) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (0 + (-x141) * (-x692)) +
    (x121 * x969 - x183 * x629) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2081] =
    100000.0 * sc[8] - sc[9] * x8121 + x6364 * x767 + x767 * x7776 + x8551;
  J[2137] = 121000000.0 * sc[8] * x238 - sc[9] * x8119 - x238 * x7797 + x8541;
  J[2193] = x8551;
  J[2249] = sc[8] * x8055 + x1391 * x7770 + x8551;
  J[2305] = x8551;
  J[2361] = x8551;
  J[2417] = sc[8] * x8055 + x8551;
  J[2473] =
    -x7770 + x8551 +
    (-x184 * x969) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x629) * (-x710) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (0 + (-x141) * (-x710)) +
    (x121 * x969 - x183 * x629) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2529] =
    sc[8] * x8098 + sc[8] * x8100 + x1003 * x1852 - x1852 * x970 + x482 * x629 +
    x524 * x969 - x629 * x712 + x629 * x927 - x629 * x933 - x7 * x969 + x8551 +
    (-x184 * x969) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x629) * (x103 - x545) +
    (x113 * x969 - x181 * x1852 - x182 * x629) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x121 * x969 - x183 * x629) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2585] =
    x101 * x1852 - x135 * x629 + x8551 +
    (-x184 * x969) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                      (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x629) * (-x126) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x135 + (-x141) * (-x126)) +
    (x121 * x969 - x183 * x629) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2641] =
    -x107 * x1852 - x461 * x629 + x629 * x83 + x8551 +
    (-x184 * x969) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                      (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x629) * (x481) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x461 + (-x141) * (x481)) +
    (x121 * x969 - x183 * x629) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2697] =
    -x130 * x629 - x1852 * x566 + x19 * x969 - x562 * x629 + x8551 +
    (-x184 * x969) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                      (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x629) * (x464) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x130 + (-x141) * (x464)) +
    (x121 * x969 - x183 * x629) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2753] =
    -x132 * x629 - x1852 * x582 + x573 * x969 - x629 * x967 + x8551 +
    (-x184 * x969) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                      (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x629) * (-x586) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x132 + (-x141) * (-x586)) +
    (x121 * x969 - x183 * x629) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2809] =
    -x104 * x1852 - x106 * x629 - x50 * x629 - x529 * x969 + x8551 +
    (-x184 * x969) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                      (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x629) * (x127) +
    (x113 * x969 - x181 * x1852 - x182 * x629) * (x106 + (-x141) * (x127)) +
    (x121 * x969 - x183 * x629) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2865] = x8551;
  J[2921] = x8551;
  J[2977] = -50000000.0 * sc[8] * x382 + x1392 * x7770 + x382 * x7789 + x7924 +
            x8242 + x8507 + x8538;
  J[3033] = x8551;
  J[10] =
    -sc[10] * x2262 - 70800000.0 * sc[10] * x2264 + sc[11] * x2148 +
    x1043 * x536 - x1043 * x544 - x1043 * x557 + x1043 * x604 - x1270 * x4959 -
    x1270 * x6356 + x1363 * x4922 - x1363 * x8571 - x1865 * x466 +
    x1865 * x476 + x1880 * x505 - x1880 * x92 + x190 * x4952 - x190 * x5015 +
    x190 * x8592 + 35000.0 * x196 * x2284 - x233 * x4952 + x233 * x5015 -
    x233 * x8592 - x339 * x4963 - x339 * x6338 + x383 * x4989 - x383 * x8582 -
    x402 * x4989 + x402 * x8582 - x466 * x552 + x476 * x552 + x491 * x557 -
    x491 * x604 + x4926 * x606 - x4935 * x681 + x4935 * x734 - x4967 * x550 +
    x5007 + x5009 + x505 * x512 - x512 * x92 + x519 * x570 - x519 * x723 -
    x528 * x570 + x528 * x723 - x536 * x570 + x544 * x570 - x550 * x6341 +
    x579 * x597 - x597 * x602 - x606 * x8576 + x6424 + x6426 + x8587 + x8604 +
    (x1880 * x37 + x37 * x512) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-1.199e+20 * x1883 * x24) *
      (-x505 + x92 +
       (-x37) *
         (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (-x121) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
          (x184) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
       (-x87) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x1882 * x61 - x1882 * x73) *
      (x466 - x476 + (-x81) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x94) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x681 + x734) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[66] =
    87500.0 * sc[0] * x2284 - sc[10] * x2494 + sc[3] * x2504 - x1043 * x511 +
    x1043 * x742 - x1043 * x758 + x1043 * x771 + x1375 * x4922 - x1375 * x8571 -
    2076.2711864406801 * x2272 * x2273 + 2076.2711864406801 * x2272 * x2276 -
    87500.0 * x2275 + x2416 * (0.7 * x2406 + 5.0 * x2407) -
    x2420 * (0.7 * x2406 + 5.0 * x2407) - x248 * x4952 + x248 * x5015 -
    x248 * x8592 + x251 * x4952 - x251 * x5015 + x251 * x8592 + x403 * x4989 -
    x403 * x8582 - x404 * x4989 + x404 * x8582 + x491 * x758 - x491 * x771 +
    x4926 * x617 + x4935 * x770 - x4935 * x772 + x5009 + x511 * x570 +
    x521 * x570 - x521 * x723 + x570 * x738 - x570 * x742 + x574 * x597 -
    x597 * x756 - x617 * x8576 - x723 * x738 + x8617 + x8622 + x8633 +
    (x1880 * x37 + x37 * x512) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (-x121) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
          (x184) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
       (-x87) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x94) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x770 - x772) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[122] =
    -32500000.0 * sc[10] + sc[11] * x4100 - x1043 * x543 + x1043 * x753 -
    x1043 * x792 + x1043 * x803 + x1376 * x4922 - x1376 * x8571 + x1865 * x644 -
    x1865 * x683 - x1880 * x493 - x1880 * x789 - x253 * x4952 + x253 * x5015 -
    x253 * x8592 + x254 * x4952 - x254 * x5015 + x254 * x8592 - x349 * x4963 +
    x352 * x4963 + x352 * x6338 + x405 * x4989 - x405 * x8582 - x406 * x4989 +
    x406 * x8582 + x491 * x792 - x491 * x803 + x4926 * x640 - x493 * x512 +
    x4935 * x801 - x4935 * x804 + x5009 - x512 * x789 + x543 * x570 +
    x552 * x644 - x552 * x683 - x570 * x753 - x570 * x774 + x570 * x790 -
    x597 * x745 + x597 * x765 - x640 * x8576 + x723 * x774 - x723 * x790 +
    x7869 + x8587 + x8618 + x8620 + x8654 +
    (x1880 * x37 + x37 * x512) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-1.199e+20 * x1883 * x24) *
      (x493 + x789 +
       (-x37) *
         (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (-x121) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
          (x184) *
            (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
             (x183) * (x745 - x765 +
                       (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
       (-x87) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x1882 * x61 - x1882 * x73) *
      (-x644 + x683 + (-x81) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x94) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x801 - x804) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[178] =
    -1000000.0 * kf_qss[122] * sc[3] * x1276 * x4957 -
    kf_qss[122] * x1276 * x6356 + 1188400000000.0 * sc[11] * x5265 +
    367800000.0 * sc[11] * x5267 + sc[12] * x5284 + sc[13] * x5165 +
    sc[15] * x5174 + sc[17] * x5277 + sc[1] * x2504 + sc[20] * x5272 +
    sc[22] * x5152 + 300000.0 * sc[24] * x1106 + 1000.0 * sc[25] +
    sc[28] * x5261 + sc[32] * x5162 + sc[37] * x5255 + sc[40] * x5224 +
    sc[43] * x5224 + 60000000.0 * sc[45] * exp(-26569.839954489202 * invT) +
    100000000.0 * sc[45] * exp(-25236.315790106699 * invT) + sc[4] * x4203 +
    sc[5] * x5168 + sc[9] * x5171 + x1043 * x741 - x1043 * x763 - x1043 * x821 +
    x1043 * x841 + 3.0e-15 * x1106 * x120 + 6.0e-15 * x1106 * x41 +
    3.0e-25 * x1106 * x678 * x733 + 6.0e-15 * x1106 * x85 + x116 * x570 -
    x116 * x723 + 35000.0 * x124 * x2282 * exp(x2270) + x1377 * x4922 -
    x1377 * x8571 - x1865 * x785 - x1880 * x809 +
    7580000.0 * x197 * exp(-206.318832979935 * invT) - x256 * x4952 +
    x256 * x5015 + x258 * x4952 - x258 * x5015 - x353 * x6338 + x354 * x6338 +
    x407 * x4989 + x491 * x821 - x491 * x841 + x4926 * x645 + x4935 * x817 -
    x4935 * x842 + x508 * x6341 - x512 * x809 + x5145 + x5159 + x5178 - x5270 -
    x552 * x785 - x570 * x741 + x570 * x763 - x570 * x791 + x597 * x797 -
    x597 * x800 - x645 * x8576 - x6459 + x723 * x791 + x8587 + x8618 + x8667 +
    x8671 + x8680 - 1000000.0 * x1275 * x4957 / x1268 +
    (x1880 * x37 + x37 * x512) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-1.199e+20 * x1883 * x24) *
      (x809 +
       (-x37) *
         (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (-x121) *
            (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
          (x184) *
            (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
             (x183) * (-x797 + x800 +
                       (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
       (-x87) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x1882 * x61 - x1882 * x73) *
      (x785 + (-x81) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x94) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x817 - x842) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[234] =
    -kf_qss[125] * x1276 * x4959 - sc[10] * x4250 - sc[10] * x5310 +
    sc[11] * x6672 + 1000000.0 * sc[11] + 10.0e-13 * sc[14] * sc[6] +
    sc[3] * x4203 + sc[7] * x6584 + x1043 * x468 - x1043 * x669 - x1043 * x793 +
    x1043 * x796 + x1378 * x4922 - x1378 * x8571 + x1379 * x4922 -
    x1379 * x8571 - x1865 * x68 + x1865 * x807 - x1880 * x820 - x1880 * x837 +
    x240 * x4963 + x240 * x6338 - x260 * x4952 + x260 * x5015 - x260 * x8592 +
    x263 * x4952 - x263 * x5015 + x263 * x8592 + 270400000.0 * x2786 -
    x285 * x6337 - x349 * x4963 + x409 * x4989 - x409 * x8582 - x410 * x4989 +
    x410 * x8582 - x468 * x491 + x491 * x669 + x4926 * x647 + x4926 * x658 +
    x4935 * x829 - x4935 * x872 + x4967 * x531 - x512 * x820 - x512 * x837 +
    x531 * x6341 - x552 * x68 + x552 * x807 + x570 * x793 - x570 * x796 -
    x570 * x811 + x570 * x823 + x597 * x813 - x597 * x839 -
    x6340 * x769 / x773 - x6459 - x647 * x8576 - x658 * x8576 + x723 * x811 -
    x723 * x823 + x7869 + x8587 + x8618 + x8682 + x8683 + x8706 +
    (x1880 * x37 + x37 * x512) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-1.199e+20 * x1883 * x24) *
      (x820 + x837 +
       (-x37) *
         (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (-x121) *
            (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
          (x184) *
            (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
             (x183) * (-x813 + x839 +
                       (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
       (-x87) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x1882 * x61 - x1882 * x73) *
      (x68 - x807 + (-x81) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x94) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x829 - x872) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[290] =
    420000.0 * sc[0] * x2284 - sc[10] * x6765 - sc[10] * x6767 + sc[3] * x5168 -
    x1043 * x799 + x1043 * x812 - x1043 * x869 + x1043 * x896 + x1380 * x4922 -
    x1380 * x8571 - 9966.1016949152508 * x2272 * x2273 +
    9966.1016949152508 * x2272 * x2276 - 420000.0 * x2275 +
    x2416 * (3.36 * x2406 + 24.0 * x2407) -
    x2420 * (3.36 * x2406 + 24.0 * x2407) - x265 * x4952 + x265 * x5015 -
    x265 * x8592 + x267 * x4952 - x267 * x5015 + x267 * x8592 - x413 * x4989 +
    x413 * x8582 + x491 * x869 - x491 * x896 + x4926 * x672 + x4935 * x895 -
    x4935 * x897 + x5009 + x570 * x799 - x570 * x812 + x570 * x826 +
    x570 * x827 - x597 * x833 + x597 * x840 - x672 * x8576 - x723 * x826 -
    x723 * x827 + x8617 + x8622 + x8715 + x8727 +
    (x1880 * x37 + x37 * x512) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (-x121) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
          (x184) *
            (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
             (x183) * (x833 - x840 +
                       (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
       (-x87) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x94) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x895 - x897) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[346] =
    66500.0 * sc[0] * x2284 + 10.0e-13 * sc[14] * sc[4] + x1382 * x4922 -
    x1382 * x8571 - 1577.9661016949101 * x2272 * x2273 +
    1577.9661016949101 * x2272 * x2276 - 66500.0 * x2275 +
    x2416 * (0.532 * x2406 + 3.8 * x2407) -
    x2420 * (0.532 * x2406 + 3.8 * x2407) + x269 * x5015 - x269 * x8592 -
    x270 * x5015 + x270 * x8592 + x416 * x4989 - x416 * x8582 + x4926 * x680 +
    x4935 * x909 + x4935 * x913 - x680 * x8576 + x7595 + x8617 + x8735 + x8737 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
          (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
          (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                    (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
       (-x87) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (0 + (-x141) * (x909 + x913)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x909 + x913) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (0 + (-x141) * (x909 + x913)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[402] = 133000.0 * sc[0] * x2284 + 35000.0 * sc[10] * x2409 * x2411 * x2413 +
           sc[4] * x6584 - 35000.0 * x124 * x2284 * x2409 + x188 * x4952 -
           x188 * x5015 + x188 * x8592 - 3155.9322033898302 * x2272 * x2273 +
           3155.9322033898302 * x2272 * x2276 - 133000.0 * x2275 -
           x272 * x4952 + x272 * x5015 - x272 * x8592 + x8617 + x8715 + x8735 +
           x8737;
  J[458] =
    -14600000.0 * sc[10] + sc[11] * x8049 - x1043 * x915 - x1043 * x920 -
    x1293 * x6854 + x1383 * x4922 - x1383 * x8571 + x1861 * x915 +
    x1861 * x920 + x1868 * x919 - x1871 * x844 + x274 * x4952 - x274 * x5015 +
    x274 * x8592 - x275 * x4952 + x275 * x5015 - x275 * x8592 - x356 * x4963 -
    x356 * x6338 + x375 * x4989 - x375 * x8582 - x419 * x4989 + x419 * x8582 +
    x491 * x920 + x4926 * x689 + x4926 * x693 - x4935 * x922 - x4967 * x572 +
    x5007 + x5009 - x570 * x844 + x570 * x915 - x572 * x6341 - x597 * x919 +
    x6424 + x6426 - x689 * x8576 - x693 * x8576 + x723 * x844 + x8587 +
    (x1880 * x37 + x37 * x512) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
          (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
          (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                    (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
       (-x87) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x920 + (-x141) * (-x922)) +
       (-x94) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x922) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x920 + (-x141) * (-x922)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[514] =
    sc[3] * x5171 - x1043 * x834 + x1043 * x835 - x1043 * x885 + x1043 * x936 +
    x1384 * x4922 - x1384 * x8571 - x278 * x4952 + x278 * x5015 - x278 * x8592 +
    x279 * x4952 - x279 * x5015 + x279 * x8592 + x420 * x4989 - x420 * x8582 -
    x421 * x4989 + x421 * x8582 + x491 * x885 - x491 * x936 - x4926 * x628 +
    x4935 * x935 - x4935 * x937 + x5009 + x570 * x834 - x570 * x835 +
    x570 * x838 + x570 * x859 + x597 * x865 - x597 * x868 + x628 * x8576 -
    x723 * x838 - x723 * x859 - x8130 + x8587 + x8617 + x8622 + x8783 +
    (x1880 * x37 + x37 * x512) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (-x121) *
            (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
          (x184) *
            (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
             (x183) * (-x865 + x868 +
                       (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
       (-x87) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x94) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x935 - x937) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[570] =
    kf_qss[172] * sc[10] * x1374 * x4921 -
    kf_qss[360] * sc_qss[17] * x1882 * x59 -
    kf_qss[362] * sc_qss[17] * x1882 * x72 -
    1.199e+20 * kf_qss[364] * sc_qss[18] * x1883 * x22 +
    kf_qss[77] * sc[10] * x134 * x4925 + kf_qss[84] * sc[10] * x4925 * x610 -
    sc[0] * x2262 - 70800000.0 * sc[0] * x2264 -
    520000.0 * sc[10] * exp(819.73994859588799 * invT) -
    1680000000.0 * sc[10] * exp(-6028.5356563405403 * invT) - sc[13] * x8833 -
    sc[14] * x5581 - sc[15] * x5577 - 32000000.0 * sc[15] - sc[16] * x5638 -
    sc[17] * x5584 - sc[1] * x2494 - 31000000.0 * sc[21] * x2474 -
    sc[21] * x5564 - 200000.0 * sc[22] * x5566 - sc[22] * x8811 -
    sc[25] * x6919 - 300000.0 * sc[25] - 2.0e-25 * sc[26] * x5566 -
    sc[28] * x8784 - 32500000.0 * sc[2] - 128800.0 * sc[34] * x3886 -
    sc[34] * x8804 - sc[38] * x5562 - sc[40] * x8784 - sc[43] * x8784 -
    sc[4] * x4250 - sc[4] * x5310 - 5000000.0 * sc[52] * x8794 -
    10000000.0 * sc[53] * x8794 - sc[5] * x6765 - sc[5] * x6767 -
    14600000.0 * sc[8] - x1037 * x120 - x1037 * x85 + x1043 * x546 +
    x1043 * x831 - x1043 * x836 - x1043 * x926 - x115 * x591 - x1279 * x4959 -
    x1295 * x6854 + x131 * x4925 + x1360 * x4921 - x1385 * x8571 +
    x1386 * x4922 - x1386 * x8571 + x1865 * x470 - x1865 * x79 -
    200000.0 * x1878 * x616 / x34 - x1880 * x21 + x1880 * x86 - x197 * x5014 -
    x21 * x512 - 35000.0 * x2411 * x2413 + x281 * x5015 - x282 * x5015 -
    x357 * x6338 + x370 * x4988 - x41 * x599 + x422 * x4989 - x423 * x4989 +
    x465 * x4935 + x470 * x552 - x491 * x546 + x491 * x926 - x4935 * x977 +
    x5007 + x5009 + x512 * x86 - x552 * x79 - x5561 - x5570 - x5576 -
    x570 * x831 + x570 * x836 + x570 * x870 - x570 * x877 - x576 * x77 * x80 +
    x597 * x863 - x597 * x893 - x6341 * x97 + x6424 + x6426 - x657 * x8576 -
    x706 * x8576 - x723 * x870 + x723 * x877 + x7640 -
    200000.0 * x77 * x80 * exp(-5802.0881567284196 * invT) - x8174 + x8587 +
    x8809 - x8820 + x8831 + x8842 + x8855 - x616 * x747 / x34 +
    (x1880 * x37 + x37 * x512) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-1.199e+20 * x1883 * x24) *
      (x21 - x86 +
       (-x37) *
         (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (-x121) *
            (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
          (x184) *
            (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
             (x183) * (-x863 + x893 +
                       (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
       (-x87) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x1882 * x61 - x1882 * x73) *
      (-x470 + x79 + (-x81) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x94) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x465 - x977) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[626] =
    -1000000.0 * kf_qss[180] * sc[11] * x1374 * x8570 -
    kf_qss[78] * sc[11] * x610 * x8575 + sc[0] * x2148 + sc[15] * x8863 +
    sc[25] * x8861 + sc[2] * x4100 + sc[33] * x8867 + sc[37] * x8859 +
    sc[38] * x8856 + 1188400000000.0 * sc[3] * x5265 +
    367800000.0 * sc[3] * x5267 + 1000000.0 * sc[44] * x8570 + sc[4] * x6672 +
    1000000.0 * sc[4] + sc[8] * x8049 + x1001 * x4935 + x1004 * x1043 -
    x1004 * x491 - x1005 * x4935 - x1043 * x498 - x1043 * x700 + x1043 * x864 -
    x131 * x8575 - 1000000.0 * x1360 * x8570 + x1387 * x4922 + x197 * x8591 -
    x284 * x4952 + x284 * x5015 - x284 * x8592 + x286 * x4952 - x286 * x5015 +
    x286 * x8592 - x370 * x8581 - x424 * x4989 + x424 * x8582 + x491 * x700 +
    x4926 * x717 + x498 * x570 + x5009 - x570 * x864 + x570 * x899 +
    x570 * x924 - x597 * x889 + x597 * x894 - x723 * x899 - x723 * x924 +
    x8587 + x8617 + x8622 + x8715 + x8898 +
    (x1880 * x37 + x37 * x512) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (-x121) * (x889 - x894 +
                     (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
          (x184) *
            (x498 - x864 +
             (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
             (x183) * (x889 - x894 +
                       (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
       (-x87) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x94) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1001 - x1005) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[682] = 1.0e-42 * sc[17] * sc[4] + sc[3] * x5284 - x1280 * x6356 -
           x288 * x4952 + x288 * x5015 + x289 * x4952 - x289 * x5015 -
           x331 * x6338 + x408 * x8582 + x411 * x4989 - x485 * x4967 -
           x485 * x6341 + x5007 + x5009 - x5270 - x5722 + x6424 + x6426 +
           x8587 - x8713 + x8907;
  J[738] =
    -sc[10] * x8833 + sc[3] * x5165 - x1000 * x1043 + x1000 * x491 +
    x1026 * x1043 - x1026 * x491 - x1027 * x4935 + x1043 * x861 - x1043 * x866 -
    x425 * x4989 + x425 * x8582 + x4926 * x724 + x4935 * x553 + x5009 -
    x570 * x861 + x570 * x866 + x570 * x925 + x570 * x938 + x5781 +
    x597 * x932 - x597 * x934 - x723 * x925 - x723 * x938 - x724 * x8576 +
    x8587 + x8622 + x8715 + x8919 + x8928 +
    (x1880 * x37 + x37 * x512) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (-x121) * (-x932 + x934 +
                     (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
          (x184) *
            (-x861 + x866 +
             (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
             (x183) * (-x932 + x934 +
                       (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
       (-x87) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x94) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x1027 + x553) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[794] =
    -sc[10] * x5581 + 10.0e-13 * sc[4] * sc[6] - x1014 * x1043 + x1014 * x491 +
    x1039 * x4935 + x1043 * x1046 - x1043 * x887 + x1043 * x890 - x1046 * x491 -
    x1047 * x4935 + x295 * x4952 - x295 * x5015 + x295 * x8592 + x4926 * x725 +
    x570 * x887 - x570 * x890 + x570 * x963 + x570 * x966 + x5819 +
    x597 * x929 - x597 * x974 - x723 * x963 - x723 * x966 - x725 * x8576 +
    x8938 + x8947 +
    (x1880 * x37 + x37 * x512) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (-x121) * (-x929 + x974 +
                     (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
          (x184) *
            (x887 - x890 +
             (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
             (x183) * (-x929 + x974 +
                       (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
       (-x87) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x94) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1039 - x1047) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[850] =
    -sc[10] * x5577 - 32000000.0 * sc[10] + sc[11] * x8863 + sc[3] * x5174 -
    x1041 * x1871 - x1041 * x570 + x1041 * x723 - x1043 * x1055 -
    x1043 * x1057 + x1055 * x1861 + x1055 * x570 + x1056 * x1868 -
    x1056 * x597 + x1057 * x1861 + x1057 * x491 + x1058 * x4935 -
    x1264 * x4967 - x1264 * x6341 - x297 * x4952 + x297 * x5015 - x297 * x8592 +
    x298 * x4952 - x298 * x5015 + x298 * x8592 - x426 * x4989 + x426 * x8582 +
    x4926 * x727 + x5009 + x6424 + x6426 - x727 * x8576 + x7869 + x8587 +
    x8617 + x8715 +
    (x1880 * x37 + x37 * x512) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
          (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
          (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                    (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
       (-x87) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x1057 + (-x141) * (x1058)) +
       (-x94) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1058) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1057 + (-x141) * (x1058)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[906] = -sc[10] * x5638 - x228 * x4952 + x228 * x5015 - x228 * x8592 +
           x231 * x4952 - x231 * x5015 + x231 * x8592 + x8587 + x8617 + x8715 +
           x8735 + x8737;
  J[962] =
    -sc[10] * x5584 + 1.0e-42 * sc[12] * sc[4] + sc[3] * x5277 - x1043 * x1060 -
    x1043 * x1062 + x1060 * x1861 + x1060 * x570 + x1061 * x1868 -
    x1061 * x597 + x1062 * x1861 + x1062 * x491 - x1063 * x4935 -
    x1282 * x4959 - x1282 * x6356 - x1297 * x6854 - x1871 * x39 + x303 * x4952 -
    x303 * x5015 + x303 * x8592 - x39 * x570 + x39 * x723 + x4926 * x728 -
    x728 * x8576 + x8938 +
    (x1880 * x37 + x37 * x512) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
          (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
          (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                    (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
       (-x87) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x1062 + (-x141) * (-x1063)) +
       (-x94) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x1063) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1062 + (-x141) * (-x1063)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1018] = -x305 * x4952 + x305 * x5015 - x305 * x8592 + x306 * x4952 -
            x306 * x5015 + x306 * x8592 + x427 * x4989 - x427 * x8582 + x8587 +
            x8617 + x8735 + x8737;
  J[1074] = x307 * x4952 - x307 * x5015 + x307 * x8592 + x8938;
  J[1130] = sc[3] * x5272 - x1298 * x6854 + x308 * x4952 - x308 * x5015 +
            x308 * x8592 + x428 * x4989 - x5270 - x569 * x6341 + x5781 + x6424 +
            x6426 + x7670 + x7869 + x8587 + x8917 + x8991;
  J[1186] = -31000000.0 * sc[10] * x2474 - sc[10] * x5564 + x5972 + x8993;
  J[1242] =
    -200000.0 * sc[10] * x5566 - sc[10] * x8811 + sc[3] * x5152 +
    x1033 * x1043 - x1033 * x1861 - x1033 * x491 - x1067 * x4935 +
    x1068 * x4935 + x309 * x4952 - x309 * x5015 + x309 * x8592 + x4926 * x561 -
    x561 * x8576 + x8938 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
          (x184) *
            (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
             (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
       (-x87) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x94) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x1067 + x1068) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (-x1033 + (-x141) * (-x1067 + x1068)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1298] = -x5994 + x8993;
  J[1354] =
    sc[10] * sc[25] * x1071 * x576 +
    200000.0 * sc[10] * sc[25] * x1071 * exp(-5802.0881567284196 * invT) +
    300000.0 * sc[3] * x1106 - x1043 * x1076 - x1043 * x1082 + x1070 * x4935 +
    x1076 * x1861 + x1076 * x570 + x1079 * x1868 - x1079 * x597 +
    x1082 * x1861 + x1082 * x491 - x112 * x38 * x599 * x6002 + x1388 * x4922 -
    x1388 * x8571 + x1871 * x643 + 200000.0 * x1878 * x6002 + x463 * x4935 +
    x570 * x643 + x6002 * x747 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-1.199e+20 * x1883 * x24) *
      (-x1074 +
       (-x37) *
         (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
          (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
          (x184) *
            (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
             (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
       (-x87) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x1882 * x61 - x1882 * x73) *
      (-x1072 + (-x81) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x94) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1070 + x463) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1082 + (-x141) * (x1070 + x463)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1410] =
    -sc[10] * x6919 - 300000.0 * sc[10] + sc[11] * x8861 + 1000.0 * sc[3] -
    x1043 * x1086 - x1043 * x1088 + x1085 * x1865 + x1085 * x552 +
    x1086 * x1861 + x1086 * x570 + x1087 * x1868 - x1087 * x597 +
    x1088 * x1861 + x1088 * x491 + x1089 * x4935 - x1299 * x6854 +
    x1871 * x684 + x1880 * x677 + x4926 * x751 + x512 * x677 + x570 * x684 -
    x684 * x723 - x751 * x8576 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-1.199e+20 * x1883 * x24) *
      (-x677 +
       (-x37) *
         (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
          (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
          (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                    (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
       (-x87) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x1882 * x61 - x1882 * x73) *
      (-x1085 + (-x81) * (x1088 + (-x141) * (x1089)) +
       (-x94) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1089) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1088 + (-x141) * (x1089)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1466] =
    -2.0e-25 * sc[10] * x5566 - 1400000.0 * sc[10] * x8818 - x1043 * x1092 +
    x1043 * x891 + x1092 * x1861 + x1092 * x491 + x1093 * x4935 - x1861 * x891 +
    x1868 * x975 + x429 * x4989 - x429 * x8582 + x4926 * x755 + x4926 * x759 -
    x570 * x891 + x5781 - x597 * x975 + x6040 - x755 * x8576 - x759 * x8576 +
    x8587 + x8735 + x8737 + x8919 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
          (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
          (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                    (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
       (-x87) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x1092 + (-x141) * (x1093)) +
       (-x94) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1093) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1092 + (-x141) * (x1093)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1522] = x8993;
  J[1578] = -sc[10] * x8784 + sc[3] * x5261 + x310 * x4952 - x310 * x5015 +
            x310 * x8592 + x4926 * x760 - x760 * x8576 + x8938;
  J[1634] = x8993;
  J[1690] =
    -x1043 * x1098 - x1043 * x886 - x1095 * x1871 - x1095 * x570 +
    x1095 * x723 + x1097 * x1868 - x1097 * x597 + x1098 * x1861 + x1098 * x491 +
    x1099 * x4935 + x1861 * x886 + x430 * x4989 - x430 * x8582 + x570 * x886 +
    x5781 + x8587 + x8735 + x8737 + x8919 +
    (x1880 * x37 + x37 * x512) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
          (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
          (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                    (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
       (-x87) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x1098 + (-x141) * (x1099)) +
       (-x94) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x1099) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x1098 + (-x141) * (x1099)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1746] =
    -x1043 * x1100 - x1043 * x726 + x1100 * x1861 + x1100 * x570 -
    x1104 * x4935 + x1389 * x4922 - x1389 * x8571 + x1861 * x726 +
    x1868 * x707 - x1871 * x968 - x290 * x8592 + x311 * x4952 - x311 * x5015 +
    x311 * x8592 - x361 * x4963 - x361 * x6338 + x431 * x4989 - x431 * x8582 +
    x491 * x726 + x4926 * x762 + x5007 - x5270 - x570 * x968 + x5781 -
    x597 * x707 - x6090 + x6426 + x723 * x968 - x762 * x8576 + x7670 + x8587 +
    x8620 + x8735 +
    (x1880 * x37 + x37 * x512) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
          (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
          (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                    (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
       (-x87) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x726 + (-x141) * (-x1104)) +
       (-x94) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x1104) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x726 + (-x141) * (-x1104)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1802] =
    sc[3] * x5162 + x1002 * x570 - x1002 * x723 + x1043 * x564 - x1043 * x612 -
    x1043 * x928 + x1043 * x930 + x1390 * x4922 - x1390 * x8571 + x189 * x4952 -
    x189 * x5015 + x189 * x8592 - x232 * x4952 + x232 * x5015 - x232 * x8592 -
    x338 * x4963 - x338 * x6338 - x367 * x4989 + x367 * x8582 - x491 * x564 +
    x491 * x612 + x4926 * x764 - x4935 * x585 + x4935 * x688 + x5007 + x5009 +
    x570 * x587 + x570 * x928 - x570 * x930 - x587 * x723 + x597 * x682 -
    x597 * x999 + x6426 - x764 * x8576 + x8587 + x8618 + x8620 + x8715 + x9081 +
    (x1880 * x37 + x37 * x512) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (-x121) * (-x682 + x999 +
                     (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
          (x184) *
            (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
             (x183) * (-x682 + x999 +
                       (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
       (-x87) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x94) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x585 + x688) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1858] = sc[11] * x8867 + x8993;
  J[1914] = -128800.0 * sc[10] * x3886 - sc[10] * x8804 - x1283 * x4959 -
            x1283 * x6356 - x1300 * x6854 + x8993;
  J[1970] = x8993;
  J[2026] =
    -x4935 * x692 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (0 + (-x141) * (-x692)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (0 + (x182) * (0 + (-x141) * (-x692)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) * (0 + (-x113) * (0 + (-x141) * (-x692)) +
                 (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
                 (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                           (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
       (-x87) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (0 + (-x141) * (-x692)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x692) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (0 + (-x141) * (-x692)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2082] = -sc[10] * x5572 - sc[10] * x6919 - 10.0e-25 * sc[10] +
            sc[11] * x8859 + sc[3] * x5255 - x1284 * x4959 - x1284 * x6356 +
            x4926 * x767 - x767 * x8576 + x8993;
  J[2138] = -sc[10] * x5562 + sc[11] * x8856 + x238 * x4952 - x238 * x5015 +
            x238 * x8592 + x8938;
  J[2194] = x8993;
  J[2250] =
    -sc[10] * x8784 + sc[3] * x5224 + x1391 * x4922 - x1391 * x8571 + x8993;
  J[2306] = x8993;
  J[2362] = x8993;
  J[2418] = -sc[10] * x8784 + sc[3] * x5224 + x8993;
  J[2474] =
    -x4935 * x710 - x6208 + x8571 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (0 + (-x141) * (-x710)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (0 + (x182) * (0 + (-x141) * (-x710)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) * (0 + (-x113) * (0 + (-x141) * (-x710)) +
                 (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
                 (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                           (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
       (-x87) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (0 + (-x141) * (-x710)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x710) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (0 + (-x141) * (-x710)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2530] =
    60000000.0 * sc[3] * exp(-26569.839954489202 * invT) +
    100000000.0 * sc[3] * exp(-25236.315790106699 * invT) + x1003 * x597 +
    x103 * x4935 + x1043 * x482 - x1043 * x712 + x1043 * x927 - x1043 * x933 -
    x482 * x491 + x491 * x712 - x4935 * x545 - x524 * x570 + x524 * x723 +
    x570 * x7 - x570 * x927 + x570 * x933 - x597 * x970 - x7 * x723 + x8993 +
    x9111 +
    (x1880 * x37 + x37 * x512) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (-x121) * (-x1003 + x970 +
                     (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
          (x184) *
            (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
             (x183) * (-x1003 + x970 +
                       (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
       (-x87) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x94) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x103 - x545) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2586] =
    -x101 * x1868 + x101 * x597 - x1043 * x135 - x126 * x4935 + x135 * x1861 +
    x135 * x491 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (x135 + (-x141) * (-x126)) +
          (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
          (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                    (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
       (-x87) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x135 + (-x141) * (-x126)) +
       (-x94) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x126) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x135 + (-x141) * (-x126)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2642] =
    -kf_qss[347] * x1882 * x59 - x1043 * x461 + x1043 * x83 + x107 * x1868 -
    x107 * x597 - x129 * x1865 - x129 * x552 + x1861 * x461 - x1861 * x83 +
    x461 * x491 + x481 * x4935 - x570 * x83 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (x461 + (-x141) * (x481)) +
          (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
          (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                    (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
       (-x87) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x1882 * x61 - x1882 * x73) *
      (x129 + (-x81) * (x461 + (-x141) * (x481)) +
       (-x94) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x481) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x461 + (-x141) * (x481)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2698] =
    -kf_qss[351] * x1882 * x72 - 1.199e+20 * kf_qss[353] * x1883 * x22 -
    x1043 * x130 - x1043 * x562 + x130 * x1861 + x130 * x491 + x1861 * x562 -
    x1865 * x558 + x1868 * x566 - x1871 * x19 - x1880 * x555 - x19 * x570 +
    x19 * x723 + x464 * x4935 - x512 * x555 - x552 * x558 + x562 * x570 -
    x566 * x597 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-1.199e+20 * x1883 * x24) *
      (x555 +
       (-x37) *
         (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
          (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
          (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                    (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
       (-x87) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x1882 * x61 - x1882 * x73) *
      (x558 + (-x81) * (x130 + (-x141) * (x464)) +
       (-x94) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x464) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x130 + (-x141) * (x464)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2754] =
    -x1043 * x132 - x1043 * x967 + x132 * x1861 + x132 * x491 + x1861 * x967 +
    x1868 * x582 - x1871 * x573 - x4935 * x586 - x570 * x573 + x570 * x967 +
    x573 * x723 - x582 * x597 + x8993 +
    (x1880 * x37 + x37 * x512) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-1.199e+20 * x1883 * x24) *
      (0 +
       (-x37) *
         (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
          (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
          (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                    (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
       (-x87) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x132 + (-x141) * (-x586)) +
       (-x94) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (-x586) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x132 + (-x141) * (-x586)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2810] =
    x104 * x1868 - x104 * x597 - x1043 * x106 - x1043 * x50 + x106 * x1861 +
    x106 * x491 + x127 * x4935 + x1861 * x50 + x1871 * x529 + x1880 * x594 +
    2.389e+20 * x1883 + x50 * x570 + x512 * x594 + x529 * x570 - x529 * x723 +
    x8993 +
    (x1880 * x37 + x37 * x512) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (x184 * x1871 + x184 * x570 - x184 * x723 + x1865 * x94 + x1880 * x87 +
     x512 * x87 + x552 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-1.199e+20 * x1883 * x24) *
      (-x594 +
       (-x37) *
         (x529 + (-x113) * (x106 + (-x141) * (x127)) +
          (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
          (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                    (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
       (-x87) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x1882 * x61 - x1882 * x73) *
      (0 + (-x81) * (x106 + (-x141) * (x127)) +
       (-x94) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (x1043 * x141 - x141 * x1861 - x141 * x491) * (x127) +
    (-x1043 * x182 - x113 * x1871 - x113 * x570 + x113 * x723 + x181 * x1868 -
     x181 * x597 + x182 * x1861 + x182 * x570 + x1865 * x81 + x552 * x81) *
      (x106 + (-x141) * (x127)) +
    (-x1043 * x183 - x121 * x1871 - x121 * x570 + x121 * x723 + x183 * x1861 +
     x183 * x570) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2866] = x8993;
  J[2922] = -5000000.0 * sc[10] * x8794 + x8993;
  J[2978] = -10000000.0 * sc[10] * x8794 + x1392 * x4922 - x1392 * x8571 +
            x382 * x4989 - x382 * x8582 + x5781 + x8587 + x8735 + x8737 + x8919;
  J[3034] = x8993;
  J[11] = -sc[11] * x2146 - sc[11] * x2148 + x1363 * x8571 + x1861 * x536 -
          x1861 * x544 - x1861 * x557 + x1861 * x604 + x1868 * x579 -
          x1868 * x602 - x1871 * x519 + x1871 * x528 - x190 * x8592 +
          x233 * x8592 + x383 * x8582 - x402 * x8582 + x606 * x8576 + x9149 +
          (-x184 * x1871) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
          (x141 * x1861) * (-x681 + x734) +
          (x113 * x1871 - x181 * x1868 - x182 * x1861) *
            (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x121 * x1871 - x183 * x1861) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[67] = sc[10] * x2494 -
          1.87048563915858e+29 * ((sc[4]) * (sc[4])) * x196 * x6393 *
            exp(-2062.18189646774 * invT - 8.89 * tc[0]) +
          x1375 * x8571 - x1861 * x511 + x1861 * x742 - x1861 * x758 +
          x1861 * x771 + x1868 * x574 - x1868 * x756 - x1871 * x521 -
          x1871 * x738 + x248 * x8592 - x251 * x8592 + x403 * x8582 -
          x404 * x8582 + x617 * x8576 - x6384 * (5.0 * x6405 + 0.7 * x6406) +
          1.87048563915858e+29 * x6393 * x6396 - 7.6025e+18 * x6403 +
          7.6025e+18 * x6417 + x9146 * (5.0 * x6405 + 0.7 * x6406) +
          (-x184 * x1871) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
          (x141 * x1861) * (x770 - x772) +
          (x113 * x1871 - x181 * x1868 - x182 * x1861) *
            (x758 - x771 + (-x141) * (x770 - x772)) +
          (x121 * x1871 - x183 * x1861) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[123] = -sc[11] * x4100 + x1376 * x8571 - x1861 * x543 + x1861 * x753 -
           x1861 * x792 + x1861 * x803 - x1868 * x745 + x1868 * x765 +
           x1871 * x774 - x1871 * x790 + x253 * x8592 - x254 * x8592 +
           x405 * x8582 - x406 * x8582 + x640 * x8576 + x9149 +
           (-x184 * x1871) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (x141 * x1861) * (x801 - x804) +
           (x113 * x1871 - x181 * x1868 - x182 * x1861) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (x121 * x1871 - x183 * x1861) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[179] =
    -594200000000.0 * sc[11] * x5265 - 183900000.0 * sc[11] * x5267 -
    x116 * x1871 + x1377 * x8571 + x1861 * x741 - x1861 * x763 - x1861 * x821 +
    x1861 * x841 + x1868 * x797 - x1868 * x800 + x1871 * x791 + x256 * x8592 -
    x258 * x8592 + x407 * x8582 + x645 * x8576 + x9149 + x9151 +
    (-x184 * x1871) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x1861) * (x817 - x842) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x121 * x1871 - x183 * x1861) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[235] = sc[10] * x4250 - sc[11] * x6672 - 1000000.0 * sc[11] +
           6.082e+18 * sc[4] * x196 * x6383 * exp(x6399) + x1378 * x8571 +
           x1379 * x8571 + x1861 * x468 - x1861 * x669 - x1861 * x793 +
           x1861 * x796 + x1868 * x813 - x1868 * x839 + x1871 * x811 -
           x1871 * x823 + x260 * x8592 - x263 * x8592 + x2783 + x409 * x8582 -
           x410 * x8582 + x647 * x8576 + x658 * x8576 + x9149 +
           (-x184 * x1871) *
             (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
              (x183) * (-x813 + x839 +
                        (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
           (x141 * x1861) * (x829 - x872) +
           (x113 * x1871 - x181 * x1868 - x182 * x1861) *
             (-x468 + x669 + (-x141) * (x829 - x872)) +
           (x121 * x1871 - x183 * x1861) *
             (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[291] =
    sc[10] * x6765 + sc[10] * x6767 + x1380 * x8571 - x1861 * x799 +
    x1861 * x812 - x1861 * x869 + x1861 * x896 - x1868 * x833 + x1868 * x840 -
    x1871 * x826 - x1871 * x827 + x265 * x8592 - x267 * x8592 + x2861 -
    x413 * x8582 - x6384 * (24.0 * x6405 + 3.36 * x6406) -
    8.9783310679611605e+29 * x6388 + 8.9783310679611605e+29 * x6393 * x6396 -
    3.6492e+19 * x6403 + 3.6492e+19 * x6417 + x672 * x8576 + x8713 +
    x9146 * (24.0 * x6405 + 3.36 * x6406) +
    (-x184 * x1871) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x1861) * (x895 - x897) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x121 * x1871 - x183 * x1861) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[347] =
    x1382 * x8571 + x269 * x8592 - x270 * x8592 + x416 * x8582 -
    x6384 * (3.8 * x6405 + 0.532 * x6406) - 1.42156908576052e+29 * x6388 +
    1.42156908576052e+29 * x6393 * x6396 - 5.7779e+18 * x6403 +
    5.7779e+18 * x6417 + x680 * x8576 + x9146 * (3.8 * x6405 + 0.532 * x6406) +
    x9151 +
    (-x184 * x1871) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x1861) * (x909 + x913) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (0 + (-x141) * (x909 + x913)) +
    (x121 * x1871 - x183 * x1861) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[403] = -1.15558e+19 * refC * sc[11] * x6383 * x6400 +
           1.15558e+19 * ((sc[4]) * (sc[4])) * x6383 * exp(x6399) -
           x188 * x8592 + x272 * x8592 - x6384 * (7.6 * x6405 + 1.064 * x6406) -
           2.8431381715210298e+29 * x6388 +
           2.8431381715210298e+29 * x6393 * x6396 + x8713 +
           x9146 * (7.6 * x6405 + 1.064 * x6406) + x9151;
  J[459] =
    -sc[11] * x8049 + x1383 * x8571 - x1861 * x915 - x1861 * x920 -
    x1868 * x919 + x1871 * x844 - x274 * x8592 + x275 * x8592 + x375 * x8582 -
    x419 * x8582 + x689 * x8576 + x693 * x8576 + x9149 +
    (-x184 * x1871) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x1861) * (-x922) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x920 + (-x141) * (-x922)) +
    (x121 * x1871 - x183 * x1861) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[515] =
    x1384 * x8571 - x1861 * x834 + x1861 * x835 - x1861 * x885 + x1861 * x936 +
    x1868 * x865 - x1868 * x868 - x1871 * x838 - x1871 * x859 + x278 * x8592 -
    x279 * x8592 + x420 * x8582 - x421 * x8582 - x628 * x8576 + x8130 + x9149 +
    (-x184 * x1871) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (x141 * x1861) * (x935 - x937) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (x121 * x1871 - x183 * x1861) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[571] =
    260000.0 * sc[10] * exp(819.73994859588799 * invT) +
    840000000.0 * sc[10] * exp(-6028.5356563405403 * invT) + sc[12] * x8840 +
    sc[13] * x8833 + sc[1] * x2494 + sc[20] * x8804 +
    30000000.0 * sc[21] * x2474 + sc[22] * x8811 + sc[28] * x8784 +
    sc[34] * x8804 + sc[40] * x8784 + sc[43] * x8784 +
    16800000.0 * sc[45] * exp(-10285.748649048501 * invT) +
    28000000.0 * sc[45] * exp(-8901.9028180854893 * invT) + sc[4] * x4250 +
    5000000.0 * sc[52] * x8794 + 10000000.0 * sc[53] * x8794 + sc[5] * x6765 +
    sc[5] * x6767 + x1385 * x8571 + x1386 * x8571 + x1861 * x546 +
    x1861 * x831 - x1861 * x836 - x1861 * x926 + x1868 * x863 - x1868 * x893 -
    x1871 * x870 + x1871 * x877 + x281 * x8592 - x282 * x8592 + x422 * x8582 -
    x423 * x8582 + x657 * x8576 + x706 * x8576 + x8174 + x8820 + x9149 +
    (-x184 * x1871) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x141 * x1861) * (x465 - x977) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x121 * x1871 - x183 * x1861) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[627] =
    1000000.0 * kf_qss[180] * sc[11] * x1374 * x8570 -
    433200.0 * kf_qss[246] * sc[11] * x1859 * x704 +
    kf_qss[78] * sc[11] * x610 * x8575 - sc[0] * x2146 - sc[0] * x2148 -
    sc[15] * x8863 - sc[25] * x8861 - sc[2] * x4100 - sc[33] * x8867 -
    sc[37] * x8859 - sc[38] * x8856 - 594200000000.0 * sc[3] * x5265 -
    183900000.0 * sc[3] * x5267 - 1000000.0 * sc[44] * x8570 - sc[4] * x6672 -
    1000000.0 * sc[4] - sc[8] * x8049 + x1004 * x1861 - x115 * x1867 -
    434800.0 * x120 * x1859 + x131 * x8575 + 1000000.0 * x1360 * x8570 -
    433200.0 * x1859 * x41 - 434800.0 * x1859 * x85 - x1861 * x498 -
    x1861 * x700 + x1861 * x864 - x1868 * x889 + x1868 * x894 - x1871 * x924 -
    x197 * x8591 - 3.041e+18 * x2413 * x6383 * x6400 + x284 * x8592 -
    x286 * x8592 + x370 * x8581 - x424 * x8582 + x8713 + x9149 +
    (-x184 * x1871) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x1861) * (x1001 - x1005) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x121 * x1871 - x183 * x1861) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[683] = sc[10] * x8840 + x288 * x8592 - x289 * x8592 + x8713 + x9149 + x9151;
  J[739] =
    sc[10] * x8833 - x1000 * x1861 + x1026 * x1861 + x1861 * x861 -
    x1861 * x866 + x1868 * x932 - x1868 * x934 - x1871 * x925 - x1871 * x938 +
    x290 * x8592 - x293 * x8592 - x425 * x8582 + x724 * x8576 + x8713 + x9149 +
    (-x184 * x1871) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x1861) * (-x1027 + x553) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x121 * x1871 - x183 * x1861) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[795] =
    -x1014 * x1861 + x1046 * x1861 - x1861 * x887 + x1861 * x890 +
    x1868 * x929 - x1868 * x974 - x1871 * x963 - x1871 * x966 - x295 * x8592 +
    x725 * x8576 + x9167 +
    (-x184 * x1871) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x1861) * (x1039 - x1047) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x121 * x1871 - x183 * x1861) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[851] =
    -sc[11] * x8863 + x1041 * x1871 - x1055 * x1861 - x1056 * x1868 -
    x1057 * x1861 + x297 * x8592 - x298 * x8592 - x426 * x8582 + x727 * x8576 +
    x8713 + x9149 +
    (-x184 * x1871) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x1861) * (x1058) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x1057 + (-x141) * (x1058)) +
    (x121 * x1871 - x183 * x1861) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[907] = x228 * x8592 - x231 * x8592 + x8713 + x9149 + x9151;
  J[963] = -x1060 * x1861 - x1061 * x1868 - x1062 * x1861 + x1871 * x39 -
           x303 * x8592 + x728 * x8576 + x9167 +
           (-x184 * x1871) *
             (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
              (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
           (x141 * x1861) * (-x1063) +
           (x113 * x1871 - x181 * x1868 - x182 * x1861) *
             (x1062 + (-x141) * (-x1063)) +
           (x121 * x1871 - x183 * x1861) *
             (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1019] = x305 * x8592 - x306 * x8592 + x427 * x8582 + x9149 + x9151;
  J[1075] = -x307 * x8592 + x9167;
  J[1131] = sc[10] * x8804 - x308 * x8592 + x428 * x8582 + x9169;
  J[1187] = 30000000.0 * sc[10] * x2474 + x9171;
  J[1243] = sc[10] * x8811 + x1033 * x1861 - x309 * x8592 + x561 * x8576 +
            x9167 +
            (-x184 * x1871) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x1861) * (-x1067 + x1068) +
            (x113 * x1871 - x181 * x1868 - x182 * x1861) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x121 * x1871 - x183 * x1861) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1299] = x9171;
  J[1355] = -x1076 * x1861 - x1079 * x1868 - x1082 * x1861 + x1388 * x8571 -
            x1871 * x643 + x9171 +
            (-x184 * x1871) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x1861) * (x1070 + x463) +
            (x113 * x1871 - x181 * x1868 - x182 * x1861) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x121 * x1871 - x183 * x1861) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1411] =
    -sc[11] * x8861 - x1086 * x1861 - x1087 * x1868 - x1088 * x1861 -
    x1871 * x684 + x751 * x8576 + x9171 +
    (-x184 * x1871) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x1861) * (x1089) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x1088 + (-x141) * (x1089)) +
    (x121 * x1871 - x183 * x1861) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1467] =
    1400000.0 * sc[10] * x8818 - x1092 * x1861 + x1861 * x891 - x1868 * x975 -
    x293 * x8592 + x429 * x8582 + x755 * x8576 + x759 * x8576 + x9169 +
    (-x184 * x1871) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x1861) * (x1093) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x1092 + (-x141) * (x1093)) +
    (x121 * x1871 - x183 * x1861) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1523] = x9171;
  J[1579] = sc[10] * x8784 - x310 * x8592 + x760 * x8576 + x9167;
  J[1635] = x9171;
  J[1691] =
    x1095 * x1871 - x1097 * x1868 - x1098 * x1861 - x1861 * x886 -
    x293 * x8592 + x430 * x8582 + x9169 +
    (-x184 * x1871) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x1861) * (x1099) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x1098 + (-x141) * (x1099)) +
    (x121 * x1871 - x183 * x1861) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1747] =
    -x1100 * x1861 + x1389 * x8571 - x1861 * x726 - x1868 * x707 +
    x1871 * x968 - x311 * x8592 + x431 * x8582 + x762 * x8576 + x9169 +
    (-x184 * x1871) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x1861) * (-x1104) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x726 + (-x141) * (-x1104)) +
    (x121 * x1871 - x183 * x1861) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1803] =
    -x1002 * x1871 + x1390 * x8571 + x1861 * x564 - x1861 * x612 -
    x1861 * x928 + x1861 * x930 + x1868 * x682 - x1868 * x999 - x1871 * x587 -
    x189 * x8592 + x232 * x8592 - x367 * x8582 + x764 * x8576 + x8713 + x9149 +
    (-x184 * x1871) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x1861) * (-x585 + x688) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x121 * x1871 - x183 * x1861) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1859] = -sc[11] * x8867 + x9171;
  J[1915] = sc[10] * x8804 + x9171;
  J[1971] = x9171;
  J[2027] =
    x9171 +
    (-x184 * x1871) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x1861) * (-x692) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (0 + (-x141) * (-x692)) +
    (x121 * x1871 - x183 * x1861) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2083] = -sc[11] * x8859 + x767 * x8576 + x9171;
  J[2139] = -sc[11] * x8856 - x238 * x8592 + x9167;
  J[2195] = x9171;
  J[2251] = sc[10] * x8784 + x1391 * x8571 + x9171;
  J[2307] = x9171;
  J[2363] = x9171;
  J[2419] = sc[10] * x8784 + x9171;
  J[2475] =
    -x8571 + x9171 +
    (-x184 * x1871) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x1861) * (-x710) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (0 + (-x141) * (-x710)) +
    (x121 * x1871 - x183 * x1861) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2531] =
    16800000.0 * sc[10] * exp(-10285.748649048501 * invT) +
    28000000.0 * sc[10] * exp(-8901.9028180854893 * invT) + x1003 * x1868 +
    x1861 * x482 - x1861 * x712 + x1861 * x927 - x1861 * x933 - x1868 * x970 +
    x1871 * x524 - x1871 * x7 + x9171 +
    (-x184 * x1871) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x1861) * (x103 - x545) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x121 * x1871 - x183 * x1861) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2587] =
    x101 * x1868 - x135 * x1861 + x9171 +
    (-x184 * x1871) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x1861) * (-x126) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x135 + (-x141) * (-x126)) +
    (x121 * x1871 - x183 * x1861) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2643] =
    -x107 * x1868 - x1861 * x461 + x1861 * x83 + x9171 +
    (-x184 * x1871) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x1861) * (x481) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x461 + (-x141) * (x481)) +
    (x121 * x1871 - x183 * x1861) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2699] =
    -x130 * x1861 - x1861 * x562 - x1868 * x566 + x1871 * x19 + x9171 +
    (-x184 * x1871) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x1861) * (x464) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x130 + (-x141) * (x464)) +
    (x121 * x1871 - x183 * x1861) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2755] =
    -x132 * x1861 - x1861 * x967 - x1868 * x582 + x1871 * x573 + x9171 +
    (-x184 * x1871) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x1861) * (-x586) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x132 + (-x141) * (-x586)) +
    (x121 * x1871 - x183 * x1861) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2811] =
    -x104 * x1868 - x106 * x1861 - x1861 * x50 - x1871 * x529 + x9171 +
    (-x184 * x1871) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x1861) * (x127) +
    (x113 * x1871 - x181 * x1868 - x182 * x1861) * (x106 + (-x141) * (x127)) +
    (x121 * x1871 - x183 * x1861) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2867] = x9171;
  J[2923] = 5000000.0 * sc[10] * x8794 + x9171;
  J[2979] = 10000000.0 * sc[10] * x8794 + x1392 * x8571 - x293 * x8592 +
            x382 * x8582 + x9169;
  J[3035] = x9171;
  J[12] = -3000000.0 * sc[7] * x1325 - x1270 * x9179 + x186 * x197 * x400 +
          x190 * x2010 + x190 * x4028 - x190 * x4995 + x190 * x5015 +
          x190 * x6377 + x190 * x7797 + x190 * x8592 + x190 * x9182 -
          x2010 * x233 + x2238 - x233 * x4028 + x233 * x4995 - x233 * x5015 -
          x233 * x6377 - x233 * x7797 - x233 * x8592 - x233 * x9182 -
          x339 * x4963 + x346 - x445 * x4940 + x445 * x4978 - x448 * x4940 +
          x448 * x4978 + x5007 - x550 * x7794 + x7806 + x9187;
  J[68] = -sc[12] * x3846 - 30000000.0 * sc[4] * x1334 + sc[6] * x186 * x3825 -
          3000000.0 * sc[7] * x1334 + x197 * x2224 - x2010 * x248 +
          x2010 * x251 - x2225 * x248 + x2225 * x251 - x248 * x4028 +
          x248 * x4995 - x248 * x5015 - x248 * x6377 - x248 * x7797 -
          x248 * x8592 - x248 * x9182 + x251 * x4028 - x251 * x4995 +
          x251 * x5015 + x251 * x6377 + x251 * x7797 + x251 * x8592 +
          x251 * x9182 + x9195;
  J[124] = -sc[12] * x4172 + 1000000.0 * sc[23] + sc[26] * x4155 -
           3000000.0 * sc[7] * x1335 - x2010 * x253 + x2010 * x254 -
           x2237 * x349 - x253 * x4028 + x253 * x4995 - x253 * x5015 -
           x253 * x6377 - x253 * x7797 - x253 * x8592 - x253 * x9182 +
           x254 * x4028 - x254 * x4995 + x254 * x5015 + x254 * x6377 +
           x254 * x7797 + x254 * x8592 + x254 * x9182 + x2701 + x292 -
           x349 * x4963 + x352 * x4963 - x449 * x4940 + x449 * x4978 +
           x451 * x4978 - x5109 + x7879 + x9187;
  J[180] = -kf_qss[122] * x1276 * x9179 + kf_qss[165] * x444 * x4978 -
           sc[12] * x5284 + sc[17] * x5280 + sc[37] * x5253 - x2010 * x256 +
           x2010 * x258 - x256 * x4028 + x256 * x4995 - x256 * x5015 -
           x256 * x7797 - x256 * x9182 + x258 * x4028 - x258 * x4995 +
           x258 * x5015 + x258 * x7797 + x258 * x9182 + x2763 + x453 * x4978 +
           x508 * x7794 + x6567 + x7551 + x7933 + x8671 + x9187;
  J[236] = -kf_qss[125] * x1276 * x9179 - 1.0e-42 * sc[12] * sc[17] +
           1000000.0 * sc[23] + 1000000.0 * sc[26] + 100000.0 * sc[30] -
           3000000.0 * sc[7] * x1337 - 3000000.0 * sc[7] * x1339 +
           sc[8] * x3871 + x197 * x4027 - x2010 * x260 + x2010 * x263 -
           x2237 * x349 + x240 * x4963 - x260 * x4028 + x260 * x4995 -
           x260 * x5015 - x260 * x7797 - x260 * x8592 - x260 * x9182 +
           x263 * x4028 - x263 * x4995 + x263 * x5015 + x263 * x7797 +
           x263 * x8592 + x263 * x9182 + x2835 + x292 - x349 * x4963 +
           x531 * x7794 + x6695 + x7933 + x9187;
  J[292] = -30000000.0 * sc[4] * x1340 - 3000000.0 * sc[7] * x1340 +
           x197 * x6376 - x2010 * x265 + x2010 * x267 - x2225 * x265 +
           x2225 * x267 - x265 * x4028 + x265 * x4995 - x265 * x5015 -
           x265 * x6377 - x265 * x7797 - x265 * x8592 - x265 * x9182 +
           x267 * x4028 - x267 * x4995 + x267 * x5015 + x267 * x6377 +
           x267 * x7797 + x267 * x8592 + x267 * x9182 + x9195;
  J[348] = -sc[12] * x7596 + sc[1] * x186 * x3825 - 3000000.0 * sc[7] * x1341 -
           3000000.0 * sc[7] * x1342 - x2010 * x269 + x2010 * x270 -
           x269 * x4028 + x269 * x4995 - x269 * x5015 - x269 * x6377 -
           x269 * x7797 - x269 * x8592 - x269 * x9182 + x270 * x4028 -
           x270 * x4995 + x270 * x5015 + x270 * x6377 + x270 * x7797 +
           x270 * x8592 + x270 * x9182 + x3000 + x9195;
  J[404] = -3000000.0 * kf_qss[199] * sc[7] * x1333 -
           30000000.0 * sc[4] * x1343 - 3000000.0 * x1332 + x188 * x2010 +
           x188 * x2225 + x188 * x4028 - x188 * x4995 + x188 * x5015 +
           x188 * x6377 + x188 * x7797 + x188 * x8592 + x188 * x9182 -
           x2010 * x272 - x2225 * x272 - x272 * x4028 + x272 * x4995 -
           x272 * x5015 - x272 * x6377 - x272 * x7797 - x272 * x8592 -
           x272 * x9182 + x9195;
  J[460] = sc[3] * x5289 + sc[4] * x3871 - 3000000.0 * sc[7] * x1344 -
           3000000.0 * sc[7] * x1345 + x2010 * x274 - x2010 * x275 +
           x274 * x4028 - x274 * x4995 + x274 * x5015 + x274 * x6377 +
           x274 * x8592 + x274 * x9182 - x275 * x4028 + x275 * x4995 -
           x275 * x5015 - x275 * x6377 - x275 * x8592 - x275 * x9182 + x3127 +
           x346 - x356 * x4963 + x5007 + x7806 + x8111 + x9187;
  J[516] = -30000000.0 * sc[4] * x1346 - 3000000.0 * sc[7] * x1346 +
           x197 * x7796 - x2010 * x278 + x2010 * x279 - x2225 * x278 +
           x2225 * x279 - x278 * x4028 + x278 * x4995 - x278 * x5015 -
           x278 * x6377 - x278 * x7797 - x278 * x8592 - x278 * x9182 +
           x279 * x4028 - x279 * x4995 + x279 * x5015 + x279 * x6377 +
           x279 * x7797 + x279 * x8592 + x279 * x9182 + x9195;
  J[572] = 10.0e-25 * sc[37] - x1279 * x9179 + x197 * x5014 - x2010 * x281 +
           x2010 * x282 - x2225 * x281 + x2225 * x282 - x2237 * x357 -
           x281 * x4028 + x281 * x4995 - x281 * x5015 - x281 * x6377 -
           x281 * x7797 - x281 * x9182 + x282 * x4028 - x282 * x4995 +
           x282 * x5015 + x282 * x6377 + x282 * x7797 + x282 * x9182 + x346 +
           x5007 - x7794 * x97 + x7806 + x8842 + x9187;
  J[628] = x197 * x8591 - x2010 * x284 + x2010 * x286 - x2225 * x284 +
           x2225 * x286 - x284 * x4028 + x284 * x4995 - x284 * x5015 -
           x284 * x6377 - x284 * x7797 - x284 * x8592 - x284 * x9182 +
           x286 * x4028 - x286 * x4995 + x286 * x5015 + x286 * x6377 +
           x286 * x7797 + x286 * x8592 + x286 * x9182 + x9195;
  J[684] = kf_qss[168] * sc[12] * x444 * x4977 - sc[1] * x3846 -
           sc[22] * x4561 - sc[2] * x4172 - sc[31] * x9237 - sc[3] * x5284 -
           sc[6] * x7596 - 3000000.0 * sc[7] * x1347 - x186 * x2309 -
           x186 * x3822 - x197 * x4994 - x2010 * x288 + x2010 * x289 + x2235 -
           x288 * x4028 + x288 * x4995 - x288 * x5015 - x288 * x9182 +
           x289 * x4028 - x289 * x4995 + x289 * x5015 + x289 * x9182 + x346 +
           x401 * x4977 / x443 - x454 * x4940 - x4560 + x5007 - x7001 - x7003 +
           x7023 + x7803 + x7806 + x8907 + x9187 + x9243;
  J[740] = -30000000.0 * sc[4] * x1348 - 3000000.0 * sc[7] * x1348 + x9249;
  J[796] = -30000000.0 * sc[4] * x1349 - 3000000.0 * sc[7] * x1349 +
           x2010 * x295 + x2225 * x295 + x295 * x4028 - x295 * x4995 +
           x295 * x5015 + x295 * x6377 + x295 * x7797 + x295 * x8592 +
           x295 * x9182 + x455 * x4978 - x5812 + x9256;
  J[852] = -30000000.0 * sc[4] * x1350 - 3000000.0 * sc[7] * x1350 -
           x1264 * x7794 - x2010 * x297 + x2010 * x298 - x2225 * x297 +
           x2225 * x298 + x2638 - x297 * x4028 + x297 * x4995 - x297 * x5015 -
           x297 * x6377 - x297 * x7797 - x297 * x8592 - x297 * x9182 +
           x298 * x4028 - x298 * x4995 + x298 * x5015 + x298 * x6377 +
           x298 * x7797 + x298 * x8592 + x298 * x9182 + x7806 + x8617 + x9187;
  J[908] = -x2010 * x228 + x2010 * x231 - x2225 * x228 + x2225 * x231 -
           x228 * x4028 + x228 * x4995 - x228 * x5015 - x228 * x6377 -
           x228 * x7797 - x228 * x8592 - x228 * x9182 + x231 * x4028 -
           x231 * x4995 + x231 * x5015 + x231 * x6377 + x231 * x7797 +
           x231 * x8592 + x231 * x9182 + x2638 + x7879 + x8617 + x9187;
  J[964] = -kf_qss[104] * x5912 - 1.0e-42 * sc[12] * sc[4] -
           150000.0 * sc[12] * exp(-5334.0966575300299 * invT) + sc[3] * x5280 -
           x1282 * x9179 + x2010 * x303 + x2225 * x303 + x303 * x4028 -
           x303 * x4995 + x303 * x5015 + x303 * x6377 + x303 * x7797 +
           x303 * x8592 + x303 * x9182 + x457 * x4978 + x9256;
  J[1020] = -30000000.0 * sc[4] * x1351 - 3000000.0 * sc[7] * x1351 -
            x2010 * x305 + x2010 * x306 - x2225 * x305 + x2225 * x306 + x2638 -
            x305 * x4028 + x305 * x4995 - x305 * x5015 - x305 * x6377 -
            x305 * x7797 - x305 * x8592 - x305 * x9182 + x306 * x4028 -
            x306 * x4995 + x306 * x5015 + x306 * x6377 + x306 * x7797 +
            x306 * x8592 + x306 * x9182 - x458 * x4940 + x458 * x4978 + x7879 +
            x8617 + x9187;
  J[1076] = -30000000.0 * sc[4] * x1353 - 3000000.0 * sc[7] * x1353 +
            x2010 * x307 + x2225 * x307 + x307 * x4028 - x307 * x4995 +
            x307 * x5015 + x307 * x6377 + x307 * x7797 + x307 * x8592 +
            x307 * x9182 + x9256;
  J[1132] = -x186 * x569 * x7793 + x2010 * x308 + x2225 * x308 + x308 * x4028 -
            x308 * x4995 + x308 * x5015 + x308 * x6377 + x308 * x7797 +
            x308 * x8592 + x308 * x9182 + x3327 + x4599 + x7045 + x7806 -
            x8242 + x8917 + x9251;
  J[1188] = -x4734 + x9249;
  J[1244] = -sc[12] * x4561 + x2010 * x309 + x2225 * x309 + x309 * x4028 -
            x309 * x4995 + x309 * x5015 + x309 * x6377 + x309 * x7797 +
            x309 * x8592 + x309 * x9182 + x3327 + x4599 + x7045 + x8244 +
            x8917 + x9251;
  J[1300] = 1000000.0 * sc[2] + 1000000.0 * sc[4] + x9249;
  J[1356] = -x7216 + x9249;
  J[1412] = x9249;
  J[1468] = sc[2] * x4155 + 1000000.0 * sc[4] + x9249;
  J[1524] = x9249;
  J[1580] = x2010 * x310 + x2225 * x310 + x310 * x4028 - x310 * x4995 +
            x310 * x5015 + x310 * x6377 + x310 * x7797 + x310 * x8592 +
            x310 * x9182 + x3327 + x4599 + x7045 + x8244 + x8917 + x9251;
  J[1636] = x9249;
  J[1692] = 100000.0 * sc[4] + x9249;
  J[1748] = -sc[12] * x9237 + x2010 * x311 - x2225 * x290 + x2225 * x311 -
            x2237 * x361 - x290 * x8592 + x311 * x4028 - x311 * x4995 +
            x311 * x5015 + x311 * x6377 + x311 * x7797 + x311 * x8592 +
            x311 * x9182 + x346 - x361 * x4963 + x4599 + x5007 + x7045 + x8244 +
            x9251;
  J[1804] = x189 * x2010 + x189 * x2225 + x189 * x4028 - x189 * x4995 +
            x189 * x5015 + x189 * x6377 + x189 * x7797 + x189 * x8592 +
            x189 * x9182 + x197 * x9181 - x2010 * x232 - x2225 * x232 -
            x2237 * x338 - x232 * x4028 + x232 * x4995 - x232 * x5015 -
            x232 * x6377 - x232 * x7797 - x232 * x8592 - x232 * x9182 -
            x338 * x4963 + x346 + x5007 + x7879 + x9187;
  J[1860] = x9249;
  J[1916] = -x1283 * x9179 + x9249;
  J[1972] = -x1307 * x6563 + x9249;
  J[2028] = -x1308 * x6563 + x9249;
  J[2084] = -kf_qss[167] * x5912 + 10.0e-25 * sc[10] + sc[3] * x5247 +
            sc[3] * x5253 - x1284 * x9179 + x459 * x4978 - x7344 + x9249;
  J[2140] = x2010 * x238 + x2225 * x238 + x238 * x4028 - x238 * x4995 +
            x238 * x5015 + x238 * x6377 + x238 * x7797 + x238 * x8592 +
            x238 * x9182 + x3327 + x4599 + x7045 + x8244 + x8917 + x9251;
  J[2196] = -x460 * x4940 + x460 * x4978 + x9249;
  J[2252] = x9249;
  J[2308] = x9249;
  J[2364] = x9249;
  J[2420] = x9249;
  J[2476] = x9249;
  J[2532] = x9249;
  J[2588] = x9249;
  J[2644] = x9249;
  J[2700] = x9249;
  J[2756] = x9249;
  J[2812] = x9249;
  J[2868] = x9249;
  J[2924] = x9249;
  J[2980] = x9249;
  J[3036] = x9249;
  J[13] = 120000000.0 * sc[13] * x1325 - sc[13] * x1985 + 36100000.0 * sc[15] -
          x1887 * x519 + x1887 * x528 + x1887 * x536 - x1887 * x544 -
          x1887 * x557 + x1887 * x604 + x1892 * x579 - x1892 * x602 +
          x383 * x6360 - x402 * x6360 + x606 * x9289 + x7842 +
          (-x184 * x1887) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
          (x141 * x1887) * (-x681 + x734) +
          (x113 * x1887 - x181 * x1892 - x182 * x1887) *
            (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x121 * x1887 - x183 * x1887) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[69] = 120000000.0 * sc[13] * x1334 + sc[15] * x2489 - x1887 * x511 -
          x1887 * x521 - x1887 * x738 + x1887 * x742 - x1887 * x758 +
          x1887 * x771 + x1892 * x574 - x1892 * x756 + x403 * x6360 -
          x404 * x6360 + x617 * x9289 + x7877 +
          (-x184 * x1887) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
          (x141 * x1887) * (x770 - x772) +
          (x113 * x1887 - x181 * x1892 - x182 * x1887) *
            (x758 - x771 + (-x141) * (x770 - x772)) +
          (x121 * x1887 - x183 * x1887) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[125] = 120000000.0 * sc[13] * x1335 - sc[13] * x4092 - x1887 * x543 +
           x1887 * x753 + x1887 * x774 - x1887 * x790 - x1887 * x792 +
           x1887 * x803 - x1892 * x745 + x1892 * x765 + x405 * x6360 -
           x406 * x6360 + x640 * x9289 + x7842 +
           (-x184 * x1887) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (x141 * x1887) * (x801 - x804) +
           (x113 * x1887 - x181 * x1892 - x182 * x1887) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (x121 * x1887 - x183 * x1887) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[181] =
    120000000.0 * sc[13] * x1336 - sc[13] * x5165 - x116 * x1887 +
    x1887 * x741 - x1887 * x763 + x1887 * x791 - x1887 * x821 + x1887 * x841 +
    x1892 * x797 - x1892 * x800 + x407 * x6360 + x645 * x9289 + x9333 +
    (-x184 * x1887) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x1887) * (x817 - x842) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x121 * x1887 - x183 * x1887) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[237] = 120000000.0 * sc[13] * x1337 + 120000000.0 * sc[13] * x1339 -
           sc[13] * x6588 + sc[15] * x4248 + 500000.0 * sc[26] + x1887 * x468 -
           x1887 * x669 - x1887 * x793 + x1887 * x796 + x1887 * x811 -
           x1887 * x823 + x1892 * x813 - x1892 * x839 + x409 * x6360 -
           x410 * x6360 + x647 * x9289 + x658 * x9289 + x7842 +
           (-x184 * x1887) *
             (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
              (x183) * (-x813 + x839 +
                        (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
           (x141 * x1887) * (x829 - x872) +
           (x113 * x1887 - x181 * x1892 - x182 * x1887) *
             (-x468 + x669 + (-x141) * (x829 - x872)) +
           (x121 * x1887 - x183 * x1887) *
             (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[293] =
    120000000.0 * sc[13] * x1340 + sc[15] * x6722 - x1887 * x799 +
    x1887 * x812 - x1887 * x826 - x1887 * x827 - x1887 * x869 + x1887 * x896 -
    x1892 * x833 + x1892 * x840 + x411 * x6360 - x413 * x6360 + x672 * x9289 +
    6.9905849793792098e+37 * x7811 * x7832 - 1.135e+24 * x7812 * x7823 * x7983 +
    1.135e+24 * x7812 * x7836 * x7983 + 5.675e+24 * x7823 -
    6.9905849793792098e+37 * x7828 - 5.675e+24 * x7836 +
    (-x184 * x1887) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x1887) * (x895 - x897) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x121 * x1887 - x183 * x1887) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[349] =
    120000000.0 * sc[13] * x1341 + 120000000.0 * sc[13] * x1342 - x408 * x6360 +
    x416 * x6360 + x680 * x9289 + x7877 +
    (-x184 * x1887) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x1887) * (x909 + x913) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (0 + (-x141) * (x909 + x913)) +
    (x121 * x1887 - x183 * x1887) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[405] = 120000000.0 * sc[13] * x1343 - 1.135e+24 * x2355 * x7812 * x7823 +
           1.135e+24 * x2355 * x7812 * x7836 - x408 * x6360 + x411 * x6360 +
           4.1943509876275199e+37 * x7811 * x7832 + 3.405e+24 * x7823 -
           4.1943509876275199e+37 * x7828 - 3.405e+24 * x7836;
  J[461] =
    120000000.0 * sc[13] * x1344 + 120000000.0 * sc[13] * x1345 -
    sc[13] * x8052 + sc[15] * x8087 +
    2.27e+24 * sc[8] * x185 * x7821 * exp(x7809) + x1887 * x844 - x1887 * x915 -
    x1887 * x920 - x1892 * x919 + x375 * x6360 - x419 * x6360 + x689 * x9289 +
    x693 * x9289 + x7842 +
    (-x184 * x1887) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x1887) * (-x922) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x920 + (-x141) * (-x922)) +
    (x121 * x1887 - x183 * x1887) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[517] = 120000000.0 * sc[13] * x1346 + sc[15] * x8127 - x1887 * x834 +
           x1887 * x835 - x1887 * x838 - x1887 * x859 - x1887 * x885 +
           x1887 * x936 + x1892 * x865 - x1892 * x868 + x420 * x6360 -
           x421 * x6360 - x628 * x9289 + x7842 +
           (-x184 * x1887) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (x141 * x1887) * (x935 - x937) +
           (x113 * x1887 - x181 * x1892 - x182 * x1887) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (x121 * x1887 - x183 * x1887) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[573] = -sc[13] * x8833 + sc[15] * x5577 + x1887 * x546 + x1887 * x831 -
           x1887 * x836 - x1887 * x870 + x1887 * x877 - x1887 * x926 +
           x1892 * x863 - x1892 * x893 + x422 * x6360 - x423 * x6360 +
           x657 * x9289 + x706 * x9289 + x7842 +
           (-x184 * x1887) *
             (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
              (x183) * (-x863 + x893 +
                        (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
           (x141 * x1887) * (x465 - x977) +
           (x113 * x1887 - x181 * x1892 - x182 * x1887) *
             (-x546 + x926 + (-x141) * (x465 - x977)) +
           (x121 * x1887 - x183 * x1887) *
             (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[629] =
    sc[15] * x8863 + x1004 * x1887 - x1887 * x498 - x1887 * x700 +
    x1887 * x864 - x1887 * x899 - x1887 * x924 - x1892 * x889 + x1892 * x894 +
    x411 * x6360 - x424 * x6360 + x717 * x9289 + x7842 +
    (-x184 * x1887) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x1887) * (x1001 - x1005) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x121 * x1887 - x183 * x1887) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[685] = 120000000.0 * sc[13] * x1347 + x9390;
  J[741] =
    120000000.0 * kf_qss[191] * sc[13] * x1333 -
    kf_qss[270] * sc[13] * x1886 * x704 + kf_qss[80] * sc[13] * x610 * x9288 -
    1.135e+24 * refC * x185 * x7835 - sc[0] * x1985 - sc[10] * x8833 -
    sc[21] * x9394 - sc[2] * x4092 - sc[31] * x8833 - sc[37] * x9391 -
    sc[3] * x5165 - sc[4] * x6588 - sc[8] * x8052 - x1000 * x1887 +
    x1026 * x1887 - 320000.0 * x115 * exp(-6189.5649893980499 * invT) -
    x120 * x1886 + x131 * x9288 + 120000000.0 * x1332 - x1886 * x41 -
    x1886 * x85 + x1887 * x861 - x1887 * x866 - x1887 * x938 + x1892 * x932 -
    x1892 * x934 - x3302 + 9830000.0 * x370 * exp(-16319.3164720471 * invT) +
    x411 * x6360 - x425 * x6360 + x7842 - x9401 +
    (-x184 * x1887) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x1887) * (-x1027 + x553) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x121 * x1887 - x183 * x1887) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[797] =
    120000000.0 * sc[13] * x1349 - x1014 * x1887 + x1046 * x1887 -
    x1887 * x887 + x1887 * x890 - x1887 * x963 - x1887 * x966 + x1892 * x929 -
    x1892 * x974 + x725 * x9289 + x9390 +
    (-x184 * x1887) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x1887) * (x1039 - x1047) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x121 * x1887 - x183 * x1887) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[853] =
    36100000.0 * sc[0] + sc[10] * x5577 + sc[11] * x8863 +
    120000000.0 * sc[13] * x1350 + sc[1] * x2489 + 100000.0 * sc[22] * x1938 +
    3980000.0 * sc[25] + 1000000.0 * sc[28] * x2130 + sc[32] * x9429 +
    400000.0 * sc[37] + 100000.0 * sc[45] * exp(-6743.1033217832401 * invT) +
    250000.0 * sc[45] * exp(-5233.4533243690803 * invT) + sc[4] * x4248 +
    sc[5] * x6722 + sc[8] * x8087 + sc[9] * x8127 + x1041 * x1887 -
    x1055 * x1887 - x1056 * x1892 - x1057 * x1887 + x411 * x6360 -
    x426 * x6360 + x727 * x9289 + x7842 +
    (-x184 * x1887) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x1887) * (x1058) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x1057 + (-x141) * (x1058)) +
    (x121 * x1887 - x183 * x1887) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[909] = x9390;
  J[965] = -x1060 * x1887 - x1061 * x1892 - x1062 * x1887 + x1887 * x39 +
           x728 * x9289 + x9390 +
           (-x184 * x1887) *
             (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
              (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
           (x141 * x1887) * (-x1063) +
           (x113 * x1887 - x181 * x1892 - x182 * x1887) *
             (x1062 + (-x141) * (-x1063)) +
           (x121 * x1887 - x183 * x1887) *
             (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1021] = 120000000.0 * sc[13] * x1351 + x427 * x6360 + x9333;
  J[1077] = 120000000.0 * sc[13] * x1353 + x9390;
  J[1133] = x428 * x6360 + x9333;
  J[1189] = -sc[13] * x9394 + x9390;
  J[1245] = 100000.0 * sc[15] * x1938 + x1033 * x1887 + x561 * x9289 + x9390 +
            (-x184 * x1887) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x1887) * (-x1067 + x1068) +
            (x113 * x1887 - x181 * x1892 - x182 * x1887) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x121 * x1887 - x183 * x1887) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1301] = x9390 - x9453;
  J[1357] = -x1076 * x1887 - x1079 * x1892 - x1082 * x1887 - x1887 * x643 +
            x9390 +
            (-x184 * x1887) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x1887) * (x1070 + x463) +
            (x113 * x1887 - x181 * x1892 - x182 * x1887) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x121 * x1887 - x183 * x1887) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1413] =
    -kf_qss[336] * x112 * x36 * x38 * x9466 + 3980000.0 * sc[15] -
    x1086 * x1887 - x1087 * x1892 - x1088 * x1887 + x751 * x9289 + x9390 +
    (-x184 * x1887) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x1887) * (x1089) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x1088 + (-x141) * (x1089)) +
    (x121 * x1887 - x183 * x1887) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1469] =
    kf_qss[304] * x9466 / (x47 * x95) + 500000.0 * sc[4] - x1092 * x1887 -
    x1892 * x975 + x429 * x6360 + x755 * x9289 + x759 * x9289 + x9333 +
    (-x184 * x1887) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x1887) * (x1093) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x1092 + (-x141) * (x1093)) +
    (x121 * x1887 - x183 * x1887) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1525] = x9390;
  J[1581] = 1000000.0 * sc[15] * x2130 + x760 * x9289 + x9390;
  J[1637] = x9390;
  J[1693] =
    -x1097 * x1892 - x1098 * x1887 + x112 * x9475 + x430 * x6360 -
    x54 * x9475 / x95 + x9333 +
    (-x184 * x1887) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x1887) * (x1099) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x1098 + (-x141) * (x1099)) +
    (x121 * x1887 - x183 * x1887) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1749] =
    -sc[13] * x8833 - x1100 * x1887 - x1887 * x726 + x1887 * x968 -
    x1892 * x707 + x431 * x6360 + x762 * x9289 + x9333 +
    (-x184 * x1887) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x1887) * (-x1104) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x726 + (-x141) * (-x1104)) +
    (x121 * x1887 - x183 * x1887) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1805] =
    sc[15] * x9429 - x1002 * x1887 + x1887 * x564 - x1887 * x587 -
    x1887 * x612 - x1887 * x928 + x1887 * x930 + x1892 * x682 - x1892 * x999 -
    x367 * x6360 + x411 * x6360 + x764 * x9289 + x7842 +
    (-x184 * x1887) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x1887) * (-x585 + x688) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x121 * x1887 - x183 * x1887) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1861] = x9390;
  J[1917] = x9390;
  J[1973] = x9390;
  J[2029] =
    x9390 +
    (-x184 * x1887) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x1887) * (-x692) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (0 + (-x141) * (-x692)) +
    (x121 * x1887 - x183 * x1887) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2085] = -sc[13] * x9391 + 400000.0 * sc[15] + x767 * x9289 + x9390;
  J[2141] = x9390;
  J[2197] = x9390;
  J[2253] = x9390;
  J[2309] = x9390;
  J[2365] = x9390;
  J[2421] = x9390;
  J[2477] =
    x9390 +
    (-x184 * x1887) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x1887) * (-x710) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (0 + (-x141) * (-x710)) +
    (x121 * x1887 - x183 * x1887) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2533] =
    100000.0 * sc[15] * exp(-6743.1033217832401 * invT) +
    250000.0 * sc[15] * exp(-5233.4533243690803 * invT) + x1003 * x1892 +
    x1887 * x482 + x1887 * x524 - x1887 * x7 - x1887 * x712 + x1887 * x927 -
    x1887 * x933 - x1892 * x970 + x9390 +
    (-x184 * x1887) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x1887) * (x103 - x545) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x121 * x1887 - x183 * x1887) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2589] =
    x101 * x1892 - x135 * x1887 + x9390 +
    (-x184 * x1887) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x1887) * (-x126) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x135 + (-x141) * (-x126)) +
    (x121 * x1887 - x183 * x1887) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2645] =
    -x107 * x1892 - x1887 * x461 + x1887 * x83 + x9390 +
    (-x184 * x1887) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x1887) * (x481) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x461 + (-x141) * (x481)) +
    (x121 * x1887 - x183 * x1887) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2701] =
    -x130 * x1887 + x1887 * x19 - x1887 * x562 - x1892 * x566 + x9390 +
    (-x184 * x1887) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x1887) * (x464) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x130 + (-x141) * (x464)) +
    (x121 * x1887 - x183 * x1887) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2757] =
    -x132 * x1887 + x1887 * x573 - x1887 * x967 - x1892 * x582 + x9390 +
    (-x184 * x1887) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x1887) * (-x586) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x132 + (-x141) * (-x586)) +
    (x121 * x1887 - x183 * x1887) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2813] =
    -x104 * x1892 - x106 * x1887 - x1887 * x50 - x1887 * x529 + x9390 +
    (-x184 * x1887) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x1887) * (x127) +
    (x113 * x1887 - x181 * x1892 - x182 * x1887) * (x106 + (-x141) * (x127)) +
    (x121 * x1887 - x183 * x1887) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2869] = x9390;
  J[2925] = x9390;
  J[2981] = x382 * x6360 + x9333;
  J[3037] = x9390;
  J[14] =
    -160000000.0 * sc[18] * x1325 + sc[22] * x2106 + sc[23] * x122 +
    x186 * x2178 - x1899 * x519 + x1899 * x528 + x1899 * x536 - x1899 * x544 -
    x1899 * x557 + x1899 * x604 + x1903 * x579 - x1903 * x602 + x2165 -
    x2166 * x681 + x2166 * x734 + x2208 + x3993 + x606 * x9528 +
    (-x184 * x1899) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (x141 * x1899) * (-x681 + x734) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (x121 * x1899 - x183 * x1899) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[70] =
    refCinv * sc[16] * x186 * x3811 - 3767000.0 * sc[14] * x3842 +
    sc[17] * x609 - 160000000.0 * sc[18] * x1334 - 20000000.0 * sc[8] * x1334 -
    x1899 * x511 - x1899 * x521 - x1899 * x738 + x1899 * x742 - x1899 * x758 +
    x1899 * x771 + x1903 * x574 - x1903 * x756 + x2166 * x770 - x2166 * x772 +
    x2320 - x248 * x3990 + x251 * x3990 + x2636 + x617 * x9528 +
    (-x184 * x1899) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x141 * x1899) * (x770 - x772) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (x121 * x1899 - x183 * x1899) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[126] = -160000000.0 * sc[18] * x1335 + sc[21] * x4081 + 1000000.0 * sc[23] +
           13000000.0 * sc[26] * x4151 - 20000000.0 * sc[8] * x1335 -
           x1899 * x543 + x1899 * x753 + x1899 * x774 - x1899 * x790 -
           x1899 * x792 + x1899 * x803 - x1903 * x745 + x1903 * x765 + x2165 +
           x2166 * x801 - x2166 * x804 + x4169 + x640 * x9528 +
           (-x184 * x1899) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (x141 * x1899) * (x801 - x804) +
           (x113 * x1899 - x181 * x1903 - x182 * x1899) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (x121 * x1899 - x183 * x1899) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[182] =
    sc[15] * x5174 - 160000000.0 * sc[18] * x1336 - 20000000.0 * sc[8] * x1336 -
    x116 * x1899 + x1899 * x741 - x1899 * x763 + x1899 * x791 - x1899 * x821 +
    x1899 * x841 + x1903 * x797 - x1903 * x800 + x2165 + x2166 * x817 -
    x2166 * x842 + x4227 - x5178 + x645 * x9528 +
    (-x184 * x1899) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x1899) * (x817 - x842) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x121 * x1899 - x183 * x1899) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[238] =
    -20000000.0 * kf_qss[127] * ((sc[8]) * (sc[8])) / x1323 -
    10.0e-13 * sc[14] * sc[6] - sc[14] * x6686 - 160000000.0 * sc[18] * x1337 -
    160000000.0 * sc[18] * x1339 + 2500000.0 * sc[52] -
    20000000.0 * sc[8] * x1337 + x1899 * x468 - x1899 * x669 - x1899 * x793 +
    x1899 * x796 + x1899 * x811 - x1899 * x823 + x1903 * x813 - x1903 * x839 +
    x2165 + x2166 * x829 - x2166 * x872 - x260 * x3990 + x263 * x3990 +
    x647 * x9528 + x658 * x9528 +
    (-x184 * x1899) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x141 * x1899) * (x829 - x872) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x121 * x1899 - x183 * x1899) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[294] =
    sc[17] * x6726 - 160000000.0 * sc[18] * x1340 - x1899 * x799 +
    x1899 * x812 - x1899 * x826 - x1899 * x827 - x1899 * x869 + x1899 * x896 -
    x1903 * x833 + x1903 * x840 + x2166 * x895 - x2166 * x897 + x2320 -
    x265 * x3990 + x267 * x3990 + x2908 + x672 * x9528 +
    (-x184 * x1899) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x141 * x1899) * (x895 - x897) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (x121 * x1899 - x183 * x1899) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[350] =
    -20000000.0 * sc[8] * x1341 - 20000000.0 * sc[8] * x1342 + x2166 * x909 +
    x2166 * x913 + x2320 + x2636 - x269 * x3990 + x270 * x3990 + x680 * x9528 +
    x7594 +
    (-x184 * x1899) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x1899) * (x909 + x913) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (0 + (-x141) * (x909 + x913)) +
    (x121 * x1899 - x183 * x1899) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[406] =
    -160000000.0 * sc[18] * x1343 + x188 * x3990 + x2320 - x272 * x3990 + x3043;
  J[462] =
    -20000000.0 * kf_qss[201] * sc[8] * x1333 - sc[14] * x3078 -
    sc[14] * x8093 - sc[14] * x8095 + 19500000.0 * sc[15] * x3999 -
    160000000.0 * sc[18] * x1344 - 160000000.0 * sc[18] * x1345 -
    20000000.0 * sc[8] * x1345 + 200000000.0 * sc[8] * x3886 -
    20000000.0 * x1332 + x1899 * x844 - x1899 * x915 - x1899 * x920 -
    x1903 * x919 + x197 * x3989 + x2165 - x2166 * x922 + x274 * x3990 -
    x275 * x3990 + x689 * x9528 + x693 * x9528 +
    (-x184 * x1899) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x1899) * (-x922) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x920 + (-x141) * (-x922)) +
    (x121 * x1899 - x183 * x1899) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[518] = -sc[14] * x8153 + sc[17] * x8133 - 160000000.0 * sc[18] * x1346 -
           20000000.0 * sc[8] * x1346 - x1899 * x834 + x1899 * x835 -
           x1899 * x838 - x1899 * x859 - x1899 * x885 + x1899 * x936 +
           x1903 * x865 - x1903 * x868 + x2165 + x2166 * x935 - x2166 * x937 -
           x278 * x3990 + x279 * x3990 - x628 * x9528 +
           (-x184 * x1899) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (x141 * x1899) * (x935 - x937) +
           (x113 * x1899 - x181 * x1903 - x182 * x1899) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (x121 * x1899 - x183 * x1899) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[574] = -sc[14] * x5581 + sc[17] * x5584 + 1000000.0 * sc[21] * x2474 +
           5000000.0 * sc[52] * x8794 + x1899 * x546 + x1899 * x831 -
           x1899 * x836 - x1899 * x870 + x1899 * x877 - x1899 * x926 +
           x1903 * x863 - x1903 * x893 + x2165 + x2166 * x465 - x2166 * x977 -
           x281 * x3990 + x282 * x3990 + x657 * x9528 + x706 * x9528 +
           (-x184 * x1899) *
             (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
              (x183) * (-x863 + x893 +
                        (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
           (x141 * x1899) * (x465 - x977) +
           (x113 * x1899 - x181 * x1903 - x182 * x1899) *
             (-x546 + x926 + (-x141) * (x465 - x977)) +
           (x121 * x1899 - x183 * x1899) *
             (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[630] =
    x1001 * x2166 + x1004 * x1899 - x1005 * x2166 - x1899 * x498 -
    x1899 * x700 + x1899 * x864 - x1899 * x899 - x1899 * x924 - x1903 * x889 +
    x1903 * x894 + x2165 - x284 * x3990 + x286 * x3990 + x717 * x9528 +
    (-x184 * x1899) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x1899) * (x1001 - x1005) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x121 * x1899 - x183 * x1899) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[686] = -160000000.0 * sc[18] * x1347 - 20000000.0 * sc[8] * x1347 + x2165 -
           x2663 * x454 - x288 * x3990 + x289 * x3990;
  J[742] =
    -160000000.0 * sc[18] * x1348 - 20000000.0 * sc[8] * x1348 - x1000 * x1899 +
    x1026 * x1899 - x1027 * x2166 + x1899 * x861 - x1899 * x866 - x1899 * x925 -
    x1899 * x938 + x1903 * x932 - x1903 * x934 + x2166 * x553 + x2397 +
    x724 * x9528 +
    (-x184 * x1899) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x1899) * (-x1027 + x553) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x121 * x1899 - x183 * x1899) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[798] =
    -kf_qss[278] * sc[14] * x1898 * x704 + kf_qss[86] * sc[14] * x610 * x9527 -
    sc[10] * x5581 - 1928000000.0 * sc[14] * exp(-35995.0881050116 * invT) -
    330000.0 * sc[15] * exp(-3623.15999379398 * invT) -
    500000.0 * sc[17] * x3341 - sc[17] * x9680 - 160000000.0 * sc[18] * x1349 -
    3767000.0 * sc[1] * x3842 - sc[20] * x4622 - sc[21] * x3817 -
    sc[22] * x9651 - sc[26] * x9655 - 13.59 * sc[2] * x2657 -
    10.0e-13 * sc[4] * sc[6] - sc[4] * x6686 - sc[6] * x4357 - sc[6] * x7591 -
    sc[8] * x3078 - sc[8] * x8093 - sc[8] * x8095 - sc[9] * x8153 -
    x1014 * x1899 + x1039 * x2166 + x1046 * x1899 - x1047 * x2166 -
    2570000.0 * x115 * exp(-12781.7033114399 * invT) - x120 * x1898 +
    x131 * x9527 - x186 * x2315 - x186 * x3819 - x1898 * x41 - x1898 * x85 -
    x1899 * x887 + x1899 * x890 - x1899 * x966 + x1903 * x929 - x1903 * x974 +
    x2165 - x2663 * x455 + x295 * x3990 + x3378 - x3809 + x4594 - x4613 -
    x5819 - x9659 +
    (-x184 * x1899) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x1899) * (x1039 - x1047) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x121 * x1899 - x183 * x1899) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[854] =
    -20000000.0 * kf_qss[192] * ((sc[8]) * (sc[8])) / x1323 -
    330000.0 * sc[14] * exp(-3623.15999379398 * invT) +
    1153000000.0 * sc[17] * x9684 - 160000000.0 * sc[18] * x1350 +
    sc[25] * x6638 + 400000.0 * sc[37] + sc[3] * x5174 +
    19500000.0 * sc[8] * x3999 + x1041 * x1899 - x1055 * x1899 - x1056 * x1903 -
    x1057 * x1899 + x1058 * x2166 + x2165 - x297 * x3990 + x298 * x3990 +
    x3416 + x727 * x9528 +
    (-x184 * x1899) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x1899) * (x1058) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x1057 + (-x141) * (x1058)) +
    (x121 * x1899 - x183 * x1899) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[910] = refCinv * sc[1] * x186 * x3811 + x2165 - x228 * x3990 + x231 * x3990;
  J[966] = sc[10] * x5584 - 500000.0 * sc[14] * x3341 - sc[14] * x9680 +
           1153000000.0 * sc[15] * x9684 + sc[1] * x609 + 3980000.0 * sc[25] +
           sc[28] * x8055 + sc[32] * x9693 + 1000000.0 * sc[37] +
           1000000.0 * sc[45] * exp(-9057.8999844849495 * invT) +
           2000000.0 * sc[45] * exp(-8454.03998551929 * invT) + sc[5] * x6726 +
           sc[9] * x8133 - x1060 * x1899 - x1061 * x1903 - x1062 * x1899 -
           x1063 * x2166 + x1899 * x39 + x2164 + x2165 - x2663 * x457 +
           x303 * x3990 + x4594 + x728 * x9528 +
           (-x184 * x1899) *
             (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
              (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
           (x141 * x1899) * (-x1063) +
           (x113 * x1899 - x181 * x1903 - x182 * x1899) *
             (x1062 + (-x141) * (-x1063)) +
           (x121 * x1899 - x183 * x1899) *
             (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1022] = -160000000.0 * kf_qss[203] * sc[18] * x1333 -
            20000000.0 * sc[8] * x1351 - 160000000.0 * x1332 + x2165 - x4693 +
            x4709;
  J[1078] = -160000000.0 * kf_qss[41] * sc[0] * sc[18] / x1323 -
            20000000.0 * sc[8] * x1353 + x2165 + x307 * x3990 + x4594;
  J[1134] = -sc[14] * x4622 + x2165 + x308 * x3990 + x4594;
  J[1190] = 1000000.0 * sc[10] * x2474 - sc[14] * x3817 + sc[2] * x4081 + x2397;
  J[1246] = sc[0] * x2106 - sc[14] * x9651 + x1033 * x1899 - x1067 * x2166 +
            x1068 * x2166 + x2165 + x309 * x3990 + x4594 + x561 * x9528 +
            (-x184 * x1899) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x1899) * (-x1067 + x1068) +
            (x113 * x1899 - x181 * x1903 - x182 * x1899) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x121 * x1899 - x183 * x1899) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1302] = sc[0] * x122 + 1000000.0 * sc[2] + x2397 - x9717;
  J[1358] = x1070 * x2166 - x1076 * x1899 - x1079 * x1903 - x1082 * x1899 -
            x1899 * x643 + x2166 * x463 + x2397 + x8358 +
            (-x184 * x1899) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x1899) * (x1070 + x463) +
            (x113 * x1899 - x181 * x1903 - x182 * x1899) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x121 * x1899 - x183 * x1899) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1414] =
    sc[15] * x6638 + 3980000.0 * sc[17] - x1086 * x1899 - x1087 * x1903 -
    x1088 * x1899 + x1089 * x2166 - x1899 * x684 + x2397 + x751 * x9528 +
    100000000000.0 * exp(-18619.016634774602 * invT) +
    (-x184 * x1899) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x1899) * (x1089) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x1088 + (-x141) * (x1089)) +
    (x121 * x1899 - x183 * x1899) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1470] =
    -sc[14] * x9655 + 13000000.0 * sc[2] * x4151 - x1092 * x1899 +
    x1093 * x2166 + x1899 * x891 - x1903 * x975 + x2397 + x755 * x9528 +
    x759 * x9528 +
    (-x184 * x1899) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x1899) * (x1093) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x1092 + (-x141) * (x1093)) +
    (x121 * x1899 - x183 * x1899) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1526] = x2397;
  J[1582] = sc[17] * x8055 + x2165 + x310 * x3990 + x4594 + x760 * x9528;
  J[1638] = x2397 + 25000000000000.0 * exp(-22644.749961212401 * invT);
  J[1694] =
    x1095 * x1899 - x1097 * x1903 - x1098 * x1899 + x1099 * x2166 -
    x1899 * x886 + x2397 +
    (-x184 * x1899) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x1899) * (x1099) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x1098 + (-x141) * (x1099)) +
    (x121 * x1899 - x183 * x1899) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1750] =
    -x1100 * x1899 - x1104 * x2166 - x1899 * x726 + x1899 * x968 -
    x1903 * x707 + x2165 + x311 * x3990 + x4594 + x762 * x9528 - x9755 +
    (-x184 * x1899) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x1899) * (-x1104) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x726 + (-x141) * (-x1104)) +
    (x121 * x1899 - x183 * x1899) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1806] =
    sc[17] * x9693 - x1002 * x1899 + x189 * x3990 + x1899 * x564 -
    x1899 * x587 - x1899 * x612 - x1899 * x928 + x1899 * x930 + x1903 * x682 -
    x1903 * x999 + x2165 - x2166 * x585 + x2166 * x688 - x232 * x3990 +
    x764 * x9528 +
    (-x184 * x1899) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x1899) * (-x585 + x688) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x121 * x1899 - x183 * x1899) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1862] = x2397;
  J[1918] = x2397;
  J[1974] = x2397;
  J[2030] =
    -x2166 * x692 + x2397 +
    (-x184 * x1899) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x1899) * (-x692) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (0 + (-x141) * (-x692)) +
    (x121 * x1899 - x183 * x1899) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2086] = 400000.0 * sc[15] + 1000000.0 * sc[17] + x2397 - x2663 * x459 +
            x767 * x9528;
  J[2142] = x2165 + x238 * x3990 + x4594;
  J[2198] = x2397 - x2663 * x460;
  J[2254] = x2397;
  J[2310] = x2397;
  J[2366] = x2397;
  J[2422] = x2397;
  J[2478] =
    -x2166 * x710 + x2397 +
    (-x184 * x1899) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x1899) * (-x710) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (0 + (-x141) * (-x710)) +
    (x121 * x1899 - x183 * x1899) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2534] =
    1000000.0 * sc[17] * exp(-9057.8999844849495 * invT) +
    2000000.0 * sc[17] * exp(-8454.03998551929 * invT) + x1003 * x1903 +
    x103 * x2166 + x1899 * x482 + x1899 * x524 - x1899 * x7 - x1899 * x712 +
    x1899 * x927 - x1899 * x933 - x1903 * x970 - x2166 * x545 + x2397 +
    (-x184 * x1899) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x1899) * (x103 - x545) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x121 * x1899 - x183 * x1899) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2590] =
    x101 * x1903 - x126 * x2166 - x135 * x1899 + x2397 +
    (-x184 * x1899) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x1899) * (-x126) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x135 + (-x141) * (-x126)) +
    (x121 * x1899 - x183 * x1899) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2646] =
    -x107 * x1903 - x1899 * x461 + x1899 * x83 + x2166 * x481 + x2397 +
    (-x184 * x1899) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x1899) * (x481) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x461 + (-x141) * (x481)) +
    (x121 * x1899 - x183 * x1899) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2702] =
    -x130 * x1899 + x1899 * x19 - x1899 * x562 - x1903 * x566 + x2166 * x464 +
    x2397 +
    (-x184 * x1899) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x1899) * (x464) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x130 + (-x141) * (x464)) +
    (x121 * x1899 - x183 * x1899) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2758] =
    -x132 * x1899 + x1899 * x573 - x1899 * x967 - x1903 * x582 - x2166 * x586 +
    x2397 +
    (-x184 * x1899) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x1899) * (-x586) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x132 + (-x141) * (-x586)) +
    (x121 * x1899 - x183 * x1899) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2814] =
    -x104 * x1903 - x106 * x1899 + x127 * x2166 - x1899 * x50 - x1899 * x529 +
    x2397 +
    (-x184 * x1899) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x1899) * (x127) +
    (x113 * x1899 - x181 * x1903 - x182 * x1899) * (x106 + (-x141) * (x127)) +
    (x121 * x1899 - x183 * x1899) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2870] = x2397;
  J[2926] = x2397 + x9804;
  J[2982] = x2397;
  J[3038] = x2397;
  J[15] = -120000000.0 * sc[13] * x1325 + sc[13] * x1985 +
          1.112e+22 * sc[14] * x185 * x2202 * exp(x2189) -
          18100000.0 * sc[15] * x190 + 18100000.0 * sc[15] * x233 -
          72200000.0 * sc[15] + sc[20] * x2156 - x190 * x3972 + x1912 * x519 -
          x1912 * x528 - x2166 * x681 + x2166 * x734 + x233 * x3972 +
          x383 * x3977 - x3977 * x402 - x550 * x6341 - x606 * x7491 -
          x606 * x9289 + x6424 + x9810 + x9812 +
          (x184 * x1887 + x184 * x1912) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
          (-x141 * x1887) * (-x681 + x734) +
          (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
            (x557 - x604 + (-x141) * (-x681 + x734)) +
          (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[71] =
    -120000000.0 * sc[13] * x1334 + 18100000.0 * sc[15] * x248 -
    sc[15] * x2489 - 18100000.0 * sc[15] * x251 + x1912 * x521 + x1912 * x738 +
    x2166 * x770 - x2166 * x772 + x248 * x3972 - x251 * x3972 + x3977 * x403 -
    x3977 * x404 - x617 * x7491 - x617 * x9289 + x8620 + x9817 + x9818 +
    (x184 * x1887 + x184 * x1912) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x141 * x1887) * (x770 - x772) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[127] = -120000000.0 * sc[13] * x1335 + sc[13] * x4092 +
           18100000.0 * sc[15] * x253 - 18100000.0 * sc[15] * x254 -
           50000000.0 * sc[15] + sc[22] * x4148 + 13000000.0 * sc[26] * x4151 -
           x1912 * x774 + x1912 * x790 + x2166 * x801 - x2166 * x804 +
           x253 * x3972 - x254 * x3972 + x3977 * x405 - x3977 * x406 -
           x640 * x7491 - x640 * x9289 + x8620 + x9810 + x9824 +
           (x184 * x1887 + x184 * x1912) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (-x141 * x1887) * (x801 - x804) +
           (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[183] =
    -120000000.0 * sc[13] * x1336 + sc[13] * x5165 +
    18100000.0 * sc[15] * x256 - 18100000.0 * sc[15] * x258 - sc[15] * x5174 +
    x116 * x1912 - x1912 * x791 + x2166 * x817 - x2166 * x842 + x256 * x3972 -
    x258 * x3972 + x3977 * x407 + x508 * x6341 - x645 * x7491 - x645 * x9289 -
    x6459 + x9810 + x9829 + x9831 +
    (x184 * x1887 + x184 * x1912) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x141 * x1887) * (x817 - x842) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[239] =
    -120000000.0 * sc[13] * x1337 - 120000000.0 * sc[13] * x1339 +
    sc[13] * x6588 + 18100000.0 * sc[15] * x260 - 18100000.0 * sc[15] * x263 -
    sc[15] * x4248 + 1000000.0 * sc[23] + 1000000.0 * sc[26] - x1912 * x811 +
    x1912 * x823 + x2166 * x829 - x2166 * x872 + x260 * x3972 - x263 * x3972 +
    x3977 * x409 - x3977 * x410 + x531 * x6341 - x6340 * x769 / x773 - x6459 -
    x647 * x7491 - x647 * x9289 - x658 * x7491 - x658 * x9289 + x9810 + x9836 +
    (x184 * x1887 + x184 * x1912) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x141 * x1887) * (x829 - x872) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[295] =
    -120000000.0 * sc[13] * x1340 + 18100000.0 * sc[15] * x265 -
    18100000.0 * sc[15] * x267 - sc[15] * x6722 + x1912 * x826 + x1912 * x827 +
    x2166 * x895 - x2166 * x897 + 5.7194449583718799e+38 * x2192 * x2193 -
    5.7194449583718799e+38 * x2192 * x2199 + 5.56e+22 * x2202 * x2378 -
    5.56e+22 * x2202 * x2386 - x2381 * (10.0 * x2194 + 1.4 * x2374) +
    x2388 * (10.0 * x2194 + 1.4 * x2374) + x265 * x3972 - x267 * x3972 -
    x3977 * x413 + x4334 - x672 * x7491 - x672 * x9289 + x8620 + x9841 +
    (x184 * x1887 + x184 * x1912) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x141 * x1887) * (x895 - x897) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[351] = -120000000.0 * sc[13] * x1341 - 120000000.0 * sc[13] * x1342 +
           18100000.0 * sc[15] * x269 - 18100000.0 * sc[15] * x270 -
           sc[15] * x7578 + x2166 * x909 + x2166 * x913 + x269 * x3972 -
           x270 * x3972 + x3977 * x416 - x680 * x7491 - x680 * x9289 + x8620 +
           x9817 + x9829 +
           (x184 * x1887 + x184 * x1912) *
             (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
              (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
           (-x141 * x1887) * (x909 + x913) +
           (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
             (0 + (-x141) * (x909 + x913)) +
           (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
             (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[407] = -120000000.0 * sc[13] * x1343 - 18100000.0 * sc[15] * x188 +
           18100000.0 * sc[15] * x272 - x188 * x3972 +
           3.4316669750231299e+38 * x2192 * x2193 -
           3.4316669750231299e+38 * x2192 * x2199 + 3.336e+22 * x2202 * x2378 -
           3.336e+22 * x2202 * x2386 - x2381 * (6.0 * x2194 + 0.84 * x2374) +
           x2388 * (6.0 * x2194 + 0.84 * x2374) + x272 * x3972 + x4334 + x8620 +
           x9829;
  J[463] = sc[13] * x8052 - 18100000.0 * sc[15] * x274 +
           18100000.0 * sc[15] * x275 - x1887 * x844 + x1887 * x915 +
           x1887 * x920 + x1892 * x919 - x1912 * x844 - x2166 * x922 -
           x274 * x3972 + x275 * x3972 + 108920000000.0 * x3081 + x375 * x3977 -
           x3977 * x419 - x572 * x6341 + x6424 - x689 * x7491 - x689 * x9289 -
           x693 * x7491 - x693 * x9289 + x8092 + x9810 +
           (x184 * x1887 + x184 * x1912) *
             (x915 + (x182) * (x920 + (-x141) * (-x922)) +
              (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
           (-x141 * x1887) * (-x922) +
           (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
             (x920 + (-x141) * (-x922)) +
           (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
             (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[519] = -120000000.0 * sc[13] * x1346 + sc[14] * x8153 +
           18100000.0 * sc[15] * x278 - 18100000.0 * sc[15] * x279 -
           sc[15] * x8127 + x1912 * x838 + x1912 * x859 + x2166 * x935 -
           x2166 * x937 + x278 * x3972 - x279 * x3972 + x3977 * x420 -
           x3977 * x421 + x628 * x7491 + x628 * x9289 + x8620 + x9810 + x9856 +
           (x184 * x1887 + x184 * x1912) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (-x141 * x1887) * (x935 - x937) +
           (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[575] =
    sc[13] * x8833 + sc[14] * x5581 + 18100000.0 * sc[15] * x281 -
    18100000.0 * sc[15] * x282 - sc[15] * x5577 - 32000000.0 * sc[15] +
    x1912 * x870 - x1912 * x877 + x2166 * x465 - x2166 * x977 + x281 * x3972 -
    x282 * x3972 + x3977 * x422 - x3977 * x423 - x6341 * x97 + x6424 -
    x657 * x7491 - x657 * x9289 - x706 * x7491 - x706 * x9289 + x9810 + x9861 +
    (x184 * x1887 + x184 * x1912) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x141 * x1887) * (x465 - x977) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[631] =
    18100000.0 * sc[15] * x284 - 18100000.0 * sc[15] * x286 - sc[15] * x8863 +
    x1001 * x2166 - x1005 * x2166 + x1912 * x899 + x1912 * x924 + x284 * x3972 -
    x286 * x3972 - x3977 * x424 + x4334 - x717 * x7491 - x717 * x9289 + x8620 +
    x9810 + x9868 +
    (x184 * x1887 + x184 * x1912) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x141 * x1887) * (x1001 - x1005) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[687] = -120000000.0 * sc[13] * x1347 + 18100000.0 * sc[15] * x288 -
           18100000.0 * sc[15] * x289 + x288 * x3972 - x289 * x3972 + x4334 -
           x485 * x6341 + x6424 + x9810 + x9829;
  J[743] =
    -120000000.0 * kf_qss[191] * sc[13] * x1333 -
    kf_qss[80] * sc[13] * x610 * x9288 + sc[0] * x1985 + sc[10] * x8833 -
    18100000.0 * sc[15] * x293 + sc[21] * x9394 + sc[2] * x4092 +
    sc[31] * x8833 + sc[37] * x9391 + sc[3] * x5165 + sc[4] * x6588 +
    sc[8] * x8052 - x1027 * x2166 - x131 * x9288 - 120000000.0 * x1332 +
    x1912 * x925 + x1912 * x938 + x2166 * x553 - x293 * x3972 + x3302 -
    x3977 * x425 + x4334 - x724 * x7491 + x8620 + x9401 + x9810 + x9874 +
    x9877 +
    (x184 * x1887 + x184 * x1912) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x141 * x1887) * (-x1027 + x553) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[799] =
    1.112e+22 * sc[0] * x185 * x2202 * exp(x2189) + sc[10] * x5581 -
    120000000.0 * sc[13] * x1349 +
    964000000.0 * sc[14] * exp(-35995.0881050116 * invT) -
    18100000.0 * sc[15] * x295 -
    330000.0 * sc[15] * exp(-3623.15999379398 * invT) + sc[22] * x9651 +
    sc[26] * x9655 + sc[9] * x8153 + x1039 * x2166 - x1047 * x2166 +
    x1912 * x963 + x1912 * x966 - x295 * x3972 - x725 * x7491 - x725 * x9289 +
    x9884 + x9885 +
    (x184 * x1887 + x184 * x1912) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x141 * x1887) * (x1039 - x1047) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[855] = -72200000.0 * sc[0] - sc[10] * x5577 - 32000000.0 * sc[10] -
           sc[11] * x8863 - 120000000.0 * sc[13] * x1350 -
           330000.0 * sc[14] * exp(-3623.15999379398 * invT) +
           18100000.0 * sc[15] * x297 - 18100000.0 * sc[15] * x298 -
           576500000.0 * sc[17] * x9684 - 9000000.0 * sc[17] - sc[18] * x7086 -
           sc[18] * x9900 - sc[1] * x2489 - sc[20] * x7102 -
           100000.0 * sc[22] * x1938 - sc[25] * x6638 - 3980000.0 * sc[25] -
           1000000.0 * sc[28] * x2130 - 50000000.0 * sc[2] -
           100000.0 * sc[30] * x9892 - sc[32] * x9429 -
           4000000.0 * sc[37] * exp(299.91713281961302 * invT) -
           800000.0 * sc[37] - sc[3] * x5174 - sc[4] * x4248 - sc[5] * x6722 -
           sc[6] * x7578 - 19500000.0 * sc[8] * x3999 - sc[8] * x8087 -
           sc[9] * x8127 - x1041 * x1912 + x1058 * x2166 - x1264 * x6341 -
           x197 * x3971 - 18100000.0 * x197 + x297 * x3972 - x298 * x3972 -
           x3416 + 2350000.0 * x370 * exp(-19197.7158004501 * invT) -
           x3977 * x426 + x4334 + x6424 - x727 * x7491 - x727 * x9289 + x8037 +
           x9810 + x9907 +
           (x184 * x1887 + x184 * x1912) *
             (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
              (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
           (-x141 * x1887) * (x1058) +
           (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
             (x1057 + (-x141) * (x1058)) +
           (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
             (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[911] = 18100000.0 * sc[15] * x228 - 18100000.0 * sc[15] * x231 +
           x228 * x3972 - x231 * x3972 + x4334 + x8620 + x9810 + x9829;
  J[967] = -18100000.0 * sc[15] * x303 - 576500000.0 * sc[15] * x9684 -
           9000000.0 * sc[15] + x1060 * x1887 + x1061 * x1892 + x1062 * x1887 -
           x1063 * x2166 - x1887 * x39 - x1912 * x39 - x303 * x3972 -
           x728 * x7491 - x728 * x9289 + x9884 +
           (x184 * x1887 + x184 * x1912) *
             (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
              (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
           (-x141 * x1887) * (-x1063) +
           (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
             (x1062 + (-x141) * (-x1063)) +
           (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
             (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1023] = -120000000.0 * sc[13] * x1351 + 18100000.0 * sc[15] * x305 -
            18100000.0 * sc[15] * x306 - sc[15] * x7086 - sc[15] * x9900 +
            x305 * x3972 - x306 * x3972 + x3977 * x427 + x8620 + x9810 + x9829;
  J[1079] = -120000000.0 * sc[13] * x1353 - 18100000.0 * sc[15] * x307 -
            x307 * x3972 + x9884;
  J[1135] = sc[0] * x2156 - 18100000.0 * sc[15] * x308 - sc[15] * x7102 -
            x308 * x3972 + x3977 * x428 - x569 * x6341 + x6424 + x9810 + x9829 +
            x9874;
  J[1191] = sc[13] * x9394 + x9924;
  J[1247] = sc[14] * x9651 - 100000.0 * sc[15] * x1938 -
            18100000.0 * sc[15] * x309 + sc[2] * x4148 - x1033 * x1887 -
            x1067 * x2166 + x1068 * x2166 - x309 * x3972 - x561 * x7491 -
            x561 * x9289 + x9884 +
            (x184 * x1887 + x184 * x1912) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (-x141 * x1887) * (-x1067 + x1068) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1303] = 1000000.0 * sc[4] + x9453 + x9924;
  J[1359] = x1070 * x2166 + x1076 * x1887 + x1079 * x1892 + x1082 * x1887 +
            x1887 * x643 + x1912 * x643 + x2166 * x463 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (-x141 * x1887) * (x1070 + x463) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1415] = -sc[15] * x6638 - 3980000.0 * sc[15] + x1089 * x2166 +
            x1912 * x684 - x7491 * x751 - x751 * x9289 + x9924 + x9934 +
            (x184 * x1887 + x184 * x1912) *
              (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
               (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
            (-x141 * x1887) * (x1089) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x1088 + (-x141) * (x1089)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1471] = -kf_qss[304] * x9466 / (x47 * x95) + sc[14] * x9655 +
            13000000.0 * sc[2] * x4151 + 1000000.0 * sc[4] + x1092 * x1887 +
            x1093 * x2166 + x1892 * x975 + x3977 * x429 - x7491 * x755 -
            x7491 * x759 - x755 * x9289 - x759 * x9289 + x9923 + x9935 +
            (x184 * x1887 + x184 * x1912) *
              (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
               (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
            (-x141 * x1887) * (x1093) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x1092 + (-x141) * (x1093)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1527] = x9924;
  J[1583] = -1000000.0 * sc[15] * x2130 - 18100000.0 * sc[15] * x310 -
            x310 * x3972 - x7491 * x760 - x760 * x9289 + x9884 +
            9.85e+18 * exp(-41117.833762903603 * invT - 0.73 * tc[0]);
  J[1639] = x9924;
  J[1695] = -100000.0 * sc[15] * x9892 - x1095 * x1912 + x1097 * x1892 +
            x1098 * x1887 + x1099 * x2166 - x112 * x9475 + x3977 * x430 +
            x54 * x9475 / x95 + x9923 + x9941 +
            (x184 * x1887 + x184 * x1912) *
              (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
               (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
            (-x141 * x1887) * (x1099) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x1098 + (-x141) * (x1099)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1751] = sc[13] * x8833 - 18100000.0 * sc[15] * x311 - sc[15] * x6919 +
            x1100 * x1887 - x1104 * x2166 + x1887 * x726 - x1887 * x968 +
            x1892 * x707 - x1912 * x968 - x311 * x3972 + x3977 * x431 -
            x7491 * x762 - x762 * x9289 + x8620 + x9810 + x9829 + x9874 +
            (x184 * x1887 + x184 * x1912) *
              (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
               (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
            (-x141 * x1887) * (-x1104) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x726 + (-x141) * (-x1104)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1807] =
    -18100000.0 * sc[15] * x189 + 18100000.0 * sc[15] * x232 - sc[15] * x9429 +
    x1002 * x1912 - x189 * x3972 + x1912 * x587 - x2166 * x585 + x2166 * x688 +
    x232 * x3972 - x367 * x3977 + x4334 - x7491 * x764 - x764 * x9289 + x8620 +
    x9810 + x9954 +
    (x184 * x1887 + x184 * x1912) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x141 * x1887) * (-x585 + x688) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1863] = x9924;
  J[1919] = x9924;
  J[1975] = x9924;
  J[2031] = -x2166 * x692 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (-x141 * x1887) * (-x692) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (0 + (-x141) * (-x692)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2087] = sc[13] * x9391 -
            4000000.0 * sc[15] * exp(299.91713281961302 * invT) -
            800000.0 * sc[15] - x7491 * x767 - x767 * x9289 + x9924;
  J[2143] = -18100000.0 * sc[15] * x238 - x238 * x3972 + x9884;
  J[2199] = x9924;
  J[2255] = x9924;
  J[2311] = x9924 + 15700000000000.0 * exp(-15096.4999741416 * invT);
  J[2367] = x9924;
  J[2423] = x9924;
  J[2479] = -x2166 * x710 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (-x141 * x1887) * (-x710) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (0 + (-x141) * (-x710)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2535] =
    x103 * x2166 - x1912 * x524 + x1912 * x7 - x2166 * x545 + x9924 + x9961 +
    (x184 * x1887 + x184 * x1912) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x141 * x1887) * (x103 - x545) +
    (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2591] = -x101 * x1892 - x126 * x2166 + x135 * x1887 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (0 + (x182) * (x135 + (-x141) * (-x126)) +
               (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
            (-x141 * x1887) * (-x126) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x135 + (-x141) * (-x126)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2647] = x107 * x1892 + x1887 * x461 - x1887 * x83 + x2166 * x481 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (-x83 + (x182) * (x461 + (-x141) * (x481)) +
               (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
            (-x141 * x1887) * (x481) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x461 + (-x141) * (x481)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2703] = x130 * x1887 - x1887 * x19 + x1887 * x562 + x1892 * x566 -
            x19 * x1912 + x2166 * x464 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (x562 + (x182) * (x130 + (-x141) * (x464)) +
               (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
            (-x141 * x1887) * (x464) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x130 + (-x141) * (x464)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2759] = x132 * x1887 - x1887 * x573 + x1887 * x967 + x1892 * x582 -
            x1912 * x573 - x2166 * x586 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (x967 + (x182) * (x132 + (-x141) * (-x586)) +
               (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
            (-x141 * x1887) * (-x586) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x132 + (-x141) * (-x586)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2815] = x104 * x1892 + x106 * x1887 + x127 * x2166 + x1887 * x50 +
            x1887 * x529 + x1912 * x529 + x9924 +
            (x184 * x1887 + x184 * x1912) *
              (x50 + (x182) * (x106 + (-x141) * (x127)) +
               (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
            (-x141 * x1887) * (x127) +
            (-x113 * x1887 - x113 * x1912 + x181 * x1892 + x182 * x1887) *
              (x106 + (-x141) * (x127)) +
            (-x121 * x1887 - x121 * x1912 + x183 * x1887) *
              (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2871] = x9924;
  J[2927] = x9924;
  J[2983] = x382 * x3977 + x9923;
  J[3039] = x9924;
  J[16] = -sc[16] * x185 * x1981 + 20000000.0 * sc[17] * x2108 +
          sc[18] * x2121 + sc[19] * x2071 + sc[21] * x91 - sc[4] * x1 -
          x190 * x6344 + x233 * x6344 + x2372 +
          (-50000000.0 * sc[4] * x5) * (x190 - x233);
  J[72] = -refCinv * sc[16] * x186 * x3811 - sc[16] * x2496 +
          50000000.0 * sc[4] * x1491 + x248 * x6344 - x251 * x6344 + x2625 +
          x3821 + (-50000000.0 * sc[4] * x5) * (-x248 + x251);
  J[128] = -sc[16] * x2679 + x2372 + x253 * x6344 - x254 * x6344 +
           (-50000000.0 * sc[4] * x5) * (-x253 + x254);
  J[184] = -sc[16] * x5155 + sc[17] * x5277 + sc[37] * x5247 +
           50000000.0 * sc[4] * x1492 + x2372 + x256 * x6344 - x258 * x6344 +
           (-50000000.0 * sc[4] * x5) * (-x256 + x258);
  J[240] = -sc[16] * x2780 + sc[19] * x5308 + 50000000.0 * sc[4] * x1493 +
           x2372 + x260 * x6344 - x263 * x6344 + x2746 +
           (-50000000.0 * sc[4] * x5) * (-x260 + x263);
  J[296] = 50000000.0 * sc[4] * x245 + x265 * x6344 - x267 * x6344 + x2896 +
           x3821 + (-50000000.0 * sc[4] * x5) * (-x265 + x267);
  J[352] = x2625 + x269 * x6344 - x270 * x6344 + x3821 +
           (-50000000.0 * sc[4] * x5) * (-x269 + x270);
  J[408] = -x188 * x6344 + x1974 + x272 * x6344 + x3821 +
           (-50000000.0 * sc[4] * x5) * (x188 - x272);
  J[464] = -sc[16] * x3074 - sc[16] * x8071 + 392000.0 * sc[17] + x2372 -
           x274 * x6344 + x275 * x6344 +
           (-50000000.0 * sc[4] * x5) * (x274 - x275);
  J[520] = x2372 + x278 * x6344 - x279 * x6344 - x8132 +
           (-50000000.0 * sc[4] * x5) * (-x278 + x279);
  J[576] = -sc[16] * x5638 + x2372 + x281 * x6344 - x282 * x6344 +
           (-50000000.0 * sc[4] * x5) * (-x281 + x282);
  J[632] = x2372 + x284 * x6344 - x286 * x6344 +
           (-50000000.0 * sc[4] * x5) * (-x284 + x286);
  J[688] = x2372 + x288 * x6344 - x289 * x6344 +
           (-50000000.0 * sc[4] * x5) * (-x288 + x289);
  J[744] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[800] = x186 * x3819 - x295 * x6344 + x9972 +
           (-50000000.0 * sc[4] * x5) * (-x290 + x295);
  J[856] = x2372 + x297 * x6344 - x298 * x6344 +
           (-50000000.0 * sc[4] * x5) * (-x297 + x298);
  J[912] = -refCinv * sc[1] * x186 * x3811 - sc[0] * x185 * x1981 -
           sc[10] * x5638 - sc[1] * x2496 - sc[2] * x2679 - sc[3] * x5155 -
           50000000.0 * sc[4] * x249 - sc[4] * x2780 - sc[8] * x3074 -
           sc[8] * x8071 - x197 * x6343 + x228 * x6344 - x231 * x6344 + x2372 -
           x8297 + (-50000000.0 * sc[4] * x5) * (-x228 + x231);
  J[968] = 20000000.0 * sc[0] * x2108 + sc[3] * x5277 + 392000.0 * sc[8] +
           x2363 - x303 * x6344 + x9972 +
           (-50000000.0 * sc[4] * x5) * (-x290 + x303);
  J[1024] = sc[0] * x2121 + x2372 + x305 * x6344 - x306 * x6344 +
            (-50000000.0 * sc[4] * x5) * (-x305 + x306);
  J[1080] = sc[0] * x2071 + sc[4] * x5308 - x307 * x6344 + x9972 +
            (-50000000.0 * sc[4] * x5) * (-x290 + x307);
  J[1136] = -x308 * x6344 + x9972 + (-50000000.0 * sc[4] * x5) * (-x290 + x308);
  J[1192] = sc[0] * x91 + x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1248] = -x309 * x6344 + x9972 + (-50000000.0 * sc[4] * x5) * (-x290 + x309);
  J[1304] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1360] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1416] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1472] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1528] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1584] = -x310 * x6344 + x9972 + (-50000000.0 * sc[4] * x5) * (-x290 + x310);
  J[1640] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1696] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1752] = -x311 * x6344 + x9972 + (-50000000.0 * sc[4] * x5) * (-x290 + x311);
  J[1808] = -x189 * x6344 + x232 * x6344 + x2372 +
            (-50000000.0 * sc[4] * x5) * (x189 - x232);
  J[1864] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1920] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[1976] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2032] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2088] = sc[3] * x5247 + x8450 + x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2144] = -50000000.0 * sc[4] * x239 - x238 * x6344 + x9972 +
            (-50000000.0 * sc[4] * x5) * (x238 - x290);
  J[2200] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2256] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2312] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2368] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2424] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2480] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2536] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2592] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2648] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2704] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2760] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2816] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2872] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2928] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[2984] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[3040] = x9973 + (-50000000.0 * sc[4] * x5) * (x294);
  J[17] = sc[14] * x2206 + sc[16] * x185 * x1981 - 20000000.0 * sc[17] * x2108 +
          sc[23] * x122 - x1270 * x9179 - x186 * x2178 + x1963 + x2361 + x4998 -
          x606 * x9528 +
          (x184 * x1899) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
          (-x141 * x1899) * (-x681 + x734) +
          (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
            (x557 - x604 + (-x141) * (-x681 + x734)) +
          (-x121 * x1899 + x183 * x1899) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[73] = sc[16] * x2496 - sc[17] * x609 + x1969 - x248 * x4995 + x251 * x4995 -
          x617 * x9528 + x9979 +
          (x184 * x1899) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
          (-x141 * x1899) * (x770 - x772) +
          (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
            (x758 - x771 + (-x141) * (x770 - x772)) +
          (-x121 * x1899 + x183 * x1899) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[129] = x1963 + x5124 - x640 * x9528 + x9981 +
           (x184 * x1899) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (-x141 * x1899) * (x801 - x804) +
           (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (-x121 * x1899 + x183 * x1899) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[185] = -kf_qss[122] * x1276 * x9179 + x1963 + x5178 + x5282 - x645 * x9528 +
           x9983 +
           (x184 * x1899) *
             (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
              (x183) * (-x797 + x800 +
                        (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
           (-x141 * x1899) * (x817 - x842) +
           (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
             (x821 - x841 + (-x141) * (x817 - x842)) +
           (-x121 * x1899 + x183 * x1899) *
             (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[241] = -kf_qss[125] * x1276 * x9179 - 1.0e-42 * sc[12] * sc[17] +
           sc[14] * x6686 + 1000000.0 * sc[23] + x1963 - x260 * x4995 +
           x263 * x4995 - x647 * x9528 - x658 * x9528 + x7946 + x9986 +
           (x184 * x1899) *
             (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
              (x183) * (-x813 + x839 +
                        (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
           (-x141 * x1899) * (x829 - x872) +
           (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
             (-x468 + x669 + (-x141) * (x829 - x872)) +
           (-x121 * x1899 + x183 * x1899) *
             (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[297] = -sc[17] * x6726 + 8.16803215434084e+51 * x1967 * x2344 -
           8.16803215434084e+51 * x1967 * x2367 + 1.127e+29 * x1979 * x2349 -
           1.127e+29 * x1979 * x2622 + x2168 + x2365 * x2893 - x2370 * x2893 -
           x265 * x4995 + x267 * x4995 - x672 * x9528 + x9988 +
           (x184 * x1899) *
             (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
              (x183) * (x833 - x840 +
                        (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
           (-x141 * x1899) * (x895 - x897) +
           (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
             (x869 - x896 + (-x141) * (x895 - x897)) +
           (-x121 * x1899 + x183 * x1899) *
             (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[353] =
    -sc[17] * x7578 + x1969 - x269 * x4995 + x270 * x4995 - x680 * x9528 +
    (x184 * x1899) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x141 * x1899) * (x909 + x913) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (0 + (-x141) * (x909 + x913)) +
    (-x121 * x1899 + x183 * x1899) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[409] = x188 * x4995 + 4.9008192926044998e+51 * x1967 * x2344 -
           4.9008192926044998e+51 * x1967 * x2367 + x1971 * x2365 -
           x1971 * x2370 + 6.762e+28 * x1979 * x2349 -
           6.762e+28 * x1979 * x2622 + x2168 - x272 * x4995;
  J[465] =
    sc[14] * x8095 - sc[17] * x8075 - 392000.0 * sc[17] -
    794000000000000.0 * x1293 * x3946 - x1899 * x844 + x1899 * x915 +
    x1899 * x920 + x1903 * x919 + x1963 + x274 * x4995 - x275 * x4995 -
    x689 * x9528 - x693 * x9528 +
    (x184 * x1899) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                      (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x141 * x1899) * (-x922) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (x920 + (-x141) * (-x922)) +
    (-x121 * x1899 + x183 * x1899) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[521] = -sc[17] * x8133 + x1963 - x278 * x4995 + x279 * x4995 +
           x628 * x9528 + x8132 + x9992 +
           (x184 * x1899) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (-x141 * x1899) * (x935 - x937) +
           (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (-x121 * x1899 + x183 * x1899) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[577] = sc[16] * x5638 - sc[17] * x5584 + 10.0e-25 * sc[37] - x1279 * x9179 -
           794000000000000.0 * x1295 * x3946 + x1963 - x281 * x4995 +
           x282 * x4995 - x657 * x9528 - x706 * x9528 + x9994 +
           (x184 * x1899) *
             (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
              (x183) * (-x863 + x893 +
                        (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
           (-x141 * x1899) * (x465 - x977) +
           (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
             (-x546 + x926 + (-x141) * (x465 - x977)) +
           (-x121 * x1899 + x183 * x1899) *
             (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[633] =
    x1963 - x284 * x4995 + x286 * x4995 - x717 * x9528 + x9996 +
    (x184 * x1899) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x141 * x1899) * (x1001 - x1005) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x121 * x1899 + x183 * x1899) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[689] =
    x1963 + x197 * x4994 - x288 * x4995 + x289 * x4995 - x3958 * x454 + x9243;
  J[745] =
    -x724 * x9528 + x9998 + x9999 +
    (x184 * x1899) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x141 * x1899) * (-x1027 + x553) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x121 * x1899 + x183 * x1899) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[801] =
    -kf_qss[100] * ((sc[2]) * (sc[2])) * x3957 / x443 -
    kf_qss[86] * sc[14] * x610 * x9527 + sc[0] * x2206 +
    964000000.0 * sc[14] * exp(-35995.0881050116 * invT) -
    500000.0 * sc[17] * x3341 - sc[17] * x9680 + sc[21] * x3817 +
    sc[4] * x6686 + sc[8] * x8095 + x10002 - x131 * x9527 + x186 * x2315 +
    x1963 + x295 * x4995 + x3809 + x5778 + x5819 + x9659 +
    (x184 * x1899) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x141 * x1899) * (x1039 - x1047) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x121 * x1899 + x183 * x1899) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[857] =
    -576500000.0 * sc[17] * x9684 - 9000000.0 * sc[17] - x1041 * x1899 +
    x1055 * x1899 + x1056 * x1903 + x1057 * x1899 + x1963 - x297 * x4995 +
    x298 * x4995 - x727 * x9528 +
    (x184 * x1899) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                      (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x141 * x1899) * (x1058) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1057 + (-x141) * (x1058)) +
    (-x121 * x1899 + x183 * x1899) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[913] = sc[0] * x185 * x1981 + sc[10] * x5638 + sc[1] * x2496 + x1963 -
           x228 * x4995 + x231 * x4995 + x8297;
  J[969] =
    -20000000.0 * sc[0] * x2108 - sc[10] * x5584 - 1.0e-42 * sc[12] * sc[4] -
    150000.0 * sc[12] * exp(-5334.0966575300299 * invT) -
    500000.0 * sc[14] * x3341 - sc[14] * x9680 - 576500000.0 * sc[15] * x9684 -
    9000000.0 * sc[15] - 50400000.0 * sc[17] - sc[1] * x609 - sc[20] * x7131 -
    sc[20] * x8066 - 3980000.0 * sc[25] - sc[32] * x9693 - 1000000.0 * sc[37] -
    sc[5] * x6726 - sc[6] * x7578 - sc[8] * x8075 - 392000.0 * sc[8] -
    sc[9] * x8133 + x10007 + x10010 - x1282 * x9179 -
    794000000000000.0 * x1297 * x3946 + x1963 - x2164 - x2363 + x5778 + x5930 -
    x728 * x9528 +
    (x184 * x1899) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x141 * x1899) * (-x1063) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1062 + (-x141) * (-x1063)) +
    (-x121 * x1899 + x183 * x1899) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1025] = x1963 - x305 * x4995 + x306 * x4995 - x3958 * x458;
  J[1081] = x1963 + x307 * x4995 + x5778;
  J[1137] = -sc[17] * x7131 - sc[17] * x8066 -
            794000000000000.0 * x1298 * x3946 + x1963 + x308 * x4995 + x5778;
  J[1193] = sc[14] * x3817 + x9998;
  J[1249] = -x1033 * x1899 + x1963 + x309 * x4995 - x561 * x9528 + x5778 +
            x8349 +
            (x184 * x1899) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (-x141 * x1899) * (-x1067 + x1068) +
            (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (-x121 * x1899 + x183 * x1899) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1305] = sc[0] * x122 + 1000000.0 * sc[4] + x9717 + x9998 +
            8.054e+19 * exp(-49390.715748733201 * invT - tc[0]);
  J[1361] = x1076 * x1899 + x1079 * x1903 + x1082 * x1899 + x1899 * x643 +
            x9998 +
            (x184 * x1899) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (-x141 * x1899) * (x1070 + x463) +
            (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (-x121 * x1899 + x183 * x1899) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1417] =
    -3980000.0 * sc[17] + x1086 * x1899 + x1087 * x1903 + x1088 * x1899 -
    794000000000000.0 * x1299 * x3946 + x1899 * x684 - x751 * x9528 + x9998 +
    100000000000.0 * exp(-18619.016634774602 * invT) +
    (x184 * x1899) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                      (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x141 * x1899) * (x1089) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1088 + (-x141) * (x1089)) +
    (-x121 * x1899 + x183 * x1899) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1473] =
    x1092 * x1899 - x1899 * x891 + x1903 * x975 - x755 * x9528 - x759 * x9528 +
    x9935 + x9998 +
    (x184 * x1899) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                      (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x141 * x1899) * (x1093) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1092 + (-x141) * (x1093)) +
    (-x121 * x1899 + x183 * x1899) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1529] = x9998;
  J[1585] = -sc[17] * x8055 + x1963 + x310 * x4995 + x5778 - x760 * x9528;
  J[1641] = x9998;
  J[1697] =
    -x1095 * x1899 + x1097 * x1903 + x1098 * x1899 + x1899 * x886 + x9998 +
    (x184 * x1899) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                      (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x141 * x1899) * (x1099) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x1098 + (-x141) * (x1099)) +
    (-x121 * x1899 + x183 * x1899) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1753] =
    x1100 * x1899 + x1899 * x726 - x1899 * x968 + x1903 * x707 + x1963 +
    x311 * x4995 + x5778 - x762 * x9528 + x9755 +
    (x184 * x1899) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                      (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x141 * x1899) * (-x1104) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (x726 + (-x141) * (-x1104)) +
    (-x121 * x1899 + x183 * x1899) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1809] =
    -sc[17] * x9693 + x10027 + x189 * x4995 + x1963 - x232 * x4995 -
    x764 * x9528 +
    (x184 * x1899) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x141 * x1899) * (-x585 + x688) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x121 * x1899 + x183 * x1899) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1865] = x7748 + x9998;
  J[1921] = -x1283 * x9179 - 794000000000000.0 * x1300 * x3946 + x9998;
  J[1977] = x9998;
  J[2033] =
    x9998 +
    (x184 * x1899) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-x141 * x1899) * (-x692) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (0 + (-x141) * (-x692)) +
    (-x121 * x1899 + x183 * x1899) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2089] = 10.0e-25 * sc[10] - 1000000.0 * sc[17] - x1284 * x9179 -
            x3958 * x459 - x767 * x9528 + x9998;
  J[2145] = x1963 + x238 * x4995 + x5778;
  J[2201] = -x3958 * x460 + x9998;
  J[2257] = x9998;
  J[2313] = x9998;
  J[2369] = x9998;
  J[2425] = x9998;
  J[2481] =
    x9998 +
    (x184 * x1899) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-x141 * x1899) * (-x710) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (0 + (-x141) * (-x710)) +
    (-x121 * x1899 + x183 * x1899) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2537] =
    x10030 + x9998 +
    (x184 * x1899) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x141 * x1899) * (x103 - x545) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x121 * x1899 + x183 * x1899) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2593] =
    -x101 * x1903 + x135 * x1899 + x9998 +
    (x184 * x1899) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                      (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x141 * x1899) * (-x126) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (x135 + (-x141) * (-x126)) +
    (-x121 * x1899 + x183 * x1899) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2649] =
    x107 * x1903 + x1899 * x461 - x1899 * x83 + x9998 +
    (x184 * x1899) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                      (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x141 * x1899) * (x481) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (x461 + (-x141) * (x481)) +
    (-x121 * x1899 + x183 * x1899) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2705] =
    x130 * x1899 - x1899 * x19 + x1899 * x562 + x1903 * x566 + x9998 +
    (x184 * x1899) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                      (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x141 * x1899) * (x464) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (x130 + (-x141) * (x464)) +
    (-x121 * x1899 + x183 * x1899) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2761] =
    x132 * x1899 - x1899 * x573 + x1899 * x967 + x1903 * x582 + x9998 +
    (x184 * x1899) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                      (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x141 * x1899) * (-x586) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (x132 + (-x141) * (-x586)) +
    (-x121 * x1899 + x183 * x1899) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2817] =
    x104 * x1903 + x106 * x1899 + x1899 * x50 + x1899 * x529 + x9998 +
    (x184 * x1899) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                      (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x141 * x1899) * (x127) +
    (-x113 * x1899 + x181 * x1903 + x182 * x1899) * (x106 + (-x141) * (x127)) +
    (-x121 * x1899 + x183 * x1899) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2873] = x9998;
  J[2929] = x9998;
  J[2985] = x9998;
  J[3041] = x9998;
  J[18] = -20000000.0 * sc[0] * x383 + 20000000.0 * sc[0] * x402 +
          160000000.0 * sc[18] * x1325 - 20000000.0 * sc[2] * x383 +
          20000000.0 * sc[2] * x402 - 50000000.0 * sc[8] * x383 +
          50000000.0 * sc[8] * x402 - x190 * x4983 + x2133 + x233 * x4983 -
          20000000.0 * x370;
  J[74] = -20000000.0 * sc[0] * x403 + 20000000.0 * sc[0] * x404 +
          160000000.0 * sc[18] * x1334 - sc[18] * x2507 -
          20000000.0 * sc[2] * x403 + 20000000.0 * sc[2] * x404 -
          50000000.0 * sc[8] * x403 + 50000000.0 * sc[8] * x404 + x248 * x4983 +
          x2488 - x251 * x4983;
  J[130] = -20000000.0 * sc[0] * x405 + 20000000.0 * sc[0] * x406 +
           160000000.0 * sc[18] * x1335 - 10000000.0 * sc[18] * x2130 +
           sc[22] * x2686 + 1000000.0 * sc[23] - 20000000.0 * sc[2] * x405 +
           20000000.0 * sc[2] * x406 - 50000000.0 * sc[8] * x405 +
           50000000.0 * sc[8] * x406 - x2124 * x449 - x2124 * x451 +
           x253 * x4983 - x254 * x4983 - 20000000.0 * x370;
  J[186] = -kf_qss[165] * x2124 * x444 - 20000000.0 * sc[0] * x407 +
           160000000.0 * sc[18] * x1336 - 20000000.0 * sc[2] * x407 +
           sc[38] * x5242 - 50000000.0 * sc[8] * x407 - x2124 * x453 +
           x256 * x4983 - x258 * x4983 + x2723 + x4222 + x7924;
  J[242] = -20000000.0 * sc[0] * x409 + 20000000.0 * sc[0] * x410 +
           sc[16] * x2780 + 160000000.0 * sc[18] * x1337 +
           160000000.0 * sc[18] * x1339 + sc[19] * x4246 + 1000000.0 * sc[23] -
           50000000.0 * sc[8] * x409 + 50000000.0 * sc[8] * x410 +
           x260 * x4983 - x263 * x4983 + x6657;
  J[298] = 20000000.0 * sc[0] * x413 + 160000000.0 * sc[18] * x1340 +
           sc[19] * x6749 + 20000000.0 * sc[2] * x413 +
           50000000.0 * sc[8] * x413 + x265 * x4983 - x267 * x4983 + x3875 +
           x6748 + x8510;
  J[354] = -20000000.0 * sc[0] * x416 + sc[14] * x7591 +
           160000000.0 * sc[18] * x1341 + 160000000.0 * sc[18] * x1342 -
           20000000.0 * sc[2] * x416 + sc[8] * x2959 -
           50000000.0 * sc[8] * x416 + x269 * x4983 - x270 * x4983 + x2723 +
           x4222 + x7924;
  J[410] = 160000000.0 * sc[18] * x1343 + x10036 - x188 * x4983 + x272 * x4983;
  J[466] = -10.0e-13 * sc[0] * sc[18] - 20000000.0 * sc[0] * x375 +
           20000000.0 * sc[0] * x419 + 160000000.0 * sc[18] * x1344 +
           160000000.0 * sc[18] * x1345 - 100000.0 * sc[18] * x4957 -
           20000000.0 * sc[2] * x375 + 20000000.0 * sc[2] * x419 +
           sc[6] * x2959 - 50000000.0 * sc[8] * x375 +
           50000000.0 * sc[8] * x419 - x274 * x4983 + x275 * x4983 -
           50000000.0 * x370;
  J[522] = -20000000.0 * sc[0] * x420 + 20000000.0 * sc[0] * x421 +
           160000000.0 * sc[18] * x1346 - sc[18] * x8135 -
           20000000.0 * sc[2] * x420 + 20000000.0 * sc[2] * x421 -
           50000000.0 * sc[8] * x420 + 50000000.0 * sc[8] * x421 +
           x278 * x4983 - x279 * x4983;
  J[578] = -20000000.0 * sc[0] * x422 + 20000000.0 * sc[0] * x423 -
           20000000.0 * sc[2] * x422 + 20000000.0 * sc[2] * x423 -
           50000000.0 * sc[8] * x422 + 50000000.0 * sc[8] * x423 +
           x281 * x4983 - x282 * x4983;
  J[634] = 20000000.0 * sc[0] * x424 + 20000000.0 * sc[2] * x424 +
           50000000.0 * sc[8] * x424 + x284 * x4983 - x286 * x4983 + x3875 +
           x6748 + x8510;
  J[690] = 160000000.0 * sc[18] * x1347 + x10036 - x2124 * x454 + x288 * x4983 -
           x289 * x4983;
  J[746] = 20000000.0 * sc[0] * x425 + 160000000.0 * sc[18] * x1348 +
           20000000.0 * sc[2] * x425 + 50000000.0 * sc[8] * x425 + x10037 +
           x3875 + x6748 + x8510;
  J[802] = 160000000.0 * sc[18] * x1349 + sc[6] * x7591 + x10038 -
           x2124 * x455 - x295 * x4983 - x4613;
  J[858] = 20000000.0 * sc[0] * x426 + 160000000.0 * sc[18] * x1350 -
           sc[18] * x7086 - sc[18] * x9900 + 20000000.0 * sc[2] * x426 +
           50000000.0 * sc[8] * x426 + x297 * x4983 - x298 * x4983 + x3875 +
           x6748 + x8510;
  J[914] = sc[4] * x2780 + x10036 + x228 * x4983 - x231 * x4983;
  J[970] = x10038 - x2124 * x457 - x303 * x4983;
  J[1026] = 160000000.0 * kf_qss[203] * sc[18] * x1333 -
            10.0e-13 * sc[0] * sc[8] - 20000000.0 * sc[0] * x427 -
            sc[15] * x7086 - sc[15] * x9900 - sc[1] * x2507 - sc[24] * x10039 -
            10000000.0 * sc[2] * x2130 - 50000000.0 * sc[8] * x427 -
            100000.0 * sc[8] * x4957 - sc[9] * x8135 + 160000000.0 * x1332 -
            488100.0 * x197 * exp(-29926.295115406701 * invT) + x2172 + x2723 +
            x305 * x4983 - x306 * x4983 - x4693 + x7167 + x7924;
  J[1082] = 160000000.0 * kf_qss[41] * sc[0] * sc[18] / x1323 + sc[4] * x4246 +
            sc[5] * x6749 + x10038 + x2174 - x307 * x4983;
  J[1138] = -20000000.0 * sc[0] * x428 - 20000000.0 * sc[2] * x428 -
            50000000.0 * sc[8] * x428 + x2723 + x290 * x4983 - x308 * x4983 +
            x4222 + x7924;
  J[1194] = x10042;
  J[1250] = sc[2] * x2686 + x10038 - x309 * x4983;
  J[1306] = 1000000.0 * sc[2] + 1000000.0 * sc[4] + x10042;
  J[1362] = -sc[18] * x10039 + x10042;
  J[1418] = x10042;
  J[1474] = -20000000.0 * sc[0] * x429 - 20000000.0 * sc[2] * x429 -
            50000000.0 * sc[8] * x429 + x10037 + x2723 + x4222 + x7924;
  J[1530] = x10042 + 100000000000000.0 * exp(-15599.7166399463 * invT);
  J[1586] = x10038 - x310 * x4983;
  J[1642] = x10042;
  J[1698] = -20000000.0 * sc[0] * x430 - 20000000.0 * sc[2] * x430 -
            50000000.0 * sc[8] * x430 + x10037 + x2723 + x4222 + x7924;
  J[1754] = -20000000.0 * sc[0] * x431 - 20000000.0 * sc[2] * x431 -
            50000000.0 * sc[8] * x431 + x2723 + x290 * x4983 - x311 * x4983 +
            x4222 + x7924;
  J[1810] = 20000000.0 * sc[0] * x367 + 20000000.0 * sc[2] * x367 +
            50000000.0 * sc[8] * x367 - x189 * x4983 + x232 * x4983 + x3875 +
            x6748 + x8510;
  J[1866] = x10042;
  J[1922] = x10042;
  J[1978] = x10042;
  J[2034] = x10042;
  J[2090] = x10042 - x2124 * x459;
  J[2146] = sc[3] * x5242 + x10038 - x238 * x4983;
  J[2202] = x10042 - x2124 * x460;
  J[2258] = x10042;
  J[2314] = x10042 + 15700000000000.0 * exp(-15096.4999741416 * invT);
  J[2370] = x10042 + x10045;
  J[2426] = x10042;
  J[2482] = x10042;
  J[2538] = x10042;
  J[2594] = x10042;
  J[2650] = x10042;
  J[2706] = x10042;
  J[2762] = x10042;
  J[2818] = x10042;
  J[2874] = x10042;
  J[2930] = x10042;
  J[2986] = -20000000.0 * sc[0] * x382 - 20000000.0 * sc[2] * x382 -
            50000000.0 * sc[8] * x382 + x10037 + x2723 + x4222 + x7924;
  J[3042] = x10042;
  J[19] = 200000000.0 * sc[18] * x2130 + x190 * x4973 + x2081 - x233 * x4973 +
          (-50000000.0 * sc[3] * x5) * (x190 - x233);
  J[75] = 50000000.0 * sc[3] * x1491 - x1334 * x2079 - x248 * x4973 - x2488 +
          x251 * x4973 + (-50000000.0 * sc[3] * x5) * (-x248 + x251);
  J[131] = sc[16] * x2679 + 10000000.0 * sc[18] * x2130 - 80000000.0 * sc[19] -
           x1335 * x2079 - x253 * x4973 + x254 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x253 + x254);
  J[187] = sc[16] * x5155 - sc[19] * x5238 + 50000000.0 * sc[3] * x1492 -
           x1336 * x2079 - x256 * x4973 + x258 * x4973 + x2746 +
           (-50000000.0 * sc[3] * x5) * (-x256 + x258);
  J[243] = 10000000.0 * sc[18] * exp(-1006.43333160944 * invT) -
           sc[19] * x4246 - sc[19] * x5308 - 10000000.0 * sc[19] +
           50000000.0 * sc[3] * x1493 - x1337 * x2079 - x1339 * x2079 -
           x260 * x4973 + x263 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x260 + x263);
  J[299] = -sc[19] * x6749 + 50000000.0 * sc[3] * x245 - x1340 * x2079 -
           x265 * x4973 + x267 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x265 + x267);
  J[355] = -x269 * x4973 + x270 * x4973 + x2974 +
           (-50000000.0 * sc[3] * x5) * (-x269 + x270);
  J[411] = -x1343 * x2079 + x188 * x4973 +
           147400000.0 * x197 * exp(-67229.7465515105 * invT) - x272 * x4973 +
           (-50000000.0 * sc[3] * x5) * (x188 - x272);
  J[467] = -x1344 * x2079 - x1345 * x2079 + x274 * x4973 - x275 * x4973 +
           (-50000000.0 * sc[3] * x5) * (x274 - x275);
  J[523] = -x1346 * x2079 - x278 * x4973 + x279 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x278 + x279);
  J[579] =
    -x281 * x4973 + x282 * x4973 + (-50000000.0 * sc[3] * x5) * (-x281 + x282);
  J[635] =
    -x284 * x4973 + x286 * x4973 + (-50000000.0 * sc[3] * x5) * (-x284 + x286);
  J[691] = -x1347 * x2079 - x288 * x4973 + x289 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x288 + x289);
  J[747] = -x1348 * x2079 + x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[803] = -x1349 * x2079 + x295 * x4973 + x5774 +
           (-50000000.0 * sc[3] * x5) * (-x290 + x295);
  J[859] = -x1350 * x2079 - x297 * x4973 + x298 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x297 + x298);
  J[915] = sc[2] * x2679 - 50000000.0 * sc[3] * x249 + sc[3] * x5155 -
           x228 * x4973 + x231 * x4973 +
           (-50000000.0 * sc[3] * x5) * (-x228 + x231);
  J[971] = x303 * x4973 + x5774 + (-50000000.0 * sc[3] * x5) * (-x290 + x303);
  J[1027] = 200000000.0 * sc[0] * x2130 + 10000000.0 * sc[2] * x2130 +
            10000000.0 * sc[4] * exp(-1006.43333160944 * invT) - x1351 * x2079 -
            x305 * x4973 + x306 * x4973 +
            (-50000000.0 * sc[3] * x5) * (-x305 + x306);
  J[1083] = -sc[0] * x2071 - 110000000.0 * sc[0] - 80000000.0 * sc[2] -
            sc[3] * x5238 - sc[4] * x4246 - sc[4] * x5308 - 10000000.0 * sc[4] -
            sc[5] * x6749 - x1353 * x2079 - x2174 + x307 * x4973 + x5774 +
            (-50000000.0 * sc[3] * x5) * (-x290 + x307);
  J[1139] = x308 * x4973 + x5774 + (-50000000.0 * sc[3] * x5) * (-x290 + x308);
  J[1195] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1251] = x309 * x4973 + x5774 + (-50000000.0 * sc[3] * x5) * (-x290 + x309);
  J[1307] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1363] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1419] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1475] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1531] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1587] = x310 * x4973 + x5774 + (-50000000.0 * sc[3] * x5) * (-x290 + x310);
  J[1643] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1699] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1755] = x311 * x4973 + x5774 + (-50000000.0 * sc[3] * x5) * (-x290 + x311);
  J[1811] =
    x189 * x4973 - x232 * x4973 + (-50000000.0 * sc[3] * x5) * (x189 - x232);
  J[1867] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1923] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[1979] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2035] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2091] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2147] = -50000000.0 * sc[3] * x239 + x238 * x4973 + x5774 +
            (-50000000.0 * sc[3] * x5) * (x238 - x290);
  J[2203] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2259] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2315] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2371] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2427] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2483] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2539] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2595] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2651] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2707] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2763] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2819] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2875] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2931] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[2987] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[3043] = x5775 + (-50000000.0 * sc[3] * x5) * (x294);
  J[20] =
    20000000.0 * sc[8] * x190 - 20000000.0 * sc[8] * x233 - x10048 * x383 +
    x10048 * x402 + x2145 + x2158 - x383 * x3985 - x383 * x4989 - x383 * x6369 -
    x383 * x7789 - x383 * x8582 + x3985 * x402 + x402 * x4989 + x402 * x6369 +
    x402 * x7789 + x402 * x8582 + x466 * x52 - x476 * x52 - x4967 * x550 +
    x5009 - x505 * x52 + x52 * x92 +
    (-x37 * x52) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x52 * x87 - x52 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x52 * x81) * (x557 - x604 + (-x141) * (-x681 + x734));
  J[76] =
    -20000000.0 * sc[8] * x248 + 20000000.0 * sc[8] * x251 - x10048 * x403 +
    x10048 * x404 + x10057 - x2151 * x370 - x2152 * x403 + x2152 * x404 -
    x3985 * x403 + x3985 * x404 - x403 * x4989 - x403 * x6369 - x403 * x7789 -
    x403 * x8582 + x404 * x4989 + x404 * x6369 + x404 * x7789 + x404 * x8582 +
    (-x37 * x52) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x52 * x87 - x52 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x52 * x81) * (x758 - x771 + (-x141) * (x770 - x772));
  J[132] =
    50000000.0 * sc[15] - sc[20] * x4128 + 13000000.0 * sc[26] * x4151 -
    20000000.0 * sc[8] * x253 + 20000000.0 * sc[8] * x254 - x10048 * x405 +
    x10048 * x406 + x10057 + x10058 - x2152 * x405 + x2152 * x406 -
    x3985 * x405 + x3985 * x406 - x405 * x4989 - x405 * x6369 - x405 * x7789 -
    x405 * x8582 + x406 * x4989 + x406 * x6369 + x406 * x7789 + x406 * x8582 +
    (-x37 * x52) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x52 * x87 - x52 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x52 * x81) * (x792 - x803 + (-x141) * (x801 - x804));
  J[188] =
    -sc[20] * x5272 - 20000000.0 * sc[8] * x256 + 20000000.0 * sc[8] * x258 -
    x10048 * x407 + x10062 + x1414 * x6544 - x1418 * x6544 + x2140 + x2143 +
    x2144 * x508 - x2152 * x407 + x2152 * x408 + x2640 - x3985 * x407 -
    x407 * x4989 - x407 * x6369 - x407 * x7789 + x4218 + x52 * x785 +
    x52 * x809 + x5270 + x6556 + x7927 + x8618 + x8667 +
    (-x37 * x52) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x52 * x87 - x52 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x52 * x81) * (x821 - x841 + (-x141) * (x817 - x842)) +
    (-x1500 * x174) * (-kf_qss[380] * sc_qss[25] * x170 * x177 +
                       (-x177 * x179) * (x1469 - x1473));
  J[244] =
    -sc[20] * x6678 + 1000000.0 * sc[23] + 1000000.0 * sc[26] +
    100000.0 * sc[30] - 20000000.0 * sc[8] * x260 + 20000000.0 * sc[8] * x263 -
    x10048 * x409 + x10048 * x410 + x1018 * x1500 - x1404 * x6544 +
    x1425 * x6544 + x2140 + x2143 + x2144 * x531 - x2152 * x409 + x2152 * x410 +
    x2640 - x370 * x3984 - x3985 * x409 + x3985 * x410 - x409 * x4989 -
    x409 * x6369 - x409 * x7789 - x409 * x8582 + x410 * x4989 + x410 * x6369 +
    x410 * x7789 + x410 * x8582 + x4967 * x531 + x52 * x68 - x52 * x807 +
    x52 * x820 + x52 * x837 + x7946 + x8618 +
    (-x37 * x52) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x52 * x87 - x52 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x52 * x81) * (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-x1500 * x174) * (x1475 - x1477 * (-sc_qss[25] * x179 + x1466) +
                       (-x177 * x179) * (-x1458 + x1479));
  J[300] =
    -20000000.0 * sc[8] * x265 + 20000000.0 * sc[8] * x267 + x10048 * x413 +
    x10057 + x10072 + x10074 + x2152 * x413 - x370 * x6368 + x3985 * x413 +
    x413 * x4989 + x413 * x6369 + x413 * x7789 + x413 * x8582 + x4328 + x5406 +
    x6761 + x7986 +
    (-x37 * x52) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x52 * x87 - x52 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x52 * x81) * (x869 - x896 + (-x141) * (x895 - x897));
  J[356] =
    -20000000.0 * sc[8] * x269 + 20000000.0 * sc[8] * x270 - x10048 * x416 +
    x10062 - x2152 * x416 + x2980 - x3985 * x416 - x416 * x4989 - x416 * x6369 -
    x416 * x7789 - x416 * x8582 + x4218 + x5270 + x6556 + x7927 + x8735 +
    (-x37 * x52) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x52 * x87 - x52 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x52 * x81) * (0 + (-x141) * (x909 + x913));
  J[412] = 20000000.0 * sc[8] * x188 - 20000000.0 * sc[8] * x272 + x10082;
  J[468] =
    -sc[20] * x8063 + 20000000.0 * sc[8] * x274 - 20000000.0 * sc[8] * x275 -
    x10048 * x375 + x10048 * x419 - 794000000000000.0 * x1293 * x3946 +
    20000000.0 * x197 - x2144 * x572 + x2145 - x2152 * x375 + x2152 * x419 -
    x375 * x3985 - x375 * x4989 - x375 * x6369 - x375 * x7789 - x375 * x8582 +
    x3985 * x419 + x419 * x4989 + x419 * x6369 + x419 * x7789 + x419 * x8582 -
    x4967 * x572 + x5009 +
    (-x37 * x52) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x52 * x87 - x52 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x52 * x81) * (x920 + (-x141) * (-x922));
  J[524] =
    -20000000.0 * sc[8] * x278 + 20000000.0 * sc[8] * x279 - x10048 * x420 +
    x10048 * x421 + x10057 - x2152 * x420 + x2152 * x421 - x370 * x7788 -
    x3985 * x420 + x3985 * x421 - x420 * x4989 - x420 * x6369 - x420 * x7789 -
    x420 * x8582 + x421 * x4989 + x421 * x6369 + x421 * x7789 + x421 * x8582 +
    (-x37 * x52) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x52 * x87 - x52 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-x52 * x81) * (x885 - x936 + (-x141) * (x935 - x937));
  J[580] =
    -20000000.0 * sc[8] * x281 + 20000000.0 * sc[8] * x282 - x10048 * x422 +
    x10048 * x423 - 794000000000000.0 * x1295 * x3946 + x21 * x52 -
    x2144 * x97 + x2145 - x2152 * x422 + x2152 * x423 - x370 * x4988 -
    x3985 * x422 + x3985 * x423 - x422 * x4989 - x422 * x6369 - x422 * x7789 +
    x423 * x4989 + x423 * x6369 + x423 * x7789 - x470 * x52 + x5009 +
    x52 * x79 - x52 * x86 + x8831 +
    (-x37 * x52) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x52 * x87 - x52 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x52 * x81) * (-x546 + x926 + (-x141) * (x465 - x977));
  J[636] =
    -20000000.0 * sc[8] * x284 + 20000000.0 * sc[8] * x286 + x10048 * x424 +
    x10057 + x10072 + x10074 + x2152 * x424 - x370 * x8581 + x3985 * x424 +
    x424 * x4989 + x424 * x6369 + x424 * x7789 + x424 * x8582 + x4328 + x5406 +
    x6761 + x7986 +
    (-x37 * x52) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x52 * x87 - x52 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x52 * x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005));
  J[692] = -20000000.0 * sc[8] * x288 + 20000000.0 * sc[8] * x289 + x10079 -
           x2144 * x485 + x2145 + x2152 * x408 - x2152 * x411 + x408 * x8582 -
           x485 * x4967 + x5009 - x8713;
  J[748] =
    20000000.0 * sc[8] * x293 + x10048 * x425 + x10057 + x10072 + x10074 +
    x10095 + x2152 * x425 + x3985 * x425 + x425 * x4989 + x425 * x6369 +
    x425 * x7789 + x425 * x8582 + x4328 + x5406 + x6761 + x7986 +
    (-x37 * x52) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x52 * x87 - x52 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x52 * x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553));
  J[804] =
    -sc[20] * x4622 + 20000000.0 * sc[8] * x295 + x10082 + x10095 +
    (-x37 * x52) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x52 * x87 - x52 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x52 * x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047));
  J[860] =
    -sc[20] * x7102 + 50000000.0 * sc[2] - 20000000.0 * sc[8] * x297 +
    20000000.0 * sc[8] * x298 + x10048 * x426 + x10072 + x10074 -
    x1264 * x2144 - x1264 * x4967 + x2145 + x2152 * x426 + x3985 * x426 +
    x426 * x4989 + x426 * x6369 + x426 * x7789 + x426 * x8582 + x4328 + x5009 +
    x5406 + x6761 + x7986 +
    (-x37 * x52) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x52 * x87 - x52 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x52 * x81) * (x1057 + (-x141) * (x1058));
  J[916] = -20000000.0 * sc[8] * x228 + 20000000.0 * sc[8] * x231 + x10082;
  J[972] =
    -sc[20] * x7131 - sc[20] * x8066 + 20000000.0 * sc[8] * x303 + x10082 +
    x10095 - 794000000000000.0 * x1297 * x3946 +
    (-x37 * x52) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x52 * x87 - x52 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x52 * x81) * (x1062 + (-x141) * (-x1063));
  J[1028] = -20000000.0 * sc[8] * x305 + 20000000.0 * sc[8] * x306 -
            x10048 * x427 + x10062 - x2152 * x427 + x2980 - x3985 * x427 +
            x4218 - x427 * x4989 - x427 * x6369 - x427 * x7789 - x427 * x8582 +
            x5270 + x6556 + x7927 + x8735;
  J[1084] = 20000000.0 * sc[8] * x307 + x10082 + x10095;
  J[1140] = -sc[14] * x4622 - sc[15] * x7102 - sc[17] * x7131 - sc[17] * x8066 -
            sc[2] * x4128 - sc[31] * x8804 - sc[3] * x5272 - sc[4] * x6678 +
            20000000.0 * sc[8] * x308 - sc[8] * x8063 - x10048 * x428 + x10062 +
            x10095 - 794000000000000.0 * x1298 * x3946 + x2139 - x3985 * x428 +
            x4218 - x428 * x4989 - x428 * x6369 - x428 * x7789 + x5270 + x6556 +
            x7927 + x8991 -
            2614000000000000.0 * exp(-40534.102430570201 * invT + 0.15 * tc[0]);
  J[1196] = x10106;
  J[1252] =
    20000000.0 * sc[8] * x309 + x10082 + x10095 +
    (-x37 * x52) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x52 * x87 - x52 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-x52 * x81) * (-x1033 + (-x141) * (-x1067 + x1068));
  J[1308] = 1000000.0 * sc[4] + x10106;
  J[1364] =
    x10106 - x1072 * x52 - x1074 * x52 +
    (-x37 * x52) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x52 * x87 - x52 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-x52 * x81) * (x1082 + (-x141) * (x1070 + x463));
  J[1420] =
    x10106 - x1085 * x52 - 794000000000000.0 * x1299 * x3946 - x52 * x677 +
    (-x37 * x52) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x52 * x87 - x52 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x52 * x81) * (x1088 + (-x141) * (x1089));
  J[1476] =
    13000000.0 * sc[2] * x4151 + 1000000.0 * sc[4] - x10048 * x429 + x10112 -
    x2152 * x429 - x3985 * x429 + x4218 - x429 * x4989 - x429 * x6369 -
    x429 * x7789 - x429 * x8582 + x5270 + x6556 + x7927 +
    (-x37 * x52) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x52 * x87 - x52 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x52 * x81) * (x1092 + (-x141) * (x1093));
  J[1532] = x10106;
  J[1588] = 20000000.0 * sc[8] * x310 + x10082 + x10095;
  J[1644] = x10106;
  J[1700] =
    100000.0 * sc[4] - x10048 * x430 + x10112 - x2152 * x430 - x3985 * x430 +
    x4218 - x430 * x4989 - x430 * x6369 - x430 * x7789 - x430 * x8582 + x5270 +
    x6556 + x7927 +
    (-x37 * x52) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x52 * x87 - x52 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x52 * x81) * (x1098 + (-x141) * (x1099));
  J[1756] =
    -sc[20] * x8804 + 20000000.0 * sc[8] * x311 - x10048 * x431 + x10062 +
    x10095 - x2152 * x431 + x2980 - x3985 * x431 + x4218 - x431 * x4989 -
    x431 * x6369 - x431 * x7789 - x431 * x8582 + x5270 + x6556 + x7927 + x8735 +
    (-x37 * x52) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x52 * x87 - x52 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x52 * x81) * (x726 + (-x141) * (-x1104));
  J[1812] =
    20000000.0 * sc[8] * x189 - 20000000.0 * sc[8] * x232 - x10047 * x370 +
    x10048 * x367 + x10057 + x10072 + x10074 + x2152 * x367 + x367 * x3985 +
    x367 * x4989 + x367 * x6369 + x367 * x7789 + x367 * x8582 + x4328 + x5406 +
    x6761 + x7986 +
    (-x37 * x52) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x52 * x87 - x52 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x52 * x81) * (-x564 + x612 + (-x141) * (-x585 + x688));
  J[1868] = x10106;
  J[1924] = x10106 - 794000000000000.0 * x1300 * x3946;
  J[1980] = x10106;
  J[2036] = x10106 +
            (-x37 * x52) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-x52 * x87 - x52 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (-x52 * x81) * (0 + (-x141) * (-x692));
  J[2092] = x10106;
  J[2148] = 20000000.0 * sc[8] * x238 + x10082 + x10095;
  J[2204] = x10106 + x1500;
  J[2260] = x10106;
  J[2316] = x10106;
  J[2372] = x10106;
  J[2428] = x10106;
  J[2484] = x10106 +
            (-x37 * x52) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-x52 * x87 - x52 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (-x52 * x81) * (0 + (-x141) * (-x710));
  J[2540] =
    x10106 +
    (-x37 * x52) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x52 * x87 - x52 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x52 * x81) * (-x482 + x712 + (-x141) * (x103 - x545));
  J[2596] =
    x10106 +
    (-x37 * x52) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x52 * x87 - x52 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x52 * x81) * (x135 + (-x141) * (-x126));
  J[2652] =
    x10106 + x129 * x52 - x1428 * x6544 +
    (-x37 * x52) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x52 * x87 - x52 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x52 * x81) * (x461 + (-x141) * (x481));
  J[2708] =
    x10106 + x52 * x555 + x52 * x558 +
    (-x37 * x52) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x52 * x87 - x52 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x52 * x81) * (x130 + (-x141) * (x464));
  J[2764] =
    x10106 +
    (-x37 * x52) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x52 * x87 - x52 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x52 * x81) * (x132 + (-x141) * (-x586)) +
    (-x1500 * x174) * (0 + (-x177 * x179) * (-x1482));
  J[2820] =
    x10106 - x52 * x594 +
    (-x37 * x52) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x52 * x87 - x52 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x52 * x81) * (x106 + (-x141) * (x127));
  J[2876] = x10106;
  J[2932] = x10106;
  J[2988] = -x10048 * x382 + x10112 - x2152 * x382 - x382 * x3985 -
            x382 * x4989 - x382 * x6369 - x382 * x7789 - x382 * x8582 + x4218 +
            x5270 + x6556 + x7927;
  J[3044] = x10106;
  J[21] = -sc[21] * x659 - sc[21] * x670 - sc[21] * x91 + 18100000.0 * sc[37] +
          sc[38] * x186 * x2092 + x10125;
  J[77] = -sc[21] * x2478 + sc[38] * x2483 + x10125;
  J[133] = -sc[21] * x4081 + 1000000.0 * sc[23] + x10125;
  J[189] = sc[37] * x5255 + x10125 - x5145;
  J[245] = 10.0e-13 * sc[14] * sc[6] - sc[21] * x6579 + x10125;
  J[301] = sc[38] * x6716 + x10125;
  J[357] = 10.0e-13 * sc[14] * sc[4] + sc[14] * x4357 + x10125;
  J[413] = x10125;
  J[469] = sc[16] * x3074 - sc[21] * x7839 + 100000.0 * sc[37] + x10125;
  J[525] = -sc[21] * x8113 + sc[38] * x8119 + x10125;
  J[581] =
    -31000000.0 * sc[21] * x2474 - sc[21] * x5564 + sc[38] * x5562 + x10125;
  J[637] = sc[38] * x8856 + x10125;
  J[693] = x10125 - x4560;
  J[749] = -sc[21] * x9394 + x10125;
  J[805] = -sc[21] * x3817 + 10.0e-13 * sc[4] * sc[6] + sc[6] * x4357 + x10125;
  J[861] = 400000.0 * sc[37] + x10125;
  J[917] = sc[8] * x3074 + x10125;
  J[973] = 1000000.0 * sc[37] + x10125;
  J[1029] = x10125;
  J[1085] = x10125;
  J[1141] = x10125;
  J[1197] = -sc[0] * x659 - sc[0] * x670 - sc[0] * x91 -
            31000000.0 * sc[10] * x2474 - sc[10] * x5564 - sc[13] * x9394 -
            sc[14] * x3817 - sc[1] * x2478 - 839100000000.0 * sc[22] * x10126 -
            sc[2] * x4081 - 200000.0 * sc[37] * x10129 - sc[4] * x6579 -
            sc[8] * x7839 - sc[9] * x8113 + x10125 - x186 * x2095 - x4734 -
            x5972;
  J[1253] = -839100000000.0 * sc[21] * x10126 + sc[38] * x10134 + x10125;
  J[1309] = 1000000.0 * sc[2] + x10125;
  J[1365] = x10125;
  J[1421] = x10125;
  J[1477] = x10125;
  J[1533] = x10125;
  J[1589] = x10125;
  J[1645] = x10125;
  J[1701] = x10125;
  J[1757] = x10125;
  J[1813] = x10125;
  J[1869] = x10125;
  J[1925] = x10125;
  J[1981] = x10125;
  J[2037] = x10125;
  J[2093] = 18100000.0 * sc[0] + 400000.0 * sc[15] + 1000000.0 * sc[17] -
            200000.0 * sc[21] * x10129 + 2000000.0 * sc[37] + sc[3] * x5255 +
            100000.0 * sc[8] + x10125 + x3706;
  J[2149] = sc[10] * x5562 + sc[11] * x8856 + sc[1] * x2483 + sc[22] * x10134 +
            sc[5] * x6716 + sc[9] * x8119 + x10125 + x2092 * x358;
  J[2205] = x10125;
  J[2261] = x10125;
  J[2317] = x10125;
  J[2373] = x10125;
  J[2429] = x10125;
  J[2485] = x10125;
  J[2541] = x10125;
  J[2597] = x10125;
  J[2653] = x10125;
  J[2709] = x10125;
  J[2765] = x10125;
  J[2821] = x10125;
  J[2877] = x10125;
  J[2933] = x10125;
  J[2989] = x10125;
  J[3045] = x10125;
  J[22] = 10.0e-13 * sc[18] * sc[8] - sc[22] * x2106 -
          10000000.0 * sc[22] * x2108 - sc[22] * x2111 + sc[37] * x2088 +
          x10140 * x681 - x10140 * x734 + x10142 * x606 + x190 * x3972 +
          x1924 * x557 - x1924 * x604 - x233 * x3972 +
          (-x141 * x1924) * (-x681 + x734);
  J[78] = sc[37] * x2485 - x10140 * x770 + x10140 * x772 + x10142 * x617 +
          x1924 * x758 - x1924 * x771 - x248 * x3972 + x251 * x3972 +
          (-x141 * x1924) * (x770 - x772);
  J[134] = sc[22] * x10141 * x640 + sc[26] * x4155 - x10140 * x801 +
           x10140 * x804 + x1924 * x792 - x1924 * x803 + x4150 +
           (-x141 * x1924) * (x801 - x804);
  J[190] = -kf_qss[145] * x1303 * x6563 / ((x1302) * (x1302)) - sc[22] * x5152 +
           300000.0 * sc[24] * x1106 - x10140 * x817 + x10140 * x842 +
           x10142 * x645 + x1469 * x6547 - x1473 * x6547 + x1924 * x821 -
           x1924 * x841 - x256 * x3972 + x258 * x3972 +
           (-x141 * x1924) * (x817 - x842);
  J[246] = sc[22] * x10141 * x658 - 3.12 * sc[22] * x6647 + sc[37] * x4273 +
           2500000.0 * sc[53] - x10140 * x829 + x10140 * x872 + x10142 * x647 -
           x1458 * x6547 + x1479 * x6547 - x1924 * x468 + x1924 * x669 -
           x260 * x3972 + x263 * x3972 + (-x141 * x1924) * (x829 - x872);
  J[302] = sc[37] * x6720 - x10140 * x895 + x10140 * x897 + x10142 * x672 +
           x1924 * x869 - x1924 * x896 - x265 * x3972 + x267 * x3972 +
           (-x141 * x1924) * (x895 - x897);
  J[358] = -x10140 * x909 - x10140 * x913 + x10142 * x680 - x269 * x3972 +
           x270 * x3972 + (-x141 * x1924) * (x909 + x913);
  J[414] = x188 * x3972 - x272 * x3972;
  J[470] = 10.0e-13 * sc[0] * sc[18] + sc[14] * x3078 + sc[17] * x8075 -
           sc[22] * x8038 + x10140 * x922 + x10142 * x689 + x10142 * x693 +
           x1924 * x920 + x274 * x3972 - x275 * x3972 +
           (-x141 * x1924) * (-x922);
  J[526] = sc[37] * x8121 - x10140 * x935 + x10140 * x937 - x10142 * x628 +
           x1924 * x885 - x1924 * x936 - x278 * x3972 + x279 * x3972 +
           (-x141 * x1924) * (x935 - x937);
  J[582] = -200000.0 * sc[22] * x5566 - sc[22] * x8811 + sc[37] * x5572 +
           5000000.0 * sc[53] * x8794 - x10140 * x465 + x10140 * x977 +
           x10142 * x657 + x10142 * x706 - x1924 * x546 + x1924 * x926 -
           x281 * x3972 + x282 * x3972 + (-x141 * x1924) * (x465 - x977);
  J[638] = sc[37] * x8859 - x1001 * x10140 - x1004 * x1924 + x1005 * x10140 +
           x10142 * x717 + x1924 * x700 - x284 * x3972 + x286 * x3972 +
           (-x141 * x1924) * (x1001 - x1005);
  J[694] = -sc[22] * x4561 - x288 * x3972 + x289 * x3972;
  J[750] = sc[37] * x9391 + x1000 * x1924 + x10140 * x1027 - x10140 * x553 +
           x10142 * x724 - x1026 * x1924 + x4592 +
           (-x141 * x1924) * (-x1027 + x553);
  J[806] = -sc[22] * x9651 + sc[8] * x3078 + x1014 * x1924 - x10140 * x1039 +
           x10140 * x1047 + x10142 * x725 - x1046 * x1924 + x295 * x3972 +
           x4591 + (-x141 * x1924) * (x1039 - x1047);
  J[862] = sc[22] * x10141 * x727 - 100000.0 * sc[22] * x1938 +
           400000.0 * sc[37] - x10140 * x1058 + x1057 * x1924 + x197 * x3971 -
           x297 * x3972 + x298 * x3972 + (-x141 * x1924) * (x1058);
  J[918] = -x228 * x3972 + x231 * x3972;
  J[974] = sc[8] * x8075 + x10140 * x1063 + x10142 * x728 + x1062 * x1924 +
           x303 * x3972 + x4591 + (-x141 * x1924) * (-x1063);
  J[1030] = 10.0e-13 * sc[0] * sc[8] - x305 * x3972 + x306 * x3972;
  J[1086] = x307 * x3972 + x4591;
  J[1142] = x308 * x3972 + x4591;
  J[1198] =
    -839100000000.0 * sc[22] * x10126 + 200000.0 * sc[37] * x10129 + x4592;
  J[1254] =
    kf_qss[88] * sc[22] * x10141 * x610 - sc[0] * x2106 -
    10000000.0 * sc[0] * x2108 - sc[0] * x2111 - 200000.0 * sc[10] * x5566 -
    sc[10] * x8811 - sc[12] * x4561 - sc[14] * x9651 -
    100000.0 * sc[15] * x1938 - 839100000000.0 * sc[21] * x10126 -
    100000.0 * sc[25] * x5566 - 324000.0 * sc[31] * x8818 - sc[38] * x10134 -
    sc[3] * x5152 - 3.12 * sc[4] * x6647 - sc[8] * x8038 + x10140 * x1067 -
    x10140 * x1068 + x10141 * x131 - x10177 - x1033 * x1924 - x3551 + x4748 -
    100000.0 * x678 * x733 * x9892 - x8349 + (-x141 * x1924) * (-x1067 + x1068);
  J[1310] = -x10179 + x4592;
  J[1366] = 300000.0 * sc[3] * x1106 - x10140 * x1070 - x10140 * x463 +
            x1082 * x1924 + x3567 + x4592 + (-x141 * x1924) * (x1070 + x463);
  J[1422] = -100000.0 * sc[22] * x5566 + 6310000.0 * sc[37] - x10140 * x1089 +
            x10142 * x751 + x1088 * x1924 + x4592 + (-x141 * x1924) * (x1089);
  J[1478] = sc[22] * x10141 * x759 + sc[2] * x4155 - x10140 * x1093 +
            x10142 * x755 + x10187 + x1092 * x1924 + x4592 +
            (-x141 * x1924) * (x1093);
  J[1534] = x4592;
  J[1590] = sc[22] * x10141 * x760 + sc[37] * x8055 + x310 * x3972 + x4591;
  J[1646] = x4592;
  J[1702] = -x10140 * x1099 + x1098 * x1924 + x4592 + (-x141 * x1924) * (x1099);
  J[1758] = -324000.0 * sc[22] * x8818 + x10140 * x1104 + x10142 * x762 +
            x1924 * x726 + x311 * x3972 + x4591 + (-x141 * x1924) * (-x1104);
  J[1814] = x10140 * x585 - x10140 * x688 + x10142 * x764 + x10198 +
            x189 * x3972 - x1924 * x564 + x1924 * x612 - x232 * x3972 +
            (-x141 * x1924) * (-x585 + x688);
  J[1870] = x4592;
  J[1926] = x4592;
  J[1982] = -x1307 * x6563 + x4592;
  J[2038] = x10140 * x692 - x1308 * x6563 + x4592 + (-x141 * x1924) * (-x692);
  J[2094] = sc[0] * x2088 + sc[10] * x5572 + sc[11] * x8859 + sc[13] * x9391 +
            400000.0 * sc[15] + sc[1] * x2485 + 200000.0 * sc[21] * x10129 +
            6310000.0 * sc[25] + sc[28] * x8055 + 2000000.0 * sc[37] +
            sc[4] * x4273 + sc[5] * x6720 + sc[9] * x8121 + x10142 * x767 +
            x10200 + x10201 + x4592;
  J[2150] = -sc[22] * x10134 + x238 * x3972 + x4591;
  J[2206] = x4592;
  J[2262] = x4592;
  J[2318] = x4592;
  J[2374] = x4592;
  J[2430] = x4592;
  J[2486] = x10140 * x710 + x4592 + (-x141 * x1924) * (-x710);
  J[2542] = -x10140 * x103 + x10140 * x545 - x1924 * x482 + x1924 * x712 +
            x4592 + (-x141 * x1924) * (x103 - x545);
  J[2598] = x10140 * x126 + x135 * x1924 + x4592 + (-x141 * x1924) * (-x126);
  J[2654] = -x10140 * x481 + x1924 * x461 + x4592 + (-x141 * x1924) * (x481);
  J[2710] = -x10140 * x464 + x130 * x1924 + x4592 + (-x141 * x1924) * (x464);
  J[2766] = x10140 * x586 + x132 * x1924 - x1482 * x6547 + x4592 +
            (-x141 * x1924) * (-x586);
  J[2822] = -x10140 * x127 + x106 * x1924 + x4592 + (-x141 * x1924) * (x127);
  J[2878] = x4592;
  J[2934] = x4592;
  J[2990] = x4592 + x9804;
  J[3046] = x4592;
  J[23] = -sc[23] * x122 - sc[23] * x200 + 31600000.0 * sc[25];
  J[79] = -x2481;
  J[135] = -2000000.0 * sc[23];
  J[191] = 1000.0 * sc[25];
  J[247] = -3000000.0 * sc[23];
  J[303] = 0;
  J[359] = 0;
  J[415] = 0;
  J[471] = -sc[23] * x7815 + 8000000.0 * sc[25];
  J[527] = -x8116;
  J[583] = -x5570;
  J[639] = 0;
  J[695] = x4560 + x7001;
  J[751] = -x9401;
  J[807] = 500000.0 * sc[17] * x3341 - x3809 + x4613;
  J[863] = sc[18] * x7086 + 3980000.0 * sc[25];
  J[919] = 0;
  J[975] = 500000.0 * sc[14] * x3341 + 25200000.0 * sc[17] + sc[20] * x7131 +
           3980000.0 * sc[25];
  J[1031] = sc[15] * x7086 + x4693;
  J[1087] = 0;
  J[1143] = sc[17] * x7131;
  J[1199] = x4734;
  J[1255] = -x10177;
  J[1311] = -sc[0] * x122 - sc[0] * x200 - 2350000.0 * sc[26] * x10204 -
            2000000.0 * sc[2] - 3000000.0 * sc[4] - sc[8] * x7815 - x10179 -
            x3563 - x5994 - x8353 - x9453 - x9717 -
            4.027e+19 * exp(-49390.715748733201 * invT - tc[0]);
  J[1367] = 0;
  J[1423] = 31600000.0 * sc[0] + 3980000.0 * sc[15] + 3980000.0 * sc[17] +
            3200000.0 * sc[25] + 6310000.0 * sc[37] + 1000.0 * sc[3] +
            8000000.0 * sc[8] +
            120000000000000.0 * exp(-24808.581624172701 * invT);
  J[1479] = -2350000.0 * sc[23] * x10204;
  J[1535] = 0;
  J[1591] = 0;
  J[1647] = x8398;
  J[1703] = 0;
  J[1759] = 0;
  J[1815] = 0;
  J[1871] = 0;
  J[1927] = 0;
  J[1983] = 0;
  J[2039] = 0;
  J[2095] = 6310000.0 * sc[25] + x7344;
  J[2151] = 0;
  J[2207] = 0;
  J[2263] = 0;
  J[2319] = 0;
  J[2375] = 0;
  J[2431] = 0;
  J[2487] = 0;
  J[2543] = 0;
  J[2599] = 0;
  J[2655] = 0;
  J[2711] = 0;
  J[2767] = 0;
  J[2823] = 0;
  J[2879] = 0;
  J[2935] = 0;
  J[2991] = 0;
  J[3047] = 0;
  J[24] =
    10000000.0 * sc[22] * x2108 + x10210 * x681 - x10210 * x734 -
    x1363 * x7488 + x1926 * x466 - x1926 * x476 - x1926 * x505 + x1926 * x92 -
    x1929 * x536 + x1929 * x544 +
    (-x1926 * x37) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (x182 * x1929 - x1926 * x81) * (x557 - x604 + (-x141) * (-x681 + x734)) +
    (x183 * x1929) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[80] =
    -x10210 * x770 + x10210 * x772 - x1375 * x7488 + x1929 * x511 -
    x1929 * x742 +
    (-x1926 * x37) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (x182 * x1929 - x1926 * x81) * (x758 - x771 + (-x141) * (x770 - x772)) +
    (x183 * x1929) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[136] =
    100000.0 * sc[30] - x10210 * x801 + x10210 * x804 - x1376 * x7488 +
    x1926 * x493 - x1926 * x644 + x1926 * x683 + x1926 * x789 + x1929 * x543 -
    x1929 * x753 +
    (-x1926 * x37) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (x182 * x1929 - x1926 * x81) * (x792 - x803 + (-x141) * (x801 - x804)) +
    (x183 * x1929) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[192] =
    -300000.0 * sc[24] * x1106 - x10210 * x817 + x10210 * x842 - x1377 * x7488 +
    x1926 * x785 + x1926 * x809 - x1929 * x741 + x1929 * x763 +
    (-x1926 * x37) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x182 * x1929 - x1926 * x81) * (x821 - x841 + (-x141) * (x817 - x842)) +
    (x183 * x1929) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[248] =
    1000000.0 * sc[26] + 100000.0 * sc[30] - x10210 * x829 + x10210 * x872 -
    x1378 * x7488 - x1379 * x7488 + x1926 * x68 - x1926 * x807 + x1926 * x820 +
    x1926 * x837 + x1929 * x793 - x1929 * x796 +
    (-x1926 * x37) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x182 * x1929 - x1926 * x81) * (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x183 * x1929) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[304] =
    -x10210 * x895 + x10210 * x897 - x1380 * x7488 + x1929 * x799 -
    x1929 * x812 +
    (-x1926 * x37) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (x182 * x1929 - x1926 * x81) * (x869 - x896 + (-x141) * (x895 - x897)) +
    (x183 * x1929) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[360] =
    -150000.0 * sc[24] * exp(-2415.43999586265 * invT) - x10210 * x909 -
    x10210 * x913 - x1382 * x7488 +
    (-x1926 * x37) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x1926 * x87 - x1926 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x182 * x1929 - x1926 * x81) * (0 + (-x141) * (x909 + x913)) +
    (x183 * x1929) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[416] = 0;
  J[472] =
    sc[14] * x8093 + x10210 * x922 - x1383 * x7488 + x1929 * x915 +
    (-x1926 * x37) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x182 * x1929 - x1926 * x81) * (x920 + (-x141) * (-x922)) +
    (x183 * x1929) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[528] =
    -x10210 * x935 + x10210 * x937 - x1384 * x7488 + x1929 * x834 -
    x1929 * x835 +
    (-x1926 * x37) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (x182 * x1929 - x1926 * x81) * (x885 - x936 + (-x141) * (x935 - x937)) +
    (x183 * x1929) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[584] =
    200000.0 * sc[22] * x5566 - x10210 * x465 + x10210 * x977 - x1385 * x7488 -
    x1386 * x7488 + x1926 * x21 - x1926 * x470 + x1926 * x79 - x1926 * x86 -
    x1929 * x831 + x1929 * x836 +
    (-x1926 * x37) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x182 * x1929 - x1926 * x81) * (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x183 * x1929) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[640] =
    -x1001 * x10210 + x1005 * x10210 - x1387 * x7488 + x1929 * x498 -
    x1929 * x864 +
    (-x1926 * x37) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x182 * x1929 - x1926 * x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x183 * x1929) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[696] = -x7003;
  J[752] =
    x10210 * x1027 - x10210 * x553 - x1929 * x861 + x1929 * x866 +
    (-x1926 * x37) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x182 * x1929 - x1926 * x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x183 * x1929) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[808] =
    sc[8] * x8093 - x10210 * x1039 + x10210 * x1047 + x1929 * x887 -
    x1929 * x890 +
    (-x1926 * x37) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x182 * x1929 - x1926 * x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x183 * x1929) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[864] =
    -x10210 * x1058 + x1055 * x1929 +
    (-x1926 * x37) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x182 * x1929 - x1926 * x81) * (x1057 + (-x141) * (x1058)) +
    (x183 * x1929) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[920] = 0;
  J[976] =
    x10210 * x1063 + x1060 * x1929 +
    (-x1926 * x37) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (x182 * x1929 - x1926 * x81) * (x1062 + (-x141) * (-x1063)) +
    (x183 * x1929) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1032] = -sc[24] * x10039;
  J[1088] = 0;
  J[1144] = 0;
  J[1200] = 0;
  J[1256] =
    10000000.0 * sc[0] * x2108 + 200000.0 * sc[10] * x5566 + x10210 * x1067 -
    x10210 * x1068 +
    (-x1926 * x37) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x1926 * x87 - x1926 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (x182 * x1929 - x1926 * x81) * (-x1033 + (-x141) * (-x1067 + x1068)) +
    (x183 * x1929) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1312] = 0;
  J[1368] =
    -sc[18] * x10039 - 20000000.0 * sc[25] - 100000.0 * sc[26] * x10129 -
    300000.0 * sc[3] * x1106 -
    150000.0 * sc[6] * exp(-2415.43999586265 * invT) - x10209 * x678 * x733 -
    x10210 * x1070 - x10210 * x463 - x1072 * x1926 - x1074 * x1926 +
    x1076 * x1929 - x1388 * x7488 - x3567 - x7216 - x8358 +
    (-x1926 * x37) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (x182 * x1929 - x1926 * x81) * (x1082 + (-x141) * (x1070 + x463)) +
    (x183 * x1929) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1424] =
    -20000000.0 * sc[24] - x10210 * x1089 - x1085 * x1926 + x1086 * x1929 -
    x1926 * x677 +
    (-x1926 * x37) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x182 * x1929 - x1926 * x81) * (x1088 + (-x141) * (x1089)) +
    (x183 * x1929) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1480] =
    -100000.0 * sc[24] * x10129 + 1000000.0 * sc[4] - x10210 * x1093 -
    x1929 * x891 +
    (-x1926 * x37) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x182 * x1929 - x1926 * x81) * (x1092 + (-x141) * (x1093)) +
    (x183 * x1929) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1536] = 0;
  J[1592] = 0;
  J[1648] = 0;
  J[1704] =
    100000.0 * sc[2] + 100000.0 * sc[4] - x10210 * x1099 + x1929 * x886 +
    (-x1926 * x37) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x182 * x1929 - x1926 * x81) * (x1098 + (-x141) * (x1099)) +
    (x183 * x1929) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1760] =
    x10210 * x1104 + x1100 * x1929 - x1389 * x7488 +
    (-x1926 * x37) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x182 * x1929 - x1926 * x81) * (x726 + (-x141) * (-x1104)) +
    (x183 * x1929) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1816] =
    x10210 * x585 - x10210 * x688 - x1390 * x7488 + x1929 * x928 -
    x1929 * x930 +
    (-x1926 * x37) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x182 * x1929 - x1926 * x81) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x183 * x1929) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1872] = 0;
  J[1928] = 0;
  J[1984] = 0;
  J[2040] = x10210 * x692 +
            (-x1926 * x37) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-x1926 * x87 - x1926 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (x182 * x1929 - x1926 * x81) * (0 + (-x141) * (-x692)) +
            (x183 * x1929) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2096] = 0;
  J[2152] = 0;
  J[2208] = 0;
  J[2264] = -x1391 * x7488;
  J[2320] = 0;
  J[2376] = x10045;
  J[2432] = 0;
  J[2488] = x10210 * x710 +
            (-x1926 * x37) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-x1926 * x87 - x1926 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (x182 * x1929 - x1926 * x81) * (0 + (-x141) * (-x710)) +
            (x183 * x1929) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2544] =
    -x10210 * x103 + x10210 * x545 - x1929 * x927 + x1929 * x933 +
    1.415e+78 * exp(-60738.251562629703 * invT - 17.71 * tc[0]) +
    (-x1926 * x37) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x182 * x1929 - x1926 * x81) * (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x183 * x1929) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2600] =
    x10210 * x126 +
    (-x1926 * x37) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x1926 * x87 - x1926 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x182 * x1929 - x1926 * x81) * (x135 + (-x141) * (-x126)) +
    (x183 * x1929) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2656] =
    -x10210 * x481 + x129 * x1926 - x1929 * x83 +
    (-x1926 * x37) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x182 * x1929 - x1926 * x81) * (x461 + (-x141) * (x481)) +
    (x183 * x1929) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2712] =
    -x10210 * x464 + x1926 * x555 + x1926 * x558 + x1929 * x562 +
    (-x1926 * x37) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x182 * x1929 - x1926 * x81) * (x130 + (-x141) * (x464)) +
    (x183 * x1929) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2768] =
    x10210 * x586 + x1929 * x967 +
    (-x1926 * x37) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x182 * x1929 - x1926 * x81) * (x132 + (-x141) * (-x586)) +
    (x183 * x1929) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2824] =
    -x10210 * x127 - x1926 * x594 + x1929 * x50 +
    (-x1926 * x37) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x182 * x1929 - x1926 * x81) * (x106 + (-x141) * (x127)) +
    (x183 * x1929) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2880] = 0;
  J[2936] = 0;
  J[2992] = -x1392 * x7488;
  J[3048] = 0;
  J[25] =
    sc[23] * x200 - 81600000.0 * sc[25] +
    50000000.0 * sc[26] * exp(-1962.5449966384101 * invT) - x10294 * x606 +
    x1926 * x466 - x1926 * x476 - x1926 * x505 + x1926 * x92 +
    (-x1926 * x37) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x1926 * x81) * (x557 - x604 + (-x141) * (-x681 + x734));
  J[81] =
    -sc[25] * x2544 - x10294 * x617 + x2481 +
    (-x1926 * x37) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x1926 * x81) * (x758 - x771 + (-x141) * (x770 - x772));
  J[137] =
    -sc[26] * x10141 * x640 + x1926 * x493 - x1926 * x644 + x1926 * x683 +
    x1926 * x789 +
    (-x1926 * x37) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x1926 * x81) * (x792 - x803 + (-x141) * (x801 - x804));
  J[193] =
    -1000.0 * sc[25] - x10294 * x645 + x1926 * x785 + x1926 * x809 + x5159 +
    (-x1926 * x37) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x1926 * x81) * (x821 - x841 + (-x141) * (x817 - x842));
  J[249] =
    -sc[26] * x10141 * x658 + sc[26] * x6664 - x10294 * x647 + x1926 * x68 -
    x1926 * x807 + x1926 * x820 + x1926 * x837 + x8682 +
    (-x1926 * x37) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x1926 * x81) * (-x468 + x669 + (-x141) * (x829 - x872));
  J[305] =
    -sc[25] * x6754 - x10294 * x672 +
    (-x1926 * x37) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x1926 * x81) * (x869 - x896 + (-x141) * (x895 - x897));
  J[361] =
    -x10294 * x680 +
    (-x1926 * x37) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x1926 * x87 - x1926 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x1926 * x81) * (0 + (-x141) * (x909 + x913));
  J[417] = 0;
  J[473] =
    -8000000.0 * sc[25] + 100000.0 * sc[26] * x3341 - x10294 * x689 -
    x10294 * x693 - x1293 * x6854 +
    (-x1926 * x37) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x1926 * x81) * (x920 + (-x141) * (-x922));
  J[529] =
    x10294 * x628 + x8116 - x8124 +
    (-x1926 * x37) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-x1926 * x81) * (x885 - x936 + (-x141) * (x935 - x937));
  J[585] =
    -sc[25] * x6919 - 300000.0 * sc[25] - x10294 * x657 - x10294 * x706 -
    x1295 * x6854 + x1926 * x21 - x1926 * x470 + x1926 * x79 - x1926 * x86 +
    x5570 + x8820 +
    (-x1926 * x37) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x1926 * x81) * (-x546 + x926 + (-x141) * (x465 - x977));
  J[641] =
    -sc[25] * x8861 - x10294 * x717 +
    (-x1926 * x37) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x1926 * x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005));
  J[697] = 0;
  J[753] =
    -x10294 * x724 + x9401 +
    (-x1926 * x37) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x1926 * x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553));
  J[809] =
    sc[17] * x9680 + sc[26] * x9655 - x10294 * x725 + x3809 +
    (-x1926 * x37) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x1926 * x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047));
  J[865] =
    -sc[25] * x6638 - 3980000.0 * sc[25] - sc[26] * x10141 * x727 +
    (-x1926 * x37) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x1926 * x81) * (x1057 + (-x141) * (x1058));
  J[921] = 0;
  J[977] =
    sc[14] * x9680 - 3980000.0 * sc[25] - x10294 * x728 - x1297 * x6854 +
    (-x1926 * x37) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x1926 * x81) * (x1062 + (-x141) * (-x1063));
  J[1033] = 0;
  J[1089] = 0;
  J[1145] = -x1298 * x6854;
  J[1201] = 0;
  J[1257] =
    -100000.0 * sc[25] * x5566 + x10177 - x10294 * x561 +
    (-x1926 * x37) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x1926 * x87 - x1926 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-x1926 * x81) * (-x1033 + (-x141) * (-x1067 + x1068));
  J[1313] = sc[0] * x200 + 4700000.0 * sc[26] * x10204 + x10179 + x3563 +
            x5994 + x8353 + x9453 + x9717;
  J[1369] =
    -20000000.0 * sc[25] - x1072 * x1926 - x1074 * x1926 +
    (-x1926 * x37) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-x1926 * x81) * (x1082 + (-x141) * (x1070 + x463));
  J[1425] =
    -81600000.0 * sc[0] - sc[10] * x6919 - 300000.0 * sc[10] - sc[11] * x8861 -
    sc[15] * x6638 - 3980000.0 * sc[15] - 3980000.0 * sc[17] - sc[1] * x2544 -
    100000.0 * sc[22] * x5566 - 20000000.0 * sc[24] - 6400000.0 * sc[25] -
    sc[32] * x8861 - 6310000.0 * sc[37] - 1000.0 * sc[3] - sc[5] * x6754 -
    8000000.0 * sc[8] + x10007 - x10294 * x751 - x1085 * x1926 - x1299 * x6854 -
    x1926 * x677 + x8037 - x8366 -
    120000000000000.0 * exp(-24808.581624172701 * invT) -
    100000000000.0 * exp(-18619.016634774602 * invT) +
    (-x1926 * x37) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x1926 * x81) * (x1088 + (-x141) * (x1089));
  J[1481] =
    1400000.0 * sc[10] * x8818 + sc[14] * x9655 + 4700000.0 * sc[23] * x10204 +
    1400000.0 * sc[31] * x8818 + sc[4] * x6664 + x10187 + x10341 + x3600 +
    x3614 + x6040 + x8388 +
    (-x1926 * x37) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x1926 * x81) * (x1092 + (-x141) * (x1093));
  J[1537] = 0;
  J[1593] = -sc[25] * x8055 - sc[26] * x10141 * x760;
  J[1649] = 0;
  J[1705] =
    0 +
    (-x1926 * x37) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x1926 * x81) * (x1098 + (-x141) * (x1099));
  J[1761] =
    -sc[25] * x6919 - x10294 * x762 + x8820 +
    (-x1926 * x37) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x1926 * x81) * (x726 + (-x141) * (-x1104));
  J[1817] =
    -sc[25] * x8861 - x10294 * x764 +
    (-x1926 * x37) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x1926 * x81) * (-x564 + x612 + (-x141) * (-x585 + x688));
  J[1873] = 0;
  J[1929] = -x1300 * x6854;
  J[1985] = 0;
  J[2041] = 0 +
            (-x1926 * x37) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-x1926 * x87 - x1926 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (-x1926 * x81) * (0 + (-x141) * (-x692));
  J[2097] = -6310000.0 * sc[25] + x10200 - x10294 * x767;
  J[2153] = 0;
  J[2209] = 0;
  J[2265] = 0;
  J[2321] = 0;
  J[2377] = 0;
  J[2433] = 0;
  J[2489] = 0 +
            (-x1926 * x37) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-x1926 * x87 - x1926 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (-x1926 * x81) * (0 + (-x141) * (-x710));
  J[2545] =
    0 +
    (-x1926 * x37) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x1926 * x81) * (-x482 + x712 + (-x141) * (x103 - x545));
  J[2601] =
    0 +
    (-x1926 * x37) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x1926 * x87 - x1926 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x1926 * x81) * (x135 + (-x141) * (-x126));
  J[2657] =
    x129 * x1926 +
    (-x1926 * x37) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x1926 * x87 - x1926 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x1926 * x81) * (x461 + (-x141) * (x481));
  J[2713] =
    x1926 * x555 + x1926 * x558 +
    (-x1926 * x37) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x1926 * x81) * (x130 + (-x141) * (x464));
  J[2769] =
    0 +
    (-x1926 * x37) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x1926 * x81) * (x132 + (-x141) * (-x586));
  J[2825] =
    -x1926 * x594 +
    (-x1926 * x37) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x1926 * x87 - x1926 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x1926 * x81) * (x106 + (-x141) * (x127));
  J[2881] = 0;
  J[2937] = 0;
  J[2993] = 0;
  J[3049] = 0;
  J[26] = 50000000.0 * sc[25] + x10294 * x606 - x1929 * x536 + x1929 * x544 +
          x2119 - x383 * x3977 - x383 * x6360 + x3977 * x402 - x3981 * x606 +
          x402 * x6360 - x4935 * x681 + x4935 * x734 - x606 * x6364 +
          (x182 * x1929) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183 * x1929) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[82] = sc[25] * x2544 + x10294 * x617 + x1929 * x511 - x1929 * x742 +
          x2115 * x770 - x2115 * x772 - x3977 * x403 + x3977 * x404 -
          x3981 * x617 - x403 * x6360 + x404 * x6360 + x4935 * x770 -
          x4935 * x772 - x617 * x6364 +
          (x182 * x1929) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183 * x1929) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[138] = sc[26] * x10141 * x640 + x1929 * x543 - x1929 * x753 + x2115 * x801 -
           x2115 * x804 - x405 * x6360 + x406 * x6360 + x4159 + x4935 * x801 -
           x4935 * x804 - x6364 * x640 +
           (x182 * x1929) * (x792 - x803 + (-x141) * (x801 - x804)) +
           (x183 * x1929) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[194] = x10294 * x645 + x10352 + 3.0e-25 * x1106 * x678 * x733 -
           x1929 * x741 + x1929 * x763 + x2115 * x817 - x2115 * x842 -
           x3977 * x407 - x3981 * x645 + x4935 * x817 - x4935 * x842 - x5159 +
           x6555 + (x182 * x1929) * (x821 - x841 + (-x141) * (x817 - x842)) +
           (x183 * x1929) *
             (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[250] = sc[26] * x10141 * x658 + x10294 * x647 + x1929 * x793 -
           x1929 * x796 + x2115 * x829 - x2115 * x872 + x4285 + x4935 * x829 -
           x4935 * x872 + x6670 +
           (x182 * x1929) * (-x468 + x669 + (-x141) * (x829 - x872)) +
           (x183 * x1929) *
             (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[306] = sc[25] * x6754 + x10294 * x672 + x10353 + x1929 * x799 -
           x1929 * x812 + x2115 * x895 - x2115 * x897 + x3977 * x413 -
           x3981 * x672 + x413 * x6360 + x4935 * x895 - x4935 * x897 -
           x6364 * x672 +
           (x182 * x1929) * (x869 - x896 + (-x141) * (x895 - x897)) +
           (x183 * x1929) *
             (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[362] = x10294 * x680 + x10352 + x2115 * x909 + x2115 * x913 - x3977 * x416 -
           x3981 * x680 - x416 * x6360 + x4935 * x909 + x4935 * x913 -
           x6364 * x680 + (x182 * x1929) * (0 + (-x141) * (x909 + x913)) +
           (x183 * x1929) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[418] = x10354;
  J[474] = -100000.0 * sc[26] * x3341 + 5000000.0 * sc[37] + x10294 * x689 +
           x10294 * x693 + x1929 * x915 - x2115 * x922 + x4433 - x4935 * x922 +
           x6864 + (x182 * x1929) * (x920 + (-x141) * (-x922)) +
           (x183 * x1929) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[530] = -x10294 * x628 - x131 * x6363 + x1929 * x834 - x1929 * x835 +
           x2115 * x935 - x2115 * x937 - x3977 * x420 + x3977 * x421 +
           x3981 * x628 - x420 * x6360 + x421 * x6360 + x4935 * x935 -
           x4935 * x937 + x628 * x6364 + x8124 +
           (x182 * x1929) * (x885 - x936 + (-x141) * (x935 - x937)) +
           (x183 * x1929) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[586] = 300000.0 * sc[25] - 2.0e-25 * sc[26] * x5566 + x10294 * x657 +
           x10294 * x706 - x1929 * x831 + x1929 * x836 + x2115 * x465 -
           x2115 * x977 + x4505 + x465 * x4935 - x4935 * x977 + x6944 - x8820 +
           (x182 * x1929) * (-x546 + x926 + (-x141) * (x465 - x977)) +
           (x183 * x1929) *
             (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[642] =
    sc[25] * x8861 + x1001 * x2115 + x1001 * x4935 - x1005 * x2115 -
    x1005 * x4935 + x10294 * x717 + x10353 + x1929 * x498 - x1929 * x864 +
    x3977 * x424 - x3981 * x717 + x424 * x6360 - x6364 * x717 +
    (x182 * x1929) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x183 * x1929) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[698] = sc[22] * x4561 + x10354 + x7003;
  J[754] =
    -x1027 * x2115 - x1027 * x4935 + x10294 * x724 + x10353 - x1929 * x861 +
    x1929 * x866 + x2115 * x553 -
    9830000.0 * x370 * exp(-16319.3164720471 * invT) + x3977 * x425 -
    x3981 * x724 + x425 * x6360 + x4935 * x553 - x6364 * x724 +
    (x182 * x1929) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x183 * x1929) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[810] =
    sc[20] * x4622 - sc[26] * x9655 + x10294 * x725 + x10354 + x1039 * x2115 +
    x1039 * x4935 - x1047 * x2115 - x1047 * x4935 + x1929 * x887 -
    x1929 * x890 - x3981 * x725 - x6364 * x725 +
    (x182 * x1929) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x183 * x1929) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[866] = 9000000.0 * sc[17] + sc[20] * x7102 + sc[25] * x6638 +
           sc[26] * x10141 * x727 + x10353 + x1055 * x1929 + x1058 * x2115 +
           x1058 * x4935 - 2350000.0 * x370 * exp(-19197.7158004501 * invT) +
           x3977 * x426 - x3981 * x727 + x426 * x6360 - x6364 * x727 +
           (x182 * x1929) * (x1057 + (-x141) * (x1058)) +
           (x183 * x1929) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[922] = x10354;
  J[978] = 9000000.0 * sc[15] + x10294 * x728 + x10354 + x1060 * x1929 -
           x1063 * x2115 - x1063 * x4935 - x3981 * x728 - x6364 * x728 +
           (x182 * x1929) * (x1062 + (-x141) * (-x1063)) +
           (x183 * x1929) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1034] = x10352 - x3977 * x427 - x427 * x6360;
  J[1090] = x10354;
  J[1146] =
    sc[14] * x4622 + sc[15] * x7102 + x10352 - x3977 * x428 - x428 * x6360;
  J[1202] = x10354;
  J[1258] =
    sc[12] * x4561 + 100000.0 * sc[25] * x5566 + x10294 * x561 + x10354 -
    x1067 * x2115 - x1067 * x4935 + x1068 * x2115 + x1068 * x4935 -
    x3981 * x561 - x561 * x6364 +
    (x182 * x1929) * (-x1033 + (-x141) * (-x1067 + x1068)) +
    (x183 * x1929) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1314] = -2350000.0 * sc[26] * x10204 + x10354;
  J[1370] =
    -100000.0 * sc[26] * x10129 + x10354 + x1070 * x2115 + x1070 * x4935 +
    x1076 * x1929 + x2115 * x463 + x463 * x4935 + x7216 +
    (x182 * x1929) * (x1082 + (-x141) * (x1070 + x463)) +
    (x183 * x1929) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1426] = 50000000.0 * sc[0] + 300000.0 * sc[10] + sc[11] * x8861 +
            sc[15] * x6638 + sc[1] * x2544 + 100000.0 * sc[22] * x5566 +
            3200000.0 * sc[25] + sc[28] * x8055 + sc[32] * x8861 +
            sc[5] * x6754 + x10294 * x751 + x10354 + x1086 * x1929 +
            x1089 * x2115 + x1089 * x4935 - x3981 * x751 - x6364 * x751 +
            x8366 + (x182 * x1929) * (x1088 + (-x141) * (x1089)) +
            (x183 * x1929) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1482] = kf_qss[152] * sc[26] * x10141 * x610 - 10000000.0 * sc[0] * x1019 -
            2.0e-25 * sc[10] * x5566 - 1400000.0 * sc[10] * x8818 -
            sc[14] * x9655 - 2350000.0 * sc[23] * x10204 -
            100000.0 * sc[24] * x10129 + sc[26] * x10141 * x759 -
            1400000.0 * sc[31] * x8818 + x10141 * x131 - x10187 + x10352 +
            x1093 * x2115 + x1093 * x4935 - x1929 * x891 - x3600 - x3614 +
            x4785 - x6040 + x7253 - x8388 - x9935 -
            5000000000000000.0 * exp(-35728.383272135099 * invT) +
            (x182 * x1929) * (x1092 + (-x141) * (x1093)) +
            (x183 * x1929) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1538] = x10354;
  J[1594] = sc[25] * x8055 + sc[26] * x10141 * x760 + sc[8] * x6862 -
            sc[9] * x6363 * x760 + x10354 - x3981 * x760;
  J[1650] = x10354;
  J[1706] = x10352 + x1099 * x2115 + x1099 * x4935 + x1929 * x886 -
            x3977 * x430 - x430 * x6360 +
            (x182 * x1929) * (x1098 + (-x141) * (x1099)) +
            (x183 * x1929) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1762] = x10294 * x762 + x10352 + x1100 * x1929 - x1104 * x2115 -
            x1104 * x4935 - x3977 * x431 - x3981 * x762 - x431 * x6360 -
            x6364 * x762 - x8820 +
            (x182 * x1929) * (x726 + (-x141) * (-x1104)) +
            (x183 * x1929) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1818] =
    sc[25] * x8861 + x10294 * x764 + x10353 + x1929 * x928 - x1929 * x930 -
    x2115 * x585 + x2115 * x688 + x367 * x3977 + x367 * x6360 - x3981 * x764 -
    x4935 * x585 + x4935 * x688 - x6364 * x764 +
    (x182 * x1929) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x183 * x1929) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1874] = x10354;
  J[1930] = x10354;
  J[1986] = x10354;
  J[2042] = x10354 - x2115 * x692 - x4935 * x692 +
            (x182 * x1929) * (0 + (-x141) * (-x692)) +
            (x183 * x1929) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2098] = 5000000.0 * sc[8] - x10200 + x10294 * x767 + x10354 - x3981 * x767 -
            x6364 * x767;
  J[2154] = x10354;
  J[2210] = x10354;
  J[2266] = x10354;
  J[2322] = x10354;
  J[2378] = x10354;
  J[2434] = x10354;
  J[2490] = x10354 - x2115 * x710 - x4935 * x710 +
            (x182 * x1929) * (0 + (-x141) * (-x710)) +
            (x183 * x1929) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2546] =
    x103 * x2115 + x103 * x4935 + x10354 - x1929 * x927 + x1929 * x933 -
    x2115 * x545 - x4935 * x545 +
    (x182 * x1929) * (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x183 * x1929) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2602] = x10354 - x126 * x2115 - x126 * x4935 +
            (x182 * x1929) * (x135 + (-x141) * (-x126)) +
            (x183 * x1929) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2658] = x10354 - x1929 * x83 + x2115 * x481 + x481 * x4935 +
            (x182 * x1929) * (x461 + (-x141) * (x481)) +
            (x183 * x1929) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2714] = x10354 - x1430 * x6553 + x1929 * x562 + x2115 * x464 +
            x464 * x4935 + (x182 * x1929) * (x130 + (-x141) * (x464)) +
            (x183 * x1929) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2770] = x10354 + x1929 * x967 - x2115 * x586 - x4935 * x586 +
            (x182 * x1929) * (x132 + (-x141) * (-x586)) +
            (x183 * x1929) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2826] = x10354 + x127 * x2115 + x127 * x4935 + x1929 * x50 +
            (x182 * x1929) * (x106 + (-x141) * (x127)) +
            (x183 * x1929) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2882] = x10354;
  J[2938] = x10354;
  J[2994] = x10352 - x382 * x3977 - x382 * x6360;
  J[3050] = x10354;
  J[27] = 0;
  J[83] = 0;
  J[139] = 0;
  J[195] = 0 + (-x146 * x1500) * (-kf_qss[376] * sc_qss[21] * x147 * x151 +
                                  (-x151 * x153) * (x1414 - x1418));
  J[251] = x1020 * x1500 +
           (-x146 * x1500) * (x1421 - x1423 * (-sc_qss[21] * x153 + x1411) +
                              (-x151 * x153) * (-x1404 + x1425));
  J[307] = 0;
  J[363] = 0;
  J[419] = 0;
  J[475] = 100000.0 * sc[18] * x4957;
  J[531] = 0;
  J[587] = 0;
  J[643] = 0;
  J[699] = 0;
  J[755] = 0;
  J[811] = 0;
  J[867] = 0;
  J[923] = 0;
  J[979] = 0;
  J[1035] = 100000.0 * sc[8] * x4957;
  J[1091] = 0;
  J[1147] = 0;
  J[1203] = 0;
  J[1259] = 0;
  J[1315] = 0;
  J[1371] = 0;
  J[1427] = 0;
  J[1483] = 0;
  J[1539] = -100000000000000.0 * exp(-15599.7166399463 * invT);
  J[1595] = 0;
  J[1651] = 0;
  J[1707] = 0;
  J[1763] = 0;
  J[1819] = 0;
  J[1875] = 0;
  J[1931] = 0;
  J[1987] = 0;
  J[2043] = 0;
  J[2099] = 0;
  J[2155] = 0;
  J[2211] = 0;
  J[2267] = 0;
  J[2323] = 0;
  J[2379] = 0;
  J[2435] = 0;
  J[2491] = 0;
  J[2547] = 0;
  J[2603] = 0;
  J[2659] = 0 + (-x146 * x1500) * (0 + (-x151 * x153) * (-x1428));
  J[2715] = 0;
  J[2771] = 0;
  J[2827] = 0;
  J[2883] = 0;
  J[2939] = 0;
  J[2995] = 0;
  J[3051] = 0;
  J[28] =
    18100000.0 * sc[15] * x190 - 18100000.0 * sc[15] * x233 - sc[28] * x136 -
    x10142 * x606 - x10294 * x606 - x10361 * x606 - x2136 * x606 -
    x3952 * x606 + x466 * x554 - x476 * x554 - x4926 * x606 - x505 * x554 +
    x554 * x92 - x606 * x6324 - x606 * x7776 - x606 * x8576 - x606 * x9289 -
    x606 * x9528 +
    (-x37 * x554) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x554 * x87 - x554 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x554 * x81) * (x557 - x604 + (-x141) * (-x681 + x734));
  J[84] =
    -kf_qss[70] * sc[1] * x2135 * x610 - 18100000.0 * sc[15] * x248 +
    18100000.0 * sc[15] * x251 - x10142 * x617 - x10294 * x617 - x10361 * x617 -
    x131 * x2135 - x3952 * x617 - x4926 * x617 - x617 * x6324 - x617 * x7776 -
    x617 * x8576 - x617 * x9289 - x617 * x9528 +
    (-x37 * x554) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x554 * x87 - x554 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x554 * x81) * (x758 - x771 + (-x141) * (x770 - x772));
  J[140] =
    -18100000.0 * sc[15] * x253 + 18100000.0 * sc[15] * x254 -
    sc[22] * x10141 * x640 - sc[26] * x10141 * x640 - sc[28] * x4132 -
    x10361 * x640 - x2136 * x640 - x3952 * x640 - x4926 * x640 + x493 * x554 -
    x554 * x644 + x554 * x683 + x554 * x789 - x6324 * x640 - x640 * x7776 -
    x640 * x8576 - x640 * x9289 - x640 * x9528 +
    (-x37 * x554) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x554 * x87 - x554 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x554 * x81) * (x792 - x803 + (-x141) * (x801 - x804));
  J[196] =
    -18100000.0 * sc[15] * x256 + 18100000.0 * sc[15] * x258 - sc[28] * x5261 -
    x10142 * x645 - x10294 * x645 - x10361 * x645 + x1442 * x6553 -
    x1447 * x6553 - x2136 * x645 - x3952 * x645 - x4926 * x645 + x554 * x785 +
    x554 * x809 - x6324 * x645 - x645 * x7776 - x645 * x8576 - x645 * x9289 -
    x645 * x9528 +
    (-x37 * x554) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x554 * x87 - x554 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x1500 * x161) * (-kf_qss[378] * sc_qss[24] * x157 * x164 +
                       (-x164 * x166) * (x1442 - x1447)) +
    (-x554 * x81) * (x821 - x841 + (-x141) * (x817 - x842));
  J[252] =
    100000.0 * kf_qss[330] * sc[4] * x497 * x539 * x616 / ((x30) * (x30)) -
    18100000.0 * sc[15] * x260 + 18100000.0 * sc[15] * x263 -
    sc[22] * x10141 * x658 - sc[26] * x10141 * x658 + 1000000.0 * sc[26] -
    x10142 * x647 - x10294 * x647 - x10361 * x647 - x10361 * x658 -
    x1439 * x6553 + x1452 * x6553 - x2136 * x647 - x2136 * x658 + x4293 -
    x4926 * x647 - x4926 * x658 + 100000.0 * x539 * x77 * x80 + x554 * x68 -
    x554 * x807 + x554 * x820 - x647 * x7776 - x647 * x8576 - x647 * x9289 -
    x647 * x9528 - x658 * x7776 - x658 * x8576 - x658 * x9289 - x658 * x9528 +
    x6685 + 100000.0 * x539 * x616 / x34 +
    (-x37 * x554) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x554 * x87 - x554 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x1500 * x161) * (x1449 - x1451 * (-sc_qss[24] * x166 + x1435) +
                       (-x164 * x166) * (-x1439 + x1452)) +
    (-x554 * x81) * (-x468 + x669 + (-x141) * (x829 - x872));
  J[308] =
    -kf_qss[74] * sc[5] * x610 * x6323 - 18100000.0 * sc[15] * x265 +
    18100000.0 * sc[15] * x267 - x10142 * x672 - x10294 * x672 - x10361 * x672 -
    x131 * x6323 - x2136 * x672 - x3952 * x672 - x4926 * x672 - x672 * x7776 -
    x672 * x8576 - x672 * x9289 - x672 * x9528 +
    (-x37 * x554) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x554 * x87 - x554 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x554 * x81) * (x869 - x896 + (-x141) * (x895 - x897));
  J[364] =
    -18100000.0 * sc[15] * x269 + 18100000.0 * sc[15] * x270 - x10142 * x680 -
    x10294 * x680 - x10361 * x680 - x2136 * x680 - x3952 * x680 - x4926 * x680 -
    x6324 * x680 - x680 * x7776 - x680 * x8576 - x680 * x9289 - x680 * x9528 +
    (-x37 * x554) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x554 * x87 - x554 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x554 * x81) * (0 + (-x141) * (x909 + x913));
  J[420] = 18100000.0 * sc[15] * x188 - 18100000.0 * sc[15] * x272;
  J[476] =
    18100000.0 * sc[15] * x274 - 18100000.0 * sc[15] * x275 - x10142 * x689 -
    x10142 * x693 - x10294 * x689 - x10294 * x693 - x10361 * x689 -
    x10361 * x693 - x2136 * x689 - x2136 * x693 - x3952 * x689 - x3952 * x693 -
    x4926 * x689 - x4926 * x693 - x6324 * x689 - x6324 * x693 - x689 * x8576 -
    x689 * x9289 - x689 * x9528 - x693 * x8576 - x693 * x9289 - x693 * x9528 +
    x8085 +
    (-x37 * x554) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x554 * x87 - x554 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x554 * x81) * (x920 + (-x141) * (-x922));
  J[532] =
    -18100000.0 * sc[15] * x278 + 18100000.0 * sc[15] * x279 + x10142 * x628 +
    x10294 * x628 + x10361 * x628 - x131 * x7775 + x2136 * x628 + x3952 * x628 +
    x4926 * x628 + x628 * x6324 + x628 * x7776 + x628 * x8576 + x628 * x9289 +
    x628 * x9528 +
    (-x37 * x554) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x554 * x87 - x554 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-x554 * x81) * (x885 - x936 + (-x141) * (x935 - x937));
  J[588] =
    -18100000.0 * sc[15] * x281 + 18100000.0 * sc[15] * x282 - sc[28] * x8784 -
    x10142 * x657 - x10142 * x706 - x10294 * x657 - x10294 * x706 -
    x10361 * x657 - x10361 * x706 + x21 * x554 - x2136 * x657 - x2136 * x706 -
    x3952 * x657 - x3952 * x706 - x470 * x554 + x554 * x79 - x554 * x86 +
    x5645 - x6324 * x657 - x6324 * x706 - x657 * x7776 - x657 * x8576 -
    x657 * x9289 - x657 * x9528 - x706 * x7776 - x706 * x8576 - x706 * x9289 -
    x706 * x9528 +
    (-x37 * x554) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x554 * x87 - x554 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x554 * x81) * (-x546 + x926 + (-x141) * (x465 - x977));
  J[644] =
    -kf_qss[78] * sc[11] * x610 * x8575 - 18100000.0 * sc[15] * x284 +
    18100000.0 * sc[15] * x286 - x10142 * x717 - x10294 * x717 - x10361 * x717 -
    x131 * x8575 - x2136 * x717 - x3952 * x717 - x4926 * x717 - x6324 * x717 -
    x717 * x7776 - x717 * x9289 - x717 * x9528 +
    (-x37 * x554) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x554 * x87 - x554 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x554 * x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005));
  J[700] = -18100000.0 * sc[15] * x288 + 18100000.0 * sc[15] * x289;
  J[756] =
    -kf_qss[80] * sc[13] * x610 * x9288 - x10142 * x724 - x10294 * x724 -
    x10361 * x724 + x10399 - x131 * x9288 - x2136 * x724 - x3952 * x724 -
    x4926 * x724 - x6324 * x724 - x724 * x7776 - x724 * x8576 - x724 * x9528 +
    (-x37 * x554) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x554 * x87 - x554 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x554 * x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553));
  J[812] =
    -kf_qss[86] * sc[14] * x610 * x9527 + 18100000.0 * sc[15] * x295 -
    x10142 * x725 - x10294 * x725 - x10361 * x725 + x10398 - x131 * x9527 -
    x2136 * x725 - x3952 * x725 - x4926 * x725 - x6324 * x725 - x725 * x7776 -
    x725 * x8576 - x725 * x9289 +
    (-x37 * x554) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x554 * x87 - x554 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x554 * x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047));
  J[868] =
    -18100000.0 * sc[15] * x297 + 18100000.0 * sc[15] * x298 -
    sc[22] * x10141 * x727 - sc[26] * x10141 * x727 -
    1000000.0 * sc[28] * x2130 - x10361 * x727 + 18100000.0 * x197 -
    x2136 * x727 - x3952 * x727 - x4926 * x727 - x6324 * x727 - x727 * x7776 -
    x727 * x8576 - x727 * x9289 - x727 * x9528 +
    (-x37 * x554) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x554 * x87 - x554 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x554 * x81) * (x1057 + (-x141) * (x1058));
  J[924] = -18100000.0 * sc[15] * x228 + 18100000.0 * sc[15] * x231;
  J[980] =
    18100000.0 * sc[15] * x303 + x10007 - x10142 * x728 - x10294 * x728 -
    x10361 * x728 + x10398 - x2136 * x728 - x3952 * x728 - x4926 * x728 -
    x6324 * x728 - x728 * x7776 - x728 * x8576 - x728 * x9289 - x728 * x9528 +
    (-x37 * x554) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x554 * x87 - x554 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x554 * x81) * (x1062 + (-x141) * (-x1063));
  J[1036] = -18100000.0 * sc[15] * x305 + 18100000.0 * sc[15] * x306;
  J[1092] = 18100000.0 * sc[15] * x307 + x10398;
  J[1148] = 18100000.0 * sc[15] * x308 + x10398;
  J[1204] = x10399;
  J[1260] =
    -kf_qss[88] * sc[22] * x10141 * x610 + 18100000.0 * sc[15] * x309 -
    x10141 * x131 - x10294 * x561 - x10361 * x561 + x10398 - x2136 * x561 -
    x3952 * x561 - x4926 * x561 - x561 * x6324 - x561 * x7776 - x561 * x8576 -
    x561 * x9289 - x561 * x9528 +
    (-x37 * x554) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x554 * x87 - x554 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-x554 * x81) * (-x1033 + (-x141) * (-x1067 + x1068));
  J[1316] = x10399;
  J[1372] =
    x10399 - x1072 * x554 - x1074 * x554 +
    (-x37 * x554) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x554 * x87 - x554 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-x554 * x81) * (x1082 + (-x141) * (x1070 + x463));
  J[1428] =
    x10007 - x10142 * x751 - x10294 * x751 - x10361 * x751 + x10399 -
    x1085 * x554 - x2136 * x751 - x3952 * x751 - x4926 * x751 - x554 * x677 -
    x6324 * x751 - x751 * x7776 - x751 * x8576 - x751 * x9289 - x751 * x9528 +
    (-x37 * x554) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x554 * x87 - x554 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x554 * x81) * (x1088 + (-x141) * (x1089));
  J[1484] =
    -sc[22] * x10141 * x759 + 1000000.0 * sc[4] - x10142 * x755 + x10341 -
    x10361 * x755 - x10361 * x759 + x10399 - x2136 * x755 - x2136 * x759 -
    x3952 * x755 - x3952 * x759 - x4926 * x755 - x4926 * x759 - x6324 * x755 -
    x6324 * x759 - x755 * x7776 - x755 * x8576 - x755 * x9289 - x755 * x9528 -
    x759 * x7776 - x759 * x8576 - x759 * x9289 - x759 * x9528 +
    (-x37 * x554) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x554 * x87 - x554 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x554 * x81) * (x1092 + (-x141) * (x1093));
  J[1540] = x10399;
  J[1596] = -1000000.0 * sc[15] * x2130 + 18100000.0 * sc[15] * x310 -
            sc[17] * x8055 - sc[22] * x10141 * x760 - sc[25] * x8055 -
            sc[26] * x10141 * x760 - sc[31] * x8804 - sc[37] * x8055 -
            sc[3] * x5261 - sc[8] * x6862 - sc[8] * x8063 -
            sc[9] * x760 * x7775 - x10361 * x760 + x10398 + x10421 -
            x2136 * x760 - x3952 * x760 - x4926 * x760 - x6324 * x760 -
            x760 * x8576 - x760 * x9289 - x760 * x9528 -
            9.85e+18 * exp(-41117.833762903603 * invT - 0.73 * tc[0]);
  J[1652] = x10399;
  J[1708] =
    x10399 +
    (-x37 * x554) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x554 * x87 - x554 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x554 * x81) * (x1098 + (-x141) * (x1099));
  J[1764] =
    18100000.0 * sc[15] * x311 - sc[28] * x8804 - x10142 * x762 -
    x10294 * x762 - x10361 * x762 + x10398 - x2136 * x762 - x3952 * x762 -
    x4926 * x762 - x6324 * x762 - x762 * x7776 - x762 * x8576 - x762 * x9289 -
    x762 * x9528 +
    (-x37 * x554) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x554 * x87 - x554 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x554 * x81) * (x726 + (-x141) * (-x1104));
  J[1820] =
    -kf_qss[150] * sc[32] * x10360 * x610 + 18100000.0 * sc[15] * x189 -
    18100000.0 * sc[15] * x232 - x10142 * x764 - x10294 * x764 - x10360 * x131 -
    x2136 * x764 - x3952 * x764 - x4926 * x764 - x6324 * x764 - x764 * x7776 -
    x764 * x8576 - x764 * x9289 - x764 * x9528 +
    (-x37 * x554) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x554 * x87 - x554 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x554 * x81) * (-x564 + x612 + (-x141) * (-x585 + x688));
  J[1876] = x10399;
  J[1932] = x10399;
  J[1988] = x10399;
  J[2044] = x10399 +
            (-x37 * x554) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-x554 * x87 - x554 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (-x554 * x81) * (0 + (-x141) * (-x692));
  J[2100] = x10007 - x10142 * x767 - x10294 * x767 - x10361 * x767 + x10399 -
            x2136 * x767 - x3952 * x767 - x4926 * x767 - x6324 * x767 -
            x767 * x7776 - x767 * x8576 - x767 * x9289 - x767 * x9528;
  J[2156] = 18100000.0 * sc[15] * x238 + x10398;
  J[2212] = x10399;
  J[2268] = x10399;
  J[2324] = x10399;
  J[2380] = x10399;
  J[2436] = x10399;
  J[2492] = x10399 +
            (-x37 * x554) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-x554 * x87 - x554 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (-x554 * x81) * (0 + (-x141) * (-x710));
  J[2548] =
    x10399 +
    (-x37 * x554) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x554 * x87 - x554 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x554 * x81) * (-x482 + x712 + (-x141) * (x103 - x545));
  J[2604] =
    x10399 +
    (-x37 * x554) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x554 * x87 - x554 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x554 * x81) * (x135 + (-x141) * (-x126));
  J[2660] =
    x10399 + x129 * x554 +
    (-x37 * x554) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x554 * x87 - x554 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x554 * x81) * (x461 + (-x141) * (x481));
  J[2716] =
    x10399 - x1430 * x6553 + x554 * x555 + x554 * x558 +
    (-x37 * x554) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x554 * x87 - x554 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x1500 * x161) * (0 + (-x164 * x166) * (-x1430)) +
    (-x554 * x81) * (x130 + (-x141) * (x464));
  J[2772] =
    x10399 +
    (-x37 * x554) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x554 * x87 - x554 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x554 * x81) * (x132 + (-x141) * (-x586));
  J[2828] =
    x10399 - x554 * x594 +
    (-x37 * x554) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x554 * x87 - x554 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x554 * x81) * (x106 + (-x141) * (x127));
  J[2884] = x10399;
  J[2940] = x10399;
  J[2996] = x10399;
  J[3052] = x10399;
  J[29] = 28000000.0 * sc[30] / x539;
  J[85] = -1000000.0 * sc[29] * x2474;
  J[141] = sc[30] * x4141;
  J[197] = 0;
  J[253] = 5.12 * sc[30] * x6647 - x4245;
  J[309] = -sc[29] * x6718;
  J[365] = 0;
  J[421] = 0;
  J[477] = sc[23] * x7815 + 100000.0 * sc[30] * x3341;
  J[533] = -x8118;
  J[589] = 0;
  J[645] = 0;
  J[701] = 0;
  J[757] = 0;
  J[813] = 0;
  J[869] = 0;
  J[925] = 0;
  J[981] = 0;
  J[1037] = 0;
  J[1093] = 0;
  J[1149] = 0;
  J[1205] = 0;
  J[1261] = 0;
  J[1317] = sc[8] * x7815;
  J[1373] = 0;
  J[1429] = 0;
  J[1485] = 0;
  J[1541] = 0;
  J[1597] = 0;
  J[1653] = -1000000.0 * sc[1] * x2474 - sc[5] * x6718 - x4796 - x8397 - x8398 -
            25000000000000.0 * exp(-22644.749961212401 * invT);
  J[1709] =
    28000000.0 * sc[0] / x539 + sc[2] * x4141 + 5.12 * sc[4] * x6647 + x8388;
  J[1765] = 0;
  J[1821] = 0;
  J[1877] = 0;
  J[1933] = 0;
  J[1989] = 0;
  J[2045] = 0;
  J[2101] = 0;
  J[2157] = 0;
  J[2213] = 0;
  J[2269] = 0;
  J[2325] = 0;
  J[2381] = 0;
  J[2437] = 0;
  J[2493] = 0;
  J[2549] = 0;
  J[2605] = 0;
  J[2661] = 0;
  J[2717] = 0;
  J[2773] = 0;
  J[2829] = 0;
  J[2885] = 0;
  J[2941] = 0;
  J[2997] = 0;
  J[3053] = 0;
  J[30] =
    -28000000.0 * sc[30] / x539 + x1912 * x519 - x1912 * x528 + x466 * x52 -
    x476 * x52 - x505 * x52 + x52 * x92 +
    (-x37 * x52) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x113 * x1912 - x52 * x81) * (x557 - x604 + (-x141) * (-x681 + x734)) +
    (-x121 * x1912) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[86] =
    1000000.0 * sc[29] * x2474 + x1912 * x521 + x1912 * x738 +
    (-x37 * x52) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x113 * x1912 - x52 * x81) * (x758 - x771 + (-x141) * (x770 - x772)) +
    (-x121 * x1912) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[142] =
    -sc[30] * x4141 - 200000.0 * sc[30] + x10058 - x1912 * x774 + x1912 * x790 +
    (-x37 * x52) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x113 * x1912 - x52 * x81) * (x792 - x803 + (-x141) * (x801 - x804)) +
    (-x121 * x1912) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[198] =
    x116 * x1912 + x1414 * x6544 - x1418 * x6544 - x1912 * x791 + x52 * x785 +
    x52 * x809 +
    (-x37 * x52) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x113 * x1912 - x52 * x81) * (x821 - x841 + (-x141) * (x817 - x842)) +
    (-x121 * x1912) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[254] =
    -5.12 * sc[30] * x6647 - 200000.0 * sc[30] + 2500000.0 * sc[53] -
    x1404 * x6544 + x1425 * x6544 - x1912 * x811 + x1912 * x823 + x4245 +
    x52 * x68 - x52 * x807 + x52 * x820 + x52 * x837 +
    (-x37 * x52) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x113 * x1912 - x52 * x81) * (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-x121 * x1912) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[310] =
    sc[29] * x6718 + x1912 * x826 + x1912 * x827 +
    (-x37 * x52) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x113 * x1912 - x52 * x81) * (x869 - x896 + (-x141) * (x895 - x897)) +
    (-x121 * x1912) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[366] =
    0 +
    (-x37 * x52) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x113 * x1912 - x52 * x81) * (0 + (-x141) * (x909 + x913)) +
    (-x121 * x1912) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[422] = 0;
  J[478] =
    -100000.0 * sc[30] * x3341 - x1912 * x844 +
    (-x37 * x52) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x113 * x1912 - x52 * x81) * (x920 + (-x141) * (-x922)) +
    (-x121 * x1912) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[534] =
    x1912 * x838 + x1912 * x859 + x8118 +
    (-x37 * x52) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-x113 * x1912 - x52 * x81) * (x885 - x936 + (-x141) * (x935 - x937)) +
    (-x121 * x1912) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[590] =
    5000000.0 * sc[53] * x8794 + x1912 * x870 - x1912 * x877 + x21 * x52 -
    x470 * x52 + x52 * x79 - x52 * x86 +
    (-x37 * x52) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x113 * x1912 - x52 * x81) * (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-x121 * x1912) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[646] =
    x1912 * x899 + x1912 * x924 +
    (-x37 * x52) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x113 * x1912 - x52 * x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x121 * x1912) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[702] = 0;
  J[758] =
    x1912 * x925 + x1912 * x938 +
    (-x37 * x52) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x113 * x1912 - x52 * x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x121 * x1912) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[814] =
    x1912 * x963 + x1912 * x966 +
    (-x37 * x52) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x113 * x1912 - x52 * x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x121 * x1912) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[870] =
    -100000.0 * sc[30] * x9892 +
    4000000.0 * sc[37] * exp(299.91713281961302 * invT) - x1041 * x1912 +
    (-x37 * x52) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x113 * x1912 - x52 * x81) * (x1057 + (-x141) * (x1058)) +
    (-x121 * x1912) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[926] = 0;
  J[982] =
    -x1912 * x39 +
    (-x37 * x52) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x113 * x1912 - x52 * x81) * (x1062 + (-x141) * (-x1063)) +
    (-x121 * x1912) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1038] = 0;
  J[1094] = 0;
  J[1150] = 0;
  J[1206] = 0;
  J[1262] =
    0 +
    (-x37 * x52) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-x113 * x1912 - x52 * x81) * (-x1033 + (-x141) * (-x1067 + x1068)) +
    (-x121 * x1912) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1318] = 0;
  J[1374] =
    -x1072 * x52 - x1074 * x52 + x1912 * x643 +
    (-x37 * x52) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-x113 * x1912 - x52 * x81) * (x1082 + (-x141) * (x1070 + x463)) +
    (-x121 * x1912) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1430] =
    -x1085 * x52 + x1912 * x684 - x52 * x677 +
    (-x37 * x52) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x113 * x1912 - x52 * x81) * (x1088 + (-x141) * (x1089)) +
    (-x121 * x1912) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1486] =
    0 +
    (-x37 * x52) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x113 * x1912 - x52 * x81) * (x1092 + (-x141) * (x1093)) +
    (-x121 * x1912) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1542] = 0;
  J[1598] = 0;
  J[1654] = 1000000.0 * sc[1] * x2474 + sc[5] * x6718 + x4796 + x8397;
  J[1710] =
    -28000000.0 * sc[0] / x539 - 100000.0 * sc[15] * x9892 - sc[2] * x4141 -
    200000.0 * sc[2] - 5.12 * sc[4] * x6647 - 200000.0 * sc[4] - x1095 * x1912 -
    x8388 - x9941 +
    (-x37 * x52) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x113 * x1912 - x52 * x81) * (x1098 + (-x141) * (x1099)) +
    (-x121 * x1912) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1766] =
    -x1912 * x968 +
    (-x37 * x52) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x113 * x1912 - x52 * x81) * (x726 + (-x141) * (-x1104)) +
    (-x121 * x1912) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1822] =
    x1002 * x1912 + x1912 * x587 +
    (-x37 * x52) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x113 * x1912 - x52 * x81) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x121 * x1912) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1878] = 0;
  J[1934] = 0;
  J[1990] = 0;
  J[2046] = 0 +
            (-x37 * x52) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (x184 * x1912 - x52 * x87 - x52 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x692)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
            (-x113 * x1912 - x52 * x81) * (0 + (-x141) * (-x692)) +
            (-x121 * x1912) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2102] = 4000000.0 * sc[15] * exp(299.91713281961302 * invT);
  J[2158] = 0;
  J[2214] = 0;
  J[2270] = 0;
  J[2326] = 0;
  J[2382] = 0;
  J[2438] = 0;
  J[2494] = 0 +
            (-x37 * x52) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (x184 * x1912 - x52 * x87 - x52 * x94) *
              (0 + (x182) * (0 + (-x141) * (-x710)) +
               (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
            (-x113 * x1912 - x52 * x81) * (0 + (-x141) * (-x710)) +
            (-x121 * x1912) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2550] =
    -x1912 * x524 + x1912 * x7 +
    (-x37 * x52) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x113 * x1912 - x52 * x81) * (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x121 * x1912) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2606] =
    0 +
    (-x37 * x52) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x113 * x1912 - x52 * x81) * (x135 + (-x141) * (-x126)) +
    (-x121 * x1912) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2662] =
    x129 * x52 - x1428 * x6544 +
    (-x37 * x52) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x113 * x1912 - x52 * x81) * (x461 + (-x141) * (x481)) +
    (-x121 * x1912) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2718] =
    -x19 * x1912 + x52 * x555 + x52 * x558 +
    (-x37 * x52) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x113 * x1912 - x52 * x81) * (x130 + (-x141) * (x464)) +
    (-x121 * x1912) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2774] =
    -x1912 * x573 +
    (-x37 * x52) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x113 * x1912 - x52 * x81) * (x132 + (-x141) * (-x586)) +
    (-x121 * x1912) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2830] =
    x1912 * x529 - x52 * x594 +
    (-x37 * x52) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (x184 * x1912 - x52 * x87 - x52 * x94) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x113 * x1912 - x52 * x81) * (x106 + (-x141) * (x127)) +
    (-x121 * x1912) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2886] = 0;
  J[2942] = 0;
  J[2998] = x9804;
  J[3054] = 0;
  J[31] = -x10048 * x383 + x10048 * x402 - x10361 * x606 - x10436 * x1363 +
          x10439 + x10448 + x190 * x9182 - x233 * x9182 +
          (x184 * x1935) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
          (-x141 * x1935) * (-x681 + x734) +
          (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
            (x557 - x604 + (-x141) * (-x681 + x734)) +
          (-x121 * x1935 + x183 * x1935) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[87] = -x10048 * x403 + x10048 * x404 - x10361 * x617 - x10436 * x1375 +
          x10439 + x10459 - x248 * x9182 + x251 * x9182 +
          (x184 * x1935) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
          (-x141 * x1935) * (x770 - x772) +
          (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
            (x758 - x771 + (-x141) * (x770 - x772)) +
          (-x121 * x1935 + x183 * x1935) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[143] = -x10048 * x405 + x10048 * x406 - x10361 * x640 - x10436 * x1376 +
           x10439 + x10470 - x253 * x9182 + x254 * x9182 +
           (x184 * x1935) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (-x141 * x1935) * (x801 - x804) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (-x121 * x1935 + x183 * x1935) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[199] = sc[32] * x5162 - x10048 * x407 - x10361 * x645 - x10436 * x1377 +
           x10473 + x10482 + x186 * x5001 - x256 * x9182 + x258 * x9182 +
           (x184 * x1935) *
             (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
              (x183) * (-x797 + x800 +
                        (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
           (-x141 * x1935) * (x817 - x842) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (x821 - x841 + (-x141) * (x817 - x842)) +
           (-x121 * x1935 + x183 * x1935) *
             (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[255] = -x10048 * x409 + x10048 * x410 - x10361 * x647 - x10361 * x658 -
           x10436 * x1378 - x10436 * x1379 + x10439 + x10494 - x260 * x9182 +
           x263 * x9182 +
           (x184 * x1935) *
             (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
              (x183) * (-x813 + x839 +
                        (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
           (-x141 * x1935) * (x829 - x872) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (-x468 + x669 + (-x141) * (x829 - x872)) +
           (-x121 * x1935 + x183 * x1935) *
             (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[311] = x10048 * x413 + x10074 - x10361 * x672 - x10436 * x1380 + x10439 +
           x10506 - x265 * x9182 + x267 * x9182 +
           (x184 * x1935) *
             (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
              (x183) * (x833 - x840 +
                        (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
           (-x141 * x1935) * (x895 - x897) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (x869 - x896 + (-x141) * (x895 - x897)) +
           (-x121 * x1935 + x183 * x1935) *
             (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[367] =
    -x10048 * x416 - x10361 * x680 - x10436 * x1382 + x10473 - x269 * x9182 +
    x270 * x9182 +
    (x184 * x1935) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x141 * x1935) * (x909 + x913) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (0 + (-x141) * (x909 + x913)) +
    (-x121 * x1935 + x183 * x1935) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[423] = x10074 + x10473 + x188 * x9182 - x272 * x9182;
  J[479] =
    sc[32] * x8041 + 54400000000000.0 * sc[3] * x186 * exp(-3.3 * tc[0]) -
    x10048 * x375 + x10048 * x419 - x10361 * x689 - x10361 * x693 -
    x10436 * x1383 + x10439 - x1935 * x844 + x1935 * x915 + x1935 * x920 +
    x1940 * x919 + x274 * x9182 - x275 * x9182 + x8037 +
    (x184 * x1935) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                      (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x141 * x1935) * (-x922) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (x920 + (-x141) * (-x922)) +
    (-x121 * x1935 + x183 * x1935) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[535] = -x10048 * x420 + x10048 * x421 + x10361 * x628 - x10436 * x1384 +
           x10439 + x10527 - x278 * x9182 + x279 * x9182 - x8126 +
           (x184 * x1935) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (-x141 * x1935) * (x935 - x937) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (-x121 * x1935 + x183 * x1935) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[591] = -x10048 * x422 + x10048 * x423 - x10361 * x657 - x10361 * x706 -
           x10436 * x1385 - x10436 * x1386 + x10439 + x10539 - x281 * x9182 +
           x282 * x9182 - x5576 +
           (x184 * x1935) *
             (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
              (x183) * (-x863 + x893 +
                        (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
           (-x141 * x1935) * (x465 - x977) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (-x546 + x926 + (-x141) * (x465 - x977)) +
           (-x121 * x1935 + x183 * x1935) *
             (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[647] =
    x10048 * x424 + x10074 - x10361 * x717 - x10436 * x1387 + x10439 + x10550 -
    x284 * x9182 + x286 * x9182 +
    (x184 * x1935) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x141 * x1935) * (x1001 - x1005) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x121 * x1935 + x183 * x1935) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[703] = -sc[31] * x9237 + x10074 + x10473 - x288 * x9182 + x289 * x9182;
  J[759] =
    -sc[31] * x8833 + x10048 * x425 + x10074 - x10361 * x724 + x10439 + x10559 +
    x9247 +
    (x184 * x1935) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x141 * x1935) * (-x1027 + x553) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x121 * x1935 + x183 * x1935) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[815] =
    -x10361 * x725 + x10560 + x10569 + x295 * x9182 - x9659 +
    (x184 * x1935) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x141 * x1935) * (x1039 - x1047) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x121 * x1935 + x183 * x1935) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[871] =
    sc[32] * x9429 + x10048 * x426 + x10074 - x10361 * x727 - x1041 * x1935 +
    x10439 + x1055 * x1935 + x1056 * x1940 + x1057 * x1935 - x297 * x9182 +
    x298 * x9182 + x8037 +
    (x184 * x1935) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                      (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x141 * x1935) * (x1058) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x1057 + (-x141) * (x1058)) +
    (-x121 * x1935 + x183 * x1935) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[927] = x10074 + x10473 - x228 * x9182 + x231 * x9182;
  J[983] = sc[32] * x9693 - x10361 * x728 + x10560 + x1060 * x1935 +
           x1061 * x1940 + x1062 * x1935 - x1935 * x39 + x303 * x9182 +
           (x184 * x1935) *
             (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
              (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
           (-x141 * x1935) * (-x1063) +
           (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
             (x1062 + (-x141) * (-x1063)) +
           (-x121 * x1935 + x183 * x1935) *
             (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1039] = -x10048 * x427 + x10062 + x10439 - x305 * x9182 + x306 * x9182;
  J[1095] = x10560 + x307 * x9182;
  J[1151] = -sc[31] * x8804 - x10048 * x428 + x10473 + x308 * x9182 - x9244;
  J[1207] = x10581;
  J[1263] = -324000.0 * sc[31] * x8818 - x1033 * x1935 - x10361 * x561 +
            x10560 + x309 * x9182 +
            (x184 * x1935) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (-x141 * x1935) * (-x1067 + x1068) +
            (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (-x121 * x1935 + x183 * x1935) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1319] = x10581;
  J[1375] = -x10436 * x1388 + x10581 + x1076 * x1935 + x1079 * x1940 +
            x1082 * x1935 + x1935 * x643 +
            (x184 * x1935) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (-x141 * x1935) * (x1070 + x463) +
            (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (-x121 * x1935 + x183 * x1935) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1431] =
    sc[32] * x8861 - x10361 * x751 + x10581 + x1086 * x1935 + x1087 * x1940 +
    x1088 * x1935 + x1935 * x684 + x8037 +
    (x184 * x1935) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                      (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x141 * x1935) * (x1089) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x1088 + (-x141) * (x1089)) +
    (-x121 * x1935 + x183 * x1935) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1487] =
    -1400000.0 * sc[31] * x8818 - x10048 * x429 - x10361 * x755 -
    x10361 * x759 + x10473 + x1092 * x1935 - x1935 * x891 + x1940 * x975 +
    x9247 +
    (x184 * x1935) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                      (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x141 * x1935) * (x1093) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x1092 + (-x141) * (x1093)) +
    (-x121 * x1935 + x183 * x1935) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1543] = x10581;
  J[1599] = -sc[31] * x8804 - x10361 * x760 + x10560 + x310 * x9182;
  J[1655] = x10581;
  J[1711] =
    -x10048 * x430 + x10473 - x1095 * x1935 + x1097 * x1940 + x1098 * x1935 +
    x1935 * x886 + x9247 +
    (x184 * x1935) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                      (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x141 * x1935) * (x1099) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x1098 + (-x141) * (x1099)) +
    (-x121 * x1935 + x183 * x1935) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1767] =
    -sc[12] * x9237 - sc[13] * x8833 - sc[15] * x6919 - sc[20] * x8804 -
    324000.0 * sc[22] * x8818 - sc[25] * x6919 - sc[28] * x8804 -
    56000000000.0 * sc[31] * exp(-935.98299839677895 * invT - 1.61 * tc[0]) -
    sc[34] * x8804 - sc[37] * x6919 - sc[40] * x10607 - sc[43] * x10607 -
    sc[8] * x6919 - x10048 * x431 - x10361 * x762 - x10436 * x1389 + x10473 +
    x10621 - x186 * x5003 + x311 * x9182 - x6090 - x8411 - x8820 - x9244 -
    x9755 +
    (x184 * x1935) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                      (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x141 * x1935) * (-x1104) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (x726 + (-x141) * (-x1104)) +
    (-x121 * x1935 + x183 * x1935) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1823] =
    -kf_qss[150] * sc[32] * x10360 * x610 -
    25000.0 * kf_qss[184] * sc[32] * x1374 * x8570 + sc[15] * x9429 +
    sc[17] * x9693 + sc[25] * x8861 + sc[33] * x10622 + sc[3] * x5162 +
    25000.0 * sc[44] * x8570 + sc[8] * x8041 - x10047 * x370 + x10048 * x367 +
    x10074 + x10198 - x10360 * x131 + x10439 + x10640 -
    25000.0 * x1360 * x8570 + x189 * x9182 + x197 * x9181 - x232 * x9182 +
    (x184 * x1935) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x141 * x1935) * (-x585 + x688) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x121 * x1935 + x183 * x1935) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1879] = sc[32] * x10622 + x10581;
  J[1935] = -sc[31] * x8804 + x10581;
  J[1991] = x10581;
  J[2047] =
    x10581 +
    (x184 * x1935) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-x141 * x1935) * (-x692) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (0 + (-x141) * (-x692)) +
    (-x121 * x1935 + x183 * x1935) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2103] = x10201 - x10361 * x767 + x10581 + x8037;
  J[2159] = x10560 + x238 * x9182;
  J[2215] = x10581;
  J[2271] = -sc[31] * x10607 - x10436 * x1391 + x10581;
  J[2327] = x10581;
  J[2383] = x10581;
  J[2439] = -sc[31] * x10607 + x10581;
  J[2495] =
    x10436 + x10581 +
    (x184 * x1935) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-x141 * x1935) * (-x710) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (0 + (-x141) * (-x710)) +
    (-x121 * x1935 + x183 * x1935) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2551] =
    x10581 + x10657 +
    (x184 * x1935) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x141 * x1935) * (x103 - x545) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x121 * x1935 + x183 * x1935) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2607] =
    -x101 * x1940 + x10581 + x135 * x1935 +
    (x184 * x1935) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                      (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x141 * x1935) * (-x126) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (x135 + (-x141) * (-x126)) +
    (-x121 * x1935 + x183 * x1935) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2663] =
    x10581 + x107 * x1940 + x1935 * x461 - x1935 * x83 +
    (x184 * x1935) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                      (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x141 * x1935) * (x481) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (x461 + (-x141) * (x481)) +
    (-x121 * x1935 + x183 * x1935) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2719] =
    x10581 + x130 * x1935 - x19 * x1935 + x1935 * x562 + x1940 * x566 +
    (x184 * x1935) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                      (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x141 * x1935) * (x464) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (x130 + (-x141) * (x464)) +
    (-x121 * x1935 + x183 * x1935) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2775] =
    x10581 + x132 * x1935 - x1935 * x573 + x1935 * x967 + x1940 * x582 +
    (x184 * x1935) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                      (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x141 * x1935) * (-x586) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (x132 + (-x141) * (-x586)) +
    (-x121 * x1935 + x183 * x1935) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2831] =
    x104 * x1940 + x10581 + x106 * x1935 + x1935 * x50 + x1935 * x529 +
    (x184 * x1935) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                      (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x141 * x1935) * (x127) +
    (-x113 * x1935 + x181 * x1940 + x182 * x1935) * (x106 + (-x141) * (x127)) +
    (-x121 * x1935 + x183 * x1935) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2887] = x10581;
  J[2943] = x10581;
  J[2999] = -x10048 * x382 - x10436 * x1392 + x10473 + x9247;
  J[3055] = x10581;
  J[32] = x10048 * x383 - x10048 * x402 + x10361 * x606 + x10436 * x1363 -
          x190 * x9182 - x1935 * x519 + x1935 * x528 + x1935 * x536 -
          x1935 * x544 - x1935 * x557 + x1935 * x604 + x1940 * x579 -
          x1940 * x602 + x233 * x9182 - x339 * x6334 + x6422 +
          (-x184 * x1935) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
          (x141 * x1935) * (-x681 + x734) +
          (x113 * x1935 - x181 * x1940 - x182 * x1935) *
            (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x121 * x1935 - x183 * x1935) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[88] = x10048 * x403 - x10048 * x404 + x10361 * x617 + x10436 * x1375 +
          x10682 - x1935 * x511 - x1935 * x521 - x1935 * x738 + x1935 * x742 -
          x1935 * x758 + x1935 * x771 + x1940 * x574 - x1940 * x756 +
          x248 * x9182 - x251 * x9182 + x6422 +
          (-x184 * x1935) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
          (x141 * x1935) * (x770 - x772) +
          (x113 * x1935 - x181 * x1940 - x182 * x1935) *
            (x758 - x771 + (-x141) * (x770 - x772)) +
          (x121 * x1935 - x183 * x1935) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[144] = x10048 * x405 - x10048 * x406 + x10361 * x640 + x10436 * x1376 +
           x10682 - x1935 * x543 + x1935 * x753 + x1935 * x774 - x1935 * x790 -
           x1935 * x792 + x1935 * x803 - x1940 * x745 + x1940 * x765 +
           x253 * x9182 - x254 * x9182 + x352 * x6334 +
           (-x184 * x1935) *
             (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
              (x183) * (x745 - x765 +
                        (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
           (x141 * x1935) * (x801 - x804) +
           (x113 * x1935 - x181 * x1940 - x182 * x1935) *
             (x792 - x803 + (-x141) * (x801 - x804)) +
           (x121 * x1935 - x183 * x1935) *
             (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[200] =
    -sc[32] * x5162 + x10048 * x407 - x10062 + x10361 * x645 + x10436 * x1377 -
    x116 * x1935 + x1935 * x741 - x1935 * x763 + x1935 * x791 - x1935 * x821 +
    x1935 * x841 + x1940 * x797 - x1940 * x800 + x256 * x9182 - x258 * x9182 -
    x353 * x6334 + x354 * x6334 +
    (-x184 * x1935) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (x141 * x1935) * (x817 - x842) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (x121 * x1935 - x183 * x1935) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[256] =
    x10048 * x409 - x10048 * x410 + x10361 * x647 + x10361 * x658 +
    x10436 * x1378 + x10436 * x1379 + x10682 + x1935 * x468 - x1935 * x669 -
    x1935 * x793 + x1935 * x796 + x1935 * x811 - x1935 * x823 + x1940 * x813 -
    x1940 * x839 + x240 * x6334 + x260 * x9182 - x263 * x9182 - x285 * x6333 +
    (-x184 * x1935) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (x141 * x1935) * (x829 - x872) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (x121 * x1935 - x183 * x1935) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[312] = x10048 * x411 - x10048 * x413 + x10361 * x672 + x10436 * x1380 +
           x10682 - x1935 * x799 + x1935 * x812 - x1935 * x826 - x1935 * x827 -
           x1935 * x869 + x1935 * x896 - x1940 * x833 + x1940 * x840 +
           x265 * x9182 - x267 * x9182 + x6422 +
           (-x184 * x1935) *
             (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
              (x183) * (x833 - x840 +
                        (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
           (x141 * x1935) * (x895 - x897) +
           (x113 * x1935 - x181 * x1940 - x182 * x1935) *
             (x869 - x896 + (-x141) * (x895 - x897)) +
           (x121 * x1935 - x183 * x1935) *
             (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[368] =
    x10048 * x416 + x10361 * x680 + x10436 * x1382 + x10686 + x269 * x9182 -
    x270 * x9182 +
    (-x184 * x1935) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (x141 * x1935) * (x909 + x913) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (0 + (-x141) * (x909 + x913)) +
    (x121 * x1935 - x183 * x1935) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[424] = x10048 * x411 + x10686 - x188 * x9182 + x272 * x9182;
  J[480] =
    -sc[32] * x8041 + x10048 * x375 - x10048 * x419 + x10361 * x689 +
    x10361 * x693 + x10436 * x1383 + x1935 * x844 - x1935 * x915 -
    x1935 * x920 - x1940 * x919 - x274 * x9182 + x275 * x9182 - x356 * x6334 +
    x6422 +
    (-x184 * x1935) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (x141 * x1935) * (-x922) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x920 + (-x141) * (-x922)) +
    (x121 * x1935 - x183 * x1935) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[536] = x10048 * x420 - x10048 * x421 - x10361 * x628 + x10436 * x1384 +
           x10682 - x1935 * x834 + x1935 * x835 - x1935 * x838 - x1935 * x859 -
           x1935 * x885 + x1935 * x936 + x1940 * x865 - x1940 * x868 +
           x278 * x9182 - x279 * x9182 + x6422 + x8126 +
           (-x184 * x1935) *
             (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
              (x183) * (-x865 + x868 +
                        (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
           (x141 * x1935) * (x935 - x937) +
           (x113 * x1935 - x181 * x1940 - x182 * x1935) *
             (x885 - x936 + (-x141) * (x935 - x937)) +
           (x121 * x1935 - x183 * x1935) *
             (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[592] =
    x10048 * x422 - x10048 * x423 + x10361 * x657 + x10361 * x706 +
    x10436 * x1385 + x10436 * x1386 + x1935 * x546 + x1935 * x831 -
    x1935 * x836 - x1935 * x870 + x1935 * x877 - x1935 * x926 + x1940 * x863 -
    x1940 * x893 + x281 * x9182 - x282 * x9182 - x357 * x6334 + x5576 + x6422 +
    (-x184 * x1935) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (x141 * x1935) * (x465 - x977) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (x121 * x1935 - x183 * x1935) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[648] =
    x1004 * x1935 + x10048 * x411 - x10048 * x424 + x10361 * x717 +
    x10436 * x1387 + x10682 - x1935 * x498 - x1935 * x700 + x1935 * x864 -
    x1935 * x899 - x1935 * x924 - x1940 * x889 + x1940 * x894 + x284 * x9182 -
    x286 * x9182 + x6422 +
    (-x184 * x1935) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (x141 * x1935) * (x1001 - x1005) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (x121 * x1935 - x183 * x1935) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[704] = sc[31] * x9237 + x10048 * x411 - x10062 + x288 * x9182 -
           x289 * x9182 - x331 * x6334 + x6422;
  J[760] =
    sc[31] * x8833 - x1000 * x1935 + x10048 * x411 - x10048 * x425 +
    x1026 * x1935 + x10361 * x724 + x10682 + x1935 * x861 - x1935 * x866 -
    x1935 * x925 - x1935 * x938 + x1940 * x932 - x1940 * x934 - x293 * x9182 +
    x6422 + x9244 +
    (-x184 * x1935) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (x141 * x1935) * (-x1027 + x553) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (x121 * x1935 - x183 * x1935) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[816] =
    -x1014 * x1935 + x10361 * x725 + x1046 * x1935 + x10690 - x1935 * x887 +
    x1935 * x890 - x1935 * x963 - x1935 * x966 + x1940 * x929 - x1940 * x974 -
    x295 * x9182 + x9659 +
    (-x184 * x1935) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (x141 * x1935) * (x1039 - x1047) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (x121 * x1935 - x183 * x1935) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[872] =
    -sc[32] * x9429 + x10048 * x411 - x10048 * x426 + x10361 * x727 +
    x1041 * x1935 - x1055 * x1935 - x1056 * x1940 - x1057 * x1935 + x10682 +
    x297 * x9182 - x298 * x9182 + x6422 +
    (-x184 * x1935) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (x141 * x1935) * (x1058) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x1057 + (-x141) * (x1058)) +
    (x121 * x1935 - x183 * x1935) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[928] = x10048 * x411 + x10686 + x228 * x9182 - x231 * x9182;
  J[984] = -sc[32] * x9693 + x10361 * x728 - x1060 * x1935 - x1061 * x1940 -
           x1062 * x1935 + x10690 + x1935 * x39 - x303 * x9182 +
           (-x184 * x1935) *
             (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
              (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
           (x141 * x1935) * (-x1063) +
           (x113 * x1935 - x181 * x1940 - x182 * x1935) *
             (x1062 + (-x141) * (-x1063)) +
           (x121 * x1935 - x183 * x1935) *
             (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1040] = x10048 * x427 + x10686 + x305 * x9182 - x306 * x9182;
  J[1096] = x10690 - x307 * x9182;
  J[1152] = sc[31] * x8804 + x10048 * x428 + x10686 - x308 * x9182 + x9244;
  J[1208] = x10692;
  J[1264] = 324000.0 * sc[31] * x8818 + x1033 * x1935 + x10361 * x561 + x10690 -
            x309 * x9182 +
            (-x184 * x1935) *
              (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
               (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
            (x141 * x1935) * (-x1067 + x1068) +
            (x113 * x1935 - x181 * x1940 - x182 * x1935) *
              (-x1033 + (-x141) * (-x1067 + x1068)) +
            (x121 * x1935 - x183 * x1935) *
              (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1320] = x10692;
  J[1376] = x10436 * x1388 + x10692 - x1076 * x1935 - x1079 * x1940 -
            x1082 * x1935 - x1935 * x643 +
            (-x184 * x1935) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (x141 * x1935) * (x1070 + x463) +
            (x113 * x1935 - x181 * x1940 - x182 * x1935) *
              (x1082 + (-x141) * (x1070 + x463)) +
            (x121 * x1935 - x183 * x1935) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1432] =
    -sc[32] * x8861 + x10361 * x751 + x10692 - x1086 * x1935 - x1087 * x1940 -
    x1088 * x1935 - x1935 * x684 +
    (-x184 * x1935) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (x141 * x1935) * (x1089) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x1088 + (-x141) * (x1089)) +
    (x121 * x1935 - x183 * x1935) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1488] =
    1400000.0 * sc[31] * x8818 + x10048 * x429 + x10361 * x755 + x10361 * x759 +
    x10686 - x1092 * x1935 + x1935 * x891 - x1940 * x975 - x293 * x9182 +
    x9244 +
    (-x184 * x1935) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (x141 * x1935) * (x1093) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x1092 + (-x141) * (x1093)) +
    (x121 * x1935 - x183 * x1935) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1544] = x10692;
  J[1600] = sc[31] * x8804 + x10361 * x760 + x10690 - x310 * x9182;
  J[1656] = x10692;
  J[1712] =
    x10048 * x430 + x10686 + x1095 * x1935 - x1097 * x1940 - x1098 * x1935 -
    x1935 * x886 - x293 * x9182 + x9244 +
    (-x184 * x1935) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (x141 * x1935) * (x1099) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x1098 + (-x141) * (x1099)) +
    (x121 * x1935 - x183 * x1935) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1768] =
    sc[12] * x9237 + sc[13] * x8833 + sc[20] * x8804 +
    324000.0 * sc[22] * x8818 + sc[28] * x8804 + sc[34] * x8804 +
    sc[40] * x10607 + sc[43] * x10607 + 20160000.0 * sc[45] * x8794 +
    12100000.0 * sc[45] * exp(-10280.7164823904 * invT) + x10048 * x431 -
    x10062 + x10361 * x762 + x10436 * x1389 - x1100 * x1935 - x1935 * x726 +
    x1935 * x968 - x1940 * x707 - x311 * x9182 - x361 * x6334 + x6090 + x6422 +
    x8411 + x8820 + x9244 + x9755 +
    (-x184 * x1935) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (x141 * x1935) * (-x1104) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x726 + (-x141) * (-x1104)) +
    (x121 * x1935 - x183 * x1935) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1824] =
    kf_qss[150] * sc[32] * x10360 * x610 +
    25000.0 * kf_qss[184] * sc[32] * x1374 * x8570 -
    kf_qss[286] * sc[32] * x1934 * x704 - sc[15] * x9429 - sc[17] * x9693 -
    sc[25] * x8861 - sc[33] * x10622 - sc[3] * x5162 -
    25000.0 * sc[44] * x8570 - sc[8] * x8041 - x1002 * x1935 + x10047 * x370 -
    x10048 * x367 + x10048 * x411 - x10198 + x10360 * x131 -
    3600000.0 * x115 * x1938 - x120 * x1934 + 25000.0 * x1360 * x8570 -
    x189 * x9182 - x1934 * x41 - x1934 * x85 + x1935 * x564 - x1935 * x612 -
    x1935 * x928 + x1935 * x930 + x1940 * x682 - x1940 * x999 - x197 * x9181 +
    x232 * x9182 - x338 * x6334 + x6422 -
    631000000000000.0 * exp(-21286.0649635396 * invT) +
    (-x184 * x1935) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (x141 * x1935) * (-x585 + x688) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (x121 * x1935 - x183 * x1935) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1880] = -sc[32] * x10622 + x10692;
  J[1936] = sc[31] * x8804 + x10692;
  J[1992] = x10692;
  J[2048] =
    x10692 +
    (-x184 * x1935) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (x141 * x1935) * (-x692) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (0 + (-x141) * (-x692)) +
    (x121 * x1935 - x183 * x1935) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2104] = -x10201 + x10361 * x767 + x10692;
  J[2160] = x10690 - x238 * x9182;
  J[2216] = x10692;
  J[2272] = sc[31] * x10607 + x10436 * x1391 + x10692;
  J[2328] = x10692;
  J[2384] = x10692;
  J[2440] = sc[31] * x10607 + x10692;
  J[2496] =
    -x10436 + x10692 +
    (-x184 * x1935) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (x141 * x1935) * (-x710) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (0 + (-x141) * (-x710)) +
    (x121 * x1935 - x183 * x1935) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2552] =
    20160000.0 * sc[31] * x8794 +
    12100000.0 * sc[31] * exp(-10280.7164823904 * invT) + x1003 * x1940 +
    x10692 + x1935 * x482 + x1935 * x524 - x1935 * x7 - x1935 * x712 +
    x1935 * x927 - x1935 * x933 - x1940 * x970 +
    (-x184 * x1935) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (x141 * x1935) * (x103 - x545) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (x121 * x1935 - x183 * x1935) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2608] =
    x101 * x1940 + x10692 - x135 * x1935 +
    (-x184 * x1935) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (x141 * x1935) * (-x126) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x135 + (-x141) * (-x126)) +
    (x121 * x1935 - x183 * x1935) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2664] =
    x10692 - x107 * x1940 - x1935 * x461 + x1935 * x83 +
    (-x184 * x1935) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (x141 * x1935) * (x481) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x461 + (-x141) * (x481)) +
    (x121 * x1935 - x183 * x1935) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2720] =
    x10692 - x130 * x1935 + x19 * x1935 - x1935 * x562 - x1940 * x566 +
    (-x184 * x1935) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (x141 * x1935) * (x464) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x130 + (-x141) * (x464)) +
    (x121 * x1935 - x183 * x1935) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2776] =
    x10692 - x132 * x1935 + x1935 * x573 - x1935 * x967 - x1940 * x582 +
    (-x184 * x1935) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (x141 * x1935) * (-x586) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x132 + (-x141) * (-x586)) +
    (x121 * x1935 - x183 * x1935) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2832] =
    -x104 * x1940 - x106 * x1935 + x10692 - x1935 * x50 - x1935 * x529 +
    (-x184 * x1935) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (x141 * x1935) * (x127) +
    (x113 * x1935 - x181 * x1940 - x182 * x1935) * (x106 + (-x141) * (x127)) +
    (x121 * x1935 - x183 * x1935) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2888] = x10692;
  J[2944] = x10692;
  J[3000] = x10048 * x382 + x10436 * x1392 + x10686 - x293 * x9182 + x9244;
  J[3056] = x10692;
  J[33] = sc[34] * x224;
  J[89] = -sc[33] * x2518;
  J[145] = sc[34] * x4128;
  J[201] = 0;
  J[257] = -sc[33] * x4242 + sc[34] * x6638;
  J[313] = -sc[33] * x6738;
  J[369] = sc[17] * x7578;
  J[425] = 0;
  J[481] = sc[34] * x8063;
  J[537] = -sc[33] * x8139;
  J[593] = sc[34] * x8804;
  J[649] = -sc[33] * x8867;
  J[705] = 0;
  J[761] = 0;
  J[817] = 0;
  J[873] = 0;
  J[929] = 0;
  J[985] = sc[6] * x7578;
  J[1041] = 0;
  J[1097] = 0;
  J[1153] = 0;
  J[1209] = 0;
  J[1265] = 0;
  J[1321] = 0;
  J[1377] = 0;
  J[1433] = 0;
  J[1489] = 0;
  J[1545] = 0;
  J[1601] = 0;
  J[1657] = 0;
  J[1713] = 0;
  J[1769] = sc[34] * x8804;
  J[1825] = -sc[33] * x10622;
  J[1881] = -sc[11] * x8867 - sc[1] * x2518 - sc[32] * x10622 - sc[4] * x4242 -
            sc[5] * x6738 - sc[9] * x8139 - x7748;
  J[1937] = sc[0] * x224 + sc[10] * x8804 + sc[2] * x4128 + sc[31] * x8804 +
            sc[4] * x6638 + sc[8] * x8063;
  J[1993] = 0;
  J[2049] = 0;
  J[2105] = 0;
  J[2161] = 0;
  J[2217] = 0;
  J[2273] = 0;
  J[2329] = 0;
  J[2385] = 0;
  J[2441] = 0;
  J[2497] = 0;
  J[2553] = 0;
  J[2609] = 0;
  J[2665] = 0;
  J[2721] = 0;
  J[2777] = 0;
  J[2833] = 0;
  J[2889] = 0;
  J[2945] = 0;
  J[3001] = 0;
  J[3057] = 0;
  J[34] = -x1270 * x4959 + x646;
  J[90] = sc[33] * x2518;
  J[146] = -sc[34] * x4128;
  J[202] = -1000000.0 * kf_qss[122] * sc[3] * x1276 * x4957 -
           kf_qss[122] * x1276 * x234 + sc[37] * x5251 -
           1000000.0 * x1275 * x4957 / x1268;
  J[258] = -kf_qss[125] * x1276 * x234 - kf_qss[125] * x1276 * x4959 +
           sc[33] * x4242 - sc[34] * x5306 - sc[34] * x6638 + x7946;
  J[314] = sc[33] * x6738;
  J[370] = 0;
  J[426] = 0;
  J[482] = -sc[34] * x8063 - sc[34] * x8066 - 794000000000000.0 * x1293 * x3946;
  J[538] = sc[33] * x8139;
  J[594] = -128800.0 * sc[34] * x3886 - sc[34] * x8804 - x1279 * x234 -
           x1279 * x4959 - 794000000000000.0 * x1295 * x3946;
  J[650] = sc[33] * x8867;
  J[706] = -x1280 * x234 - x5722;
  J[762] = 0;
  J[818] = 0;
  J[874] = 0;
  J[930] = 0;
  J[986] = -x1282 * x234 - x1282 * x4959 - 794000000000000.0 * x1297 * x3946;
  J[1042] = 0;
  J[1098] = 0;
  J[1154] = -794000000000000.0 * x1298 * x3946;
  J[1210] = 0;
  J[1266] = 0;
  J[1322] = 0;
  J[1378] = 0;
  J[1434] = -794000000000000.0 * x1299 * x3946;
  J[1490] = 0;
  J[1546] = 0;
  J[1602] = 0;
  J[1658] = 0;
  J[1714] = 0;
  J[1770] = -sc[34] * x8804;
  J[1826] = sc[33] * x10622;
  J[1882] = sc[11] * x8867 + sc[1] * x2518 + sc[32] * x10622 + sc[4] * x4242 +
            sc[5] * x6738 + sc[9] * x8139;
  J[1938] = -128800.0 * sc[10] * x3886 - sc[10] * x8804 - sc[2] * x4128 -
            sc[31] * x8804 - sc[4] * x5306 - sc[4] * x6638 - sc[8] * x8063 -
            sc[8] * x8066 - x1283 * x4959 - 794000000000000.0 * x1300 * x3946 +
            x3702;
  J[1994] = 0;
  J[2050] = 0;
  J[2106] = sc[3] * x5251 - x1284 * x234 - x1284 * x4959;
  J[2162] = 0;
  J[2218] = 0;
  J[2274] = 0;
  J[2330] = 0;
  J[2386] = 0;
  J[2442] = 0;
  J[2498] = 0;
  J[2554] = 0;
  J[2610] = 0;
  J[2666] = 0;
  J[2722] = 0;
  J[2778] = 0;
  J[2834] = 0;
  J[2890] = 0;
  J[2946] = 0;
  J[3002] = 0;
  J[3058] = 0;
  J[35] = 0;
  J[91] = 0;
  J[147] = 0;
  J[203] = -7540000.0 * kf_qss[145] * sc[3] * x1303 / ((x1302) * (x1302)) -
           7540000.0 * x1303 / x1302;
  J[259] = sc[39] * x6612;
  J[315] = 0;
  J[371] = 0;
  J[427] = 0;
  J[483] = 0;
  J[539] = 0;
  J[595] = 0;
  J[651] = 0;
  J[707] = 0;
  J[763] = 0;
  J[819] = 0;
  J[875] = 0;
  J[931] = 0;
  J[987] = 0;
  J[1043] = 0;
  J[1099] = 0;
  J[1155] = 0;
  J[1211] = 0;
  J[1267] = 0;
  J[1323] = 0;
  J[1379] = 0;
  J[1435] = 0;
  J[1491] = 0;
  J[1547] = 0;
  J[1603] = 0;
  J[1659] = 0;
  J[1715] = 0;
  J[1771] = 0;
  J[1827] = 0;
  J[1883] = 0;
  J[1939] = 0;
  J[1995] = -7540000.0 * sc[3] * x1307 - x7341 -
            5.601e+22 * exp(-19102.104633947201 * invT - 2.23 * tc[0]);
  J[2051] = -7540000.0 * sc[3] * x1308;
  J[2107] = 0;
  J[2163] = 0;
  J[2219] = sc[4] * x6612;
  J[2275] = 0;
  J[2331] = 0;
  J[2387] = 0;
  J[2443] = 0;
  J[2499] = 0;
  J[2555] = 0;
  J[2611] = 0;
  J[2667] = 0;
  J[2723] = 0;
  J[2779] = 0;
  J[2835] = 0;
  J[2891] = 0;
  J[2947] = 0;
  J[3003] = 0;
  J[3059] = 0;
  J[36] = -4520000.0 * sc[3] * x681 + 4520000.0 * sc[3] * x734;
  J[92] = 4520000.0 * sc[3] * x770 - 4520000.0 * sc[3] * x772;
  J[148] = 4520000.0 * sc[3] * x801 - 4520000.0 * sc[3] * x804;
  J[204] = -kf_qss[145] * x10702 * x1303 / ((x1302) * (x1302)) +
           4520000.0 * sc[3] * x817 - 4520000.0 * sc[3] * x842 +
           4520000.0 * x678 * x733;
  J[260] = 4520000.0 * sc[3] * x829 - 4520000.0 * sc[3] * x872;
  J[316] = 4520000.0 * sc[3] * x895 - 4520000.0 * sc[3] * x897;
  J[372] = 4520000.0 * sc[3] * x909 + 4520000.0 * sc[3] * x913;
  J[428] = 0;
  J[484] = -4520000.0 * sc[3] * x922;
  J[540] = 4520000.0 * sc[3] * x935 - 4520000.0 * sc[3] * x937;
  J[596] = 4520000.0 * sc[3] * x465 - 4520000.0 * sc[3] * x977;
  J[652] = 4520000.0 * sc[3] * x1001 - 4520000.0 * sc[3] * x1005;
  J[708] = 0;
  J[764] = -4520000.0 * sc[3] * x1027 + 4520000.0 * sc[3] * x553;
  J[820] = 4520000.0 * sc[3] * x1039 - 4520000.0 * sc[3] * x1047;
  J[876] = 4520000.0 * sc[3] * x1058;
  J[932] = 0;
  J[988] = -4520000.0 * sc[3] * x1063;
  J[1044] = 0;
  J[1100] = 0;
  J[1156] = 0;
  J[1212] = 0;
  J[1268] = -4520000.0 * sc[3] * x1067 + 4520000.0 * sc[3] * x1068;
  J[1324] = 0;
  J[1380] = 4520000.0 * sc[3] * x1070 + 4520000.0 * sc[3] * x463;
  J[1436] = 4520000.0 * sc[3] * x1089;
  J[1492] = 4520000.0 * sc[3] * x1093;
  J[1548] = 0;
  J[1604] = 0;
  J[1660] = 0;
  J[1716] = 4520000.0 * sc[3] * x1099;
  J[1772] = -4520000.0 * sc[3] * x1104;
  J[1828] = -4520000.0 * sc[3] * x585 + 4520000.0 * sc[3] * x688;
  J[1884] = 0;
  J[1940] = 0;
  J[1996] = -x10702 * x1307;
  J[2052] = -4520000.0 * sc[3] * x692 - x10702 * x1308 -
            6.155e+19 * exp(-17869.223802725599 * invT - 1.38 * tc[0]) -
            25000000000.0 * exp(-10492.0674820284 * invT);
  J[2108] = 0;
  J[2164] = 0;
  J[2220] = 0;
  J[2276] = 0;
  J[2332] = 0;
  J[2388] = 0;
  J[2444] = 0;
  J[2500] = -4520000.0 * sc[3] * x710;
  J[2556] = 4520000.0 * sc[3] * x103 - 4520000.0 * sc[3] * x545;
  J[2612] = -4520000.0 * sc[3] * x126;
  J[2668] = 4520000.0 * sc[3] * x481;
  J[2724] = 4520000.0 * sc[3] * x464;
  J[2780] = -4520000.0 * sc[3] * x586;
  J[2836] = 4520000.0 * sc[3] * x127;
  J[2892] = 0;
  J[2948] = 0;
  J[3004] = 0;
  J[3060] = 0;
  J[37] = sc[21] * x659 + sc[22] * x2111 - sc[37] * x2088 -
          18100000.0 * sc[37] - x10142 * x606 - x1270 * x6356 - x445 * x4978 -
          x448 * x4978;
  J[93] = sc[21] * x2478 - sc[37] * x2485 - x10142 * x617;
  J[149] =
    -sc[22] * x10141 * x640 + sc[22] * x4146 - x449 * x4978 - x451 * x4978;
  J[205] =
    -kf_qss[122] * x1276 * x6356 + sc[22] * x5152 - x10142 * x645 + x5257;
  J[261] = -sc[22] * x10141 * x658 + 3.12 * sc[22] * x6647 +
           1000000.0 * sc[23] + sc[34] * x5306 - sc[37] * x4273 -
           x10142 * x647 + x8683;
  J[317] = -sc[37] * x6720 - x10142 * x672;
  J[373] = -x10142 * x680;
  J[429] = 0;
  J[485] = sc[16] * x8071 + sc[22] * x8038 - 5100000.0 * sc[37] -
           x10142 * x689 - x10142 * x693;
  J[541] = sc[21] * x8113 - sc[37] * x8121 + x10142 * x628;
  J[597] =
    sc[21] * x5564 + sc[22] * x8811 - x10142 * x657 - x10142 * x706 + x8809;
  J[653] = -sc[37] * x8859 - x10142 * x717;
  J[709] = -kf_qss[168] * sc[12] * x444 * x4977 + 1.0e-42 * sc[17] * sc[4] -
           x1280 * x6356 - x401 * x4977 / x443 - x7001;
  J[765] = sc[21] * x9394 - sc[37] * x9391 - x10142 * x724;
  J[821] = sc[21] * x3817 + sc[22] * x9651 - x10142 * x725 - x455 * x4978;
  J[877] = -sc[22] * x10141 * x727 + 100000.0 * sc[22] * x1938 -
           4000000.0 * sc[37] * exp(299.91713281961302 * invT) -
           800000.0 * sc[37];
  J[933] = sc[8] * x8071;
  J[989] = 1.0e-42 * sc[12] * sc[4] - 1000000.0 * sc[37] - x10142 * x728 -
           x1282 * x6356 - x457 * x4978;
  J[1045] = -x458 * x4978;
  J[1101] = 0;
  J[1157] = 0;
  J[1213] = sc[0] * x659 + sc[10] * x5564 + sc[13] * x9394 + sc[14] * x3817 +
            sc[1] * x2478 + 1678200000000.0 * sc[22] * x10126 -
            200000.0 * sc[37] * x10129 + sc[9] * x8113;
  J[1269] = -kf_qss[88] * sc[22] * x10141 * x610 + sc[0] * x2111 +
            sc[10] * x8811 + sc[14] * x9651 + 100000.0 * sc[15] * x1938 +
            1678200000000.0 * sc[21] * x10126 + 100000.0 * sc[25] * x5566 +
            sc[2] * x4146 + 324000.0 * sc[31] * x8818 + sc[38] * x10134 +
            sc[3] * x5152 + 3.12 * sc[4] * x6647 + sc[8] * x8038 -
            x10141 * x131 + x10177 + x3551;
  J[1325] = 1000000.0 * sc[4] + x10179;
  J[1381] = 0;
  J[1437] = 100000.0 * sc[22] * x5566 - 6310000.0 * sc[37] - x10142 * x751;
  J[1493] = -sc[22] * x10141 * x759 - x10142 * x755 - x10187 +
            5000000000000000.0 * exp(-35728.383272135099 * invT);
  J[1549] = 0;
  J[1605] = -sc[22] * x10141 * x760 - sc[37] * x8055;
  J[1661] = 25000000000000.0 * exp(-22644.749961212401 * invT);
  J[1717] = x9941;
  J[1773] = 324000.0 * sc[22] * x8818 - sc[37] * x6919 - x10142 * x762;
  J[1829] = -x10142 * x764 - x10198;
  J[1885] = 0;
  J[1941] = sc[4] * x5306 - x1283 * x6356;
  J[1997] = 0;
  J[2053] = 0;
  J[2109] =
    -sc[0] * x2088 - 18100000.0 * sc[0] - sc[10] * x5572 - sc[10] * x6919 -
    10.0e-25 * sc[10] - sc[11] * x8859 - sc[13] * x9391 -
    4000000.0 * sc[15] * exp(299.91713281961302 * invT) - 800000.0 * sc[15] -
    1000000.0 * sc[17] - sc[1] * x2485 - 200000.0 * sc[21] * x10129 -
    6310000.0 * sc[25] - 4000000.0 * sc[37] - sc[4] * x4273 - sc[5] * x6720 -
    5100000.0 * sc[8] - sc[9] * x8121 + x10007 - x10142 * x767 - x10200 -
    x10201 - x1284 * x6356 - x3706 + x6189 - x7344 + x8037 - x8450;
  J[2165] = sc[22] * x10134;
  J[2221] = -x460 * x4978;
  J[2277] = 0;
  J[2333] = 0;
  J[2389] = 0;
  J[2445] = 0;
  J[2501] = 0;
  J[2557] = 0;
  J[2613] = 0;
  J[2669] = 0;
  J[2725] = 0;
  J[2781] = 0;
  J[2837] = 0;
  J[2893] = 0;
  J[2949] = 0;
  J[3005] = 0;
  J[3061] = 0;
  J[38] = sc[21] * x670 - sc[38] * x186 * x2092 - 50000000.0 * sc[38] +
          x190 * x4983 + x2098 - x233 * x4983 - x242 * x513 - x242 * x875 +
          (-x5 * x513 - x5 * x875) * (x190 - x233);
  J[94] = -sc[38] * x2483 + x1373 * x874 + x1491 * x513 + x1491 * x875 + x2098 -
          x248 * x4983 + x251 * x4983 +
          (-x5 * x513 - x5 * x875) * (-x248 + x251);
  J[150] = x2098 - x253 * x4983 + x254 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x253 + x254);
  J[206] = -sc[38] * x5242 + x1492 * x513 + x1492 * x875 + x2098 -
           x256 * x4983 + x258 * x4983 + x5145 +
           (-x5 * x513 - x5 * x875) * (-x256 + x258);
  J[262] = sc[21] * x6579 - 10000000.0 * sc[38] + x1493 * x513 + x1493 * x875 +
           x2098 - x260 * x4983 + x263 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x260 + x263);
  J[318] = -sc[38] * x6716 +
           1343000000.0 * x1373 * exp(-7890.4373198180001 * invT) + x2098 +
           x245 * x513 + x245 * x875 - x265 * x4983 + x267 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x265 + x267);
  J[374] = x2098 - x269 * x4983 + x270 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x269 + x270);
  J[430] = x188 * x4983 + x2098 - x272 * x4983 +
           (-x5 * x513 - x5 * x875) * (x188 - x272);
  J[486] = sc[21] * x7839 + x2098 + x274 * x4983 - x275 * x4983 +
           (-x5 * x513 - x5 * x875) * (x274 - x275);
  J[542] = -sc[38] * x8119 + x2098 - x278 * x4983 + x279 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x278 + x279);
  J[598] = 30000000.0 * sc[21] * x2474 - sc[38] * x5562 + x2098 - x281 * x4983 +
           x282 * x4983 + (-x5 * x513 - x5 * x875) * (-x281 + x282);
  J[654] = -sc[38] * x8856 + x2098 - x284 * x4983 + x286 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x284 + x286);
  J[710] = x2098 - x288 * x4983 + x289 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x288 + x289);
  J[766] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[822] = x10706 + x295 * x4983 + (-x5 * x513 - x5 * x875) * (-x290 + x295);
  J[878] = x2098 - x297 * x4983 + x298 * x4983 +
           (-x5 * x513 - x5 * x875) * (-x297 + x298);
  J[934] = x2098 - x228 * x4983 + x231 * x4983 - x249 * x513 - x249 * x875 +
           (-x5 * x513 - x5 * x875) * (-x228 + x231);
  J[990] = x10706 + x303 * x4983 + (-x5 * x513 - x5 * x875) * (-x290 + x303);
  J[1046] = 488100.0 * x197 * exp(-29926.295115406701 * invT) + x2098 -
            x305 * x4983 + x306 * x4983 +
            (-x5 * x513 - x5 * x875) * (-x305 + x306);
  J[1102] = x10706 + x307 * x4983 + (-x5 * x513 - x5 * x875) * (-x290 + x307);
  J[1158] = x10706 + x308 * x4983 + (-x5 * x513 - x5 * x875) * (-x290 + x308);
  J[1214] = sc[0] * x670 + 30000000.0 * sc[10] * x2474 +
            200000.0 * sc[37] * x10129 + sc[4] * x6579 + sc[8] * x7839 +
            x10707 + x186 * x2095 + x5972 + (-x5 * x513 - x5 * x875) * (x294);
  J[1270] = -sc[38] * x10134 + x10706 + x309 * x4983 +
            (-x5 * x513 - x5 * x875) * (-x290 + x309);
  J[1326] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1382] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1438] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1494] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1550] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1606] = x10706 + x310 * x4983 + (-x5 * x513 - x5 * x875) * (-x290 + x310);
  J[1662] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1718] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1774] = x10706 + x311 * x4983 + (-x5 * x513 - x5 * x875) * (-x290 + x311);
  J[1830] = x189 * x4983 + x2098 - x232 * x4983 +
            (-x5 * x513 - x5 * x875) * (x189 - x232);
  J[1886] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1942] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[1998] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2054] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2110] =
    200000.0 * sc[21] * x10129 + x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2166] = -50000000.0 * sc[0] - sc[10] * x5562 - sc[11] * x8856 -
            sc[1] * x2483 - sc[22] * x10134 - sc[3] * x5242 -
            10000000.0 * sc[4] - sc[5] * x6716 - sc[9] * x8119 + x10706 -
            x2092 * x358 + x238 * x4983 - x239 * x513 - x239 * x875 +
            (-x5 * x513 - x5 * x875) * (x238 - x290);
  J[2222] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2278] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2334] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2390] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2446] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2502] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2558] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2614] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2670] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2726] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2782] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2838] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2894] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[2950] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[3006] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[3062] = x10707 + (-x5 * x513 - x5 * x875) * (x294);
  J[39] = 0;
  J[95] = 0;
  J[151] = 0;
  J[207] = 0;
  J[263] = -sc[39] * x6612;
  J[319] = 0;
  J[375] = 0;
  J[431] = 0;
  J[487] = 0;
  J[543] = 0;
  J[599] = 0;
  J[655] = 0;
  J[711] = 0;
  J[767] = 0;
  J[823] = 0;
  J[879] = 0;
  J[935] = 0;
  J[991] = 0;
  J[1047] = 0;
  J[1103] = 0;
  J[1159] = 0;
  J[1215] = 0;
  J[1271] = 0;
  J[1327] = 0;
  J[1383] = 0;
  J[1439] = 0;
  J[1495] = 0;
  J[1551] = 0;
  J[1607] = 0;
  J[1663] = 0;
  J[1719] = 0;
  J[1775] = 0;
  J[1831] = 0;
  J[1887] = 0;
  J[1943] = 0;
  J[1999] = x7341;
  J[2055] = 0;
  J[2111] = 0;
  J[2167] = 0;
  J[2223] = -sc[4] * x6612 - x1500;
  J[2279] = 0;
  J[2335] = 0;
  J[2391] = 0;
  J[2447] = 0;
  J[2503] = 0;
  J[2559] = 0;
  J[2615] = 0;
  J[2671] = 0;
  J[2727] = 0;
  J[2783] = 0;
  J[2839] = 0;
  J[2895] = 0;
  J[2951] = 0;
  J[3007] = 0;
  J[3063] = 0;
  J[40] = -sc[40] * x136 - x10436 * x1363 - x1363 * x2083 - x1363 * x3948 -
          x1363 * x4922 - x1363 * x6317 - x1363 * x7770 - x1363 * x8571;
  J[96] = -kf_qss[176] * sc[1] * x1374 * x2082 - x10436 * x1375 -
          x1360 * x2082 - x1375 * x3948 - x1375 * x4922 - x1375 * x6317 -
          x1375 * x7770 - x1375 * x8571;
  J[152] = -sc[40] * x4132 - x10436 * x1376 - x1376 * x2083 - x1376 * x3948 -
           x1376 * x4922 - x1376 * x6317 - x1376 * x7770 - x1376 * x8571;
  J[208] = -sc[40] * x5224 - x10436 * x1377 - x1377 * x2083 - x1377 * x3948 -
           x1377 * x4922 - x1377 * x6317 - x1377 * x7770 - x1377 * x8571 +
           x1469 * x6547 - x1473 * x6547 +
           (-x146 * x1500) * (-kf_qss[376] * sc_qss[21] * x147 * x151 +
                              (-x151 * x153) * (x1414 - x1418));
  J[264] = -x10436 * x1378 - x10436 * x1379 - 1000000.0 * x1360 * x3946 -
           x1378 * x2083 - x1378 * x3948 - x1378 * x4922 - x1378 * x7770 -
           x1378 * x8571 - x1379 * x2083 - x1379 * x3948 - x1379 * x4922 -
           x1379 * x7770 - x1379 * x8571 - x1458 * x6547 + x1479 * x6547 +
           x6662 +
           (-x146 * x1500) * (x1421 - x1423 * (-sc_qss[21] * x153 + x1411) +
                              (-x151 * x153) * (-x1404 + x1425));
  J[320] = -kf_qss[174] * sc[5] * x1374 * x6316 - x10436 * x1380 -
           x1360 * x6316 - x1380 * x2083 - x1380 * x3948 - x1380 * x4922 -
           x1380 * x7770 - x1380 * x8571;
  J[376] = -x10436 * x1382 - x1382 * x2083 - x1382 * x3948 - x1382 * x4922 -
           x1382 * x6317 - x1382 * x7770 - x1382 * x8571;
  J[432] = 0;
  J[488] = -sc[40] * x8055 - x10436 * x1383 - x1383 * x2083 - x1383 * x3948 -
           x1383 * x4922 - x1383 * x6317 - x1383 * x7770 - x1383 * x8571;
  J[544] = -kf_qss[182] * sc[9] * x1374 * x7769 - x10436 * x1384 -
           x1360 * x7769 - x1384 * x2083 - x1384 * x3948 - x1384 * x4922 -
           x1384 * x6317 - x1384 * x8571;
  J[600] = -sc[40] * x8784 - x10436 * x1385 - x10436 * x1386 - x1385 * x2083 -
           x1385 * x3948 - x1385 * x6317 - x1385 * x7770 - x1385 * x8571 -
           x1386 * x2083 - x1386 * x3948 - x1386 * x6317 - x1386 * x7770 -
           x1386 * x8571 + x5636;
  J[656] = -1000000.0 * kf_qss[180] * sc[11] * x1374 * x8570 - x10436 * x1387 -
           1000000.0 * x1360 * x8570 - x1387 * x2083 - x1387 * x3948 -
           x1387 * x4922 - x1387 * x6317 - x1387 * x7770;
  J[712] = 0;
  J[768] = 0;
  J[824] = 0;
  J[880] = 0;
  J[936] = 0;
  J[992] = 0;
  J[1048] = 0;
  J[1104] = 0;
  J[1160] = 0;
  J[1216] = 0;
  J[1272] = 0;
  J[1328] = 0;
  J[1384] = -x10436 * x1388 - x1388 * x2083 - x1388 * x3948 - x1388 * x4922 -
            x1388 * x6317 - x1388 * x7770 - x1388 * x8571;
  J[1440] = 0;
  J[1496] = 0;
  J[1552] = 0;
  J[1608] = 0;
  J[1664] = 0;
  J[1720] = 0;
  J[1776] = -sc[40] * x10607 - x10436 * x1389 - x1389 * x2083 - x1389 * x3948 -
            x1389 * x4922 - x1389 * x6317 - x1389 * x7770 - x1389 * x8571;
  J[1832] = -25000.0 * kf_qss[184] * sc[32] * x1374 * x8570 -
            25000.0 * x1360 * x8570 - x1390 * x2083 - x1390 * x3948 -
            x1390 * x4922 - x1390 * x6317 - x1390 * x7770 - x1390 * x8571;
  J[1888] = 0;
  J[1944] = 0;
  J[2000] = 0;
  J[2056] = 0;
  J[2112] = 0;
  J[2168] = 0;
  J[2224] = 0;
  J[2280] = -sc[31] * x10607 - sc[3] * x5224 - sc[8] * x8055 + x10421 -
            x10436 * x1391 - x1391 * x2083 - x1391 * x3948 - x1391 * x4922 -
            x1391 * x6317 - x1391 * x7770 - x1391 * x8571;
  J[2336] = 0;
  J[2392] = 0;
  J[2448] = 0;
  J[2504] = 0;
  J[2560] = 0;
  J[2616] = 0;
  J[2672] = 0 + (-x146 * x1500) * (0 + (-x151 * x153) * (-x1428));
  J[2728] = 0;
  J[2784] = -x1482 * x6547;
  J[2840] = 0;
  J[2896] = 0;
  J[2952] = 0;
  J[3008] = -x10436 * x1392 - x1392 * x2083 - x1392 * x3948 - x1392 * x4922 -
            x1392 * x6317 - x1392 * x7770 - x1392 * x8571;
  J[3064] = 0;
  J[41] = 0;
  J[97] = 0;
  J[153] = 0;
  J[209] = 0 + (-x1500 * x161) * (-kf_qss[378] * sc_qss[24] * x157 * x164 +
                                  (-x164 * x166) * (x1442 - x1447));
  J[265] = x1500 * x571 +
           (-x1500 * x161) * (x1449 - x1451 * (-sc_qss[24] * x166 + x1435) +
                              (-x164 * x166) * (-x1439 + x1452));
  J[321] = 0;
  J[377] = 0;
  J[433] = 0;
  J[489] = 0;
  J[545] = 0;
  J[601] = 0;
  J[657] = 0;
  J[713] = 0;
  J[769] = 0;
  J[825] = 0;
  J[881] = sc[18] * x9900;
  J[937] = 0;
  J[993] = 0;
  J[1049] = sc[15] * x9900;
  J[1105] = 0;
  J[1161] = 0;
  J[1217] = 0;
  J[1273] = 0;
  J[1329] = 0;
  J[1385] = 0;
  J[1441] = 0;
  J[1497] = 0;
  J[1553] = 0;
  J[1609] = 0;
  J[1665] = 0;
  J[1721] = 0;
  J[1777] = 0;
  J[1833] = 0;
  J[1889] = 0;
  J[1945] = 0;
  J[2001] = 0;
  J[2057] = 0;
  J[2113] = 0;
  J[2169] = 0;
  J[2225] = 0;
  J[2281] = 0;
  J[2337] = -15700000000000.0 * exp(-15096.4999741416 * invT);
  J[2393] = 0;
  J[2449] = 0;
  J[2505] = 0;
  J[2561] = 0;
  J[2617] = 0;
  J[2673] = 0;
  J[2729] = 0 + (-x1500 * x161) * (0 + (-x164 * x166) * (-x1430));
  J[2785] = 0;
  J[2841] = 0;
  J[2897] = 0;
  J[2953] = 0;
  J[3009] = 0;
  J[3065] = 0;
  J[42] = 0;
  J[98] = 0;
  J[154] = 0;
  J[210] = 0 + (-x1500 * x174) * (-kf_qss[380] * sc_qss[25] * x170 * x177 +
                                  (-x177 * x179) * (x1469 - x1473));
  J[266] = x1018 * x1500 +
           (-x1500 * x174) * (x1475 - x1477 * (-sc_qss[25] * x179 + x1466) +
                              (-x177 * x179) * (-x1458 + x1479));
  J[322] = 0;
  J[378] = 0;
  J[434] = 0;
  J[490] = 0;
  J[546] = 0;
  J[602] = 0;
  J[658] = 0;
  J[714] = 0;
  J[770] = 0;
  J[826] = 0;
  J[882] = 0;
  J[938] = 0;
  J[994] = 0;
  J[1050] = sc[24] * x10039;
  J[1106] = 0;
  J[1162] = 0;
  J[1218] = 0;
  J[1274] = 0;
  J[1330] = 0;
  J[1386] = sc[18] * x10039;
  J[1442] = 0;
  J[1498] = 0;
  J[1554] = 0;
  J[1610] = 0;
  J[1666] = 0;
  J[1722] = 0;
  J[1778] = 0;
  J[1834] = 0;
  J[1890] = 0;
  J[1946] = 0;
  J[2002] = 0;
  J[2058] = 0;
  J[2114] = 0;
  J[2170] = 0;
  J[2226] = 0;
  J[2282] = 0;
  J[2338] = 0;
  J[2394] = -x10045;
  J[2450] = 0;
  J[2506] = 0;
  J[2562] = 0;
  J[2618] = 0;
  J[2674] = 0;
  J[2730] = 0;
  J[2786] = 0 + (-x1500 * x174) * (0 + (-x177 * x179) * (-x1482));
  J[2842] = 0;
  J[2898] = 0;
  J[2954] = 0;
  J[3010] = 0;
  J[3066] = 0;
  J[43] = -sc[43] * x136;
  J[99] = sc[44] * x2082;
  J[155] = -sc[43] * x4132;
  J[211] = -sc[43] * x5224;
  J[267] =
    -kf_qss[382] * x1486 * x1500 - sc[43] * x6633 + 1000000.0 * sc[44] * x3946;
  J[323] = sc[44] * x6730;
  J[379] = 0;
  J[435] = 0;
  J[491] = -sc[43] * x8055;
  J[547] = sc[44] * x7769;
  J[603] = -sc[43] * x8784 + x5561;
  J[659] = 1000000.0 * sc[44] * x8570;
  J[715] = 0;
  J[771] = 0;
  J[827] = 0;
  J[883] = 0;
  J[939] = 0;
  J[995] = 0;
  J[1051] = 0;
  J[1107] = 0;
  J[1163] = 0;
  J[1219] = 0;
  J[1275] = 0;
  J[1331] = 0;
  J[1387] = 0;
  J[1443] = 0;
  J[1499] = 0;
  J[1555] = 0;
  J[1611] = 0;
  J[1667] = 0;
  J[1723] = 0;
  J[1779] = -sc[43] * x10607;
  J[1835] = 25000.0 * sc[44] * x8570;
  J[1891] = 0;
  J[1947] = 0;
  J[2003] = 0;
  J[2059] = 0;
  J[2115] = 0;
  J[2171] = 0;
  J[2227] = 0;
  J[2283] = 0;
  J[2339] = 0;
  J[2395] = 0;
  J[2451] = -sc[31] * x10607 - sc[3] * x5224 - sc[8] * x8055 + x10421;
  J[2507] = sc[5] * x6730 + x10436 + x2083 + x3948 + x6208 + x7770 + x8571;
  J[2563] = 0;
  J[2619] = 0;
  J[2675] = 0;
  J[2731] = 0;
  J[2787] = 0;
  J[2843] = 0;
  J[2899] = -kf_qss[381] * x1500 / x1484;
  J[2955] = 0;
  J[3011] = 0;
  J[3067] = 0;
  J[44] = sc[43] * x136 - 100000.0 * sc[6] * x681 + 100000.0 * sc[6] * x734;
  J[100] = -sc[44] * x2082 + 100000.0 * sc[6] * x770 - 100000.0 * sc[6] * x772;
  J[156] = sc[43] * x4132 + 100000.0 * sc[6] * x801 - 100000.0 * sc[6] * x804;
  J[212] = sc[43] * x5224 + 100000.0 * sc[6] * x817 - 100000.0 * sc[6] * x842;
  J[268] = sc[43] * x6633 - 1000000.0 * sc[44] * x3946 + 2500000.0 * sc[52] +
           100000.0 * sc[6] * x829 - 100000.0 * sc[6] * x872;
  J[324] = -sc[44] * x6730 + 100000.0 * sc[6] * x895 - 100000.0 * sc[6] * x897;
  J[380] =
    100000.0 * sc[6] * x909 + 100000.0 * sc[6] * x913 + 100000.0 * x678 * x733;
  J[436] = 0;
  J[492] = sc[43] * x8055 - 100000.0 * sc[6] * x922;
  J[548] = -sc[44] * x7769 + 100000.0 * sc[6] * x935 - 100000.0 * sc[6] * x937;
  J[604] = sc[43] * x8784 + 5000000.0 * sc[52] * x8794 +
           100000.0 * sc[6] * x465 - 100000.0 * sc[6] * x977 - x5561;
  J[660] = -1000000.0 * sc[44] * x8570 + 100000.0 * sc[6] * x1001 -
           100000.0 * sc[6] * x1005;
  J[716] = 0;
  J[772] = -100000.0 * sc[6] * x1027 + 100000.0 * sc[6] * x553;
  J[828] = 100000.0 * sc[6] * x1039 - 100000.0 * sc[6] * x1047;
  J[884] = 100000.0 * sc[6] * x1058;
  J[940] = 0;
  J[996] = -100000.0 * sc[6] * x1063;
  J[1052] = 0;
  J[1108] = 0;
  J[1164] = 0;
  J[1220] = 0;
  J[1276] = -100000.0 * sc[6] * x1067 + 100000.0 * sc[6] * x1068;
  J[1332] = 0;
  J[1388] = 100000.0 * sc[6] * x1070 + 100000.0 * sc[6] * x463;
  J[1444] = 100000.0 * sc[6] * x1089;
  J[1500] = 100000.0 * sc[6] * x1093;
  J[1556] = 0;
  J[1612] = 0;
  J[1668] = 0;
  J[1724] = 100000.0 * sc[6] * x1099;
  J[1780] = sc[43] * x10607 - 100000.0 * sc[6] * x1104;
  J[1836] = -25000.0 * sc[44] * x8570 - 100000.0 * sc[6] * x585 +
            100000.0 * sc[6] * x688;
  J[1892] = 0;
  J[1948] = 0;
  J[2004] = 0;
  J[2060] = -100000.0 * sc[6] * x692;
  J[2116] = 0;
  J[2172] = 0;
  J[2228] = 0;
  J[2284] = 0;
  J[2340] = 0;
  J[2396] = 0;
  J[2452] = sc[0] * x136 + sc[10] * x8784 + sc[2] * x4132 + sc[31] * x10607 +
            sc[3] * x5224 + sc[4] * x6633 + sc[8] * x8055;
  J[2508] = -sc[5] * x6730 - 100000.0 * sc[6] * x710 - x10436 - x2083 - x3948 -
            x6208 - x7770 - x8571 -
            100000000000.0 * exp(-4830.87999172531 * invT);
  J[2564] = 100000.0 * sc[6] * x103 - 100000.0 * sc[6] * x545;
  J[2620] = -100000.0 * sc[6] * x126;
  J[2676] = 100000.0 * sc[6] * x481;
  J[2732] = 100000.0 * sc[6] * x464;
  J[2788] = -100000.0 * sc[6] * x586;
  J[2844] = 100000.0 * sc[6] * x127;
  J[2900] = 0;
  J[2956] = x9804;
  J[3012] = 0;
  J[3068] = 0;
  J[45] =
    -x1006 * x579 + x1006 * x602 - x10210 * x681 + x10210 * x734 + x10448 +
    x115 * x615 + 5.207e+74 * x120 * x958 + x2308 + x2361 + x4040 +
    5.187e+74 * x41 * x958 + x5027 + x519 * x964 - x528 * x964 - x536 * x641 +
    x544 * x641 + x557 * x641 - x604 * x641 + x6438 + x7857 +
    5.207e+74 * x85 * x958 + x8604 + x9812 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x681 + x734) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x557 - x604 + (-x141) * (-x681 + x734)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[101] =
    -x1006 * x574 + x1006 * x756 + x10210 * x770 - x10210 * x772 + x10459 +
    x2613 + x4080 + x5080 + x511 * x641 + x521 * x964 - x641 * x742 +
    x641 * x758 - x641 * x771 + x6476 + x738 * x964 + x7889 + x8633 + x9818 +
    x9979 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x770 - x772) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x758 - x771 + (-x141) * (x770 - x772)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[157] =
    x1006 * x745 - x1006 * x765 + x10210 * x801 - x10210 * x804 + x10470 +
    x2710 + x4190 + x5143 + x543 * x641 - x641 * x753 + x641 * x792 -
    x641 * x803 + x6516 - x774 * x964 + x790 * x964 + x7917 + x8654 + x9824 +
    x9981 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x801 - x804) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x792 - x803 + (-x141) * (x801 - x804)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[213] =
    -x1006 * x797 + x1006 * x800 + x10210 * x817 - x10210 * x842 + x10482 +
    x116 * x964 + x2772 + x4239 + x5304 - x641 * x741 + x641 * x763 +
    x641 * x821 - x641 * x841 + x6576 - x791 * x964 + x7944 + x8680 + x9831 +
    x9983 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x817 - x842) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x821 - x841 + (-x141) * (x817 - x842)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[269] =
    -x1006 * x813 + x1006 * x839 + x10210 * x829 - x10210 * x872 + x10494 +
    x2852 + x4313 - x468 * x641 + x5372 + x641 * x669 + x641 * x793 -
    x641 * x796 + x6715 + x7975 - x811 * x964 + x823 * x964 + x8706 + x9836 +
    x9986 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x829 - x872) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[325] =
    x1006 * x833 - x1006 * x840 + x10210 * x895 - x10210 * x897 + x10506 +
    x2952 + x4356 + x5423 + x641 * x799 - x641 * x812 + x641 * x869 -
    x641 * x896 + x6794 + x8000 + x826 * x964 + x827 * x964 + x8727 + x9841 +
    x9988 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x895 - x897) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x869 - x896 + (-x141) * (x895 - x897)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[381] =
    x10210 * x909 + x10210 * x913 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x909 + x913) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (0 + (-x141) * (x909 + x913)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[437] = 0;
  J[493] =
    x1006 * x919 - x10210 * x922 - x1028 * x844 + x1035 * x919 + x1040 * x915 +
    x1040 * x920 + x1043 * x915 + x1043 * x920 + x1045 * x919 - x1048 * x844 +
    x1497 * x919 + x1861 * x915 + x1861 * x920 + x1868 * x919 - x1871 * x844 -
    x1887 * x844 + x1887 * x915 + x1887 * x920 + x1892 * x919 - x1899 * x844 +
    x1899 * x915 + x1899 * x920 + x1903 * x919 - x1935 * x844 + x1935 * x915 +
    x1935 * x920 + x1940 * x919 - x49 * x844 + x595 * x915 + x595 * x920 +
    x597 * x919 + x641 * x915 + x641 * x920 - x723 * x844 + x8106 -
    x844 * x964 + x915 * x950 + x920 * x950 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x922) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x920 + (-x141) * (-x922)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[549] =
    -x1006 * x865 + x1006 * x868 + x10210 * x935 - x10210 * x937 + x10527 +
    x3180 + x4484 + x5559 + x641 * x834 - x641 * x835 + x641 * x885 -
    x641 * x936 + x6916 + x8173 + x838 * x964 + x859 * x964 + x8783 + x9856 +
    x9992 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x935 - x937) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x885 - x936 + (-x141) * (x935 - x937)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[605] =
    -x1006 * x863 + x1006 * x893 + x10210 * x465 - x10210 * x977 + x10539 +
    x3221 + x4526 - x546 * x641 + x5669 - x641 * x831 + x641 * x836 +
    x641 * x926 + x6968 + x8199 + x870 * x964 - x877 * x964 + x8855 + x9861 +
    x9994 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x465 - x977) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[661] =
    x1001 * x10210 - x1004 * x641 - x1005 * x10210 + x1006 * x889 -
    x1006 * x894 + x10550 + x3261 + x4558 + x498 * x641 + x5718 + x641 * x700 -
    x641 * x864 + x6999 + x8222 + x8898 + x899 * x964 + x924 * x964 + x9868 +
    x9996 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1001 - x1005) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[717] = 0;
  J[773] =
    x1000 * x641 - x1006 * x932 + x1006 * x934 - x10210 * x1027 +
    x10210 * x553 - x1026 * x641 + x10559 + x3338 + x4611 + x5799 -
    x641 * x861 + x641 * x866 + x7058 + x8258 + x8928 + x925 * x964 +
    x938 * x964 + x9877 + x9999 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x1027 + x553) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[829] =
    x10002 - x1006 * x929 + x1006 * x974 + x1014 * x641 + x10210 * x1039 -
    x10210 * x1047 - x1046 * x641 + x10569 + x3390 + x4639 + x5845 +
    x641 * x887 - x641 * x890 + x7085 + x8278 + x8947 + x963 * x964 +
    x964 * x966 + x9885 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1039 - x1047) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[885] =
    x1006 * x1056 + x10210 * x1058 - x1028 * x1041 + x1035 * x1056 +
    x1040 * x1055 + x1040 * x1057 - x1041 * x1048 - x1041 * x1871 -
    x1041 * x1899 - x1041 * x1935 - x1041 * x49 - x1041 * x723 - x1041 * x964 -
    x1041 * x969 + x1043 * x1055 + x1043 * x1057 + x1045 * x1056 +
    x1055 * x1861 + x1055 * x1899 + x1055 * x1935 + x1055 * x595 +
    x1055 * x629 + x1055 * x641 + x1055 * x950 + x1056 * x1497 + x1056 * x1852 +
    x1056 * x1868 + x1056 * x1903 + x1056 * x1940 + x1056 * x597 +
    x1057 * x1861 + x1057 * x1899 + x1057 * x1935 + x1057 * x595 +
    x1057 * x629 + x1057 * x641 + x1057 * x950 + x9907 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
       (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1058) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1057 + (-x141) * (x1058)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[941] = 0;
  J[997] =
    x10010 + x1006 * x1061 - x10210 * x1063 - x1028 * x39 + x1035 * x1061 +
    x1040 * x1060 + x1040 * x1062 + x1043 * x1060 + x1043 * x1062 +
    x1045 * x1061 - x1048 * x39 + x1060 * x1861 + x1060 * x1887 +
    x1060 * x1935 + x1060 * x595 + x1060 * x629 + x1060 * x641 + x1060 * x950 +
    x1061 * x1497 + x1061 * x1852 + x1061 * x1868 + x1061 * x1892 +
    x1061 * x1940 + x1061 * x597 + x1062 * x1861 + x1062 * x1887 +
    x1062 * x1935 + x1062 * x595 + x1062 * x629 + x1062 * x641 + x1062 * x950 -
    x1871 * x39 - x1887 * x39 - x1935 * x39 - x39 * x49 - x39 * x723 -
    x39 * x964 - x39 * x969 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
       (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x1063) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1062 + (-x141) * (-x1063)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1053] = 0;
  J[1109] = 0;
  J[1165] = 0;
  J[1221] = 0;
  J[1277] =
    -x10210 * x1067 + x10210 * x1068 - x1033 * x1040 - x1033 * x1043 -
    x1033 * x1861 - x1033 * x1887 - x1033 * x1899 - x1033 * x1935 -
    x1033 * x595 - x1033 * x629 - x1033 * x641 - x1033 * x950 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x1067 + x1068) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (-x1033 + (-x141) * (-x1067 + x1068)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1333] = 0;
  J[1389] =
    x1006 * x1079 + x10209 * x678 * x733 + x10210 * x1070 + x10210 * x463 +
    x1028 * x643 + x1035 * x1079 + x1040 * x1076 + x1040 * x1082 +
    x1043 * x1076 + x1043 * x1082 + x1045 * x1079 + x1048 * x643 +
    x1076 * x1861 + x1076 * x1887 + x1076 * x1899 + x1076 * x1935 +
    x1076 * x595 + x1076 * x629 + x1076 * x641 + x1076 * x950 + x1079 * x1497 +
    x1079 * x1852 + x1079 * x1868 + x1079 * x1892 + x1079 * x1903 +
    x1079 * x1940 + x1079 * x597 + x1082 * x1861 + x1082 * x1887 +
    x1082 * x1899 + x1082 * x1935 + x1082 * x595 + x1082 * x629 + x1082 * x641 +
    x1082 * x950 + x112 * x38 * x599 * x6002 + x1871 * x643 + x1887 * x643 +
    x1899 * x643 + x1935 * x643 + x49 * x643 + x643 * x964 + x643 * x969 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1070 + x463) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1082 + (-x141) * (x1070 + x463)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1445] =
    x1006 * x1087 + x10210 * x1089 + x1028 * x684 + x1035 * x1087 +
    x1040 * x1086 + x1040 * x1088 + x1043 * x1086 + x1043 * x1088 +
    x1045 * x1087 + x1048 * x684 + x1086 * x1861 + x1086 * x1899 +
    x1086 * x1935 + x1086 * x595 + x1086 * x629 + x1086 * x641 + x1086 * x950 +
    x1087 * x1497 + x1087 * x1852 + x1087 * x1868 + x1087 * x1903 +
    x1087 * x1940 + x1087 * x597 + x1088 * x1861 + x1088 * x1899 +
    x1088 * x1935 + x1088 * x595 + x1088 * x629 + x1088 * x641 + x1088 * x950 +
    x1871 * x684 + x1899 * x684 + x1935 * x684 + x49 * x684 + x684 * x723 +
    x684 * x964 + x684 * x969 + x9934 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
       (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1089) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1088 + (-x141) * (x1089)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1501] =
    -kf_qss[304] * x9466 / (x47 * x95) + x1006 * x975 + x10210 * x1093 +
    x1035 * x975 + x1040 * x1092 - x1040 * x891 + x1043 * x1092 - x1043 * x891 +
    x1045 * x975 + x1092 * x1861 + x1092 * x1887 + x1092 * x1899 +
    x1092 * x1935 + x1092 * x595 + x1092 * x629 + x1092 * x641 + x1092 * x950 +
    x1497 * x975 + x1852 * x975 - x1861 * x891 + x1868 * x975 + x1892 * x975 -
    x1899 * x891 + x1903 * x975 - x1935 * x891 + x1940 * x975 - x595 * x891 +
    x597 * x975 - x629 * x891 - x641 * x891 - x891 * x950 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1093) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1092 + (-x141) * (x1093)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1557] = 0;
  J[1613] = 0;
  J[1669] = 0;
  J[1725] =
    x1006 * x1097 + x10210 * x1099 - x1028 * x1095 + x1035 * x1097 +
    x1040 * x1098 + x1040 * x886 + x1043 * x1098 + x1043 * x886 +
    x1045 * x1097 - x1048 * x1095 - x1095 * x1871 - x1095 * x1899 -
    x1095 * x1935 - x1095 * x49 - x1095 * x723 - x1095 * x964 - x1095 * x969 +
    x1097 * x1497 + x1097 * x1852 + x1097 * x1868 + x1097 * x1892 +
    x1097 * x1903 + x1097 * x1940 + x1097 * x597 + x1098 * x1861 +
    x1098 * x1887 + x1098 * x1899 + x1098 * x1935 + x1098 * x595 +
    x1098 * x629 + x1098 * x641 + x1098 * x950 - x112 * x9475 + x1861 * x886 +
    x1899 * x886 + x1935 * x886 + x54 * x9475 / x95 + x595 * x886 +
    x629 * x886 + x641 * x886 + x886 * x950 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
       (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x1099) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x1098 + (-x141) * (x1099)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1781] =
    x1006 * x707 - x10210 * x1104 - x1028 * x968 + x1035 * x707 +
    x1040 * x1100 + x1040 * x726 + x1043 * x1100 + x1043 * x726 + x1045 * x707 -
    x1048 * x968 + x10621 + x1100 * x1861 + x1100 * x1887 + x1100 * x1899 +
    x1100 * x595 + x1100 * x629 + x1100 * x641 + x1100 * x950 + x1497 * x707 +
    x1852 * x707 + x1861 * x726 + x1868 * x707 - x1871 * x968 + x1887 * x726 -
    x1887 * x968 + x1892 * x707 + x1899 * x726 - x1899 * x968 + x1903 * x707 -
    x49 * x968 + x595 * x726 + x597 * x707 + x629 * x726 + x641 * x726 -
    x723 * x968 + x726 * x950 - x964 * x968 - x968 * x969 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x1104) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x726 + (-x141) * (-x1104)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1837] =
    x1002 * x964 + x10027 - x1006 * x682 + x1006 * x999 - x10210 * x585 +
    x10210 * x688 + x10640 + x3700 + x4857 - x564 * x641 + x587 * x964 +
    x612 * x641 + x6166 + x641 * x928 - x641 * x930 + x7333 + x8444 + x9081 +
    x9954 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x585 + x688) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1893] = 0;
  J[1949] = 0;
  J[2005] = 0;
  J[2061] =
    -x10210 * x692 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (0 + (x182) * (0 + (-x141) * (-x692)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x692) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (0 + (-x141) * (-x692)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2117] = 0;
  J[2173] = 0;
  J[2229] = 0;
  J[2285] = 0;
  J[2341] = 0;
  J[2397] = 0;
  J[2453] = 0;
  J[2509] =
    -x10210 * x710 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (0 + (x182) * (0 + (-x141) * (-x710)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x710) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (0 + (-x141) * (-x710)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2565] =
    -x1003 * x1006 + x10030 + x1006 * x970 + x10210 * x103 - x10210 * x545 +
    x10657 + x3754 - x482 * x641 + x4887 - x524 * x964 + x6239 + x641 * x712 -
    x641 * x927 + x641 * x933 + x7 * x964 + x7382 + x8471 + x9111 + x9961 -
    1.34e+88 * exp(-71859.339876914004 * invT - 21.17 * tc[0]) -
    1.625e+88 * exp(-70198.724879758403 * invT - 21.01 * tc[0]) -
    1.415e+78 * exp(-60738.251562629703 * invT - 17.71 * tc[0]) +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x103 - x545) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2621] =
    -x1006 * x101 - x101 * x1035 - x101 * x1045 - x101 * x1497 - x101 * x1852 -
    x101 * x1868 - x101 * x1892 - x101 * x1903 - x101 * x1940 - x101 * x597 -
    x10210 * x126 + x1040 * x135 + x1043 * x135 + x135 * x1861 + x135 * x1887 +
    x135 * x1899 + x135 * x1935 + x135 * x595 + x135 * x629 + x135 * x641 +
    x135 * x950 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x126) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x135 + (-x141) * (-x126)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2677] =
    x1006 * x107 + x10210 * x481 + x1035 * x107 + x1040 * x461 - x1040 * x83 +
    x1043 * x461 - x1043 * x83 + x1045 * x107 + x107 * x1497 + x107 * x1852 +
    x107 * x1868 + x107 * x1892 + x107 * x1903 + x107 * x1940 + x107 * x597 +
    x1861 * x461 - x1861 * x83 + x1887 * x461 - x1887 * x83 + x1899 * x461 -
    x1899 * x83 + x1935 * x461 - x1935 * x83 + x461 * x595 + x461 * x629 +
    x461 * x641 + x461 * x950 - x595 * x83 - x629 * x83 - x641 * x83 -
    x83 * x950 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x481) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x461 + (-x141) * (x481)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2733] =
    x1006 * x566 + x10210 * x464 - x1028 * x19 + x1035 * x566 + x1040 * x130 +
    x1040 * x562 + x1043 * x130 + x1043 * x562 + x1045 * x566 - x1048 * x19 +
    x130 * x1861 + x130 * x1887 + x130 * x1899 + x130 * x1935 + x130 * x595 +
    x130 * x629 + x130 * x641 + x130 * x950 + x1497 * x566 + x1852 * x566 +
    x1861 * x562 + x1868 * x566 - x1871 * x19 - x1887 * x19 + x1887 * x562 +
    x1892 * x566 - x1899 * x19 + x1899 * x562 - x19 * x1935 - x19 * x49 -
    x19 * x723 - x19 * x964 - x19 * x969 + x1903 * x566 + x1935 * x562 +
    x1940 * x566 + x562 * x595 + x562 * x629 + x562 * x641 + x562 * x950 +
    x566 * x597 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x464) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x130 + (-x141) * (x464)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2789] =
    x1006 * x582 - x10210 * x586 - x1028 * x573 + x1035 * x582 + x1040 * x132 +
    x1040 * x967 + x1043 * x132 + x1043 * x967 + x1045 * x582 - x1048 * x573 +
    x132 * x1861 + x132 * x1887 + x132 * x1899 + x132 * x1935 + x132 * x595 +
    x132 * x629 + x132 * x641 + x132 * x950 + x1497 * x582 + x1852 * x582 +
    x1861 * x967 + x1868 * x582 - x1871 * x573 - x1887 * x573 + x1887 * x967 +
    x1892 * x582 - x1899 * x573 + x1899 * x967 + x1903 * x582 - x1935 * x573 +
    x1935 * x967 + x1940 * x582 - x49 * x573 - x573 * x723 - x573 * x964 -
    x573 * x969 + x582 * x597 + x595 * x967 + x629 * x967 + x641 * x967 +
    x950 * x967 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (-x586) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x132 + (-x141) * (-x586)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2845] =
    x1006 * x104 + x10210 * x127 + x1028 * x529 + x1035 * x104 + x104 * x1045 +
    x104 * x1497 + x104 * x1852 + x104 * x1868 + x104 * x1892 + x104 * x1903 +
    x104 * x1940 + x104 * x597 + x1040 * x106 + x1040 * x50 + x1043 * x106 +
    x1043 * x50 + x1048 * x529 + x106 * x1861 + x106 * x1887 + x106 * x1899 +
    x106 * x1935 + x106 * x595 + x106 * x629 + x106 * x641 + x106 * x950 +
    x1861 * x50 + x1871 * x529 + x1887 * x50 + x1887 * x529 + x1899 * x50 +
    x1899 * x529 + x1935 * x50 + x1935 * x529 + x49 * x529 + x50 * x595 +
    x50 * x629 + x50 * x641 + x50 * x950 + x529 * x723 + x529 * x964 +
    x529 * x969 +
    (x1028 * x184 + x1048 * x184 + x184 * x1871 + x184 * x1887 + x184 * x1899 +
     x184 * x1935 + x184 * x49 + x184 * x723 + x184 * x964 + x184 * x969) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-x1040 * x141 - x1043 * x141 - x141 * x1861 - x141 * x1887 - x141 * x1899 -
     x141 * x1935 - x141 * x595 - x141 * x629 - x141 * x641 - x141 * x950) *
      (x127) +
    (x1006 * x181 - x1028 * x113 + x1035 * x181 + x1040 * x182 + x1043 * x182 +
     x1045 * x181 - x1048 * x113 - x113 * x1871 - x113 * x1887 - x113 * x1899 -
     x113 * x1935 - x113 * x49 - x113 * x723 - x113 * x964 - x113 * x969 +
     x1497 * x181 + x181 * x1852 + x181 * x1868 + x181 * x1892 + x181 * x1903 +
     x181 * x1940 + x181 * x597 + x182 * x1861 + x182 * x1887 + x182 * x1899 +
     x182 * x1935 + x182 * x595 + x182 * x629 + x182 * x641 + x182 * x950) *
      (x106 + (-x141) * (x127)) +
    (-x1028 * x121 + x1040 * x183 + x1043 * x183 - x1048 * x121 - x121 * x1871 -
     x121 * x1887 - x121 * x1899 - x121 * x1935 - x121 * x49 - x121 * x723 -
     x121 * x964 - x121 * x969 + x183 * x1861 + x183 * x1887 + x183 * x1899 +
     x183 * x1935 + x183 * x595 + x183 * x629 + x183 * x641 + x183 * x950) *
      (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2901] = 0;
  J[2957] = 0;
  J[3013] = 0;
  J[3069] = 0;
  J[46] = -4520000.0 * sc[3] * x579 + 4520000.0 * sc[3] * x602 +
          (4520000.0 * sc[3] * x181) * (x557 - x604 + (-x141) * (-x681 + x734));
  J[102] = -4520000.0 * sc[3] * x574 + 4520000.0 * sc[3] * x756 +
           (4520000.0 * sc[3] * x181) * (x758 - x771 + (-x141) * (x770 - x772));
  J[158] = 4520000.0 * sc[3] * x745 - 4520000.0 * sc[3] * x765 +
           (4520000.0 * sc[3] * x181) * (x792 - x803 + (-x141) * (x801 - x804));
  J[214] = -kf_qss[374] * x10709 * x1396 / ((x1394) * (x1394)) -
           4520000.0 * sc[3] * x797 + 4520000.0 * sc[3] * x800 +
           4520000.0 * x115 +
           (4520000.0 * sc[3] * x181) * (x821 - x841 + (-x141) * (x817 - x842));
  J[270] =
    -4520000.0 * sc[3] * x813 + 4520000.0 * sc[3] * x839 +
    (4520000.0 * sc[3] * x181) * (-x468 + x669 + (-x141) * (x829 - x872));
  J[326] = 4520000.0 * sc[3] * x833 - 4520000.0 * sc[3] * x840 +
           (4520000.0 * sc[3] * x181) * (x869 - x896 + (-x141) * (x895 - x897));
  J[382] = 0 + (4520000.0 * sc[3] * x181) * (0 + (-x141) * (x909 + x913));
  J[438] = 0;
  J[494] = 4520000.0 * sc[3] * x919 +
           (4520000.0 * sc[3] * x181) * (x920 + (-x141) * (-x922));
  J[550] = -4520000.0 * sc[3] * x865 + 4520000.0 * sc[3] * x868 +
           (4520000.0 * sc[3] * x181) * (x885 - x936 + (-x141) * (x935 - x937));
  J[606] =
    -4520000.0 * sc[3] * x863 + 4520000.0 * sc[3] * x893 +
    (4520000.0 * sc[3] * x181) * (-x546 + x926 + (-x141) * (x465 - x977));
  J[662] =
    4520000.0 * sc[3] * x889 - 4520000.0 * sc[3] * x894 +
    (4520000.0 * sc[3] * x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005));
  J[718] = 0;
  J[774] =
    -4520000.0 * sc[3] * x932 + 4520000.0 * sc[3] * x934 +
    (4520000.0 * sc[3] * x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553));
  J[830] =
    -4520000.0 * sc[3] * x929 + 4520000.0 * sc[3] * x974 +
    (4520000.0 * sc[3] * x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047));
  J[886] = 4520000.0 * sc[3] * x1056 +
           (4520000.0 * sc[3] * x181) * (x1057 + (-x141) * (x1058));
  J[942] = 0;
  J[998] = 4520000.0 * sc[3] * x1061 +
           (4520000.0 * sc[3] * x181) * (x1062 + (-x141) * (-x1063));
  J[1054] = 0;
  J[1110] = 0;
  J[1166] = 0;
  J[1222] = 0;
  J[1278] =
    0 + (4520000.0 * sc[3] * x181) * (-x1033 + (-x141) * (-x1067 + x1068));
  J[1334] = 0;
  J[1390] = 4520000.0 * sc[3] * x1079 +
            (4520000.0 * sc[3] * x181) * (x1082 + (-x141) * (x1070 + x463));
  J[1446] = 4520000.0 * sc[3] * x1087 +
            (4520000.0 * sc[3] * x181) * (x1088 + (-x141) * (x1089));
  J[1502] = 4520000.0 * sc[3] * x975 +
            (4520000.0 * sc[3] * x181) * (x1092 + (-x141) * (x1093));
  J[1558] = 0;
  J[1614] = 0;
  J[1670] = 0;
  J[1726] = 4520000.0 * sc[3] * x1097 +
            (4520000.0 * sc[3] * x181) * (x1098 + (-x141) * (x1099));
  J[1782] = 4520000.0 * sc[3] * x707 +
            (4520000.0 * sc[3] * x181) * (x726 + (-x141) * (-x1104));
  J[1838] =
    -4520000.0 * sc[3] * x682 + 4520000.0 * sc[3] * x999 +
    (4520000.0 * sc[3] * x181) * (-x564 + x612 + (-x141) * (-x585 + x688));
  J[1894] = 0;
  J[1950] = 0;
  J[2006] = 0;
  J[2062] = 0 + (4520000.0 * sc[3] * x181) * (0 + (-x141) * (-x692));
  J[2118] = 0;
  J[2174] = 0;
  J[2230] = 0;
  J[2286] = 0;
  J[2342] = 0;
  J[2398] = 0;
  J[2454] = 0;
  J[2510] = 0 + (4520000.0 * sc[3] * x181) * (0 + (-x141) * (-x710));
  J[2566] =
    -4520000.0 * sc[3] * x1003 + 4520000.0 * sc[3] * x970 +
    (4520000.0 * sc[3] * x181) * (-x482 + x712 + (-x141) * (x103 - x545));
  J[2622] = -4520000.0 * sc[3] * x101 - x10709 * x1399 -
            2.657e+20 * exp(-17813.869969487099 * invT - 1.67 * tc[0]) -
            25000000000.0 * exp(-10492.0674820284 * invT) +
            (4520000.0 * sc[3] * x181) * (x135 + (-x141) * (-x126));
  J[2678] = 4520000.0 * sc[3] * x107 +
            (4520000.0 * sc[3] * x181) * (x461 + (-x141) * (x481));
  J[2734] = 4520000.0 * sc[3] * x566 +
            (4520000.0 * sc[3] * x181) * (x130 + (-x141) * (x464));
  J[2790] = 4520000.0 * sc[3] * x582 +
            (4520000.0 * sc[3] * x181) * (x132 + (-x141) * (-x586));
  J[2846] = 4520000.0 * sc[3] * x104 +
            (4520000.0 * sc[3] * x181) * (x106 + (-x141) * (x127));
  J[2902] = -x10709 * x1400;
  J[2958] = 0;
  J[3014] = 0;
  J[3070] = 0;
  J[47] =
    7540000.0 * sc[3] * x557 - 7540000.0 * sc[3] * x604 +
    (-22620000000.0 * x1951 * x61) *
      (x466 - x476 + (-x81) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x94) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-7540000.0 * sc[3] * x141) * (-x681 + x734);
  J[103] =
    7540000.0 * sc[3] * x758 - 7540000.0 * sc[3] * x771 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x94) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-7540000.0 * sc[3] * x141) * (x770 - x772);
  J[159] =
    7540000.0 * sc[3] * x792 - 7540000.0 * sc[3] * x803 +
    (-22620000000.0 * x1951 * x61) *
      (-x644 + x683 + (-x81) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x94) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-7540000.0 * sc[3] * x141) * (x801 - x804);
  J[215] =
    7540000.0 * sc[3] * x821 - 7540000.0 * sc[3] * x841 + x10711 * x1414 -
    x10711 * x1418 + 7540000.0 * x120 +
    (-22620000000.0 * x1951 * x61) *
      (x785 + (-x81) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x94) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-7540000.0 * sc[3] * x141) * (x817 - x842);
  J[271] =
    -7540000.0 * sc[3] * x468 + 7540000.0 * sc[3] * x669 - x10711 * x1404 +
    x10711 * x1425 +
    (-22620000000.0 * x1951 * x61) *
      (x68 - x807 + (-x81) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x94) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-7540000.0 * sc[3] * x141) * (x829 - x872);
  J[327] =
    7540000.0 * sc[3] * x869 - 7540000.0 * sc[3] * x896 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x94) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-7540000.0 * sc[3] * x141) * (x895 - x897);
  J[383] =
    0 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (0 + (-x141) * (x909 + x913)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-7540000.0 * sc[3] * x141) * (x909 + x913);
  J[439] = 0;
  J[495] =
    7540000.0 * sc[3] * x920 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x920 + (-x141) * (-x922)) +
       (-x94) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-7540000.0 * sc[3] * x141) * (-x922);
  J[551] =
    7540000.0 * sc[3] * x885 - 7540000.0 * sc[3] * x936 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x94) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-7540000.0 * sc[3] * x141) * (x935 - x937);
  J[607] =
    -22620000000.0 * kf_qss[360] * sc_qss[17] * x1951 * x59 -
    7540000.0 * sc[3] * x546 + 7540000.0 * sc[3] * x926 +
    (-22620000000.0 * x1951 * x61) *
      (-x470 + x79 + (-x81) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x94) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-7540000.0 * sc[3] * x141) * (x465 - x977);
  J[663] =
    -7540000.0 * sc[3] * x1004 + 7540000.0 * sc[3] * x700 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x94) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-7540000.0 * sc[3] * x141) * (x1001 - x1005);
  J[719] = 0;
  J[775] =
    7540000.0 * sc[3] * x1000 - 7540000.0 * sc[3] * x1026 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x94) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-7540000.0 * sc[3] * x141) * (-x1027 + x553);
  J[831] =
    7540000.0 * sc[3] * x1014 - 7540000.0 * sc[3] * x1046 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x94) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-7540000.0 * sc[3] * x141) * (x1039 - x1047);
  J[887] =
    7540000.0 * sc[3] * x1057 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x1057 + (-x141) * (x1058)) +
       (-x94) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-7540000.0 * sc[3] * x141) * (x1058);
  J[943] = 0;
  J[999] =
    7540000.0 * sc[3] * x1062 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x1062 + (-x141) * (-x1063)) +
       (-x94) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-7540000.0 * sc[3] * x141) * (-x1063);
  J[1055] = 0;
  J[1111] = 0;
  J[1167] = 0;
  J[1223] = 0;
  J[1279] =
    -7540000.0 * sc[3] * x1033 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x94) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-7540000.0 * sc[3] * x141) * (-x1067 + x1068);
  J[1335] = 0;
  J[1391] =
    7540000.0 * sc[3] * x1082 +
    (-22620000000.0 * x1951 * x61) *
      (-x1072 + (-x81) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x94) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-7540000.0 * sc[3] * x141) * (x1070 + x463);
  J[1447] =
    7540000.0 * sc[3] * x1088 +
    (-22620000000.0 * x1951 * x61) *
      (-x1085 + (-x81) * (x1088 + (-x141) * (x1089)) +
       (-x94) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-7540000.0 * sc[3] * x141) * (x1089);
  J[1503] =
    7540000.0 * sc[3] * x1092 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x1092 + (-x141) * (x1093)) +
       (-x94) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-7540000.0 * sc[3] * x141) * (x1093);
  J[1559] = 0;
  J[1615] = 0;
  J[1671] = 0;
  J[1727] =
    7540000.0 * sc[3] * x1098 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x1098 + (-x141) * (x1099)) +
       (-x94) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-7540000.0 * sc[3] * x141) * (x1099);
  J[1783] =
    7540000.0 * sc[3] * x726 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x726 + (-x141) * (-x1104)) +
       (-x94) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-7540000.0 * sc[3] * x141) * (-x1104);
  J[1839] =
    -7540000.0 * sc[3] * x564 + 7540000.0 * sc[3] * x612 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x94) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-7540000.0 * sc[3] * x141) * (-x585 + x688);
  J[1895] = 0;
  J[1951] = 0;
  J[2007] = 0;
  J[2063] = 0 +
            (-22620000000.0 * x1951 * x61) *
              (0 + (-x81) * (0 + (-x141) * (-x692)) +
               (-x94) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-7540000.0 * sc[3] * x141) * (-x692);
  J[2119] = 0;
  J[2175] = 0;
  J[2231] = 0;
  J[2287] = 0;
  J[2343] = 0;
  J[2399] = 0;
  J[2455] = 0;
  J[2511] = 0 +
            (-22620000000.0 * x1951 * x61) *
              (0 + (-x81) * (0 + (-x141) * (-x710)) +
               (-x94) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-7540000.0 * sc[3] * x141) * (-x710);
  J[2567] =
    -7540000.0 * sc[3] * x482 + 7540000.0 * sc[3] * x712 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x94) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-7540000.0 * sc[3] * x141) * (x103 - x545);
  J[2623] =
    7540000.0 * sc[3] * x135 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x135 + (-x141) * (-x126)) +
       (-x94) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-7540000.0 * sc[3] * x141) * (-x126);
  J[2679] =
    -22620000000.0 * kf_qss[347] * x1951 * x59 + 7540000.0 * sc[3] * x461 -
    x10711 * x1428 - x6262 - 200000000000.0 * exp(-13511.3674768567 * invT) -
    25000000000.0 * exp(-10492.0674820284 * invT) +
    (-22620000000.0 * x1951 * x61) *
      (x129 + (-x81) * (x461 + (-x141) * (x481)) +
       (-x94) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-7540000.0 * sc[3] * x141) * (x481);
  J[2735] =
    7540000.0 * sc[3] * x130 +
    (-22620000000.0 * x1951 * x61) *
      (x558 + (-x81) * (x130 + (-x141) * (x464)) +
       (-x94) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-7540000.0 * sc[3] * x141) * (x464);
  J[2791] =
    7540000.0 * sc[3] * x132 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x132 + (-x141) * (-x586)) +
       (-x94) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-7540000.0 * sc[3] * x141) * (-x586);
  J[2847] =
    7540000.0 * sc[3] * x106 +
    (-22620000000.0 * x1951 * x61) *
      (0 + (-x81) * (x106 + (-x141) * (x127)) +
       (-x94) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-7540000.0 * sc[3] * x141) * (x127);
  J[2903] = 0;
  J[2959] = 0;
  J[3015] = 0;
  J[3071] = 0;
  J[48] =
    -7540000.0 * sc[3] * x536 + 7540000.0 * sc[3] * x544 +
    (-x1954 * x24) *
      (-x505 + x92 +
       (-x37) *
         (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (-x121) *
            (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
          (x184) *
            (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
             (x183) * (-x579 + x602 +
                       (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
       (-x87) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x1954 * x73) *
      (x466 - x476 + (-x81) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x94) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (7540000.0 * sc[3] * x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
    (7540000.0 * sc[3] * x183) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[104] =
    7540000.0 * sc[3] * x511 - 7540000.0 * sc[3] * x742 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (-x121) *
            (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
          (x184) *
            (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
             (x183) * (-x574 + x756 +
                       (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
       (-x87) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x94) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (7540000.0 * sc[3] * x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
    (7540000.0 * sc[3] * x183) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[160] =
    7540000.0 * sc[3] * x543 - 7540000.0 * sc[3] * x753 +
    (-x1954 * x24) *
      (x493 + x789 +
       (-x37) *
         (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (-x121) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
          (x184) *
            (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
             (x183) * (x745 - x765 +
                       (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
       (-x87) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x1954 * x73) *
      (-x644 + x683 + (-x81) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x94) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (7540000.0 * sc[3] * x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
    (7540000.0 * sc[3] * x183) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[216] =
    -7540000.0 * sc[3] * x741 + 7540000.0 * sc[3] * x763 + x10714 * x1442 -
    x10714 * x1447 + 7540000.0 * x85 +
    (-x1954 * x24) *
      (x809 +
       (-x37) *
         (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (-x121) *
            (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
          (x184) *
            (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
             (x183) * (-x797 + x800 +
                       (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
       (-x87) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x1954 * x73) *
      (x785 + (-x81) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x94) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (7540000.0 * sc[3] * x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
    (7540000.0 * sc[3] * x183) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[272] =
    7540000.0 * sc[3] * x793 - 7540000.0 * sc[3] * x796 - x10714 * x1439 +
    x10714 * x1452 +
    (-x1954 * x24) *
      (x820 + x837 +
       (-x37) *
         (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (-x121) *
            (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
          (x184) *
            (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
             (x183) * (-x813 + x839 +
                       (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
       (-x87) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x1954 * x73) *
      (x68 - x807 + (-x81) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x94) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (7540000.0 * sc[3] * x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
    (7540000.0 * sc[3] * x183) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[328] =
    7540000.0 * sc[3] * x799 - 7540000.0 * sc[3] * x812 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (-x121) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
          (x184) *
            (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
             (x183) * (x833 - x840 +
                       (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
       (-x87) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x94) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (7540000.0 * sc[3] * x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
    (7540000.0 * sc[3] * x183) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[384] =
    0 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
          (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
          (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                    (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
       (-x87) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (0 + (-x141) * (x909 + x913)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (7540000.0 * sc[3] * x182) * (0 + (-x141) * (x909 + x913)) +
    (7540000.0 * sc[3] * x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[440] = 0;
  J[496] =
    7540000.0 * sc[3] * x915 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
          (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
          (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                    (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
       (-x87) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x920 + (-x141) * (-x922)) +
       (-x94) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (7540000.0 * sc[3] * x182) * (x920 + (-x141) * (-x922)) +
    (7540000.0 * sc[3] * x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[552] =
    7540000.0 * sc[3] * x834 - 7540000.0 * sc[3] * x835 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (-x121) *
            (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
          (x184) *
            (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
             (x183) * (-x865 + x868 +
                       (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
       (-x87) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x94) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (7540000.0 * sc[3] * x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
    (7540000.0 * sc[3] * x183) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[608] =
    -kf_qss[362] * sc_qss[17] * x1954 * x72 -
    kf_qss[364] * sc_qss[18] * x1954 * x22 - 7540000.0 * sc[3] * x831 +
    7540000.0 * sc[3] * x836 +
    (-x1954 * x24) *
      (x21 - x86 +
       (-x37) *
         (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (-x121) *
            (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
          (x184) *
            (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
             (x183) * (-x863 + x893 +
                       (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
       (-x87) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x1954 * x73) *
      (-x470 + x79 + (-x81) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x94) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (7540000.0 * sc[3] * x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
    (7540000.0 * sc[3] * x183) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[664] =
    7540000.0 * sc[3] * x498 - 7540000.0 * sc[3] * x864 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (-x121) * (x889 - x894 +
                     (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
          (x184) *
            (x498 - x864 +
             (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
             (x183) * (x889 - x894 +
                       (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
       (-x87) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x94) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (7540000.0 * sc[3] * x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (7540000.0 * sc[3] * x183) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[720] = 0;
  J[776] =
    -7540000.0 * sc[3] * x861 + 7540000.0 * sc[3] * x866 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (-x121) * (-x932 + x934 +
                     (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
          (x184) *
            (-x861 + x866 +
             (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
             (x183) * (-x932 + x934 +
                       (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
       (-x87) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x94) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (7540000.0 * sc[3] * x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (7540000.0 * sc[3] * x183) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[832] =
    7540000.0 * sc[3] * x887 - 7540000.0 * sc[3] * x890 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (-x121) * (-x929 + x974 +
                     (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
          (x184) *
            (x887 - x890 +
             (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
             (x183) * (-x929 + x974 +
                       (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
       (-x87) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x94) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (7540000.0 * sc[3] * x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (7540000.0 * sc[3] * x183) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[888] =
    7540000.0 * sc[3] * x1055 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
          (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
          (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                    (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
       (-x87) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x1057 + (-x141) * (x1058)) +
       (-x94) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (7540000.0 * sc[3] * x182) * (x1057 + (-x141) * (x1058)) +
    (7540000.0 * sc[3] * x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[944] = 0;
  J[1000] =
    7540000.0 * sc[3] * x1060 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
          (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
          (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                    (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
       (-x87) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x1062 + (-x141) * (-x1063)) +
       (-x94) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (7540000.0 * sc[3] * x182) * (x1062 + (-x141) * (-x1063)) +
    (7540000.0 * sc[3] * x183) *
      (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1056] = 0;
  J[1112] = 0;
  J[1168] = 0;
  J[1224] = 0;
  J[1280] =
    0 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
          (x184) *
            (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
             (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
       (-x87) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x94) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (7540000.0 * sc[3] * x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
    (7540000.0 * sc[3] * x183) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1336] = 0;
  J[1392] =
    7540000.0 * sc[3] * x1076 +
    (-x1954 * x24) *
      (-x1074 +
       (-x37) *
         (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
          (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
          (x184) *
            (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
             (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
       (-x87) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x1954 * x73) *
      (-x1072 + (-x81) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x94) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (7540000.0 * sc[3] * x182) * (x1082 + (-x141) * (x1070 + x463)) +
    (7540000.0 * sc[3] * x183) *
      (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1448] =
    7540000.0 * sc[3] * x1086 +
    (-x1954 * x24) *
      (-x677 +
       (-x37) *
         (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
          (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
          (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                    (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
       (-x87) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x1954 * x73) *
      (-x1085 + (-x81) * (x1088 + (-x141) * (x1089)) +
       (-x94) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (7540000.0 * sc[3] * x182) * (x1088 + (-x141) * (x1089)) +
    (7540000.0 * sc[3] * x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1504] =
    -7540000.0 * sc[3] * x891 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
          (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
          (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                    (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
       (-x87) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x1092 + (-x141) * (x1093)) +
       (-x94) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (7540000.0 * sc[3] * x182) * (x1092 + (-x141) * (x1093)) +
    (7540000.0 * sc[3] * x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1560] = 0;
  J[1616] = 0;
  J[1672] = 0;
  J[1728] =
    7540000.0 * sc[3] * x886 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
          (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
          (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                    (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
       (-x87) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x1098 + (-x141) * (x1099)) +
       (-x94) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (7540000.0 * sc[3] * x182) * (x1098 + (-x141) * (x1099)) +
    (7540000.0 * sc[3] * x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1784] =
    7540000.0 * sc[3] * x1100 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
          (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
          (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                    (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
       (-x87) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x726 + (-x141) * (-x1104)) +
       (-x94) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (7540000.0 * sc[3] * x182) * (x726 + (-x141) * (-x1104)) +
    (7540000.0 * sc[3] * x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1840] =
    7540000.0 * sc[3] * x928 - 7540000.0 * sc[3] * x930 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (-x121) * (-x682 + x999 +
                     (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
          (x184) *
            (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
             (x183) * (-x682 + x999 +
                       (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
       (-x87) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x94) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (7540000.0 * sc[3] * x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (7540000.0 * sc[3] * x183) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1896] = 0;
  J[1952] = 0;
  J[2008] = 0;
  J[2064] =
    0 +
    (-x1954 * x24) *
      (0 +
       (-x37) * (0 + (-x113) * (0 + (-x141) * (-x692)) +
                 (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
                 (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                           (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
       (-x87) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (0 + (-x141) * (-x692)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
    (7540000.0 * sc[3] * x182) * (0 + (-x141) * (-x692)) +
    (7540000.0 * sc[3] * x183) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2120] = 0;
  J[2176] = 0;
  J[2232] = 0;
  J[2288] = 0;
  J[2344] = 0;
  J[2400] = 0;
  J[2456] = 0;
  J[2512] =
    0 +
    (-x1954 * x24) *
      (0 +
       (-x37) * (0 + (-x113) * (0 + (-x141) * (-x710)) +
                 (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
                 (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                           (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
       (-x87) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (0 + (-x141) * (-x710)) +
       (-x94) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
    (7540000.0 * sc[3] * x182) * (0 + (-x141) * (-x710)) +
    (7540000.0 * sc[3] * x183) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2568] =
    -7540000.0 * sc[3] * x927 + 7540000.0 * sc[3] * x933 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (-x121) * (-x1003 + x970 +
                     (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
          (x184) *
            (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
             (x183) * (-x1003 + x970 +
                       (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
       (-x87) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x94) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (7540000.0 * sc[3] * x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
    (7540000.0 * sc[3] * x183) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2624] =
    0 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (x135 + (-x141) * (-x126)) +
          (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
          (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                    (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
       (-x87) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x135 + (-x141) * (-x126)) +
       (-x94) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (7540000.0 * sc[3] * x182) * (x135 + (-x141) * (-x126)) +
    (7540000.0 * sc[3] * x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2680] =
    -7540000.0 * sc[3] * x83 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (0 + (-x113) * (x461 + (-x141) * (x481)) +
          (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
          (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                    (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
       (-x87) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x1954 * x73) *
      (x129 + (-x81) * (x461 + (-x141) * (x481)) +
       (-x94) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (7540000.0 * sc[3] * x182) * (x461 + (-x141) * (x481)) +
    (7540000.0 * sc[3] * x183) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2736] =
    -kf_qss[351] * x1954 * x72 - kf_qss[353] * x1954 * x22 +
    7540000.0 * sc[3] * x562 - x10714 * x1430 -
    9.879e+21 * exp(-19051.7829673667 * invT - 1.97 * tc[0]) -
    400000000000.0 * exp(-13511.3674768567 * invT) -
    25000000000.0 * exp(-10492.0674820284 * invT) +
    (-x1954 * x24) *
      (x555 +
       (-x37) *
         (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
          (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
          (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                    (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
       (-x87) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x1954 * x73) *
      (x558 + (-x81) * (x130 + (-x141) * (x464)) +
       (-x94) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (7540000.0 * sc[3] * x182) * (x130 + (-x141) * (x464)) +
    (7540000.0 * sc[3] * x183) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2792] =
    7540000.0 * sc[3] * x967 +
    (-x1954 * x24) *
      (0 +
       (-x37) *
         (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
          (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
          (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                    (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
       (-x87) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x132 + (-x141) * (-x586)) +
       (-x94) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (7540000.0 * sc[3] * x182) * (x132 + (-x141) * (-x586)) +
    (7540000.0 * sc[3] * x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2848] =
    7540000.0 * sc[3] * x50 +
    (-x1954 * x24) *
      (-x594 +
       (-x37) *
         (x529 + (-x113) * (x106 + (-x141) * (x127)) +
          (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
          (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                    (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
       (-x87) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x1954 * x73) *
      (0 + (-x81) * (x106 + (-x141) * (x127)) +
       (-x94) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (7540000.0 * sc[3] * x182) * (x106 + (-x141) * (x127)) +
    (7540000.0 * sc[3] * x183) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2904] = 0;
  J[2960] = 0;
  J[3016] = 0;
  J[3072] = 0;
  J[49] =
    7540000.0 * sc[3] * x519 - 7540000.0 * sc[3] * x528 +
    (7540000.0 * sc[3] * x184) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)))) +
    (-7540000.0 * sc[3] * x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
    (-7540000.0 * sc[3] * x121) *
      (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734)));
  J[105] =
    7540000.0 * sc[3] * x521 + 7540000.0 * sc[3] * x738 +
    (7540000.0 * sc[3] * x184) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)))) +
    (-7540000.0 * sc[3] * x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
    (-7540000.0 * sc[3] * x121) *
      (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772)));
  J[161] =
    -7540000.0 * sc[3] * x774 + 7540000.0 * sc[3] * x790 +
    (7540000.0 * sc[3] * x184) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)))) +
    (-7540000.0 * sc[3] * x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
    (-7540000.0 * sc[3] * x121) *
      (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804)));
  J[217] =
    7540000.0 * sc[3] * x116 - 7540000.0 * sc[3] * x791 + x10717 * x1469 -
    x10717 * x1473 + 7540000.0 * x41 +
    (7540000.0 * sc[3] * x184) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)))) +
    (-7540000.0 * sc[3] * x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
    (-7540000.0 * sc[3] * x121) *
      (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842)));
  J[273] =
    -7540000.0 * sc[3] * x811 + 7540000.0 * sc[3] * x823 - x10717 * x1458 +
    x10717 * x1479 +
    (7540000.0 * sc[3] * x184) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)))) +
    (-7540000.0 * sc[3] * x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
    (-7540000.0 * sc[3] * x121) *
      (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872)));
  J[329] =
    7540000.0 * sc[3] * x826 + 7540000.0 * sc[3] * x827 +
    (7540000.0 * sc[3] * x184) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)))) +
    (-7540000.0 * sc[3] * x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
    (-7540000.0 * sc[3] * x121) *
      (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897)));
  J[385] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913)))) +
    (-7540000.0 * sc[3] * x113) * (0 + (-x141) * (x909 + x913)) +
    (-7540000.0 * sc[3] * x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913)));
  J[441] = 0;
  J[497] =
    -7540000.0 * sc[3] * x844 +
    (7540000.0 * sc[3] * x184) *
      (x915 + (x182) * (x920 + (-x141) * (-x922)) +
       (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922)))) +
    (-7540000.0 * sc[3] * x113) * (x920 + (-x141) * (-x922)) +
    (-7540000.0 * sc[3] * x121) * (x919 + (x181) * (x920 + (-x141) * (-x922)));
  J[553] =
    7540000.0 * sc[3] * x838 + 7540000.0 * sc[3] * x859 +
    (7540000.0 * sc[3] * x184) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)))) +
    (-7540000.0 * sc[3] * x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
    (-7540000.0 * sc[3] * x121) *
      (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937)));
  J[609] =
    7540000.0 * sc[3] * x870 - 7540000.0 * sc[3] * x877 +
    (7540000.0 * sc[3] * x184) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)))) +
    (-7540000.0 * sc[3] * x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
    (-7540000.0 * sc[3] * x121) *
      (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977)));
  J[665] =
    7540000.0 * sc[3] * x899 + 7540000.0 * sc[3] * x924 +
    (7540000.0 * sc[3] * x184) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)))) +
    (-7540000.0 * sc[3] * x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
    (-7540000.0 * sc[3] * x121) *
      (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005)));
  J[721] = 0;
  J[777] =
    7540000.0 * sc[3] * x925 + 7540000.0 * sc[3] * x938 +
    (7540000.0 * sc[3] * x184) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) * (-x932 + x934 +
                 (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)))) +
    (-7540000.0 * sc[3] * x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
    (-7540000.0 * sc[3] * x121) *
      (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553)));
  J[833] =
    7540000.0 * sc[3] * x963 + 7540000.0 * sc[3] * x966 +
    (7540000.0 * sc[3] * x184) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) * (-x929 + x974 +
                 (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)))) +
    (-7540000.0 * sc[3] * x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
    (-7540000.0 * sc[3] * x121) *
      (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047)));
  J[889] = -7540000.0 * sc[3] * x1041 +
           (7540000.0 * sc[3] * x184) *
             (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
              (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058)))) +
           (-7540000.0 * sc[3] * x113) * (x1057 + (-x141) * (x1058)) +
           (-7540000.0 * sc[3] * x121) *
             (x1056 + (x181) * (x1057 + (-x141) * (x1058)));
  J[945] = 0;
  J[1001] = -7540000.0 * sc[3] * x39 +
            (7540000.0 * sc[3] * x184) *
              (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
               (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063)))) +
            (-7540000.0 * sc[3] * x113) * (x1062 + (-x141) * (-x1063)) +
            (-7540000.0 * sc[3] * x121) *
              (x1061 + (x181) * (x1062 + (-x141) * (-x1063)));
  J[1057] = 0;
  J[1113] = 0;
  J[1169] = 0;
  J[1225] = 0;
  J[1281] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)))) +
    (-7540000.0 * sc[3] * x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
    (-7540000.0 * sc[3] * x121) *
      (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068)));
  J[1337] = 0;
  J[1393] = 7540000.0 * sc[3] * x643 +
            (7540000.0 * sc[3] * x184) *
              (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
               (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)))) +
            (-7540000.0 * sc[3] * x113) * (x1082 + (-x141) * (x1070 + x463)) +
            (-7540000.0 * sc[3] * x121) *
              (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463)));
  J[1449] = 7540000.0 * sc[3] * x684 +
            (7540000.0 * sc[3] * x184) *
              (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
               (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089)))) +
            (-7540000.0 * sc[3] * x113) * (x1088 + (-x141) * (x1089)) +
            (-7540000.0 * sc[3] * x121) *
              (x1087 + (x181) * (x1088 + (-x141) * (x1089)));
  J[1505] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
       (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093)))) +
    (-7540000.0 * sc[3] * x113) * (x1092 + (-x141) * (x1093)) +
    (-7540000.0 * sc[3] * x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093)));
  J[1561] = 0;
  J[1617] = 0;
  J[1673] = 0;
  J[1729] = -7540000.0 * sc[3] * x1095 +
            (7540000.0 * sc[3] * x184) *
              (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
               (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099)))) +
            (-7540000.0 * sc[3] * x113) * (x1098 + (-x141) * (x1099)) +
            (-7540000.0 * sc[3] * x121) *
              (x1097 + (x181) * (x1098 + (-x141) * (x1099)));
  J[1785] =
    -7540000.0 * sc[3] * x968 +
    (7540000.0 * sc[3] * x184) *
      (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
       (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104)))) +
    (-7540000.0 * sc[3] * x113) * (x726 + (-x141) * (-x1104)) +
    (-7540000.0 * sc[3] * x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104)));
  J[1841] =
    7540000.0 * sc[3] * x1002 + 7540000.0 * sc[3] * x587 +
    (7540000.0 * sc[3] * x184) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)))) +
    (-7540000.0 * sc[3] * x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
    (-7540000.0 * sc[3] * x121) *
      (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688)));
  J[1897] = 0;
  J[1953] = 0;
  J[2009] = 0;
  J[2065] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (0 + (x182) * (0 + (-x141) * (-x692)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x692)))) +
    (-7540000.0 * sc[3] * x113) * (0 + (-x141) * (-x692)) +
    (-7540000.0 * sc[3] * x121) * (0 + (x181) * (0 + (-x141) * (-x692)));
  J[2121] = 0;
  J[2177] = 0;
  J[2233] = 0;
  J[2289] = 0;
  J[2345] = 0;
  J[2401] = 0;
  J[2457] = 0;
  J[2513] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (0 + (x182) * (0 + (-x141) * (-x710)) +
       (x183) * (0 + (x181) * (0 + (-x141) * (-x710)))) +
    (-7540000.0 * sc[3] * x113) * (0 + (-x141) * (-x710)) +
    (-7540000.0 * sc[3] * x121) * (0 + (x181) * (0 + (-x141) * (-x710)));
  J[2569] =
    -7540000.0 * sc[3] * x524 + 7540000.0 * sc[3] * x7 +
    (7540000.0 * sc[3] * x184) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)))) +
    (-7540000.0 * sc[3] * x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
    (-7540000.0 * sc[3] * x121) *
      (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545)));
  J[2625] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (0 + (x182) * (x135 + (-x141) * (-x126)) +
       (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126)))) +
    (-7540000.0 * sc[3] * x113) * (x135 + (-x141) * (-x126)) +
    (-7540000.0 * sc[3] * x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126)));
  J[2681] =
    0 +
    (7540000.0 * sc[3] * x184) *
      (-x83 + (x182) * (x461 + (-x141) * (x481)) +
       (x183) * (x107 + (x181) * (x461 + (-x141) * (x481)))) +
    (-7540000.0 * sc[3] * x113) * (x461 + (-x141) * (x481)) +
    (-7540000.0 * sc[3] * x121) * (x107 + (x181) * (x461 + (-x141) * (x481)));
  J[2737] =
    -7540000.0 * sc[3] * x19 +
    (7540000.0 * sc[3] * x184) *
      (x562 + (x182) * (x130 + (-x141) * (x464)) +
       (x183) * (x566 + (x181) * (x130 + (-x141) * (x464)))) +
    (-7540000.0 * sc[3] * x113) * (x130 + (-x141) * (x464)) +
    (-7540000.0 * sc[3] * x121) * (x566 + (x181) * (x130 + (-x141) * (x464)));
  J[2793] =
    -7540000.0 * sc[3] * x573 - x10717 * x1482 - x6262 -
    400000000000.0 * exp(-13511.3674768567 * invT) -
    50000000000.0 * exp(-10492.0674820284 * invT) +
    (7540000.0 * sc[3] * x184) *
      (x967 + (x182) * (x132 + (-x141) * (-x586)) +
       (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586)))) +
    (-7540000.0 * sc[3] * x113) * (x132 + (-x141) * (-x586)) +
    (-7540000.0 * sc[3] * x121) * (x582 + (x181) * (x132 + (-x141) * (-x586)));
  J[2849] =
    7540000.0 * sc[3] * x529 + 45240000000.0 * x1951 +
    (7540000.0 * sc[3] * x184) *
      (x50 + (x182) * (x106 + (-x141) * (x127)) +
       (x183) * (x104 + (x181) * (x106 + (-x141) * (x127)))) +
    (-7540000.0 * sc[3] * x113) * (x106 + (-x141) * (x127)) +
    (-7540000.0 * sc[3] * x121) * (x104 + (x181) * (x106 + (-x141) * (x127)));
  J[2905] = 0;
  J[2961] = 0;
  J[3017] = 0;
  J[3073] = 0;
  J[50] =
    -x1955 * x505 + x1955 * x92 +
    (-x1955 * x37) *
      (x519 - x528 + (-x113) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (-x121) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))) +
       (x184) *
         (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
          (x183) * (-x579 + x602 +
                    (x181) * (x557 - x604 + (-x141) * (-x681 + x734))))) +
    (-x1955 * x87) *
      (-x536 + x544 + (x182) * (x557 - x604 + (-x141) * (-x681 + x734)) +
       (x183) *
         (-x579 + x602 + (x181) * (x557 - x604 + (-x141) * (-x681 + x734))));
  J[106] =
    0 +
    (-x1955 * x37) *
      (x521 + x738 + (-x113) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (-x121) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))) +
       (x184) *
         (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
          (x183) * (-x574 + x756 +
                    (x181) * (x758 - x771 + (-x141) * (x770 - x772))))) +
    (-x1955 * x87) *
      (x511 - x742 + (x182) * (x758 - x771 + (-x141) * (x770 - x772)) +
       (x183) *
         (-x574 + x756 + (x181) * (x758 - x771 + (-x141) * (x770 - x772))));
  J[162] =
    x1955 * x493 + x1955 * x789 +
    (-x1955 * x37) *
      (-x774 + x790 + (-x113) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (-x121) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))) +
       (x184) *
         (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
          (x183) *
            (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))))) +
    (-x1955 * x87) *
      (x543 - x753 + (x182) * (x792 - x803 + (-x141) * (x801 - x804)) +
       (x183) *
         (x745 - x765 + (x181) * (x792 - x803 + (-x141) * (x801 - x804))));
  J[218] =
    x1955 * x809 +
    (-x1955 * x37) *
      (x116 - x791 + (-x113) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (-x121) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))) +
       (x184) *
         (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
          (x183) * (-x797 + x800 +
                    (x181) * (x821 - x841 + (-x141) * (x817 - x842))))) +
    (-x1955 * x87) *
      (-x741 + x763 + (x182) * (x821 - x841 + (-x141) * (x817 - x842)) +
       (x183) *
         (-x797 + x800 + (x181) * (x821 - x841 + (-x141) * (x817 - x842))));
  J[274] =
    x1955 * x820 + x1955 * x837 +
    (-x1955 * x37) *
      (-x811 + x823 + (-x113) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (-x121) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))) +
       (x184) *
         (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
          (x183) * (-x813 + x839 +
                    (x181) * (-x468 + x669 + (-x141) * (x829 - x872))))) +
    (-x1955 * x87) *
      (x793 - x796 + (x182) * (-x468 + x669 + (-x141) * (x829 - x872)) +
       (x183) *
         (-x813 + x839 + (x181) * (-x468 + x669 + (-x141) * (x829 - x872))));
  J[330] =
    0 +
    (-x1955 * x37) *
      (x826 + x827 + (-x113) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (-x121) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))) +
       (x184) *
         (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
          (x183) *
            (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))))) +
    (-x1955 * x87) *
      (x799 - x812 + (x182) * (x869 - x896 + (-x141) * (x895 - x897)) +
       (x183) *
         (x833 - x840 + (x181) * (x869 - x896 + (-x141) * (x895 - x897))));
  J[386] =
    0 +
    (-x1955 * x37) *
      (0 + (-x113) * (0 + (-x141) * (x909 + x913)) +
       (-x121) * (0 + (x181) * (0 + (-x141) * (x909 + x913))) +
       (x184) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                 (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))))) +
    (-x1955 * x87) * (0 + (x182) * (0 + (-x141) * (x909 + x913)) +
                      (x183) * (0 + (x181) * (0 + (-x141) * (x909 + x913))));
  J[442] = 0;
  J[498] =
    0 +
    (-x1955 * x37) *
      (-x844 + (-x113) * (x920 + (-x141) * (-x922)) +
       (-x121) * (x919 + (x181) * (x920 + (-x141) * (-x922))) +
       (x184) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                 (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))))) +
    (-x1955 * x87) * (x915 + (x182) * (x920 + (-x141) * (-x922)) +
                      (x183) * (x919 + (x181) * (x920 + (-x141) * (-x922))));
  J[554] =
    0 +
    (-x1955 * x37) *
      (x838 + x859 + (-x113) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (-x121) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))) +
       (x184) *
         (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
          (x183) * (-x865 + x868 +
                    (x181) * (x885 - x936 + (-x141) * (x935 - x937))))) +
    (-x1955 * x87) *
      (x834 - x835 + (x182) * (x885 - x936 + (-x141) * (x935 - x937)) +
       (x183) *
         (-x865 + x868 + (x181) * (x885 - x936 + (-x141) * (x935 - x937))));
  J[610] =
    100000.0 * x1878 * x616 / x34 + x1955 * x21 - x1955 * x86 +
    (-x1955 * x37) *
      (x870 - x877 + (-x113) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (-x121) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))) +
       (x184) *
         (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
          (x183) * (-x863 + x893 +
                    (x181) * (-x546 + x926 + (-x141) * (x465 - x977))))) +
    (-x1955 * x87) *
      (-x831 + x836 + (x182) * (-x546 + x926 + (-x141) * (x465 - x977)) +
       (x183) *
         (-x863 + x893 + (x181) * (-x546 + x926 + (-x141) * (x465 - x977))));
  J[666] =
    0 +
    (-x1955 * x37) *
      (x899 + x924 + (-x113) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (-x121) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))) +
       (x184) *
         (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
          (x183) * (x889 - x894 +
                    (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))))) +
    (-x1955 * x87) *
      (x498 - x864 + (x182) * (-x1004 + x700 + (-x141) * (x1001 - x1005)) +
       (x183) *
         (x889 - x894 + (x181) * (-x1004 + x700 + (-x141) * (x1001 - x1005))));
  J[722] = 0;
  J[778] =
    0 +
    (-x1955 * x37) *
      (x925 + x938 + (-x113) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (-x121) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))) +
       (x184) *
         (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
          (x183) * (-x932 + x934 +
                    (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))))) +
    (-x1955 * x87) *
      (-x861 + x866 + (x182) * (x1000 - x1026 + (-x141) * (-x1027 + x553)) +
       (x183) *
         (-x932 + x934 + (x181) * (x1000 - x1026 + (-x141) * (-x1027 + x553))));
  J[834] =
    0 +
    (-x1955 * x37) *
      (x963 + x966 + (-x113) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (-x121) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))) +
       (x184) *
         (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
          (x183) * (-x929 + x974 +
                    (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))))) +
    (-x1955 * x87) *
      (x887 - x890 + (x182) * (x1014 - x1046 + (-x141) * (x1039 - x1047)) +
       (x183) *
         (-x929 + x974 + (x181) * (x1014 - x1046 + (-x141) * (x1039 - x1047))));
  J[890] =
    0 +
    (-x1955 * x37) *
      (-x1041 + (-x113) * (x1057 + (-x141) * (x1058)) +
       (-x121) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))) +
       (x184) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                 (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))))) +
    (-x1955 * x87) * (x1055 + (x182) * (x1057 + (-x141) * (x1058)) +
                      (x183) * (x1056 + (x181) * (x1057 + (-x141) * (x1058))));
  J[946] = 0;
  J[1002] =
    0 +
    (-x1955 * x37) *
      (-x39 + (-x113) * (x1062 + (-x141) * (-x1063)) +
       (-x121) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))) +
       (x184) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                 (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))))) +
    (-x1955 * x87) * (x1060 + (x182) * (x1062 + (-x141) * (-x1063)) +
                      (x183) * (x1061 + (x181) * (x1062 + (-x141) * (-x1063))));
  J[1058] = 0;
  J[1114] = 0;
  J[1170] = 0;
  J[1226] = 0;
  J[1282] =
    0 +
    (-x1955 * x37) *
      (0 + (-x113) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (-x121) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))) +
       (x184) *
         (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
          (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))))) +
    (-x1955 * x87) *
      (0 + (x182) * (-x1033 + (-x141) * (-x1067 + x1068)) +
       (x183) * (0 + (x181) * (-x1033 + (-x141) * (-x1067 + x1068))));
  J[1338] = 0;
  J[1394] =
    -100000.0 * x1878 * x6002 +
    (-x1955 * x37) *
      (x643 + (-x113) * (x1082 + (-x141) * (x1070 + x463)) +
       (-x121) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))) +
       (x184) *
         (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
          (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))))) +
    (-x1955 * x87) *
      (x1076 + (x182) * (x1082 + (-x141) * (x1070 + x463)) +
       (x183) * (x1079 + (x181) * (x1082 + (-x141) * (x1070 + x463))));
  J[1450] =
    -100000.0 * kf_qss[336] * sc[10] * sc[24] * x1878 * x36 +
    (-x1955 * x37) *
      (x684 + (-x113) * (x1088 + (-x141) * (x1089)) +
       (-x121) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))) +
       (x184) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                 (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))))) +
    (-x1955 * x87) * (x1086 + (x182) * (x1088 + (-x141) * (x1089)) +
                      (x183) * (x1087 + (x181) * (x1088 + (-x141) * (x1089))));
  J[1506] =
    0 +
    (-x1955 * x37) *
      (0 + (-x113) * (x1092 + (-x141) * (x1093)) +
       (-x121) * (x975 + (x181) * (x1092 + (-x141) * (x1093))) +
       (x184) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                 (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))))) +
    (-x1955 * x87) * (-x891 + (x182) * (x1092 + (-x141) * (x1093)) +
                      (x183) * (x975 + (x181) * (x1092 + (-x141) * (x1093))));
  J[1562] = 0;
  J[1618] = 0;
  J[1674] = 0;
  J[1730] =
    0 +
    (-x1955 * x37) *
      (-x1095 + (-x113) * (x1098 + (-x141) * (x1099)) +
       (-x121) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))) +
       (x184) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                 (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))))) +
    (-x1955 * x87) * (x886 + (x182) * (x1098 + (-x141) * (x1099)) +
                      (x183) * (x1097 + (x181) * (x1098 + (-x141) * (x1099))));
  J[1786] =
    0 +
    (-x1955 * x37) *
      (-x968 + (-x113) * (x726 + (-x141) * (-x1104)) +
       (-x121) * (x707 + (x181) * (x726 + (-x141) * (-x1104))) +
       (x184) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                 (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))))) +
    (-x1955 * x87) * (x1100 + (x182) * (x726 + (-x141) * (-x1104)) +
                      (x183) * (x707 + (x181) * (x726 + (-x141) * (-x1104))));
  J[1842] =
    0 +
    (-x1955 * x37) *
      (x1002 + x587 + (-x113) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (-x121) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))) +
       (x184) *
         (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
          (x183) * (-x682 + x999 +
                    (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))))) +
    (-x1955 * x87) *
      (x928 - x930 + (x182) * (-x564 + x612 + (-x141) * (-x585 + x688)) +
       (x183) *
         (-x682 + x999 + (x181) * (-x564 + x612 + (-x141) * (-x585 + x688))));
  J[1898] = 0;
  J[1954] = 0;
  J[2010] = 0;
  J[2066] = 0 +
            (-x1955 * x37) *
              (0 + (-x113) * (0 + (-x141) * (-x692)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x692))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x692))))) +
            (-x1955 * x87) * (0 + (x182) * (0 + (-x141) * (-x692)) +
                              (x183) * (0 + (x181) * (0 + (-x141) * (-x692))));
  J[2122] = 0;
  J[2178] = 0;
  J[2234] = 0;
  J[2290] = 0;
  J[2346] = 0;
  J[2402] = 0;
  J[2458] = 0;
  J[2514] = 0 +
            (-x1955 * x37) *
              (0 + (-x113) * (0 + (-x141) * (-x710)) +
               (-x121) * (0 + (x181) * (0 + (-x141) * (-x710))) +
               (x184) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                         (x183) * (0 + (x181) * (0 + (-x141) * (-x710))))) +
            (-x1955 * x87) * (0 + (x182) * (0 + (-x141) * (-x710)) +
                              (x183) * (0 + (x181) * (0 + (-x141) * (-x710))));
  J[2570] =
    0 +
    (-x1955 * x37) *
      (-x524 + x7 + (-x113) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (-x121) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))) +
       (x184) *
         (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
          (x183) * (-x1003 + x970 +
                    (x181) * (-x482 + x712 + (-x141) * (x103 - x545))))) +
    (-x1955 * x87) *
      (-x927 + x933 + (x182) * (-x482 + x712 + (-x141) * (x103 - x545)) +
       (x183) *
         (-x1003 + x970 + (x181) * (-x482 + x712 + (-x141) * (x103 - x545))));
  J[2626] =
    0 +
    (-x1955 * x37) *
      (0 + (-x113) * (x135 + (-x141) * (-x126)) +
       (-x121) * (-x101 + (x181) * (x135 + (-x141) * (-x126))) +
       (x184) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                 (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))))) +
    (-x1955 * x87) * (0 + (x182) * (x135 + (-x141) * (-x126)) +
                      (x183) * (-x101 + (x181) * (x135 + (-x141) * (-x126))));
  J[2682] =
    0 +
    (-x1955 * x37) *
      (0 + (-x113) * (x461 + (-x141) * (x481)) +
       (-x121) * (x107 + (x181) * (x461 + (-x141) * (x481))) +
       (x184) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                 (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))))) +
    (-x1955 * x87) * (-x83 + (x182) * (x461 + (-x141) * (x481)) +
                      (x183) * (x107 + (x181) * (x461 + (-x141) * (x481))));
  J[2738] =
    x1955 * x555 +
    (-x1955 * x37) *
      (-x19 + (-x113) * (x130 + (-x141) * (x464)) +
       (-x121) * (x566 + (x181) * (x130 + (-x141) * (x464))) +
       (x184) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                 (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))))) +
    (-x1955 * x87) * (x562 + (x182) * (x130 + (-x141) * (x464)) +
                      (x183) * (x566 + (x181) * (x130 + (-x141) * (x464))));
  J[2794] =
    400000000000.0 * exp(-13511.3674768567 * invT) +
    (-x1955 * x37) *
      (-x573 + (-x113) * (x132 + (-x141) * (-x586)) +
       (-x121) * (x582 + (x181) * (x132 + (-x141) * (-x586))) +
       (x184) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                 (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))))) +
    (-x1955 * x87) * (x967 + (x182) * (x132 + (-x141) * (-x586)) +
                      (x183) * (x582 + (x181) * (x132 + (-x141) * (-x586))));
  J[2850] =
    -2.389e+20 * x1883 - 45240000000.0 * x1951 - x1955 * x594 +
    (-x1955 * x37) *
      (x529 + (-x113) * (x106 + (-x141) * (x127)) +
       (-x121) * (x104 + (x181) * (x106 + (-x141) * (x127))) +
       (x184) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                 (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))))) +
    (-x1955 * x87) * (x50 + (x182) * (x106 + (-x141) * (x127)) +
                      (x183) * (x104 + (x181) * (x106 + (-x141) * (x127))));
  J[2906] = 0;
  J[2962] = 0;
  J[3018] = 0;
  J[3074] = 0;
  J[51] = 0;
  J[107] = 0;
  J[163] = 0;
  J[219] = -7540000.0 * kf_qss[374] * sc[3] * x1396 / ((x1394) * (x1394)) -
           7540000.0 * x1396 / x1394;
  J[275] = -kf_qss[382] * sc[4] * x1486 * x6621 -
           x6621 * (kf_qss[381] * sc[51] + 10.0e-13) / x1484;
  J[331] = 0;
  J[387] = 0;
  J[443] = 0;
  J[499] = 0;
  J[555] = 0;
  J[611] = 0;
  J[667] = 0;
  J[723] = 0;
  J[779] = 0;
  J[835] = 0;
  J[891] = 0;
  J[947] = 0;
  J[1003] = 0;
  J[1059] = 0;
  J[1115] = 0;
  J[1171] = 0;
  J[1227] = 0;
  J[1283] = 0;
  J[1339] = 0;
  J[1395] = 0;
  J[1451] = 0;
  J[1507] = 0;
  J[1563] = 0;
  J[1619] = 0;
  J[1675] = 0;
  J[1731] = 0;
  J[1787] = 0;
  J[1843] = 0;
  J[1899] = 0;
  J[1955] = 0;
  J[2011] = 0;
  J[2067] = 0;
  J[2123] = 0;
  J[2179] = 0;
  J[2235] = 0;
  J[2291] = 0;
  J[2347] = 0;
  J[2403] = 0;
  J[2459] = 0;
  J[2515] = 0;
  J[2571] = 0;
  J[2627] = -7540000.0 * sc[3] * x1399;
  J[2683] = 0;
  J[2739] = 0;
  J[2795] = 0;
  J[2851] = 0;
  J[2907] = -kf_qss[381] * sc[4] * x6621 / x1484 - 7540000.0 * sc[3] * x1400 -
            x7341 - 1.367e+23 * exp(-18941.075300889599 * invT - 2.37 * tc[0]);
  J[2963] = 0;
  J[3019] = 0;
  J[3075] = 0;
  J[52] = 0;
  J[108] = 0;
  J[164] = 0;
  J[220] = -kf_qss[374] * x1396 * x6530 / ((x1394) * (x1394));
  J[276] = -2500000.0 * sc[52];
  J[332] = 0;
  J[388] = 0;
  J[444] = 0;
  J[500] = 0;
  J[556] = 0;
  J[612] = -5000000.0 * sc[52] * x8794;
  J[668] = 0;
  J[724] = 0;
  J[780] = 0;
  J[836] = 0;
  J[892] = 0;
  J[948] = 0;
  J[1004] = 0;
  J[1060] = 0;
  J[1116] = 0;
  J[1172] = 0;
  J[1228] = 0;
  J[1284] = 0;
  J[1340] = 0;
  J[1396] = 0;
  J[1452] = 0;
  J[1508] = 0;
  J[1564] = 0;
  J[1620] = 0;
  J[1676] = 0;
  J[1732] = 0;
  J[1788] = 0;
  J[1844] = 0;
  J[1900] = 0;
  J[1956] = 0;
  J[2012] = 0;
  J[2068] = 0;
  J[2124] = 0;
  J[2180] = 0;
  J[2236] = 0;
  J[2292] = 0;
  J[2348] = 0;
  J[2404] = 0;
  J[2460] = 0;
  J[2516] = 0;
  J[2572] = 0;
  J[2628] = -x1399 * x6530;
  J[2684] = 0;
  J[2740] = 0;
  J[2796] = 0;
  J[2852] = 0;
  J[2908] = -x1400 * x6530;
  J[2964] = -5000000.0 * sc[10] * x8794 - 2500000.0 * sc[4];
  J[3020] = 0;
  J[3076] = 0;
  J[53] = 0;
  J[109] = 0;
  J[165] = 0;
  J[221] = x1414 * x6530 - x1418 * x6530 + x1469 * x6530 - x1473 * x6530;
  J[277] = x6637;
  J[333] = 0;
  J[389] = 0;
  J[445] = 0;
  J[501] = 0;
  J[557] = 0;
  J[613] = -10000000.0 * sc[53] * x8794;
  J[669] = 0;
  J[725] = 0;
  J[781] = 0;
  J[837] = 0;
  J[893] = 0;
  J[949] = 0;
  J[1005] = 0;
  J[1061] = 0;
  J[1117] = 0;
  J[1173] = 0;
  J[1229] = 0;
  J[1285] = 0;
  J[1341] = 0;
  J[1397] = 0;
  J[1453] = 0;
  J[1509] = 0;
  J[1565] = 0;
  J[1621] = 0;
  J[1677] = 0;
  J[1733] = 0;
  J[1789] = 0;
  J[1845] = 0;
  J[1901] = 0;
  J[1957] = 0;
  J[2013] = 0;
  J[2069] = 0;
  J[2125] = 0;
  J[2181] = 0;
  J[2237] = 0;
  J[2293] = 0;
  J[2349] = 0;
  J[2405] = 0;
  J[2461] = 0;
  J[2517] = 0;
  J[2573] = 0;
  J[2629] = 0;
  J[2685] = -x1428 * x6530;
  J[2741] = 0;
  J[2797] = -x1482 * x6530;
  J[2853] = 0;
  J[2909] = 0;
  J[2965] = 0;
  J[3021] = -10000000.0 * sc[10] * x8794 - 5000000.0 * sc[4];
  J[3077] = 0;
  J[54] = 0;
  J[110] = 0;
  J[166] = 0;
  J[222] = 0;
  J[278] = 0;
  J[334] = 0;
  J[390] = 0;
  J[446] = 0;
  J[502] = 0;
  J[558] = 0;
  J[614] = 0;
  J[670] = 0;
  J[726] = 0;
  J[782] = 0;
  J[838] = 0;
  J[894] = 0;
  J[950] = 0;
  J[1006] = 0;
  J[1062] = 0;
  J[1118] = 0;
  J[1174] = 0;
  J[1230] = 0;
  J[1286] = 0;
  J[1342] = 0;
  J[1398] = 0;
  J[1454] = 0;
  J[1510] = 0;
  J[1566] = 0;
  J[1622] = 0;
  J[1678] = 0;
  J[1734] = 0;
  J[1790] = 0;
  J[1846] = 0;
  J[1902] = 0;
  J[1958] = 0;
  J[2014] = 0;
  J[2070] = 0;
  J[2126] = 0;
  J[2182] = 0;
  J[2238] = 0;
  J[2294] = 0;
  J[2350] = 0;
  J[2406] = 0;
  J[2462] = 0;
  J[2518] = 0;
  J[2574] = 0;
  J[2630] = 0;
  J[2686] = 0;
  J[2742] = 0;
  J[2798] = 0;
  J[2854] = 0;
  J[2910] = 0;
  J[2966] = 0;
  J[3022] = 0;
  J[3078] = 0;

  for (int k = 0; k < 55; k++) {
    J[3080 + k] = (wdot_pert1[k] - wdot[k]) / (pertT);
  }
  amrex::Real c_R[55], dcRdT[55], e_RT[55];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 55; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[3080 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 55; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 55; ++m) {
      dehmixdc += eh_RT[m] * J[k * 56 + m];
    }
    J[k * 56 + 55] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[3135] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[55];

  for (int k = 0; k < 55; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 55; k++) {
    J[3080 + k] *= 1.e-6;
    J[k * 56 + 55] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 222;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 59400;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 55;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 1.00800000E+00;
  WT[1] = 2.01600000E+00;
  WT[2] = 1.59990000E+01;
  WT[3] = 3.19980000E+01;
  WT[4] = 1.70070000E+01;
  WT[5] = 1.80150000E+01;
  WT[6] = 2.80100000E+01;
  WT[7] = 4.40090000E+01;
  WT[8] = 1.50350000E+01;
  WT[9] = 1.60430000E+01;
  WT[10] = 3.30060000E+01;
  WT[11] = 3.40140000E+01;
  WT[12] = 3.00260000E+01;
  WT[13] = 3.00700000E+01;
  WT[14] = 2.80540000E+01;
  WT[15] = 2.90620000E+01;
  WT[16] = 2.60380000E+01;
  WT[17] = 2.70460000E+01;
  WT[18] = 4.20370000E+01;
  WT[19] = 4.10290000E+01;
  WT[20] = 4.40530000E+01;
  WT[21] = 4.00650000E+01;
  WT[22] = 4.20810000E+01;
  WT[23] = 5.40920000E+01;
  WT[24] = 4.30890000E+01;
  WT[25] = 5.51000000E+01;
  WT[26] = 5.61080000E+01;
  WT[27] = 5.70720000E+01;
  WT[28] = 5.80800000E+01;
  WT[29] = 6.91270000E+01;
  WT[30] = 7.01350000E+01;
  WT[31] = 4.70330000E+01;
  WT[32] = 4.80410000E+01;
  WT[33] = 5.50560000E+01;
  WT[34] = 5.60640000E+01;
  WT[35] = 1.21112000E+02;
  WT[36] = 8.91140000E+01;
  WT[37] = 4.10730000E+01;
  WT[38] = 3.90570000E+01;
  WT[39] = 1.04105000E+02;
  WT[40] = 7.21070000E+01;
  WT[41] = 7.10990000E+01;
  WT[42] = 8.51260000E+01;
  WT[43] = 8.61340000E+01;
  WT[44] = 8.51260000E+01;
  WT[45] = 1.00205000E+02;
  WT[46] = 1.31195000E+02;
  WT[47] = 1.31195000E+02;
  WT[48] = 1.31195000E+02;
  WT[49] = 1.31195000E+02;
  WT[50] = 1.31195000E+02;
  WT[51] = 1.63193000E+02;
  WT[52] = 1.14188000E+02;
  WT[53] = 1.14188000E+02;
  WT[54] = 2.80140000E+01;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 1.45000000E+02;
  EPS[1] = 3.80000000E+01;
  EPS[2] = 8.00000000E+01;
  EPS[3] = 1.07400000E+02;
  EPS[4] = 8.00000000E+01;
  EPS[5] = 5.72400000E+02;
  EPS[6] = 9.81000000E+01;
  EPS[7] = 2.44000000E+02;
  EPS[8] = 1.44000000E+02;
  EPS[9] = 1.41400000E+02;
  EPS[10] = 1.07400000E+02;
  EPS[11] = 1.07400000E+02;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 2.47500000E+02;
  EPS[14] = 2.38400000E+02;
  EPS[15] = 2.47500000E+02;
  EPS[16] = 2.65300000E+02;
  EPS[17] = 2.65300000E+02;
  EPS[18] = 4.36000000E+02;
  EPS[19] = 1.50000000E+02;
  EPS[20] = 4.36000000E+02;
  EPS[21] = 3.24800000E+02;
  EPS[22] = 3.07800000E+02;
  EPS[23] = 3.57000000E+02;
  EPS[24] = 3.03400000E+02;
  EPS[25] = 3.55000000E+02;
  EPS[26] = 3.55000000E+02;
  EPS[27] = 4.35500000E+02;
  EPS[28] = 4.35200000E+02;
  EPS[29] = 3.96800000E+02;
  EPS[30] = 3.86200000E+02;
  EPS[31] = 4.81800000E+02;
  EPS[32] = 4.81800000E+02;
  EPS[33] = 4.43200000E+02;
  EPS[34] = 4.28800000E+02;
  EPS[35] = 4.96000000E+02;
  EPS[36] = 4.96000000E+02;
  EPS[37] = 3.16000000E+02;
  EPS[38] = 3.24800000E+02;
  EPS[39] = 4.76000000E+02;
  EPS[40] = 4.64200000E+02;
  EPS[41] = 4.54000000E+02;
  EPS[42] = 4.89084000E+02;
  EPS[43] = 4.76000000E+02;
  EPS[44] = 4.76000000E+02;
  EPS[45] = 4.59600000E+02;
  EPS[46] = 5.61000000E+02;
  EPS[47] = 5.61000000E+02;
  EPS[48] = 5.61000000E+02;
  EPS[49] = 5.61000000E+02;
  EPS[50] = 5.61000000E+02;
  EPS[51] = 6.00600000E+02;
  EPS[52] = 5.11500000E+02;
  EPS[53] = 5.11500000E+02;
  EPS[54] = 9.75300000E+01;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 2.05000000E+00;
  SIG[1] = 2.92000000E+00;
  SIG[2] = 2.75000000E+00;
  SIG[3] = 3.45800000E+00;
  SIG[4] = 2.75000000E+00;
  SIG[5] = 2.60500000E+00;
  SIG[6] = 3.65000000E+00;
  SIG[7] = 3.76300000E+00;
  SIG[8] = 3.80000000E+00;
  SIG[9] = 3.74600000E+00;
  SIG[10] = 3.45800000E+00;
  SIG[11] = 3.45800000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 4.35000000E+00;
  SIG[14] = 3.49600000E+00;
  SIG[15] = 4.35000000E+00;
  SIG[16] = 3.72100000E+00;
  SIG[17] = 3.72100000E+00;
  SIG[18] = 3.97000000E+00;
  SIG[19] = 2.50000000E+00;
  SIG[20] = 3.97000000E+00;
  SIG[21] = 4.29000000E+00;
  SIG[22] = 4.14000000E+00;
  SIG[23] = 4.72000000E+00;
  SIG[24] = 4.81000000E+00;
  SIG[25] = 4.65000000E+00;
  SIG[26] = 4.65000000E+00;
  SIG[27] = 4.86000000E+00;
  SIG[28] = 4.66200000E+00;
  SIG[29] = 5.45800000E+00;
  SIG[30] = 5.48900000E+00;
  SIG[31] = 3.62600000E+00;
  SIG[32] = 3.62600000E+00;
  SIG[33] = 4.12000000E+00;
  SIG[34] = 4.95800000E+00;
  SIG[35] = 5.20000000E+00;
  SIG[36] = 5.20000000E+00;
  SIG[37] = 4.22000000E+00;
  SIG[38] = 4.29000000E+00;
  SIG[39] = 5.77800000E+00;
  SIG[40] = 5.00900000E+00;
  SIG[41] = 5.41300000E+00;
  SIG[42] = 5.34800000E+00;
  SIG[43] = 5.77800000E+00;
  SIG[44] = 5.77800000E+00;
  SIG[45] = 6.25300000E+00;
  SIG[46] = 6.31700000E+00;
  SIG[47] = 6.31700000E+00;
  SIG[48] = 6.31700000E+00;
  SIG[49] = 6.31700000E+00;
  SIG[50] = 6.31700000E+00;
  SIG[51] = 7.22900000E+00;
  SIG[52] = 6.29700000E+00;
  SIG[53] = 6.29700000E+00;
  SIG[54] = 3.62100000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 1.84400000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 0.00000000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 2.70000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 4.00000000E-01;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 0.00000000E+00;
  DIP[34] = 2.90000000E+00;
  DIP[35] = 0.00000000E+00;
  DIP[36] = 0.00000000E+00;
  DIP[37] = 0.00000000E+00;
  DIP[38] = 0.00000000E+00;
  DIP[39] = 2.60000000E+00;
  DIP[40] = 2.60000000E+00;
  DIP[41] = 3.30000000E+00;
  DIP[42] = 0.00000000E+00;
  DIP[43] = 2.60000000E+00;
  DIP[44] = 2.60000000E+00;
  DIP[45] = 0.00000000E+00;
  DIP[46] = 1.70000000E+00;
  DIP[47] = 1.70000000E+00;
  DIP[48] = 1.70000000E+00;
  DIP[49] = 1.70000000E+00;
  DIP[50] = 1.70000000E+00;
  DIP[51] = 1.80000000E+00;
  DIP[52] = 0.00000000E+00;
  DIP[53] = 0.00000000E+00;
  DIP[54] = 0.00000000E+00;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 0.00000000E+00;
  POL[1] = 7.90000000E-01;
  POL[2] = 0.00000000E+00;
  POL[3] = 1.60000000E+00;
  POL[4] = 0.00000000E+00;
  POL[5] = 0.00000000E+00;
  POL[6] = 1.95000000E+00;
  POL[7] = 2.65000000E+00;
  POL[8] = 0.00000000E+00;
  POL[9] = 2.60000000E+00;
  POL[10] = 0.00000000E+00;
  POL[11] = 0.00000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 0.00000000E+00;
  POL[16] = 0.00000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 0.00000000E+00;
  POL[30] = 0.00000000E+00;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 0.00000000E+00;
  POL[34] = 0.00000000E+00;
  POL[35] = 0.00000000E+00;
  POL[36] = 0.00000000E+00;
  POL[37] = 0.00000000E+00;
  POL[38] = 0.00000000E+00;
  POL[39] = 0.00000000E+00;
  POL[40] = 0.00000000E+00;
  POL[41] = 0.00000000E+00;
  POL[42] = 0.00000000E+00;
  POL[43] = 0.00000000E+00;
  POL[44] = 0.00000000E+00;
  POL[45] = 0.00000000E+00;
  POL[46] = 0.00000000E+00;
  POL[47] = 0.00000000E+00;
  POL[48] = 0.00000000E+00;
  POL[49] = 0.00000000E+00;
  POL[50] = 0.00000000E+00;
  POL[51] = 0.00000000E+00;
  POL[52] = 0.00000000E+00;
  POL[53] = 0.00000000E+00;
  POL[54] = 1.76000000E+00;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 0.00000000E+00;
  ZROT[1] = 2.80000000E+02;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 3.80000000E+00;
  ZROT[4] = 0.00000000E+00;
  ZROT[5] = 4.00000000E+00;
  ZROT[6] = 1.80000000E+00;
  ZROT[7] = 2.10000000E+00;
  ZROT[8] = 0.00000000E+00;
  ZROT[9] = 1.30000000E+01;
  ZROT[10] = 1.00000000E+00;
  ZROT[11] = 3.80000000E+00;
  ZROT[12] = 2.00000000E+00;
  ZROT[13] = 1.50000000E+00;
  ZROT[14] = 1.50000000E+00;
  ZROT[15] = 1.50000000E+00;
  ZROT[16] = 2.50000000E+00;
  ZROT[17] = 1.00000000E+00;
  ZROT[18] = 2.00000000E+00;
  ZROT[19] = 1.00000000E+00;
  ZROT[20] = 2.00000000E+00;
  ZROT[21] = 1.00000000E+00;
  ZROT[22] = 1.00000000E+00;
  ZROT[23] = 1.00000000E+00;
  ZROT[24] = 1.00000000E+00;
  ZROT[25] = 1.00000000E+00;
  ZROT[26] = 1.00000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 1.00000000E+00;
  ZROT[34] = 1.00000000E+00;
  ZROT[35] = 1.00000000E+00;
  ZROT[36] = 1.00000000E+00;
  ZROT[37] = 1.00000000E+00;
  ZROT[38] = 1.00000000E+00;
  ZROT[39] = 1.00000000E+00;
  ZROT[40] = 1.00000000E+00;
  ZROT[41] = 1.00000000E+00;
  ZROT[42] = 0.00000000E+00;
  ZROT[43] = 1.00000000E+00;
  ZROT[44] = 1.00000000E+00;
  ZROT[45] = 1.00000000E+00;
  ZROT[46] = 1.00000000E+00;
  ZROT[47] = 1.00000000E+00;
  ZROT[48] = 1.00000000E+00;
  ZROT[49] = 1.00000000E+00;
  ZROT[50] = 1.00000000E+00;
  ZROT[51] = 1.00000000E+00;
  ZROT[52] = 1.00000000E+00;
  ZROT[53] = 1.00000000E+00;
  ZROT[54] = 4.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 0;
  NLIN[1] = 1;
  NLIN[2] = 0;
  NLIN[3] = 1;
  NLIN[4] = 1;
  NLIN[5] = 2;
  NLIN[6] = 1;
  NLIN[7] = 1;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 2;
  NLIN[11] = 2;
  NLIN[12] = 2;
  NLIN[13] = 2;
  NLIN[14] = 2;
  NLIN[15] = 2;
  NLIN[16] = 1;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 2;
  NLIN[21] = 1;
  NLIN[22] = 2;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 2;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
  NLIN[34] = 2;
  NLIN[35] = 2;
  NLIN[36] = 2;
  NLIN[37] = 2;
  NLIN[38] = 1;
  NLIN[39] = 2;
  NLIN[40] = 2;
  NLIN[41] = 2;
  NLIN[42] = 2;
  NLIN[43] = 2;
  NLIN[44] = 2;
  NLIN[45] = 2;
  NLIN[46] = 2;
  NLIN[47] = 2;
  NLIN[48] = 2;
  NLIN[49] = 2;
  NLIN[50] = 2;
  NLIN[51] = 2;
  NLIN[52] = 2;
  NLIN[53] = 2;
  NLIN[54] = 1;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.95281424E+01;
  COFETA[1] = 3.26212115E+00;
  COFETA[2] = -3.40404685E-01;
  COFETA[3] = 1.47532537E-02;
  COFETA[4] = -1.34911437E+01;
  COFETA[5] = 8.49217713E-01;
  COFETA[6] = -2.75872442E-02;
  COFETA[7] = 1.23722694E-03;
  COFETA[8] = -1.45327866E+01;
  COFETA[9] = 1.67628298E+00;
  COFETA[10] = -1.36586011E-01;
  COFETA[11] = 6.02009005E-03;
  COFETA[12] = -1.65122887E+01;
  COFETA[13] = 2.39046525E+00;
  COFETA[14] = -2.29715738E-01;
  COFETA[15] = 1.00664463E-02;
  COFETA[16] = -1.45022372E+01;
  COFETA[17] = 1.67628298E+00;
  COFETA[18] = -1.36586011E-01;
  COFETA[19] = 6.02009005E-03;
  COFETA[20] = -1.29340542E+01;
  COFETA[21] = -3.14085289E-01;
  COFETA[22] = 2.63797587E-01;
  COFETA[23] = -1.64132666E-02;
  COFETA[24] = -1.60226028E+01;
  COFETA[25] = 2.13662660E+00;
  COFETA[26] = -1.96738977E-01;
  COFETA[27] = 8.63898199E-03;
  COFETA[28] = -2.33572437E+01;
  COFETA[29] = 4.85724263E+00;
  COFETA[30] = -5.32102483E-01;
  COFETA[31] = 2.24362161E-02;
  COFETA[32] = -1.93615579E+01;
  COFETA[33] = 3.24398914E+00;
  COFETA[34] = -3.38151420E-01;
  COFETA[35] = 1.46598067E-02;
  COFETA[36] = -1.91726494E+01;
  COFETA[37] = 3.19752754E+00;
  COFETA[38] = -3.32398830E-01;
  COFETA[39] = 1.44222031E-02;
  COFETA[40] = -1.64967808E+01;
  COFETA[41] = 2.39046525E+00;
  COFETA[42] = -2.29715738E-01;
  COFETA[43] = 1.00664463E-02;
  COFETA[44] = -1.64817393E+01;
  COFETA[45] = 2.39046525E+00;
  COFETA[46] = -2.29715738E-01;
  COFETA[47] = 1.00664463E-02;
  COFETA[48] = -2.20006759E+01;
  COFETA[49] = 3.66530272E+00;
  COFETA[50] = -3.09756445E-01;
  COFETA[51] = 1.02090749E-02;
  COFETA[52] = -2.39150323E+01;
  COFETA[53] = 4.87957850E+00;
  COFETA[54] = -5.34166762E-01;
  COFETA[55] = 2.24923677E-02;
  COFETA[56] = -2.32853661E+01;
  COFETA[57] = 4.81068153E+00;
  COFETA[58] = -5.27301048E-01;
  COFETA[59] = 2.22776802E-02;
  COFETA[60] = -2.39320805E+01;
  COFETA[61] = 4.87957850E+00;
  COFETA[62] = -5.34166762E-01;
  COFETA[63] = 2.24923677E-02;
  COFETA[64] = -2.42073748E+01;
  COFETA[65] = 5.05175437E+00;
  COFETA[66] = -5.52836130E-01;
  COFETA[67] = 2.31559377E-02;
  COFETA[68] = -2.41883837E+01;
  COFETA[69] = 5.05175437E+00;
  COFETA[70] = -5.52836130E-01;
  COFETA[71] = 2.31559377E-02;
  COFETA[72] = -2.37089465E+01;
  COFETA[73] = 4.47860513E+00;
  COFETA[74] = -4.32776310E-01;
  COFETA[75] = 1.61943631E-02;
  COFETA[76] = -1.83221275E+01;
  COFETA[77] = 3.35360209E+00;
  COFETA[78] = -3.51788995E-01;
  COFETA[79] = 1.52259804E-02;
  COFETA[80] = -2.36855249E+01;
  COFETA[81] = 4.47860513E+00;
  COFETA[82] = -4.32776310E-01;
  COFETA[83] = 1.61943631E-02;
  COFETA[84] = -2.49619512E+01;
  COFETA[85] = 5.17942495E+00;
  COFETA[86] = -5.54420660E-01;
  COFETA[87] = 2.26381154E-02;
  COFETA[88] = -2.47298409E+01;
  COFETA[89] = 5.16628217E+00;
  COFETA[90] = -5.57016710E-01;
  COFETA[91] = 2.29176713E-02;
  COFETA[92] = -2.49972082E+01;
  COFETA[93] = 5.09673056E+00;
  COFETA[94] = -5.34946406E-01;
  COFETA[95] = 2.14562401E-02;
  COFETA[96] = -2.49943939E+01;
  COFETA[97] = 5.16783298E+00;
  COFETA[98] = -5.58375908E-01;
  COFETA[99] = 2.30214881E-02;
  COFETA[100] = -2.49657349E+01;
  COFETA[101] = 5.10453889E+00;
  COFETA[102] = -5.36480276E-01;
  COFETA[103] = 2.15426062E-02;
  COFETA[104] = -2.49566706E+01;
  COFETA[105] = 5.10453889E+00;
  COFETA[106] = -5.36480276E-01;
  COFETA[107] = 2.15426062E-02;
  COFETA[108] = -2.39707021E+01;
  COFETA[109] = 4.48381911E+00;
  COFETA[110] = -4.33592214E-01;
  COFETA[111] = 1.62349637E-02;
  COFETA[112] = -2.07232360E+01;
  COFETA[113] = 3.09576818E+00;
  COFETA[114] = -2.36384313E-01;
  COFETA[115] = 7.09309770E-03;
  COFETA[116] = -2.47825222E+01;
  COFETA[117] = 4.84621755E+00;
  COFETA[118] = -4.91412112E-01;
  COFETA[119] = 1.91489049E-02;
  COFETA[120] = -2.49010617E+01;
  COFETA[121] = 4.91845647E+00;
  COFETA[122] = -5.03809620E-01;
  COFETA[123] = 1.98018056E-02;
  COFETA[124] = -2.23002700E+01;
  COFETA[125] = 3.90337385E+00;
  COFETA[126] = -3.45176993E-01;
  COFETA[127] = 1.19122568E-02;
  COFETA[128] = -2.22896674E+01;
  COFETA[129] = 3.90337385E+00;
  COFETA[130] = -3.45176993E-01;
  COFETA[131] = 1.19122568E-02;
  COFETA[132] = -2.34917383E+01;
  COFETA[133] = 4.39885838E+00;
  COFETA[134] = -4.20378963E-01;
  COFETA[135] = 1.55798335E-02;
  COFETA[136] = -2.11256554E+01;
  COFETA[137] = 3.22130690E+00;
  COFETA[138] = -2.55162776E-01;
  COFETA[139] = 7.99589758E-03;
  COFETA[140] = -2.21079528E+01;
  COFETA[141] = 3.69519525E+00;
  COFETA[142] = -3.14190894E-01;
  COFETA[143] = 1.04218608E-02;
  COFETA[144] = -2.22613524E+01;
  COFETA[145] = 3.69519525E+00;
  COFETA[146] = -3.14190894E-01;
  COFETA[147] = 1.04218608E-02;
  COFETA[148] = -2.48372539E+01;
  COFETA[149] = 5.16888194E+00;
  COFETA[150] = -5.55239216E-01;
  COFETA[151] = 2.27583887E-02;
  COFETA[152] = -2.49746917E+01;
  COFETA[153] = 5.17942495E+00;
  COFETA[154] = -5.54420660E-01;
  COFETA[155] = 2.26381154E-02;
  COFETA[156] = -2.17782259E+01;
  COFETA[157] = 3.47447660E+00;
  COFETA[158] = -2.87789350E-01;
  COFETA[159] = 9.37680114E-03;
  COFETA[160] = -2.10282485E+01;
  COFETA[161] = 3.20441841E+00;
  COFETA[162] = -2.50942791E-01;
  COFETA[163] = 7.72807126E-03;
  COFETA[164] = -2.06838718E+01;
  COFETA[165] = 2.98075905E+00;
  COFETA[166] = -2.19099757E-01;
  COFETA[167] = 6.25475381E-03;
  COFETA[168] = -2.25608392E+01;
  COFETA[169] = 3.79896931E+00;
  COFETA[170] = -3.29599952E-01;
  COFETA[171] = 1.11618162E-02;
  COFETA[172] = -2.18729738E+01;
  COFETA[173] = 3.47447660E+00;
  COFETA[174] = -2.87789350E-01;
  COFETA[175] = 9.37680114E-03;
  COFETA[176] = -2.18788596E+01;
  COFETA[177] = 3.47447660E+00;
  COFETA[178] = -2.87789350E-01;
  COFETA[179] = 9.37680114E-03;
  COFETA[180] = -2.36172747E+01;
  COFETA[181] = 4.19624204E+00;
  COFETA[182] = -3.89379568E-01;
  COFETA[183] = 1.40593024E-02;
  COFETA[184] = -2.00604709E+01;
  COFETA[185] = 2.60194067E+00;
  COFETA[186] = -1.55261690E-01;
  COFETA[187] = 2.91379441E-03;
  COFETA[188] = -2.00604709E+01;
  COFETA[189] = 2.60194067E+00;
  COFETA[190] = -1.55261690E-01;
  COFETA[191] = 2.91379441E-03;
  COFETA[192] = -2.00604709E+01;
  COFETA[193] = 2.60194067E+00;
  COFETA[194] = -1.55261690E-01;
  COFETA[195] = 2.91379441E-03;
  COFETA[196] = -2.00604709E+01;
  COFETA[197] = 2.60194067E+00;
  COFETA[198] = -1.55261690E-01;
  COFETA[199] = 2.91379441E-03;
  COFETA[200] = -2.00604709E+01;
  COFETA[201] = 2.60194067E+00;
  COFETA[202] = -1.55261690E-01;
  COFETA[203] = 2.91379441E-03;
  COFETA[204] = -1.87654102E+01;
  COFETA[205] = 1.94195743E+00;
  COFETA[206] = -5.96682310E-02;
  COFETA[207] = -1.59051724E-03;
  COFETA[208] = -2.20476842E+01;
  COFETA[209] = 3.47183888E+00;
  COFETA[210] = -2.80951710E-01;
  COFETA[211] = 8.82358958E-03;
  COFETA[212] = -2.20476842E+01;
  COFETA[213] = 3.47183888E+00;
  COFETA[214] = -2.80951710E-01;
  COFETA[215] = 8.82358958E-03;
  COFETA[216] = -1.59733684E+01;
  COFETA[217] = 2.12416328E+00;
  COFETA[218] = -1.95139471E-01;
  COFETA[219] = 8.57058122E-03;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 2.17382828E-02;
  COFLAM[1] = 3.26212115E+00;
  COFLAM[2] = -3.40404685E-01;
  COFLAM[3] = 1.47532537E-02;
  COFLAM[4] = 1.25921419E+01;
  COFLAM[5] = -1.98118351E+00;
  COFLAM[6] = 3.41585433E-01;
  COFLAM[7] = -1.37540956E-02;
  COFLAM[8] = 2.25253606E+00;
  COFLAM[9] = 1.67628298E+00;
  COFLAM[10] = -1.36586011E-01;
  COFLAM[11] = 6.02009005E-03;
  COFLAM[12] = -2.61204892E+00;
  COFLAM[13] = 3.19791631E+00;
  COFLAM[14] = -3.17109353E-01;
  COFLAM[15] = 1.38112811E-02;
  COFLAM[16] = 1.50122706E+01;
  COFLAM[17] = -3.77386658E+00;
  COFLAM[18] = 6.33321803E-01;
  COFLAM[19] = -2.91909315E-02;
  COFLAM[20] = 2.03772442E+01;
  COFLAM[21] = -7.67826511E+00;
  COFLAM[22] = 1.34610026E+00;
  COFLAM[23] = -6.73692873E-02;
  COFLAM[24] = 8.34784360E+00;
  COFLAM[25] = -1.58645356E+00;
  COFLAM[26] = 3.71139197E-01;
  COFLAM[27] = -1.90604485E-02;
  COFLAM[28] = -1.29294449E+01;
  COFLAM[29] = 6.58853846E+00;
  COFLAM[30] = -6.74340508E-01;
  COFLAM[31] = 2.55894357E-02;
  COFLAM[32] = 1.02094596E+01;
  COFLAM[33] = -2.93698949E+00;
  COFLAM[34] = 6.53896162E-01;
  COFLAM[35] = -3.52423155E-02;
  COFLAM[36] = 5.28309950E+00;
  COFLAM[37] = -1.44253961E+00;
  COFLAM[38] = 5.26102501E-01;
  COFLAM[39] = -3.24374810E-02;
  COFLAM[40] = 2.84330743E+00;
  COFLAM[41] = 4.28806088E-01;
  COFLAM[42] = 1.41908744E-01;
  COFLAM[43] = -1.03645469E-02;
  COFLAM[44] = 1.51124730E+00;
  COFLAM[45] = 1.05082786E+00;
  COFLAM[46] = 5.89158077E-02;
  COFLAM[47] = -6.47067890E-03;
  COFLAM[48] = -3.78625141E+00;
  COFLAM[49] = 1.71406891E+00;
  COFLAM[50] = 1.31217120E-01;
  COFLAM[51] = -1.60027598E-02;
  COFLAM[52] = -1.73779194E+01;
  COFLAM[53] = 7.50260525E+00;
  COFLAM[54] = -6.58046837E-01;
  COFLAM[55] = 1.96731873E-02;
  COFLAM[56] = -1.59122947E+01;
  COFLAM[57] = 7.22151786E+00;
  COFLAM[58] = -6.48384331E-01;
  COFLAM[59] = 2.03544205E-02;
  COFLAM[60] = -1.15783896E+01;
  COFLAM[61] = 5.08669705E+00;
  COFLAM[62] = -3.32743705E-01;
  COFLAM[63] = 5.17680859E-03;
  COFLAM[64] = -8.47003653E+00;
  COFLAM[65] = 4.79841591E+00;
  COFLAM[66] = -4.18356189E-01;
  COFLAM[67] = 1.40201884E-02;
  COFLAM[68] = -1.10046092E+01;
  COFLAM[69] = 5.17648742E+00;
  COFLAM[70] = -3.82446171E-01;
  COFLAM[71] = 8.84606845E-03;
  COFLAM[72] = -1.02388360E+01;
  COFLAM[73] = 4.85175556E+00;
  COFLAM[74] = -3.55720184E-01;
  COFLAM[75] = 8.26691164E-03;
  COFLAM[76] = -8.56195009E-01;
  COFLAM[77] = 2.36542092E+00;
  COFLAM[78] = -1.28936258E-01;
  COFLAM[79] = 2.10883755E-03;
  COFLAM[80] = -1.31233744E+01;
  COFLAM[81] = 5.61068983E+00;
  COFLAM[82] = -3.96021691E-01;
  COFLAM[83] = 7.70108430E-03;
  COFLAM[84] = -1.53195870E+01;
  COFLAM[85] = 6.83501029E+00;
  COFLAM[86] = -6.00074817E-01;
  COFLAM[87] = 1.83171141E-02;
  COFLAM[88] = -1.78898924E+01;
  COFLAM[89] = 7.76779755E+00;
  COFLAM[90] = -6.99718778E-01;
  COFLAM[91] = 2.17864452E-02;
  COFLAM[92] = -2.27201106E+01;
  COFLAM[93] = 9.81386658E+00;
  COFLAM[94] = -9.98452021E-01;
  COFLAM[95] = 3.60221046E-02;
  COFLAM[96] = -1.55080331E+01;
  COFLAM[97] = 6.82594957E+00;
  COFLAM[98] = -5.86409841E-01;
  COFLAM[99] = 1.72729643E-02;
  COFLAM[100] = -2.07925987E+01;
  COFLAM[101] = 8.91865598E+00;
  COFLAM[102] = -8.59588638E-01;
  COFLAM[103] = 2.91231788E-02;
  COFLAM[104] = -2.15359873E+01;
  COFLAM[105] = 9.15859021E+00;
  COFLAM[106] = -8.81784834E-01;
  COFLAM[107] = 2.97335717E-02;
  COFLAM[108] = -1.61698378E+01;
  COFLAM[109] = 6.91606139E+00;
  COFLAM[110] = -5.91956462E-01;
  COFLAM[111] = 1.72065762E-02;
  COFLAM[112] = -1.27025533E+01;
  COFLAM[113] = 5.33085711E+00;
  COFLAM[114] = -3.52133717E-01;
  COFLAM[115] = 5.57336094E-03;
  COFLAM[116] = -2.33498896E+01;
  COFLAM[117] = 9.74613204E+00;
  COFLAM[118] = -9.56820661E-01;
  COFLAM[119] = 3.29353190E-02;
  COFLAM[120] = -2.19994137E+01;
  COFLAM[121] = 9.21723589E+00;
  COFLAM[122] = -8.85870882E-01;
  COFLAM[123] = 2.97842338E-02;
  COFLAM[124] = -4.43822408E-02;
  COFLAM[125] = 4.46028118E-01;
  COFLAM[126] = 2.78709872E-01;
  COFLAM[127] = -2.15815622E-02;
  COFLAM[128] = -9.95684903E+00;
  COFLAM[129] = 4.63788947E+00;
  COFLAM[130] = -2.96039513E-01;
  COFLAM[131] = 4.40600345E-03;
  COFLAM[132] = -1.60659029E+01;
  COFLAM[133] = 7.26067027E+00;
  COFLAM[134] = -6.78836254E-01;
  COFLAM[135] = 2.27000407E-02;
  COFLAM[136] = -1.95704547E+01;
  COFLAM[137] = 8.30295330E+00;
  COFLAM[138] = -7.86163594E-01;
  COFLAM[139] = 2.61814204E-02;
  COFLAM[140] = -1.72011703E+01;
  COFLAM[141] = 7.41911829E+00;
  COFLAM[142] = -6.63128483E-01;
  COFLAM[143] = 2.04878807E-02;
  COFLAM[144] = -1.48535161E+01;
  COFLAM[145] = 6.19651143E+00;
  COFLAM[146] = -4.67811925E-01;
  COFLAM[147] = 1.06511697E-02;
  COFLAM[148] = -2.13992509E+01;
  COFLAM[149] = 9.33379433E+00;
  COFLAM[150] = -9.32773055E-01;
  COFLAM[151] = 3.30421623E-02;
  COFLAM[152] = -1.01859973E+01;
  COFLAM[153] = 5.17249776E+00;
  COFLAM[154] = -4.31613478E-01;
  COFLAM[155] = 1.28965892E-02;
  COFLAM[156] = -1.62697156E+01;
  COFLAM[157] = 6.94969444E+00;
  COFLAM[158] = -6.01295348E-01;
  COFLAM[159] = 1.77748229E-02;
  COFLAM[160] = -1.49697173E+01;
  COFLAM[161] = 6.26466133E+00;
  COFLAM[162] = -4.78896356E-01;
  COFLAM[163] = 1.12767889E-02;
  COFLAM[164] = -1.61832351E+01;
  COFLAM[165] = 6.76037902E+00;
  COFLAM[166] = -5.54436829E-01;
  COFLAM[167] = 1.49070601E-02;
  COFLAM[168] = -1.67150731E+01;
  COFLAM[169] = 6.99048743E+00;
  COFLAM[170] = -5.80985296E-01;
  COFLAM[171] = 1.59720843E-02;
  COFLAM[172] = -1.65816828E+01;
  COFLAM[173] = 6.86102936E+00;
  COFLAM[174] = -5.59973367E-01;
  COFLAM[175] = 1.49220139E-02;
  COFLAM[176] = -1.51006112E+01;
  COFLAM[177] = 6.27679789E+00;
  COFLAM[178] = -4.85514640E-01;
  COFLAM[179] = 1.17310535E-02;
  COFLAM[180] = -2.10271382E+01;
  COFLAM[181] = 8.65052385E+00;
  COFLAM[182] = -7.92479927E-01;
  COFLAM[183] = 2.49902139E-02;
  COFLAM[184] = -1.56753616E+01;
  COFLAM[185] = 6.35931402E+00;
  COFLAM[186] = -4.77279944E-01;
  COFLAM[187] = 1.06492772E-02;
  COFLAM[188] = -1.66908694E+01;
  COFLAM[189] = 6.81710487E+00;
  COFLAM[190] = -5.44157024E-01;
  COFLAM[191] = 1.38399444E-02;
  COFLAM[192] = -1.66908694E+01;
  COFLAM[193] = 6.81710487E+00;
  COFLAM[194] = -5.44157024E-01;
  COFLAM[195] = 1.38399444E-02;
  COFLAM[196] = -1.66908694E+01;
  COFLAM[197] = 6.81710487E+00;
  COFLAM[198] = -5.44157024E-01;
  COFLAM[199] = 1.38399444E-02;
  COFLAM[200] = -1.77124894E+01;
  COFLAM[201] = 7.27429973E+00;
  COFLAM[202] = -6.10459594E-01;
  COFLAM[203] = 1.69669942E-02;
  COFLAM[204] = -1.58415469E+01;
  COFLAM[205] = 6.43683271E+00;
  COFLAM[206] = -5.02836210E-01;
  COFLAM[207] = 1.23440215E-02;
  COFLAM[208] = -2.59690949E+01;
  COFLAM[209] = 1.05409684E+01;
  COFLAM[210] = -1.03961561E+00;
  COFLAM[211] = 3.57473425E-02;
  COFLAM[212] = -2.58993728E+01;
  COFLAM[213] = 1.05612694E+01;
  COFLAM[214] = -1.04820257E+00;
  COFLAM[215] = 3.63660269E-02;
  COFLAM[216] = 1.00878553E+01;
  COFLAM[217] = -2.26868652E+00;
  COFLAM[218] = 4.60600374E-01;
  COFLAM[219] = -2.29419837E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.41218850E+01;
  COFD[1] = 3.92946227E+00;
  COFD[2] = -2.91729340E-01;
  COFD[3] = 1.24783320E-02;
  COFD[4] = -1.09419421E+01;
  COFD[5] = 2.56365104E+00;
  COFD[6] = -1.18913262E-01;
  COFD[7] = 5.17669825E-03;
  COFD[8] = -1.29709728E+01;
  COFD[9] = 3.28440910E+00;
  COFD[10] = -2.11707534E-01;
  COFD[11] = 9.16419558E-03;
  COFD[12] = -1.41183749E+01;
  COFD[13] = 3.59720720E+00;
  COFD[14] = -2.50852412E-01;
  COFD[15] = 1.07992653E-02;
  COFD[16] = -1.29727324E+01;
  COFD[17] = 3.28440910E+00;
  COFD[18] = -2.11707534E-01;
  COFD[19] = 9.16419558E-03;
  COFD[20] = -1.91953111E+01;
  COFD[21] = 5.44274135E+00;
  COFD[22] = -4.65397833E-01;
  COFD[23] = 1.91171363E-02;
  COFD[24] = -1.38467772E+01;
  COFD[25] = 3.47073417E+00;
  COFD[26] = -2.34706158E-01;
  COFD[27] = 1.01108517E-02;
  COFD[28] = -1.69855851E+01;
  COFD[29] = 4.58049527E+00;
  COFD[30] = -3.70921885E-01;
  COFD[31] = 1.56999324E-02;
  COFD[32] = -1.51283837E+01;
  COFD[33] = 3.92295205E+00;
  COFD[34] = -2.90942506E-01;
  COFD[35] = 1.24465450E-02;
  COFD[36] = -1.50643904E+01;
  COFD[37] = 3.90641370E+00;
  COFD[38] = -2.88957677E-01;
  COFD[39] = 1.23669987E-02;
  COFD[40] = -1.41188415E+01;
  COFD[41] = 3.59720720E+00;
  COFD[42] = -2.50852412E-01;
  COFD[43] = 1.07992653E-02;
  COFD[44] = -1.41192808E+01;
  COFD[45] = 3.59720720E+00;
  COFD[46] = -2.50852412E-01;
  COFD[47] = 1.07992653E-02;
  COFD[48] = -1.93172916E+01;
  COFD[49] = 5.37588635E+00;
  COFD[50] = -4.60762834E-01;
  COFD[51] = 1.90722493E-02;
  COFD[52] = -1.72388691E+01;
  COFD[53] = 4.60447813E+00;
  COFD[54] = -3.73889368E-01;
  COFD[55] = 1.58229235E-02;
  COFD[56] = -1.68005293E+01;
  COFD[57] = 4.55072147E+00;
  COFD[58] = -3.67343400E-01;
  COFD[59] = 1.55560012E-02;
  COFD[60] = -1.72383069E+01;
  COFD[61] = 4.60447813E+00;
  COFD[62] = -3.73889368E-01;
  COFD[63] = 1.58229235E-02;
  COFD[64] = -1.73283185E+01;
  COFD[65] = 4.71167685E+00;
  COFD[66] = -3.87004255E-01;
  COFD[67] = 1.63602477E-02;
  COFD[68] = -1.73290135E+01;
  COFD[69] = 4.71167685E+00;
  COFD[70] = -3.87004255E-01;
  COFD[71] = 1.63602477E-02;
  COFD[72] = -1.89960771E+01;
  COFD[73] = 5.22783910E+00;
  COFD[74] = -4.44450099E-01;
  COFD[75] = 1.84764493E-02;
  COFD[76] = -1.47582655E+01;
  COFD[77] = 3.96253155E+00;
  COFD[78] = -2.95745106E-01;
  COFD[79] = 1.26413618E-02;
  COFD[80] = -1.89966132E+01;
  COFD[81] = 5.22783910E+00;
  COFD[82] = -4.44450099E-01;
  COFD[83] = 1.84764493E-02;
  COFD[84] = -1.82116095E+01;
  COFD[85] = 4.94453558E+00;
  COFD[86] = -4.13840584E-01;
  COFD[87] = 1.73898654E-02;
  COFD[88] = -1.79863396E+01;
  COFD[89] = 4.88559216E+00;
  COFD[90] = -4.07208104E-01;
  COFD[91] = 1.71425982E-02;
  COFD[92] = -1.86950182E+01;
  COFD[93] = 5.06329467E+00;
  COFD[94] = -4.27615122E-01;
  COFD[95] = 1.79228042E-02;
  COFD[96] = -1.81469992E+01;
  COFD[97] = 4.87072577E+00;
  COFD[98] = -4.05545664E-01;
  COFD[99] = 1.70811253E-02;
  COFD[100] = -1.86585621E+01;
  COFD[101] = 5.05830652E+00;
  COFD[102] = -4.27083712E-01;
  COFD[103] = 1.79042712E-02;
  COFD[104] = -1.86587235E+01;
  COFD[105] = 5.05830652E+00;
  COFD[106] = -4.27083712E-01;
  COFD[107] = 1.79042712E-02;
  COFD[108] = -1.92706200E+01;
  COFD[109] = 5.22641306E+00;
  COFD[110] = -4.44290196E-01;
  COFD[111] = 1.84704961E-02;
  COFD[112] = -1.92100463E+01;
  COFD[113] = 5.22556324E+00;
  COFD[114] = -4.44195247E-01;
  COFD[115] = 1.84669783E-02;
  COFD[116] = -1.92111139E+01;
  COFD[117] = 5.16046404E+00;
  COFD[118] = -4.38008342E-01;
  COFD[119] = 1.82870041E-02;
  COFD[120] = -1.91375755E+01;
  COFD[121] = 5.13436741E+00;
  COFD[122] = -4.35193261E-01;
  COFD[123] = 1.81872196E-02;
  COFD[124] = -1.92369503E+01;
  COFD[125] = 5.34516253E+00;
  COFD[126] = -4.57548788E-01;
  COFD[127] = 1.89625374E-02;
  COFD[128] = -1.92371704E+01;
  COFD[129] = 5.34516253E+00;
  COFD[130] = -4.57548788E-01;
  COFD[131] = 1.89625374E-02;
  COFD[132] = -1.91106509E+01;
  COFD[133] = 5.24865128E+00;
  COFD[134] = -4.46802764E-01;
  COFD[135] = 1.85649476E-02;
  COFD[136] = -1.92438273E+01;
  COFD[137] = 5.20849012E+00;
  COFD[138] = -4.42302201E-01;
  COFD[139] = 1.83974704E-02;
  COFD[140] = -1.98185899E+01;
  COFD[141] = 5.37165711E+00;
  COFD[142] = -4.60308124E-01;
  COFD[143] = 1.90561552E-02;
  COFD[144] = -1.98171101E+01;
  COFD[145] = 5.37165711E+00;
  COFD[146] = -4.60308124E-01;
  COFD[147] = 1.90561552E-02;
  COFD[148] = -1.80818156E+01;
  COFD[149] = 4.90738815E+00;
  COFD[150] = -4.09483894E-01;
  COFD[151] = 1.72192910E-02;
  COFD[152] = -1.82112929E+01;
  COFD[153] = 4.94453558E+00;
  COFD[154] = -4.13840584E-01;
  COFD[155] = 1.73898654E-02;
  COFD[156] = -1.98475503E+01;
  COFD[157] = 5.33311526E+00;
  COFD[158] = -4.56260202E-01;
  COFD[159] = 1.89172095E-02;
  COFD[160] = -1.95514492E+01;
  COFD[161] = 5.30461369E+00;
  COFD[162] = -4.53088496E-01;
  COFD[163] = 1.87998409E-02;
  COFD[164] = -1.95829390E+01;
  COFD[165] = 5.27835392E+00;
  COFD[166] = -4.50143769E-01;
  COFD[167] = 1.86899020E-02;
  COFD[168] = -1.98161567E+01;
  COFD[169] = 5.35897956E+00;
  COFD[170] = -4.58992472E-01;
  COFD[171] = 1.90117416E-02;
  COFD[172] = -1.98465509E+01;
  COFD[173] = 5.33311526E+00;
  COFD[174] = -4.56260202E-01;
  COFD[175] = 1.89172095E-02;
  COFD[176] = -1.98464824E+01;
  COFD[177] = 5.33311526E+00;
  COFD[178] = -4.56260202E-01;
  COFD[179] = 1.89172095E-02;
  COFD[180] = -1.98431084E+01;
  COFD[181] = 5.29318575E+00;
  COFD[182] = -4.51815332E-01;
  COFD[183] = 1.87526763E-02;
  COFD[184] = -2.03662946E+01;
  COFD[185] = 5.43917732E+00;
  COFD[186] = -4.65585169E-01;
  COFD[187] = 1.91504194E-02;
  COFD[188] = -2.03662946E+01;
  COFD[189] = 5.43917732E+00;
  COFD[190] = -4.65585169E-01;
  COFD[191] = 1.91504194E-02;
  COFD[192] = -2.03662946E+01;
  COFD[193] = 5.43917732E+00;
  COFD[194] = -4.65585169E-01;
  COFD[195] = 1.91504194E-02;
  COFD[196] = -2.03662946E+01;
  COFD[197] = 5.43917732E+00;
  COFD[198] = -4.65585169E-01;
  COFD[199] = 1.91504194E-02;
  COFD[200] = -2.03662946E+01;
  COFD[201] = 5.43917732E+00;
  COFD[202] = -4.65585169E-01;
  COFD[203] = 1.91504194E-02;
  COFD[204] = -2.06638982E+01;
  COFD[205] = 5.45347668E+00;
  COFD[206] = -4.65289819E-01;
  COFD[207] = 1.90547288E-02;
  COFD[208] = -2.01927134E+01;
  COFD[209] = 5.40010667E+00;
  COFD[210] = -4.63239430E-01;
  COFD[211] = 1.91539217E-02;
  COFD[212] = -2.01927134E+01;
  COFD[213] = 5.40010667E+00;
  COFD[214] = -4.63239430E-01;
  COFD[215] = 1.91539217E-02;
  COFD[216] = -1.38221854E+01;
  COFD[217] = 3.46560000E+00;
  COFD[218] = -2.34075114E-01;
  COFD[219] = 1.00849661E-02;
  COFD[220] = -1.09419421E+01;
  COFD[221] = 2.56365104E+00;
  COFD[222] = -1.18913262E-01;
  COFD[223] = 5.17669825E-03;
  COFD[224] = -9.78882649E+00;
  COFD[225] = 1.95527707E+00;
  COFD[226] = -4.07233312E-02;
  COFD[227] = 1.83285363E-03;
  COFD[228] = -1.06253333E+01;
  COFD[229] = 2.15819366E+00;
  COFD[230] = -6.52830580E-02;
  COFD[231] = 2.80657258E-03;
  COFD[232] = -1.12814363E+01;
  COFD[233] = 2.30017030E+00;
  COFD[234] = -8.34928497E-02;
  COFD[235] = 3.58611589E-03;
  COFD[236] = -1.06286607E+01;
  COFD[237] = 2.15819366E+00;
  COFD[238] = -6.52830580E-02;
  COFD[239] = 2.80657258E-03;
  COFD[240] = -1.65320372E+01;
  COFD[241] = 4.34135715E+00;
  COFD[242] = -3.42166667E-01;
  COFD[243] = 1.45425451E-02;
  COFD[244] = -1.11288741E+01;
  COFD[245] = 2.21964693E+00;
  COFD[246] = -7.27132181E-02;
  COFD[247] = 3.10467640E-03;
  COFD[248] = -1.33494517E+01;
  COFD[249] = 3.04769365E+00;
  COFD[250] = -1.81586731E-01;
  COFD[251] = 7.88540063E-03;
  COFD[252] = -1.20163591E+01;
  COFD[253] = 2.55772522E+00;
  COFD[254] = -1.18119456E-01;
  COFD[255] = 5.14119183E-03;
  COFD[256] = -1.19609478E+01;
  COFD[257] = 2.54091639E+00;
  COFD[258] = -1.15850475E-01;
  COFD[259] = 5.03893346E-03;
  COFD[260] = -1.12823422E+01;
  COFD[261] = 2.30017030E+00;
  COFD[262] = -8.34928497E-02;
  COFD[263] = 3.58611589E-03;
  COFD[264] = -1.12831958E+01;
  COFD[265] = 2.30017030E+00;
  COFD[266] = -8.34928497E-02;
  COFD[267] = 3.58611589E-03;
  COFD[268] = -1.54361173E+01;
  COFD[269] = 3.83529069E+00;
  COFD[270] = -2.80481778E-01;
  COFD[271] = 1.20302770E-02;
  COFD[272] = -1.35411048E+01;
  COFD[273] = 3.05984388E+00;
  COFD[274] = -1.83114865E-01;
  COFD[275] = 7.94950068E-03;
  COFD[276] = -1.32011977E+01;
  COFD[277] = 3.02784198E+00;
  COFD[278] = -1.79087955E-01;
  COFD[279] = 7.78048913E-03;
  COFD[280] = -1.35400163E+01;
  COFD[281] = 3.05984388E+00;
  COFD[282] = -1.83114865E-01;
  COFD[283] = 7.94950068E-03;
  COFD[284] = -1.35217557E+01;
  COFD[285] = 3.12061076E+00;
  COFD[286] = -1.90761802E-01;
  COFD[287] = 8.27051223E-03;
  COFD[288] = -1.35230967E+01;
  COFD[289] = 3.12061076E+00;
  COFD[290] = -1.90761802E-01;
  COFD[291] = 8.27051223E-03;
  COFD[292] = -1.51423841E+01;
  COFD[293] = 3.68565858E+00;
  COFD[294] = -2.62077329E-01;
  COFD[295] = 1.12749663E-02;
  COFD[296] = -1.17244117E+01;
  COFD[297] = 2.59606889E+00;
  COFD[298] = -1.23237035E-01;
  COFD[299] = 5.36924411E-03;
  COFD[300] = -1.51434323E+01;
  COFD[301] = 3.68565858E+00;
  COFD[302] = -2.62077329E-01;
  COFD[303] = 1.12749663E-02;
  COFD[304] = -1.43067480E+01;
  COFD[305] = 3.34609996E+00;
  COFD[306] = -2.19417637E-01;
  COFD[307] = 9.48565577E-03;
  COFD[308] = -1.41186901E+01;
  COFD[309] = 3.29251025E+00;
  COFD[310] = -2.12716771E-01;
  COFD[311] = 9.20613624E-03;
  COFD[312] = -1.46609834E+01;
  COFD[313] = 3.42877141E+00;
  COFD[314] = -2.29550711E-01;
  COFD[315] = 9.89957140E-03;
  COFD[316] = -1.42607285E+01;
  COFD[317] = 3.27800958E+00;
  COFD[318] = -2.10904650E-01;
  COFD[319] = 9.13059463E-03;
  COFD[320] = -1.46295087E+01;
  COFD[321] = 3.42403711E+00;
  COFD[322] = -2.28974532E-01;
  COFD[323] = 9.87621386E-03;
  COFD[324] = -1.46298259E+01;
  COFD[325] = 3.42403711E+00;
  COFD[326] = -2.28974532E-01;
  COFD[327] = 9.87621386E-03;
  COFD[328] = -1.53871729E+01;
  COFD[329] = 3.68408734E+00;
  COFD[330] = -2.61879015E-01;
  COFD[331] = 1.12666094E-02;
  COFD[332] = -1.57445078E+01;
  COFD[333] = 3.82742337E+00;
  COFD[334] = -2.79536580E-01;
  COFD[335] = 1.19924373E-02;
  COFD[336] = -1.51818344E+01;
  COFD[337] = 3.55111766E+00;
  COFD[338] = -2.44966429E-01;
  COFD[339] = 1.05482272E-02;
  COFD[340] = -1.50908508E+01;
  COFD[341] = 3.51404074E+00;
  COFD[342] = -2.40221542E-01;
  COFD[343] = 1.03454651E-02;
  COFD[344] = -1.53691820E+01;
  COFD[345] = 3.80403213E+00;
  COFD[346] = -2.76736813E-01;
  COFD[347] = 1.18808568E-02;
  COFD[348] = -1.53696134E+01;
  COFD[349] = 3.80403213E+00;
  COFD[350] = -2.76736813E-01;
  COFD[351] = 1.18808568E-02;
  COFD[352] = -1.52493362E+01;
  COFD[353] = 3.70713307E+00;
  COFD[354] = -2.64771252E-01;
  COFD[355] = 1.13878078E-02;
  COFD[356] = -1.57697076E+01;
  COFD[357] = 3.80988507E+00;
  COFD[358] = -2.77445350E-01;
  COFD[359] = 1.19094492E-02;
  COFD[360] = -1.58913557E+01;
  COFD[361] = 3.83144376E+00;
  COFD[362] = -2.80019474E-01;
  COFD[363] = 1.20117632E-02;
  COFD[364] = -1.58884248E+01;
  COFD[365] = 3.83144376E+00;
  COFD[366] = -2.80019474E-01;
  COFD[367] = 1.20117632E-02;
  COFD[368] = -1.42128224E+01;
  COFD[369] = 3.31879365E+00;
  COFD[370] = -2.16004062E-01;
  COFD[371] = 9.34330595E-03;
  COFD[372] = -1.43061302E+01;
  COFD[373] = 3.34609996E+00;
  COFD[374] = -2.19417637E-01;
  COFD[375] = 9.48565577E-03;
  COFD[376] = -1.60811761E+01;
  COFD[377] = 3.84841959E+00;
  COFD[378] = -2.82051466E-01;
  COFD[379] = 1.20928078E-02;
  COFD[380] = -1.59136039E+01;
  COFD[381] = 3.85500645E+00;
  COFD[382] = -2.82834228E-01;
  COFD[383] = 1.21237927E-02;
  COFD[384] = -1.60254813E+01;
  COFD[385] = 3.85862187E+00;
  COFD[386] = -2.83262574E-01;
  COFD[387] = 1.21406844E-02;
  COFD[388] = -1.58862794E+01;
  COFD[389] = 3.81826954E+00;
  COFD[390] = -2.78442735E-01;
  COFD[391] = 1.19489210E-02;
  COFD[392] = -1.60791983E+01;
  COFD[393] = 3.84841959E+00;
  COFD[394] = -2.82051466E-01;
  COFD[395] = 1.20928078E-02;
  COFD[396] = -1.60790629E+01;
  COFD[397] = 3.84841959E+00;
  COFD[398] = -2.82051466E-01;
  COFD[399] = 1.20928078E-02;
  COFD[400] = -1.59092763E+01;
  COFD[401] = 3.75176869E+00;
  COFD[402] = -2.70323254E-01;
  COFD[403] = 1.16183021E-02;
  COFD[404] = -1.65211695E+01;
  COFD[405] = 3.96045058E+00;
  COFD[406] = -2.95491086E-01;
  COFD[407] = 1.26309913E-02;
  COFD[408] = -1.65211695E+01;
  COFD[409] = 3.96045058E+00;
  COFD[410] = -2.95491086E-01;
  COFD[411] = 1.26309913E-02;
  COFD[412] = -1.65211695E+01;
  COFD[413] = 3.96045058E+00;
  COFD[414] = -2.95491086E-01;
  COFD[415] = 1.26309913E-02;
  COFD[416] = -1.65211695E+01;
  COFD[417] = 3.96045058E+00;
  COFD[418] = -2.95491086E-01;
  COFD[419] = 1.26309913E-02;
  COFD[420] = -1.65211695E+01;
  COFD[421] = 3.96045058E+00;
  COFD[422] = -2.95491086E-01;
  COFD[423] = 1.26309913E-02;
  COFD[424] = -1.69048258E+01;
  COFD[425] = 4.02910048E+00;
  COFD[426] = -3.03801060E-01;
  COFD[427] = 1.29668775E-02;
  COFD[428] = -1.62247253E+01;
  COFD[429] = 3.85939026E+00;
  COFD[430] = -2.83353647E-01;
  COFD[431] = 1.21442775E-02;
  COFD[432] = -1.62247253E+01;
  COFD[433] = 3.85939026E+00;
  COFD[434] = -2.83353647E-01;
  COFD[435] = 1.21442775E-02;
  COFD[436] = -1.11071703E+01;
  COFD[437] = 2.21467976E+00;
  COFD[438] = -7.20501534E-02;
  COFD[439] = 3.07515437E-03;
  COFD[440] = -1.29709728E+01;
  COFD[441] = 3.28440910E+00;
  COFD[442] = -2.11707534E-01;
  COFD[443] = 9.16419558E-03;
  COFD[444] = -1.06253333E+01;
  COFD[445] = 2.15819366E+00;
  COFD[446] = -6.52830580E-02;
  COFD[447] = 2.80657258E-03;
  COFD[448] = -1.27611382E+01;
  COFD[449] = 2.70797975E+00;
  COFD[450] = -1.37895013E-01;
  COFD[451] = 6.01030858E-03;
  COFD[452] = -1.38802589E+01;
  COFD[453] = 2.98298723E+00;
  COFD[454] = -1.73428215E-01;
  COFD[455] = 7.54224684E-03;
  COFD[456] = -1.27761797E+01;
  COFD[457] = 2.70797975E+00;
  COFD[458] = -1.37895013E-01;
  COFD[459] = 6.01030858E-03;
  COFD[460] = -1.88412751E+01;
  COFD[461] = 4.90686422E+00;
  COFD[462] = -4.09428407E-01;
  COFD[463] = 1.72173805E-02;
  COFD[464] = -1.37003044E+01;
  COFD[465] = 2.90243493E+00;
  COFD[466] = -1.63148841E-01;
  COFD[467] = 7.10447920E-03;
  COFD[468] = -1.64305301E+01;
  COFD[469] = 3.86315631E+00;
  COFD[470] = -2.83800980E-01;
  COFD[471] = 1.21619703E-02;
  COFD[472] = -1.46233021E+01;
  COFD[473] = 3.27714313E+00;
  COFD[474] = -2.10795461E-01;
  COFD[475] = 9.12600427E-03;
  COFD[476] = -1.45714581E+01;
  COFD[477] = 3.25814060E+00;
  COFD[478] = -2.08402129E-01;
  COFD[479] = 9.02544298E-03;
  COFD[480] = -1.38853749E+01;
  COFD[481] = 2.98298723E+00;
  COFD[482] = -1.73428215E-01;
  COFD[483] = 7.54224684E-03;
  COFD[484] = -1.38902360E+01;
  COFD[485] = 2.98298723E+00;
  COFD[486] = -1.73428215E-01;
  COFD[487] = 7.54224684E-03;
  COFD[488] = -1.88359597E+01;
  COFD[489] = 4.75778339E+00;
  COFD[490] = -3.92510587E-01;
  COFD[491] = 1.65802295E-02;
  COFD[492] = -1.65809452E+01;
  COFD[493] = 3.87564052E+00;
  COFD[494] = -2.85285750E-01;
  COFD[495] = 1.22208235E-02;
  COFD[496] = -1.62171750E+01;
  COFD[497] = 3.84275248E+00;
  COFD[498] = -2.81379017E-01;
  COFD[499] = 1.20662349E-02;
  COFD[500] = -1.65749585E+01;
  COFD[501] = 3.87564052E+00;
  COFD[502] = -2.85285750E-01;
  COFD[503] = 1.22208235E-02;
  COFD[504] = -1.65490061E+01;
  COFD[505] = 3.93824541E+00;
  COFD[506] = -2.92787590E-01;
  COFD[507] = 1.25209211E-02;
  COFD[508] = -1.65561492E+01;
  COFD[509] = 3.93824541E+00;
  COFD[510] = -2.92787590E-01;
  COFD[511] = 1.25209211E-02;
  COFD[512] = -1.84519745E+01;
  COFD[513] = 4.56059591E+00;
  COFD[514] = -3.68504274E-01;
  COFD[515] = 1.56015944E-02;
  COFD[516] = -1.44910255E+01;
  COFD[517] = 3.31811351E+00;
  COFD[518] = -2.15918664E-01;
  COFD[519] = 9.33972748E-03;
  COFD[520] = -1.84583225E+01;
  COFD[521] = 4.56059591E+00;
  COFD[522] = -3.68504274E-01;
  COFD[523] = 1.56015944E-02;
  COFD[524] = -1.74524152E+01;
  COFD[525] = 4.17306000E+00;
  COFD[526] = -3.21208070E-01;
  COFD[527] = 1.36692112E-02;
  COFD[528] = -1.72189808E+01;
  COFD[529] = 4.10247595E+00;
  COFD[530] = -3.12590710E-01;
  COFD[531] = 1.33179236E-02;
  COFD[532] = -1.80017005E+01;
  COFD[533] = 4.31633461E+00;
  COFD[534] = -3.39053638E-01;
  COFD[535] = 1.44128540E-02;
  COFD[536] = -1.73573906E+01;
  COFD[537] = 4.08458730E+00;
  COFD[538] = -3.10424631E-01;
  COFD[539] = 1.32303913E-02;
  COFD[540] = -1.79604961E+01;
  COFD[541] = 4.30733766E+00;
  COFD[542] = -3.37925627E-01;
  COFD[543] = 1.43655069E-02;
  COFD[544] = -1.79625215E+01;
  COFD[545] = 4.30733766E+00;
  COFD[546] = -3.37925627E-01;
  COFD[547] = 1.43655069E-02;
  COFD[548] = -1.87347350E+01;
  COFD[549] = 4.55932865E+00;
  COFD[550] = -3.68355198E-01;
  COFD[551] = 1.55957356E-02;
  COFD[552] = -1.86817008E+01;
  COFD[553] = 4.55856850E+00;
  COFD[554] = -3.68265791E-01;
  COFD[555] = 1.55922225E-02;
  COFD[556] = -1.86097186E+01;
  COFD[557] = 4.45757911E+00;
  COFD[558] = -3.56368733E-01;
  COFD[559] = 1.51238590E-02;
  COFD[560] = -1.85284554E+01;
  COFD[561] = 4.42603366E+00;
  COFD[562] = -3.52586895E-01;
  COFD[563] = 1.49720921E-02;
  COFD[564] = -1.87900651E+01;
  COFD[565] = 4.71430273E+00;
  COFD[566] = -3.87319126E-01;
  COFD[567] = 1.63728857E-02;
  COFD[568] = -1.87927351E+01;
  COFD[569] = 4.71430273E+00;
  COFD[570] = -3.87319126E-01;
  COFD[571] = 1.63728857E-02;
  COFD[572] = -1.85961945E+01;
  COFD[573] = 4.58430295E+00;
  COFD[574] = -3.71395187E-01;
  COFD[575] = 1.57196293E-02;
  COFD[576] = -1.87089736E+01;
  COFD[577] = 4.54237822E+00;
  COFD[578] = -3.66363712E-01;
  COFD[579] = 1.55175729E-02;
  COFD[580] = -1.94248426E+01;
  COFD[581] = 4.75245509E+00;
  COFD[582] = -3.91873770E-01;
  COFD[583] = 1.65547689E-02;
  COFD[584] = -1.94043204E+01;
  COFD[585] = 4.75245509E+00;
  COFD[586] = -3.91873770E-01;
  COFD[587] = 1.65547689E-02;
  COFD[588] = -1.73332828E+01;
  COFD[589] = 4.13619942E+00;
  COFD[590] = -3.16693330E-01;
  COFD[591] = 1.34845235E-02;
  COFD[592] = -1.74487462E+01;
  COFD[593] = 4.17306000E+00;
  COFD[594] = -3.21208070E-01;
  COFD[595] = 1.36692112E-02;
  COFD[596] = -1.93977131E+01;
  COFD[597] = 4.69695753E+00;
  COFD[598] = -3.85218507E-01;
  COFD[599] = 1.62877051E-02;
  COFD[600] = -1.90756074E+01;
  COFD[601] = 4.65976652E+00;
  COFD[602] = -3.80698349E-01;
  COFD[603] = 1.61038060E-02;
  COFD[604] = -1.90773818E+01;
  COFD[605] = 4.62426562E+00;
  COFD[606] = -3.76333900E-01;
  COFD[607] = 1.59240937E-02;
  COFD[608] = -1.93847826E+01;
  COFD[609] = 4.73396422E+00;
  COFD[610] = -3.89665033E-01;
  COFD[611] = 1.64665068E-02;
  COFD[612] = -1.93840063E+01;
  COFD[613] = 4.69695753E+00;
  COFD[614] = -3.85218507E-01;
  COFD[615] = 1.62877051E-02;
  COFD[616] = -1.93830797E+01;
  COFD[617] = 4.69695753E+00;
  COFD[618] = -3.85218507E-01;
  COFD[619] = 1.62877051E-02;
  COFD[620] = -1.93555464E+01;
  COFD[621] = 4.64408224E+00;
  COFD[622] = -3.78774559E-01;
  COFD[623] = 1.60247845E-02;
  COFD[624] = -2.01011556E+01;
  COFD[625] = 4.89020393E+00;
  COFD[626] = -4.07690029E-01;
  COFD[627] = 1.71588628E-02;
  COFD[628] = -2.01011556E+01;
  COFD[629] = 4.89020393E+00;
  COFD[630] = -4.07690029E-01;
  COFD[631] = 1.71588628E-02;
  COFD[632] = -2.01011556E+01;
  COFD[633] = 4.89020393E+00;
  COFD[634] = -4.07690029E-01;
  COFD[635] = 1.71588628E-02;
  COFD[636] = -2.01011556E+01;
  COFD[637] = 4.89020393E+00;
  COFD[638] = -4.07690029E-01;
  COFD[639] = 1.71588628E-02;
  COFD[640] = -2.01011556E+01;
  COFD[641] = 4.89020393E+00;
  COFD[642] = -4.07690029E-01;
  COFD[643] = 1.71588628E-02;
  COFD[644] = -2.05451536E+01;
  COFD[645] = 4.97155662E+00;
  COFD[646] = -4.17014903E-01;
  COFD[647] = 1.75144222E-02;
  COFD[648] = -1.97866767E+01;
  COFD[649] = 4.78902303E+00;
  COFD[650] = -3.96144974E-01;
  COFD[651] = 1.67211738E-02;
  COFD[652] = -1.97866767E+01;
  COFD[653] = 4.78902303E+00;
  COFD[654] = -3.96144974E-01;
  COFD[655] = 1.67211738E-02;
  COFD[656] = -1.36761934E+01;
  COFD[657] = 2.89678405E+00;
  COFD[658] = -1.62418864E-01;
  COFD[659] = 7.07300755E-03;
  COFD[660] = -1.41183749E+01;
  COFD[661] = 3.59720720E+00;
  COFD[662] = -2.50852412E-01;
  COFD[663] = 1.07992653E-02;
  COFD[664] = -1.12814363E+01;
  COFD[665] = 2.30017030E+00;
  COFD[666] = -8.34928497E-02;
  COFD[667] = 3.58611589E-03;
  COFD[668] = -1.38802589E+01;
  COFD[669] = 2.98298723E+00;
  COFD[670] = -1.73428215E-01;
  COFD[671] = 7.54224684E-03;
  COFD[672] = -1.50981757E+01;
  COFD[673] = 3.27853241E+00;
  COFD[674] = -2.10970532E-01;
  COFD[675] = 9.13336403E-03;
  COFD[676] = -1.39004163E+01;
  COFD[677] = 2.98298723E+00;
  COFD[678] = -1.73428215E-01;
  COFD[679] = 7.54224684E-03;
  COFD[680] = -2.08507538E+01;
  COFD[681] = 5.41592516E+00;
  COFD[682] = -4.64640996E-01;
  COFD[683] = 1.91895972E-02;
  COFD[684] = -1.48406309E+01;
  COFD[685] = 3.17494843E+00;
  COFD[686] = -1.97752410E-01;
  COFD[687] = 8.57054106E-03;
  COFD[688] = -1.77768887E+01;
  COFD[689] = 4.18471443E+00;
  COFD[690] = -3.22640353E-01;
  COFD[691] = 1.37280239E-02;
  COFD[692] = -1.58176374E+01;
  COFD[693] = 3.58720055E+00;
  COFD[694] = -2.49572308E-01;
  COFD[695] = 1.07445741E-02;
  COFD[696] = -1.57555863E+01;
  COFD[697] = 3.56140952E+00;
  COFD[698] = -2.46282892E-01;
  COFD[699] = 1.06044757E-02;
  COFD[700] = -1.51058696E+01;
  COFD[701] = 3.27853241E+00;
  COFD[702] = -2.10970532E-01;
  COFD[703] = 9.13336403E-03;
  COFD[704] = -1.51132171E+01;
  COFD[705] = 3.27853241E+00;
  COFD[706] = -2.10970532E-01;
  COFD[707] = 9.13336403E-03;
  COFD[708] = -2.02419285E+01;
  COFD[709] = 5.09185655E+00;
  COFD[710] = -4.30641631E-01;
  COFD[711] = 1.80275784E-02;
  COFD[712] = -1.79002453E+01;
  COFD[713] = 4.20508193E+00;
  COFD[714] = -3.25158699E-01;
  COFD[715] = 1.38321131E-02;
  COFD[716] = -1.75071988E+01;
  COFD[717] = 4.15347096E+00;
  COFD[718] = -3.18813734E-01;
  COFD[719] = 1.35714974E-02;
  COFD[720] = -1.78913839E+01;
  COFD[721] = 4.20508193E+00;
  COFD[722] = -3.25158699E-01;
  COFD[723] = 1.38321131E-02;
  COFD[724] = -1.79874309E+01;
  COFD[725] = 4.31259444E+00;
  COFD[726] = -3.38584827E-01;
  COFD[727] = 1.43931810E-02;
  COFD[728] = -1.79978123E+01;
  COFD[729] = 4.31259444E+00;
  COFD[730] = -3.38584827E-01;
  COFD[731] = 1.43931810E-02;
  COFD[732] = -1.99640164E+01;
  COFD[733] = 4.93673368E+00;
  COFD[734] = -4.12924135E-01;
  COFD[735] = 1.73539126E-02;
  COFD[736] = -1.58630990E+01;
  COFD[737] = 3.64628858E+00;
  COFD[738] = -2.57092933E-01;
  COFD[739] = 1.10642427E-02;
  COFD[740] = -1.99740050E+01;
  COFD[741] = 4.93673368E+00;
  COFD[742] = -4.12924135E-01;
  COFD[743] = 1.73539126E-02;
  COFD[744] = -1.89513037E+01;
  COFD[745] = 4.56070745E+00;
  COFD[746] = -3.68517396E-01;
  COFD[747] = 1.56021102E-02;
  COFD[748] = -1.87553272E+01;
  COFD[749] = 4.50343635E+00;
  COFD[750] = -3.61818471E-01;
  COFD[751] = 1.53404608E-02;
  COFD[752] = -1.95280667E+01;
  COFD[753] = 4.70710890E+00;
  COFD[754] = -3.86453789E-01;
  COFD[755] = 1.63380393E-02;
  COFD[756] = -1.88866093E+01;
  COFD[757] = 4.48901310E+00;
  COFD[758] = -3.60157439E-01;
  COFD[759] = 1.52767822E-02;
  COFD[760] = -1.94909551E+01;
  COFD[761] = 4.69879097E+00;
  COFD[762] = -3.85441745E-01;
  COFD[763] = 1.62968073E-02;
  COFD[764] = -1.94942660E+01;
  COFD[765] = 4.69879097E+00;
  COFD[766] = -3.85441745E-01;
  COFD[767] = 1.62968073E-02;
  COFD[768] = -2.02462572E+01;
  COFD[769] = 4.93517265E+00;
  COFD[770] = -4.12740828E-01;
  COFD[771] = 1.73467245E-02;
  COFD[772] = -2.05570451E+01;
  COFD[773] = 5.05447974E+00;
  COFD[774] = -4.26675426E-01;
  COFD[775] = 1.78900036E-02;
  COFD[776] = -2.01150178E+01;
  COFD[777] = 4.83483781E+00;
  COFD[778] = -4.01422871E-01;
  COFD[779] = 1.69235370E-02;
  COFD[780] = -2.00372576E+01;
  COFD[781] = 4.80531581E+00;
  COFD[782] = -3.98010400E-01;
  COFD[783] = 1.67921710E-02;
  COFD[784] = -2.02632124E+01;
  COFD[785] = 5.06295779E+00;
  COFD[786] = -4.27579258E-01;
  COFD[787] = 1.79215546E-02;
  COFD[788] = -2.02674781E+01;
  COFD[789] = 5.06295779E+00;
  COFD[790] = -4.27579258E-01;
  COFD[791] = 1.79215546E-02;
  COFD[792] = -2.01222270E+01;
  COFD[793] = 4.95889869E+00;
  COFD[794] = -4.15526934E-01;
  COFD[795] = 1.74559870E-02;
  COFD[796] = -2.05600475E+01;
  COFD[797] = 5.03374077E+00;
  COFD[798] = -4.24314621E-01;
  COFD[799] = 1.78006513E-02;
  COFD[800] = -2.08878558E+01;
  COFD[801] = 5.08840643E+00;
  COFD[802] = -4.30278621E-01;
  COFD[803] = 1.80151378E-02;
  COFD[804] = -2.08516766E+01;
  COFD[805] = 5.08840643E+00;
  COFD[806] = -4.30278621E-01;
  COFD[807] = 1.80151378E-02;
  COFD[808] = -1.88511202E+01;
  COFD[809] = 4.53065425E+00;
  COFD[810] = -3.64983473E-01;
  COFD[811] = 1.54632547E-02;
  COFD[812] = -1.89456064E+01;
  COFD[813] = 4.56070745E+00;
  COFD[814] = -3.68517396E-01;
  COFD[815] = 1.56021102E-02;
  COFD[816] = -2.10095859E+01;
  COFD[817] = 5.09017902E+00;
  COFD[818] = -4.30465909E-01;
  COFD[819] = 1.80215959E-02;
  COFD[820] = -2.07843306E+01;
  COFD[821] = 5.08900555E+00;
  COFD[822] = -4.30341934E-01;
  COFD[823] = 1.80173215E-02;
  COFD[824] = -2.08687806E+01;
  COFD[825] = 5.08643780E+00;
  COFD[826] = -4.30070512E-01;
  COFD[827] = 1.80079565E-02;
  COFD[828] = -2.08403907E+01;
  COFD[829] = 5.07617318E+00;
  COFD[830] = -4.28983517E-01;
  COFD[831] = 1.79703565E-02;
  COFD[832] = -2.09856426E+01;
  COFD[833] = 5.09017902E+00;
  COFD[834] = -4.30465909E-01;
  COFD[835] = 1.80215959E-02;
  COFD[836] = -2.09840415E+01;
  COFD[837] = 5.09017902E+00;
  COFD[838] = -4.30465909E-01;
  COFD[839] = 1.80215959E-02;
  COFD[840] = -2.08510114E+01;
  COFD[841] = 5.00799007E+00;
  COFD[842] = -4.21303846E-01;
  COFD[843] = 1.76831398E-02;
  COFD[844] = -2.15001525E+01;
  COFD[845] = 5.19791529E+00;
  COFD[846] = -4.41398853E-01;
  COFD[847] = 1.83766038E-02;
  COFD[848] = -2.15001525E+01;
  COFD[849] = 5.19791529E+00;
  COFD[850] = -4.41398853E-01;
  COFD[851] = 1.83766038E-02;
  COFD[852] = -2.15001525E+01;
  COFD[853] = 5.19791529E+00;
  COFD[854] = -4.41398853E-01;
  COFD[855] = 1.83766038E-02;
  COFD[856] = -2.15001525E+01;
  COFD[857] = 5.19791529E+00;
  COFD[858] = -4.41398853E-01;
  COFD[859] = 1.83766038E-02;
  COFD[860] = -2.15001525E+01;
  COFD[861] = 5.19791529E+00;
  COFD[862] = -4.41398853E-01;
  COFD[863] = 1.83766038E-02;
  COFD[864] = -2.19077473E+01;
  COFD[865] = 5.26494285E+00;
  COFD[866] = -4.48633357E-01;
  COFD[867] = 1.86333023E-02;
  COFD[868] = -2.12048332E+01;
  COFD[869] = 5.11479735E+00;
  COFD[870] = -4.33050578E-01;
  COFD[871] = 1.81098360E-02;
  COFD[872] = -2.12048332E+01;
  COFD[873] = 5.11479735E+00;
  COFD[874] = -4.33050578E-01;
  COFD[875] = 1.81098360E-02;
  COFD[876] = -1.48133685E+01;
  COFD[877] = 3.16773813E+00;
  COFD[878] = -1.96823168E-01;
  COFD[879] = 8.53058072E-03;
  COFD[880] = -1.29727324E+01;
  COFD[881] = 3.28440910E+00;
  COFD[882] = -2.11707534E-01;
  COFD[883] = 9.16419558E-03;
  COFD[884] = -1.06286607E+01;
  COFD[885] = 2.15819366E+00;
  COFD[886] = -6.52830580E-02;
  COFD[887] = 2.80657258E-03;
  COFD[888] = -1.27761797E+01;
  COFD[889] = 2.70797975E+00;
  COFD[890] = -1.37895013E-01;
  COFD[891] = 6.01030858E-03;
  COFD[892] = -1.39004163E+01;
  COFD[893] = 2.98298723E+00;
  COFD[894] = -1.73428215E-01;
  COFD[895] = 7.54224684E-03;
  COFD[896] = -1.27916876E+01;
  COFD[897] = 2.70797975E+00;
  COFD[898] = -1.37895013E-01;
  COFD[899] = 6.01030858E-03;
  COFD[900] = -1.88572224E+01;
  COFD[901] = 4.90686422E+00;
  COFD[902] = -4.09428407E-01;
  COFD[903] = 1.72173805E-02;
  COFD[904] = -1.37195308E+01;
  COFD[905] = 2.90243493E+00;
  COFD[906] = -1.63148841E-01;
  COFD[907] = 7.10447920E-03;
  COFD[908] = -1.64527503E+01;
  COFD[909] = 3.86315631E+00;
  COFD[910] = -2.83800980E-01;
  COFD[911] = 1.21619703E-02;
  COFD[912] = -1.46378694E+01;
  COFD[913] = 3.27714313E+00;
  COFD[914] = -2.10795461E-01;
  COFD[915] = 9.12600427E-03;
  COFD[916] = -1.45865205E+01;
  COFD[917] = 3.25814060E+00;
  COFD[918] = -2.08402129E-01;
  COFD[919] = 9.02544298E-03;
  COFD[920] = -1.39057440E+01;
  COFD[921] = 2.98298723E+00;
  COFD[922] = -1.73428215E-01;
  COFD[923] = 7.54224684E-03;
  COFD[924] = -1.39108083E+01;
  COFD[925] = 2.98298723E+00;
  COFD[926] = -1.73428215E-01;
  COFD[927] = 7.54224684E-03;
  COFD[928] = -1.88556767E+01;
  COFD[929] = 4.75778339E+00;
  COFD[930] = -3.92510587E-01;
  COFD[931] = 1.65802295E-02;
  COFD[932] = -1.66006724E+01;
  COFD[933] = 3.87564052E+00;
  COFD[934] = -2.85285750E-01;
  COFD[935] = 1.22208235E-02;
  COFD[936] = -1.62364125E+01;
  COFD[937] = 3.84275248E+00;
  COFD[938] = -2.81379017E-01;
  COFD[939] = 1.20662349E-02;
  COFD[940] = -1.65944463E+01;
  COFD[941] = 3.87564052E+00;
  COFD[942] = -2.85285750E-01;
  COFD[943] = 1.22208235E-02;
  COFD[944] = -1.65677075E+01;
  COFD[945] = 3.93824541E+00;
  COFD[946] = -2.92787590E-01;
  COFD[947] = 1.25209211E-02;
  COFD[948] = -1.65751249E+01;
  COFD[949] = 3.93824541E+00;
  COFD[950] = -2.92787590E-01;
  COFD[951] = 1.25209211E-02;
  COFD[952] = -1.84739142E+01;
  COFD[953] = 4.56059591E+00;
  COFD[954] = -3.68504274E-01;
  COFD[955] = 1.56015944E-02;
  COFD[956] = -1.45128143E+01;
  COFD[957] = 3.31811351E+00;
  COFD[958] = -2.15918664E-01;
  COFD[959] = 9.33972748E-03;
  COFD[960] = -1.84805488E+01;
  COFD[961] = 4.56059591E+00;
  COFD[962] = -3.68504274E-01;
  COFD[963] = 1.56015944E-02;
  COFD[964] = -1.74740547E+01;
  COFD[965] = 4.17306000E+00;
  COFD[966] = -3.21208070E-01;
  COFD[967] = 1.36692112E-02;
  COFD[968] = -1.72409270E+01;
  COFD[969] = 4.10247595E+00;
  COFD[970] = -3.12590710E-01;
  COFD[971] = 1.33179236E-02;
  COFD[972] = -1.80251105E+01;
  COFD[973] = 4.31633461E+00;
  COFD[974] = -3.39053638E-01;
  COFD[975] = 1.44128540E-02;
  COFD[976] = -1.73794823E+01;
  COFD[977] = 4.08458730E+00;
  COFD[978] = -3.10424631E-01;
  COFD[979] = 1.32303913E-02;
  COFD[980] = -1.79840066E+01;
  COFD[981] = 4.30733766E+00;
  COFD[982] = -3.37925627E-01;
  COFD[983] = 1.43655069E-02;
  COFD[984] = -1.79861297E+01;
  COFD[985] = 4.30733766E+00;
  COFD[986] = -3.37925627E-01;
  COFD[987] = 1.43655069E-02;
  COFD[988] = -1.87584342E+01;
  COFD[989] = 4.55932865E+00;
  COFD[990] = -3.68355198E-01;
  COFD[991] = 1.55957356E-02;
  COFD[992] = -1.87054926E+01;
  COFD[993] = 4.55856850E+00;
  COFD[994] = -3.68265791E-01;
  COFD[995] = 1.55922225E-02;
  COFD[996] = -1.86343822E+01;
  COFD[997] = 4.45757911E+00;
  COFD[998] = -3.56368733E-01;
  COFD[999] = 1.51238590E-02;
  COFD[1000] = -1.85531874E+01;
  COFD[1001] = 4.42603366E+00;
  COFD[1002] = -3.52586895E-01;
  COFD[1003] = 1.49720921E-02;
  COFD[1004] = -1.88126818E+01;
  COFD[1005] = 4.71430273E+00;
  COFD[1006] = -3.87319126E-01;
  COFD[1007] = 1.63728857E-02;
  COFD[1008] = -1.88154757E+01;
  COFD[1009] = 4.71430273E+00;
  COFD[1010] = -3.87319126E-01;
  COFD[1011] = 1.63728857E-02;
  COFD[1012] = -1.86197007E+01;
  COFD[1013] = 4.58430295E+00;
  COFD[1014] = -3.71395187E-01;
  COFD[1015] = 1.57196293E-02;
  COFD[1016] = -1.87325776E+01;
  COFD[1017] = 4.54237822E+00;
  COFD[1018] = -3.66363712E-01;
  COFD[1019] = 1.55175729E-02;
  COFD[1020] = -1.94517296E+01;
  COFD[1021] = 4.75245509E+00;
  COFD[1022] = -3.91873770E-01;
  COFD[1023] = 1.65547689E-02;
  COFD[1024] = -1.94300978E+01;
  COFD[1025] = 4.75245509E+00;
  COFD[1026] = -3.91873770E-01;
  COFD[1027] = 1.65547689E-02;
  COFD[1028] = -1.73550784E+01;
  COFD[1029] = 4.13619942E+00;
  COFD[1030] = -3.16693330E-01;
  COFD[1031] = 1.34845235E-02;
  COFD[1032] = -1.74702241E+01;
  COFD[1033] = 4.17306000E+00;
  COFD[1034] = -3.21208070E-01;
  COFD[1035] = 1.36692112E-02;
  COFD[1036] = -1.94240836E+01;
  COFD[1037] = 4.69695753E+00;
  COFD[1038] = -3.85218507E-01;
  COFD[1039] = 1.62877051E-02;
  COFD[1040] = -1.91004689E+01;
  COFD[1041] = 4.65976652E+00;
  COFD[1042] = -3.80698349E-01;
  COFD[1043] = 1.61038060E-02;
  COFD[1044] = -1.91021778E+01;
  COFD[1045] = 4.62426562E+00;
  COFD[1046] = -3.76333900E-01;
  COFD[1047] = 1.59240937E-02;
  COFD[1048] = -1.94103728E+01;
  COFD[1049] = 4.73396422E+00;
  COFD[1050] = -3.89665033E-01;
  COFD[1051] = 1.64665068E-02;
  COFD[1052] = -1.94096451E+01;
  COFD[1053] = 4.69695753E+00;
  COFD[1054] = -3.85218507E-01;
  COFD[1055] = 1.62877051E-02;
  COFD[1056] = -1.94086698E+01;
  COFD[1057] = 4.69695753E+00;
  COFD[1058] = -3.85218507E-01;
  COFD[1059] = 1.62877051E-02;
  COFD[1060] = -1.93817773E+01;
  COFD[1061] = 4.64408224E+00;
  COFD[1062] = -3.78774559E-01;
  COFD[1063] = 1.60247845E-02;
  COFD[1064] = -2.01282926E+01;
  COFD[1065] = 4.89020393E+00;
  COFD[1066] = -4.07690029E-01;
  COFD[1067] = 1.71588628E-02;
  COFD[1068] = -2.01282926E+01;
  COFD[1069] = 4.89020393E+00;
  COFD[1070] = -4.07690029E-01;
  COFD[1071] = 1.71588628E-02;
  COFD[1072] = -2.01282926E+01;
  COFD[1073] = 4.89020393E+00;
  COFD[1074] = -4.07690029E-01;
  COFD[1075] = 1.71588628E-02;
  COFD[1076] = -2.01282926E+01;
  COFD[1077] = 4.89020393E+00;
  COFD[1078] = -4.07690029E-01;
  COFD[1079] = 1.71588628E-02;
  COFD[1080] = -2.01282926E+01;
  COFD[1081] = 4.89020393E+00;
  COFD[1082] = -4.07690029E-01;
  COFD[1083] = 1.71588628E-02;
  COFD[1084] = -2.05728982E+01;
  COFD[1085] = 4.97155662E+00;
  COFD[1086] = -4.17014903E-01;
  COFD[1087] = 1.75144222E-02;
  COFD[1088] = -1.98133697E+01;
  COFD[1089] = 4.78902303E+00;
  COFD[1090] = -3.96144974E-01;
  COFD[1091] = 1.67211738E-02;
  COFD[1092] = -1.98133697E+01;
  COFD[1093] = 4.78902303E+00;
  COFD[1094] = -3.96144974E-01;
  COFD[1095] = 1.67211738E-02;
  COFD[1096] = -1.36954208E+01;
  COFD[1097] = 2.89678405E+00;
  COFD[1098] = -1.62418864E-01;
  COFD[1099] = 7.07300755E-03;
  COFD[1100] = -1.91953111E+01;
  COFD[1101] = 5.44274135E+00;
  COFD[1102] = -4.65397833E-01;
  COFD[1103] = 1.91171363E-02;
  COFD[1104] = -1.65320372E+01;
  COFD[1105] = 4.34135715E+00;
  COFD[1106] = -3.42166667E-01;
  COFD[1107] = 1.45425451E-02;
  COFD[1108] = -1.88412751E+01;
  COFD[1109] = 4.90686422E+00;
  COFD[1110] = -4.09428407E-01;
  COFD[1111] = 1.72173805E-02;
  COFD[1112] = -2.08507538E+01;
  COFD[1113] = 5.41592516E+00;
  COFD[1114] = -4.64640996E-01;
  COFD[1115] = 1.91895972E-02;
  COFD[1116] = -1.88572224E+01;
  COFD[1117] = 4.90686422E+00;
  COFD[1118] = -4.09428407E-01;
  COFD[1119] = 1.72173805E-02;
  COFD[1120] = -1.42050400E+01;
  COFD[1121] = 1.94854229E+00;
  COFD[1122] = 9.16765545E-02;
  COFD[1123] = -8.62878516E-03;
  COFD[1124] = -2.06859021E+01;
  COFD[1125] = 5.35499382E+00;
  COFD[1126] = -4.58577046E-01;
  COFD[1127] = 1.89976318E-02;
  COFD[1128] = -2.14098900E+01;
  COFD[1129] = 5.30121360E+00;
  COFD[1130] = -4.21263162E-01;
  COFD[1131] = 1.62329471E-02;
  COFD[1132] = -2.08999941E+01;
  COFD[1133] = 5.44151563E+00;
  COFD[1134] = -4.65460498E-01;
  COFD[1135] = 1.91284180E-02;
  COFD[1136] = -2.11989225E+01;
  COFD[1137] = 5.48294383E+00;
  COFD[1138] = -4.63910525E-01;
  COFD[1139] = 1.87967249E-02;
  COFD[1140] = -2.01625751E+01;
  COFD[1141] = 5.20184446E+00;
  COFD[1142] = -4.41727448E-01;
  COFD[1143] = 1.83837722E-02;
  COFD[1144] = -2.01678346E+01;
  COFD[1145] = 5.20184446E+00;
  COFD[1146] = -4.41727448E-01;
  COFD[1147] = 1.83837722E-02;
  COFD[1148] = -1.94329068E+01;
  COFD[1149] = 4.32601172E+00;
  COFD[1150] = -2.67841680E-01;
  COFD[1151] = 8.59623460E-03;
  COFD[1152] = -2.16940439E+01;
  COFD[1153] = 5.44394964E+00;
  COFD[1154] = -4.47152201E-01;
  COFD[1155] = 1.76308159E-02;
  COFD[1156] = -2.14160330E+01;
  COFD[1157] = 5.45640844E+00;
  COFD[1158] = -4.50149956E-01;
  COFD[1159] = 1.78119073E-02;
  COFD[1160] = -2.16875885E+01;
  COFD[1161] = 5.44394964E+00;
  COFD[1162] = -4.47152201E-01;
  COFD[1163] = 1.76308159E-02;
  COFD[1164] = -2.14228143E+01;
  COFD[1165] = 5.39388015E+00;
  COFD[1166] = -4.37574572E-01;
  COFD[1167] = 1.70997728E-02;
  COFD[1168] = -2.14304935E+01;
  COFD[1169] = 5.39388015E+00;
  COFD[1170] = -4.37574572E-01;
  COFD[1171] = 1.70997728E-02;
  COFD[1172] = -2.02357292E+01;
  COFD[1173] = 4.63893949E+00;
  COFD[1174] = -3.15589295E-01;
  COFD[1175] = 1.09248423E-02;
  COFD[1176] = -2.07110770E+01;
  COFD[1177] = 5.44973198E+00;
  COFD[1178] = -4.65238176E-01;
  COFD[1179] = 1.90691386E-02;
  COFD[1180] = -2.02426410E+01;
  COFD[1181] = 4.63893949E+00;
  COFD[1182] = -3.15589295E-01;
  COFD[1183] = 1.09248423E-02;
  COFD[1184] = -2.13313640E+01;
  COFD[1185] = 5.17422070E+00;
  COFD[1186] = -3.99997068E-01;
  COFD[1187] = 1.51336871E-02;
  COFD[1188] = -2.14155541E+01;
  COFD[1189] = 5.24536650E+00;
  COFD[1190] = -4.11756786E-01;
  COFD[1191] = 1.57371608E-02;
  COFD[1192] = -2.12712617E+01;
  COFD[1193] = 5.04351440E+00;
  COFD[1194] = -3.78432548E-01;
  COFD[1195] = 1.40280477E-02;
  COFD[1196] = -2.16353459E+01;
  COFD[1197] = 5.26209571E+00;
  COFD[1198] = -4.14582361E-01;
  COFD[1199] = 1.58839500E-02;
  COFD[1200] = -2.12710043E+01;
  COFD[1201] = 5.05274021E+00;
  COFD[1202] = -3.79920248E-01;
  COFD[1203] = 1.41033861E-02;
  COFD[1204] = -2.12732225E+01;
  COFD[1205] = 5.05274021E+00;
  COFD[1206] = -3.79920248E-01;
  COFD[1207] = 1.41033861E-02;
  COFD[1208] = -2.05361137E+01;
  COFD[1209] = 4.64159173E+00;
  COFD[1210] = -3.15993927E-01;
  COFD[1211] = 1.09445813E-02;
  COFD[1212] = -1.83637937E+01;
  COFD[1213] = 3.61550817E+00;
  COFD[1214] = -1.62122642E-01;
  COFD[1215] = 3.57292006E-03;
  COFD[1216] = -2.11196833E+01;
  COFD[1217] = 4.84742105E+00;
  COFD[1218] = -3.47604370E-01;
  COFD[1219] = 1.24938668E-02;
  COFD[1220] = -2.10582756E+01;
  COFD[1221] = 4.83010526E+00;
  COFD[1222] = -3.46422992E-01;
  COFD[1223] = 1.24833810E-02;
  COFD[1224] = -1.96947991E+01;
  COFD[1225] = 4.41245751E+00;
  COFD[1226] = -2.80855500E-01;
  COFD[1227] = 9.22505777E-03;
  COFD[1228] = -1.96977130E+01;
  COFD[1229] = 4.41245751E+00;
  COFD[1230] = -2.80855500E-01;
  COFD[1231] = 9.22505777E-03;
  COFD[1232] = -2.02528119E+01;
  COFD[1233] = 4.60540477E+00;
  COFD[1234] = -3.10373488E-01;
  COFD[1235] = 1.06672049E-02;
  COFD[1236] = -1.86106579E+01;
  COFD[1237] = 3.70369058E+00;
  COFD[1238] = -1.75746849E-01;
  COFD[1239] = 4.23774136E-03;
  COFD[1240] = -2.00824677E+01;
  COFD[1241] = 4.33662443E+00;
  COFD[1242] = -2.69435804E-01;
  COFD[1243] = 8.67312749E-03;
  COFD[1244] = -2.00597448E+01;
  COFD[1245] = 4.33662443E+00;
  COFD[1246] = -2.69435804E-01;
  COFD[1247] = 8.67312749E-03;
  COFD[1248] = -2.13751981E+01;
  COFD[1249] = 5.21010770E+00;
  COFD[1250] = -4.05945421E-01;
  COFD[1251] = 1.54393383E-02;
  COFD[1252] = -2.13273774E+01;
  COFD[1253] = 5.17422070E+00;
  COFD[1254] = -3.99997068E-01;
  COFD[1255] = 1.51336871E-02;
  COFD[1256] = -1.91787303E+01;
  COFD[1257] = 3.88158347E+00;
  COFD[1258] = -2.05180531E-01;
  COFD[1259] = 5.72414129E-03;
  COFD[1260] = -1.85864638E+01;
  COFD[1261] = 3.68971924E+00;
  COFD[1262] = -1.75261163E-01;
  COFD[1263] = 4.25905660E-03;
  COFD[1264] = -1.86138026E+01;
  COFD[1265] = 3.64451000E+00;
  COFD[1266] = -1.67694878E-01;
  COFD[1267] = 3.87427224E-03;
  COFD[1268] = -2.01687563E+01;
  COFD[1269] = 4.37329337E+00;
  COFD[1270] = -2.74949941E-01;
  COFD[1271] = 8.93930138E-03;
  COFD[1272] = -1.91635733E+01;
  COFD[1273] = 3.88158347E+00;
  COFD[1274] = -2.05180531E-01;
  COFD[1275] = 5.72414129E-03;
  COFD[1276] = -1.91625502E+01;
  COFD[1277] = 3.88158347E+00;
  COFD[1278] = -2.05180531E-01;
  COFD[1279] = 5.72414129E-03;
  COFD[1280] = -2.07027525E+01;
  COFD[1281] = 4.52425469E+00;
  COFD[1282] = -2.97869560E-01;
  COFD[1283] = 1.00531031E-02;
  COFD[1284] = -1.90849617E+01;
  COFD[1285] = 3.76037053E+00;
  COFD[1286] = -1.86344449E-01;
  COFD[1287] = 4.78342296E-03;
  COFD[1288] = -1.90849617E+01;
  COFD[1289] = 3.76037053E+00;
  COFD[1290] = -1.86344449E-01;
  COFD[1291] = 4.78342296E-03;
  COFD[1292] = -1.90849617E+01;
  COFD[1293] = 3.76037053E+00;
  COFD[1294] = -1.86344449E-01;
  COFD[1295] = 4.78342296E-03;
  COFD[1296] = -1.90849617E+01;
  COFD[1297] = 3.76037053E+00;
  COFD[1298] = -1.86344449E-01;
  COFD[1299] = 4.78342296E-03;
  COFD[1300] = -1.90849617E+01;
  COFD[1301] = 3.76037053E+00;
  COFD[1302] = -1.86344449E-01;
  COFD[1303] = 4.78342296E-03;
  COFD[1304] = -1.89362720E+01;
  COFD[1305] = 3.59051834E+00;
  COFD[1306] = -1.61030553E-01;
  COFD[1307] = 3.56695042E-03;
  COFD[1308] = -2.01714793E+01;
  COFD[1309] = 4.25399524E+00;
  COFD[1310] = -2.57013670E-01;
  COFD[1311] = 8.07339307E-03;
  COFD[1312] = -2.01714793E+01;
  COFD[1313] = 4.25399524E+00;
  COFD[1314] = -2.57013670E-01;
  COFD[1315] = 8.07339307E-03;
  COFD[1316] = -2.06077929E+01;
  COFD[1317] = 5.33386551E+00;
  COFD[1318] = -4.56343451E-01;
  COFD[1319] = 1.89202797E-02;
  COFD[1320] = -1.38467772E+01;
  COFD[1321] = 3.47073417E+00;
  COFD[1322] = -2.34706158E-01;
  COFD[1323] = 1.01108517E-02;
  COFD[1324] = -1.11288741E+01;
  COFD[1325] = 2.21964693E+00;
  COFD[1326] = -7.27132181E-02;
  COFD[1327] = 3.10467640E-03;
  COFD[1328] = -1.37003044E+01;
  COFD[1329] = 2.90243493E+00;
  COFD[1330] = -1.63148841E-01;
  COFD[1331] = 7.10447920E-03;
  COFD[1332] = -1.48406309E+01;
  COFD[1333] = 3.17494843E+00;
  COFD[1334] = -1.97752410E-01;
  COFD[1335] = 8.57054106E-03;
  COFD[1336] = -1.37195308E+01;
  COFD[1337] = 2.90243493E+00;
  COFD[1338] = -1.63148841E-01;
  COFD[1339] = 7.10447920E-03;
  COFD[1340] = -2.06859021E+01;
  COFD[1341] = 5.35499382E+00;
  COFD[1342] = -4.58577046E-01;
  COFD[1343] = 1.89976318E-02;
  COFD[1344] = -1.46011781E+01;
  COFD[1345] = 3.07793917E+00;
  COFD[1346] = -1.85367944E-01;
  COFD[1347] = 8.04304684E-03;
  COFD[1348] = -1.74636172E+01;
  COFD[1349] = 4.06842532E+00;
  COFD[1350] = -3.08492475E-01;
  COFD[1351] = 1.31534275E-02;
  COFD[1352] = -1.55192360E+01;
  COFD[1353] = 3.46464286E+00;
  COFD[1354] = -2.33957556E-01;
  COFD[1355] = 1.00801477E-02;
  COFD[1356] = -1.54796731E+01;
  COFD[1357] = 3.44821689E+00;
  COFD[1358] = -2.31932994E-01;
  COFD[1359] = 9.99688061E-03;
  COFD[1360] = -1.48478097E+01;
  COFD[1361] = 3.17494843E+00;
  COFD[1362] = -1.97752410E-01;
  COFD[1363] = 8.57054106E-03;
  COFD[1364] = -1.48546585E+01;
  COFD[1365] = 3.17494843E+00;
  COFD[1366] = -1.97752410E-01;
  COFD[1367] = 8.57054106E-03;
  COFD[1368] = -1.99660065E+01;
  COFD[1369] = 4.99411384E+00;
  COFD[1370] = -4.19672196E-01;
  COFD[1371] = 1.76190456E-02;
  COFD[1372] = -1.75803708E+01;
  COFD[1373] = 4.08497111E+00;
  COFD[1374] = -3.10470821E-01;
  COFD[1375] = 1.32322450E-02;
  COFD[1376] = -1.72146821E+01;
  COFD[1377] = 4.04198813E+00;
  COFD[1378] = -3.05338303E-01;
  COFD[1379] = 1.30280077E-02;
  COFD[1380] = -1.75720764E+01;
  COFD[1381] = 4.08497111E+00;
  COFD[1382] = -3.10470821E-01;
  COFD[1383] = 1.32322450E-02;
  COFD[1384] = -1.76332810E+01;
  COFD[1385] = 4.17526194E+00;
  COFD[1386] = -3.21478247E-01;
  COFD[1387] = 1.36802836E-02;
  COFD[1388] = -1.76430329E+01;
  COFD[1389] = 4.17526194E+00;
  COFD[1390] = -3.21478247E-01;
  COFD[1391] = 1.36802836E-02;
  COFD[1392] = -1.96817169E+01;
  COFD[1393] = 4.83908504E+00;
  COFD[1394] = -4.01914941E-01;
  COFD[1395] = 1.69425288E-02;
  COFD[1396] = -1.55380352E+01;
  COFD[1397] = 3.51529689E+00;
  COFD[1398] = -2.40382392E-01;
  COFD[1399] = 1.03523419E-02;
  COFD[1400] = -1.96909514E+01;
  COFD[1401] = 4.83908504E+00;
  COFD[1402] = -4.01914941E-01;
  COFD[1403] = 1.69425288E-02;
  COFD[1404] = -1.86750684E+01;
  COFD[1405] = 4.46203550E+00;
  COFD[1406] = -3.56905086E-01;
  COFD[1407] = 1.51454720E-02;
  COFD[1408] = -1.84591007E+01;
  COFD[1409] = 4.39561236E+00;
  COFD[1410] = -3.48858889E-01;
  COFD[1411] = 1.48190509E-02;
  COFD[1412] = -1.91368095E+01;
  COFD[1413] = 4.56508921E+00;
  COFD[1414] = -3.69033080E-01;
  COFD[1415] = 1.56223865E-02;
  COFD[1416] = -1.85748911E+01;
  COFD[1417] = 4.37625004E+00;
  COFD[1418] = -3.46480198E-01;
  COFD[1419] = 1.47211425E-02;
  COFD[1420] = -1.91050522E+01;
  COFD[1421] = 4.55886937E+00;
  COFD[1422] = -3.68301178E-01;
  COFD[1423] = 1.55936129E-02;
  COFD[1424] = -1.91080888E+01;
  COFD[1425] = 4.55886937E+00;
  COFD[1426] = -3.68301178E-01;
  COFD[1427] = 1.55936129E-02;
  COFD[1428] = -1.99543580E+01;
  COFD[1429] = 4.83774371E+00;
  COFD[1430] = -4.01759538E-01;
  COFD[1431] = 1.69365310E-02;
  COFD[1432] = -2.02463154E+01;
  COFD[1433] = 4.94688210E+00;
  COFD[1434] = -4.14116309E-01;
  COFD[1435] = 1.74006862E-02;
  COFD[1436] = -1.97966691E+01;
  COFD[1437] = 4.72725308E+00;
  COFD[1438] = -3.88865048E-01;
  COFD[1439] = 1.64346151E-02;
  COFD[1440] = -1.97045636E+01;
  COFD[1441] = 4.69156097E+00;
  COFD[1442] = -3.84562356E-01;
  COFD[1443] = 1.62609922E-02;
  COFD[1444] = -1.99421798E+01;
  COFD[1445] = 4.94937905E+00;
  COFD[1446] = -4.14409534E-01;
  COFD[1447] = 1.74121859E-02;
  COFD[1448] = -1.99461111E+01;
  COFD[1449] = 4.94937905E+00;
  COFD[1450] = -4.14409534E-01;
  COFD[1451] = 1.74121859E-02;
  COFD[1452] = -1.98245558E+01;
  COFD[1453] = 4.85730922E+00;
  COFD[1454] = -4.04004009E-01;
  COFD[1455] = 1.70221852E-02;
  COFD[1456] = -2.02385115E+01;
  COFD[1457] = 4.92216764E+00;
  COFD[1458] = -4.11213743E-01;
  COFD[1459] = 1.72868489E-02;
  COFD[1460] = -2.05772472E+01;
  COFD[1461] = 4.98864146E+00;
  COFD[1462] = -4.19026905E-01;
  COFD[1463] = 1.75936103E-02;
  COFD[1464] = -2.05446133E+01;
  COFD[1465] = 4.98864146E+00;
  COFD[1466] = -4.19026905E-01;
  COFD[1467] = 1.75936103E-02;
  COFD[1468] = -1.85705444E+01;
  COFD[1469] = 4.42984539E+00;
  COFD[1470] = -3.53041284E-01;
  COFD[1471] = 1.49902085E-02;
  COFD[1472] = -1.86697869E+01;
  COFD[1473] = 4.46203550E+00;
  COFD[1474] = -3.56905086E-01;
  COFD[1475] = 1.51454720E-02;
  COFD[1476] = -2.07148808E+01;
  COFD[1477] = 4.99635597E+00;
  COFD[1478] = -4.19936627E-01;
  COFD[1479] = 1.76294690E-02;
  COFD[1480] = -2.05043323E+01;
  COFD[1481] = 4.99719791E+00;
  COFD[1482] = -4.20035884E-01;
  COFD[1483] = 1.76333798E-02;
  COFD[1484] = -2.05899080E+01;
  COFD[1485] = 4.99533619E+00;
  COFD[1486] = -4.19816376E-01;
  COFD[1487] = 1.76247298E-02;
  COFD[1488] = -2.05171065E+01;
  COFD[1489] = 4.96961006E+00;
  COFD[1490] = -4.16785706E-01;
  COFD[1491] = 1.75054037E-02;
  COFD[1492] = -2.06932388E+01;
  COFD[1493] = 4.99635597E+00;
  COFD[1494] = -4.19936627E-01;
  COFD[1495] = 1.76294690E-02;
  COFD[1496] = -2.06917881E+01;
  COFD[1497] = 4.99635597E+00;
  COFD[1498] = -4.19936627E-01;
  COFD[1499] = 1.76294690E-02;
  COFD[1500] = -2.05041008E+01;
  COFD[1501] = 4.89401297E+00;
  COFD[1502] = -4.08087781E-01;
  COFD[1503] = 1.71722700E-02;
  COFD[1504] = -2.12596156E+01;
  COFD[1505] = 5.13107284E+00;
  COFD[1506] = -4.34832560E-01;
  COFD[1507] = 1.81741959E-02;
  COFD[1508] = -2.12596156E+01;
  COFD[1509] = 5.13107284E+00;
  COFD[1510] = -4.34832560E-01;
  COFD[1511] = 1.81741959E-02;
  COFD[1512] = -2.12596156E+01;
  COFD[1513] = 5.13107284E+00;
  COFD[1514] = -4.34832560E-01;
  COFD[1515] = 1.81741959E-02;
  COFD[1516] = -2.12596156E+01;
  COFD[1517] = 5.13107284E+00;
  COFD[1518] = -4.34832560E-01;
  COFD[1519] = 1.81741959E-02;
  COFD[1520] = -2.12596156E+01;
  COFD[1521] = 5.13107284E+00;
  COFD[1522] = -4.34832560E-01;
  COFD[1523] = 1.81741959E-02;
  COFD[1524] = -2.16246520E+01;
  COFD[1525] = 5.18371904E+00;
  COFD[1526] = -4.40201152E-01;
  COFD[1527] = 1.83498534E-02;
  COFD[1528] = -2.09238553E+01;
  COFD[1529] = 5.02943557E+00;
  COFD[1530] = -4.23811924E-01;
  COFD[1531] = 1.77810575E-02;
  COFD[1532] = -2.09238553E+01;
  COFD[1533] = 5.02943557E+00;
  COFD[1534] = -4.23811924E-01;
  COFD[1535] = 1.77810575E-02;
  COFD[1536] = -1.45806462E+01;
  COFD[1537] = 3.07340947E+00;
  COFD[1538] = -1.84805140E-01;
  COFD[1539] = 8.01973216E-03;
  COFD[1540] = -1.69855851E+01;
  COFD[1541] = 4.58049527E+00;
  COFD[1542] = -3.70921885E-01;
  COFD[1543] = 1.56999324E-02;
  COFD[1544] = -1.33494517E+01;
  COFD[1545] = 3.04769365E+00;
  COFD[1546] = -1.81586731E-01;
  COFD[1547] = 7.88540063E-03;
  COFD[1548] = -1.64305301E+01;
  COFD[1549] = 3.86315631E+00;
  COFD[1550] = -2.83800980E-01;
  COFD[1551] = 1.21619703E-02;
  COFD[1552] = -1.77768887E+01;
  COFD[1553] = 4.18471443E+00;
  COFD[1554] = -3.22640353E-01;
  COFD[1555] = 1.37280239E-02;
  COFD[1556] = -1.64527503E+01;
  COFD[1557] = 3.86315631E+00;
  COFD[1558] = -2.83800980E-01;
  COFD[1559] = 1.21619703E-02;
  COFD[1560] = -2.14098900E+01;
  COFD[1561] = 5.30121360E+00;
  COFD[1562] = -4.21263162E-01;
  COFD[1563] = 1.62329471E-02;
  COFD[1564] = -1.74636172E+01;
  COFD[1565] = 4.06842532E+00;
  COFD[1566] = -3.08492475E-01;
  COFD[1567] = 1.31534275E-02;
  COFD[1568] = -2.08457766E+01;
  COFD[1569] = 5.18382353E+00;
  COFD[1570] = -4.40210428E-01;
  COFD[1571] = 1.83500882E-02;
  COFD[1572] = -1.86951891E+01;
  COFD[1573] = 4.56871889E+00;
  COFD[1574] = -3.69460525E-01;
  COFD[1575] = 1.56392048E-02;
  COFD[1576] = -1.86463567E+01;
  COFD[1577] = 4.54862236E+00;
  COFD[1578] = -3.67096821E-01;
  COFD[1579] = 1.55463252E-02;
  COFD[1580] = -1.77858093E+01;
  COFD[1581] = 4.18471443E+00;
  COFD[1582] = -3.22640353E-01;
  COFD[1583] = 1.37280239E-02;
  COFD[1584] = -1.77943490E+01;
  COFD[1585] = 4.18471443E+00;
  COFD[1586] = -3.22640353E-01;
  COFD[1587] = 1.37280239E-02;
  COFD[1588] = -2.19981706E+01;
  COFD[1589] = 5.48342675E+00;
  COFD[1590] = -4.57782070E-01;
  COFD[1591] = 1.82957850E-02;
  COFD[1592] = -2.09219786E+01;
  COFD[1593] = 5.19204548E+00;
  COFD[1594] = -4.40915128E-01;
  COFD[1595] = 1.83664930E-02;
  COFD[1596] = -2.05980810E+01;
  COFD[1597] = 5.16997013E+00;
  COFD[1598] = -4.38998744E-01;
  COFD[1599] = 1.83204571E-02;
  COFD[1600] = -2.09117806E+01;
  COFD[1601] = 5.19204548E+00;
  COFD[1602] = -4.40915128E-01;
  COFD[1603] = 1.83664930E-02;
  COFD[1604] = -2.09263112E+01;
  COFD[1605] = 5.25757923E+00;
  COFD[1606] = -4.47803407E-01;
  COFD[1607] = 1.86021883E-02;
  COFD[1608] = -2.09381584E+01;
  COFD[1609] = 5.25757923E+00;
  COFD[1610] = -4.47803407E-01;
  COFD[1611] = 1.86021883E-02;
  COFD[1612] = -2.20938116E+01;
  COFD[1613] = 5.49242695E+00;
  COFD[1614] = -4.63877105E-01;
  COFD[1615] = 1.87472502E-02;
  COFD[1616] = -1.88249656E+01;
  COFD[1617] = 4.63673045E+00;
  COFD[1618] = -3.77870004E-01;
  COFD[1619] = 1.59875055E-02;
  COFD[1620] = -2.21056537E+01;
  COFD[1621] = 5.49242695E+00;
  COFD[1622] = -4.63877105E-01;
  COFD[1623] = 1.87472502E-02;
  COFD[1624] = -2.17754460E+01;
  COFD[1625] = 5.43321422E+00;
  COFD[1626] = -4.65643875E-01;
  COFD[1627] = 1.91852144E-02;
  COFD[1628] = -2.16482161E+01;
  COFD[1629] = 5.40849808E+00;
  COFD[1630] = -4.63989845E-01;
  COFD[1631] = 1.91734161E-02;
  COFD[1632] = -2.20785116E+01;
  COFD[1633] = 5.45354415E+00;
  COFD[1634] = -4.65291244E-01;
  COFD[1635] = 1.90545098E-02;
  COFD[1636] = -2.17823899E+01;
  COFD[1637] = 5.39885902E+00;
  COFD[1638] = -4.63127984E-01;
  COFD[1639] = 1.91510357E-02;
  COFD[1640] = -2.20577763E+01;
  COFD[1641] = 5.45198096E+00;
  COFD[1642] = -4.65259344E-01;
  COFD[1643] = 1.90596774E-02;
  COFD[1644] = -2.20617810E+01;
  COFD[1645] = 5.45198096E+00;
  COFD[1646] = -4.65259344E-01;
  COFD[1647] = 1.90596774E-02;
  COFD[1648] = -2.23824281E+01;
  COFD[1649] = 5.49217181E+00;
  COFD[1650] = -4.63882677E-01;
  COFD[1651] = 1.87489631E-02;
  COFD[1652] = -2.24144952E+01;
  COFD[1653] = 5.49116787E+00;
  COFD[1654] = -4.60872362E-01;
  COFD[1655] = 1.85086092E-02;
  COFD[1656] = -2.24163669E+01;
  COFD[1657] = 5.46720411E+00;
  COFD[1658] = -4.63664606E-01;
  COFD[1659] = 1.88543495E-02;
  COFD[1660] = -2.24050834E+01;
  COFD[1661] = 5.46747549E+00;
  COFD[1662] = -4.64570865E-01;
  COFD[1663] = 1.89267998E-02;
  COFD[1664] = -2.21101062E+01;
  COFD[1665] = 5.48782481E+00;
  COFD[1666] = -4.59567900E-01;
  COFD[1667] = 1.84190115E-02;
  COFD[1668] = -2.21152034E+01;
  COFD[1669] = 5.48782481E+00;
  COFD[1670] = -4.59567900E-01;
  COFD[1671] = 1.84190115E-02;
  COFD[1672] = -2.22150026E+01;
  COFD[1673] = 5.49406269E+00;
  COFD[1674] = -4.63519837E-01;
  COFD[1675] = 1.87101015E-02;
  COFD[1676] = -2.24591391E+01;
  COFD[1677] = 5.49093617E+00;
  COFD[1678] = -4.61489557E-01;
  COFD[1679] = 1.85600321E-02;
  COFD[1680] = -2.26878063E+01;
  COFD[1681] = 5.48380398E+00;
  COFD[1682] = -4.57974253E-01;
  COFD[1683] = 1.83094814E-02;
  COFD[1684] = -2.26421092E+01;
  COFD[1685] = 5.48380398E+00;
  COFD[1686] = -4.57974253E-01;
  COFD[1687] = 1.83094814E-02;
  COFD[1688] = -2.17175166E+01;
  COFD[1689] = 5.42282789E+00;
  COFD[1690] = -4.65108864E-01;
  COFD[1691] = 1.91933632E-02;
  COFD[1692] = -2.17687365E+01;
  COFD[1693] = 5.43321422E+00;
  COFD[1694] = -4.65643875E-01;
  COFD[1695] = 1.91852144E-02;
  COFD[1696] = -2.27916979E+01;
  COFD[1697] = 5.48417634E+00;
  COFD[1698] = -4.58175065E-01;
  COFD[1699] = 1.83238989E-02;
  COFD[1700] = -2.25606358E+01;
  COFD[1701] = 5.48480057E+00;
  COFD[1702] = -4.58431583E-01;
  COFD[1703] = 1.83416241E-02;
  COFD[1704] = -2.26462201E+01;
  COFD[1705] = 5.48561353E+00;
  COFD[1706] = -4.58748899E-01;
  COFD[1707] = 1.83633676E-02;
  COFD[1708] = -2.26588543E+01;
  COFD[1709] = 5.48550227E+00;
  COFD[1710] = -4.58704694E-01;
  COFD[1711] = 1.83603287E-02;
  COFD[1712] = -2.27616242E+01;
  COFD[1713] = 5.48417634E+00;
  COFD[1714] = -4.58175065E-01;
  COFD[1715] = 1.83238989E-02;
  COFD[1716] = -2.27596261E+01;
  COFD[1717] = 5.48417634E+00;
  COFD[1718] = -4.58175065E-01;
  COFD[1719] = 1.83238989E-02;
  COFD[1720] = -2.28305232E+01;
  COFD[1721] = 5.49066995E+00;
  COFD[1722] = -4.61705340E-01;
  COFD[1723] = 1.85789333E-02;
  COFD[1724] = -2.29703135E+01;
  COFD[1725] = 5.45099312E+00;
  COFD[1726] = -4.48927721E-01;
  COFD[1727] = 1.77397381E-02;
  COFD[1728] = -2.29703135E+01;
  COFD[1729] = 5.45099312E+00;
  COFD[1730] = -4.48927721E-01;
  COFD[1731] = 1.77397381E-02;
  COFD[1732] = -2.29703135E+01;
  COFD[1733] = 5.45099312E+00;
  COFD[1734] = -4.48927721E-01;
  COFD[1735] = 1.77397381E-02;
  COFD[1736] = -2.29703135E+01;
  COFD[1737] = 5.45099312E+00;
  COFD[1738] = -4.48927721E-01;
  COFD[1739] = 1.77397381E-02;
  COFD[1740] = -2.29703135E+01;
  COFD[1741] = 5.45099312E+00;
  COFD[1742] = -4.48927721E-01;
  COFD[1743] = 1.77397381E-02;
  COFD[1744] = -2.31435776E+01;
  COFD[1745] = 5.41522402E+00;
  COFD[1746] = -4.41568976E-01;
  COFD[1747] = 1.73190088E-02;
  COFD[1748] = -2.29289528E+01;
  COFD[1749] = 5.48025735E+00;
  COFD[1750] = -4.56422639E-01;
  COFD[1751] = 1.82014258E-02;
  COFD[1752] = -2.29289528E+01;
  COFD[1753] = 5.48025735E+00;
  COFD[1754] = -4.56422639E-01;
  COFD[1755] = 1.82014258E-02;
  COFD[1756] = -1.74370408E+01;
  COFD[1757] = 4.06188586E+00;
  COFD[1758] = -3.07715468E-01;
  COFD[1759] = 1.31226885E-02;
  COFD[1760] = -1.51283837E+01;
  COFD[1761] = 3.92295205E+00;
  COFD[1762] = -2.90942506E-01;
  COFD[1763] = 1.24465450E-02;
  COFD[1764] = -1.20163591E+01;
  COFD[1765] = 2.55772522E+00;
  COFD[1766] = -1.18119456E-01;
  COFD[1767] = 5.14119183E-03;
  COFD[1768] = -1.46233021E+01;
  COFD[1769] = 3.27714313E+00;
  COFD[1770] = -2.10795461E-01;
  COFD[1771] = 9.12600427E-03;
  COFD[1772] = -1.58176374E+01;
  COFD[1773] = 3.58720055E+00;
  COFD[1774] = -2.49572308E-01;
  COFD[1775] = 1.07445741E-02;
  COFD[1776] = -1.46378694E+01;
  COFD[1777] = 3.27714313E+00;
  COFD[1778] = -2.10795461E-01;
  COFD[1779] = 9.12600427E-03;
  COFD[1780] = -2.08999941E+01;
  COFD[1781] = 5.44151563E+00;
  COFD[1782] = -4.65460498E-01;
  COFD[1783] = 1.91284180E-02;
  COFD[1784] = -1.55192360E+01;
  COFD[1785] = 3.46464286E+00;
  COFD[1786] = -2.33957556E-01;
  COFD[1787] = 1.00801477E-02;
  COFD[1788] = -1.86951891E+01;
  COFD[1789] = 4.56871889E+00;
  COFD[1790] = -3.69460525E-01;
  COFD[1791] = 1.56392048E-02;
  COFD[1792] = -1.66707526E+01;
  COFD[1793] = 3.91662496E+00;
  COFD[1794] = -2.90182401E-01;
  COFD[1795] = 1.24160479E-02;
  COFD[1796] = -1.66255693E+01;
  COFD[1797] = 3.90031906E+00;
  COFD[1798] = -2.88230661E-01;
  COFD[1799] = 1.23380648E-02;
  COFD[1800] = -1.58225427E+01;
  COFD[1801] = 3.58720055E+00;
  COFD[1802] = -2.49572308E-01;
  COFD[1803] = 1.07445741E-02;
  COFD[1804] = -1.58272017E+01;
  COFD[1805] = 3.58720055E+00;
  COFD[1806] = -2.49572308E-01;
  COFD[1807] = 1.07445741E-02;
  COFD[1808] = -2.10007825E+01;
  COFD[1809] = 5.36906158E+00;
  COFD[1810] = -4.60039482E-01;
  COFD[1811] = 1.90471208E-02;
  COFD[1812] = -1.88552736E+01;
  COFD[1813] = 4.59285496E+00;
  COFD[1814] = -3.72450186E-01;
  COFD[1815] = 1.57632217E-02;
  COFD[1816] = -1.84813504E+01;
  COFD[1817] = 4.54318703E+00;
  COFD[1818] = -3.66458643E-01;
  COFD[1819] = 1.55212948E-02;
  COFD[1820] = -1.88495260E+01;
  COFD[1821] = 4.59285496E+00;
  COFD[1822] = -3.72450186E-01;
  COFD[1823] = 1.57632217E-02;
  COFD[1824] = -1.89723550E+01;
  COFD[1825] = 4.70175320E+00;
  COFD[1826] = -3.85802299E-01;
  COFD[1827] = 1.63115029E-02;
  COFD[1828] = -1.89792234E+01;
  COFD[1829] = 4.70175320E+00;
  COFD[1830] = -3.85802299E-01;
  COFD[1831] = 1.63115029E-02;
  COFD[1832] = -2.06886813E+01;
  COFD[1833] = 5.21843630E+00;
  COFD[1834] = -4.43374339E-01;
  COFD[1835] = 1.84354402E-02;
  COFD[1836] = -1.65966931E+01;
  COFD[1837] = 3.95555732E+00;
  COFD[1838] = -2.94894134E-01;
  COFD[1839] = 1.26066350E-02;
  COFD[1840] = -2.06947458E+01;
  COFD[1841] = 5.21843630E+00;
  COFD[1842] = -4.43374339E-01;
  COFD[1843] = 1.84354402E-02;
  COFD[1844] = -1.98761292E+01;
  COFD[1845] = 4.93512898E+00;
  COFD[1846] = -4.12735698E-01;
  COFD[1847] = 1.73465233E-02;
  COFD[1848] = -1.96749443E+01;
  COFD[1849] = 4.87934939E+00;
  COFD[1850] = -4.06539237E-01;
  COFD[1851] = 1.71192321E-02;
  COFD[1852] = -2.03731412E+01;
  COFD[1853] = 5.05714666E+00;
  COFD[1854] = -4.26960034E-01;
  COFD[1855] = 1.78999526E-02;
  COFD[1856] = -1.97911406E+01;
  COFD[1857] = 4.86283194E+00;
  COFD[1858] = -4.04638513E-01;
  COFD[1859] = 1.70464396E-02;
  COFD[1860] = -2.03431646E+01;
  COFD[1861] = 5.05232294E+00;
  COFD[1862] = -4.26452915E-01;
  COFD[1863] = 1.78825996E-02;
  COFD[1864] = -2.03450940E+01;
  COFD[1865] = 5.05232294E+00;
  COFD[1866] = -4.26452915E-01;
  COFD[1867] = 1.78825996E-02;
  COFD[1868] = -2.09365579E+01;
  COFD[1869] = 5.21672969E+00;
  COFD[1870] = -4.43175115E-01;
  COFD[1871] = 1.84276681E-02;
  COFD[1872] = -2.08891189E+01;
  COFD[1873] = 5.21570257E+00;
  COFD[1874] = -4.43055160E-01;
  COFD[1875] = 1.84229862E-02;
  COFD[1876] = -2.08689910E+01;
  COFD[1877] = 5.15366259E+00;
  COFD[1878] = -4.37268432E-01;
  COFD[1879] = 1.82604618E-02;
  COFD[1880] = -2.07942319E+01;
  COFD[1881] = 5.12723540E+00;
  COFD[1882] = -4.34411432E-01;
  COFD[1883] = 1.81589442E-02;
  COFD[1884] = -2.09768659E+01;
  COFD[1885] = 5.33874924E+00;
  COFD[1886] = -4.56879272E-01;
  COFD[1887] = 1.89397603E-02;
  COFD[1888] = -2.09794137E+01;
  COFD[1889] = 5.33874924E+00;
  COFD[1890] = -4.56879272E-01;
  COFD[1891] = 1.89397603E-02;
  COFD[1892] = -2.08233356E+01;
  COFD[1893] = 5.23993213E+00;
  COFD[1894] = -4.45818789E-01;
  COFD[1895] = 1.85280084E-02;
  COFD[1896] = -2.09160336E+01;
  COFD[1897] = 5.20438984E+00;
  COFD[1898] = -4.41945569E-01;
  COFD[1899] = 1.83888515E-02;
  COFD[1900] = -2.15276865E+01;
  COFD[1901] = 5.36543873E+00;
  COFD[1902] = -4.59663888E-01;
  COFD[1903] = 1.90344598E-02;
  COFD[1904] = -2.15082432E+01;
  COFD[1905] = 5.36543873E+00;
  COFD[1906] = -4.59663888E-01;
  COFD[1907] = 1.90344598E-02;
  COFD[1908] = -1.97629727E+01;
  COFD[1909] = 4.90161091E+00;
  COFD[1910] = -4.08878655E-01;
  COFD[1911] = 1.71987880E-02;
  COFD[1912] = -1.98726204E+01;
  COFD[1913] = 4.93512898E+00;
  COFD[1914] = -4.12735698E-01;
  COFD[1915] = 1.73465233E-02;
  COFD[1916] = -2.15157863E+01;
  COFD[1917] = 5.32532661E+00;
  COFD[1918] = -4.55395062E-01;
  COFD[1919] = 1.88852639E-02;
  COFD[1920] = -2.12336847E+01;
  COFD[1921] = 5.29671000E+00;
  COFD[1922] = -4.52208613E-01;
  COFD[1923] = 1.87672717E-02;
  COFD[1924] = -2.12409708E+01;
  COFD[1925] = 5.26987677E+00;
  COFD[1926] = -4.49189697E-01;
  COFD[1927] = 1.86541737E-02;
  COFD[1928] = -2.14961076E+01;
  COFD[1929] = 5.35264246E+00;
  COFD[1930] = -4.58331575E-01;
  COFD[1931] = 1.89892757E-02;
  COFD[1932] = -2.15027918E+01;
  COFD[1933] = 5.32532661E+00;
  COFD[1934] = -4.55395062E-01;
  COFD[1935] = 1.88852639E-02;
  COFD[1936] = -2.15019127E+01;
  COFD[1937] = 5.32532661E+00;
  COFD[1938] = -4.55395062E-01;
  COFD[1939] = 1.88852639E-02;
  COFD[1940] = -2.14866923E+01;
  COFD[1941] = 5.28483859E+00;
  COFD[1942] = -4.50875157E-01;
  COFD[1943] = 1.87173937E-02;
  COFD[1944] = -2.20377105E+01;
  COFD[1945] = 5.43771555E+00;
  COFD[1946] = -4.65617512E-01;
  COFD[1947] = 1.91604198E-02;
  COFD[1948] = -2.20377105E+01;
  COFD[1949] = 5.43771555E+00;
  COFD[1950] = -4.65617512E-01;
  COFD[1951] = 1.91604198E-02;
  COFD[1952] = -2.20377105E+01;
  COFD[1953] = 5.43771555E+00;
  COFD[1954] = -4.65617512E-01;
  COFD[1955] = 1.91604198E-02;
  COFD[1956] = -2.20377105E+01;
  COFD[1957] = 5.43771555E+00;
  COFD[1958] = -4.65617512E-01;
  COFD[1959] = 1.91604198E-02;
  COFD[1960] = -2.20377105E+01;
  COFD[1961] = 5.43771555E+00;
  COFD[1962] = -4.65617512E-01;
  COFD[1963] = 1.91604198E-02;
  COFD[1964] = -2.23095149E+01;
  COFD[1965] = 5.45157330E+00;
  COFD[1966] = -4.65253665E-01;
  COFD[1967] = 1.90612411E-02;
  COFD[1968] = -2.18504778E+01;
  COFD[1969] = 5.39546703E+00;
  COFD[1970] = -4.62825371E-01;
  COFD[1971] = 1.91432238E-02;
  COFD[1972] = -2.18504778E+01;
  COFD[1973] = 5.39546703E+00;
  COFD[1974] = -4.62825371E-01;
  COFD[1975] = 1.91432238E-02;
  COFD[1976] = -1.54972236E+01;
  COFD[1977] = 3.45957322E+00;
  COFD[1978] = -2.33335381E-01;
  COFD[1979] = 1.00546680E-02;
  COFD[1980] = -1.50643904E+01;
  COFD[1981] = 3.90641370E+00;
  COFD[1982] = -2.88957677E-01;
  COFD[1983] = 1.23669987E-02;
  COFD[1984] = -1.19609478E+01;
  COFD[1985] = 2.54091639E+00;
  COFD[1986] = -1.15850475E-01;
  COFD[1987] = 5.03893346E-03;
  COFD[1988] = -1.45714581E+01;
  COFD[1989] = 3.25814060E+00;
  COFD[1990] = -2.08402129E-01;
  COFD[1991] = 9.02544298E-03;
  COFD[1992] = -1.57555863E+01;
  COFD[1993] = 3.56140952E+00;
  COFD[1994] = -2.46282892E-01;
  COFD[1995] = 1.06044757E-02;
  COFD[1996] = -1.45865205E+01;
  COFD[1997] = 3.25814060E+00;
  COFD[1998] = -2.08402129E-01;
  COFD[1999] = 9.02544298E-03;
  COFD[2000] = -2.11989225E+01;
  COFD[2001] = 5.48294383E+00;
  COFD[2002] = -4.63910525E-01;
  COFD[2003] = 1.87967249E-02;
  COFD[2004] = -1.54796731E+01;
  COFD[2005] = 3.44821689E+00;
  COFD[2006] = -2.31932994E-01;
  COFD[2007] = 9.99688061E-03;
  COFD[2008] = -1.86463567E+01;
  COFD[2009] = 4.54862236E+00;
  COFD[2010] = -3.67096821E-01;
  COFD[2011] = 1.55463252E-02;
  COFD[2012] = -1.66255693E+01;
  COFD[2013] = 3.90031906E+00;
  COFD[2014] = -2.88230661E-01;
  COFD[2015] = 1.23380648E-02;
  COFD[2016] = -1.65813662E+01;
  COFD[2017] = 3.88425001E+00;
  COFD[2018] = -2.86312476E-01;
  COFD[2019] = 1.22616627E-02;
  COFD[2020] = -1.57607118E+01;
  COFD[2021] = 3.56140952E+00;
  COFD[2022] = -2.46282892E-01;
  COFD[2023] = 1.06044757E-02;
  COFD[2024] = -1.57655820E+01;
  COFD[2025] = 3.56140952E+00;
  COFD[2026] = -2.46282892E-01;
  COFD[2027] = 1.06044757E-02;
  COFD[2028] = -2.09538960E+01;
  COFD[2029] = 5.35250010E+00;
  COFD[2030] = -4.58316703E-01;
  COFD[2031] = 1.89887690E-02;
  COFD[2032] = -1.87841275E+01;
  COFD[2033] = 4.56428962E+00;
  COFD[2034] = -3.68938951E-01;
  COFD[2035] = 1.56186844E-02;
  COFD[2036] = -1.84296828E+01;
  COFD[2037] = 4.52338181E+00;
  COFD[2038] = -3.64129854E-01;
  COFD[2039] = 1.54297700E-02;
  COFD[2040] = -1.87781302E+01;
  COFD[2041] = 4.56428962E+00;
  COFD[2042] = -3.68938951E-01;
  COFD[2043] = 1.56186844E-02;
  COFD[2044] = -1.89035547E+01;
  COFD[2045] = 4.67519664E+00;
  COFD[2046] = -3.82581158E-01;
  COFD[2047] = 1.61807120E-02;
  COFD[2048] = -1.89107100E+01;
  COFD[2049] = 4.67519664E+00;
  COFD[2050] = -3.82581158E-01;
  COFD[2051] = 1.61807120E-02;
  COFD[2052] = -2.06489546E+01;
  COFD[2053] = 5.20348257E+00;
  COFD[2054] = -4.41867814E-01;
  COFD[2055] = 1.83870405E-02;
  COFD[2056] = -1.65522771E+01;
  COFD[2057] = 3.93761009E+00;
  COFD[2058] = -2.92710565E-01;
  COFD[2059] = 1.25177995E-02;
  COFD[2060] = -2.06553153E+01;
  COFD[2061] = 5.20348257E+00;
  COFD[2062] = -4.41867814E-01;
  COFD[2063] = 1.83870405E-02;
  COFD[2064] = -1.98121399E+01;
  COFD[2065] = 4.90949838E+00;
  COFD[2066] = -4.09710987E-01;
  COFD[2067] = 1.72272850E-02;
  COFD[2068] = -1.96231479E+01;
  COFD[2069] = 4.85846969E+00;
  COFD[2070] = -4.04137136E-01;
  COFD[2071] = 1.70272658E-02;
  COFD[2072] = -2.03251782E+01;
  COFD[2073] = 5.03716590E+00;
  COFD[2074] = -4.24714370E-01;
  COFD[2075] = 1.78162251E-02;
  COFD[2076] = -1.97422311E+01;
  COFD[2077] = 4.84261600E+00;
  COFD[2078] = -4.02324040E-01;
  COFD[2079] = 1.69583178E-02;
  COFD[2080] = -2.02895140E+01;
  COFD[2081] = 5.02992150E+00;
  COFD[2082] = -4.23868677E-01;
  COFD[2083] = 1.77832701E-02;
  COFD[2084] = -2.02915437E+01;
  COFD[2085] = 5.02992150E+00;
  COFD[2086] = -4.23868677E-01;
  COFD[2087] = 1.77832701E-02;
  COFD[2088] = -2.09026205E+01;
  COFD[2089] = 5.20282016E+00;
  COFD[2090] = -4.41811086E-01;
  COFD[2091] = 1.83857216E-02;
  COFD[2092] = -2.12234784E+01;
  COFD[2093] = 5.31936763E+00;
  COFD[2094] = -4.54732051E-01;
  COFD[2095] = 1.88607332E-02;
  COFD[2096] = -2.08290042E+01;
  COFD[2097] = 5.13624657E+00;
  COFD[2098] = -4.35395745E-01;
  COFD[2099] = 1.81943797E-02;
  COFD[2100] = -2.07580489E+01;
  COFD[2101] = 5.11080865E+00;
  COFD[2102] = -4.32626175E-01;
  COFD[2103] = 1.80950687E-02;
  COFD[2104] = -2.09241806E+01;
  COFD[2105] = 5.31839685E+00;
  COFD[2106] = -4.54623948E-01;
  COFD[2107] = 1.88567295E-02;
  COFD[2108] = -2.09268561E+01;
  COFD[2109] = 5.31839685E+00;
  COFD[2110] = -4.54623948E-01;
  COFD[2111] = 1.88567295E-02;
  COFD[2112] = -2.07627158E+01;
  COFD[2113] = 5.21569495E+00;
  COFD[2114] = -4.43054270E-01;
  COFD[2115] = 1.84229515E-02;
  COFD[2116] = -2.12249557E+01;
  COFD[2117] = 5.29857440E+00;
  COFD[2118] = -4.52417036E-01;
  COFD[2119] = 1.87750286E-02;
  COFD[2120] = -2.14905918E+01;
  COFD[2121] = 5.34878663E+00;
  COFD[2122] = -4.57928417E-01;
  COFD[2123] = 1.89755219E-02;
  COFD[2124] = -2.14700208E+01;
  COFD[2125] = 5.34878663E+00;
  COFD[2126] = -4.57928417E-01;
  COFD[2127] = 1.89755219E-02;
  COFD[2128] = -1.97245204E+01;
  COFD[2129] = 4.88654569E+00;
  COFD[2130] = -4.07307743E-01;
  COFD[2131] = 1.71459608E-02;
  COFD[2132] = -1.98084637E+01;
  COFD[2133] = 4.90949838E+00;
  COFD[2134] = -4.09710987E-01;
  COFD[2135] = 1.72272850E-02;
  COFD[2136] = -2.16309763E+01;
  COFD[2137] = 5.35518119E+00;
  COFD[2138] = -4.58596594E-01;
  COFD[2139] = 1.89982967E-02;
  COFD[2140] = -2.14398975E+01;
  COFD[2141] = 5.35638308E+00;
  COFD[2142] = -4.58721941E-01;
  COFD[2143] = 1.90025577E-02;
  COFD[2144] = -2.15282218E+01;
  COFD[2145] = 5.35564155E+00;
  COFD[2146] = -4.58644615E-01;
  COFD[2147] = 1.89999295E-02;
  COFD[2148] = -2.14562895E+01;
  COFD[2149] = 5.33532691E+00;
  COFD[2150] = -4.56505568E-01;
  COFD[2151] = 1.89262566E-02;
  COFD[2152] = -2.16172373E+01;
  COFD[2153] = 5.35518119E+00;
  COFD[2154] = -4.58596594E-01;
  COFD[2155] = 1.89982967E-02;
  COFD[2156] = -2.16163085E+01;
  COFD[2157] = 5.35518119E+00;
  COFD[2158] = -4.58596594E-01;
  COFD[2159] = 1.89982967E-02;
  COFD[2160] = -2.14364394E+01;
  COFD[2161] = 5.26245213E+00;
  COFD[2162] = -4.48352237E-01;
  COFD[2163] = 1.86227443E-02;
  COFD[2164] = -2.20523530E+01;
  COFD[2165] = 5.43694234E+00;
  COFD[2166] = -4.65634839E-01;
  COFD[2167] = 1.91657286E-02;
  COFD[2168] = -2.20523530E+01;
  COFD[2169] = 5.43694234E+00;
  COFD[2170] = -4.65634839E-01;
  COFD[2171] = 1.91657286E-02;
  COFD[2172] = -2.20523530E+01;
  COFD[2173] = 5.43694234E+00;
  COFD[2174] = -4.65634839E-01;
  COFD[2175] = 1.91657286E-02;
  COFD[2176] = -2.20523530E+01;
  COFD[2177] = 5.43694234E+00;
  COFD[2178] = -4.65634839E-01;
  COFD[2179] = 1.91657286E-02;
  COFD[2180] = -2.20523530E+01;
  COFD[2181] = 5.43694234E+00;
  COFD[2182] = -4.65634839E-01;
  COFD[2183] = 1.91657286E-02;
  COFD[2184] = -2.23193197E+01;
  COFD[2185] = 5.44963079E+00;
  COFD[2186] = -4.65238095E-01;
  COFD[2187] = 1.90696359E-02;
  COFD[2188] = -2.18110440E+01;
  COFD[2189] = 5.37758536E+00;
  COFD[2190] = -4.60945701E-01;
  COFD[2191] = 1.90787306E-02;
  COFD[2192] = -2.18110440E+01;
  COFD[2193] = 5.37758536E+00;
  COFD[2194] = -4.60945701E-01;
  COFD[2195] = 1.90787306E-02;
  COFD[2196] = -1.54573387E+01;
  COFD[2197] = 3.44303981E+00;
  COFD[2198] = -2.31296721E-01;
  COFD[2199] = 9.97079557E-03;
  COFD[2200] = -1.41188415E+01;
  COFD[2201] = 3.59720720E+00;
  COFD[2202] = -2.50852412E-01;
  COFD[2203] = 1.07992653E-02;
  COFD[2204] = -1.12823422E+01;
  COFD[2205] = 2.30017030E+00;
  COFD[2206] = -8.34928497E-02;
  COFD[2207] = 3.58611589E-03;
  COFD[2208] = -1.38853749E+01;
  COFD[2209] = 2.98298723E+00;
  COFD[2210] = -1.73428215E-01;
  COFD[2211] = 7.54224684E-03;
  COFD[2212] = -1.51058696E+01;
  COFD[2213] = 3.27853241E+00;
  COFD[2214] = -2.10970532E-01;
  COFD[2215] = 9.13336403E-03;
  COFD[2216] = -1.39057440E+01;
  COFD[2217] = 2.98298723E+00;
  COFD[2218] = -1.73428215E-01;
  COFD[2219] = 7.54224684E-03;
  COFD[2220] = -2.01625751E+01;
  COFD[2221] = 5.20184446E+00;
  COFD[2222] = -4.41727448E-01;
  COFD[2223] = 1.83837722E-02;
  COFD[2224] = -1.48478097E+01;
  COFD[2225] = 3.17494843E+00;
  COFD[2226] = -1.97752410E-01;
  COFD[2227] = 8.57054106E-03;
  COFD[2228] = -1.77858093E+01;
  COFD[2229] = 4.18471443E+00;
  COFD[2230] = -3.22640353E-01;
  COFD[2231] = 1.37280239E-02;
  COFD[2232] = -1.58225427E+01;
  COFD[2233] = 3.58720055E+00;
  COFD[2234] = -2.49572308E-01;
  COFD[2235] = 1.07445741E-02;
  COFD[2236] = -1.57607118E+01;
  COFD[2237] = 3.56140952E+00;
  COFD[2238] = -2.46282892E-01;
  COFD[2239] = 1.06044757E-02;
  COFD[2240] = -1.51136837E+01;
  COFD[2241] = 3.27853241E+00;
  COFD[2242] = -2.10970532E-01;
  COFD[2243] = 9.13336403E-03;
  COFD[2244] = -1.51211478E+01;
  COFD[2245] = 3.27853241E+00;
  COFD[2246] = -2.10970532E-01;
  COFD[2247] = 9.13336403E-03;
  COFD[2248] = -2.02493759E+01;
  COFD[2249] = 5.09185655E+00;
  COFD[2250] = -4.30641631E-01;
  COFD[2251] = 1.80275784E-02;
  COFD[2252] = -1.79076984E+01;
  COFD[2253] = 4.20508193E+00;
  COFD[2254] = -3.25158699E-01;
  COFD[2255] = 1.38321131E-02;
  COFD[2256] = -1.75143837E+01;
  COFD[2257] = 4.15347096E+00;
  COFD[2258] = -3.18813734E-01;
  COFD[2259] = 1.35714974E-02;
  COFD[2260] = -1.78987051E+01;
  COFD[2261] = 4.20508193E+00;
  COFD[2262] = -3.25158699E-01;
  COFD[2263] = 1.38321131E-02;
  COFD[2264] = -1.79943292E+01;
  COFD[2265] = 4.31259444E+00;
  COFD[2266] = -3.38584827E-01;
  COFD[2267] = 1.43931810E-02;
  COFD[2268] = -1.80048563E+01;
  COFD[2269] = 4.31259444E+00;
  COFD[2270] = -3.38584827E-01;
  COFD[2271] = 1.43931810E-02;
  COFD[2272] = -1.99727627E+01;
  COFD[2273] = 4.93673368E+00;
  COFD[2274] = -4.12924135E-01;
  COFD[2275] = 1.73539126E-02;
  COFD[2276] = -1.58717526E+01;
  COFD[2277] = 3.64628858E+00;
  COFD[2278] = -2.57092933E-01;
  COFD[2279] = 1.10642427E-02;
  COFD[2280] = -1.99829293E+01;
  COFD[2281] = 4.93673368E+00;
  COFD[2282] = -4.12924135E-01;
  COFD[2283] = 1.73539126E-02;
  COFD[2284] = -1.89598662E+01;
  COFD[2285] = 4.56070745E+00;
  COFD[2286] = -3.68517396E-01;
  COFD[2287] = 1.56021102E-02;
  COFD[2288] = -1.87640775E+01;
  COFD[2289] = 4.50343635E+00;
  COFD[2290] = -3.61818471E-01;
  COFD[2291] = 1.53404608E-02;
  COFD[2292] = -1.95377543E+01;
  COFD[2293] = 4.70710890E+00;
  COFD[2294] = -3.86453789E-01;
  COFD[2295] = 1.63380393E-02;
  COFD[2296] = -1.88954497E+01;
  COFD[2297] = 4.48901310E+00;
  COFD[2298] = -3.60157439E-01;
  COFD[2299] = 1.52767822E-02;
  COFD[2300] = -1.95007097E+01;
  COFD[2301] = 4.69879097E+00;
  COFD[2302] = -3.85441745E-01;
  COFD[2303] = 1.62968073E-02;
  COFD[2304] = -1.95040861E+01;
  COFD[2305] = 4.69879097E+00;
  COFD[2306] = -3.85441745E-01;
  COFD[2307] = 1.62968073E-02;
  COFD[2308] = -2.02561385E+01;
  COFD[2309] = 4.93517265E+00;
  COFD[2310] = -4.12740828E-01;
  COFD[2311] = 1.73467245E-02;
  COFD[2312] = -2.02084213E+01;
  COFD[2313] = 4.93423363E+00;
  COFD[2314] = -4.12630529E-01;
  COFD[2315] = 1.73423980E-02;
  COFD[2316] = -2.01255665E+01;
  COFD[2317] = 4.83483781E+00;
  COFD[2318] = -4.01422871E-01;
  COFD[2319] = 1.69235370E-02;
  COFD[2320] = -2.00433265E+01;
  COFD[2321] = 4.80382495E+00;
  COFD[2322] = -3.97838890E-01;
  COFD[2323] = 1.67856063E-02;
  COFD[2324] = -2.02723834E+01;
  COFD[2325] = 5.06295779E+00;
  COFD[2326] = -4.27579258E-01;
  COFD[2327] = 1.79215546E-02;
  COFD[2328] = -2.02767285E+01;
  COFD[2329] = 5.06295779E+00;
  COFD[2330] = -4.27579258E-01;
  COFD[2331] = 1.79215546E-02;
  COFD[2332] = -2.01319787E+01;
  COFD[2333] = 4.95889869E+00;
  COFD[2334] = -4.15526934E-01;
  COFD[2335] = 1.74559870E-02;
  COFD[2336] = -2.02137676E+01;
  COFD[2337] = 4.91354418E+00;
  COFD[2338] = -4.10191969E-01;
  COFD[2339] = 1.72463969E-02;
  COFD[2340] = -2.09000828E+01;
  COFD[2341] = 5.08840643E+00;
  COFD[2342] = -4.30278621E-01;
  COFD[2343] = 1.80151378E-02;
  COFD[2344] = -2.08630404E+01;
  COFD[2345] = 5.08840643E+00;
  COFD[2346] = -4.30278621E-01;
  COFD[2347] = 1.80151378E-02;
  COFD[2348] = -1.88597779E+01;
  COFD[2349] = 4.53065425E+00;
  COFD[2350] = -3.64983473E-01;
  COFD[2351] = 1.54632547E-02;
  COFD[2352] = -1.89540711E+01;
  COFD[2353] = 4.56070745E+00;
  COFD[2354] = -3.68517396E-01;
  COFD[2355] = 1.56021102E-02;
  COFD[2356] = -2.08972741E+01;
  COFD[2357] = 5.05236296E+00;
  COFD[2358] = -4.26457052E-01;
  COFD[2359] = 1.78827371E-02;
  COFD[2360] = -2.05805034E+01;
  COFD[2361] = 5.02104665E+00;
  COFD[2362] = -4.22831627E-01;
  COFD[2363] = 1.77428177E-02;
  COFD[2364] = -2.05856566E+01;
  COFD[2365] = 4.99149256E+00;
  COFD[2366] = -4.19363176E-01;
  COFD[2367] = 1.76068685E-02;
  COFD[2368] = -2.08516139E+01;
  COFD[2369] = 5.07617318E+00;
  COFD[2370] = -4.28983517E-01;
  COFD[2371] = 1.79703565E-02;
  COFD[2372] = -2.08727720E+01;
  COFD[2373] = 5.05236296E+00;
  COFD[2374] = -4.26457052E-01;
  COFD[2375] = 1.78827371E-02;
  COFD[2376] = -2.08711344E+01;
  COFD[2377] = 5.05236296E+00;
  COFD[2378] = -4.26457052E-01;
  COFD[2379] = 1.78827371E-02;
  COFD[2380] = -2.08627215E+01;
  COFD[2381] = 5.00799007E+00;
  COFD[2382] = -4.21303846E-01;
  COFD[2383] = 1.76831398E-02;
  COFD[2384] = -2.14847708E+01;
  COFD[2385] = 5.19080403E+00;
  COFD[2386] = -4.40813300E-01;
  COFD[2387] = 1.83643944E-02;
  COFD[2388] = -2.14847708E+01;
  COFD[2389] = 5.19080403E+00;
  COFD[2390] = -4.40813300E-01;
  COFD[2391] = 1.83643944E-02;
  COFD[2392] = -2.14847708E+01;
  COFD[2393] = 5.19080403E+00;
  COFD[2394] = -4.40813300E-01;
  COFD[2395] = 1.83643944E-02;
  COFD[2396] = -2.14847708E+01;
  COFD[2397] = 5.19080403E+00;
  COFD[2398] = -4.40813300E-01;
  COFD[2399] = 1.83643944E-02;
  COFD[2400] = -2.14847708E+01;
  COFD[2401] = 5.19080403E+00;
  COFD[2402] = -4.40813300E-01;
  COFD[2403] = 1.83643944E-02;
  COFD[2404] = -2.18845568E+01;
  COFD[2405] = 5.25324658E+00;
  COFD[2406] = -4.47318036E-01;
  COFD[2407] = 1.85841342E-02;
  COFD[2408] = -2.12169053E+01;
  COFD[2409] = 5.11479735E+00;
  COFD[2410] = -4.33050578E-01;
  COFD[2411] = 1.81098360E-02;
  COFD[2412] = -2.12169053E+01;
  COFD[2413] = 5.11479735E+00;
  COFD[2414] = -4.33050578E-01;
  COFD[2415] = 1.81098360E-02;
  COFD[2416] = -1.48205479E+01;
  COFD[2417] = 3.16773813E+00;
  COFD[2418] = -1.96823168E-01;
  COFD[2419] = 8.53058072E-03;
  COFD[2420] = -1.41192808E+01;
  COFD[2421] = 3.59720720E+00;
  COFD[2422] = -2.50852412E-01;
  COFD[2423] = 1.07992653E-02;
  COFD[2424] = -1.12831958E+01;
  COFD[2425] = 2.30017030E+00;
  COFD[2426] = -8.34928497E-02;
  COFD[2427] = 3.58611589E-03;
  COFD[2428] = -1.38902360E+01;
  COFD[2429] = 2.98298723E+00;
  COFD[2430] = -1.73428215E-01;
  COFD[2431] = 7.54224684E-03;
  COFD[2432] = -1.51132171E+01;
  COFD[2433] = 3.27853241E+00;
  COFD[2434] = -2.10970532E-01;
  COFD[2435] = 9.13336403E-03;
  COFD[2436] = -1.39108083E+01;
  COFD[2437] = 2.98298723E+00;
  COFD[2438] = -1.73428215E-01;
  COFD[2439] = 7.54224684E-03;
  COFD[2440] = -2.01678346E+01;
  COFD[2441] = 5.20184446E+00;
  COFD[2442] = -4.41727448E-01;
  COFD[2443] = 1.83837722E-02;
  COFD[2444] = -1.48546585E+01;
  COFD[2445] = 3.17494843E+00;
  COFD[2446] = -1.97752410E-01;
  COFD[2447] = 8.57054106E-03;
  COFD[2448] = -1.77943490E+01;
  COFD[2449] = 4.18471443E+00;
  COFD[2450] = -3.22640353E-01;
  COFD[2451] = 1.37280239E-02;
  COFD[2452] = -1.58272017E+01;
  COFD[2453] = 3.58720055E+00;
  COFD[2454] = -2.49572308E-01;
  COFD[2455] = 1.07445741E-02;
  COFD[2456] = -1.57655820E+01;
  COFD[2457] = 3.56140952E+00;
  COFD[2458] = -2.46282892E-01;
  COFD[2459] = 1.06044757E-02;
  COFD[2460] = -1.51211478E+01;
  COFD[2461] = 3.27853241E+00;
  COFD[2462] = -2.10970532E-01;
  COFD[2463] = 9.13336403E-03;
  COFD[2464] = -1.51287251E+01;
  COFD[2465] = 3.27853241E+00;
  COFD[2466] = -2.10970532E-01;
  COFD[2467] = 9.13336403E-03;
  COFD[2468] = -2.02564846E+01;
  COFD[2469] = 5.09185655E+00;
  COFD[2470] = -4.30641631E-01;
  COFD[2471] = 1.80275784E-02;
  COFD[2472] = -1.79148126E+01;
  COFD[2473] = 4.20508193E+00;
  COFD[2474] = -3.25158699E-01;
  COFD[2475] = 1.38321131E-02;
  COFD[2476] = -1.75212383E+01;
  COFD[2477] = 4.15347096E+00;
  COFD[2478] = -3.18813734E-01;
  COFD[2479] = 1.35714974E-02;
  COFD[2480] = -1.79056916E+01;
  COFD[2481] = 4.20508193E+00;
  COFD[2482] = -3.25158699E-01;
  COFD[2483] = 1.38321131E-02;
  COFD[2484] = -1.80009067E+01;
  COFD[2485] = 4.31259444E+00;
  COFD[2486] = -3.38584827E-01;
  COFD[2487] = 1.43931810E-02;
  COFD[2488] = -1.80115747E+01;
  COFD[2489] = 4.31259444E+00;
  COFD[2490] = -3.38584827E-01;
  COFD[2491] = 1.43931810E-02;
  COFD[2492] = -1.99811327E+01;
  COFD[2493] = 4.93673368E+00;
  COFD[2494] = -4.12924135E-01;
  COFD[2495] = 1.73539126E-02;
  COFD[2496] = -1.58800324E+01;
  COFD[2497] = 3.64628858E+00;
  COFD[2498] = -2.57092933E-01;
  COFD[2499] = 1.10642427E-02;
  COFD[2500] = -1.99914727E+01;
  COFD[2501] = 4.93673368E+00;
  COFD[2502] = -4.12924135E-01;
  COFD[2503] = 1.73539126E-02;
  COFD[2504] = -1.89680574E+01;
  COFD[2505] = 4.56070745E+00;
  COFD[2506] = -3.68517396E-01;
  COFD[2507] = 1.56021102E-02;
  COFD[2508] = -1.87724513E+01;
  COFD[2509] = 4.50343635E+00;
  COFD[2510] = -3.61818471E-01;
  COFD[2511] = 1.53404608E-02;
  COFD[2512] = -1.95470424E+01;
  COFD[2513] = 4.70710890E+00;
  COFD[2514] = -3.86453789E-01;
  COFD[2515] = 1.63380393E-02;
  COFD[2516] = -1.89039113E+01;
  COFD[2517] = 4.48901310E+00;
  COFD[2518] = -3.60157439E-01;
  COFD[2519] = 1.52767822E-02;
  COFD[2520] = -1.95100632E+01;
  COFD[2521] = 4.69879097E+00;
  COFD[2522] = -3.85441745E-01;
  COFD[2523] = 1.62968073E-02;
  COFD[2524] = -1.95135036E+01;
  COFD[2525] = 4.69879097E+00;
  COFD[2526] = -3.85441745E-01;
  COFD[2527] = 1.62968073E-02;
  COFD[2528] = -2.02656158E+01;
  COFD[2529] = 4.93517265E+00;
  COFD[2530] = -4.12740828E-01;
  COFD[2531] = 1.73467245E-02;
  COFD[2532] = -2.02179598E+01;
  COFD[2533] = 4.93423363E+00;
  COFD[2534] = -4.12630529E-01;
  COFD[2535] = 1.73423980E-02;
  COFD[2536] = -2.01356974E+01;
  COFD[2537] = 4.83483781E+00;
  COFD[2538] = -4.01422871E-01;
  COFD[2539] = 1.69235370E-02;
  COFD[2540] = -2.00535052E+01;
  COFD[2541] = 4.80382495E+00;
  COFD[2542] = -3.97838890E-01;
  COFD[2543] = 1.67856063E-02;
  COFD[2544] = -2.02811672E+01;
  COFD[2545] = 5.06295779E+00;
  COFD[2546] = -4.27579258E-01;
  COFD[2547] = 1.79215546E-02;
  COFD[2548] = -2.02855896E+01;
  COFD[2549] = 5.06295779E+00;
  COFD[2550] = -4.27579258E-01;
  COFD[2551] = 1.79215546E-02;
  COFD[2552] = -2.01413294E+01;
  COFD[2553] = 4.95889869E+00;
  COFD[2554] = -4.15526934E-01;
  COFD[2555] = 1.74559870E-02;
  COFD[2556] = -2.02231823E+01;
  COFD[2557] = 4.91354418E+00;
  COFD[2558] = -4.10191969E-01;
  COFD[2559] = 1.72463969E-02;
  COFD[2560] = -2.09118647E+01;
  COFD[2561] = 5.08840643E+00;
  COFD[2562] = -4.30278621E-01;
  COFD[2563] = 1.80151378E-02;
  COFD[2564] = -2.08739717E+01;
  COFD[2565] = 5.08840643E+00;
  COFD[2566] = -4.30278621E-01;
  COFD[2567] = 1.80151378E-02;
  COFD[2568] = -1.88680616E+01;
  COFD[2569] = 4.53065425E+00;
  COFD[2570] = -3.64983473E-01;
  COFD[2571] = 1.54632547E-02;
  COFD[2572] = -1.89621671E+01;
  COFD[2573] = 4.56070745E+00;
  COFD[2574] = -3.68517396E-01;
  COFD[2575] = 1.56021102E-02;
  COFD[2576] = -2.09086531E+01;
  COFD[2577] = 5.05236296E+00;
  COFD[2578] = -4.26457052E-01;
  COFD[2579] = 1.78827371E-02;
  COFD[2580] = -2.05907729E+01;
  COFD[2581] = 5.02104665E+00;
  COFD[2582] = -4.22831627E-01;
  COFD[2583] = 1.77428177E-02;
  COFD[2584] = -2.05958800E+01;
  COFD[2585] = 4.99149256E+00;
  COFD[2586] = -4.19363176E-01;
  COFD[2587] = 1.76068685E-02;
  COFD[2588] = -2.08624070E+01;
  COFD[2589] = 5.07617318E+00;
  COFD[2590] = -4.28983517E-01;
  COFD[2591] = 1.79703565E-02;
  COFD[2592] = -2.08836009E+01;
  COFD[2593] = 5.05236296E+00;
  COFD[2594] = -4.26457052E-01;
  COFD[2595] = 1.78827371E-02;
  COFD[2596] = -2.08819275E+01;
  COFD[2597] = 5.05236296E+00;
  COFD[2598] = -4.26457052E-01;
  COFD[2599] = 1.78827371E-02;
  COFD[2600] = -2.08739937E+01;
  COFD[2601] = 5.00799007E+00;
  COFD[2602] = -4.21303846E-01;
  COFD[2603] = 1.76831398E-02;
  COFD[2604] = -2.14967522E+01;
  COFD[2605] = 5.19080403E+00;
  COFD[2606] = -4.40813300E-01;
  COFD[2607] = 1.83643944E-02;
  COFD[2608] = -2.14967522E+01;
  COFD[2609] = 5.19080403E+00;
  COFD[2610] = -4.40813300E-01;
  COFD[2611] = 1.83643944E-02;
  COFD[2612] = -2.14967522E+01;
  COFD[2613] = 5.19080403E+00;
  COFD[2614] = -4.40813300E-01;
  COFD[2615] = 1.83643944E-02;
  COFD[2616] = -2.14967522E+01;
  COFD[2617] = 5.19080403E+00;
  COFD[2618] = -4.40813300E-01;
  COFD[2619] = 1.83643944E-02;
  COFD[2620] = -2.14967522E+01;
  COFD[2621] = 5.19080403E+00;
  COFD[2622] = -4.40813300E-01;
  COFD[2623] = 1.83643944E-02;
  COFD[2624] = -2.18970360E+01;
  COFD[2625] = 5.25324658E+00;
  COFD[2626] = -4.47318036E-01;
  COFD[2627] = 1.85841342E-02;
  COFD[2628] = -2.12285344E+01;
  COFD[2629] = 5.11479735E+00;
  COFD[2630] = -4.33050578E-01;
  COFD[2631] = 1.81098360E-02;
  COFD[2632] = -2.12285344E+01;
  COFD[2633] = 5.11479735E+00;
  COFD[2634] = -4.33050578E-01;
  COFD[2635] = 1.81098360E-02;
  COFD[2636] = -1.48273972E+01;
  COFD[2637] = 3.16773813E+00;
  COFD[2638] = -1.96823168E-01;
  COFD[2639] = 8.53058072E-03;
  COFD[2640] = -1.93172916E+01;
  COFD[2641] = 5.37588635E+00;
  COFD[2642] = -4.60762834E-01;
  COFD[2643] = 1.90722493E-02;
  COFD[2644] = -1.54361173E+01;
  COFD[2645] = 3.83529069E+00;
  COFD[2646] = -2.80481778E-01;
  COFD[2647] = 1.20302770E-02;
  COFD[2648] = -1.88359597E+01;
  COFD[2649] = 4.75778339E+00;
  COFD[2650] = -3.92510587E-01;
  COFD[2651] = 1.65802295E-02;
  COFD[2652] = -2.02419285E+01;
  COFD[2653] = 5.09185655E+00;
  COFD[2654] = -4.30641631E-01;
  COFD[2655] = 1.80275784E-02;
  COFD[2656] = -1.88556767E+01;
  COFD[2657] = 4.75778339E+00;
  COFD[2658] = -3.92510587E-01;
  COFD[2659] = 1.65802295E-02;
  COFD[2660] = -1.94329068E+01;
  COFD[2661] = 4.32601172E+00;
  COFD[2662] = -2.67841680E-01;
  COFD[2663] = 8.59623460E-03;
  COFD[2664] = -1.99660065E+01;
  COFD[2665] = 4.99411384E+00;
  COFD[2666] = -4.19672196E-01;
  COFD[2667] = 1.76190456E-02;
  COFD[2668] = -2.19981706E+01;
  COFD[2669] = 5.48342675E+00;
  COFD[2670] = -4.57782070E-01;
  COFD[2671] = 1.82957850E-02;
  COFD[2672] = -2.10007825E+01;
  COFD[2673] = 5.36906158E+00;
  COFD[2674] = -4.60039482E-01;
  COFD[2675] = 1.90471208E-02;
  COFD[2676] = -2.09538960E+01;
  COFD[2677] = 5.35250010E+00;
  COFD[2678] = -4.58316703E-01;
  COFD[2679] = 1.89887690E-02;
  COFD[2680] = -2.02493759E+01;
  COFD[2681] = 5.09185655E+00;
  COFD[2682] = -4.30641631E-01;
  COFD[2683] = 1.80275784E-02;
  COFD[2684] = -2.02564846E+01;
  COFD[2685] = 5.09185655E+00;
  COFD[2686] = -4.30641631E-01;
  COFD[2687] = 1.80275784E-02;
  COFD[2688] = -2.05279874E+01;
  COFD[2689] = 4.65341631E+00;
  COFD[2690] = -3.17798333E-01;
  COFD[2691] = 1.10326172E-02;
  COFD[2692] = -2.20751016E+01;
  COFD[2693] = 5.48219421E+00;
  COFD[2694] = -4.57118011E-01;
  COFD[2695] = 1.82481275E-02;
  COFD[2696] = -2.18067863E+01;
  COFD[2697] = 5.48629379E+00;
  COFD[2698] = -4.58998623E-01;
  COFD[2699] = 1.83802900E-02;
  COFD[2700] = -2.20665110E+01;
  COFD[2701] = 5.48219421E+00;
  COFD[2702] = -4.57118011E-01;
  COFD[2703] = 1.82481275E-02;
  COFD[2704] = -2.18979200E+01;
  COFD[2705] = 5.46783880E+00;
  COFD[2706] = -4.52790454E-01;
  COFD[2707] = 1.79689550E-02;
  COFD[2708] = -2.19080012E+01;
  COFD[2709] = 5.46783880E+00;
  COFD[2710] = -4.52790454E-01;
  COFD[2711] = 1.79689550E-02;
  COFD[2712] = -2.12524187E+01;
  COFD[2713] = 4.93163464E+00;
  COFD[2714] = -3.60831131E-01;
  COFD[2715] = 1.31516943E-02;
  COFD[2716] = -2.10061167E+01;
  COFD[2717] = 5.40483692E+00;
  COFD[2718] = -4.63658873E-01;
  COFD[2719] = 1.91646114E-02;
  COFD[2720] = -2.12620447E+01;
  COFD[2721] = 4.93163464E+00;
  COFD[2722] = -3.60831131E-01;
  COFD[2723] = 1.31516943E-02;
  COFD[2724] = -2.20218850E+01;
  COFD[2725] = 5.33662478E+00;
  COFD[2726] = -4.27371229E-01;
  COFD[2727] = 1.65539339E-02;
  COFD[2728] = -2.20651335E+01;
  COFD[2729] = 5.38704575E+00;
  COFD[2730] = -4.36283370E-01;
  COFD[2731] = 1.70286543E-02;
  COFD[2732] = -2.20279918E+01;
  COFD[2733] = 5.23448541E+00;
  COFD[2734] = -4.09927386E-01;
  COFD[2735] = 1.56423231E-02;
  COFD[2736] = -2.22485119E+01;
  COFD[2737] = 5.39778892E+00;
  COFD[2738] = -4.38304152E-01;
  COFD[2739] = 1.71397521E-02;
  COFD[2740] = -2.20252788E+01;
  COFD[2741] = 5.24121166E+00;
  COFD[2742] = -4.11059025E-01;
  COFD[2743] = 1.57010104E-02;
  COFD[2744] = -2.20284573E+01;
  COFD[2745] = 5.24121166E+00;
  COFD[2746] = -4.11059025E-01;
  COFD[2747] = 1.57010104E-02;
  COFD[2748] = -2.15372828E+01;
  COFD[2749] = 4.93380640E+00;
  COFD[2750] = -3.61171699E-01;
  COFD[2751] = 1.31686212E-02;
  COFD[2752] = -2.14953453E+01;
  COFD[2753] = 4.93510998E+00;
  COFD[2754] = -3.61376137E-01;
  COFD[2755] = 1.31787827E-02;
  COFD[2756] = -2.20062717E+01;
  COFD[2757] = 5.09608960E+00;
  COFD[2758] = -3.86955479E-01;
  COFD[2759] = 1.44609083E-02;
  COFD[2760] = -2.20820596E+01;
  COFD[2761] = 5.13480519E+00;
  COFD[2762] = -3.93316744E-01;
  COFD[2763] = 1.47863438E-02;
  COFD[2764] = -2.07973052E+01;
  COFD[2765] = 4.73262810E+00;
  COFD[2766] = -3.29863658E-01;
  COFD[2767] = 1.16208974E-02;
  COFD[2768] = -2.08014098E+01;
  COFD[2769] = 4.73262810E+00;
  COFD[2770] = -3.29863658E-01;
  COFD[2771] = 1.16208974E-02;
  COFD[2772] = -2.12869371E+01;
  COFD[2773] = 4.90168525E+00;
  COFD[2774] = -3.56120032E-01;
  COFD[2775] = 1.29171867E-02;
  COFD[2776] = -2.16143887E+01;
  COFD[2777] = 4.96367791E+00;
  COFD[2778] = -3.65848555E-01;
  COFD[2779] = 1.34008603E-02;
  COFD[2780] = -2.11879260E+01;
  COFD[2781] = 4.66307429E+00;
  COFD[2782] = -3.19268748E-01;
  COFD[2783] = 1.11042875E-02;
  COFD[2784] = -2.11534734E+01;
  COFD[2785] = 4.66307429E+00;
  COFD[2786] = -3.19268748E-01;
  COFD[2787] = 1.11042875E-02;
  COFD[2788] = -2.20470482E+01;
  COFD[2789] = 5.36287304E+00;
  COFD[2790] = -4.31985459E-01;
  COFD[2791] = 1.67989944E-02;
  COFD[2792] = -2.20163874E+01;
  COFD[2793] = 5.33662478E+00;
  COFD[2794] = -4.27371229E-01;
  COFD[2795] = 1.65539339E-02;
  COFD[2796] = -2.14947017E+01;
  COFD[2797] = 4.76032791E+00;
  COFD[2798] = -3.34106096E-01;
  COFD[2799] = 1.18285090E-02;
  COFD[2800] = -2.13808006E+01;
  COFD[2801] = 4.81362806E+00;
  COFD[2802] = -3.42326990E-01;
  COFD[2803] = 1.22325012E-02;
  COFD[2804] = -2.15521813E+01;
  COFD[2805] = 4.85623963E+00;
  COFD[2806] = -3.48984100E-01;
  COFD[2807] = 1.25623211E-02;
  COFD[2808] = -2.12488202E+01;
  COFD[2809] = 4.69672574E+00;
  COFD[2810] = -3.24393524E-01;
  COFD[2811] = 1.13541249E-02;
  COFD[2812] = -2.14718780E+01;
  COFD[2813] = 4.76032791E+00;
  COFD[2814] = -3.34106096E-01;
  COFD[2815] = 1.18285090E-02;
  COFD[2816] = -2.14703499E+01;
  COFD[2817] = 4.76032791E+00;
  COFD[2818] = -3.34106096E-01;
  COFD[2819] = 1.18285090E-02;
  COFD[2820] = -2.17304988E+01;
  COFD[2821] = 4.83264094E+00;
  COFD[2822] = -3.45294821E-01;
  COFD[2823] = 1.23794137E-02;
  COFD[2824] = -2.08674068E+01;
  COFD[2825] = 4.37860613E+00;
  COFD[2826] = -2.75749639E-01;
  COFD[2827] = 8.97792922E-03;
  COFD[2828] = -2.08674068E+01;
  COFD[2829] = 4.37860613E+00;
  COFD[2830] = -2.75749639E-01;
  COFD[2831] = 8.97792922E-03;
  COFD[2832] = -2.08674068E+01;
  COFD[2833] = 4.37860613E+00;
  COFD[2834] = -2.75749639E-01;
  COFD[2835] = 8.97792922E-03;
  COFD[2836] = -2.08674068E+01;
  COFD[2837] = 4.37860613E+00;
  COFD[2838] = -2.75749639E-01;
  COFD[2839] = 8.97792922E-03;
  COFD[2840] = -2.08674068E+01;
  COFD[2841] = 4.37860613E+00;
  COFD[2842] = -2.75749639E-01;
  COFD[2843] = 8.97792922E-03;
  COFD[2844] = -2.06803848E+01;
  COFD[2845] = 4.19360028E+00;
  COFD[2846] = -2.47975502E-01;
  COFD[2847] = 7.63834548E-03;
  COFD[2848] = -2.12861516E+01;
  COFD[2849] = 4.59638767E+00;
  COFD[2850] = -3.08980273E-01;
  COFD[2851] = 1.05986522E-02;
  COFD[2852] = -2.12861516E+01;
  COFD[2853] = 4.59638767E+00;
  COFD[2854] = -3.08980273E-01;
  COFD[2855] = 1.05986522E-02;
  COFD[2856] = -1.99350678E+01;
  COFD[2857] = 4.98617709E+00;
  COFD[2858] = -4.18736053E-01;
  COFD[2859] = 1.75821344E-02;
  COFD[2860] = -1.72388691E+01;
  COFD[2861] = 4.60447813E+00;
  COFD[2862] = -3.73889368E-01;
  COFD[2863] = 1.58229235E-02;
  COFD[2864] = -1.35411048E+01;
  COFD[2865] = 3.05984388E+00;
  COFD[2866] = -1.83114865E-01;
  COFD[2867] = 7.94950068E-03;
  COFD[2868] = -1.65809452E+01;
  COFD[2869] = 3.87564052E+00;
  COFD[2870] = -2.85285750E-01;
  COFD[2871] = 1.22208235E-02;
  COFD[2872] = -1.79002453E+01;
  COFD[2873] = 4.20508193E+00;
  COFD[2874] = -3.25158699E-01;
  COFD[2875] = 1.38321131E-02;
  COFD[2876] = -1.66006724E+01;
  COFD[2877] = 3.87564052E+00;
  COFD[2878] = -2.85285750E-01;
  COFD[2879] = 1.22208235E-02;
  COFD[2880] = -2.16940439E+01;
  COFD[2881] = 5.44394964E+00;
  COFD[2882] = -4.47152201E-01;
  COFD[2883] = 1.76308159E-02;
  COFD[2884] = -1.75803708E+01;
  COFD[2885] = 4.08497111E+00;
  COFD[2886] = -3.10470821E-01;
  COFD[2887] = 1.32322450E-02;
  COFD[2888] = -2.09219786E+01;
  COFD[2889] = 5.19204548E+00;
  COFD[2890] = -4.40915128E-01;
  COFD[2891] = 1.83664930E-02;
  COFD[2892] = -1.88552736E+01;
  COFD[2893] = 4.59285496E+00;
  COFD[2894] = -3.72450186E-01;
  COFD[2895] = 1.57632217E-02;
  COFD[2896] = -1.87841275E+01;
  COFD[2897] = 4.56428962E+00;
  COFD[2898] = -3.68938951E-01;
  COFD[2899] = 1.56186844E-02;
  COFD[2900] = -1.79076984E+01;
  COFD[2901] = 4.20508193E+00;
  COFD[2902] = -3.25158699E-01;
  COFD[2903] = 1.38321131E-02;
  COFD[2904] = -1.79148126E+01;
  COFD[2905] = 4.20508193E+00;
  COFD[2906] = -3.25158699E-01;
  COFD[2907] = 1.38321131E-02;
  COFD[2908] = -2.20751016E+01;
  COFD[2909] = 5.48219421E+00;
  COFD[2910] = -4.57118011E-01;
  COFD[2911] = 1.82481275E-02;
  COFD[2912] = -2.10046863E+01;
  COFD[2913] = 5.19982587E+00;
  COFD[2914] = -4.41557143E-01;
  COFD[2915] = 1.83799644E-02;
  COFD[2916] = -2.07012749E+01;
  COFD[2917] = 5.17836635E+00;
  COFD[2918] = -4.39728088E-01;
  COFD[2919] = 1.83380035E-02;
  COFD[2920] = -2.09960895E+01;
  COFD[2921] = 5.19982587E+00;
  COFD[2922] = -4.41557143E-01;
  COFD[2923] = 1.83799644E-02;
  COFD[2924] = -2.10511753E+01;
  COFD[2925] = 5.27526035E+00;
  COFD[2926] = -4.49795919E-01;
  COFD[2927] = 1.86768812E-02;
  COFD[2928] = -2.10612634E+01;
  COFD[2929] = 5.27526035E+00;
  COFD[2930] = -4.49795919E-01;
  COFD[2931] = 1.86768812E-02;
  COFD[2932] = -2.21540929E+01;
  COFD[2933] = 5.49388984E+00;
  COFD[2934] = -4.63572253E-01;
  COFD[2935] = 1.87152221E-02;
  COFD[2936] = -1.89659261E+01;
  COFD[2937] = 4.65931164E+00;
  COFD[2938] = -3.80642811E-01;
  COFD[2939] = 1.61015362E-02;
  COFD[2940] = -2.21637272E+01;
  COFD[2941] = 5.49388984E+00;
  COFD[2942] = -4.63572253E-01;
  COFD[2943] = 1.87152221E-02;
  COFD[2944] = -2.18363974E+01;
  COFD[2945] = 5.43667692E+00;
  COFD[2946] = -4.65640530E-01;
  COFD[2947] = 1.91675299E-02;
  COFD[2948] = -2.17225119E+01;
  COFD[2949] = 5.41757449E+00;
  COFD[2950] = -4.64778880E-01;
  COFD[2951] = 1.91926324E-02;
  COFD[2952] = -2.21190585E+01;
  COFD[2953] = 5.45729646E+00;
  COFD[2954] = -4.65340425E-01;
  COFD[2955] = 1.90398312E-02;
  COFD[2956] = -2.18458267E+01;
  COFD[2957] = 5.40839175E+00;
  COFD[2958] = -4.63980205E-01;
  COFD[2959] = 1.91731580E-02;
  COFD[2960] = -2.20987669E+01;
  COFD[2961] = 5.45582845E+00;
  COFD[2962] = -4.65322899E-01;
  COFD[2963] = 1.90457166E-02;
  COFD[2964] = -2.21019484E+01;
  COFD[2965] = 5.45582845E+00;
  COFD[2966] = -4.65322899E-01;
  COFD[2967] = 1.90457166E-02;
  COFD[2968] = -2.24143069E+01;
  COFD[2969] = 5.49379864E+00;
  COFD[2970] = -4.63600612E-01;
  COFD[2971] = 1.87179811E-02;
  COFD[2972] = -2.23731080E+01;
  COFD[2973] = 5.49374441E+00;
  COFD[2974] = -4.63617711E-01;
  COFD[2975] = 1.87196409E-02;
  COFD[2976] = -2.24306547E+01;
  COFD[2977] = 5.46873098E+00;
  COFD[2978] = -4.63395699E-01;
  COFD[2979] = 1.88249267E-02;
  COFD[2980] = -2.24132657E+01;
  COFD[2981] = 5.46734823E+00;
  COFD[2982] = -4.64115641E-01;
  COFD[2983] = 1.88903818E-02;
  COFD[2984] = -2.21631204E+01;
  COFD[2985] = 5.48560730E+00;
  COFD[2986] = -4.58746417E-01;
  COFD[2987] = 1.83631968E-02;
  COFD[2988] = -2.21672288E+01;
  COFD[2989] = 5.48560730E+00;
  COFD[2990] = -4.58746417E-01;
  COFD[2991] = 1.83631968E-02;
  COFD[2992] = -2.22550199E+01;
  COFD[2993] = 5.49328085E+00;
  COFD[2994] = -4.62887295E-01;
  COFD[2995] = 1.86623580E-02;
  COFD[2996] = -2.24141981E+01;
  COFD[2997] = 5.49189132E+00;
  COFD[2998] = -4.63888808E-01;
  COFD[2999] = 1.87508465E-02;
  COFD[3000] = -2.26777941E+01;
  COFD[3001] = 5.48256348E+00;
  COFD[3002] = -4.57308388E-01;
  COFD[3003] = 1.82617123E-02;
  COFD[3004] = -2.26433024E+01;
  COFD[3005] = 5.48256348E+00;
  COFD[3006] = -4.57308388E-01;
  COFD[3007] = 1.82617123E-02;
  COFD[3008] = -2.17838465E+01;
  COFD[3009] = 5.42865606E+00;
  COFD[3010] = -4.65447368E-01;
  COFD[3011] = 1.91919264E-02;
  COFD[3012] = -2.18308952E+01;
  COFD[3013] = 5.43667692E+00;
  COFD[3014] = -4.65640530E-01;
  COFD[3015] = 1.91675299E-02;
  COFD[3016] = -2.27548022E+01;
  COFD[3017] = 5.48750049E+00;
  COFD[3018] = -4.59445591E-01;
  COFD[3019] = 1.84106692E-02;
  COFD[3020] = -2.25355047E+01;
  COFD[3021] = 5.49116738E+00;
  COFD[3022] = -4.60872204E-01;
  COFD[3023] = 1.85085987E-02;
  COFD[3024] = -2.25966074E+01;
  COFD[3025] = 5.49074590E+00;
  COFD[3026] = -4.61641528E-01;
  COFD[3027] = 1.85733572E-02;
  COFD[3028] = -2.26588646E+01;
  COFD[3029] = 5.48378580E+00;
  COFD[3030] = -4.57964754E-01;
  COFD[3031] = 1.83088022E-02;
  COFD[3032] = -2.27319532E+01;
  COFD[3033] = 5.48750049E+00;
  COFD[3034] = -4.59445591E-01;
  COFD[3035] = 1.84106692E-02;
  COFD[3036] = -2.27304234E+01;
  COFD[3037] = 5.48750049E+00;
  COFD[3038] = -4.59445591E-01;
  COFD[3039] = 1.84106692E-02;
  COFD[3040] = -2.28191076E+01;
  COFD[3041] = 5.49118368E+00;
  COFD[3042] = -4.61244560E-01;
  COFD[3043] = 1.85388488E-02;
  COFD[3044] = -2.29332768E+01;
  COFD[3045] = 5.44974657E+00;
  COFD[3046] = -4.48651670E-01;
  COFD[3047] = 1.77235430E-02;
  COFD[3048] = -2.29332768E+01;
  COFD[3049] = 5.44974657E+00;
  COFD[3050] = -4.48651670E-01;
  COFD[3051] = 1.77235430E-02;
  COFD[3052] = -2.29332768E+01;
  COFD[3053] = 5.44974657E+00;
  COFD[3054] = -4.48651670E-01;
  COFD[3055] = 1.77235430E-02;
  COFD[3056] = -2.29332768E+01;
  COFD[3057] = 5.44974657E+00;
  COFD[3058] = -4.48651670E-01;
  COFD[3059] = 1.77235430E-02;
  COFD[3060] = -2.29332768E+01;
  COFD[3061] = 5.44974657E+00;
  COFD[3062] = -4.48651670E-01;
  COFD[3063] = 1.77235430E-02;
  COFD[3064] = -2.30861207E+01;
  COFD[3065] = 5.41058317E+00;
  COFD[3066] = -4.40692244E-01;
  COFD[3067] = 1.72706793E-02;
  COFD[3068] = -2.29039591E+01;
  COFD[3069] = 5.47759909E+00;
  COFD[3070] = -4.55570838E-01;
  COFD[3071] = 1.81456235E-02;
  COFD[3072] = -2.29039591E+01;
  COFD[3073] = 5.47759909E+00;
  COFD[3074] = -4.55570838E-01;
  COFD[3075] = 1.81456235E-02;
  COFD[3076] = -1.75535743E+01;
  COFD[3077] = 4.07809359E+00;
  COFD[3078] = -3.09646036E-01;
  COFD[3079] = 1.31992743E-02;
  COFD[3080] = -1.68005293E+01;
  COFD[3081] = 4.55072147E+00;
  COFD[3082] = -3.67343400E-01;
  COFD[3083] = 1.55560012E-02;
  COFD[3084] = -1.32011977E+01;
  COFD[3085] = 3.02784198E+00;
  COFD[3086] = -1.79087955E-01;
  COFD[3087] = 7.78048913E-03;
  COFD[3088] = -1.62171750E+01;
  COFD[3089] = 3.84275248E+00;
  COFD[3090] = -2.81379017E-01;
  COFD[3091] = 1.20662349E-02;
  COFD[3092] = -1.75071988E+01;
  COFD[3093] = 4.15347096E+00;
  COFD[3094] = -3.18813734E-01;
  COFD[3095] = 1.35714974E-02;
  COFD[3096] = -1.62364125E+01;
  COFD[3097] = 3.84275248E+00;
  COFD[3098] = -2.81379017E-01;
  COFD[3099] = 1.20662349E-02;
  COFD[3100] = -2.14160330E+01;
  COFD[3101] = 5.45640844E+00;
  COFD[3102] = -4.50149956E-01;
  COFD[3103] = 1.78119073E-02;
  COFD[3104] = -1.72146821E+01;
  COFD[3105] = 4.04198813E+00;
  COFD[3106] = -3.05338303E-01;
  COFD[3107] = 1.30280077E-02;
  COFD[3108] = -2.05980810E+01;
  COFD[3109] = 5.16997013E+00;
  COFD[3110] = -4.38998744E-01;
  COFD[3111] = 1.83204571E-02;
  COFD[3112] = -1.84813504E+01;
  COFD[3113] = 4.54318703E+00;
  COFD[3114] = -3.66458643E-01;
  COFD[3115] = 1.55212948E-02;
  COFD[3116] = -1.84296828E+01;
  COFD[3117] = 4.52338181E+00;
  COFD[3118] = -3.64129854E-01;
  COFD[3119] = 1.54297700E-02;
  COFD[3120] = -1.75143837E+01;
  COFD[3121] = 4.15347096E+00;
  COFD[3122] = -3.18813734E-01;
  COFD[3123] = 1.35714974E-02;
  COFD[3124] = -1.75212383E+01;
  COFD[3125] = 4.15347096E+00;
  COFD[3126] = -3.18813734E-01;
  COFD[3127] = 1.35714974E-02;
  COFD[3128] = -2.18067863E+01;
  COFD[3129] = 5.48629379E+00;
  COFD[3130] = -4.58998623E-01;
  COFD[3131] = 1.83802900E-02;
  COFD[3132] = -2.07012749E+01;
  COFD[3133] = 5.17836635E+00;
  COFD[3134] = -4.39728088E-01;
  COFD[3135] = 1.83380035E-02;
  COFD[3136] = -2.03551573E+01;
  COFD[3137] = 5.14854026E+00;
  COFD[3138] = -4.36716588E-01;
  COFD[3139] = 1.82409313E-02;
  COFD[3140] = -2.06929738E+01;
  COFD[3141] = 5.17836635E+00;
  COFD[3142] = -4.39728088E-01;
  COFD[3143] = 1.83380035E-02;
  COFD[3144] = -2.06697965E+01;
  COFD[3145] = 5.22838636E+00;
  COFD[3146] = -4.44511745E-01;
  COFD[3147] = 1.84787582E-02;
  COFD[3148] = -2.06795559E+01;
  COFD[3149] = 5.22838636E+00;
  COFD[3150] = -4.44511745E-01;
  COFD[3151] = 1.84787582E-02;
  COFD[3152] = -2.18686197E+01;
  COFD[3153] = 5.48743241E+00;
  COFD[3154] = -4.64013540E-01;
  COFD[3155] = 1.87830225E-02;
  COFD[3156] = -1.85110980E+01;
  COFD[3157] = 4.59851812E+00;
  COFD[3158] = -3.73151692E-01;
  COFD[3159] = 1.57923348E-02;
  COFD[3160] = -2.18778630E+01;
  COFD[3161] = 5.48743241E+00;
  COFD[3162] = -4.64013540E-01;
  COFD[3163] = 1.87830225E-02;
  COFD[3164] = -2.15487979E+01;
  COFD[3165] = 5.42458950E+00;
  COFD[3166] = -4.65212987E-01;
  COFD[3167] = 1.91930766E-02;
  COFD[3168] = -2.14001806E+01;
  COFD[3169] = 5.39261033E+00;
  COFD[3170] = -4.62555501E-01;
  COFD[3171] = 1.91354360E-02;
  COFD[3172] = -2.18452465E+01;
  COFD[3173] = 5.44764923E+00;
  COFD[3174] = -4.65239944E-01;
  COFD[3175] = 1.90796594E-02;
  COFD[3176] = -2.15259021E+01;
  COFD[3177] = 5.37765042E+00;
  COFD[3178] = -4.60952699E-01;
  COFD[3179] = 1.90789784E-02;
  COFD[3180] = -2.18235940E+01;
  COFD[3181] = 5.44634823E+00;
  COFD[3182] = -4.65245448E-01;
  COFD[3183] = 1.90865967E-02;
  COFD[3184] = -2.18266337E+01;
  COFD[3185] = 5.44634823E+00;
  COFD[3186] = -4.65245448E-01;
  COFD[3187] = 1.90865967E-02;
  COFD[3188] = -2.21479940E+01;
  COFD[3189] = 5.48719572E+00;
  COFD[3190] = -4.64022066E-01;
  COFD[3191] = 1.87848905E-02;
  COFD[3192] = -2.21018977E+01;
  COFD[3193] = 5.48702704E+00;
  COFD[3194] = -4.64023035E-01;
  COFD[3195] = 1.87858024E-02;
  COFD[3196] = -2.21898975E+01;
  COFD[3197] = 5.46750298E+00;
  COFD[3198] = -4.64484282E-01;
  COFD[3199] = 1.89196260E-02;
  COFD[3200] = -2.21759631E+01;
  COFD[3201] = 5.46726363E+00;
  COFD[3202] = -4.65349411E-01;
  COFD[3203] = 1.89911285E-02;
  COFD[3204] = -2.18947777E+01;
  COFD[3205] = 5.49121786E+00;
  COFD[3206] = -4.60888505E-01;
  COFD[3207] = 1.85096783E-02;
  COFD[3208] = -2.18987128E+01;
  COFD[3209] = 5.49121786E+00;
  COFD[3210] = -4.60888505E-01;
  COFD[3211] = 1.85096783E-02;
  COFD[3212] = -2.19808106E+01;
  COFD[3213] = 5.49090680E+00;
  COFD[3214] = -4.63910285E-01;
  COFD[3215] = 1.87574539E-02;
  COFD[3216] = -2.21435646E+01;
  COFD[3217] = 5.48236053E+00;
  COFD[3218] = -4.63887012E-01;
  COFD[3219] = 1.87976815E-02;
  COFD[3220] = -2.24398733E+01;
  COFD[3221] = 5.48692553E+00;
  COFD[3222] = -4.59231858E-01;
  COFD[3223] = 1.83961320E-02;
  COFD[3224] = -2.24071991E+01;
  COFD[3225] = 5.48692553E+00;
  COFD[3226] = -4.59231858E-01;
  COFD[3227] = 1.83961320E-02;
  COFD[3228] = -2.14802331E+01;
  COFD[3229] = 5.41058359E+00;
  COFD[3230] = -4.64178328E-01;
  COFD[3231] = 1.91784294E-02;
  COFD[3232] = -2.15435115E+01;
  COFD[3233] = 5.42458950E+00;
  COFD[3234] = -4.65212987E-01;
  COFD[3235] = 1.91930766E-02;
  COFD[3236] = -2.25261132E+01;
  COFD[3237] = 5.49111268E+00;
  COFD[3238] = -4.61324030E-01;
  COFD[3239] = 1.85456734E-02;
  COFD[3240] = -2.22850585E+01;
  COFD[3241] = 5.49115033E+00;
  COFD[3242] = -4.62266752E-01;
  COFD[3243] = 1.86223135E-02;
  COFD[3244] = -2.23629202E+01;
  COFD[3245] = 5.49413323E+00;
  COFD[3246] = -4.63498940E-01;
  COFD[3247] = 1.87080519E-02;
  COFD[3248] = -2.24277147E+01;
  COFD[3249] = 5.48901287E+00;
  COFD[3250] = -4.60031399E-01;
  COFD[3251] = 1.84508313E-02;
  COFD[3252] = -2.25044450E+01;
  COFD[3253] = 5.49111268E+00;
  COFD[3254] = -4.61324030E-01;
  COFD[3255] = 1.85456734E-02;
  COFD[3256] = -2.25029926E+01;
  COFD[3257] = 5.49111268E+00;
  COFD[3258] = -4.61324030E-01;
  COFD[3259] = 1.85456734E-02;
  COFD[3260] = -2.25951542E+01;
  COFD[3261] = 5.49332573E+00;
  COFD[3262] = -4.62935001E-01;
  COFD[3263] = 1.86660283E-02;
  COFD[3264] = -2.27384984E+01;
  COFD[3265] = 5.46322829E+00;
  COFD[3266] = -4.51749940E-01;
  COFD[3267] = 1.79075310E-02;
  COFD[3268] = -2.27384984E+01;
  COFD[3269] = 5.46322829E+00;
  COFD[3270] = -4.51749940E-01;
  COFD[3271] = 1.79075310E-02;
  COFD[3272] = -2.27384984E+01;
  COFD[3273] = 5.46322829E+00;
  COFD[3274] = -4.51749940E-01;
  COFD[3275] = 1.79075310E-02;
  COFD[3276] = -2.27384984E+01;
  COFD[3277] = 5.46322829E+00;
  COFD[3278] = -4.51749940E-01;
  COFD[3279] = 1.79075310E-02;
  COFD[3280] = -2.27384984E+01;
  COFD[3281] = 5.46322829E+00;
  COFD[3282] = -4.51749940E-01;
  COFD[3283] = 1.79075310E-02;
  COFD[3284] = -2.29301040E+01;
  COFD[3285] = 5.43667678E+00;
  COFD[3286] = -4.45729487E-01;
  COFD[3287] = 1.75510667E-02;
  COFD[3288] = -2.26898731E+01;
  COFD[3289] = 5.48310931E+00;
  COFD[3290] = -4.57615590E-01;
  COFD[3291] = 1.82838764E-02;
  COFD[3292] = -2.26898731E+01;
  COFD[3293] = 5.48310931E+00;
  COFD[3294] = -4.57615590E-01;
  COFD[3295] = 1.82838764E-02;
  COFD[3296] = -1.71876461E+01;
  COFD[3297] = 4.03536932E+00;
  COFD[3298] = -3.04548174E-01;
  COFD[3299] = 1.29965591E-02;
  COFD[3300] = -1.72383069E+01;
  COFD[3301] = 4.60447813E+00;
  COFD[3302] = -3.73889368E-01;
  COFD[3303] = 1.58229235E-02;
  COFD[3304] = -1.35400163E+01;
  COFD[3305] = 3.05984388E+00;
  COFD[3306] = -1.83114865E-01;
  COFD[3307] = 7.94950068E-03;
  COFD[3308] = -1.65749585E+01;
  COFD[3309] = 3.87564052E+00;
  COFD[3310] = -2.85285750E-01;
  COFD[3311] = 1.22208235E-02;
  COFD[3312] = -1.78913839E+01;
  COFD[3313] = 4.20508193E+00;
  COFD[3314] = -3.25158699E-01;
  COFD[3315] = 1.38321131E-02;
  COFD[3316] = -1.65944463E+01;
  COFD[3317] = 3.87564052E+00;
  COFD[3318] = -2.85285750E-01;
  COFD[3319] = 1.22208235E-02;
  COFD[3320] = -2.16875885E+01;
  COFD[3321] = 5.44394964E+00;
  COFD[3322] = -4.47152201E-01;
  COFD[3323] = 1.76308159E-02;
  COFD[3324] = -1.75720764E+01;
  COFD[3325] = 4.08497111E+00;
  COFD[3326] = -3.10470821E-01;
  COFD[3327] = 1.32322450E-02;
  COFD[3328] = -2.09117806E+01;
  COFD[3329] = 5.19204548E+00;
  COFD[3330] = -4.40915128E-01;
  COFD[3331] = 1.83664930E-02;
  COFD[3332] = -1.88495260E+01;
  COFD[3333] = 4.59285496E+00;
  COFD[3334] = -3.72450186E-01;
  COFD[3335] = 1.57632217E-02;
  COFD[3336] = -1.87781302E+01;
  COFD[3337] = 4.56428962E+00;
  COFD[3338] = -3.68938951E-01;
  COFD[3339] = 1.56186844E-02;
  COFD[3340] = -1.78987051E+01;
  COFD[3341] = 4.20508193E+00;
  COFD[3342] = -3.25158699E-01;
  COFD[3343] = 1.38321131E-02;
  COFD[3344] = -1.79056916E+01;
  COFD[3345] = 4.20508193E+00;
  COFD[3346] = -3.25158699E-01;
  COFD[3347] = 1.38321131E-02;
  COFD[3348] = -2.20665110E+01;
  COFD[3349] = 5.48219421E+00;
  COFD[3350] = -4.57118011E-01;
  COFD[3351] = 1.82481275E-02;
  COFD[3352] = -2.09960895E+01;
  COFD[3353] = 5.19982587E+00;
  COFD[3354] = -4.41557143E-01;
  COFD[3355] = 1.83799644E-02;
  COFD[3356] = -2.06929738E+01;
  COFD[3357] = 5.17836635E+00;
  COFD[3358] = -4.39728088E-01;
  COFD[3359] = 1.83380035E-02;
  COFD[3360] = -2.09876380E+01;
  COFD[3361] = 5.19982587E+00;
  COFD[3362] = -4.41557143E-01;
  COFD[3363] = 1.83799644E-02;
  COFD[3364] = -2.10431914E+01;
  COFD[3365] = 5.27526035E+00;
  COFD[3366] = -4.49795919E-01;
  COFD[3367] = 1.86768812E-02;
  COFD[3368] = -2.10531181E+01;
  COFD[3369] = 5.27526035E+00;
  COFD[3370] = -4.49795919E-01;
  COFD[3371] = 1.86768812E-02;
  COFD[3372] = -2.21440836E+01;
  COFD[3373] = 5.49388984E+00;
  COFD[3374] = -4.63572253E-01;
  COFD[3375] = 1.87152221E-02;
  COFD[3376] = -1.89560173E+01;
  COFD[3377] = 4.65931164E+00;
  COFD[3378] = -3.80642811E-01;
  COFD[3379] = 1.61015362E-02;
  COFD[3380] = -2.21535251E+01;
  COFD[3381] = 5.49388984E+00;
  COFD[3382] = -4.63572253E-01;
  COFD[3383] = 1.87152221E-02;
  COFD[3384] = -2.18265875E+01;
  COFD[3385] = 5.43667692E+00;
  COFD[3386] = -4.65640530E-01;
  COFD[3387] = 1.91675299E-02;
  COFD[3388] = -2.17124982E+01;
  COFD[3389] = 5.41757449E+00;
  COFD[3390] = -4.64778880E-01;
  COFD[3391] = 1.91926324E-02;
  COFD[3392] = -2.21080348E+01;
  COFD[3393] = 5.45729646E+00;
  COFD[3394] = -4.65340425E-01;
  COFD[3395] = 1.90398312E-02;
  COFD[3396] = -2.18357154E+01;
  COFD[3397] = 5.40839175E+00;
  COFD[3398] = -4.63980205E-01;
  COFD[3399] = 1.91731580E-02;
  COFD[3400] = -2.20876715E+01;
  COFD[3401] = 5.45582845E+00;
  COFD[3402] = -4.65322899E-01;
  COFD[3403] = 1.90457166E-02;
  COFD[3404] = -2.20907830E+01;
  COFD[3405] = 5.45582845E+00;
  COFD[3406] = -4.65322899E-01;
  COFD[3407] = 1.90457166E-02;
  COFD[3408] = -2.24030761E+01;
  COFD[3409] = 5.49379864E+00;
  COFD[3410] = -4.63600612E-01;
  COFD[3411] = 1.87179811E-02;
  COFD[3412] = -2.23618103E+01;
  COFD[3413] = 5.49374441E+00;
  COFD[3414] = -4.63617711E-01;
  COFD[3415] = 1.87196409E-02;
  COFD[3416] = -2.24187132E+01;
  COFD[3417] = 5.46873098E+00;
  COFD[3418] = -4.63395699E-01;
  COFD[3419] = 1.88249267E-02;
  COFD[3420] = -2.24012726E+01;
  COFD[3421] = 5.46734823E+00;
  COFD[3422] = -4.64115641E-01;
  COFD[3423] = 1.88903818E-02;
  COFD[3424] = -2.21526520E+01;
  COFD[3425] = 5.48560730E+00;
  COFD[3426] = -4.58746417E-01;
  COFD[3427] = 1.83631968E-02;
  COFD[3428] = -2.21566749E+01;
  COFD[3429] = 5.48560730E+00;
  COFD[3430] = -4.58746417E-01;
  COFD[3431] = 1.83631968E-02;
  COFD[3432] = -2.22439277E+01;
  COFD[3433] = 5.49328085E+00;
  COFD[3434] = -4.62887295E-01;
  COFD[3435] = 1.86623580E-02;
  COFD[3436] = -2.24030357E+01;
  COFD[3437] = 5.49189132E+00;
  COFD[3438] = -4.63888808E-01;
  COFD[3439] = 1.87508465E-02;
  COFD[3440] = -2.26640907E+01;
  COFD[3441] = 5.48256348E+00;
  COFD[3442] = -4.57308388E-01;
  COFD[3443] = 1.82617123E-02;
  COFD[3444] = -2.26305009E+01;
  COFD[3445] = 5.48256348E+00;
  COFD[3446] = -4.57308388E-01;
  COFD[3447] = 1.82617123E-02;
  COFD[3448] = -2.17739332E+01;
  COFD[3449] = 5.42865606E+00;
  COFD[3450] = -4.65447368E-01;
  COFD[3451] = 1.91919264E-02;
  COFD[3452] = -2.18211916E+01;
  COFD[3453] = 5.43667692E+00;
  COFD[3454] = -4.65640530E-01;
  COFD[3455] = 1.91675299E-02;
  COFD[3456] = -2.27415244E+01;
  COFD[3457] = 5.48750049E+00;
  COFD[3458] = -4.59445591E-01;
  COFD[3459] = 1.84106692E-02;
  COFD[3460] = -2.25234135E+01;
  COFD[3461] = 5.49116738E+00;
  COFD[3462] = -4.60872204E-01;
  COFD[3463] = 1.85085987E-02;
  COFD[3464] = -2.25845659E+01;
  COFD[3465] = 5.49074590E+00;
  COFD[3466] = -4.61641528E-01;
  COFD[3467] = 1.85733572E-02;
  COFD[3468] = -2.26462108E+01;
  COFD[3469] = 5.48378580E+00;
  COFD[3470] = -4.57964754E-01;
  COFD[3471] = 1.83088022E-02;
  COFD[3472] = -2.27192610E+01;
  COFD[3473] = 5.48750049E+00;
  COFD[3474] = -4.59445591E-01;
  COFD[3475] = 1.84106692E-02;
  COFD[3476] = -2.27177696E+01;
  COFD[3477] = 5.48750049E+00;
  COFD[3478] = -4.59445591E-01;
  COFD[3479] = 1.84106692E-02;
  COFD[3480] = -2.28059431E+01;
  COFD[3481] = 5.49118368E+00;
  COFD[3482] = -4.61244560E-01;
  COFD[3483] = 1.85388488E-02;
  COFD[3484] = -2.29193637E+01;
  COFD[3485] = 5.44974657E+00;
  COFD[3486] = -4.48651670E-01;
  COFD[3487] = 1.77235430E-02;
  COFD[3488] = -2.29193637E+01;
  COFD[3489] = 5.44974657E+00;
  COFD[3490] = -4.48651670E-01;
  COFD[3491] = 1.77235430E-02;
  COFD[3492] = -2.29193637E+01;
  COFD[3493] = 5.44974657E+00;
  COFD[3494] = -4.48651670E-01;
  COFD[3495] = 1.77235430E-02;
  COFD[3496] = -2.29193637E+01;
  COFD[3497] = 5.44974657E+00;
  COFD[3498] = -4.48651670E-01;
  COFD[3499] = 1.77235430E-02;
  COFD[3500] = -2.29193637E+01;
  COFD[3501] = 5.44974657E+00;
  COFD[3502] = -4.48651670E-01;
  COFD[3503] = 1.77235430E-02;
  COFD[3504] = -2.30716871E+01;
  COFD[3505] = 5.41058317E+00;
  COFD[3506] = -4.40692244E-01;
  COFD[3507] = 1.72706793E-02;
  COFD[3508] = -2.28904169E+01;
  COFD[3509] = 5.47759909E+00;
  COFD[3510] = -4.55570838E-01;
  COFD[3511] = 1.81456235E-02;
  COFD[3512] = -2.28904169E+01;
  COFD[3513] = 5.47759909E+00;
  COFD[3514] = -4.55570838E-01;
  COFD[3515] = 1.81456235E-02;
  COFD[3516] = -1.75452793E+01;
  COFD[3517] = 4.07809359E+00;
  COFD[3518] = -3.09646036E-01;
  COFD[3519] = 1.31992743E-02;
  COFD[3520] = -1.73283185E+01;
  COFD[3521] = 4.71167685E+00;
  COFD[3522] = -3.87004255E-01;
  COFD[3523] = 1.63602477E-02;
  COFD[3524] = -1.35217557E+01;
  COFD[3525] = 3.12061076E+00;
  COFD[3526] = -1.90761802E-01;
  COFD[3527] = 8.27051223E-03;
  COFD[3528] = -1.65490061E+01;
  COFD[3529] = 3.93824541E+00;
  COFD[3530] = -2.92787590E-01;
  COFD[3531] = 1.25209211E-02;
  COFD[3532] = -1.79874309E+01;
  COFD[3533] = 4.31259444E+00;
  COFD[3534] = -3.38584827E-01;
  COFD[3535] = 1.43931810E-02;
  COFD[3536] = -1.65677075E+01;
  COFD[3537] = 3.93824541E+00;
  COFD[3538] = -2.92787590E-01;
  COFD[3539] = 1.25209211E-02;
  COFD[3540] = -2.14228143E+01;
  COFD[3541] = 5.39388015E+00;
  COFD[3542] = -4.37574572E-01;
  COFD[3543] = 1.70997728E-02;
  COFD[3544] = -1.76332810E+01;
  COFD[3545] = 4.17526194E+00;
  COFD[3546] = -3.21478247E-01;
  COFD[3547] = 1.36802836E-02;
  COFD[3548] = -2.09263112E+01;
  COFD[3549] = 5.25757923E+00;
  COFD[3550] = -4.47803407E-01;
  COFD[3551] = 1.86021883E-02;
  COFD[3552] = -1.89723550E+01;
  COFD[3553] = 4.70175320E+00;
  COFD[3554] = -3.85802299E-01;
  COFD[3555] = 1.63115029E-02;
  COFD[3556] = -1.89035547E+01;
  COFD[3557] = 4.67519664E+00;
  COFD[3558] = -3.82581158E-01;
  COFD[3559] = 1.61807120E-02;
  COFD[3560] = -1.79943292E+01;
  COFD[3561] = 4.31259444E+00;
  COFD[3562] = -3.38584827E-01;
  COFD[3563] = 1.43931810E-02;
  COFD[3564] = -1.80009067E+01;
  COFD[3565] = 4.31259444E+00;
  COFD[3566] = -3.38584827E-01;
  COFD[3567] = 1.43931810E-02;
  COFD[3568] = -2.18979200E+01;
  COFD[3569] = 5.46783880E+00;
  COFD[3570] = -4.52790454E-01;
  COFD[3571] = 1.79689550E-02;
  COFD[3572] = -2.10511753E+01;
  COFD[3573] = 5.27526035E+00;
  COFD[3574] = -4.49795919E-01;
  COFD[3575] = 1.86768812E-02;
  COFD[3576] = -2.06697965E+01;
  COFD[3577] = 5.22838636E+00;
  COFD[3578] = -4.44511745E-01;
  COFD[3579] = 1.84787582E-02;
  COFD[3580] = -2.10431914E+01;
  COFD[3581] = 5.27526035E+00;
  COFD[3582] = -4.49795919E-01;
  COFD[3583] = 1.86768812E-02;
  COFD[3584] = -2.10907983E+01;
  COFD[3585] = 5.35206716E+00;
  COFD[3586] = -4.58271471E-01;
  COFD[3587] = 1.89872276E-02;
  COFD[3588] = -2.11002037E+01;
  COFD[3589] = 5.35206716E+00;
  COFD[3590] = -4.58271471E-01;
  COFD[3591] = 1.89872276E-02;
  COFD[3592] = -2.20077587E+01;
  COFD[3593] = 5.49007189E+00;
  COFD[3594] = -4.60469654E-01;
  COFD[3595] = 1.84812405E-02;
  COFD[3596] = -1.90051205E+01;
  COFD[3597] = 4.75627153E+00;
  COFD[3598] = -3.92329566E-01;
  COFD[3599] = 1.65729779E-02;
  COFD[3600] = -2.20165882E+01;
  COFD[3601] = 5.49007189E+00;
  COFD[3602] = -4.60469654E-01;
  COFD[3603] = 1.84812405E-02;
  COFD[3604] = -2.17331228E+01;
  COFD[3605] = 5.45061574E+00;
  COFD[3606] = -4.65241893E-01;
  COFD[3607] = 1.90650429E-02;
  COFD[3608] = -2.16354931E+01;
  COFD[3609] = 5.44000785E+00;
  COFD[3610] = -4.65569459E-01;
  COFD[3611] = 1.91449572E-02;
  COFD[3612] = -2.20094778E+01;
  COFD[3613] = 5.46751578E+00;
  COFD[3614] = -4.64445737E-01;
  COFD[3615] = 1.89164296E-02;
  COFD[3616] = -2.17843663E+01;
  COFD[3617] = 5.43695150E+00;
  COFD[3618] = -4.65634641E-01;
  COFD[3619] = 1.91656663E-02;
  COFD[3620] = -2.19910305E+01;
  COFD[3621] = 5.46745929E+00;
  COFD[3622] = -4.64624358E-01;
  COFD[3623] = 1.89312280E-02;
  COFD[3624] = -2.19939215E+01;
  COFD[3625] = 5.46745929E+00;
  COFD[3626] = -4.64624358E-01;
  COFD[3627] = 1.89312280E-02;
  COFD[3628] = -2.22791681E+01;
  COFD[3629] = 5.49021632E+00;
  COFD[3630] = -4.60531670E-01;
  COFD[3631] = 1.84855708E-02;
  COFD[3632] = -2.22347856E+01;
  COFD[3633] = 5.49030211E+00;
  COFD[3634] = -4.60568793E-01;
  COFD[3635] = 1.84881663E-02;
  COFD[3636] = -2.23577513E+01;
  COFD[3637] = 5.49008914E+00;
  COFD[3638] = -4.63927959E-01;
  COFD[3639] = 1.87629280E-02;
  COFD[3640] = -2.23264299E+01;
  COFD[3641] = 5.48315923E+00;
  COFD[3642] = -4.63919102E-01;
  COFD[3643] = 1.87963630E-02;
  COFD[3644] = -2.19909747E+01;
  COFD[3645] = 5.47597765E+00;
  COFD[3646] = -4.55020526E-01;
  COFD[3647] = 1.81091205E-02;
  COFD[3648] = -2.19947271E+01;
  COFD[3649] = 5.47597765E+00;
  COFD[3650] = -4.55020526E-01;
  COFD[3651] = 1.81091205E-02;
  COFD[3652] = -2.21031421E+01;
  COFD[3653] = 5.48779691E+00;
  COFD[3654] = -4.59557311E-01;
  COFD[3655] = 1.84182884E-02;
  COFD[3656] = -2.22872244E+01;
  COFD[3657] = 5.49118605E+00;
  COFD[3658] = -4.61241736E-01;
  COFD[3659] = 1.85386070E-02;
  COFD[3660] = -2.25112349E+01;
  COFD[3661] = 5.46943905E+00;
  COFD[3662] = -4.53145052E-01;
  COFD[3663] = 1.79897579E-02;
  COFD[3664] = -2.24804350E+01;
  COFD[3665] = 5.46943905E+00;
  COFD[3666] = -4.53145052E-01;
  COFD[3667] = 1.79897579E-02;
  COFD[3668] = -2.16835860E+01;
  COFD[3669] = 5.44455741E+00;
  COFD[3670] = -4.65313340E-01;
  COFD[3671] = 1.91011181E-02;
  COFD[3672] = -2.17280655E+01;
  COFD[3673] = 5.45061574E+00;
  COFD[3674] = -4.65241893E-01;
  COFD[3675] = 1.90650429E-02;
  COFD[3676] = -2.26080682E+01;
  COFD[3677] = 5.47808026E+00;
  COFD[3678] = -4.55721754E-01;
  COFD[3679] = 1.81554634E-02;
  COFD[3680] = -2.23850761E+01;
  COFD[3681] = 5.48227325E+00;
  COFD[3682] = -4.57157805E-01;
  COFD[3683] = 1.82509581E-02;
  COFD[3684] = -2.24589353E+01;
  COFD[3685] = 5.48421194E+00;
  COFD[3686] = -4.58197253E-01;
  COFD[3687] = 1.83255177E-02;
  COFD[3688] = -2.25056772E+01;
  COFD[3689] = 5.47343682E+00;
  COFD[3690] = -4.54166709E-01;
  COFD[3691] = 1.80526774E-02;
  COFD[3692] = -2.25876205E+01;
  COFD[3693] = 5.47808026E+00;
  COFD[3694] = -4.55721754E-01;
  COFD[3695] = 1.81554634E-02;
  COFD[3696] = -2.25862481E+01;
  COFD[3697] = 5.47808026E+00;
  COFD[3698] = -4.55721754E-01;
  COFD[3699] = 1.81554634E-02;
  COFD[3700] = -2.26835052E+01;
  COFD[3701] = 5.48311530E+00;
  COFD[3702] = -4.57619182E-01;
  COFD[3703] = 1.82841374E-02;
  COFD[3704] = -2.27214134E+01;
  COFD[3705] = 5.40961679E+00;
  COFD[3706] = -4.40511249E-01;
  COFD[3707] = 1.72607396E-02;
  COFD[3708] = -2.27214134E+01;
  COFD[3709] = 5.40961679E+00;
  COFD[3710] = -4.40511249E-01;
  COFD[3711] = 1.72607396E-02;
  COFD[3712] = -2.27214134E+01;
  COFD[3713] = 5.40961679E+00;
  COFD[3714] = -4.40511249E-01;
  COFD[3715] = 1.72607396E-02;
  COFD[3716] = -2.27214134E+01;
  COFD[3717] = 5.40961679E+00;
  COFD[3718] = -4.40511249E-01;
  COFD[3719] = 1.72607396E-02;
  COFD[3720] = -2.27214134E+01;
  COFD[3721] = 5.40961679E+00;
  COFD[3722] = -4.40511249E-01;
  COFD[3723] = 1.72607396E-02;
  COFD[3724] = -2.28355507E+01;
  COFD[3725] = 5.35124813E+00;
  COFD[3726] = -4.29932425E-01;
  COFD[3727] = 1.66897210E-02;
  COFD[3728] = -2.27371431E+01;
  COFD[3729] = 5.45828076E+00;
  COFD[3730] = -4.50591566E-01;
  COFD[3731] = 1.78383531E-02;
  COFD[3732] = -2.27371431E+01;
  COFD[3733] = 5.45828076E+00;
  COFD[3734] = -4.50591566E-01;
  COFD[3735] = 1.78383531E-02;
  COFD[3736] = -1.76034224E+01;
  COFD[3737] = 4.16734978E+00;
  COFD[3738] = -3.20508152E-01;
  COFD[3739] = 1.36405589E-02;
  COFD[3740] = -1.73290135E+01;
  COFD[3741] = 4.71167685E+00;
  COFD[3742] = -3.87004255E-01;
  COFD[3743] = 1.63602477E-02;
  COFD[3744] = -1.35230967E+01;
  COFD[3745] = 3.12061076E+00;
  COFD[3746] = -1.90761802E-01;
  COFD[3747] = 8.27051223E-03;
  COFD[3748] = -1.65561492E+01;
  COFD[3749] = 3.93824541E+00;
  COFD[3750] = -2.92787590E-01;
  COFD[3751] = 1.25209211E-02;
  COFD[3752] = -1.79978123E+01;
  COFD[3753] = 4.31259444E+00;
  COFD[3754] = -3.38584827E-01;
  COFD[3755] = 1.43931810E-02;
  COFD[3756] = -1.65751249E+01;
  COFD[3757] = 3.93824541E+00;
  COFD[3758] = -2.92787590E-01;
  COFD[3759] = 1.25209211E-02;
  COFD[3760] = -2.14304935E+01;
  COFD[3761] = 5.39388015E+00;
  COFD[3762] = -4.37574572E-01;
  COFD[3763] = 1.70997728E-02;
  COFD[3764] = -1.76430329E+01;
  COFD[3765] = 4.17526194E+00;
  COFD[3766] = -3.21478247E-01;
  COFD[3767] = 1.36802836E-02;
  COFD[3768] = -2.09381584E+01;
  COFD[3769] = 5.25757923E+00;
  COFD[3770] = -4.47803407E-01;
  COFD[3771] = 1.86021883E-02;
  COFD[3772] = -1.89792234E+01;
  COFD[3773] = 4.70175320E+00;
  COFD[3774] = -3.85802299E-01;
  COFD[3775] = 1.63115029E-02;
  COFD[3776] = -1.89107100E+01;
  COFD[3777] = 4.67519664E+00;
  COFD[3778] = -3.82581158E-01;
  COFD[3779] = 1.61807120E-02;
  COFD[3780] = -1.80048563E+01;
  COFD[3781] = 4.31259444E+00;
  COFD[3782] = -3.38584827E-01;
  COFD[3783] = 1.43931810E-02;
  COFD[3784] = -1.80115747E+01;
  COFD[3785] = 4.31259444E+00;
  COFD[3786] = -3.38584827E-01;
  COFD[3787] = 1.43931810E-02;
  COFD[3788] = -2.19080012E+01;
  COFD[3789] = 5.46783880E+00;
  COFD[3790] = -4.52790454E-01;
  COFD[3791] = 1.79689550E-02;
  COFD[3792] = -2.10612634E+01;
  COFD[3793] = 5.27526035E+00;
  COFD[3794] = -4.49795919E-01;
  COFD[3795] = 1.86768812E-02;
  COFD[3796] = -2.06795559E+01;
  COFD[3797] = 5.22838636E+00;
  COFD[3798] = -4.44511745E-01;
  COFD[3799] = 1.84787582E-02;
  COFD[3800] = -2.10531181E+01;
  COFD[3801] = 5.27526035E+00;
  COFD[3802] = -4.49795919E-01;
  COFD[3803] = 1.86768812E-02;
  COFD[3804] = -2.11002037E+01;
  COFD[3805] = 5.35206716E+00;
  COFD[3806] = -4.58271471E-01;
  COFD[3807] = 1.89872276E-02;
  COFD[3808] = -2.11097893E+01;
  COFD[3809] = 5.35206716E+00;
  COFD[3810] = -4.58271471E-01;
  COFD[3811] = 1.89872276E-02;
  COFD[3812] = -2.20194004E+01;
  COFD[3813] = 5.49007189E+00;
  COFD[3814] = -4.60469654E-01;
  COFD[3815] = 1.84812405E-02;
  COFD[3816] = -1.90166526E+01;
  COFD[3817] = 4.75627153E+00;
  COFD[3818] = -3.92329566E-01;
  COFD[3819] = 1.65729779E-02;
  COFD[3820] = -2.20284398E+01;
  COFD[3821] = 5.49007189E+00;
  COFD[3822] = -4.60469654E-01;
  COFD[3823] = 1.84812405E-02;
  COFD[3824] = -2.17445470E+01;
  COFD[3825] = 5.45061574E+00;
  COFD[3826] = -4.65241893E-01;
  COFD[3827] = 1.90650429E-02;
  COFD[3828] = -2.16471395E+01;
  COFD[3829] = 5.44000785E+00;
  COFD[3830] = -4.65569459E-01;
  COFD[3831] = 1.91449572E-02;
  COFD[3832] = -2.20222183E+01;
  COFD[3833] = 5.46751578E+00;
  COFD[3834] = -4.64445737E-01;
  COFD[3835] = 1.89164296E-02;
  COFD[3836] = -2.17961190E+01;
  COFD[3837] = 5.43695150E+00;
  COFD[3838] = -4.65634641E-01;
  COFD[3839] = 1.91656663E-02;
  COFD[3840] = -2.20038482E+01;
  COFD[3841] = 5.46745929E+00;
  COFD[3842] = -4.64624358E-01;
  COFD[3843] = 1.89312280E-02;
  COFD[3844] = -2.20068145E+01;
  COFD[3845] = 5.46745929E+00;
  COFD[3846] = -4.64624358E-01;
  COFD[3847] = 1.89312280E-02;
  COFD[3848] = -2.22921314E+01;
  COFD[3849] = 5.49021632E+00;
  COFD[3850] = -4.60531670E-01;
  COFD[3851] = 1.84855708E-02;
  COFD[3852] = -2.22478207E+01;
  COFD[3853] = 5.49030211E+00;
  COFD[3854] = -4.60568793E-01;
  COFD[3855] = 1.84881663E-02;
  COFD[3856] = -2.23714741E+01;
  COFD[3857] = 5.49008914E+00;
  COFD[3858] = -4.63927959E-01;
  COFD[3859] = 1.87629280E-02;
  COFD[3860] = -2.23402076E+01;
  COFD[3861] = 5.48315923E+00;
  COFD[3862] = -4.63919102E-01;
  COFD[3863] = 1.87963630E-02;
  COFD[3864] = -2.20031155E+01;
  COFD[3865] = 5.47597765E+00;
  COFD[3866] = -4.55020526E-01;
  COFD[3867] = 1.81091205E-02;
  COFD[3868] = -2.20069605E+01;
  COFD[3869] = 5.47597765E+00;
  COFD[3870] = -4.55020526E-01;
  COFD[3871] = 1.81091205E-02;
  COFD[3872] = -2.21159565E+01;
  COFD[3873] = 5.48779691E+00;
  COFD[3874] = -4.59557311E-01;
  COFD[3875] = 1.84182884E-02;
  COFD[3876] = -2.23001141E+01;
  COFD[3877] = 5.49118605E+00;
  COFD[3878] = -4.61241736E-01;
  COFD[3879] = 1.85386070E-02;
  COFD[3880] = -2.25268126E+01;
  COFD[3881] = 5.46943905E+00;
  COFD[3882] = -4.53145052E-01;
  COFD[3883] = 1.79897579E-02;
  COFD[3884] = -2.24950683E+01;
  COFD[3885] = 5.46943905E+00;
  COFD[3886] = -4.53145052E-01;
  COFD[3887] = 1.79897579E-02;
  COFD[3888] = -2.16951229E+01;
  COFD[3889] = 5.44455741E+00;
  COFD[3890] = -4.65313340E-01;
  COFD[3891] = 1.91011181E-02;
  COFD[3892] = -2.17393734E+01;
  COFD[3893] = 5.45061574E+00;
  COFD[3894] = -4.65241893E-01;
  COFD[3895] = 1.90650429E-02;
  COFD[3896] = -2.26232015E+01;
  COFD[3897] = 5.47808026E+00;
  COFD[3898] = -4.55721754E-01;
  COFD[3899] = 1.81554634E-02;
  COFD[3900] = -2.23989581E+01;
  COFD[3901] = 5.48227325E+00;
  COFD[3902] = -4.57157805E-01;
  COFD[3903] = 1.82509581E-02;
  COFD[3904] = -2.24727646E+01;
  COFD[3905] = 5.48421194E+00;
  COFD[3906] = -4.58197253E-01;
  COFD[3907] = 1.83255177E-02;
  COFD[3908] = -2.25201549E+01;
  COFD[3909] = 5.47343682E+00;
  COFD[3910] = -4.54166709E-01;
  COFD[3911] = 1.80526774E-02;
  COFD[3912] = -2.26021386E+01;
  COFD[3913] = 5.47808026E+00;
  COFD[3914] = -4.55721754E-01;
  COFD[3915] = 1.81554634E-02;
  COFD[3916] = -2.26007257E+01;
  COFD[3917] = 5.47808026E+00;
  COFD[3918] = -4.55721754E-01;
  COFD[3919] = 1.81554634E-02;
  COFD[3920] = -2.26985198E+01;
  COFD[3921] = 5.48311530E+00;
  COFD[3922] = -4.57619182E-01;
  COFD[3923] = 1.82841374E-02;
  COFD[3924] = -2.27372093E+01;
  COFD[3925] = 5.40961679E+00;
  COFD[3926] = -4.40511249E-01;
  COFD[3927] = 1.72607396E-02;
  COFD[3928] = -2.27372093E+01;
  COFD[3929] = 5.40961679E+00;
  COFD[3930] = -4.40511249E-01;
  COFD[3931] = 1.72607396E-02;
  COFD[3932] = -2.27372093E+01;
  COFD[3933] = 5.40961679E+00;
  COFD[3934] = -4.40511249E-01;
  COFD[3935] = 1.72607396E-02;
  COFD[3936] = -2.27372093E+01;
  COFD[3937] = 5.40961679E+00;
  COFD[3938] = -4.40511249E-01;
  COFD[3939] = 1.72607396E-02;
  COFD[3940] = -2.27372093E+01;
  COFD[3941] = 5.40961679E+00;
  COFD[3942] = -4.40511249E-01;
  COFD[3943] = 1.72607396E-02;
  COFD[3944] = -2.28518854E+01;
  COFD[3945] = 5.35124813E+00;
  COFD[3946] = -4.29932425E-01;
  COFD[3947] = 1.66897210E-02;
  COFD[3948] = -2.27525528E+01;
  COFD[3949] = 5.45828076E+00;
  COFD[3950] = -4.50591566E-01;
  COFD[3951] = 1.78383531E-02;
  COFD[3952] = -2.27525528E+01;
  COFD[3953] = 5.45828076E+00;
  COFD[3954] = -4.50591566E-01;
  COFD[3955] = 1.78383531E-02;
  COFD[3956] = -1.76131750E+01;
  COFD[3957] = 4.16734978E+00;
  COFD[3958] = -3.20508152E-01;
  COFD[3959] = 1.36405589E-02;
  COFD[3960] = -1.89960771E+01;
  COFD[3961] = 5.22783910E+00;
  COFD[3962] = -4.44450099E-01;
  COFD[3963] = 1.84764493E-02;
  COFD[3964] = -1.51423841E+01;
  COFD[3965] = 3.68565858E+00;
  COFD[3966] = -2.62077329E-01;
  COFD[3967] = 1.12749663E-02;
  COFD[3968] = -1.84519745E+01;
  COFD[3969] = 4.56059591E+00;
  COFD[3970] = -3.68504274E-01;
  COFD[3971] = 1.56015944E-02;
  COFD[3972] = -1.99640164E+01;
  COFD[3973] = 4.93673368E+00;
  COFD[3974] = -4.12924135E-01;
  COFD[3975] = 1.73539126E-02;
  COFD[3976] = -1.84739142E+01;
  COFD[3977] = 4.56059591E+00;
  COFD[3978] = -3.68504274E-01;
  COFD[3979] = 1.56015944E-02;
  COFD[3980] = -2.02357292E+01;
  COFD[3981] = 4.63893949E+00;
  COFD[3982] = -3.15589295E-01;
  COFD[3983] = 1.09248423E-02;
  COFD[3984] = -1.96817169E+01;
  COFD[3985] = 4.83908504E+00;
  COFD[3986] = -4.01914941E-01;
  COFD[3987] = 1.69425288E-02;
  COFD[3988] = -2.20938116E+01;
  COFD[3989] = 5.49242695E+00;
  COFD[3990] = -4.63877105E-01;
  COFD[3991] = 1.87472502E-02;
  COFD[3992] = -2.06886813E+01;
  COFD[3993] = 5.21843630E+00;
  COFD[3994] = -4.43374339E-01;
  COFD[3995] = 1.84354402E-02;
  COFD[3996] = -2.06489546E+01;
  COFD[3997] = 5.20348257E+00;
  COFD[3998] = -4.41867814E-01;
  COFD[3999] = 1.83870405E-02;
  COFD[4000] = -1.99727627E+01;
  COFD[4001] = 4.93673368E+00;
  COFD[4002] = -4.12924135E-01;
  COFD[4003] = 1.73539126E-02;
  COFD[4004] = -1.99811327E+01;
  COFD[4005] = 4.93673368E+00;
  COFD[4006] = -4.12924135E-01;
  COFD[4007] = 1.73539126E-02;
  COFD[4008] = -2.12524187E+01;
  COFD[4009] = 4.93163464E+00;
  COFD[4010] = -3.60831131E-01;
  COFD[4011] = 1.31516943E-02;
  COFD[4012] = -2.21540929E+01;
  COFD[4013] = 5.49388984E+00;
  COFD[4014] = -4.63572253E-01;
  COFD[4015] = 1.87152221E-02;
  COFD[4016] = -2.18686197E+01;
  COFD[4017] = 5.48743241E+00;
  COFD[4018] = -4.64013540E-01;
  COFD[4019] = 1.87830225E-02;
  COFD[4020] = -2.21440836E+01;
  COFD[4021] = 5.49388984E+00;
  COFD[4022] = -4.63572253E-01;
  COFD[4023] = 1.87152221E-02;
  COFD[4024] = -2.20077587E+01;
  COFD[4025] = 5.49007189E+00;
  COFD[4026] = -4.60469654E-01;
  COFD[4027] = 1.84812405E-02;
  COFD[4028] = -2.20194004E+01;
  COFD[4029] = 5.49007189E+00;
  COFD[4030] = -4.60469654E-01;
  COFD[4031] = 1.84812405E-02;
  COFD[4032] = -2.18359652E+01;
  COFD[4033] = 5.14861103E+00;
  COFD[4034] = -3.95646185E-01;
  COFD[4035] = 1.49071576E-02;
  COFD[4036] = -2.07927856E+01;
  COFD[4037] = 5.27033141E+00;
  COFD[4038] = -4.49240926E-01;
  COFD[4039] = 1.86560940E-02;
  COFD[4040] = -2.18475389E+01;
  COFD[4041] = 5.14861103E+00;
  COFD[4042] = -3.95646185E-01;
  COFD[4043] = 1.49071576E-02;
  COFD[4044] = -2.23377235E+01;
  COFD[4045] = 5.44415012E+00;
  COFD[4046] = -4.47195848E-01;
  COFD[4047] = 1.76333776E-02;
  COFD[4048] = -2.23100072E+01;
  COFD[4049] = 5.46199540E+00;
  COFD[4050] = -4.51467141E-01;
  COFD[4051] = 1.78907506E-02;
  COFD[4052] = -2.24302602E+01;
  COFD[4053] = 5.37317627E+00;
  COFD[4054] = -4.33806826E-01;
  COFD[4055] = 1.68960241E-02;
  COFD[4056] = -2.24752543E+01;
  COFD[4057] = 5.46734341E+00;
  COFD[4058] = -4.52681070E-01;
  COFD[4059] = 1.79625458E-02;
  COFD[4060] = -2.24254093E+01;
  COFD[4061] = 5.37839633E+00;
  COFD[4062] = -4.34732804E-01;
  COFD[4063] = 1.69454459E-02;
  COFD[4064] = -2.24293118E+01;
  COFD[4065] = 5.37839633E+00;
  COFD[4066] = -4.34732804E-01;
  COFD[4067] = 1.69454459E-02;
  COFD[4068] = -2.21212280E+01;
  COFD[4069] = 5.14996158E+00;
  COFD[4070] = -3.95874432E-01;
  COFD[4071] = 1.49190064E-02;
  COFD[4072] = -2.20808545E+01;
  COFD[4073] = 5.15076979E+00;
  COFD[4074] = -3.96011114E-01;
  COFD[4075] = 1.49261042E-02;
  COFD[4076] = -2.24838277E+01;
  COFD[4077] = 5.26658797E+00;
  COFD[4078] = -4.15335910E-01;
  COFD[4079] = 1.59229288E-02;
  COFD[4080] = -2.25382651E+01;
  COFD[4081] = 5.29559685E+00;
  COFD[4082] = -4.20288187E-01;
  COFD[4083] = 1.61815942E-02;
  COFD[4084] = -2.14996151E+01;
  COFD[4085] = 4.99422177E+00;
  COFD[4086] = -3.70645569E-01;
  COFD[4087] = 1.36394075E-02;
  COFD[4088] = -2.15045910E+01;
  COFD[4089] = 4.99422177E+00;
  COFD[4090] = -3.70645569E-01;
  COFD[4091] = 1.36394075E-02;
  COFD[4092] = -2.19030728E+01;
  COFD[4093] = 5.12829880E+00;
  COFD[4094] = -3.92242339E-01;
  COFD[4095] = 1.47312337E-02;
  COFD[4096] = -2.21678089E+01;
  COFD[4097] = 5.16786857E+00;
  COFD[4098] = -3.98913959E-01;
  COFD[4099] = 1.50771754E-02;
  COFD[4100] = -2.19419415E+01;
  COFD[4101] = 4.93929985E+00;
  COFD[4102] = -3.62032491E-01;
  COFD[4103] = 1.32113867E-02;
  COFD[4104] = -2.18976991E+01;
  COFD[4105] = 4.93929985E+00;
  COFD[4106] = -3.62032491E-01;
  COFD[4107] = 1.32113867E-02;
  COFD[4108] = -2.23238195E+01;
  COFD[4109] = 5.45282659E+00;
  COFD[4110] = -4.49336536E-01;
  COFD[4111] = 1.77637787E-02;
  COFD[4112] = -2.23311597E+01;
  COFD[4113] = 5.44415012E+00;
  COFD[4114] = -4.47195848E-01;
  COFD[4115] = 1.76333776E-02;
  COFD[4116] = -2.21890763E+01;
  COFD[4117] = 5.01596880E+00;
  COFD[4118] = -3.74075989E-01;
  COFD[4119] = 1.38104375E-02;
  COFD[4120] = -2.20442369E+01;
  COFD[4121] = 5.05908558E+00;
  COFD[4122] = -3.80945929E-01;
  COFD[4123] = 1.41553816E-02;
  COFD[4124] = -2.21907724E+01;
  COFD[4125] = 5.09350157E+00;
  COFD[4126] = -3.86533585E-01;
  COFD[4127] = 1.44394093E-02;
  COFD[4128] = -2.19740125E+01;
  COFD[4129] = 4.96635252E+00;
  COFD[4130] = -3.66267779E-01;
  COFD[4131] = 1.34216831E-02;
  COFD[4132] = -2.21599351E+01;
  COFD[4133] = 5.01596880E+00;
  COFD[4134] = -3.74075989E-01;
  COFD[4135] = 1.38104375E-02;
  COFD[4136] = -2.21579970E+01;
  COFD[4137] = 5.01596880E+00;
  COFD[4138] = -3.74075989E-01;
  COFD[4139] = 1.38104375E-02;
  COFD[4140] = -2.23860649E+01;
  COFD[4141] = 5.07468436E+00;
  COFD[4142] = -3.83473296E-01;
  COFD[4143] = 1.42836887E-02;
  COFD[4144] = -2.16898552E+01;
  COFD[4145] = 4.68658569E+00;
  COFD[4146] = -3.22849054E-01;
  COFD[4147] = 1.12788192E-02;
  COFD[4148] = -2.16898552E+01;
  COFD[4149] = 4.68658569E+00;
  COFD[4150] = -3.22849054E-01;
  COFD[4151] = 1.12788192E-02;
  COFD[4152] = -2.16898552E+01;
  COFD[4153] = 4.68658569E+00;
  COFD[4154] = -3.22849054E-01;
  COFD[4155] = 1.12788192E-02;
  COFD[4156] = -2.16898552E+01;
  COFD[4157] = 4.68658569E+00;
  COFD[4158] = -3.22849054E-01;
  COFD[4159] = 1.12788192E-02;
  COFD[4160] = -2.16898552E+01;
  COFD[4161] = 4.68658569E+00;
  COFD[4162] = -3.22849054E-01;
  COFD[4163] = 1.12788192E-02;
  COFD[4164] = -2.15840331E+01;
  COFD[4165] = 4.53462922E+00;
  COFD[4166] = -2.99463362E-01;
  COFD[4167] = 1.01311942E-02;
  COFD[4168] = -2.20529065E+01;
  COFD[4169] = 4.88259016E+00;
  COFD[4170] = -3.53111373E-01;
  COFD[4171] = 1.27672516E-02;
  COFD[4172] = -2.20529065E+01;
  COFD[4173] = 4.88259016E+00;
  COFD[4174] = -3.53111373E-01;
  COFD[4175] = 1.27672516E-02;
  COFD[4176] = -1.96541240E+01;
  COFD[4177] = 4.83228605E+00;
  COFD[4178] = -4.01127235E-01;
  COFD[4179] = 1.69121265E-02;
  COFD[4180] = -1.47582655E+01;
  COFD[4181] = 3.96253155E+00;
  COFD[4182] = -2.95745106E-01;
  COFD[4183] = 1.26413618E-02;
  COFD[4184] = -1.17244117E+01;
  COFD[4185] = 2.59606889E+00;
  COFD[4186] = -1.23237035E-01;
  COFD[4187] = 5.36924411E-03;
  COFD[4188] = -1.44910255E+01;
  COFD[4189] = 3.31811351E+00;
  COFD[4190] = -2.15918664E-01;
  COFD[4191] = 9.33972748E-03;
  COFD[4192] = -1.58630990E+01;
  COFD[4193] = 3.64628858E+00;
  COFD[4194] = -2.57092933E-01;
  COFD[4195] = 1.10642427E-02;
  COFD[4196] = -1.45128143E+01;
  COFD[4197] = 3.31811351E+00;
  COFD[4198] = -2.15918664E-01;
  COFD[4199] = 9.33972748E-03;
  COFD[4200] = -2.07110770E+01;
  COFD[4201] = 5.44973198E+00;
  COFD[4202] = -4.65238176E-01;
  COFD[4203] = 1.90691386E-02;
  COFD[4204] = -1.55380352E+01;
  COFD[4205] = 3.51529689E+00;
  COFD[4206] = -2.40382392E-01;
  COFD[4207] = 1.03523419E-02;
  COFD[4208] = -1.88249656E+01;
  COFD[4209] = 4.63673045E+00;
  COFD[4210] = -3.77870004E-01;
  COFD[4211] = 1.59875055E-02;
  COFD[4212] = -1.65966931E+01;
  COFD[4213] = 3.95555732E+00;
  COFD[4214] = -2.94894134E-01;
  COFD[4215] = 1.26066350E-02;
  COFD[4216] = -1.65522771E+01;
  COFD[4217] = 3.93761009E+00;
  COFD[4218] = -2.92710565E-01;
  COFD[4219] = 1.25177995E-02;
  COFD[4220] = -1.58717526E+01;
  COFD[4221] = 3.64628858E+00;
  COFD[4222] = -2.57092933E-01;
  COFD[4223] = 1.10642427E-02;
  COFD[4224] = -1.58800324E+01;
  COFD[4225] = 3.64628858E+00;
  COFD[4226] = -2.57092933E-01;
  COFD[4227] = 1.10642427E-02;
  COFD[4228] = -2.10061167E+01;
  COFD[4229] = 5.40483692E+00;
  COFD[4230] = -4.63658873E-01;
  COFD[4231] = 1.91646114E-02;
  COFD[4232] = -1.89659261E+01;
  COFD[4233] = 4.65931164E+00;
  COFD[4234] = -3.80642811E-01;
  COFD[4235] = 1.61015362E-02;
  COFD[4236] = -1.85110980E+01;
  COFD[4237] = 4.59851812E+00;
  COFD[4238] = -3.73151692E-01;
  COFD[4239] = 1.57923348E-02;
  COFD[4240] = -1.89560173E+01;
  COFD[4241] = 4.65931164E+00;
  COFD[4242] = -3.80642811E-01;
  COFD[4243] = 1.61015362E-02;
  COFD[4244] = -1.90051205E+01;
  COFD[4245] = 4.75627153E+00;
  COFD[4246] = -3.92329566E-01;
  COFD[4247] = 1.65729779E-02;
  COFD[4248] = -1.90166526E+01;
  COFD[4249] = 4.75627153E+00;
  COFD[4250] = -3.92329566E-01;
  COFD[4251] = 1.65729779E-02;
  COFD[4252] = -2.07927856E+01;
  COFD[4253] = 5.27033141E+00;
  COFD[4254] = -4.49240926E-01;
  COFD[4255] = 1.86560940E-02;
  COFD[4256] = -1.65593926E+01;
  COFD[4257] = 3.99552704E+00;
  COFD[4258] = -2.99734066E-01;
  COFD[4259] = 1.28024419E-02;
  COFD[4260] = -2.08042172E+01;
  COFD[4261] = 5.27033141E+00;
  COFD[4262] = -4.49240926E-01;
  COFD[4263] = 1.86560940E-02;
  COFD[4264] = -1.99946934E+01;
  COFD[4265] = 4.99038775E+00;
  COFD[4266] = -4.19232899E-01;
  COFD[4267] = 1.76017333E-02;
  COFD[4268] = -1.97503238E+01;
  COFD[4269] = 4.91724977E+00;
  COFD[4270] = -4.10632023E-01;
  COFD[4271] = 1.72638615E-02;
  COFD[4272] = -2.04982249E+01;
  COFD[4273] = 5.09287074E+00;
  COFD[4274] = -4.30747337E-01;
  COFD[4275] = 1.80311502E-02;
  COFD[4276] = -1.99013700E+01;
  COFD[4277] = 4.90171993E+00;
  COFD[4278] = -4.08890008E-01;
  COFD[4279] = 1.71991689E-02;
  COFD[4280] = -2.04673045E+01;
  COFD[4281] = 5.08807429E+00;
  COFD[4282] = -4.30243518E-01;
  COFD[4283] = 1.80139269E-02;
  COFD[4284] = -2.04711532E+01;
  COFD[4285] = 5.08807429E+00;
  COFD[4286] = -4.30243518E-01;
  COFD[4287] = 1.80139269E-02;
  COFD[4288] = -2.11159635E+01;
  COFD[4289] = 5.26890914E+00;
  COFD[4290] = -4.49080646E-01;
  COFD[4291] = 1.86500850E-02;
  COFD[4292] = -2.10624847E+01;
  COFD[4293] = 5.26805363E+00;
  COFD[4294] = -4.48984207E-01;
  COFD[4295] = 1.86464682E-02;
  COFD[4296] = -2.10353516E+01;
  COFD[4297] = 5.18365882E+00;
  COFD[4298] = -4.40195806E-01;
  COFD[4299] = 1.83497181E-02;
  COFD[4300] = -2.09861326E+01;
  COFD[4301] = 5.16708806E+00;
  COFD[4302] = -4.38725884E-01;
  COFD[4303] = 1.83125969E-02;
  COFD[4304] = -2.10414394E+01;
  COFD[4305] = 5.37676571E+00;
  COFD[4306] = -4.60857509E-01;
  COFD[4307] = 1.90756062E-02;
  COFD[4308] = -2.10463513E+01;
  COFD[4309] = 5.37676571E+00;
  COFD[4310] = -4.60857509E-01;
  COFD[4311] = 1.90756062E-02;
  COFD[4312] = -2.09608889E+01;
  COFD[4313] = 5.29024160E+00;
  COFD[4314] = -4.51483508E-01;
  COFD[4315] = 1.87402157E-02;
  COFD[4316] = -2.10807180E+01;
  COFD[4317] = 5.24972538E+00;
  COFD[4318] = -4.46923248E-01;
  COFD[4319] = 1.85694358E-02;
  COFD[4320] = -2.17505179E+01;
  COFD[4321] = 5.40218903E+00;
  COFD[4322] = -4.63424692E-01;
  COFD[4323] = 1.91586776E-02;
  COFD[4324] = -2.17070345E+01;
  COFD[4325] = 5.40218903E+00;
  COFD[4326] = -4.63424692E-01;
  COFD[4327] = 1.91586776E-02;
  COFD[4328] = -1.98725457E+01;
  COFD[4329] = 4.95323342E+00;
  COFD[4330] = -4.14861803E-01;
  COFD[4331] = 1.74299070E-02;
  COFD[4332] = -1.99882068E+01;
  COFD[4333] = 4.99038775E+00;
  COFD[4334] = -4.19232899E-01;
  COFD[4335] = 1.76017333E-02;
  COFD[4336] = -2.17537864E+01;
  COFD[4337] = 5.36513529E+00;
  COFD[4338] = -4.59632397E-01;
  COFD[4339] = 1.90333966E-02;
  COFD[4340] = -2.14253663E+01;
  COFD[4341] = 5.34211391E+00;
  COFD[4342] = -4.57230216E-01;
  COFD[4343] = 1.89516739E-02;
  COFD[4344] = -2.14529261E+01;
  COFD[4345] = 5.31795346E+00;
  COFD[4346] = -4.54574565E-01;
  COFD[4347] = 1.88549001E-02;
  COFD[4348] = -2.17030046E+01;
  COFD[4349] = 5.39237617E+00;
  COFD[4350] = -4.62530602E-01;
  COFD[4351] = 1.91345681E-02;
  COFD[4352] = -2.17251324E+01;
  COFD[4353] = 5.36513529E+00;
  COFD[4354] = -4.59632397E-01;
  COFD[4355] = 1.90333966E-02;
  COFD[4356] = -2.17232257E+01;
  COFD[4357] = 5.36513529E+00;
  COFD[4358] = -4.59632397E-01;
  COFD[4359] = 1.90333966E-02;
  COFD[4360] = -2.17533145E+01;
  COFD[4361] = 5.33181444E+00;
  COFD[4362] = -4.56115824E-01;
  COFD[4363] = 1.89118833E-02;
  COFD[4364] = -2.22344628E+01;
  COFD[4365] = 5.44527718E+00;
  COFD[4366] = -4.65287801E-01;
  COFD[4367] = 1.90954247E-02;
  COFD[4368] = -2.22344628E+01;
  COFD[4369] = 5.44527718E+00;
  COFD[4370] = -4.65287801E-01;
  COFD[4371] = 1.90954247E-02;
  COFD[4372] = -2.22344628E+01;
  COFD[4373] = 5.44527718E+00;
  COFD[4374] = -4.65287801E-01;
  COFD[4375] = 1.90954247E-02;
  COFD[4376] = -2.22344628E+01;
  COFD[4377] = 5.44527718E+00;
  COFD[4378] = -4.65287801E-01;
  COFD[4379] = 1.90954247E-02;
  COFD[4380] = -2.22344628E+01;
  COFD[4381] = 5.44527718E+00;
  COFD[4382] = -4.65287801E-01;
  COFD[4383] = 1.90954247E-02;
  COFD[4384] = -2.25529552E+01;
  COFD[4385] = 5.46297654E+00;
  COFD[4386] = -4.65485734E-01;
  COFD[4387] = 1.90234280E-02;
  COFD[4388] = -2.20783416E+01;
  COFD[4389] = 5.42074110E+00;
  COFD[4390] = -4.64982008E-01;
  COFD[4391] = 1.91934150E-02;
  COFD[4392] = -2.20783416E+01;
  COFD[4393] = 5.42074110E+00;
  COFD[4394] = -4.64982008E-01;
  COFD[4395] = 1.91934150E-02;
  COFD[4396] = -1.55055942E+01;
  COFD[4397] = 3.50663983E+00;
  COFD[4398] = -2.39273841E-01;
  COFD[4399] = 1.03049488E-02;
  COFD[4400] = -1.89966132E+01;
  COFD[4401] = 5.22783910E+00;
  COFD[4402] = -4.44450099E-01;
  COFD[4403] = 1.84764493E-02;
  COFD[4404] = -1.51434323E+01;
  COFD[4405] = 3.68565858E+00;
  COFD[4406] = -2.62077329E-01;
  COFD[4407] = 1.12749663E-02;
  COFD[4408] = -1.84583225E+01;
  COFD[4409] = 4.56059591E+00;
  COFD[4410] = -3.68504274E-01;
  COFD[4411] = 1.56015944E-02;
  COFD[4412] = -1.99740050E+01;
  COFD[4413] = 4.93673368E+00;
  COFD[4414] = -4.12924135E-01;
  COFD[4415] = 1.73539126E-02;
  COFD[4416] = -1.84805488E+01;
  COFD[4417] = 4.56059591E+00;
  COFD[4418] = -3.68504274E-01;
  COFD[4419] = 1.56015944E-02;
  COFD[4420] = -2.02426410E+01;
  COFD[4421] = 4.63893949E+00;
  COFD[4422] = -3.15589295E-01;
  COFD[4423] = 1.09248423E-02;
  COFD[4424] = -1.96909514E+01;
  COFD[4425] = 4.83908504E+00;
  COFD[4426] = -4.01914941E-01;
  COFD[4427] = 1.69425288E-02;
  COFD[4428] = -2.21056537E+01;
  COFD[4429] = 5.49242695E+00;
  COFD[4430] = -4.63877105E-01;
  COFD[4431] = 1.87472502E-02;
  COFD[4432] = -2.06947458E+01;
  COFD[4433] = 5.21843630E+00;
  COFD[4434] = -4.43374339E-01;
  COFD[4435] = 1.84354402E-02;
  COFD[4436] = -2.06553153E+01;
  COFD[4437] = 5.20348257E+00;
  COFD[4438] = -4.41867814E-01;
  COFD[4439] = 1.83870405E-02;
  COFD[4440] = -1.99829293E+01;
  COFD[4441] = 4.93673368E+00;
  COFD[4442] = -4.12924135E-01;
  COFD[4443] = 1.73539126E-02;
  COFD[4444] = -1.99914727E+01;
  COFD[4445] = 4.93673368E+00;
  COFD[4446] = -4.12924135E-01;
  COFD[4447] = 1.73539126E-02;
  COFD[4448] = -2.12620447E+01;
  COFD[4449] = 4.93163464E+00;
  COFD[4450] = -3.60831131E-01;
  COFD[4451] = 1.31516943E-02;
  COFD[4452] = -2.21637272E+01;
  COFD[4453] = 5.49388984E+00;
  COFD[4454] = -4.63572253E-01;
  COFD[4455] = 1.87152221E-02;
  COFD[4456] = -2.18778630E+01;
  COFD[4457] = 5.48743241E+00;
  COFD[4458] = -4.64013540E-01;
  COFD[4459] = 1.87830225E-02;
  COFD[4460] = -2.21535251E+01;
  COFD[4461] = 5.49388984E+00;
  COFD[4462] = -4.63572253E-01;
  COFD[4463] = 1.87152221E-02;
  COFD[4464] = -2.20165882E+01;
  COFD[4465] = 5.49007189E+00;
  COFD[4466] = -4.60469654E-01;
  COFD[4467] = 1.84812405E-02;
  COFD[4468] = -2.20284398E+01;
  COFD[4469] = 5.49007189E+00;
  COFD[4470] = -4.60469654E-01;
  COFD[4471] = 1.84812405E-02;
  COFD[4472] = -2.18475389E+01;
  COFD[4473] = 5.14861103E+00;
  COFD[4474] = -3.95646185E-01;
  COFD[4475] = 1.49071576E-02;
  COFD[4476] = -2.08042172E+01;
  COFD[4477] = 5.27033141E+00;
  COFD[4478] = -4.49240926E-01;
  COFD[4479] = 1.86560940E-02;
  COFD[4480] = -2.18593868E+01;
  COFD[4481] = 5.14861103E+00;
  COFD[4482] = -3.95646185E-01;
  COFD[4483] = 1.49071576E-02;
  COFD[4484] = -2.23490161E+01;
  COFD[4485] = 5.44415012E+00;
  COFD[4486] = -4.47195848E-01;
  COFD[4487] = 1.76333776E-02;
  COFD[4488] = -2.23215870E+01;
  COFD[4489] = 5.46199540E+00;
  COFD[4490] = -4.51467141E-01;
  COFD[4491] = 1.78907506E-02;
  COFD[4492] = -2.24433044E+01;
  COFD[4493] = 5.37317627E+00;
  COFD[4494] = -4.33806826E-01;
  COFD[4495] = 1.68960241E-02;
  COFD[4496] = -2.24869727E+01;
  COFD[4497] = 5.46734341E+00;
  COFD[4498] = -4.52681070E-01;
  COFD[4499] = 1.79625458E-02;
  COFD[4500] = -2.24385601E+01;
  COFD[4501] = 5.37839633E+00;
  COFD[4502] = -4.34732804E-01;
  COFD[4503] = 1.69454459E-02;
  COFD[4504] = -2.24425670E+01;
  COFD[4505] = 5.37839633E+00;
  COFD[4506] = -4.34732804E-01;
  COFD[4507] = 1.69454459E-02;
  COFD[4508] = -2.21345811E+01;
  COFD[4509] = 5.14996158E+00;
  COFD[4510] = -3.95874432E-01;
  COFD[4511] = 1.49190064E-02;
  COFD[4512] = -2.20943079E+01;
  COFD[4513] = 5.15076979E+00;
  COFD[4514] = -3.96011114E-01;
  COFD[4515] = 1.49261042E-02;
  COFD[4516] = -2.24982629E+01;
  COFD[4517] = 5.26658797E+00;
  COFD[4518] = -4.15335910E-01;
  COFD[4519] = 1.59229288E-02;
  COFD[4520] = -2.25527803E+01;
  COFD[4521] = 5.29559685E+00;
  COFD[4522] = -4.20288187E-01;
  COFD[4523] = 1.61815942E-02;
  COFD[4524] = -2.15118459E+01;
  COFD[4525] = 4.99422177E+00;
  COFD[4526] = -3.70645569E-01;
  COFD[4527] = 1.36394075E-02;
  COFD[4528] = -2.15169457E+01;
  COFD[4529] = 4.99422177E+00;
  COFD[4530] = -3.70645569E-01;
  COFD[4531] = 1.36394075E-02;
  COFD[4532] = -2.19162190E+01;
  COFD[4533] = 5.12829880E+00;
  COFD[4534] = -3.92242339E-01;
  COFD[4535] = 1.47312337E-02;
  COFD[4536] = -2.21810595E+01;
  COFD[4537] = 5.16786857E+00;
  COFD[4538] = -3.98913959E-01;
  COFD[4539] = 1.50771754E-02;
  COFD[4540] = -2.19592226E+01;
  COFD[4541] = 4.93929985E+00;
  COFD[4542] = -3.62032491E-01;
  COFD[4543] = 1.32113867E-02;
  COFD[4544] = -2.19134934E+01;
  COFD[4545] = 4.93929985E+00;
  COFD[4546] = -3.62032491E-01;
  COFD[4547] = 1.32113867E-02;
  COFD[4548] = -2.23352574E+01;
  COFD[4549] = 5.45282659E+00;
  COFD[4550] = -4.49336536E-01;
  COFD[4551] = 1.77637787E-02;
  COFD[4552] = -2.23423033E+01;
  COFD[4553] = 5.44415012E+00;
  COFD[4554] = -4.47195848E-01;
  COFD[4555] = 1.76333776E-02;
  COFD[4556] = -2.22056476E+01;
  COFD[4557] = 5.01596880E+00;
  COFD[4558] = -3.74075989E-01;
  COFD[4559] = 1.38104375E-02;
  COFD[4560] = -2.20589047E+01;
  COFD[4561] = 5.05908558E+00;
  COFD[4562] = -3.80945929E-01;
  COFD[4563] = 1.41553816E-02;
  COFD[4564] = -2.22053629E+01;
  COFD[4565] = 5.09350157E+00;
  COFD[4566] = -3.86533585E-01;
  COFD[4567] = 1.44394093E-02;
  COFD[4568] = -2.19895695E+01;
  COFD[4569] = 4.96635252E+00;
  COFD[4570] = -3.66267779E-01;
  COFD[4571] = 1.34216831E-02;
  COFD[4572] = -2.21755534E+01;
  COFD[4573] = 5.01596880E+00;
  COFD[4574] = -3.74075989E-01;
  COFD[4575] = 1.38104375E-02;
  COFD[4576] = -2.21735540E+01;
  COFD[4577] = 5.01596880E+00;
  COFD[4578] = -3.74075989E-01;
  COFD[4579] = 1.38104375E-02;
  COFD[4580] = -2.24024497E+01;
  COFD[4581] = 5.07468436E+00;
  COFD[4582] = -3.83473296E-01;
  COFD[4583] = 1.42836887E-02;
  COFD[4584] = -2.17074916E+01;
  COFD[4585] = 4.68658569E+00;
  COFD[4586] = -3.22849054E-01;
  COFD[4587] = 1.12788192E-02;
  COFD[4588] = -2.17074916E+01;
  COFD[4589] = 4.68658569E+00;
  COFD[4590] = -3.22849054E-01;
  COFD[4591] = 1.12788192E-02;
  COFD[4592] = -2.17074916E+01;
  COFD[4593] = 4.68658569E+00;
  COFD[4594] = -3.22849054E-01;
  COFD[4595] = 1.12788192E-02;
  COFD[4596] = -2.17074916E+01;
  COFD[4597] = 4.68658569E+00;
  COFD[4598] = -3.22849054E-01;
  COFD[4599] = 1.12788192E-02;
  COFD[4600] = -2.17074916E+01;
  COFD[4601] = 4.68658569E+00;
  COFD[4602] = -3.22849054E-01;
  COFD[4603] = 1.12788192E-02;
  COFD[4604] = -2.16025672E+01;
  COFD[4605] = 4.53462922E+00;
  COFD[4606] = -2.99463362E-01;
  COFD[4607] = 1.01311942E-02;
  COFD[4608] = -2.20699172E+01;
  COFD[4609] = 4.88259016E+00;
  COFD[4610] = -3.53111373E-01;
  COFD[4611] = 1.27672516E-02;
  COFD[4612] = -2.20699172E+01;
  COFD[4613] = 4.88259016E+00;
  COFD[4614] = -3.53111373E-01;
  COFD[4615] = 1.27672516E-02;
  COFD[4616] = -1.96633593E+01;
  COFD[4617] = 4.83228605E+00;
  COFD[4618] = -4.01127235E-01;
  COFD[4619] = 1.69121265E-02;
  COFD[4620] = -1.82116095E+01;
  COFD[4621] = 4.94453558E+00;
  COFD[4622] = -4.13840584E-01;
  COFD[4623] = 1.73898654E-02;
  COFD[4624] = -1.43067480E+01;
  COFD[4625] = 3.34609996E+00;
  COFD[4626] = -2.19417637E-01;
  COFD[4627] = 9.48565577E-03;
  COFD[4628] = -1.74524152E+01;
  COFD[4629] = 4.17306000E+00;
  COFD[4630] = -3.21208070E-01;
  COFD[4631] = 1.36692112E-02;
  COFD[4632] = -1.89513037E+01;
  COFD[4633] = 4.56070745E+00;
  COFD[4634] = -3.68517396E-01;
  COFD[4635] = 1.56021102E-02;
  COFD[4636] = -1.74740547E+01;
  COFD[4637] = 4.17306000E+00;
  COFD[4638] = -3.21208070E-01;
  COFD[4639] = 1.36692112E-02;
  COFD[4640] = -2.13313640E+01;
  COFD[4641] = 5.17422070E+00;
  COFD[4642] = -3.99997068E-01;
  COFD[4643] = 1.51336871E-02;
  COFD[4644] = -1.86750684E+01;
  COFD[4645] = 4.46203550E+00;
  COFD[4646] = -3.56905086E-01;
  COFD[4647] = 1.51454720E-02;
  COFD[4648] = -2.17754460E+01;
  COFD[4649] = 5.43321422E+00;
  COFD[4650] = -4.65643875E-01;
  COFD[4651] = 1.91852144E-02;
  COFD[4652] = -1.98761292E+01;
  COFD[4653] = 4.93512898E+00;
  COFD[4654] = -4.12735698E-01;
  COFD[4655] = 1.73465233E-02;
  COFD[4656] = -1.98121399E+01;
  COFD[4657] = 4.90949838E+00;
  COFD[4658] = -4.09710987E-01;
  COFD[4659] = 1.72272850E-02;
  COFD[4660] = -1.89598662E+01;
  COFD[4661] = 4.56070745E+00;
  COFD[4662] = -3.68517396E-01;
  COFD[4663] = 1.56021102E-02;
  COFD[4664] = -1.89680574E+01;
  COFD[4665] = 4.56070745E+00;
  COFD[4666] = -3.68517396E-01;
  COFD[4667] = 1.56021102E-02;
  COFD[4668] = -2.20218850E+01;
  COFD[4669] = 5.33662478E+00;
  COFD[4670] = -4.27371229E-01;
  COFD[4671] = 1.65539339E-02;
  COFD[4672] = -2.18363974E+01;
  COFD[4673] = 5.43667692E+00;
  COFD[4674] = -4.65640530E-01;
  COFD[4675] = 1.91675299E-02;
  COFD[4676] = -2.15487979E+01;
  COFD[4677] = 5.42458950E+00;
  COFD[4678] = -4.65212987E-01;
  COFD[4679] = 1.91930766E-02;
  COFD[4680] = -2.18265875E+01;
  COFD[4681] = 5.43667692E+00;
  COFD[4682] = -4.65640530E-01;
  COFD[4683] = 1.91675299E-02;
  COFD[4684] = -2.17331228E+01;
  COFD[4685] = 5.45061574E+00;
  COFD[4686] = -4.65241893E-01;
  COFD[4687] = 1.90650429E-02;
  COFD[4688] = -2.17445470E+01;
  COFD[4689] = 5.45061574E+00;
  COFD[4690] = -4.65241893E-01;
  COFD[4691] = 1.90650429E-02;
  COFD[4692] = -2.23377235E+01;
  COFD[4693] = 5.44415012E+00;
  COFD[4694] = -4.47195848E-01;
  COFD[4695] = 1.76333776E-02;
  COFD[4696] = -1.99946934E+01;
  COFD[4697] = 4.99038775E+00;
  COFD[4698] = -4.19232899E-01;
  COFD[4699] = 1.76017333E-02;
  COFD[4700] = -2.23490161E+01;
  COFD[4701] = 5.44415012E+00;
  COFD[4702] = -4.47195848E-01;
  COFD[4703] = 1.76333776E-02;
  COFD[4704] = -2.22545093E+01;
  COFD[4705] = 5.49056182E+00;
  COFD[4706] = -4.63917767E-01;
  COFD[4707] = 1.87597656E-02;
  COFD[4708] = -2.21467436E+01;
  COFD[4709] = 5.47453801E+00;
  COFD[4710] = -4.63573634E-01;
  COFD[4711] = 1.88106950E-02;
  COFD[4712] = -2.25051515E+01;
  COFD[4713] = 5.48975794E+00;
  COFD[4714] = -4.60336840E-01;
  COFD[4715] = 1.84719899E-02;
  COFD[4716] = -2.22818002E+01;
  COFD[4717] = 5.46985215E+00;
  COFD[4718] = -4.63430571E-01;
  COFD[4719] = 1.88222211E-02;
  COFD[4720] = -2.24900635E+01;
  COFD[4721] = 5.49046566E+00;
  COFD[4722] = -4.60640519E-01;
  COFD[4723] = 1.84931917E-02;
  COFD[4724] = -2.24938596E+01;
  COFD[4725] = 5.49046566E+00;
  COFD[4726] = -4.60640519E-01;
  COFD[4727] = 1.84931917E-02;
  COFD[4728] = -2.26109125E+01;
  COFD[4729] = 5.44450212E+00;
  COFD[4730] = -4.47289567E-01;
  COFD[4731] = 1.76392556E-02;
  COFD[4732] = -2.25702074E+01;
  COFD[4733] = 5.44454618E+00;
  COFD[4734] = -4.47321672E-01;
  COFD[4735] = 1.76416355E-02;
  COFD[4736] = -2.27673738E+01;
  COFD[4737] = 5.47456971E+00;
  COFD[4738] = -4.54548739E-01;
  COFD[4739] = 1.80779412E-02;
  COFD[4740] = -2.27646449E+01;
  COFD[4741] = 5.47937827E+00;
  COFD[4742] = -4.56129749E-01;
  COFD[4743] = 1.81820758E-02;
  COFD[4744] = -2.21918543E+01;
  COFD[4745] = 5.36809191E+00;
  COFD[4746] = -4.32908721E-01;
  COFD[4747] = 1.68481857E-02;
  COFD[4748] = -2.21967036E+01;
  COFD[4749] = 5.36809191E+00;
  COFD[4750] = -4.32908721E-01;
  COFD[4751] = 1.68481857E-02;
  COFD[4752] = -2.24246517E+01;
  COFD[4753] = 5.43317403E+00;
  COFD[4754] = -4.45039640E-01;
  COFD[4755] = 1.75123239E-02;
  COFD[4756] = -2.26244821E+01;
  COFD[4757] = 5.44849005E+00;
  COFD[4758] = -4.48374875E-01;
  COFD[4759] = 1.77073338E-02;
  COFD[4760] = -2.26807109E+01;
  COFD[4761] = 5.34068356E+00;
  COFD[4762] = -4.28077042E-01;
  COFD[4763] = 1.65912184E-02;
  COFD[4764] = -2.26379633E+01;
  COFD[4765] = 5.34068356E+00;
  COFD[4766] = -4.28077042E-01;
  COFD[4767] = 1.65912184E-02;
  COFD[4768] = -2.22041955E+01;
  COFD[4769] = 5.48376307E+00;
  COFD[4770] = -4.63942837E-01;
  COFD[4771] = 1.87953234E-02;
  COFD[4772] = -2.22480985E+01;
  COFD[4773] = 5.49056182E+00;
  COFD[4774] = -4.63917767E-01;
  COFD[4775] = 1.87597656E-02;
  COFD[4776] = -2.28340694E+01;
  COFD[4777] = 5.37943451E+00;
  COFD[4778] = -4.34917480E-01;
  COFD[4779] = 1.69553154E-02;
  COFD[4780] = -2.26414161E+01;
  COFD[4781] = 5.39941661E+00;
  COFD[4782] = -4.38608992E-01;
  COFD[4783] = 1.71564833E-02;
  COFD[4784] = -2.27438486E+01;
  COFD[4785] = 5.41656161E+00;
  COFD[4786] = -4.41824209E-01;
  COFD[4787] = 1.73331395E-02;
  COFD[4788] = -2.26809386E+01;
  COFD[4789] = 5.35408130E+00;
  COFD[4790] = -4.30433039E-01;
  COFD[4791] = 1.67163724E-02;
  COFD[4792] = -2.28058881E+01;
  COFD[4793] = 5.37943451E+00;
  COFD[4794] = -4.34917480E-01;
  COFD[4795] = 1.69553154E-02;
  COFD[4796] = -2.28040120E+01;
  COFD[4797] = 5.37943451E+00;
  COFD[4798] = -4.34917480E-01;
  COFD[4799] = 1.69553154E-02;
  COFD[4800] = -2.29546205E+01;
  COFD[4801] = 5.40726595E+00;
  COFD[4802] = -4.40072331E-01;
  COFD[4803] = 1.72366684E-02;
  COFD[4804] = -2.26847769E+01;
  COFD[4805] = 5.19870800E+00;
  COFD[4806] = -4.04106072E-01;
  COFD[4807] = 1.53462074E-02;
  COFD[4808] = -2.26847769E+01;
  COFD[4809] = 5.19870800E+00;
  COFD[4810] = -4.04106072E-01;
  COFD[4811] = 1.53462074E-02;
  COFD[4812] = -2.26847769E+01;
  COFD[4813] = 5.19870800E+00;
  COFD[4814] = -4.04106072E-01;
  COFD[4815] = 1.53462074E-02;
  COFD[4816] = -2.26847769E+01;
  COFD[4817] = 5.19870800E+00;
  COFD[4818] = -4.04106072E-01;
  COFD[4819] = 1.53462074E-02;
  COFD[4820] = -2.26847769E+01;
  COFD[4821] = 5.19870800E+00;
  COFD[4822] = -4.04106072E-01;
  COFD[4823] = 1.53462074E-02;
  COFD[4824] = -2.27363635E+01;
  COFD[4825] = 5.11476665E+00;
  COFD[4826] = -3.90017950E-01;
  COFD[4827] = 1.46174143E-02;
  COFD[4828] = -2.28434526E+01;
  COFD[4829] = 5.30874092E+00;
  COFD[4830] = -4.22570517E-01;
  COFD[4831] = 1.63018518E-02;
  COFD[4832] = -2.28434526E+01;
  COFD[4833] = 5.30874092E+00;
  COFD[4834] = -4.22570517E-01;
  COFD[4835] = 1.63018518E-02;
  COFD[4836] = -1.86480192E+01;
  COFD[4837] = 4.45508831E+00;
  COFD[4838] = -3.56068927E-01;
  COFD[4839] = 1.51117769E-02;
  COFD[4840] = -1.79863396E+01;
  COFD[4841] = 4.88559216E+00;
  COFD[4842] = -4.07208104E-01;
  COFD[4843] = 1.71425982E-02;
  COFD[4844] = -1.41186901E+01;
  COFD[4845] = 3.29251025E+00;
  COFD[4846] = -2.12716771E-01;
  COFD[4847] = 9.20613624E-03;
  COFD[4848] = -1.72189808E+01;
  COFD[4849] = 4.10247595E+00;
  COFD[4850] = -3.12590710E-01;
  COFD[4851] = 1.33179236E-02;
  COFD[4852] = -1.87553272E+01;
  COFD[4853] = 4.50343635E+00;
  COFD[4854] = -3.61818471E-01;
  COFD[4855] = 1.53404608E-02;
  COFD[4856] = -1.72409270E+01;
  COFD[4857] = 4.10247595E+00;
  COFD[4858] = -3.12590710E-01;
  COFD[4859] = 1.33179236E-02;
  COFD[4860] = -2.14155541E+01;
  COFD[4861] = 5.24536650E+00;
  COFD[4862] = -4.11756786E-01;
  COFD[4863] = 1.57371608E-02;
  COFD[4864] = -1.84591007E+01;
  COFD[4865] = 4.39561236E+00;
  COFD[4866] = -3.48858889E-01;
  COFD[4867] = 1.48190509E-02;
  COFD[4868] = -2.16482161E+01;
  COFD[4869] = 5.40849808E+00;
  COFD[4870] = -4.63989845E-01;
  COFD[4871] = 1.91734161E-02;
  COFD[4872] = -1.96749443E+01;
  COFD[4873] = 4.87934939E+00;
  COFD[4874] = -4.06539237E-01;
  COFD[4875] = 1.71192321E-02;
  COFD[4876] = -1.96231479E+01;
  COFD[4877] = 4.85846969E+00;
  COFD[4878] = -4.04137136E-01;
  COFD[4879] = 1.70272658E-02;
  COFD[4880] = -1.87640775E+01;
  COFD[4881] = 4.50343635E+00;
  COFD[4882] = -3.61818471E-01;
  COFD[4883] = 1.53404608E-02;
  COFD[4884] = -1.87724513E+01;
  COFD[4885] = 4.50343635E+00;
  COFD[4886] = -3.61818471E-01;
  COFD[4887] = 1.53404608E-02;
  COFD[4888] = -2.20651335E+01;
  COFD[4889] = 5.38704575E+00;
  COFD[4890] = -4.36283370E-01;
  COFD[4891] = 1.70286543E-02;
  COFD[4892] = -2.17225119E+01;
  COFD[4893] = 5.41757449E+00;
  COFD[4894] = -4.64778880E-01;
  COFD[4895] = 1.91926324E-02;
  COFD[4896] = -2.14001806E+01;
  COFD[4897] = 5.39261033E+00;
  COFD[4898] = -4.62555501E-01;
  COFD[4899] = 1.91354360E-02;
  COFD[4900] = -2.17124982E+01;
  COFD[4901] = 5.41757449E+00;
  COFD[4902] = -4.64778880E-01;
  COFD[4903] = 1.91926324E-02;
  COFD[4904] = -2.16354931E+01;
  COFD[4905] = 5.44000785E+00;
  COFD[4906] = -4.65569459E-01;
  COFD[4907] = 1.91449572E-02;
  COFD[4908] = -2.16471395E+01;
  COFD[4909] = 5.44000785E+00;
  COFD[4910] = -4.65569459E-01;
  COFD[4911] = 1.91449572E-02;
  COFD[4912] = -2.23100072E+01;
  COFD[4913] = 5.46199540E+00;
  COFD[4914] = -4.51467141E-01;
  COFD[4915] = 1.78907506E-02;
  COFD[4916] = -1.97503238E+01;
  COFD[4917] = 4.91724977E+00;
  COFD[4918] = -4.10632023E-01;
  COFD[4919] = 1.72638615E-02;
  COFD[4920] = -2.23215870E+01;
  COFD[4921] = 5.46199540E+00;
  COFD[4922] = -4.51467141E-01;
  COFD[4923] = 1.78907506E-02;
  COFD[4924] = -2.21467436E+01;
  COFD[4925] = 5.47453801E+00;
  COFD[4926] = -4.63573634E-01;
  COFD[4927] = 1.88106950E-02;
  COFD[4928] = -2.20611486E+01;
  COFD[4929] = 5.46751904E+00;
  COFD[4930] = -4.64436117E-01;
  COFD[4931] = 1.89156315E-02;
  COFD[4932] = -2.24444234E+01;
  COFD[4933] = 5.49310818E+00;
  COFD[4934] = -4.62798521E-01;
  COFD[4935] = 1.86559695E-02;
  COFD[4936] = -2.22104423E+01;
  COFD[4937] = 5.46738374E+00;
  COFD[4938] = -4.64895124E-01;
  COFD[4939] = 1.89536102E-02;
  COFD[4940] = -2.24283069E+01;
  COFD[4941] = 5.49344748E+00;
  COFD[4942] = -4.63052816E-01;
  COFD[4943] = 1.86750389E-02;
  COFD[4944] = -2.24322118E+01;
  COFD[4945] = 5.49344748E+00;
  COFD[4946] = -4.63052816E-01;
  COFD[4947] = 1.86750389E-02;
  COFD[4948] = -2.25889662E+01;
  COFD[4949] = 5.46241873E+00;
  COFD[4950] = -4.51563227E-01;
  COFD[4951] = 1.78964292E-02;
  COFD[4952] = -2.25481783E+01;
  COFD[4953] = 5.46266513E+00;
  COFD[4954] = -4.51619963E-01;
  COFD[4955] = 1.78998009E-02;
  COFD[4956] = -2.27255823E+01;
  COFD[4957] = 5.48298766E+00;
  COFD[4958] = -4.57543838E-01;
  COFD[4959] = 1.82786713E-02;
  COFD[4960] = -2.27182940E+01;
  COFD[4961] = 5.48606693E+00;
  COFD[4962] = -4.58921993E-01;
  COFD[4963] = 1.83751829E-02;
  COFD[4964] = -2.22224108E+01;
  COFD[4965] = 5.41240338E+00;
  COFD[4966] = -4.41033923E-01;
  COFD[4967] = 1.72894624E-02;
  COFD[4968] = -2.22273895E+01;
  COFD[4969] = 5.41240338E+00;
  COFD[4970] = -4.41033923E-01;
  COFD[4971] = 1.72894624E-02;
  COFD[4972] = -2.24102834E+01;
  COFD[4973] = 5.45651702E+00;
  COFD[4974] = -4.50175370E-01;
  COFD[4975] = 1.78134258E-02;
  COFD[4976] = -2.26076378E+01;
  COFD[4977] = 5.46824702E+00;
  COFD[4978] = -4.52880728E-01;
  COFD[4979] = 1.79742471E-02;
  COFD[4980] = -2.27357910E+01;
  COFD[4981] = 5.39000359E+00;
  COFD[4982] = -4.36841172E-01;
  COFD[4983] = 1.70593509E-02;
  COFD[4984] = -2.26915158E+01;
  COFD[4985] = 5.39000359E+00;
  COFD[4986] = -4.36841172E-01;
  COFD[4987] = 1.70593509E-02;
  COFD[4988] = -2.20957556E+01;
  COFD[4989] = 5.46736313E+00;
  COFD[4990] = -4.63533201E-01;
  COFD[4991] = 1.88428681E-02;
  COFD[4992] = -2.21401764E+01;
  COFD[4993] = 5.47453801E+00;
  COFD[4994] = -4.63573634E-01;
  COFD[4995] = 1.88106950E-02;
  COFD[4996] = -2.28707904E+01;
  COFD[4997] = 5.42114360E+00;
  COFD[4998] = -4.42702443E-01;
  COFD[4999] = 1.73818623E-02;
  COFD[5000] = -2.26656724E+01;
  COFD[5001] = 5.43804144E+00;
  COFD[5002] = -4.45999485E-01;
  COFD[5003] = 1.75662609E-02;
  COFD[5004] = -2.27506148E+01;
  COFD[5005] = 5.44709568E+00;
  COFD[5006] = -4.48069354E-01;
  COFD[5007] = 1.76894758E-02;
  COFD[5008] = -2.27276830E+01;
  COFD[5009] = 5.40059960E+00;
  COFD[5010] = -4.38830427E-01;
  COFD[5011] = 1.71686343E-02;
  COFD[5012] = -2.28416281E+01;
  COFD[5013] = 5.42114360E+00;
  COFD[5014] = -4.42702443E-01;
  COFD[5015] = 1.73818623E-02;
  COFD[5016] = -2.28396887E+01;
  COFD[5017] = 5.42114360E+00;
  COFD[5018] = -4.42702443E-01;
  COFD[5019] = 1.73818623E-02;
  COFD[5020] = -2.29808455E+01;
  COFD[5021] = 5.44447552E+00;
  COFD[5022] = -4.47281890E-01;
  COFD[5023] = 1.76387634E-02;
  COFD[5024] = -2.27935640E+01;
  COFD[5025] = 5.26880815E+00;
  COFD[5026] = -4.15708807E-01;
  COFD[5027] = 1.59422297E-02;
  COFD[5028] = -2.27935640E+01;
  COFD[5029] = 5.26880815E+00;
  COFD[5030] = -4.15708807E-01;
  COFD[5031] = 1.59422297E-02;
  COFD[5032] = -2.27935640E+01;
  COFD[5033] = 5.26880815E+00;
  COFD[5034] = -4.15708807E-01;
  COFD[5035] = 1.59422297E-02;
  COFD[5036] = -2.27935640E+01;
  COFD[5037] = 5.26880815E+00;
  COFD[5038] = -4.15708807E-01;
  COFD[5039] = 1.59422297E-02;
  COFD[5040] = -2.27935640E+01;
  COFD[5041] = 5.26880815E+00;
  COFD[5042] = -4.15708807E-01;
  COFD[5043] = 1.59422297E-02;
  COFD[5044] = -2.28367124E+01;
  COFD[5045] = 5.18065235E+00;
  COFD[5046] = -4.01095736E-01;
  COFD[5047] = 1.51910791E-02;
  COFD[5048] = -2.29126227E+01;
  COFD[5049] = 5.36245215E+00;
  COFD[5050] = -4.31910941E-01;
  COFD[5051] = 1.67950232E-02;
  COFD[5052] = -2.29126227E+01;
  COFD[5053] = 5.36245215E+00;
  COFD[5054] = -4.31910941E-01;
  COFD[5055] = 1.67950232E-02;
  COFD[5056] = -1.84298529E+01;
  COFD[5057] = 4.38777139E+00;
  COFD[5058] = -3.47895358E-01;
  COFD[5059] = 1.47793796E-02;
  COFD[5060] = -1.86950182E+01;
  COFD[5061] = 5.06329467E+00;
  COFD[5062] = -4.27615122E-01;
  COFD[5063] = 1.79228042E-02;
  COFD[5064] = -1.46609834E+01;
  COFD[5065] = 3.42877141E+00;
  COFD[5066] = -2.29550711E-01;
  COFD[5067] = 9.89957140E-03;
  COFD[5068] = -1.80017005E+01;
  COFD[5069] = 4.31633461E+00;
  COFD[5070] = -3.39053638E-01;
  COFD[5071] = 1.44128540E-02;
  COFD[5072] = -1.95280667E+01;
  COFD[5073] = 4.70710890E+00;
  COFD[5074] = -3.86453789E-01;
  COFD[5075] = 1.63380393E-02;
  COFD[5076] = -1.80251105E+01;
  COFD[5077] = 4.31633461E+00;
  COFD[5078] = -3.39053638E-01;
  COFD[5079] = 1.44128540E-02;
  COFD[5080] = -2.12712617E+01;
  COFD[5081] = 5.04351440E+00;
  COFD[5082] = -3.78432548E-01;
  COFD[5083] = 1.40280477E-02;
  COFD[5084] = -1.91368095E+01;
  COFD[5085] = 4.56508921E+00;
  COFD[5086] = -3.69033080E-01;
  COFD[5087] = 1.56223865E-02;
  COFD[5088] = -2.20785116E+01;
  COFD[5089] = 5.45354415E+00;
  COFD[5090] = -4.65291244E-01;
  COFD[5091] = 1.90545098E-02;
  COFD[5092] = -2.03731412E+01;
  COFD[5093] = 5.05714666E+00;
  COFD[5094] = -4.26960034E-01;
  COFD[5095] = 1.78999526E-02;
  COFD[5096] = -2.03251782E+01;
  COFD[5097] = 5.03716590E+00;
  COFD[5098] = -4.24714370E-01;
  COFD[5099] = 1.78162251E-02;
  COFD[5100] = -1.95377543E+01;
  COFD[5101] = 4.70710890E+00;
  COFD[5102] = -3.86453789E-01;
  COFD[5103] = 1.63380393E-02;
  COFD[5104] = -1.95470424E+01;
  COFD[5105] = 4.70710890E+00;
  COFD[5106] = -3.86453789E-01;
  COFD[5107] = 1.63380393E-02;
  COFD[5108] = -2.20279918E+01;
  COFD[5109] = 5.23448541E+00;
  COFD[5110] = -4.09927386E-01;
  COFD[5111] = 1.56423231E-02;
  COFD[5112] = -2.21190585E+01;
  COFD[5113] = 5.45729646E+00;
  COFD[5114] = -4.65340425E-01;
  COFD[5115] = 1.90398312E-02;
  COFD[5116] = -2.18452465E+01;
  COFD[5117] = 5.44764923E+00;
  COFD[5118] = -4.65239944E-01;
  COFD[5119] = 1.90796594E-02;
  COFD[5120] = -2.21080348E+01;
  COFD[5121] = 5.45729646E+00;
  COFD[5122] = -4.65340425E-01;
  COFD[5123] = 1.90398312E-02;
  COFD[5124] = -2.20094778E+01;
  COFD[5125] = 5.46751578E+00;
  COFD[5126] = -4.64445737E-01;
  COFD[5127] = 1.89164296E-02;
  COFD[5128] = -2.20222183E+01;
  COFD[5129] = 5.46751578E+00;
  COFD[5130] = -4.64445737E-01;
  COFD[5131] = 1.89164296E-02;
  COFD[5132] = -2.24302602E+01;
  COFD[5133] = 5.37317627E+00;
  COFD[5134] = -4.33806826E-01;
  COFD[5135] = 1.68960241E-02;
  COFD[5136] = -2.04982249E+01;
  COFD[5137] = 5.09287074E+00;
  COFD[5138] = -4.30747337E-01;
  COFD[5139] = 1.80311502E-02;
  COFD[5140] = -2.24433044E+01;
  COFD[5141] = 5.37317627E+00;
  COFD[5142] = -4.33806826E-01;
  COFD[5143] = 1.68960241E-02;
  COFD[5144] = -2.25051515E+01;
  COFD[5145] = 5.48975794E+00;
  COFD[5146] = -4.60336840E-01;
  COFD[5147] = 1.84719899E-02;
  COFD[5148] = -2.24444234E+01;
  COFD[5149] = 5.49310818E+00;
  COFD[5150] = -4.62798521E-01;
  COFD[5151] = 1.86559695E-02;
  COFD[5152] = -2.27303028E+01;
  COFD[5153] = 5.47648899E+00;
  COFD[5154] = -4.55190091E-01;
  COFD[5155] = 1.81203119E-02;
  COFD[5156] = -2.25863308E+01;
  COFD[5157] = 5.49416190E+00;
  COFD[5158] = -4.63476205E-01;
  COFD[5159] = 1.87060578E-02;
  COFD[5160] = -2.27174290E+01;
  COFD[5161] = 5.47742424E+00;
  COFD[5162] = -4.55509593E-01;
  COFD[5163] = 1.81415342E-02;
  COFD[5164] = -2.27218987E+01;
  COFD[5165] = 5.47742424E+00;
  COFD[5166] = -4.55509593E-01;
  COFD[5167] = 1.81415342E-02;
  COFD[5168] = -2.27070183E+01;
  COFD[5169] = 5.37425628E+00;
  COFD[5170] = -4.33997939E-01;
  COFD[5171] = 1.69062130E-02;
  COFD[5172] = -2.26704019E+01;
  COFD[5173] = 5.37490349E+00;
  COFD[5174] = -4.34112523E-01;
  COFD[5175] = 1.69123235E-02;
  COFD[5176] = -2.29510503E+01;
  COFD[5177] = 5.44399037E+00;
  COFD[5178] = -4.47161064E-01;
  COFD[5179] = 1.76313359E-02;
  COFD[5180] = -2.29571062E+01;
  COFD[5181] = 5.45255106E+00;
  COFD[5182] = -4.49274880E-01;
  COFD[5183] = 1.77601485E-02;
  COFD[5184] = -2.22319690E+01;
  COFD[5185] = 5.27340167E+00;
  COFD[5186] = -4.16479301E-01;
  COFD[5187] = 1.59820820E-02;
  COFD[5188] = -2.22376124E+01;
  COFD[5189] = 5.27340167E+00;
  COFD[5190] = -4.16479301E-01;
  COFD[5191] = 1.59820820E-02;
  COFD[5192] = -2.25142005E+01;
  COFD[5193] = 5.35783672E+00;
  COFD[5194] = -4.31095103E-01;
  COFD[5195] = 1.67515802E-02;
  COFD[5196] = -2.27416215E+01;
  COFD[5197] = 5.38802436E+00;
  COFD[5198] = -4.36467632E-01;
  COFD[5199] = 1.70387872E-02;
  COFD[5200] = -2.27204878E+01;
  COFD[5201] = 5.23931156E+00;
  COFD[5202] = -4.10739101E-01;
  COFD[5203] = 1.56844121E-02;
  COFD[5204] = -2.26679216E+01;
  COFD[5205] = 5.23931156E+00;
  COFD[5206] = -4.10739101E-01;
  COFD[5207] = 1.56844121E-02;
  COFD[5208] = -2.24743135E+01;
  COFD[5209] = 5.49090532E+00;
  COFD[5210] = -4.61515055E-01;
  COFD[5211] = 1.85622624E-02;
  COFD[5212] = -2.24977927E+01;
  COFD[5213] = 5.48975794E+00;
  COFD[5214] = -4.60336840E-01;
  COFD[5215] = 1.84719899E-02;
  COFD[5216] = -2.28846070E+01;
  COFD[5217] = 5.28643469E+00;
  COFD[5218] = -4.18704366E-01;
  COFD[5219] = 1.60983298E-02;
  COFD[5220] = -2.26989037E+01;
  COFD[5221] = 5.31130174E+00;
  COFD[5222] = -4.23012509E-01;
  COFD[5223] = 1.63250839E-02;
  COFD[5224] = -2.28127118E+01;
  COFD[5225] = 5.33452791E+00;
  COFD[5226] = -4.27009745E-01;
  COFD[5227] = 1.65349406E-02;
  COFD[5228] = -2.27156340E+01;
  COFD[5229] = 5.25593075E+00;
  COFD[5230] = -4.13540252E-01;
  COFD[5231] = 1.58298021E-02;
  COFD[5232] = -2.28501520E+01;
  COFD[5233] = 5.28643469E+00;
  COFD[5234] = -4.18704366E-01;
  COFD[5235] = 1.60983298E-02;
  COFD[5236] = -2.28478733E+01;
  COFD[5237] = 5.28643469E+00;
  COFD[5238] = -4.18704366E-01;
  COFD[5239] = 1.60983298E-02;
  COFD[5240] = -2.30198362E+01;
  COFD[5241] = 5.32186706E+00;
  COFD[5242] = -4.24826256E-01;
  COFD[5243] = 1.64201917E-02;
  COFD[5244] = -2.26693987E+01;
  COFD[5245] = 5.07552523E+00;
  COFD[5246] = -3.83609779E-01;
  COFD[5247] = 1.42906252E-02;
  COFD[5248] = -2.26693987E+01;
  COFD[5249] = 5.07552523E+00;
  COFD[5250] = -3.83609779E-01;
  COFD[5251] = 1.42906252E-02;
  COFD[5252] = -2.26693987E+01;
  COFD[5253] = 5.07552523E+00;
  COFD[5254] = -3.83609779E-01;
  COFD[5255] = 1.42906252E-02;
  COFD[5256] = -2.26693987E+01;
  COFD[5257] = 5.07552523E+00;
  COFD[5258] = -3.83609779E-01;
  COFD[5259] = 1.42906252E-02;
  COFD[5260] = -2.26693987E+01;
  COFD[5261] = 5.07552523E+00;
  COFD[5262] = -3.83609779E-01;
  COFD[5263] = 1.42906252E-02;
  COFD[5264] = -2.26349149E+01;
  COFD[5265] = 4.95583598E+00;
  COFD[5266] = -3.64620833E-01;
  COFD[5267] = 1.33399033E-02;
  COFD[5268] = -2.28440112E+01;
  COFD[5269] = 5.19534599E+00;
  COFD[5270] = -4.03564468E-01;
  COFD[5271] = 1.53188143E-02;
  COFD[5272] = -2.28440112E+01;
  COFD[5273] = 5.19534599E+00;
  COFD[5274] = -4.03564468E-01;
  COFD[5275] = 1.53188143E-02;
  COFD[5276] = -1.91111522E+01;
  COFD[5277] = 4.55863849E+00;
  COFD[5278] = -3.68274023E-01;
  COFD[5279] = 1.55925459E-02;
  COFD[5280] = -1.81469992E+01;
  COFD[5281] = 4.87072577E+00;
  COFD[5282] = -4.05545664E-01;
  COFD[5283] = 1.70811253E-02;
  COFD[5284] = -1.42607285E+01;
  COFD[5285] = 3.27800958E+00;
  COFD[5286] = -2.10904650E-01;
  COFD[5287] = 9.13059463E-03;
  COFD[5288] = -1.73573906E+01;
  COFD[5289] = 4.08458730E+00;
  COFD[5290] = -3.10424631E-01;
  COFD[5291] = 1.32303913E-02;
  COFD[5292] = -1.88866093E+01;
  COFD[5293] = 4.48901310E+00;
  COFD[5294] = -3.60157439E-01;
  COFD[5295] = 1.52767822E-02;
  COFD[5296] = -1.73794823E+01;
  COFD[5297] = 4.08458730E+00;
  COFD[5298] = -3.10424631E-01;
  COFD[5299] = 1.32303913E-02;
  COFD[5300] = -2.16353459E+01;
  COFD[5301] = 5.26209571E+00;
  COFD[5302] = -4.14582361E-01;
  COFD[5303] = 1.58839500E-02;
  COFD[5304] = -1.85748911E+01;
  COFD[5305] = 4.37625004E+00;
  COFD[5306] = -3.46480198E-01;
  COFD[5307] = 1.47211425E-02;
  COFD[5308] = -2.17823899E+01;
  COFD[5309] = 5.39885902E+00;
  COFD[5310] = -4.63127984E-01;
  COFD[5311] = 1.91510357E-02;
  COFD[5312] = -1.97911406E+01;
  COFD[5313] = 4.86283194E+00;
  COFD[5314] = -4.04638513E-01;
  COFD[5315] = 1.70464396E-02;
  COFD[5316] = -1.97422311E+01;
  COFD[5317] = 4.84261600E+00;
  COFD[5318] = -4.02324040E-01;
  COFD[5319] = 1.69583178E-02;
  COFD[5320] = -1.88954497E+01;
  COFD[5321] = 4.48901310E+00;
  COFD[5322] = -3.60157439E-01;
  COFD[5323] = 1.52767822E-02;
  COFD[5324] = -1.89039113E+01;
  COFD[5325] = 4.48901310E+00;
  COFD[5326] = -3.60157439E-01;
  COFD[5327] = 1.52767822E-02;
  COFD[5328] = -2.22485119E+01;
  COFD[5329] = 5.39778892E+00;
  COFD[5330] = -4.38304152E-01;
  COFD[5331] = 1.71397521E-02;
  COFD[5332] = -2.18458267E+01;
  COFD[5333] = 5.40839175E+00;
  COFD[5334] = -4.63980205E-01;
  COFD[5335] = 1.91731580E-02;
  COFD[5336] = -2.15259021E+01;
  COFD[5337] = 5.37765042E+00;
  COFD[5338] = -4.60952699E-01;
  COFD[5339] = 1.90789784E-02;
  COFD[5340] = -2.18357154E+01;
  COFD[5341] = 5.40839175E+00;
  COFD[5342] = -4.63980205E-01;
  COFD[5343] = 1.91731580E-02;
  COFD[5344] = -2.17843663E+01;
  COFD[5345] = 5.43695150E+00;
  COFD[5346] = -4.65634641E-01;
  COFD[5347] = 1.91656663E-02;
  COFD[5348] = -2.17961190E+01;
  COFD[5349] = 5.43695150E+00;
  COFD[5350] = -4.65634641E-01;
  COFD[5351] = 1.91656663E-02;
  COFD[5352] = -2.24752543E+01;
  COFD[5353] = 5.46734341E+00;
  COFD[5354] = -4.52681070E-01;
  COFD[5355] = 1.79625458E-02;
  COFD[5356] = -1.99013700E+01;
  COFD[5357] = 4.90171993E+00;
  COFD[5358] = -4.08890008E-01;
  COFD[5359] = 1.71991689E-02;
  COFD[5360] = -2.24869727E+01;
  COFD[5361] = 5.46734341E+00;
  COFD[5362] = -4.52681070E-01;
  COFD[5363] = 1.79625458E-02;
  COFD[5364] = -2.22818002E+01;
  COFD[5365] = 5.46985215E+00;
  COFD[5366] = -4.63430571E-01;
  COFD[5367] = 1.88222211E-02;
  COFD[5368] = -2.22104423E+01;
  COFD[5369] = 5.46738374E+00;
  COFD[5370] = -4.64895124E-01;
  COFD[5371] = 1.89536102E-02;
  COFD[5372] = -2.25863308E+01;
  COFD[5373] = 5.49416190E+00;
  COFD[5374] = -4.63476205E-01;
  COFD[5375] = 1.87060578E-02;
  COFD[5376] = -2.23485990E+01;
  COFD[5377] = 5.46726185E+00;
  COFD[5378] = -4.65355838E-01;
  COFD[5379] = 1.89916597E-02;
  COFD[5380] = -2.25696961E+01;
  COFD[5381] = 5.49374077E+00;
  COFD[5382] = -4.63618864E-01;
  COFD[5383] = 1.87197528E-02;
  COFD[5384] = -2.25736536E+01;
  COFD[5385] = 5.49374077E+00;
  COFD[5386] = -4.63618864E-01;
  COFD[5387] = 1.87197528E-02;
  COFD[5388] = -2.27400450E+01;
  COFD[5389] = 5.46780451E+00;
  COFD[5390] = -4.52782878E-01;
  COFD[5391] = 1.79685109E-02;
  COFD[5392] = -2.27024905E+01;
  COFD[5393] = 5.46808044E+00;
  COFD[5394] = -4.52843875E-01;
  COFD[5395] = 1.79720864E-02;
  COFD[5396] = -2.28582989E+01;
  COFD[5397] = 5.48424546E+00;
  COFD[5398] = -4.58218337E-01;
  COFD[5399] = 1.83270574E-02;
  COFD[5400] = -2.28526163E+01;
  COFD[5401] = 5.48831255E+00;
  COFD[5402] = -4.59755066E-01;
  COFD[5403] = 1.84318207E-02;
  COFD[5404] = -2.24051776E+01;
  COFD[5405] = 5.42274627E+00;
  COFD[5406] = -4.43011109E-01;
  COFD[5407] = 1.73990243E-02;
  COFD[5408] = -2.24102189E+01;
  COFD[5409] = 5.42274627E+00;
  COFD[5410] = -4.43011109E-01;
  COFD[5411] = 1.73990243E-02;
  COFD[5412] = -2.25722965E+01;
  COFD[5413] = 5.46131219E+00;
  COFD[5414] = -4.51308224E-01;
  COFD[5415] = 1.78812832E-02;
  COFD[5416] = -2.27555070E+01;
  COFD[5417] = 5.47296422E+00;
  COFD[5418] = -4.54012873E-01;
  COFD[5419] = 1.80425810E-02;
  COFD[5420] = -2.28956318E+01;
  COFD[5421] = 5.40088492E+00;
  COFD[5422] = -4.38883324E-01;
  COFD[5423] = 1.71715242E-02;
  COFD[5424] = -2.28506085E+01;
  COFD[5425] = 5.40088492E+00;
  COFD[5426] = -4.38883324E-01;
  COFD[5427] = 1.71715242E-02;
  COFD[5428] = -2.22435863E+01;
  COFD[5429] = 5.46727804E+00;
  COFD[5430] = -4.64004183E-01;
  COFD[5431] = 1.88816483E-02;
  COFD[5432] = -2.22751578E+01;
  COFD[5433] = 5.46985215E+00;
  COFD[5434] = -4.63430571E-01;
  COFD[5435] = 1.88222211E-02;
  COFD[5436] = -2.30198102E+01;
  COFD[5437] = 5.43102089E+00;
  COFD[5438] = -4.44617784E-01;
  COFD[5439] = 1.74886865E-02;
  COFD[5440] = -2.28159691E+01;
  COFD[5441] = 5.44442190E+00;
  COFD[5442] = -4.47434092E-01;
  COFD[5443] = 1.76512643E-02;
  COFD[5444] = -2.28951692E+01;
  COFD[5445] = 5.45291805E+00;
  COFD[5446] = -4.49357019E-01;
  COFD[5447] = 1.77649850E-02;
  COFD[5448] = -2.28854662E+01;
  COFD[5449] = 5.41193653E+00;
  COFD[5450] = -4.40946219E-01;
  COFD[5451] = 1.72846392E-02;
  COFD[5452] = -2.29901682E+01;
  COFD[5453] = 5.43102089E+00;
  COFD[5454] = -4.44617784E-01;
  COFD[5455] = 1.74886865E-02;
  COFD[5456] = -2.29881979E+01;
  COFD[5457] = 5.43102089E+00;
  COFD[5458] = -4.44617784E-01;
  COFD[5459] = 1.74886865E-02;
  COFD[5460] = -2.31098624E+01;
  COFD[5461] = 5.44798953E+00;
  COFD[5462] = -4.48265013E-01;
  COFD[5463] = 1.77009083E-02;
  COFD[5464] = -2.29519810E+01;
  COFD[5465] = 5.28477709E+00;
  COFD[5466] = -4.18418879E-01;
  COFD[5467] = 1.60833475E-02;
  COFD[5468] = -2.29519810E+01;
  COFD[5469] = 5.28477709E+00;
  COFD[5470] = -4.18418879E-01;
  COFD[5471] = 1.60833475E-02;
  COFD[5472] = -2.29519810E+01;
  COFD[5473] = 5.28477709E+00;
  COFD[5474] = -4.18418879E-01;
  COFD[5475] = 1.60833475E-02;
  COFD[5476] = -2.29519810E+01;
  COFD[5477] = 5.28477709E+00;
  COFD[5478] = -4.18418879E-01;
  COFD[5479] = 1.60833475E-02;
  COFD[5480] = -2.29519810E+01;
  COFD[5481] = 5.28477709E+00;
  COFD[5482] = -4.18418879E-01;
  COFD[5483] = 1.60833475E-02;
  COFD[5484] = -2.29903857E+01;
  COFD[5485] = 5.19862924E+00;
  COFD[5486] = -4.04093368E-01;
  COFD[5487] = 1.53455642E-02;
  COFD[5488] = -2.30647680E+01;
  COFD[5489] = 5.37596433E+00;
  COFD[5490] = -4.34300692E-01;
  COFD[5491] = 1.69223661E-02;
  COFD[5492] = -2.30647680E+01;
  COFD[5493] = 5.37596433E+00;
  COFD[5494] = -4.34300692E-01;
  COFD[5495] = 1.69223661E-02;
  COFD[5496] = -1.85464184E+01;
  COFD[5497] = 4.36850016E+00;
  COFD[5498] = -3.45531357E-01;
  COFD[5499] = 1.46822403E-02;
  COFD[5500] = -1.86585621E+01;
  COFD[5501] = 5.05830652E+00;
  COFD[5502] = -4.27083712E-01;
  COFD[5503] = 1.79042712E-02;
  COFD[5504] = -1.46295087E+01;
  COFD[5505] = 3.42403711E+00;
  COFD[5506] = -2.28974532E-01;
  COFD[5507] = 9.87621386E-03;
  COFD[5508] = -1.79604961E+01;
  COFD[5509] = 4.30733766E+00;
  COFD[5510] = -3.37925627E-01;
  COFD[5511] = 1.43655069E-02;
  COFD[5512] = -1.94909551E+01;
  COFD[5513] = 4.69879097E+00;
  COFD[5514] = -3.85441745E-01;
  COFD[5515] = 1.62968073E-02;
  COFD[5516] = -1.79840066E+01;
  COFD[5517] = 4.30733766E+00;
  COFD[5518] = -3.37925627E-01;
  COFD[5519] = 1.43655069E-02;
  COFD[5520] = -2.12710043E+01;
  COFD[5521] = 5.05274021E+00;
  COFD[5522] = -3.79920248E-01;
  COFD[5523] = 1.41033861E-02;
  COFD[5524] = -1.91050522E+01;
  COFD[5525] = 4.55886937E+00;
  COFD[5526] = -3.68301178E-01;
  COFD[5527] = 1.55936129E-02;
  COFD[5528] = -2.20577763E+01;
  COFD[5529] = 5.45198096E+00;
  COFD[5530] = -4.65259344E-01;
  COFD[5531] = 1.90596774E-02;
  COFD[5532] = -2.03431646E+01;
  COFD[5533] = 5.05232294E+00;
  COFD[5534] = -4.26452915E-01;
  COFD[5535] = 1.78825996E-02;
  COFD[5536] = -2.02895140E+01;
  COFD[5537] = 5.02992150E+00;
  COFD[5538] = -4.23868677E-01;
  COFD[5539] = 1.77832701E-02;
  COFD[5540] = -1.95007097E+01;
  COFD[5541] = 4.69879097E+00;
  COFD[5542] = -3.85441745E-01;
  COFD[5543] = 1.62968073E-02;
  COFD[5544] = -1.95100632E+01;
  COFD[5545] = 4.69879097E+00;
  COFD[5546] = -3.85441745E-01;
  COFD[5547] = 1.62968073E-02;
  COFD[5548] = -2.20252788E+01;
  COFD[5549] = 5.24121166E+00;
  COFD[5550] = -4.11059025E-01;
  COFD[5551] = 1.57010104E-02;
  COFD[5552] = -2.20987669E+01;
  COFD[5553] = 5.45582845E+00;
  COFD[5554] = -4.65322899E-01;
  COFD[5555] = 1.90457166E-02;
  COFD[5556] = -2.18235940E+01;
  COFD[5557] = 5.44634823E+00;
  COFD[5558] = -4.65245448E-01;
  COFD[5559] = 1.90865967E-02;
  COFD[5560] = -2.20876715E+01;
  COFD[5561] = 5.45582845E+00;
  COFD[5562] = -4.65322899E-01;
  COFD[5563] = 1.90457166E-02;
  COFD[5564] = -2.19910305E+01;
  COFD[5565] = 5.46745929E+00;
  COFD[5566] = -4.64624358E-01;
  COFD[5567] = 1.89312280E-02;
  COFD[5568] = -2.20038482E+01;
  COFD[5569] = 5.46745929E+00;
  COFD[5570] = -4.64624358E-01;
  COFD[5571] = 1.89312280E-02;
  COFD[5572] = -2.24254093E+01;
  COFD[5573] = 5.37839633E+00;
  COFD[5574] = -4.34732804E-01;
  COFD[5575] = 1.69454459E-02;
  COFD[5576] = -2.04673045E+01;
  COFD[5577] = 5.08807429E+00;
  COFD[5578] = -4.30243518E-01;
  COFD[5579] = 1.80139269E-02;
  COFD[5580] = -2.24385601E+01;
  COFD[5581] = 5.37839633E+00;
  COFD[5582] = -4.34732804E-01;
  COFD[5583] = 1.69454459E-02;
  COFD[5584] = -2.24900635E+01;
  COFD[5585] = 5.49046566E+00;
  COFD[5586] = -4.60640519E-01;
  COFD[5587] = 1.84931917E-02;
  COFD[5588] = -2.24283069E+01;
  COFD[5589] = 5.49344748E+00;
  COFD[5590] = -4.63052816E-01;
  COFD[5591] = 1.86750389E-02;
  COFD[5592] = -2.27174290E+01;
  COFD[5593] = 5.47742424E+00;
  COFD[5594] = -4.55509593E-01;
  COFD[5595] = 1.81415342E-02;
  COFD[5596] = -2.25696961E+01;
  COFD[5597] = 5.49374077E+00;
  COFD[5598] = -4.63618864E-01;
  COFD[5599] = 1.87197528E-02;
  COFD[5600] = -2.27047995E+01;
  COFD[5601] = 5.47849754E+00;
  COFD[5602] = -4.55849160E-01;
  COFD[5603] = 1.81637187E-02;
  COFD[5604] = -2.27093111E+01;
  COFD[5605] = 5.47849754E+00;
  COFD[5606] = -4.55849160E-01;
  COFD[5607] = 1.81637187E-02;
  COFD[5608] = -2.27043119E+01;
  COFD[5609] = 5.37944812E+00;
  COFD[5610] = -4.34919903E-01;
  COFD[5611] = 1.69554449E-02;
  COFD[5612] = -2.26673850E+01;
  COFD[5613] = 5.38007821E+00;
  COFD[5614] = -4.35032051E-01;
  COFD[5615] = 1.69614401E-02;
  COFD[5616] = -2.29382485E+01;
  COFD[5617] = 5.44442303E+00;
  COFD[5618] = -4.47427940E-01;
  COFD[5619] = 1.76507657E-02;
  COFD[5620] = -2.29489146E+01;
  COFD[5621] = 5.45471156E+00;
  COFD[5622] = -4.49760531E-01;
  COFD[5623] = 1.77887865E-02;
  COFD[5624] = -2.22294845E+01;
  COFD[5625] = 5.27973457E+00;
  COFD[5626] = -4.17551922E-01;
  COFD[5627] = 1.60378887E-02;
  COFD[5628] = -2.22351766E+01;
  COFD[5629] = 5.27973457E+00;
  COFD[5630] = -4.17551922E-01;
  COFD[5631] = 1.60378887E-02;
  COFD[5632] = -2.25103062E+01;
  COFD[5633] = 5.36306078E+00;
  COFD[5634] = -4.32018705E-01;
  COFD[5635] = 1.68007664E-02;
  COFD[5636] = -2.27363370E+01;
  COFD[5637] = 5.39211717E+00;
  COFD[5638] = -4.37241388E-01;
  COFD[5639] = 1.70814168E-02;
  COFD[5640] = -2.27237265E+01;
  COFD[5641] = 5.24608533E+00;
  COFD[5642] = -4.11877553E-01;
  COFD[5643] = 1.57434190E-02;
  COFD[5644] = -2.26705216E+01;
  COFD[5645] = 5.24608533E+00;
  COFD[5646] = -4.11877553E-01;
  COFD[5647] = 1.57434190E-02;
  COFD[5648] = -2.24568640E+01;
  COFD[5649] = 5.49068313E+00;
  COFD[5650] = -4.61694593E-01;
  COFD[5651] = 1.85779923E-02;
  COFD[5652] = -2.24826473E+01;
  COFD[5653] = 5.49046566E+00;
  COFD[5654] = -4.60640519E-01;
  COFD[5655] = 1.84931917E-02;
  COFD[5656] = -2.28858577E+01;
  COFD[5657] = 5.29211810E+00;
  COFD[5658] = -4.19685131E-01;
  COFD[5659] = 1.61498496E-02;
  COFD[5660] = -2.26989567E+01;
  COFD[5661] = 5.31729293E+00;
  COFD[5662] = -4.24040190E-01;
  COFD[5663] = 1.63789533E-02;
  COFD[5664] = -2.28126606E+01;
  COFD[5665] = 5.34025709E+00;
  COFD[5666] = -4.28002604E-01;
  COFD[5667] = 1.65872781E-02;
  COFD[5668] = -2.27176329E+01;
  COFD[5669] = 5.26237767E+00;
  COFD[5670] = -4.14629620E-01;
  COFD[5671] = 1.58863936E-02;
  COFD[5672] = -2.28509971E+01;
  COFD[5673] = 5.29211810E+00;
  COFD[5674] = -4.19685131E-01;
  COFD[5675] = 1.61498496E-02;
  COFD[5676] = -2.28486926E+01;
  COFD[5677] = 5.29211810E+00;
  COFD[5678] = -4.19685131E-01;
  COFD[5679] = 1.61498496E-02;
  COFD[5680] = -2.30219269E+01;
  COFD[5681] = 5.32771617E+00;
  COFD[5682] = -4.25833456E-01;
  COFD[5683] = 1.64730816E-02;
  COFD[5684] = -2.26785557E+01;
  COFD[5685] = 5.08419101E+00;
  COFD[5686] = -3.85017801E-01;
  COFD[5687] = 1.43622302E-02;
  COFD[5688] = -2.26785557E+01;
  COFD[5689] = 5.08419101E+00;
  COFD[5690] = -3.85017801E-01;
  COFD[5691] = 1.43622302E-02;
  COFD[5692] = -2.26785557E+01;
  COFD[5693] = 5.08419101E+00;
  COFD[5694] = -3.85017801E-01;
  COFD[5695] = 1.43622302E-02;
  COFD[5696] = -2.26785557E+01;
  COFD[5697] = 5.08419101E+00;
  COFD[5698] = -3.85017801E-01;
  COFD[5699] = 1.43622302E-02;
  COFD[5700] = -2.26785557E+01;
  COFD[5701] = 5.08419101E+00;
  COFD[5702] = -3.85017801E-01;
  COFD[5703] = 1.43622302E-02;
  COFD[5704] = -2.26506436E+01;
  COFD[5705] = 4.96659745E+00;
  COFD[5706] = -3.66306172E-01;
  COFD[5707] = 1.34235902E-02;
  COFD[5708] = -2.28532493E+01;
  COFD[5709] = 5.20408596E+00;
  COFD[5710] = -4.04973723E-01;
  COFD[5711] = 1.53901363E-02;
  COFD[5712] = -2.28532493E+01;
  COFD[5713] = 5.20408596E+00;
  COFD[5714] = -4.04973723E-01;
  COFD[5715] = 1.53901363E-02;
  COFD[5716] = -1.90794537E+01;
  COFD[5717] = 4.55246544E+00;
  COFD[5718] = -3.67548311E-01;
  COFD[5719] = 1.55640443E-02;
  COFD[5720] = -1.86587235E+01;
  COFD[5721] = 5.05830652E+00;
  COFD[5722] = -4.27083712E-01;
  COFD[5723] = 1.79042712E-02;
  COFD[5724] = -1.46298259E+01;
  COFD[5725] = 3.42403711E+00;
  COFD[5726] = -2.28974532E-01;
  COFD[5727] = 9.87621386E-03;
  COFD[5728] = -1.79625215E+01;
  COFD[5729] = 4.30733766E+00;
  COFD[5730] = -3.37925627E-01;
  COFD[5731] = 1.43655069E-02;
  COFD[5732] = -1.94942660E+01;
  COFD[5733] = 4.69879097E+00;
  COFD[5734] = -3.85441745E-01;
  COFD[5735] = 1.62968073E-02;
  COFD[5736] = -1.79861297E+01;
  COFD[5737] = 4.30733766E+00;
  COFD[5738] = -3.37925627E-01;
  COFD[5739] = 1.43655069E-02;
  COFD[5740] = -2.12732225E+01;
  COFD[5741] = 5.05274021E+00;
  COFD[5742] = -3.79920248E-01;
  COFD[5743] = 1.41033861E-02;
  COFD[5744] = -1.91080888E+01;
  COFD[5745] = 4.55886937E+00;
  COFD[5746] = -3.68301178E-01;
  COFD[5747] = 1.55936129E-02;
  COFD[5748] = -2.20617810E+01;
  COFD[5749] = 5.45198096E+00;
  COFD[5750] = -4.65259344E-01;
  COFD[5751] = 1.90596774E-02;
  COFD[5752] = -2.03450940E+01;
  COFD[5753] = 5.05232294E+00;
  COFD[5754] = -4.26452915E-01;
  COFD[5755] = 1.78825996E-02;
  COFD[5756] = -2.02915437E+01;
  COFD[5757] = 5.02992150E+00;
  COFD[5758] = -4.23868677E-01;
  COFD[5759] = 1.77832701E-02;
  COFD[5760] = -1.95040861E+01;
  COFD[5761] = 4.69879097E+00;
  COFD[5762] = -3.85441745E-01;
  COFD[5763] = 1.62968073E-02;
  COFD[5764] = -1.95135036E+01;
  COFD[5765] = 4.69879097E+00;
  COFD[5766] = -3.85441745E-01;
  COFD[5767] = 1.62968073E-02;
  COFD[5768] = -2.20284573E+01;
  COFD[5769] = 5.24121166E+00;
  COFD[5770] = -4.11059025E-01;
  COFD[5771] = 1.57010104E-02;
  COFD[5772] = -2.21019484E+01;
  COFD[5773] = 5.45582845E+00;
  COFD[5774] = -4.65322899E-01;
  COFD[5775] = 1.90457166E-02;
  COFD[5776] = -2.18266337E+01;
  COFD[5777] = 5.44634823E+00;
  COFD[5778] = -4.65245448E-01;
  COFD[5779] = 1.90865967E-02;
  COFD[5780] = -2.20907830E+01;
  COFD[5781] = 5.45582845E+00;
  COFD[5782] = -4.65322899E-01;
  COFD[5783] = 1.90457166E-02;
  COFD[5784] = -2.19939215E+01;
  COFD[5785] = 5.46745929E+00;
  COFD[5786] = -4.64624358E-01;
  COFD[5787] = 1.89312280E-02;
  COFD[5788] = -2.20068145E+01;
  COFD[5789] = 5.46745929E+00;
  COFD[5790] = -4.64624358E-01;
  COFD[5791] = 1.89312280E-02;
  COFD[5792] = -2.24293118E+01;
  COFD[5793] = 5.37839633E+00;
  COFD[5794] = -4.34732804E-01;
  COFD[5795] = 1.69454459E-02;
  COFD[5796] = -2.04711532E+01;
  COFD[5797] = 5.08807429E+00;
  COFD[5798] = -4.30243518E-01;
  COFD[5799] = 1.80139269E-02;
  COFD[5800] = -2.24425670E+01;
  COFD[5801] = 5.37839633E+00;
  COFD[5802] = -4.34732804E-01;
  COFD[5803] = 1.69454459E-02;
  COFD[5804] = -2.24938596E+01;
  COFD[5805] = 5.49046566E+00;
  COFD[5806] = -4.60640519E-01;
  COFD[5807] = 1.84931917E-02;
  COFD[5808] = -2.24322118E+01;
  COFD[5809] = 5.49344748E+00;
  COFD[5810] = -4.63052816E-01;
  COFD[5811] = 1.86750389E-02;
  COFD[5812] = -2.27218987E+01;
  COFD[5813] = 5.47742424E+00;
  COFD[5814] = -4.55509593E-01;
  COFD[5815] = 1.81415342E-02;
  COFD[5816] = -2.25736536E+01;
  COFD[5817] = 5.49374077E+00;
  COFD[5818] = -4.63618864E-01;
  COFD[5819] = 1.87197528E-02;
  COFD[5820] = -2.27093111E+01;
  COFD[5821] = 5.47849754E+00;
  COFD[5822] = -4.55849160E-01;
  COFD[5823] = 1.81637187E-02;
  COFD[5824] = -2.27138638E+01;
  COFD[5825] = 5.47849754E+00;
  COFD[5826] = -4.55849160E-01;
  COFD[5827] = 1.81637187E-02;
  COFD[5828] = -2.27089032E+01;
  COFD[5829] = 5.37944812E+00;
  COFD[5830] = -4.34919903E-01;
  COFD[5831] = 1.69554449E-02;
  COFD[5832] = -2.26720160E+01;
  COFD[5833] = 5.38007821E+00;
  COFD[5834] = -4.35032051E-01;
  COFD[5835] = 1.69614401E-02;
  COFD[5836] = -2.29432722E+01;
  COFD[5837] = 5.44442303E+00;
  COFD[5838] = -4.47427940E-01;
  COFD[5839] = 1.76507657E-02;
  COFD[5840] = -2.29539706E+01;
  COFD[5841] = 5.45471156E+00;
  COFD[5842] = -4.49760531E-01;
  COFD[5843] = 1.77887865E-02;
  COFD[5844] = -2.22336383E+01;
  COFD[5845] = 5.27973457E+00;
  COFD[5846] = -4.17551922E-01;
  COFD[5847] = 1.60378887E-02;
  COFD[5848] = -2.22393782E+01;
  COFD[5849] = 5.27973457E+00;
  COFD[5850] = -4.17551922E-01;
  COFD[5851] = 1.60378887E-02;
  COFD[5852] = -2.25148161E+01;
  COFD[5853] = 5.36306078E+00;
  COFD[5854] = -4.32018705E-01;
  COFD[5855] = 1.68007664E-02;
  COFD[5856] = -2.27408880E+01;
  COFD[5857] = 5.39211717E+00;
  COFD[5858] = -4.37241388E-01;
  COFD[5859] = 1.70814168E-02;
  COFD[5860] = -2.27299388E+01;
  COFD[5861] = 5.24608533E+00;
  COFD[5862] = -4.11877553E-01;
  COFD[5863] = 1.57434190E-02;
  COFD[5864] = -2.26761033E+01;
  COFD[5865] = 5.24608533E+00;
  COFD[5866] = -4.11877553E-01;
  COFD[5867] = 1.57434190E-02;
  COFD[5868] = -2.24607151E+01;
  COFD[5869] = 5.49068313E+00;
  COFD[5870] = -4.61694593E-01;
  COFD[5871] = 1.85779923E-02;
  COFD[5872] = -2.24863873E+01;
  COFD[5873] = 5.49046566E+00;
  COFD[5874] = -4.60640519E-01;
  COFD[5875] = 1.84931917E-02;
  COFD[5876] = -2.28917663E+01;
  COFD[5877] = 5.29211810E+00;
  COFD[5878] = -4.19685131E-01;
  COFD[5879] = 1.61498496E-02;
  COFD[5880] = -2.27040746E+01;
  COFD[5881] = 5.31729293E+00;
  COFD[5882] = -4.24040190E-01;
  COFD[5883] = 1.63789533E-02;
  COFD[5884] = -2.28177472E+01;
  COFD[5885] = 5.34025709E+00;
  COFD[5886] = -4.28002604E-01;
  COFD[5887] = 1.65872781E-02;
  COFD[5888] = -2.27231159E+01;
  COFD[5889] = 5.26237767E+00;
  COFD[5890] = -4.14629620E-01;
  COFD[5891] = 1.58863936E-02;
  COFD[5892] = -2.28565056E+01;
  COFD[5893] = 5.29211810E+00;
  COFD[5894] = -4.19685131E-01;
  COFD[5895] = 1.61498496E-02;
  COFD[5896] = -2.28541756E+01;
  COFD[5897] = 5.29211810E+00;
  COFD[5898] = -4.19685131E-01;
  COFD[5899] = 1.61498496E-02;
  COFD[5900] = -2.30277565E+01;
  COFD[5901] = 5.32771617E+00;
  COFD[5902] = -4.25833456E-01;
  COFD[5903] = 1.64730816E-02;
  COFD[5904] = -2.26849220E+01;
  COFD[5905] = 5.08419101E+00;
  COFD[5906] = -3.85017801E-01;
  COFD[5907] = 1.43622302E-02;
  COFD[5908] = -2.26849220E+01;
  COFD[5909] = 5.08419101E+00;
  COFD[5910] = -3.85017801E-01;
  COFD[5911] = 1.43622302E-02;
  COFD[5912] = -2.26849220E+01;
  COFD[5913] = 5.08419101E+00;
  COFD[5914] = -3.85017801E-01;
  COFD[5915] = 1.43622302E-02;
  COFD[5916] = -2.26849220E+01;
  COFD[5917] = 5.08419101E+00;
  COFD[5918] = -3.85017801E-01;
  COFD[5919] = 1.43622302E-02;
  COFD[5920] = -2.26849220E+01;
  COFD[5921] = 5.08419101E+00;
  COFD[5922] = -3.85017801E-01;
  COFD[5923] = 1.43622302E-02;
  COFD[5924] = -2.26574044E+01;
  COFD[5925] = 4.96659745E+00;
  COFD[5926] = -3.66306172E-01;
  COFD[5927] = 1.34235902E-02;
  COFD[5928] = -2.28593453E+01;
  COFD[5929] = 5.20408596E+00;
  COFD[5930] = -4.04973723E-01;
  COFD[5931] = 1.53901363E-02;
  COFD[5932] = -2.28593453E+01;
  COFD[5933] = 5.20408596E+00;
  COFD[5934] = -4.04973723E-01;
  COFD[5935] = 1.53901363E-02;
  COFD[5936] = -1.90824905E+01;
  COFD[5937] = 4.55246544E+00;
  COFD[5938] = -3.67548311E-01;
  COFD[5939] = 1.55640443E-02;
  COFD[5940] = -1.92706200E+01;
  COFD[5941] = 5.22641306E+00;
  COFD[5942] = -4.44290196E-01;
  COFD[5943] = 1.84704961E-02;
  COFD[5944] = -1.53871729E+01;
  COFD[5945] = 3.68408734E+00;
  COFD[5946] = -2.61879015E-01;
  COFD[5947] = 1.12666094E-02;
  COFD[5948] = -1.87347350E+01;
  COFD[5949] = 4.55932865E+00;
  COFD[5950] = -3.68355198E-01;
  COFD[5951] = 1.55957356E-02;
  COFD[5952] = -2.02462572E+01;
  COFD[5953] = 4.93517265E+00;
  COFD[5954] = -4.12740828E-01;
  COFD[5955] = 1.73467245E-02;
  COFD[5956] = -1.87584342E+01;
  COFD[5957] = 4.55932865E+00;
  COFD[5958] = -3.68355198E-01;
  COFD[5959] = 1.55957356E-02;
  COFD[5960] = -2.05361137E+01;
  COFD[5961] = 4.64159173E+00;
  COFD[5962] = -3.15993927E-01;
  COFD[5963] = 1.09445813E-02;
  COFD[5964] = -1.99543580E+01;
  COFD[5965] = 4.83774371E+00;
  COFD[5966] = -4.01759538E-01;
  COFD[5967] = 1.69365310E-02;
  COFD[5968] = -2.23824281E+01;
  COFD[5969] = 5.49217181E+00;
  COFD[5970] = -4.63882677E-01;
  COFD[5971] = 1.87489631E-02;
  COFD[5972] = -2.09365579E+01;
  COFD[5973] = 5.21672969E+00;
  COFD[5974] = -4.43175115E-01;
  COFD[5975] = 1.84276681E-02;
  COFD[5976] = -2.09026205E+01;
  COFD[5977] = 5.20282016E+00;
  COFD[5978] = -4.41811086E-01;
  COFD[5979] = 1.83857216E-02;
  COFD[5980] = -2.02561385E+01;
  COFD[5981] = 4.93517265E+00;
  COFD[5982] = -4.12740828E-01;
  COFD[5983] = 1.73467245E-02;
  COFD[5984] = -2.02656158E+01;
  COFD[5985] = 4.93517265E+00;
  COFD[5986] = -4.12740828E-01;
  COFD[5987] = 1.73467245E-02;
  COFD[5988] = -2.15372828E+01;
  COFD[5989] = 4.93380640E+00;
  COFD[5990] = -3.61171699E-01;
  COFD[5991] = 1.31686212E-02;
  COFD[5992] = -2.24143069E+01;
  COFD[5993] = 5.49379864E+00;
  COFD[5994] = -4.63600612E-01;
  COFD[5995] = 1.87179811E-02;
  COFD[5996] = -2.21479940E+01;
  COFD[5997] = 5.48719572E+00;
  COFD[5998] = -4.64022066E-01;
  COFD[5999] = 1.87848905E-02;
  COFD[6000] = -2.24030761E+01;
  COFD[6001] = 5.49379864E+00;
  COFD[6002] = -4.63600612E-01;
  COFD[6003] = 1.87179811E-02;
  COFD[6004] = -2.22791681E+01;
  COFD[6005] = 5.49021632E+00;
  COFD[6006] = -4.60531670E-01;
  COFD[6007] = 1.84855708E-02;
  COFD[6008] = -2.22921314E+01;
  COFD[6009] = 5.49021632E+00;
  COFD[6010] = -4.60531670E-01;
  COFD[6011] = 1.84855708E-02;
  COFD[6012] = -2.21212280E+01;
  COFD[6013] = 5.14996158E+00;
  COFD[6014] = -3.95874432E-01;
  COFD[6015] = 1.49190064E-02;
  COFD[6016] = -2.11159635E+01;
  COFD[6017] = 5.26890914E+00;
  COFD[6018] = -4.49080646E-01;
  COFD[6019] = 1.86500850E-02;
  COFD[6020] = -2.21345811E+01;
  COFD[6021] = 5.14996158E+00;
  COFD[6022] = -3.95874432E-01;
  COFD[6023] = 1.49190064E-02;
  COFD[6024] = -2.26109125E+01;
  COFD[6025] = 5.44450212E+00;
  COFD[6026] = -4.47289567E-01;
  COFD[6027] = 1.76392556E-02;
  COFD[6028] = -2.25889662E+01;
  COFD[6029] = 5.46241873E+00;
  COFD[6030] = -4.51563227E-01;
  COFD[6031] = 1.78964292E-02;
  COFD[6032] = -2.27070183E+01;
  COFD[6033] = 5.37425628E+00;
  COFD[6034] = -4.33997939E-01;
  COFD[6035] = 1.69062130E-02;
  COFD[6036] = -2.27400450E+01;
  COFD[6037] = 5.46780451E+00;
  COFD[6038] = -4.52782878E-01;
  COFD[6039] = 1.79685109E-02;
  COFD[6040] = -2.27043119E+01;
  COFD[6041] = 5.37944812E+00;
  COFD[6042] = -4.34919903E-01;
  COFD[6043] = 1.69554449E-02;
  COFD[6044] = -2.27089032E+01;
  COFD[6045] = 5.37944812E+00;
  COFD[6046] = -4.34919903E-01;
  COFD[6047] = 1.69554449E-02;
  COFD[6048] = -2.23976954E+01;
  COFD[6049] = 5.15130619E+00;
  COFD[6050] = -3.96101863E-01;
  COFD[6051] = 1.49308178E-02;
  COFD[6052] = -2.23621730E+01;
  COFD[6053] = 5.15211086E+00;
  COFD[6054] = -3.96238056E-01;
  COFD[6055] = 1.49378934E-02;
  COFD[6056] = -2.27558732E+01;
  COFD[6057] = 5.26792797E+00;
  COFD[6058] = -4.15560936E-01;
  COFD[6059] = 1.59345751E-02;
  COFD[6060] = -2.28097451E+01;
  COFD[6061] = 5.29670997E+00;
  COFD[6062] = -4.20481579E-01;
  COFD[6063] = 1.61917846E-02;
  COFD[6064] = -2.18000293E+01;
  COFD[6065] = 4.99630533E+00;
  COFD[6066] = -3.70973757E-01;
  COFD[6067] = 1.36557558E-02;
  COFD[6068] = -2.18058140E+01;
  COFD[6069] = 4.99630533E+00;
  COFD[6070] = -3.70973757E-01;
  COFD[6071] = 1.36557558E-02;
  COFD[6072] = -2.21955977E+01;
  COFD[6073] = 5.12996650E+00;
  COFD[6074] = -3.92516016E-01;
  COFD[6075] = 1.47452270E-02;
  COFD[6076] = -2.24415083E+01;
  COFD[6077] = 5.16918377E+00;
  COFD[6078] = -3.99137871E-01;
  COFD[6079] = 1.50888488E-02;
  COFD[6080] = -2.22402586E+01;
  COFD[6081] = 4.94152082E+00;
  COFD[6082] = -3.62380091E-01;
  COFD[6083] = 1.32286449E-02;
  COFD[6084] = -2.21858274E+01;
  COFD[6085] = 4.94152082E+00;
  COFD[6086] = -3.62380091E-01;
  COFD[6087] = 1.32286449E-02;
  COFD[6088] = -2.25999667E+01;
  COFD[6089] = 5.45327166E+00;
  COFD[6090] = -4.49436298E-01;
  COFD[6091] = 1.77696558E-02;
  COFD[6092] = -2.26033877E+01;
  COFD[6093] = 5.44450212E+00;
  COFD[6094] = -4.47289567E-01;
  COFD[6095] = 1.76392556E-02;
  COFD[6096] = -2.24715441E+01;
  COFD[6097] = 5.01800199E+00;
  COFD[6098] = -3.74397273E-01;
  COFD[6099] = 1.38264725E-02;
  COFD[6100] = -2.23275127E+01;
  COFD[6101] = 5.06089774E+00;
  COFD[6102] = -3.81239105E-01;
  COFD[6103] = 1.41702517E-02;
  COFD[6104] = -2.24655698E+01;
  COFD[6105] = 5.09524210E+00;
  COFD[6106] = -3.86817295E-01;
  COFD[6107] = 1.44538658E-02;
  COFD[6108] = -2.22575995E+01;
  COFD[6109] = 4.96852134E+00;
  COFD[6110] = -3.66607756E-01;
  COFD[6111] = 1.34385708E-02;
  COFD[6112] = -2.24359057E+01;
  COFD[6113] = 5.01800199E+00;
  COFD[6114] = -3.74397273E-01;
  COFD[6115] = 1.38264725E-02;
  COFD[6116] = -2.24335517E+01;
  COFD[6117] = 5.01800199E+00;
  COFD[6118] = -3.74397273E-01;
  COFD[6119] = 1.38264725E-02;
  COFD[6120] = -2.26588184E+01;
  COFD[6121] = 5.07646321E+00;
  COFD[6122] = -3.83762054E-01;
  COFD[6123] = 1.42983651E-02;
  COFD[6124] = -2.19726255E+01;
  COFD[6125] = 4.68933904E+00;
  COFD[6126] = -3.23268395E-01;
  COFD[6127] = 1.12992644E-02;
  COFD[6128] = -2.19726255E+01;
  COFD[6129] = 4.68933904E+00;
  COFD[6130] = -3.23268395E-01;
  COFD[6131] = 1.12992644E-02;
  COFD[6132] = -2.19726255E+01;
  COFD[6133] = 4.68933904E+00;
  COFD[6134] = -3.23268395E-01;
  COFD[6135] = 1.12992644E-02;
  COFD[6136] = -2.19726255E+01;
  COFD[6137] = 4.68933904E+00;
  COFD[6138] = -3.23268395E-01;
  COFD[6139] = 1.12992644E-02;
  COFD[6140] = -2.19726255E+01;
  COFD[6141] = 4.68933904E+00;
  COFD[6142] = -3.23268395E-01;
  COFD[6143] = 1.12992644E-02;
  COFD[6144] = -2.18595496E+01;
  COFD[6145] = 4.53718327E+00;
  COFD[6146] = -2.99856359E-01;
  COFD[6147] = 1.01504725E-02;
  COFD[6148] = -2.23303137E+01;
  COFD[6149] = 4.88479479E+00;
  COFD[6150] = -3.53456980E-01;
  COFD[6151] = 1.27844233E-02;
  COFD[6152] = -2.23303137E+01;
  COFD[6153] = 4.88479479E+00;
  COFD[6154] = -3.53456980E-01;
  COFD[6155] = 1.27844233E-02;
  COFD[6156] = -1.99275866E+01;
  COFD[6157] = 4.83095096E+00;
  COFD[6158] = -4.00972558E-01;
  COFD[6159] = 1.69061563E-02;
  COFD[6160] = -1.92100463E+01;
  COFD[6161] = 5.22556324E+00;
  COFD[6162] = -4.44195247E-01;
  COFD[6163] = 1.84669783E-02;
  COFD[6164] = -1.57445078E+01;
  COFD[6165] = 3.82742337E+00;
  COFD[6166] = -2.79536580E-01;
  COFD[6167] = 1.19924373E-02;
  COFD[6168] = -1.86817008E+01;
  COFD[6169] = 4.55856850E+00;
  COFD[6170] = -3.68265791E-01;
  COFD[6171] = 1.55922225E-02;
  COFD[6172] = -2.05570451E+01;
  COFD[6173] = 5.05447974E+00;
  COFD[6174] = -4.26675426E-01;
  COFD[6175] = 1.78900036E-02;
  COFD[6176] = -1.87054926E+01;
  COFD[6177] = 4.55856850E+00;
  COFD[6178] = -3.68265791E-01;
  COFD[6179] = 1.55922225E-02;
  COFD[6180] = -1.83637937E+01;
  COFD[6181] = 3.61550817E+00;
  COFD[6182] = -1.62122642E-01;
  COFD[6183] = 3.57292006E-03;
  COFD[6184] = -2.02463154E+01;
  COFD[6185] = 4.94688210E+00;
  COFD[6186] = -4.14116309E-01;
  COFD[6187] = 1.74006862E-02;
  COFD[6188] = -2.24144952E+01;
  COFD[6189] = 5.49116787E+00;
  COFD[6190] = -4.60872362E-01;
  COFD[6191] = 1.85086092E-02;
  COFD[6192] = -2.08891189E+01;
  COFD[6193] = 5.21570257E+00;
  COFD[6194] = -4.43055160E-01;
  COFD[6195] = 1.84229862E-02;
  COFD[6196] = -2.12234784E+01;
  COFD[6197] = 5.31936763E+00;
  COFD[6198] = -4.54732051E-01;
  COFD[6199] = 1.88607332E-02;
  COFD[6200] = -2.02084213E+01;
  COFD[6201] = 4.93423363E+00;
  COFD[6202] = -4.12630529E-01;
  COFD[6203] = 1.73423980E-02;
  COFD[6204] = -2.02179598E+01;
  COFD[6205] = 4.93423363E+00;
  COFD[6206] = -4.12630529E-01;
  COFD[6207] = 1.73423980E-02;
  COFD[6208] = -2.14953453E+01;
  COFD[6209] = 4.93510998E+00;
  COFD[6210] = -3.61376137E-01;
  COFD[6211] = 1.31787827E-02;
  COFD[6212] = -2.23731080E+01;
  COFD[6213] = 5.49374441E+00;
  COFD[6214] = -4.63617711E-01;
  COFD[6215] = 1.87196409E-02;
  COFD[6216] = -2.21018977E+01;
  COFD[6217] = 5.48702704E+00;
  COFD[6218] = -4.64023035E-01;
  COFD[6219] = 1.87858024E-02;
  COFD[6220] = -2.23618103E+01;
  COFD[6221] = 5.49374441E+00;
  COFD[6222] = -4.63617711E-01;
  COFD[6223] = 1.87196409E-02;
  COFD[6224] = -2.22347856E+01;
  COFD[6225] = 5.49030211E+00;
  COFD[6226] = -4.60568793E-01;
  COFD[6227] = 1.84881663E-02;
  COFD[6228] = -2.22478207E+01;
  COFD[6229] = 5.49030211E+00;
  COFD[6230] = -4.60568793E-01;
  COFD[6231] = 1.84881663E-02;
  COFD[6232] = -2.20808545E+01;
  COFD[6233] = 5.15076979E+00;
  COFD[6234] = -3.96011114E-01;
  COFD[6235] = 1.49261042E-02;
  COFD[6236] = -2.10624847E+01;
  COFD[6237] = 5.26805363E+00;
  COFD[6238] = -4.48984207E-01;
  COFD[6239] = 1.86464682E-02;
  COFD[6240] = -2.20943079E+01;
  COFD[6241] = 5.15076979E+00;
  COFD[6242] = -3.96011114E-01;
  COFD[6243] = 1.49261042E-02;
  COFD[6244] = -2.25702074E+01;
  COFD[6245] = 5.44454618E+00;
  COFD[6246] = -4.47321672E-01;
  COFD[6247] = 1.76416355E-02;
  COFD[6248] = -2.25481783E+01;
  COFD[6249] = 5.46266513E+00;
  COFD[6250] = -4.51619963E-01;
  COFD[6251] = 1.78998009E-02;
  COFD[6252] = -2.26704019E+01;
  COFD[6253] = 5.37490349E+00;
  COFD[6254] = -4.34112523E-01;
  COFD[6255] = 1.69123235E-02;
  COFD[6256] = -2.27024905E+01;
  COFD[6257] = 5.46808044E+00;
  COFD[6258] = -4.52843875E-01;
  COFD[6259] = 1.79720864E-02;
  COFD[6260] = -2.26673850E+01;
  COFD[6261] = 5.38007821E+00;
  COFD[6262] = -4.35032051E-01;
  COFD[6263] = 1.69614401E-02;
  COFD[6264] = -2.26720160E+01;
  COFD[6265] = 5.38007821E+00;
  COFD[6266] = -4.35032051E-01;
  COFD[6267] = 1.69614401E-02;
  COFD[6268] = -2.23621730E+01;
  COFD[6269] = 5.15211086E+00;
  COFD[6270] = -3.96238056E-01;
  COFD[6271] = 1.49378934E-02;
  COFD[6272] = -2.09249778E+01;
  COFD[6273] = 4.47619034E+00;
  COFD[6274] = -2.94481657E-01;
  COFD[6275] = 1.00314765E-02;
  COFD[6276] = -2.27231996E+01;
  COFD[6277] = 5.26873030E+00;
  COFD[6278] = -4.15695726E-01;
  COFD[6279] = 1.59415526E-02;
  COFD[6280] = -2.26522008E+01;
  COFD[6281] = 5.24607008E+00;
  COFD[6282] = -4.13634542E-01;
  COFD[6283] = 1.58853577E-02;
  COFD[6284] = -2.17591011E+01;
  COFD[6285] = 4.99755422E+00;
  COFD[6286] = -3.71170522E-01;
  COFD[6287] = 1.36655589E-02;
  COFD[6288] = -2.17649318E+01;
  COFD[6289] = 4.99755422E+00;
  COFD[6290] = -3.71170522E-01;
  COFD[6291] = 1.36655589E-02;
  COFD[6292] = -2.21570145E+01;
  COFD[6293] = 5.13096622E+00;
  COFD[6294] = -3.92680132E-01;
  COFD[6295] = 1.47536199E-02;
  COFD[6296] = -2.10421315E+01;
  COFD[6297] = 4.51136058E+00;
  COFD[6298] = -3.00118079E-01;
  COFD[6299] = 1.03138594E-02;
  COFD[6300] = -2.22089879E+01;
  COFD[6301] = 4.94285417E+00;
  COFD[6302] = -3.62588783E-01;
  COFD[6303] = 1.32390069E-02;
  COFD[6304] = -2.21539415E+01;
  COFD[6305] = 4.94285417E+00;
  COFD[6306] = -3.62588783E-01;
  COFD[6307] = 1.32390069E-02;
  COFD[6308] = -2.25595650E+01;
  COFD[6309] = 5.45353757E+00;
  COFD[6310] = -4.49496004E-01;
  COFD[6311] = 1.77731752E-02;
  COFD[6312] = -2.25626287E+01;
  COFD[6313] = 5.44454618E+00;
  COFD[6314] = -4.47321672E-01;
  COFD[6315] = 1.76416355E-02;
  COFD[6316] = -2.14754365E+01;
  COFD[6317] = 4.58403944E+00;
  COFD[6318] = -3.11849240E-01;
  COFD[6319] = 1.08987964E-02;
  COFD[6320] = -2.10466915E+01;
  COFD[6321] = 4.48381660E+00;
  COFD[6322] = -2.96509845E-01;
  COFD[6323] = 1.01535147E-02;
  COFD[6324] = -2.10487822E+01;
  COFD[6325] = 4.43820922E+00;
  COFD[6326] = -2.88877501E-01;
  COFD[6327] = 9.76343805E-03;
  COFD[6328] = -2.22261280E+01;
  COFD[6329] = 4.96982327E+00;
  COFD[6330] = -3.66811857E-01;
  COFD[6331] = 1.34487095E-02;
  COFD[6332] = -2.14394083E+01;
  COFD[6333] = 4.58403944E+00;
  COFD[6334] = -3.11849240E-01;
  COFD[6335] = 1.08987964E-02;
  COFD[6336] = -2.14370295E+01;
  COFD[6337] = 4.58403944E+00;
  COFD[6338] = -3.11849240E-01;
  COFD[6339] = 1.08987964E-02;
  COFD[6340] = -2.26303161E+01;
  COFD[6341] = 5.07752972E+00;
  COFD[6342] = -3.83935232E-01;
  COFD[6343] = 1.43071687E-02;
  COFD[6344] = -2.14841915E+01;
  COFD[6345] = 4.49540243E+00;
  COFD[6346] = -2.96514022E-01;
  COFD[6347] = 1.00871141E-02;
  COFD[6348] = -2.14841915E+01;
  COFD[6349] = 4.49540243E+00;
  COFD[6350] = -2.96514022E-01;
  COFD[6351] = 1.00871141E-02;
  COFD[6352] = -2.14841915E+01;
  COFD[6353] = 4.49540243E+00;
  COFD[6354] = -2.96514022E-01;
  COFD[6355] = 1.00871141E-02;
  COFD[6356] = -2.14841915E+01;
  COFD[6357] = 4.49540243E+00;
  COFD[6358] = -2.96514022E-01;
  COFD[6359] = 1.00871141E-02;
  COFD[6360] = -2.14841915E+01;
  COFD[6361] = 4.49540243E+00;
  COFD[6362] = -2.96514022E-01;
  COFD[6363] = 1.00871141E-02;
  COFD[6364] = -2.14584062E+01;
  COFD[6365] = 4.38117791E+00;
  COFD[6366] = -2.78570958E-01;
  COFD[6367] = 9.19430084E-03;
  COFD[6368] = -2.23028432E+01;
  COFD[6369] = 4.88611782E+00;
  COFD[6370] = -3.53664413E-01;
  COFD[6371] = 1.27947308E-02;
  COFD[6372] = -2.23028432E+01;
  COFD[6373] = 4.88611782E+00;
  COFD[6374] = -3.53664413E-01;
  COFD[6375] = 1.27947308E-02;
  COFD[6376] = -2.01873438E+01;
  COFD[6377] = 4.92914818E+00;
  COFD[6378] = -4.12032796E-01;
  COFD[6379] = 1.73189340E-02;
  COFD[6380] = -1.92111139E+01;
  COFD[6381] = 5.16046404E+00;
  COFD[6382] = -4.38008342E-01;
  COFD[6383] = 1.82870041E-02;
  COFD[6384] = -1.51818344E+01;
  COFD[6385] = 3.55111766E+00;
  COFD[6386] = -2.44966429E-01;
  COFD[6387] = 1.05482272E-02;
  COFD[6388] = -1.86097186E+01;
  COFD[6389] = 4.45757911E+00;
  COFD[6390] = -3.56368733E-01;
  COFD[6391] = 1.51238590E-02;
  COFD[6392] = -2.01150178E+01;
  COFD[6393] = 4.83483781E+00;
  COFD[6394] = -4.01422871E-01;
  COFD[6395] = 1.69235370E-02;
  COFD[6396] = -1.86343822E+01;
  COFD[6397] = 4.45757911E+00;
  COFD[6398] = -3.56368733E-01;
  COFD[6399] = 1.51238590E-02;
  COFD[6400] = -2.11196833E+01;
  COFD[6401] = 4.84742105E+00;
  COFD[6402] = -3.47604370E-01;
  COFD[6403] = 1.24938668E-02;
  COFD[6404] = -1.97966691E+01;
  COFD[6405] = 4.72725308E+00;
  COFD[6406] = -3.88865048E-01;
  COFD[6407] = 1.64346151E-02;
  COFD[6408] = -2.24163669E+01;
  COFD[6409] = 5.46720411E+00;
  COFD[6410] = -4.63664606E-01;
  COFD[6411] = 1.88543495E-02;
  COFD[6412] = -2.08689910E+01;
  COFD[6413] = 5.15366259E+00;
  COFD[6414] = -4.37268432E-01;
  COFD[6415] = 1.82604618E-02;
  COFD[6416] = -2.08290042E+01;
  COFD[6417] = 5.13624657E+00;
  COFD[6418] = -4.35395745E-01;
  COFD[6419] = 1.81943797E-02;
  COFD[6420] = -2.01255665E+01;
  COFD[6421] = 4.83483781E+00;
  COFD[6422] = -4.01422871E-01;
  COFD[6423] = 1.69235370E-02;
  COFD[6424] = -2.01356974E+01;
  COFD[6425] = 4.83483781E+00;
  COFD[6426] = -4.01422871E-01;
  COFD[6427] = 1.69235370E-02;
  COFD[6428] = -2.20062717E+01;
  COFD[6429] = 5.09608960E+00;
  COFD[6430] = -3.86955479E-01;
  COFD[6431] = 1.44609083E-02;
  COFD[6432] = -2.24306547E+01;
  COFD[6433] = 5.46873098E+00;
  COFD[6434] = -4.63395699E-01;
  COFD[6435] = 1.88249267E-02;
  COFD[6436] = -2.21898975E+01;
  COFD[6437] = 5.46750298E+00;
  COFD[6438] = -4.64484282E-01;
  COFD[6439] = 1.89196260E-02;
  COFD[6440] = -2.24187132E+01;
  COFD[6441] = 5.46873098E+00;
  COFD[6442] = -4.63395699E-01;
  COFD[6443] = 1.88249267E-02;
  COFD[6444] = -2.23577513E+01;
  COFD[6445] = 5.49008914E+00;
  COFD[6446] = -4.63927959E-01;
  COFD[6447] = 1.87629280E-02;
  COFD[6448] = -2.23714741E+01;
  COFD[6449] = 5.49008914E+00;
  COFD[6450] = -4.63927959E-01;
  COFD[6451] = 1.87629280E-02;
  COFD[6452] = -2.24838277E+01;
  COFD[6453] = 5.26658797E+00;
  COFD[6454] = -4.15335910E-01;
  COFD[6455] = 1.59229288E-02;
  COFD[6456] = -2.10353516E+01;
  COFD[6457] = 5.18365882E+00;
  COFD[6458] = -4.40195806E-01;
  COFD[6459] = 1.83497181E-02;
  COFD[6460] = -2.24982629E+01;
  COFD[6461] = 5.26658797E+00;
  COFD[6462] = -4.15335910E-01;
  COFD[6463] = 1.59229288E-02;
  COFD[6464] = -2.27673738E+01;
  COFD[6465] = 5.47456971E+00;
  COFD[6466] = -4.54548739E-01;
  COFD[6467] = 1.80779412E-02;
  COFD[6468] = -2.27255823E+01;
  COFD[6469] = 5.48298766E+00;
  COFD[6470] = -4.57543838E-01;
  COFD[6471] = 1.82786713E-02;
  COFD[6472] = -2.29510503E+01;
  COFD[6473] = 5.44399037E+00;
  COFD[6474] = -4.47161064E-01;
  COFD[6475] = 1.76313359E-02;
  COFD[6476] = -2.28582989E+01;
  COFD[6477] = 5.48424546E+00;
  COFD[6478] = -4.58218337E-01;
  COFD[6479] = 1.83270574E-02;
  COFD[6480] = -2.29382485E+01;
  COFD[6481] = 5.44442303E+00;
  COFD[6482] = -4.47427940E-01;
  COFD[6483] = 1.76507657E-02;
  COFD[6484] = -2.29432722E+01;
  COFD[6485] = 5.44442303E+00;
  COFD[6486] = -4.47427940E-01;
  COFD[6487] = 1.76507657E-02;
  COFD[6488] = -2.27558732E+01;
  COFD[6489] = 5.26792797E+00;
  COFD[6490] = -4.15560936E-01;
  COFD[6491] = 1.59345751E-02;
  COFD[6492] = -2.27231996E+01;
  COFD[6493] = 5.26873030E+00;
  COFD[6494] = -4.15695726E-01;
  COFD[6495] = 1.59415526E-02;
  COFD[6496] = -2.30607478E+01;
  COFD[6497] = 5.36239026E+00;
  COFD[6498] = -4.31899984E-01;
  COFD[6499] = 1.67944393E-02;
  COFD[6500] = -2.31045183E+01;
  COFD[6501] = 5.38724026E+00;
  COFD[6502] = -4.36319971E-01;
  COFD[6503] = 1.70306665E-02;
  COFD[6504] = -2.22371684E+01;
  COFD[6505] = 5.14170132E+00;
  COFD[6506] = -3.94484367E-01;
  COFD[6507] = 1.48469922E-02;
  COFD[6508] = -2.22434509E+01;
  COFD[6509] = 5.14170132E+00;
  COFD[6510] = -3.94484367E-01;
  COFD[6511] = 1.48469922E-02;
  COFD[6512] = -2.25643421E+01;
  COFD[6513] = 5.24758220E+00;
  COFD[6514] = -4.12129116E-01;
  COFD[6515] = 1.57564573E-02;
  COFD[6516] = -2.27971297E+01;
  COFD[6517] = 5.28513609E+00;
  COFD[6518] = -4.18480689E-01;
  COFD[6519] = 1.60865907E-02;
  COFD[6520] = -2.27157100E+01;
  COFD[6521] = 5.10203936E+00;
  COFD[6522] = -3.87928434E-01;
  COFD[6523] = 1.45105651E-02;
  COFD[6524] = -2.26543913E+01;
  COFD[6525] = 5.10203936E+00;
  COFD[6526] = -3.87928434E-01;
  COFD[6527] = 1.45105651E-02;
  COFD[6528] = -2.27488975E+01;
  COFD[6529] = 5.47944787E+00;
  COFD[6530] = -4.56152622E-01;
  COFD[6531] = 1.81835823E-02;
  COFD[6532] = -2.27592705E+01;
  COFD[6533] = 5.47456971E+00;
  COFD[6534] = -4.54548739E-01;
  COFD[6535] = 1.80779412E-02;
  COFD[6536] = -2.28829630E+01;
  COFD[6537] = 5.15610802E+00;
  COFD[6538] = -3.96915596E-01;
  COFD[6539] = 1.49731206E-02;
  COFD[6540] = -2.27023801E+01;
  COFD[6541] = 5.18383798E+00;
  COFD[6542] = -4.01666785E-01;
  COFD[6543] = 1.52216204E-02;
  COFD[6544] = -2.28320919E+01;
  COFD[6545] = 5.21637493E+00;
  COFD[6546] = -4.06956958E-01;
  COFD[6547] = 1.54905633E-02;
  COFD[6548] = -2.27064677E+01;
  COFD[6549] = 5.12211189E+00;
  COFD[6550] = -3.91225928E-01;
  COFD[6551] = 1.46792378E-02;
  COFD[6552] = -2.28429772E+01;
  COFD[6553] = 5.15610802E+00;
  COFD[6554] = -3.96915596E-01;
  COFD[6555] = 1.49731206E-02;
  COFD[6556] = -2.28403481E+01;
  COFD[6557] = 5.15610802E+00;
  COFD[6558] = -3.96915596E-01;
  COFD[6559] = 1.49731206E-02;
  COFD[6560] = -2.30240550E+01;
  COFD[6561] = 5.19737465E+00;
  COFD[6562] = -4.03890980E-01;
  COFD[6563] = 1.53353180E-02;
  COFD[6564] = -2.25275224E+01;
  COFD[6565] = 4.88611782E+00;
  COFD[6566] = -3.53664413E-01;
  COFD[6567] = 1.27947308E-02;
  COFD[6568] = -2.25275224E+01;
  COFD[6569] = 4.88611782E+00;
  COFD[6570] = -3.53664413E-01;
  COFD[6571] = 1.27947308E-02;
  COFD[6572] = -2.25275224E+01;
  COFD[6573] = 4.88611782E+00;
  COFD[6574] = -3.53664413E-01;
  COFD[6575] = 1.27947308E-02;
  COFD[6576] = -2.25275224E+01;
  COFD[6577] = 4.88611782E+00;
  COFD[6578] = -3.53664413E-01;
  COFD[6579] = 1.27947308E-02;
  COFD[6580] = -2.25275224E+01;
  COFD[6581] = 4.88611782E+00;
  COFD[6582] = -3.53664413E-01;
  COFD[6583] = 1.27947308E-02;
  COFD[6584] = -2.24440093E+01;
  COFD[6585] = 4.74813432E+00;
  COFD[6586] = -3.32238042E-01;
  COFD[6587] = 1.17370757E-02;
  COFD[6588] = -2.28166711E+01;
  COFD[6589] = 5.05461151E+00;
  COFD[6590] = -3.80222586E-01;
  COFD[6591] = 1.41187082E-02;
  COFD[6592] = -2.28166711E+01;
  COFD[6593] = 5.05461151E+00;
  COFD[6594] = -3.80222586E-01;
  COFD[6595] = 1.41187082E-02;
  COFD[6596] = -1.97684831E+01;
  COFD[6597] = 4.71961665E+00;
  COFD[6598] = -3.87953877E-01;
  COFD[6599] = 1.63982506E-02;
  COFD[6600] = -1.91375755E+01;
  COFD[6601] = 5.13436741E+00;
  COFD[6602] = -4.35193261E-01;
  COFD[6603] = 1.81872196E-02;
  COFD[6604] = -1.50908508E+01;
  COFD[6605] = 3.51404074E+00;
  COFD[6606] = -2.40221542E-01;
  COFD[6607] = 1.03454651E-02;
  COFD[6608] = -1.85284554E+01;
  COFD[6609] = 4.42603366E+00;
  COFD[6610] = -3.52586895E-01;
  COFD[6611] = 1.49720921E-02;
  COFD[6612] = -2.00372576E+01;
  COFD[6613] = 4.80531581E+00;
  COFD[6614] = -3.98010400E-01;
  COFD[6615] = 1.67921710E-02;
  COFD[6616] = -1.85531874E+01;
  COFD[6617] = 4.42603366E+00;
  COFD[6618] = -3.52586895E-01;
  COFD[6619] = 1.49720921E-02;
  COFD[6620] = -2.10582756E+01;
  COFD[6621] = 4.83010526E+00;
  COFD[6622] = -3.46422992E-01;
  COFD[6623] = 1.24833810E-02;
  COFD[6624] = -1.97045636E+01;
  COFD[6625] = 4.69156097E+00;
  COFD[6626] = -3.84562356E-01;
  COFD[6627] = 1.62609922E-02;
  COFD[6628] = -2.24050834E+01;
  COFD[6629] = 5.46747549E+00;
  COFD[6630] = -4.64570865E-01;
  COFD[6631] = 1.89267998E-02;
  COFD[6632] = -2.07942319E+01;
  COFD[6633] = 5.12723540E+00;
  COFD[6634] = -4.34411432E-01;
  COFD[6635] = 1.81589442E-02;
  COFD[6636] = -2.07580489E+01;
  COFD[6637] = 5.11080865E+00;
  COFD[6638] = -4.32626175E-01;
  COFD[6639] = 1.80950687E-02;
  COFD[6640] = -2.00433265E+01;
  COFD[6641] = 4.80382495E+00;
  COFD[6642] = -3.97838890E-01;
  COFD[6643] = 1.67856063E-02;
  COFD[6644] = -2.00535052E+01;
  COFD[6645] = 4.80382495E+00;
  COFD[6646] = -3.97838890E-01;
  COFD[6647] = 1.67856063E-02;
  COFD[6648] = -2.20820596E+01;
  COFD[6649] = 5.13480519E+00;
  COFD[6650] = -3.93316744E-01;
  COFD[6651] = 1.47863438E-02;
  COFD[6652] = -2.24132657E+01;
  COFD[6653] = 5.46734823E+00;
  COFD[6654] = -4.64115641E-01;
  COFD[6655] = 1.88903818E-02;
  COFD[6656] = -2.21759631E+01;
  COFD[6657] = 5.46726363E+00;
  COFD[6658] = -4.65349411E-01;
  COFD[6659] = 1.89911285E-02;
  COFD[6660] = -2.24012726E+01;
  COFD[6661] = 5.46734823E+00;
  COFD[6662] = -4.64115641E-01;
  COFD[6663] = 1.88903818E-02;
  COFD[6664] = -2.23264299E+01;
  COFD[6665] = 5.48315923E+00;
  COFD[6666] = -4.63919102E-01;
  COFD[6667] = 1.87963630E-02;
  COFD[6668] = -2.23402076E+01;
  COFD[6669] = 5.48315923E+00;
  COFD[6670] = -4.63919102E-01;
  COFD[6671] = 1.87963630E-02;
  COFD[6672] = -2.25382651E+01;
  COFD[6673] = 5.29559685E+00;
  COFD[6674] = -4.20288187E-01;
  COFD[6675] = 1.61815942E-02;
  COFD[6676] = -2.09861326E+01;
  COFD[6677] = 5.16708806E+00;
  COFD[6678] = -4.38725884E-01;
  COFD[6679] = 1.83125969E-02;
  COFD[6680] = -2.25527803E+01;
  COFD[6681] = 5.29559685E+00;
  COFD[6682] = -4.20288187E-01;
  COFD[6683] = 1.61815942E-02;
  COFD[6684] = -2.27646449E+01;
  COFD[6685] = 5.47937827E+00;
  COFD[6686] = -4.56129749E-01;
  COFD[6687] = 1.81820758E-02;
  COFD[6688] = -2.27182940E+01;
  COFD[6689] = 5.48606693E+00;
  COFD[6690] = -4.58921993E-01;
  COFD[6691] = 1.83751829E-02;
  COFD[6692] = -2.29571062E+01;
  COFD[6693] = 5.45255106E+00;
  COFD[6694] = -4.49274880E-01;
  COFD[6695] = 1.77601485E-02;
  COFD[6696] = -2.28526163E+01;
  COFD[6697] = 5.48831255E+00;
  COFD[6698] = -4.59755066E-01;
  COFD[6699] = 1.84318207E-02;
  COFD[6700] = -2.29489146E+01;
  COFD[6701] = 5.45471156E+00;
  COFD[6702] = -4.49760531E-01;
  COFD[6703] = 1.77887865E-02;
  COFD[6704] = -2.29539706E+01;
  COFD[6705] = 5.45471156E+00;
  COFD[6706] = -4.49760531E-01;
  COFD[6707] = 1.77887865E-02;
  COFD[6708] = -2.28097451E+01;
  COFD[6709] = 5.29670997E+00;
  COFD[6710] = -4.20481579E-01;
  COFD[6711] = 1.61917846E-02;
  COFD[6712] = -2.26522008E+01;
  COFD[6713] = 5.24607008E+00;
  COFD[6714] = -4.13634542E-01;
  COFD[6715] = 1.58853577E-02;
  COFD[6716] = -2.31045183E+01;
  COFD[6717] = 5.38724026E+00;
  COFD[6718] = -4.36319971E-01;
  COFD[6719] = 1.70306665E-02;
  COFD[6720] = -2.31235321E+01;
  COFD[6721] = 5.40224339E+00;
  COFD[6722] = -4.39442968E-01;
  COFD[6723] = 1.72102199E-02;
  COFD[6724] = -2.22970312E+01;
  COFD[6725] = 5.17327578E+00;
  COFD[6726] = -3.99835717E-01;
  COFD[6727] = 1.51252623E-02;
  COFD[6728] = -2.23033507E+01;
  COFD[6729] = 5.17327578E+00;
  COFD[6730] = -3.99835717E-01;
  COFD[6731] = 1.51252623E-02;
  COFD[6732] = -2.26246018E+01;
  COFD[6733] = 5.27897272E+00;
  COFD[6734] = -4.17421132E-01;
  COFD[6735] = 1.60310357E-02;
  COFD[6736] = -2.27232066E+01;
  COFD[6737] = 5.26126975E+00;
  COFD[6738] = -4.16242050E-01;
  COFD[6739] = 1.60218081E-02;
  COFD[6740] = -2.27896248E+01;
  COFD[6741] = 5.13933761E+00;
  COFD[6742] = -3.94086393E-01;
  COFD[6743] = 1.48263732E-02;
  COFD[6744] = -2.27277736E+01;
  COFD[6745] = 5.13933761E+00;
  COFD[6746] = -3.94086393E-01;
  COFD[6747] = 1.48263732E-02;
  COFD[6748] = -2.27431569E+01;
  COFD[6749] = 5.48304850E+00;
  COFD[6750] = -4.57579455E-01;
  COFD[6751] = 1.82812528E-02;
  COFD[6752] = -2.27564990E+01;
  COFD[6753] = 5.47937827E+00;
  COFD[6754] = -4.56129749E-01;
  COFD[6755] = 1.81820758E-02;
  COFD[6756] = -2.28567174E+01;
  COFD[6757] = 5.15297410E+00;
  COFD[6758] = -3.97643104E-01;
  COFD[6759] = 1.50471734E-02;
  COFD[6760] = -2.26780998E+01;
  COFD[6761] = 5.18129005E+00;
  COFD[6762] = -4.02449411E-01;
  COFD[6763] = 1.52976327E-02;
  COFD[6764] = -2.27790082E+01;
  COFD[6765] = 5.20168941E+00;
  COFD[6766] = -4.06049768E-01;
  COFD[6767] = 1.54891492E-02;
  COFD[6768] = -2.27719446E+01;
  COFD[6769] = 5.15606268E+00;
  COFD[6770] = -3.96907901E-01;
  COFD[6771] = 1.49727202E-02;
  COFD[6772] = -2.28163969E+01;
  COFD[6773] = 5.15297410E+00;
  COFD[6774] = -3.97643104E-01;
  COFD[6775] = 1.50471734E-02;
  COFD[6776] = -2.28137467E+01;
  COFD[6777] = 5.15297410E+00;
  COFD[6778] = -3.97643104E-01;
  COFD[6779] = 1.50471734E-02;
  COFD[6780] = -2.31022533E+01;
  COFD[6781] = 5.23643800E+00;
  COFD[6782] = -4.10255644E-01;
  COFD[6783] = 1.56593397E-02;
  COFD[6784] = -2.25844302E+01;
  COFD[6785] = 4.91727636E+00;
  COFD[6786] = -3.59056495E-01;
  COFD[6787] = 1.30783725E-02;
  COFD[6788] = -2.25844302E+01;
  COFD[6789] = 4.91727636E+00;
  COFD[6790] = -3.59056495E-01;
  COFD[6791] = 1.30783725E-02;
  COFD[6792] = -2.25844302E+01;
  COFD[6793] = 4.91727636E+00;
  COFD[6794] = -3.59056495E-01;
  COFD[6795] = 1.30783725E-02;
  COFD[6796] = -2.25844302E+01;
  COFD[6797] = 4.91727636E+00;
  COFD[6798] = -3.59056495E-01;
  COFD[6799] = 1.30783725E-02;
  COFD[6800] = -2.25844302E+01;
  COFD[6801] = 4.91727636E+00;
  COFD[6802] = -3.59056495E-01;
  COFD[6803] = 1.30783725E-02;
  COFD[6804] = -2.25319242E+01;
  COFD[6805] = 4.79201226E+00;
  COFD[6806] = -3.39345463E-01;
  COFD[6807] = 1.20970888E-02;
  COFD[6808] = -2.29010028E+01;
  COFD[6809] = 5.09658829E+00;
  COFD[6810] = -3.87036802E-01;
  COFD[6811] = 1.44650532E-02;
  COFD[6812] = -2.29010028E+01;
  COFD[6813] = 5.09658829E+00;
  COFD[6814] = -3.87036802E-01;
  COFD[6815] = 1.44650532E-02;
  COFD[6816] = -1.96740363E+01;
  COFD[6817] = 4.68296254E+00;
  COFD[6818] = -3.83520383E-01;
  COFD[6819] = 1.62187256E-02;
  COFD[6820] = -1.92369503E+01;
  COFD[6821] = 5.34516253E+00;
  COFD[6822] = -4.57548788E-01;
  COFD[6823] = 1.89625374E-02;
  COFD[6824] = -1.53691820E+01;
  COFD[6825] = 3.80403213E+00;
  COFD[6826] = -2.76736813E-01;
  COFD[6827] = 1.18808568E-02;
  COFD[6828] = -1.87900651E+01;
  COFD[6829] = 4.71430273E+00;
  COFD[6830] = -3.87319126E-01;
  COFD[6831] = 1.63728857E-02;
  COFD[6832] = -2.02632124E+01;
  COFD[6833] = 5.06295779E+00;
  COFD[6834] = -4.27579258E-01;
  COFD[6835] = 1.79215546E-02;
  COFD[6836] = -1.88126818E+01;
  COFD[6837] = 4.71430273E+00;
  COFD[6838] = -3.87319126E-01;
  COFD[6839] = 1.63728857E-02;
  COFD[6840] = -1.96947991E+01;
  COFD[6841] = 4.41245751E+00;
  COFD[6842] = -2.80855500E-01;
  COFD[6843] = 9.22505777E-03;
  COFD[6844] = -1.99421798E+01;
  COFD[6845] = 4.94937905E+00;
  COFD[6846] = -4.14409534E-01;
  COFD[6847] = 1.74121859E-02;
  COFD[6848] = -2.21101062E+01;
  COFD[6849] = 5.48782481E+00;
  COFD[6850] = -4.59567900E-01;
  COFD[6851] = 1.84190115E-02;
  COFD[6852] = -2.09768659E+01;
  COFD[6853] = 5.33874924E+00;
  COFD[6854] = -4.56879272E-01;
  COFD[6855] = 1.89397603E-02;
  COFD[6856] = -2.09241806E+01;
  COFD[6857] = 5.31839685E+00;
  COFD[6858] = -4.54623948E-01;
  COFD[6859] = 1.88567295E-02;
  COFD[6860] = -2.02723834E+01;
  COFD[6861] = 5.06295779E+00;
  COFD[6862] = -4.27579258E-01;
  COFD[6863] = 1.79215546E-02;
  COFD[6864] = -2.02811672E+01;
  COFD[6865] = 5.06295779E+00;
  COFD[6866] = -4.27579258E-01;
  COFD[6867] = 1.79215546E-02;
  COFD[6868] = -2.07973052E+01;
  COFD[6869] = 4.73262810E+00;
  COFD[6870] = -3.29863658E-01;
  COFD[6871] = 1.16208974E-02;
  COFD[6872] = -2.21631204E+01;
  COFD[6873] = 5.48560730E+00;
  COFD[6874] = -4.58746417E-01;
  COFD[6875] = 1.83631968E-02;
  COFD[6876] = -2.18947777E+01;
  COFD[6877] = 5.49121786E+00;
  COFD[6878] = -4.60888505E-01;
  COFD[6879] = 1.85096783E-02;
  COFD[6880] = -2.21526520E+01;
  COFD[6881] = 5.48560730E+00;
  COFD[6882] = -4.58746417E-01;
  COFD[6883] = 1.83631968E-02;
  COFD[6884] = -2.19909747E+01;
  COFD[6885] = 5.47597765E+00;
  COFD[6886] = -4.55020526E-01;
  COFD[6887] = 1.81091205E-02;
  COFD[6888] = -2.20031155E+01;
  COFD[6889] = 5.47597765E+00;
  COFD[6890] = -4.55020526E-01;
  COFD[6891] = 1.81091205E-02;
  COFD[6892] = -2.14996151E+01;
  COFD[6893] = 4.99422177E+00;
  COFD[6894] = -3.70645569E-01;
  COFD[6895] = 1.36394075E-02;
  COFD[6896] = -2.10414394E+01;
  COFD[6897] = 5.37676571E+00;
  COFD[6898] = -4.60857509E-01;
  COFD[6899] = 1.90756062E-02;
  COFD[6900] = -2.15118459E+01;
  COFD[6901] = 4.99422177E+00;
  COFD[6902] = -3.70645569E-01;
  COFD[6903] = 1.36394075E-02;
  COFD[6904] = -2.21918543E+01;
  COFD[6905] = 5.36809191E+00;
  COFD[6906] = -4.32908721E-01;
  COFD[6907] = 1.68481857E-02;
  COFD[6908] = -2.22224108E+01;
  COFD[6909] = 5.41240338E+00;
  COFD[6910] = -4.41033923E-01;
  COFD[6911] = 1.72894624E-02;
  COFD[6912] = -2.22319690E+01;
  COFD[6913] = 5.27340167E+00;
  COFD[6914] = -4.16479301E-01;
  COFD[6915] = 1.59820820E-02;
  COFD[6916] = -2.24051776E+01;
  COFD[6917] = 5.42274627E+00;
  COFD[6918] = -4.43011109E-01;
  COFD[6919] = 1.73990243E-02;
  COFD[6920] = -2.22294845E+01;
  COFD[6921] = 5.27973457E+00;
  COFD[6922] = -4.17551922E-01;
  COFD[6923] = 1.60378887E-02;
  COFD[6924] = -2.22336383E+01;
  COFD[6925] = 5.27973457E+00;
  COFD[6926] = -4.17551922E-01;
  COFD[6927] = 1.60378887E-02;
  COFD[6928] = -2.18000293E+01;
  COFD[6929] = 4.99630533E+00;
  COFD[6930] = -3.70973757E-01;
  COFD[6931] = 1.36557558E-02;
  COFD[6932] = -2.17591011E+01;
  COFD[6933] = 4.99755422E+00;
  COFD[6934] = -3.71170522E-01;
  COFD[6935] = 1.36655589E-02;
  COFD[6936] = -2.22371684E+01;
  COFD[6937] = 5.14170132E+00;
  COFD[6938] = -3.94484367E-01;
  COFD[6939] = 1.48469922E-02;
  COFD[6940] = -2.22970312E+01;
  COFD[6941] = 5.17327578E+00;
  COFD[6942] = -3.99835717E-01;
  COFD[6943] = 1.51252623E-02;
  COFD[6944] = -2.10762425E+01;
  COFD[6945] = 4.80548676E+00;
  COFD[6946] = -3.41059239E-01;
  COFD[6947] = 1.21698161E-02;
  COFD[6948] = -2.10815157E+01;
  COFD[6949] = 4.80548676E+00;
  COFD[6950] = -3.41059239E-01;
  COFD[6951] = 1.21698161E-02;
  COFD[6952] = -2.15475886E+01;
  COFD[6953] = 4.96375446E+00;
  COFD[6954] = -3.65860553E-01;
  COFD[6955] = 1.34014562E-02;
  COFD[6956] = -2.18709054E+01;
  COFD[6957] = 5.02398766E+00;
  COFD[6958] = -3.75343697E-01;
  COFD[6959] = 1.38737246E-02;
  COFD[6960] = -2.15257382E+01;
  COFD[6961] = 4.74186298E+00;
  COFD[6962] = -3.31277501E-01;
  COFD[6963] = 1.16900688E-02;
  COFD[6964] = -2.14778843E+01;
  COFD[6965] = 4.74186298E+00;
  COFD[6966] = -3.31277501E-01;
  COFD[6967] = 1.16900688E-02;
  COFD[6968] = -2.22125351E+01;
  COFD[6969] = 5.39199985E+00;
  COFD[6970] = -4.37219136E-01;
  COFD[6971] = 1.70801890E-02;
  COFD[6972] = -2.21849341E+01;
  COFD[6973] = 5.36809191E+00;
  COFD[6974] = -4.32908721E-01;
  COFD[6975] = 1.68481857E-02;
  COFD[6976] = -2.18010620E+01;
  COFD[6977] = 4.82886477E+00;
  COFD[6978] = -3.44704925E-01;
  COFD[6979] = 1.23501995E-02;
  COFD[6980] = -2.16580033E+01;
  COFD[6981] = 4.87709635E+00;
  COFD[6982] = -3.52250416E-01;
  COFD[6983] = 1.27244832E-02;
  COFD[6984] = -2.18230789E+01;
  COFD[6985] = 4.91762397E+00;
  COFD[6986] = -3.58634830E-01;
  COFD[6987] = 1.30425594E-02;
  COFD[6988] = -2.15669398E+01;
  COFD[6989] = 4.77388530E+00;
  COFD[6990] = -3.36183750E-01;
  COFD[6991] = 1.19302239E-02;
  COFD[6992] = -2.17696088E+01;
  COFD[6993] = 4.82886477E+00;
  COFD[6994] = -3.44704925E-01;
  COFD[6995] = 1.23501995E-02;
  COFD[6996] = -2.17675221E+01;
  COFD[6997] = 4.82886477E+00;
  COFD[6998] = -3.44704925E-01;
  COFD[6999] = 1.23501995E-02;
  COFD[7000] = -2.20221557E+01;
  COFD[7001] = 4.89616559E+00;
  COFD[7002] = -3.55241555E-01;
  COFD[7003] = 1.28731550E-02;
  COFD[7004] = -2.12201150E+01;
  COFD[7005] = 4.46261834E+00;
  COFD[7006] = -2.88453410E-01;
  COFD[7007] = 9.59378935E-03;
  COFD[7008] = -2.12201150E+01;
  COFD[7009] = 4.46261834E+00;
  COFD[7010] = -2.88453410E-01;
  COFD[7011] = 9.59378935E-03;
  COFD[7012] = -2.12201150E+01;
  COFD[7013] = 4.46261834E+00;
  COFD[7014] = -2.88453410E-01;
  COFD[7015] = 9.59378935E-03;
  COFD[7016] = -2.12201150E+01;
  COFD[7017] = 4.46261834E+00;
  COFD[7018] = -2.88453410E-01;
  COFD[7019] = 9.59378935E-03;
  COFD[7020] = -2.12201150E+01;
  COFD[7021] = 4.46261834E+00;
  COFD[7022] = -2.88453410E-01;
  COFD[7023] = 9.59378935E-03;
  COFD[7024] = -2.10625877E+01;
  COFD[7025] = 4.28688746E+00;
  COFD[7026] = -2.61952393E-01;
  COFD[7027] = 8.31175423E-03;
  COFD[7028] = -2.16041924E+01;
  COFD[7029] = 4.66858934E+00;
  COFD[7030] = -3.20108476E-01;
  COFD[7031] = 1.11452199E-02;
  COFD[7032] = -2.16041924E+01;
  COFD[7033] = 4.66858934E+00;
  COFD[7034] = -3.20108476E-01;
  COFD[7035] = 1.11452199E-02;
  COFD[7036] = -1.99112694E+01;
  COFD[7037] = 4.94145734E+00;
  COFD[7038] = -4.13478429E-01;
  COFD[7039] = 1.73756310E-02;
  COFD[7040] = -1.92371704E+01;
  COFD[7041] = 5.34516253E+00;
  COFD[7042] = -4.57548788E-01;
  COFD[7043] = 1.89625374E-02;
  COFD[7044] = -1.53696134E+01;
  COFD[7045] = 3.80403213E+00;
  COFD[7046] = -2.76736813E-01;
  COFD[7047] = 1.18808568E-02;
  COFD[7048] = -1.87927351E+01;
  COFD[7049] = 4.71430273E+00;
  COFD[7050] = -3.87319126E-01;
  COFD[7051] = 1.63728857E-02;
  COFD[7052] = -2.02674781E+01;
  COFD[7053] = 5.06295779E+00;
  COFD[7054] = -4.27579258E-01;
  COFD[7055] = 1.79215546E-02;
  COFD[7056] = -1.88154757E+01;
  COFD[7057] = 4.71430273E+00;
  COFD[7058] = -3.87319126E-01;
  COFD[7059] = 1.63728857E-02;
  COFD[7060] = -1.96977130E+01;
  COFD[7061] = 4.41245751E+00;
  COFD[7062] = -2.80855500E-01;
  COFD[7063] = 9.22505777E-03;
  COFD[7064] = -1.99461111E+01;
  COFD[7065] = 4.94937905E+00;
  COFD[7066] = -4.14409534E-01;
  COFD[7067] = 1.74121859E-02;
  COFD[7068] = -2.21152034E+01;
  COFD[7069] = 5.48782481E+00;
  COFD[7070] = -4.59567900E-01;
  COFD[7071] = 1.84190115E-02;
  COFD[7072] = -2.09794137E+01;
  COFD[7073] = 5.33874924E+00;
  COFD[7074] = -4.56879272E-01;
  COFD[7075] = 1.89397603E-02;
  COFD[7076] = -2.09268561E+01;
  COFD[7077] = 5.31839685E+00;
  COFD[7078] = -4.54623948E-01;
  COFD[7079] = 1.88567295E-02;
  COFD[7080] = -2.02767285E+01;
  COFD[7081] = 5.06295779E+00;
  COFD[7082] = -4.27579258E-01;
  COFD[7083] = 1.79215546E-02;
  COFD[7084] = -2.02855896E+01;
  COFD[7085] = 5.06295779E+00;
  COFD[7086] = -4.27579258E-01;
  COFD[7087] = 1.79215546E-02;
  COFD[7088] = -2.08014098E+01;
  COFD[7089] = 4.73262810E+00;
  COFD[7090] = -3.29863658E-01;
  COFD[7091] = 1.16208974E-02;
  COFD[7092] = -2.21672288E+01;
  COFD[7093] = 5.48560730E+00;
  COFD[7094] = -4.58746417E-01;
  COFD[7095] = 1.83631968E-02;
  COFD[7096] = -2.18987128E+01;
  COFD[7097] = 5.49121786E+00;
  COFD[7098] = -4.60888505E-01;
  COFD[7099] = 1.85096783E-02;
  COFD[7100] = -2.21566749E+01;
  COFD[7101] = 5.48560730E+00;
  COFD[7102] = -4.58746417E-01;
  COFD[7103] = 1.83631968E-02;
  COFD[7104] = -2.19947271E+01;
  COFD[7105] = 5.47597765E+00;
  COFD[7106] = -4.55020526E-01;
  COFD[7107] = 1.81091205E-02;
  COFD[7108] = -2.20069605E+01;
  COFD[7109] = 5.47597765E+00;
  COFD[7110] = -4.55020526E-01;
  COFD[7111] = 1.81091205E-02;
  COFD[7112] = -2.15045910E+01;
  COFD[7113] = 4.99422177E+00;
  COFD[7114] = -3.70645569E-01;
  COFD[7115] = 1.36394075E-02;
  COFD[7116] = -2.10463513E+01;
  COFD[7117] = 5.37676571E+00;
  COFD[7118] = -4.60857509E-01;
  COFD[7119] = 1.90756062E-02;
  COFD[7120] = -2.15169457E+01;
  COFD[7121] = 4.99422177E+00;
  COFD[7122] = -3.70645569E-01;
  COFD[7123] = 1.36394075E-02;
  COFD[7124] = -2.21967036E+01;
  COFD[7125] = 5.36809191E+00;
  COFD[7126] = -4.32908721E-01;
  COFD[7127] = 1.68481857E-02;
  COFD[7128] = -2.22273895E+01;
  COFD[7129] = 5.41240338E+00;
  COFD[7130] = -4.41033923E-01;
  COFD[7131] = 1.72894624E-02;
  COFD[7132] = -2.22376124E+01;
  COFD[7133] = 5.27340167E+00;
  COFD[7134] = -4.16479301E-01;
  COFD[7135] = 1.59820820E-02;
  COFD[7136] = -2.24102189E+01;
  COFD[7137] = 5.42274627E+00;
  COFD[7138] = -4.43011109E-01;
  COFD[7139] = 1.73990243E-02;
  COFD[7140] = -2.22351766E+01;
  COFD[7141] = 5.27973457E+00;
  COFD[7142] = -4.17551922E-01;
  COFD[7143] = 1.60378887E-02;
  COFD[7144] = -2.22393782E+01;
  COFD[7145] = 5.27973457E+00;
  COFD[7146] = -4.17551922E-01;
  COFD[7147] = 1.60378887E-02;
  COFD[7148] = -2.18058140E+01;
  COFD[7149] = 4.99630533E+00;
  COFD[7150] = -3.70973757E-01;
  COFD[7151] = 1.36557558E-02;
  COFD[7152] = -2.17649318E+01;
  COFD[7153] = 4.99755422E+00;
  COFD[7154] = -3.71170522E-01;
  COFD[7155] = 1.36655589E-02;
  COFD[7156] = -2.22434509E+01;
  COFD[7157] = 5.14170132E+00;
  COFD[7158] = -3.94484367E-01;
  COFD[7159] = 1.48469922E-02;
  COFD[7160] = -2.23033507E+01;
  COFD[7161] = 5.17327578E+00;
  COFD[7162] = -3.99835717E-01;
  COFD[7163] = 1.51252623E-02;
  COFD[7164] = -2.10815157E+01;
  COFD[7165] = 4.80548676E+00;
  COFD[7166] = -3.41059239E-01;
  COFD[7167] = 1.21698161E-02;
  COFD[7168] = -2.10868452E+01;
  COFD[7169] = 4.80548676E+00;
  COFD[7170] = -3.41059239E-01;
  COFD[7171] = 1.21698161E-02;
  COFD[7172] = -2.15532786E+01;
  COFD[7173] = 4.96375446E+00;
  COFD[7174] = -3.65860553E-01;
  COFD[7175] = 1.34014562E-02;
  COFD[7176] = -2.18766432E+01;
  COFD[7177] = 5.02398766E+00;
  COFD[7178] = -3.75343697E-01;
  COFD[7179] = 1.38737246E-02;
  COFD[7180] = -2.15333524E+01;
  COFD[7181] = 4.74186298E+00;
  COFD[7182] = -3.31277501E-01;
  COFD[7183] = 1.16900688E-02;
  COFD[7184] = -2.14847988E+01;
  COFD[7185] = 4.74186298E+00;
  COFD[7186] = -3.31277501E-01;
  COFD[7187] = 1.16900688E-02;
  COFD[7188] = -2.22174499E+01;
  COFD[7189] = 5.39199985E+00;
  COFD[7190] = -4.37219136E-01;
  COFD[7191] = 1.70801890E-02;
  COFD[7192] = -2.21897164E+01;
  COFD[7193] = 5.36809191E+00;
  COFD[7194] = -4.32908721E-01;
  COFD[7195] = 1.68481857E-02;
  COFD[7196] = -2.18083411E+01;
  COFD[7197] = 4.82886477E+00;
  COFD[7198] = -3.44704925E-01;
  COFD[7199] = 1.23501995E-02;
  COFD[7200] = -2.16643935E+01;
  COFD[7201] = 4.87709635E+00;
  COFD[7202] = -3.52250416E-01;
  COFD[7203] = 1.27244832E-02;
  COFD[7204] = -2.18294333E+01;
  COFD[7205] = 4.91762397E+00;
  COFD[7206] = -3.58634830E-01;
  COFD[7207] = 1.30425594E-02;
  COFD[7208] = -2.15737433E+01;
  COFD[7209] = 4.77388530E+00;
  COFD[7210] = -3.36183750E-01;
  COFD[7211] = 1.19302239E-02;
  COFD[7212] = -2.17764410E+01;
  COFD[7213] = 4.82886477E+00;
  COFD[7214] = -3.44704925E-01;
  COFD[7215] = 1.23501995E-02;
  COFD[7216] = -2.17743256E+01;
  COFD[7217] = 4.82886477E+00;
  COFD[7218] = -3.44704925E-01;
  COFD[7219] = 1.23501995E-02;
  COFD[7220] = -2.20293470E+01;
  COFD[7221] = 4.89616559E+00;
  COFD[7222] = -3.55241555E-01;
  COFD[7223] = 1.28731550E-02;
  COFD[7224] = -2.12278978E+01;
  COFD[7225] = 4.46261834E+00;
  COFD[7226] = -2.88453410E-01;
  COFD[7227] = 9.59378935E-03;
  COFD[7228] = -2.12278978E+01;
  COFD[7229] = 4.46261834E+00;
  COFD[7230] = -2.88453410E-01;
  COFD[7231] = 9.59378935E-03;
  COFD[7232] = -2.12278978E+01;
  COFD[7233] = 4.46261834E+00;
  COFD[7234] = -2.88453410E-01;
  COFD[7235] = 9.59378935E-03;
  COFD[7236] = -2.12278978E+01;
  COFD[7237] = 4.46261834E+00;
  COFD[7238] = -2.88453410E-01;
  COFD[7239] = 9.59378935E-03;
  COFD[7240] = -2.12278978E+01;
  COFD[7241] = 4.46261834E+00;
  COFD[7242] = -2.88453410E-01;
  COFD[7243] = 9.59378935E-03;
  COFD[7244] = -2.10707986E+01;
  COFD[7245] = 4.28688746E+00;
  COFD[7246] = -2.61952393E-01;
  COFD[7247] = 8.31175423E-03;
  COFD[7248] = -2.16116786E+01;
  COFD[7249] = 4.66858934E+00;
  COFD[7250] = -3.20108476E-01;
  COFD[7251] = 1.11452199E-02;
  COFD[7252] = -2.16116786E+01;
  COFD[7253] = 4.66858934E+00;
  COFD[7254] = -3.20108476E-01;
  COFD[7255] = 1.11452199E-02;
  COFD[7256] = -1.99152010E+01;
  COFD[7257] = 4.94145734E+00;
  COFD[7258] = -4.13478429E-01;
  COFD[7259] = 1.73756310E-02;
  COFD[7260] = -1.91106509E+01;
  COFD[7261] = 5.24865128E+00;
  COFD[7262] = -4.46802764E-01;
  COFD[7263] = 1.85649476E-02;
  COFD[7264] = -1.52493362E+01;
  COFD[7265] = 3.70713307E+00;
  COFD[7266] = -2.64771252E-01;
  COFD[7267] = 1.13878078E-02;
  COFD[7268] = -1.85961945E+01;
  COFD[7269] = 4.58430295E+00;
  COFD[7270] = -3.71395187E-01;
  COFD[7271] = 1.57196293E-02;
  COFD[7272] = -2.01222270E+01;
  COFD[7273] = 4.95889869E+00;
  COFD[7274] = -4.15526934E-01;
  COFD[7275] = 1.74559870E-02;
  COFD[7276] = -1.86197007E+01;
  COFD[7277] = 4.58430295E+00;
  COFD[7278] = -3.71395187E-01;
  COFD[7279] = 1.57196293E-02;
  COFD[7280] = -2.02528119E+01;
  COFD[7281] = 4.60540477E+00;
  COFD[7282] = -3.10373488E-01;
  COFD[7283] = 1.06672049E-02;
  COFD[7284] = -1.98245558E+01;
  COFD[7285] = 4.85730922E+00;
  COFD[7286] = -4.04004009E-01;
  COFD[7287] = 1.70221852E-02;
  COFD[7288] = -2.22150026E+01;
  COFD[7289] = 5.49406269E+00;
  COFD[7290] = -4.63519837E-01;
  COFD[7291] = 1.87101015E-02;
  COFD[7292] = -2.08233356E+01;
  COFD[7293] = 5.23993213E+00;
  COFD[7294] = -4.45818789E-01;
  COFD[7295] = 1.85280084E-02;
  COFD[7296] = -2.07627158E+01;
  COFD[7297] = 5.21569495E+00;
  COFD[7298] = -4.43054270E-01;
  COFD[7299] = 1.84229515E-02;
  COFD[7300] = -2.01319787E+01;
  COFD[7301] = 4.95889869E+00;
  COFD[7302] = -4.15526934E-01;
  COFD[7303] = 1.74559870E-02;
  COFD[7304] = -2.01413294E+01;
  COFD[7305] = 4.95889869E+00;
  COFD[7306] = -4.15526934E-01;
  COFD[7307] = 1.74559870E-02;
  COFD[7308] = -2.12869371E+01;
  COFD[7309] = 4.90168525E+00;
  COFD[7310] = -3.56120032E-01;
  COFD[7311] = 1.29171867E-02;
  COFD[7312] = -2.22550199E+01;
  COFD[7313] = 5.49328085E+00;
  COFD[7314] = -4.62887295E-01;
  COFD[7315] = 1.86623580E-02;
  COFD[7316] = -2.19808106E+01;
  COFD[7317] = 5.49090680E+00;
  COFD[7318] = -4.63910285E-01;
  COFD[7319] = 1.87574539E-02;
  COFD[7320] = -2.22439277E+01;
  COFD[7321] = 5.49328085E+00;
  COFD[7322] = -4.62887295E-01;
  COFD[7323] = 1.86623580E-02;
  COFD[7324] = -2.21031421E+01;
  COFD[7325] = 5.48779691E+00;
  COFD[7326] = -4.59557311E-01;
  COFD[7327] = 1.84182884E-02;
  COFD[7328] = -2.21159565E+01;
  COFD[7329] = 5.48779691E+00;
  COFD[7330] = -4.59557311E-01;
  COFD[7331] = 1.84182884E-02;
  COFD[7332] = -2.19030728E+01;
  COFD[7333] = 5.12829880E+00;
  COFD[7334] = -3.92242339E-01;
  COFD[7335] = 1.47312337E-02;
  COFD[7336] = -2.09608889E+01;
  COFD[7337] = 5.29024160E+00;
  COFD[7338] = -4.51483508E-01;
  COFD[7339] = 1.87402157E-02;
  COFD[7340] = -2.19162190E+01;
  COFD[7341] = 5.12829880E+00;
  COFD[7342] = -3.92242339E-01;
  COFD[7343] = 1.47312337E-02;
  COFD[7344] = -2.24246517E+01;
  COFD[7345] = 5.43317403E+00;
  COFD[7346] = -4.45039640E-01;
  COFD[7347] = 1.75123239E-02;
  COFD[7348] = -2.24102834E+01;
  COFD[7349] = 5.45651702E+00;
  COFD[7350] = -4.50175370E-01;
  COFD[7351] = 1.78134258E-02;
  COFD[7352] = -2.25142005E+01;
  COFD[7353] = 5.35783672E+00;
  COFD[7354] = -4.31095103E-01;
  COFD[7355] = 1.67515802E-02;
  COFD[7356] = -2.25722965E+01;
  COFD[7357] = 5.46131219E+00;
  COFD[7358] = -4.51308224E-01;
  COFD[7359] = 1.78812832E-02;
  COFD[7360] = -2.25103062E+01;
  COFD[7361] = 5.36306078E+00;
  COFD[7362] = -4.32018705E-01;
  COFD[7363] = 1.68007664E-02;
  COFD[7364] = -2.25148161E+01;
  COFD[7365] = 5.36306078E+00;
  COFD[7366] = -4.32018705E-01;
  COFD[7367] = 1.68007664E-02;
  COFD[7368] = -2.21955977E+01;
  COFD[7369] = 5.12996650E+00;
  COFD[7370] = -3.92516016E-01;
  COFD[7371] = 1.47452270E-02;
  COFD[7372] = -2.21570145E+01;
  COFD[7373] = 5.13096622E+00;
  COFD[7374] = -3.92680132E-01;
  COFD[7375] = 1.47536199E-02;
  COFD[7376] = -2.25643421E+01;
  COFD[7377] = 5.24758220E+00;
  COFD[7378] = -4.12129116E-01;
  COFD[7379] = 1.57564573E-02;
  COFD[7380] = -2.26246018E+01;
  COFD[7381] = 5.27897272E+00;
  COFD[7382] = -4.17421132E-01;
  COFD[7383] = 1.60310357E-02;
  COFD[7384] = -2.15475886E+01;
  COFD[7385] = 4.96375446E+00;
  COFD[7386] = -3.65860553E-01;
  COFD[7387] = 1.34014562E-02;
  COFD[7388] = -2.15532786E+01;
  COFD[7389] = 4.96375446E+00;
  COFD[7390] = -3.65860553E-01;
  COFD[7391] = 1.34014562E-02;
  COFD[7392] = -2.19714724E+01;
  COFD[7393] = 5.10490214E+00;
  COFD[7394] = -3.88397529E-01;
  COFD[7395] = 1.45345306E-02;
  COFD[7396] = -2.22437765E+01;
  COFD[7397] = 5.14893259E+00;
  COFD[7398] = -3.95700512E-01;
  COFD[7399] = 1.49099774E-02;
  COFD[7400] = -2.20127475E+01;
  COFD[7401] = 4.90870671E+00;
  COFD[7402] = -3.57230884E-01;
  COFD[7403] = 1.29726599E-02;
  COFD[7404] = -2.19595704E+01;
  COFD[7405] = 4.90870671E+00;
  COFD[7406] = -3.57230884E-01;
  COFD[7407] = 1.29726599E-02;
  COFD[7408] = -2.24203604E+01;
  COFD[7409] = 5.44615881E+00;
  COFD[7410] = -4.47865005E-01;
  COFD[7411] = 1.76775502E-02;
  COFD[7412] = -2.24172380E+01;
  COFD[7413] = 5.43317403E+00;
  COFD[7414] = -4.45039640E-01;
  COFD[7415] = 1.75123239E-02;
  COFD[7416] = -2.22562443E+01;
  COFD[7417] = 4.98642801E+00;
  COFD[7418] = -3.69418838E-01;
  COFD[7419] = 1.35783254E-02;
  COFD[7420] = -2.21073704E+01;
  COFD[7421] = 5.03131423E+00;
  COFD[7422] = -3.76503291E-01;
  COFD[7423] = 1.39316539E-02;
  COFD[7424] = -2.22582181E+01;
  COFD[7425] = 5.06826700E+00;
  COFD[7426] = -3.82432503E-01;
  COFD[7427] = 1.42308185E-02;
  COFD[7428] = -2.20318291E+01;
  COFD[7429] = 4.93482700E+00;
  COFD[7430] = -3.61331756E-01;
  COFD[7431] = 1.31765767E-02;
  COFD[7432] = -2.22214013E+01;
  COFD[7433] = 4.98642801E+00;
  COFD[7434] = -3.69418838E-01;
  COFD[7435] = 1.35783254E-02;
  COFD[7436] = -2.22190979E+01;
  COFD[7437] = 4.98642801E+00;
  COFD[7438] = -3.69418838E-01;
  COFD[7439] = 1.35783254E-02;
  COFD[7440] = -2.24600183E+01;
  COFD[7441] = 5.04880598E+00;
  COFD[7442] = -3.79285322E-01;
  COFD[7443] = 1.40712210E-02;
  COFD[7444] = -2.17388948E+01;
  COFD[7445] = 4.64756828E+00;
  COFD[7446] = -3.16905849E-01;
  COFD[7447] = 1.09890709E-02;
  COFD[7448] = -2.17388948E+01;
  COFD[7449] = 4.64756828E+00;
  COFD[7450] = -3.16905849E-01;
  COFD[7451] = 1.09890709E-02;
  COFD[7452] = -2.17388948E+01;
  COFD[7453] = 4.64756828E+00;
  COFD[7454] = -3.16905849E-01;
  COFD[7455] = 1.09890709E-02;
  COFD[7456] = -2.17388948E+01;
  COFD[7457] = 4.64756828E+00;
  COFD[7458] = -3.16905849E-01;
  COFD[7459] = 1.09890709E-02;
  COFD[7460] = -2.17388948E+01;
  COFD[7461] = 4.64756828E+00;
  COFD[7462] = -3.16905849E-01;
  COFD[7463] = 1.09890709E-02;
  COFD[7464] = -2.16429021E+01;
  COFD[7465] = 4.49834811E+00;
  COFD[7466] = -2.93898563E-01;
  COFD[7467] = 9.85901966E-03;
  COFD[7468] = -2.21166421E+01;
  COFD[7469] = 4.85109413E+00;
  COFD[7470] = -3.48178913E-01;
  COFD[7471] = 1.25223681E-02;
  COFD[7472] = -2.21166421E+01;
  COFD[7473] = 4.85109413E+00;
  COFD[7474] = -3.48178913E-01;
  COFD[7475] = 1.25223681E-02;
  COFD[7476] = -1.97977801E+01;
  COFD[7477] = 4.85079945E+00;
  COFD[7478] = -4.03257284E-01;
  COFD[7479] = 1.69936877E-02;
  COFD[7480] = -1.92438273E+01;
  COFD[7481] = 5.20849012E+00;
  COFD[7482] = -4.42302201E-01;
  COFD[7483] = 1.83974704E-02;
  COFD[7484] = -1.57697076E+01;
  COFD[7485] = 3.80988507E+00;
  COFD[7486] = -2.77445350E-01;
  COFD[7487] = 1.19094492E-02;
  COFD[7488] = -1.87089736E+01;
  COFD[7489] = 4.54237822E+00;
  COFD[7490] = -3.66363712E-01;
  COFD[7491] = 1.55175729E-02;
  COFD[7492] = -2.05600475E+01;
  COFD[7493] = 5.03374077E+00;
  COFD[7494] = -4.24314621E-01;
  COFD[7495] = 1.78006513E-02;
  COFD[7496] = -1.87325776E+01;
  COFD[7497] = 4.54237822E+00;
  COFD[7498] = -3.66363712E-01;
  COFD[7499] = 1.55175729E-02;
  COFD[7500] = -1.86106579E+01;
  COFD[7501] = 3.70369058E+00;
  COFD[7502] = -1.75746849E-01;
  COFD[7503] = 4.23774136E-03;
  COFD[7504] = -2.02385115E+01;
  COFD[7505] = 4.92216764E+00;
  COFD[7506] = -4.11213743E-01;
  COFD[7507] = 1.72868489E-02;
  COFD[7508] = -2.24591391E+01;
  COFD[7509] = 5.49093617E+00;
  COFD[7510] = -4.61489557E-01;
  COFD[7511] = 1.85600321E-02;
  COFD[7512] = -2.09160336E+01;
  COFD[7513] = 5.20438984E+00;
  COFD[7514] = -4.41945569E-01;
  COFD[7515] = 1.83888515E-02;
  COFD[7516] = -2.12249557E+01;
  COFD[7517] = 5.29857440E+00;
  COFD[7518] = -4.52417036E-01;
  COFD[7519] = 1.87750286E-02;
  COFD[7520] = -2.02137676E+01;
  COFD[7521] = 4.91354418E+00;
  COFD[7522] = -4.10191969E-01;
  COFD[7523] = 1.72463969E-02;
  COFD[7524] = -2.02231823E+01;
  COFD[7525] = 4.91354418E+00;
  COFD[7526] = -4.10191969E-01;
  COFD[7527] = 1.72463969E-02;
  COFD[7528] = -2.16143887E+01;
  COFD[7529] = 4.96367791E+00;
  COFD[7530] = -3.65848555E-01;
  COFD[7531] = 1.34008603E-02;
  COFD[7532] = -2.24141981E+01;
  COFD[7533] = 5.49189132E+00;
  COFD[7534] = -4.63888808E-01;
  COFD[7535] = 1.87508465E-02;
  COFD[7536] = -2.21435646E+01;
  COFD[7537] = 5.48236053E+00;
  COFD[7538] = -4.63887012E-01;
  COFD[7539] = 1.87976815E-02;
  COFD[7540] = -2.24030357E+01;
  COFD[7541] = 5.49189132E+00;
  COFD[7542] = -4.63888808E-01;
  COFD[7543] = 1.87508465E-02;
  COFD[7544] = -2.22872244E+01;
  COFD[7545] = 5.49118605E+00;
  COFD[7546] = -4.61241736E-01;
  COFD[7547] = 1.85386070E-02;
  COFD[7548] = -2.23001141E+01;
  COFD[7549] = 5.49118605E+00;
  COFD[7550] = -4.61241736E-01;
  COFD[7551] = 1.85386070E-02;
  COFD[7552] = -2.21678089E+01;
  COFD[7553] = 5.16786857E+00;
  COFD[7554] = -3.98913959E-01;
  COFD[7555] = 1.50771754E-02;
  COFD[7556] = -2.10807180E+01;
  COFD[7557] = 5.24972538E+00;
  COFD[7558] = -4.46923248E-01;
  COFD[7559] = 1.85694358E-02;
  COFD[7560] = -2.21810595E+01;
  COFD[7561] = 5.16786857E+00;
  COFD[7562] = -3.98913959E-01;
  COFD[7563] = 1.50771754E-02;
  COFD[7564] = -2.26244821E+01;
  COFD[7565] = 5.44849005E+00;
  COFD[7566] = -4.48374875E-01;
  COFD[7567] = 1.77073338E-02;
  COFD[7568] = -2.26076378E+01;
  COFD[7569] = 5.46824702E+00;
  COFD[7570] = -4.52880728E-01;
  COFD[7571] = 1.79742471E-02;
  COFD[7572] = -2.27416215E+01;
  COFD[7573] = 5.38802436E+00;
  COFD[7574] = -4.36467632E-01;
  COFD[7575] = 1.70387872E-02;
  COFD[7576] = -2.27555070E+01;
  COFD[7577] = 5.47296422E+00;
  COFD[7578] = -4.54012873E-01;
  COFD[7579] = 1.80425810E-02;
  COFD[7580] = -2.27363370E+01;
  COFD[7581] = 5.39211717E+00;
  COFD[7582] = -4.37241388E-01;
  COFD[7583] = 1.70814168E-02;
  COFD[7584] = -2.27408880E+01;
  COFD[7585] = 5.39211717E+00;
  COFD[7586] = -4.37241388E-01;
  COFD[7587] = 1.70814168E-02;
  COFD[7588] = -2.24415083E+01;
  COFD[7589] = 5.16918377E+00;
  COFD[7590] = -3.99137871E-01;
  COFD[7591] = 1.50888488E-02;
  COFD[7592] = -2.10421315E+01;
  COFD[7593] = 4.51136058E+00;
  COFD[7594] = -3.00118079E-01;
  COFD[7595] = 1.03138594E-02;
  COFD[7596] = -2.27971297E+01;
  COFD[7597] = 5.28513609E+00;
  COFD[7598] = -4.18480689E-01;
  COFD[7599] = 1.60865907E-02;
  COFD[7600] = -2.27232066E+01;
  COFD[7601] = 5.26126975E+00;
  COFD[7602] = -4.16242050E-01;
  COFD[7603] = 1.60218081E-02;
  COFD[7604] = -2.18709054E+01;
  COFD[7605] = 5.02398766E+00;
  COFD[7606] = -3.75343697E-01;
  COFD[7607] = 1.38737246E-02;
  COFD[7608] = -2.18766432E+01;
  COFD[7609] = 5.02398766E+00;
  COFD[7610] = -3.75343697E-01;
  COFD[7611] = 1.38737246E-02;
  COFD[7612] = -2.22437765E+01;
  COFD[7613] = 5.14893259E+00;
  COFD[7614] = -3.95700512E-01;
  COFD[7615] = 1.49099774E-02;
  COFD[7616] = -2.11492873E+01;
  COFD[7617] = 4.54244355E+00;
  COFD[7618] = -3.05131351E-01;
  COFD[7619] = 1.05659716E-02;
  COFD[7620] = -2.23104632E+01;
  COFD[7621] = 4.97128400E+00;
  COFD[7622] = -3.67040865E-01;
  COFD[7623] = 1.34600858E-02;
  COFD[7624] = -2.22566551E+01;
  COFD[7625] = 4.97128400E+00;
  COFD[7626] = -3.67040865E-01;
  COFD[7627] = 1.34600858E-02;
  COFD[7628] = -2.26176923E+01;
  COFD[7629] = 5.45876240E+00;
  COFD[7630] = -4.50706326E-01;
  COFD[7631] = 1.78452467E-02;
  COFD[7632] = -2.26170122E+01;
  COFD[7633] = 5.44849005E+00;
  COFD[7634] = -4.48374875E-01;
  COFD[7635] = 1.77073338E-02;
  COFD[7636] = -2.15807975E+01;
  COFD[7637] = 4.61535250E+00;
  COFD[7638] = -3.16697948E-01;
  COFD[7639] = 1.11372758E-02;
  COFD[7640] = -2.11645170E+01;
  COFD[7641] = 4.51897933E+00;
  COFD[7642] = -3.01998406E-01;
  COFD[7643] = 1.04247672E-02;
  COFD[7644] = -2.11597849E+01;
  COFD[7645] = 4.47157715E+00;
  COFD[7646] = -2.94123357E-01;
  COFD[7647] = 1.00236363E-02;
  COFD[7648] = -2.23257299E+01;
  COFD[7649] = 4.99720991E+00;
  COFD[7650] = -3.71116272E-01;
  COFD[7651] = 1.36628560E-02;
  COFD[7652] = -2.15455542E+01;
  COFD[7653] = 4.61535250E+00;
  COFD[7654] = -3.16697948E-01;
  COFD[7655] = 1.11372758E-02;
  COFD[7656] = -2.15432253E+01;
  COFD[7657] = 4.61535250E+00;
  COFD[7658] = -3.16697948E-01;
  COFD[7659] = 1.11372758E-02;
  COFD[7660] = -2.27123248E+01;
  COFD[7661] = 5.10007015E+00;
  COFD[7662] = -3.87606161E-01;
  COFD[7663] = 1.44941102E-02;
  COFD[7664] = -2.16032548E+01;
  COFD[7665] = 4.53358858E+00;
  COFD[7666] = -3.02279996E-01;
  COFD[7667] = 1.03666174E-02;
  COFD[7668] = -2.16032548E+01;
  COFD[7669] = 4.53358858E+00;
  COFD[7670] = -3.02279996E-01;
  COFD[7671] = 1.03666174E-02;
  COFD[7672] = -2.16032548E+01;
  COFD[7673] = 4.53358858E+00;
  COFD[7674] = -3.02279996E-01;
  COFD[7675] = 1.03666174E-02;
  COFD[7676] = -2.16032548E+01;
  COFD[7677] = 4.53358858E+00;
  COFD[7678] = -3.02279996E-01;
  COFD[7679] = 1.03666174E-02;
  COFD[7680] = -2.16032548E+01;
  COFD[7681] = 4.53358858E+00;
  COFD[7682] = -3.02279996E-01;
  COFD[7683] = 1.03666174E-02;
  COFD[7684] = -2.15585497E+01;
  COFD[7685] = 4.41358668E+00;
  COFD[7686] = -2.83552169E-01;
  COFD[7687] = 9.43843063E-03;
  COFD[7688] = -2.23943834E+01;
  COFD[7689] = 4.91274983E+00;
  COFD[7690] = -3.57867526E-01;
  COFD[7691] = 1.30043584E-02;
  COFD[7692] = -2.23943834E+01;
  COFD[7693] = 4.91274983E+00;
  COFD[7694] = -3.57867526E-01;
  COFD[7695] = 1.30043584E-02;
  COFD[7696] = -2.01834936E+01;
  COFD[7697] = 4.90590042E+00;
  COFD[7698] = -4.09326365E-01;
  COFD[7699] = 1.72138687E-02;
  COFD[7700] = -1.98185899E+01;
  COFD[7701] = 5.37165711E+00;
  COFD[7702] = -4.60308124E-01;
  COFD[7703] = 1.90561552E-02;
  COFD[7704] = -1.58913557E+01;
  COFD[7705] = 3.83144376E+00;
  COFD[7706] = -2.80019474E-01;
  COFD[7707] = 1.20117632E-02;
  COFD[7708] = -1.94248426E+01;
  COFD[7709] = 4.75245509E+00;
  COFD[7710] = -3.91873770E-01;
  COFD[7711] = 1.65547689E-02;
  COFD[7712] = -2.08878558E+01;
  COFD[7713] = 5.08840643E+00;
  COFD[7714] = -4.30278621E-01;
  COFD[7715] = 1.80151378E-02;
  COFD[7716] = -1.94517296E+01;
  COFD[7717] = 4.75245509E+00;
  COFD[7718] = -3.91873770E-01;
  COFD[7719] = 1.65547689E-02;
  COFD[7720] = -2.00824677E+01;
  COFD[7721] = 4.33662443E+00;
  COFD[7722] = -2.69435804E-01;
  COFD[7723] = 8.67312749E-03;
  COFD[7724] = -2.05772472E+01;
  COFD[7725] = 4.98864146E+00;
  COFD[7726] = -4.19026905E-01;
  COFD[7727] = 1.75936103E-02;
  COFD[7728] = -2.26878063E+01;
  COFD[7729] = 5.48380398E+00;
  COFD[7730] = -4.57974253E-01;
  COFD[7731] = 1.83094814E-02;
  COFD[7732] = -2.15276865E+01;
  COFD[7733] = 5.36543873E+00;
  COFD[7734] = -4.59663888E-01;
  COFD[7735] = 1.90344598E-02;
  COFD[7736] = -2.14905918E+01;
  COFD[7737] = 5.34878663E+00;
  COFD[7738] = -4.57928417E-01;
  COFD[7739] = 1.89755219E-02;
  COFD[7740] = -2.09000828E+01;
  COFD[7741] = 5.08840643E+00;
  COFD[7742] = -4.30278621E-01;
  COFD[7743] = 1.80151378E-02;
  COFD[7744] = -2.09118647E+01;
  COFD[7745] = 5.08840643E+00;
  COFD[7746] = -4.30278621E-01;
  COFD[7747] = 1.80151378E-02;
  COFD[7748] = -2.11879260E+01;
  COFD[7749] = 4.66307429E+00;
  COFD[7750] = -3.19268748E-01;
  COFD[7751] = 1.11042875E-02;
  COFD[7752] = -2.26777941E+01;
  COFD[7753] = 5.48256348E+00;
  COFD[7754] = -4.57308388E-01;
  COFD[7755] = 1.82617123E-02;
  COFD[7756] = -2.24398733E+01;
  COFD[7757] = 5.48692553E+00;
  COFD[7758] = -4.59231858E-01;
  COFD[7759] = 1.83961320E-02;
  COFD[7760] = -2.26640907E+01;
  COFD[7761] = 5.48256348E+00;
  COFD[7762] = -4.57308388E-01;
  COFD[7763] = 1.82617123E-02;
  COFD[7764] = -2.25112349E+01;
  COFD[7765] = 5.46943905E+00;
  COFD[7766] = -4.53145052E-01;
  COFD[7767] = 1.79897579E-02;
  COFD[7768] = -2.25268126E+01;
  COFD[7769] = 5.46943905E+00;
  COFD[7770] = -4.53145052E-01;
  COFD[7771] = 1.79897579E-02;
  COFD[7772] = -2.19419415E+01;
  COFD[7773] = 4.93929985E+00;
  COFD[7774] = -3.62032491E-01;
  COFD[7775] = 1.32113867E-02;
  COFD[7776] = -2.17505179E+01;
  COFD[7777] = 5.40218903E+00;
  COFD[7778] = -4.63424692E-01;
  COFD[7779] = 1.91586776E-02;
  COFD[7780] = -2.19592226E+01;
  COFD[7781] = 4.93929985E+00;
  COFD[7782] = -3.62032491E-01;
  COFD[7783] = 1.32113867E-02;
  COFD[7784] = -2.26807109E+01;
  COFD[7785] = 5.34068356E+00;
  COFD[7786] = -4.28077042E-01;
  COFD[7787] = 1.65912184E-02;
  COFD[7788] = -2.27357910E+01;
  COFD[7789] = 5.39000359E+00;
  COFD[7790] = -4.36841172E-01;
  COFD[7791] = 1.70593509E-02;
  COFD[7792] = -2.27204878E+01;
  COFD[7793] = 5.23931156E+00;
  COFD[7794] = -4.10739101E-01;
  COFD[7795] = 1.56844121E-02;
  COFD[7796] = -2.28956318E+01;
  COFD[7797] = 5.40088492E+00;
  COFD[7798] = -4.38883324E-01;
  COFD[7799] = 1.71715242E-02;
  COFD[7800] = -2.27237265E+01;
  COFD[7801] = 5.24608533E+00;
  COFD[7802] = -4.11877553E-01;
  COFD[7803] = 1.57434190E-02;
  COFD[7804] = -2.27299388E+01;
  COFD[7805] = 5.24608533E+00;
  COFD[7806] = -4.11877553E-01;
  COFD[7807] = 1.57434190E-02;
  COFD[7808] = -2.22402586E+01;
  COFD[7809] = 4.94152082E+00;
  COFD[7810] = -3.62380091E-01;
  COFD[7811] = 1.32286449E-02;
  COFD[7812] = -2.22089879E+01;
  COFD[7813] = 4.94285417E+00;
  COFD[7814] = -3.62588783E-01;
  COFD[7815] = 1.32390069E-02;
  COFD[7816] = -2.27157100E+01;
  COFD[7817] = 5.10203936E+00;
  COFD[7818] = -3.87928434E-01;
  COFD[7819] = 1.45105651E-02;
  COFD[7820] = -2.27896248E+01;
  COFD[7821] = 5.13933761E+00;
  COFD[7822] = -3.94086393E-01;
  COFD[7823] = 1.48263732E-02;
  COFD[7824] = -2.15257382E+01;
  COFD[7825] = 4.74186298E+00;
  COFD[7826] = -3.31277501E-01;
  COFD[7827] = 1.16900688E-02;
  COFD[7828] = -2.15333524E+01;
  COFD[7829] = 4.74186298E+00;
  COFD[7830] = -3.31277501E-01;
  COFD[7831] = 1.16900688E-02;
  COFD[7832] = -2.20127475E+01;
  COFD[7833] = 4.90870671E+00;
  COFD[7834] = -3.57230884E-01;
  COFD[7835] = 1.29726599E-02;
  COFD[7836] = -2.23104632E+01;
  COFD[7837] = 4.97128400E+00;
  COFD[7838] = -3.67040865E-01;
  COFD[7839] = 1.34600858E-02;
  COFD[7840] = -2.20052435E+01;
  COFD[7841] = 4.67272010E+00;
  COFD[7842] = -3.20737504E-01;
  COFD[7843] = 1.11758841E-02;
  COFD[7844] = -2.19226838E+01;
  COFD[7845] = 4.67272010E+00;
  COFD[7846] = -3.20737504E-01;
  COFD[7847] = 1.11758841E-02;
  COFD[7848] = -2.27121006E+01;
  COFD[7849] = 5.36658159E+00;
  COFD[7850] = -4.32642435E-01;
  COFD[7851] = 1.68340152E-02;
  COFD[7852] = -2.26711072E+01;
  COFD[7853] = 5.34068356E+00;
  COFD[7854] = -4.28077042E-01;
  COFD[7855] = 1.65912184E-02;
  COFD[7856] = -2.22683529E+01;
  COFD[7857] = 4.76949339E+00;
  COFD[7858] = -3.35510618E-01;
  COFD[7859] = 1.18972671E-02;
  COFD[7860] = -2.21174163E+01;
  COFD[7861] = 4.82134659E+00;
  COFD[7862] = -3.43531135E-01;
  COFD[7863] = 1.22920882E-02;
  COFD[7864] = -2.22721784E+01;
  COFD[7865] = 4.86395981E+00;
  COFD[7866] = -3.50192897E-01;
  COFD[7867] = 1.26223235E-02;
  COFD[7868] = -2.20054081E+01;
  COFD[7869] = 4.70635758E+00;
  COFD[7870] = -3.25860889E-01;
  COFD[7871] = 1.14256815E-02;
  COFD[7872] = -2.22151840E+01;
  COFD[7873] = 4.76949339E+00;
  COFD[7874] = -3.35510618E-01;
  COFD[7875] = 1.18972671E-02;
  COFD[7876] = -2.22117360E+01;
  COFD[7877] = 4.76949339E+00;
  COFD[7878] = -3.35510618E-01;
  COFD[7879] = 1.18972671E-02;
  COFD[7880] = -2.24803811E+01;
  COFD[7881] = 4.84032349E+00;
  COFD[7882] = -3.46494716E-01;
  COFD[7883] = 1.24388375E-02;
  COFD[7884] = -2.16641291E+01;
  COFD[7885] = 4.38937431E+00;
  COFD[7886] = -2.77368709E-01;
  COFD[7887] = 9.05610965E-03;
  COFD[7888] = -2.16641291E+01;
  COFD[7889] = 4.38937431E+00;
  COFD[7890] = -2.77368709E-01;
  COFD[7891] = 9.05610965E-03;
  COFD[7892] = -2.16641291E+01;
  COFD[7893] = 4.38937431E+00;
  COFD[7894] = -2.77368709E-01;
  COFD[7895] = 9.05610965E-03;
  COFD[7896] = -2.16641291E+01;
  COFD[7897] = 4.38937431E+00;
  COFD[7898] = -2.77368709E-01;
  COFD[7899] = 9.05610965E-03;
  COFD[7900] = -2.16641291E+01;
  COFD[7901] = 4.38937431E+00;
  COFD[7902] = -2.77368709E-01;
  COFD[7903] = 9.05610965E-03;
  COFD[7904] = -2.14857867E+01;
  COFD[7905] = 4.20500747E+00;
  COFD[7906] = -2.49679875E-01;
  COFD[7907] = 7.72027057E-03;
  COFD[7908] = -2.20578311E+01;
  COFD[7909] = 4.60526318E+00;
  COFD[7910] = -3.10351603E-01;
  COFD[7911] = 1.06661278E-02;
  COFD[7912] = -2.20578311E+01;
  COFD[7913] = 4.60526318E+00;
  COFD[7914] = -3.10351603E-01;
  COFD[7915] = 1.06661278E-02;
  COFD[7916] = -2.05477587E+01;
  COFD[7917] = 4.98069219E+00;
  COFD[7918] = -4.18089208E-01;
  COFD[7919] = 1.75566350E-02;
  COFD[7920] = -1.98171101E+01;
  COFD[7921] = 5.37165711E+00;
  COFD[7922] = -4.60308124E-01;
  COFD[7923] = 1.90561552E-02;
  COFD[7924] = -1.58884248E+01;
  COFD[7925] = 3.83144376E+00;
  COFD[7926] = -2.80019474E-01;
  COFD[7927] = 1.20117632E-02;
  COFD[7928] = -1.94043204E+01;
  COFD[7929] = 4.75245509E+00;
  COFD[7930] = -3.91873770E-01;
  COFD[7931] = 1.65547689E-02;
  COFD[7932] = -2.08516766E+01;
  COFD[7933] = 5.08840643E+00;
  COFD[7934] = -4.30278621E-01;
  COFD[7935] = 1.80151378E-02;
  COFD[7936] = -1.94300978E+01;
  COFD[7937] = 4.75245509E+00;
  COFD[7938] = -3.91873770E-01;
  COFD[7939] = 1.65547689E-02;
  COFD[7940] = -2.00597448E+01;
  COFD[7941] = 4.33662443E+00;
  COFD[7942] = -2.69435804E-01;
  COFD[7943] = 8.67312749E-03;
  COFD[7944] = -2.05446133E+01;
  COFD[7945] = 4.98864146E+00;
  COFD[7946] = -4.19026905E-01;
  COFD[7947] = 1.75936103E-02;
  COFD[7948] = -2.26421092E+01;
  COFD[7949] = 5.48380398E+00;
  COFD[7950] = -4.57974253E-01;
  COFD[7951] = 1.83094814E-02;
  COFD[7952] = -2.15082432E+01;
  COFD[7953] = 5.36543873E+00;
  COFD[7954] = -4.59663888E-01;
  COFD[7955] = 1.90344598E-02;
  COFD[7956] = -2.14700208E+01;
  COFD[7957] = 5.34878663E+00;
  COFD[7958] = -4.57928417E-01;
  COFD[7959] = 1.89755219E-02;
  COFD[7960] = -2.08630404E+01;
  COFD[7961] = 5.08840643E+00;
  COFD[7962] = -4.30278621E-01;
  COFD[7963] = 1.80151378E-02;
  COFD[7964] = -2.08739717E+01;
  COFD[7965] = 5.08840643E+00;
  COFD[7966] = -4.30278621E-01;
  COFD[7967] = 1.80151378E-02;
  COFD[7968] = -2.11534734E+01;
  COFD[7969] = 4.66307429E+00;
  COFD[7970] = -3.19268748E-01;
  COFD[7971] = 1.11042875E-02;
  COFD[7972] = -2.26433024E+01;
  COFD[7973] = 5.48256348E+00;
  COFD[7974] = -4.57308388E-01;
  COFD[7975] = 1.82617123E-02;
  COFD[7976] = -2.24071991E+01;
  COFD[7977] = 5.48692553E+00;
  COFD[7978] = -4.59231858E-01;
  COFD[7979] = 1.83961320E-02;
  COFD[7980] = -2.26305009E+01;
  COFD[7981] = 5.48256348E+00;
  COFD[7982] = -4.57308388E-01;
  COFD[7983] = 1.82617123E-02;
  COFD[7984] = -2.24804350E+01;
  COFD[7985] = 5.46943905E+00;
  COFD[7986] = -4.53145052E-01;
  COFD[7987] = 1.79897579E-02;
  COFD[7988] = -2.24950683E+01;
  COFD[7989] = 5.46943905E+00;
  COFD[7990] = -4.53145052E-01;
  COFD[7991] = 1.79897579E-02;
  COFD[7992] = -2.18976991E+01;
  COFD[7993] = 4.93929985E+00;
  COFD[7994] = -3.62032491E-01;
  COFD[7995] = 1.32113867E-02;
  COFD[7996] = -2.17070345E+01;
  COFD[7997] = 5.40218903E+00;
  COFD[7998] = -4.63424692E-01;
  COFD[7999] = 1.91586776E-02;
  COFD[8000] = -2.19134934E+01;
  COFD[8001] = 4.93929985E+00;
  COFD[8002] = -3.62032491E-01;
  COFD[8003] = 1.32113867E-02;
  COFD[8004] = -2.26379633E+01;
  COFD[8005] = 5.34068356E+00;
  COFD[8006] = -4.28077042E-01;
  COFD[8007] = 1.65912184E-02;
  COFD[8008] = -2.26915158E+01;
  COFD[8009] = 5.39000359E+00;
  COFD[8010] = -4.36841172E-01;
  COFD[8011] = 1.70593509E-02;
  COFD[8012] = -2.26679216E+01;
  COFD[8013] = 5.23931156E+00;
  COFD[8014] = -4.10739101E-01;
  COFD[8015] = 1.56844121E-02;
  COFD[8016] = -2.28506085E+01;
  COFD[8017] = 5.40088492E+00;
  COFD[8018] = -4.38883324E-01;
  COFD[8019] = 1.71715242E-02;
  COFD[8020] = -2.26705216E+01;
  COFD[8021] = 5.24608533E+00;
  COFD[8022] = -4.11877553E-01;
  COFD[8023] = 1.57434190E-02;
  COFD[8024] = -2.26761033E+01;
  COFD[8025] = 5.24608533E+00;
  COFD[8026] = -4.11877553E-01;
  COFD[8027] = 1.57434190E-02;
  COFD[8028] = -2.21858274E+01;
  COFD[8029] = 4.94152082E+00;
  COFD[8030] = -3.62380091E-01;
  COFD[8031] = 1.32286449E-02;
  COFD[8032] = -2.21539415E+01;
  COFD[8033] = 4.94285417E+00;
  COFD[8034] = -3.62588783E-01;
  COFD[8035] = 1.32390069E-02;
  COFD[8036] = -2.26543913E+01;
  COFD[8037] = 5.10203936E+00;
  COFD[8038] = -3.87928434E-01;
  COFD[8039] = 1.45105651E-02;
  COFD[8040] = -2.27277736E+01;
  COFD[8041] = 5.13933761E+00;
  COFD[8042] = -3.94086393E-01;
  COFD[8043] = 1.48263732E-02;
  COFD[8044] = -2.14778843E+01;
  COFD[8045] = 4.74186298E+00;
  COFD[8046] = -3.31277501E-01;
  COFD[8047] = 1.16900688E-02;
  COFD[8048] = -2.14847988E+01;
  COFD[8049] = 4.74186298E+00;
  COFD[8050] = -3.31277501E-01;
  COFD[8051] = 1.16900688E-02;
  COFD[8052] = -2.19595704E+01;
  COFD[8053] = 4.90870671E+00;
  COFD[8054] = -3.57230884E-01;
  COFD[8055] = 1.29726599E-02;
  COFD[8056] = -2.22566551E+01;
  COFD[8057] = 4.97128400E+00;
  COFD[8058] = -3.67040865E-01;
  COFD[8059] = 1.34600858E-02;
  COFD[8060] = -2.19226838E+01;
  COFD[8061] = 4.67272010E+00;
  COFD[8062] = -3.20737504E-01;
  COFD[8063] = 1.11758841E-02;
  COFD[8064] = -2.18518439E+01;
  COFD[8065] = 4.67272010E+00;
  COFD[8066] = -3.20737504E-01;
  COFD[8067] = 1.11758841E-02;
  COFD[8068] = -2.26685839E+01;
  COFD[8069] = 5.36658159E+00;
  COFD[8070] = -4.32642435E-01;
  COFD[8071] = 1.68340152E-02;
  COFD[8072] = -2.26291396E+01;
  COFD[8073] = 5.34068356E+00;
  COFD[8074] = -4.28077042E-01;
  COFD[8075] = 1.65912184E-02;
  COFD[8076] = -2.21915733E+01;
  COFD[8077] = 4.76949339E+00;
  COFD[8078] = -3.35510618E-01;
  COFD[8079] = 1.18972671E-02;
  COFD[8080] = -2.20545407E+01;
  COFD[8081] = 4.82134659E+00;
  COFD[8082] = -3.43531135E-01;
  COFD[8083] = 1.22920882E-02;
  COFD[8084] = -2.22098235E+01;
  COFD[8085] = 4.86395981E+00;
  COFD[8086] = -3.50192897E-01;
  COFD[8087] = 1.26223235E-02;
  COFD[8088] = -2.19363071E+01;
  COFD[8089] = 4.70635758E+00;
  COFD[8090] = -3.25860889E-01;
  COFD[8091] = 1.14256815E-02;
  COFD[8092] = -2.21456365E+01;
  COFD[8093] = 4.76949339E+00;
  COFD[8094] = -3.35510618E-01;
  COFD[8095] = 1.18972671E-02;
  COFD[8096] = -2.21426349E+01;
  COFD[8097] = 4.76949339E+00;
  COFD[8098] = -3.35510618E-01;
  COFD[8099] = 1.18972671E-02;
  COFD[8100] = -2.24050628E+01;
  COFD[8101] = 4.84032349E+00;
  COFD[8102] = -3.46494716E-01;
  COFD[8103] = 1.24388375E-02;
  COFD[8104] = -2.15785372E+01;
  COFD[8105] = 4.38937431E+00;
  COFD[8106] = -2.77368709E-01;
  COFD[8107] = 9.05610965E-03;
  COFD[8108] = -2.15785372E+01;
  COFD[8109] = 4.38937431E+00;
  COFD[8110] = -2.77368709E-01;
  COFD[8111] = 9.05610965E-03;
  COFD[8112] = -2.15785372E+01;
  COFD[8113] = 4.38937431E+00;
  COFD[8114] = -2.77368709E-01;
  COFD[8115] = 9.05610965E-03;
  COFD[8116] = -2.15785372E+01;
  COFD[8117] = 4.38937431E+00;
  COFD[8118] = -2.77368709E-01;
  COFD[8119] = 9.05610965E-03;
  COFD[8120] = -2.15785372E+01;
  COFD[8121] = 4.38937431E+00;
  COFD[8122] = -2.77368709E-01;
  COFD[8123] = 9.05610965E-03;
  COFD[8124] = -2.13920876E+01;
  COFD[8125] = 4.20500747E+00;
  COFD[8126] = -2.49679875E-01;
  COFD[8127] = 7.72027057E-03;
  COFD[8128] = -2.19775159E+01;
  COFD[8129] = 4.60526318E+00;
  COFD[8130] = -3.10351603E-01;
  COFD[8131] = 1.06661278E-02;
  COFD[8132] = -2.19775159E+01;
  COFD[8133] = 4.60526318E+00;
  COFD[8134] = -3.10351603E-01;
  COFD[8135] = 1.06661278E-02;
  COFD[8136] = -2.05151212E+01;
  COFD[8137] = 4.98069219E+00;
  COFD[8138] = -4.18089208E-01;
  COFD[8139] = 1.75566350E-02;
  COFD[8140] = -1.80818156E+01;
  COFD[8141] = 4.90738815E+00;
  COFD[8142] = -4.09483894E-01;
  COFD[8143] = 1.72192910E-02;
  COFD[8144] = -1.42128224E+01;
  COFD[8145] = 3.31879365E+00;
  COFD[8146] = -2.16004062E-01;
  COFD[8147] = 9.34330595E-03;
  COFD[8148] = -1.73332828E+01;
  COFD[8149] = 4.13619942E+00;
  COFD[8150] = -3.16693330E-01;
  COFD[8151] = 1.34845235E-02;
  COFD[8152] = -1.88511202E+01;
  COFD[8153] = 4.53065425E+00;
  COFD[8154] = -3.64983473E-01;
  COFD[8155] = 1.54632547E-02;
  COFD[8156] = -1.73550784E+01;
  COFD[8157] = 4.13619942E+00;
  COFD[8158] = -3.16693330E-01;
  COFD[8159] = 1.34845235E-02;
  COFD[8160] = -2.13751981E+01;
  COFD[8161] = 5.21010770E+00;
  COFD[8162] = -4.05945421E-01;
  COFD[8163] = 1.54393383E-02;
  COFD[8164] = -1.85705444E+01;
  COFD[8165] = 4.42984539E+00;
  COFD[8166] = -3.53041284E-01;
  COFD[8167] = 1.49902085E-02;
  COFD[8168] = -2.17175166E+01;
  COFD[8169] = 5.42282789E+00;
  COFD[8170] = -4.65108864E-01;
  COFD[8171] = 1.91933632E-02;
  COFD[8172] = -1.97629727E+01;
  COFD[8173] = 4.90161091E+00;
  COFD[8174] = -4.08878655E-01;
  COFD[8175] = 1.71987880E-02;
  COFD[8176] = -1.97245204E+01;
  COFD[8177] = 4.88654569E+00;
  COFD[8178] = -4.07307743E-01;
  COFD[8179] = 1.71459608E-02;
  COFD[8180] = -1.88597779E+01;
  COFD[8181] = 4.53065425E+00;
  COFD[8182] = -3.64983473E-01;
  COFD[8183] = 1.54632547E-02;
  COFD[8184] = -1.88680616E+01;
  COFD[8185] = 4.53065425E+00;
  COFD[8186] = -3.64983473E-01;
  COFD[8187] = 1.54632547E-02;
  COFD[8188] = -2.20470482E+01;
  COFD[8189] = 5.36287304E+00;
  COFD[8190] = -4.31985459E-01;
  COFD[8191] = 1.67989944E-02;
  COFD[8192] = -2.17838465E+01;
  COFD[8193] = 5.42865606E+00;
  COFD[8194] = -4.65447368E-01;
  COFD[8195] = 1.91919264E-02;
  COFD[8196] = -2.14802331E+01;
  COFD[8197] = 5.41058359E+00;
  COFD[8198] = -4.64178328E-01;
  COFD[8199] = 1.91784294E-02;
  COFD[8200] = -2.17739332E+01;
  COFD[8201] = 5.42865606E+00;
  COFD[8202] = -4.65447368E-01;
  COFD[8203] = 1.91919264E-02;
  COFD[8204] = -2.16835860E+01;
  COFD[8205] = 5.44455741E+00;
  COFD[8206] = -4.65313340E-01;
  COFD[8207] = 1.91011181E-02;
  COFD[8208] = -2.16951229E+01;
  COFD[8209] = 5.44455741E+00;
  COFD[8210] = -4.65313340E-01;
  COFD[8211] = 1.91011181E-02;
  COFD[8212] = -2.23238195E+01;
  COFD[8213] = 5.45282659E+00;
  COFD[8214] = -4.49336536E-01;
  COFD[8215] = 1.77637787E-02;
  COFD[8216] = -1.98725457E+01;
  COFD[8217] = 4.95323342E+00;
  COFD[8218] = -4.14861803E-01;
  COFD[8219] = 1.74299070E-02;
  COFD[8220] = -2.23352574E+01;
  COFD[8221] = 5.45282659E+00;
  COFD[8222] = -4.49336536E-01;
  COFD[8223] = 1.77637787E-02;
  COFD[8224] = -2.22041955E+01;
  COFD[8225] = 5.48376307E+00;
  COFD[8226] = -4.63942837E-01;
  COFD[8227] = 1.87953234E-02;
  COFD[8228] = -2.20957556E+01;
  COFD[8229] = 5.46736313E+00;
  COFD[8230] = -4.63533201E-01;
  COFD[8231] = 1.88428681E-02;
  COFD[8232] = -2.24743135E+01;
  COFD[8233] = 5.49090532E+00;
  COFD[8234] = -4.61515055E-01;
  COFD[8235] = 1.85622624E-02;
  COFD[8236] = -2.22435863E+01;
  COFD[8237] = 5.46727804E+00;
  COFD[8238] = -4.64004183E-01;
  COFD[8239] = 1.88816483E-02;
  COFD[8240] = -2.24568640E+01;
  COFD[8241] = 5.49068313E+00;
  COFD[8242] = -4.61694593E-01;
  COFD[8243] = 1.85779923E-02;
  COFD[8244] = -2.24607151E+01;
  COFD[8245] = 5.49068313E+00;
  COFD[8246] = -4.61694593E-01;
  COFD[8247] = 1.85779923E-02;
  COFD[8248] = -2.25999667E+01;
  COFD[8249] = 5.45327166E+00;
  COFD[8250] = -4.49436298E-01;
  COFD[8251] = 1.77696558E-02;
  COFD[8252] = -2.25595650E+01;
  COFD[8253] = 5.45353757E+00;
  COFD[8254] = -4.49496004E-01;
  COFD[8255] = 1.77731752E-02;
  COFD[8256] = -2.27488975E+01;
  COFD[8257] = 5.47944787E+00;
  COFD[8258] = -4.56152622E-01;
  COFD[8259] = 1.81835823E-02;
  COFD[8260] = -2.27431569E+01;
  COFD[8261] = 5.48304850E+00;
  COFD[8262] = -4.57579455E-01;
  COFD[8263] = 1.82812528E-02;
  COFD[8264] = -2.22125351E+01;
  COFD[8265] = 5.39199985E+00;
  COFD[8266] = -4.37219136E-01;
  COFD[8267] = 1.70801890E-02;
  COFD[8268] = -2.22174499E+01;
  COFD[8269] = 5.39199985E+00;
  COFD[8270] = -4.37219136E-01;
  COFD[8271] = 1.70801890E-02;
  COFD[8272] = -2.24203604E+01;
  COFD[8273] = 5.44615881E+00;
  COFD[8274] = -4.47865005E-01;
  COFD[8275] = 1.76775502E-02;
  COFD[8276] = -2.26176923E+01;
  COFD[8277] = 5.45876240E+00;
  COFD[8278] = -4.50706326E-01;
  COFD[8279] = 1.78452467E-02;
  COFD[8280] = -2.27121006E+01;
  COFD[8281] = 5.36658159E+00;
  COFD[8282] = -4.32642435E-01;
  COFD[8283] = 1.68340152E-02;
  COFD[8284] = -2.26685839E+01;
  COFD[8285] = 5.36658159E+00;
  COFD[8286] = -4.32642435E-01;
  COFD[8287] = 1.68340152E-02;
  COFD[8288] = -2.21475170E+01;
  COFD[8289] = 5.47416855E+00;
  COFD[8290] = -4.63563799E-01;
  COFD[8291] = 1.88117222E-02;
  COFD[8292] = -2.21977055E+01;
  COFD[8293] = 5.48376307E+00;
  COFD[8294] = -4.63942837E-01;
  COFD[8295] = 1.87953234E-02;
  COFD[8296] = -2.28556346E+01;
  COFD[8297] = 5.40125902E+00;
  COFD[8298] = -4.38952702E-01;
  COFD[8299] = 1.71753151E-02;
  COFD[8300] = -2.26581184E+01;
  COFD[8301] = 5.42030479E+00;
  COFD[8302] = -4.42541204E-01;
  COFD[8303] = 1.73729052E-02;
  COFD[8304] = -2.27561166E+01;
  COFD[8305] = 5.43540157E+00;
  COFD[8306] = -4.45477820E-01;
  COFD[8307] = 1.75369197E-02;
  COFD[8308] = -2.27109951E+01;
  COFD[8309] = 5.37975560E+00;
  COFD[8310] = -4.34974624E-01;
  COFD[8311] = 1.69583701E-02;
  COFD[8312] = -2.28269592E+01;
  COFD[8313] = 5.40125902E+00;
  COFD[8314] = -4.38952702E-01;
  COFD[8315] = 1.71753151E-02;
  COFD[8316] = -2.28250512E+01;
  COFD[8317] = 5.40125902E+00;
  COFD[8318] = -4.38952702E-01;
  COFD[8319] = 1.71753151E-02;
  COFD[8320] = -2.29717201E+01;
  COFD[8321] = 5.42721943E+00;
  COFD[8322] = -4.43876872E-01;
  COFD[8323] = 1.74472689E-02;
  COFD[8324] = -2.27496988E+01;
  COFD[8325] = 5.23793490E+00;
  COFD[8326] = -4.10507434E-01;
  COFD[8327] = 1.56723961E-02;
  COFD[8328] = -2.27496988E+01;
  COFD[8329] = 5.23793490E+00;
  COFD[8330] = -4.10507434E-01;
  COFD[8331] = 1.56723961E-02;
  COFD[8332] = -2.27496988E+01;
  COFD[8333] = 5.23793490E+00;
  COFD[8334] = -4.10507434E-01;
  COFD[8335] = 1.56723961E-02;
  COFD[8336] = -2.27496988E+01;
  COFD[8337] = 5.23793490E+00;
  COFD[8338] = -4.10507434E-01;
  COFD[8339] = 1.56723961E-02;
  COFD[8340] = -2.27496988E+01;
  COFD[8341] = 5.23793490E+00;
  COFD[8342] = -4.10507434E-01;
  COFD[8343] = 1.56723961E-02;
  COFD[8344] = -2.27937039E+01;
  COFD[8345] = 5.15050798E+00;
  COFD[8346] = -3.95966829E-01;
  COFD[8347] = 1.49238043E-02;
  COFD[8348] = -2.28830495E+01;
  COFD[8349] = 5.33738936E+00;
  COFD[8350] = -4.27502526E-01;
  COFD[8351] = 1.65608197E-02;
  COFD[8352] = -2.28830495E+01;
  COFD[8353] = 5.33738936E+00;
  COFD[8354] = -4.27502526E-01;
  COFD[8355] = 1.65608197E-02;
  COFD[8356] = -1.85439310E+01;
  COFD[8357] = 4.42312522E+00;
  COFD[8358] = -3.52239033E-01;
  COFD[8359] = 1.49581799E-02;
  COFD[8360] = -1.82112929E+01;
  COFD[8361] = 4.94453558E+00;
  COFD[8362] = -4.13840584E-01;
  COFD[8363] = 1.73898654E-02;
  COFD[8364] = -1.43061302E+01;
  COFD[8365] = 3.34609996E+00;
  COFD[8366] = -2.19417637E-01;
  COFD[8367] = 9.48565577E-03;
  COFD[8368] = -1.74487462E+01;
  COFD[8369] = 4.17306000E+00;
  COFD[8370] = -3.21208070E-01;
  COFD[8371] = 1.36692112E-02;
  COFD[8372] = -1.89456064E+01;
  COFD[8373] = 4.56070745E+00;
  COFD[8374] = -3.68517396E-01;
  COFD[8375] = 1.56021102E-02;
  COFD[8376] = -1.74702241E+01;
  COFD[8377] = 4.17306000E+00;
  COFD[8378] = -3.21208070E-01;
  COFD[8379] = 1.36692112E-02;
  COFD[8380] = -2.13273774E+01;
  COFD[8381] = 5.17422070E+00;
  COFD[8382] = -3.99997068E-01;
  COFD[8383] = 1.51336871E-02;
  COFD[8384] = -1.86697869E+01;
  COFD[8385] = 4.46203550E+00;
  COFD[8386] = -3.56905086E-01;
  COFD[8387] = 1.51454720E-02;
  COFD[8388] = -2.17687365E+01;
  COFD[8389] = 5.43321422E+00;
  COFD[8390] = -4.65643875E-01;
  COFD[8391] = 1.91852144E-02;
  COFD[8392] = -1.98726204E+01;
  COFD[8393] = 4.93512898E+00;
  COFD[8394] = -4.12735698E-01;
  COFD[8395] = 1.73465233E-02;
  COFD[8396] = -1.98084637E+01;
  COFD[8397] = 4.90949838E+00;
  COFD[8398] = -4.09710987E-01;
  COFD[8399] = 1.72272850E-02;
  COFD[8400] = -1.89540711E+01;
  COFD[8401] = 4.56070745E+00;
  COFD[8402] = -3.68517396E-01;
  COFD[8403] = 1.56021102E-02;
  COFD[8404] = -1.89621671E+01;
  COFD[8405] = 4.56070745E+00;
  COFD[8406] = -3.68517396E-01;
  COFD[8407] = 1.56021102E-02;
  COFD[8408] = -2.20163874E+01;
  COFD[8409] = 5.33662478E+00;
  COFD[8410] = -4.27371229E-01;
  COFD[8411] = 1.65539339E-02;
  COFD[8412] = -2.18308952E+01;
  COFD[8413] = 5.43667692E+00;
  COFD[8414] = -4.65640530E-01;
  COFD[8415] = 1.91675299E-02;
  COFD[8416] = -2.15435115E+01;
  COFD[8417] = 5.42458950E+00;
  COFD[8418] = -4.65212987E-01;
  COFD[8419] = 1.91930766E-02;
  COFD[8420] = -2.18211916E+01;
  COFD[8421] = 5.43667692E+00;
  COFD[8422] = -4.65640530E-01;
  COFD[8423] = 1.91675299E-02;
  COFD[8424] = -2.17280655E+01;
  COFD[8425] = 5.45061574E+00;
  COFD[8426] = -4.65241893E-01;
  COFD[8427] = 1.90650429E-02;
  COFD[8428] = -2.17393734E+01;
  COFD[8429] = 5.45061574E+00;
  COFD[8430] = -4.65241893E-01;
  COFD[8431] = 1.90650429E-02;
  COFD[8432] = -2.23311597E+01;
  COFD[8433] = 5.44415012E+00;
  COFD[8434] = -4.47195848E-01;
  COFD[8435] = 1.76333776E-02;
  COFD[8436] = -1.99882068E+01;
  COFD[8437] = 4.99038775E+00;
  COFD[8438] = -4.19232899E-01;
  COFD[8439] = 1.76017333E-02;
  COFD[8440] = -2.23423033E+01;
  COFD[8441] = 5.44415012E+00;
  COFD[8442] = -4.47195848E-01;
  COFD[8443] = 1.76333776E-02;
  COFD[8444] = -2.22480985E+01;
  COFD[8445] = 5.49056182E+00;
  COFD[8446] = -4.63917767E-01;
  COFD[8447] = 1.87597656E-02;
  COFD[8448] = -2.21401764E+01;
  COFD[8449] = 5.47453801E+00;
  COFD[8450] = -4.63573634E-01;
  COFD[8451] = 1.88106950E-02;
  COFD[8452] = -2.24977927E+01;
  COFD[8453] = 5.48975794E+00;
  COFD[8454] = -4.60336840E-01;
  COFD[8455] = 1.84719899E-02;
  COFD[8456] = -2.22751578E+01;
  COFD[8457] = 5.46985215E+00;
  COFD[8458] = -4.63430571E-01;
  COFD[8459] = 1.88222211E-02;
  COFD[8460] = -2.24826473E+01;
  COFD[8461] = 5.49046566E+00;
  COFD[8462] = -4.60640519E-01;
  COFD[8463] = 1.84931917E-02;
  COFD[8464] = -2.24863873E+01;
  COFD[8465] = 5.49046566E+00;
  COFD[8466] = -4.60640519E-01;
  COFD[8467] = 1.84931917E-02;
  COFD[8468] = -2.26033877E+01;
  COFD[8469] = 5.44450212E+00;
  COFD[8470] = -4.47289567E-01;
  COFD[8471] = 1.76392556E-02;
  COFD[8472] = -2.25626287E+01;
  COFD[8473] = 5.44454618E+00;
  COFD[8474] = -4.47321672E-01;
  COFD[8475] = 1.76416355E-02;
  COFD[8476] = -2.27592705E+01;
  COFD[8477] = 5.47456971E+00;
  COFD[8478] = -4.54548739E-01;
  COFD[8479] = 1.80779412E-02;
  COFD[8480] = -2.27564990E+01;
  COFD[8481] = 5.47937827E+00;
  COFD[8482] = -4.56129749E-01;
  COFD[8483] = 1.81820758E-02;
  COFD[8484] = -2.21849341E+01;
  COFD[8485] = 5.36809191E+00;
  COFD[8486] = -4.32908721E-01;
  COFD[8487] = 1.68481857E-02;
  COFD[8488] = -2.21897164E+01;
  COFD[8489] = 5.36809191E+00;
  COFD[8490] = -4.32908721E-01;
  COFD[8491] = 1.68481857E-02;
  COFD[8492] = -2.24172380E+01;
  COFD[8493] = 5.43317403E+00;
  COFD[8494] = -4.45039640E-01;
  COFD[8495] = 1.75123239E-02;
  COFD[8496] = -2.26170122E+01;
  COFD[8497] = 5.44849005E+00;
  COFD[8498] = -4.48374875E-01;
  COFD[8499] = 1.77073338E-02;
  COFD[8500] = -2.26711072E+01;
  COFD[8501] = 5.34068356E+00;
  COFD[8502] = -4.28077042E-01;
  COFD[8503] = 1.65912184E-02;
  COFD[8504] = -2.26291396E+01;
  COFD[8505] = 5.34068356E+00;
  COFD[8506] = -4.28077042E-01;
  COFD[8507] = 1.65912184E-02;
  COFD[8508] = -2.21977055E+01;
  COFD[8509] = 5.48376307E+00;
  COFD[8510] = -4.63942837E-01;
  COFD[8511] = 1.87953234E-02;
  COFD[8512] = -2.22417688E+01;
  COFD[8513] = 5.49056182E+00;
  COFD[8514] = -4.63917767E-01;
  COFD[8515] = 1.87597656E-02;
  COFD[8516] = -2.28248371E+01;
  COFD[8517] = 5.37943451E+00;
  COFD[8518] = -4.34917480E-01;
  COFD[8519] = 1.69553154E-02;
  COFD[8520] = -2.26331890E+01;
  COFD[8521] = 5.39941661E+00;
  COFD[8522] = -4.38608992E-01;
  COFD[8523] = 1.71564833E-02;
  COFD[8524] = -2.27356626E+01;
  COFD[8525] = 5.41656161E+00;
  COFD[8526] = -4.41824209E-01;
  COFD[8527] = 1.73331395E-02;
  COFD[8528] = -2.26722403E+01;
  COFD[8529] = 5.35408130E+00;
  COFD[8530] = -4.30433039E-01;
  COFD[8531] = 1.67163724E-02;
  COFD[8532] = -2.27971573E+01;
  COFD[8533] = 5.37943451E+00;
  COFD[8534] = -4.34917480E-01;
  COFD[8535] = 1.69553154E-02;
  COFD[8536] = -2.27953136E+01;
  COFD[8537] = 5.37943451E+00;
  COFD[8538] = -4.34917480E-01;
  COFD[8539] = 1.69553154E-02;
  COFD[8540] = -2.29454860E+01;
  COFD[8541] = 5.40726595E+00;
  COFD[8542] = -4.40072331E-01;
  COFD[8543] = 1.72366684E-02;
  COFD[8544] = -2.26749880E+01;
  COFD[8545] = 5.19870800E+00;
  COFD[8546] = -4.04106072E-01;
  COFD[8547] = 1.53462074E-02;
  COFD[8548] = -2.26749880E+01;
  COFD[8549] = 5.19870800E+00;
  COFD[8550] = -4.04106072E-01;
  COFD[8551] = 1.53462074E-02;
  COFD[8552] = -2.26749880E+01;
  COFD[8553] = 5.19870800E+00;
  COFD[8554] = -4.04106072E-01;
  COFD[8555] = 1.53462074E-02;
  COFD[8556] = -2.26749880E+01;
  COFD[8557] = 5.19870800E+00;
  COFD[8558] = -4.04106072E-01;
  COFD[8559] = 1.53462074E-02;
  COFD[8560] = -2.26749880E+01;
  COFD[8561] = 5.19870800E+00;
  COFD[8562] = -4.04106072E-01;
  COFD[8563] = 1.53462074E-02;
  COFD[8564] = -2.27261088E+01;
  COFD[8565] = 5.11476665E+00;
  COFD[8566] = -3.90017950E-01;
  COFD[8567] = 1.46174143E-02;
  COFD[8568] = -2.28339902E+01;
  COFD[8569] = 5.30874092E+00;
  COFD[8570] = -4.22570517E-01;
  COFD[8571] = 1.63018518E-02;
  COFD[8572] = -2.28339902E+01;
  COFD[8573] = 5.30874092E+00;
  COFD[8574] = -4.22570517E-01;
  COFD[8575] = 1.63018518E-02;
  COFD[8576] = -1.86427372E+01;
  COFD[8577] = 4.45508831E+00;
  COFD[8578] = -3.56068927E-01;
  COFD[8579] = 1.51117769E-02;
  COFD[8580] = -1.98475503E+01;
  COFD[8581] = 5.33311526E+00;
  COFD[8582] = -4.56260202E-01;
  COFD[8583] = 1.89172095E-02;
  COFD[8584] = -1.60811761E+01;
  COFD[8585] = 3.84841959E+00;
  COFD[8586] = -2.82051466E-01;
  COFD[8587] = 1.20928078E-02;
  COFD[8588] = -1.93977131E+01;
  COFD[8589] = 4.69695753E+00;
  COFD[8590] = -3.85218507E-01;
  COFD[8591] = 1.62877051E-02;
  COFD[8592] = -2.10095859E+01;
  COFD[8593] = 5.09017902E+00;
  COFD[8594] = -4.30465909E-01;
  COFD[8595] = 1.80215959E-02;
  COFD[8596] = -1.94240836E+01;
  COFD[8597] = 4.69695753E+00;
  COFD[8598] = -3.85218507E-01;
  COFD[8599] = 1.62877051E-02;
  COFD[8600] = -1.91787303E+01;
  COFD[8601] = 3.88158347E+00;
  COFD[8602] = -2.05180531E-01;
  COFD[8603] = 5.72414129E-03;
  COFD[8604] = -2.07148808E+01;
  COFD[8605] = 4.99635597E+00;
  COFD[8606] = -4.19936627E-01;
  COFD[8607] = 1.76294690E-02;
  COFD[8608] = -2.27916979E+01;
  COFD[8609] = 5.48417634E+00;
  COFD[8610] = -4.58175065E-01;
  COFD[8611] = 1.83238989E-02;
  COFD[8612] = -2.15157863E+01;
  COFD[8613] = 5.32532661E+00;
  COFD[8614] = -4.55395062E-01;
  COFD[8615] = 1.88852639E-02;
  COFD[8616] = -2.16309763E+01;
  COFD[8617] = 5.35518119E+00;
  COFD[8618] = -4.58596594E-01;
  COFD[8619] = 1.89982967E-02;
  COFD[8620] = -2.08972741E+01;
  COFD[8621] = 5.05236296E+00;
  COFD[8622] = -4.26457052E-01;
  COFD[8623] = 1.78827371E-02;
  COFD[8624] = -2.09086531E+01;
  COFD[8625] = 5.05236296E+00;
  COFD[8626] = -4.26457052E-01;
  COFD[8627] = 1.78827371E-02;
  COFD[8628] = -2.14947017E+01;
  COFD[8629] = 4.76032791E+00;
  COFD[8630] = -3.34106096E-01;
  COFD[8631] = 1.18285090E-02;
  COFD[8632] = -2.27548022E+01;
  COFD[8633] = 5.48750049E+00;
  COFD[8634] = -4.59445591E-01;
  COFD[8635] = 1.84106692E-02;
  COFD[8636] = -2.25261132E+01;
  COFD[8637] = 5.49111268E+00;
  COFD[8638] = -4.61324030E-01;
  COFD[8639] = 1.85456734E-02;
  COFD[8640] = -2.27415244E+01;
  COFD[8641] = 5.48750049E+00;
  COFD[8642] = -4.59445591E-01;
  COFD[8643] = 1.84106692E-02;
  COFD[8644] = -2.26080682E+01;
  COFD[8645] = 5.47808026E+00;
  COFD[8646] = -4.55721754E-01;
  COFD[8647] = 1.81554634E-02;
  COFD[8648] = -2.26232015E+01;
  COFD[8649] = 5.47808026E+00;
  COFD[8650] = -4.55721754E-01;
  COFD[8651] = 1.81554634E-02;
  COFD[8652] = -2.21890763E+01;
  COFD[8653] = 5.01596880E+00;
  COFD[8654] = -3.74075989E-01;
  COFD[8655] = 1.38104375E-02;
  COFD[8656] = -2.17537864E+01;
  COFD[8657] = 5.36513529E+00;
  COFD[8658] = -4.59632397E-01;
  COFD[8659] = 1.90333966E-02;
  COFD[8660] = -2.22056476E+01;
  COFD[8661] = 5.01596880E+00;
  COFD[8662] = -3.74075989E-01;
  COFD[8663] = 1.38104375E-02;
  COFD[8664] = -2.28340694E+01;
  COFD[8665] = 5.37943451E+00;
  COFD[8666] = -4.34917480E-01;
  COFD[8667] = 1.69553154E-02;
  COFD[8668] = -2.28707904E+01;
  COFD[8669] = 5.42114360E+00;
  COFD[8670] = -4.42702443E-01;
  COFD[8671] = 1.73818623E-02;
  COFD[8672] = -2.28846070E+01;
  COFD[8673] = 5.28643469E+00;
  COFD[8674] = -4.18704366E-01;
  COFD[8675] = 1.60983298E-02;
  COFD[8676] = -2.30198102E+01;
  COFD[8677] = 5.43102089E+00;
  COFD[8678] = -4.44617784E-01;
  COFD[8679] = 1.74886865E-02;
  COFD[8680] = -2.28858577E+01;
  COFD[8681] = 5.29211810E+00;
  COFD[8682] = -4.19685131E-01;
  COFD[8683] = 1.61498496E-02;
  COFD[8684] = -2.28917663E+01;
  COFD[8685] = 5.29211810E+00;
  COFD[8686] = -4.19685131E-01;
  COFD[8687] = 1.61498496E-02;
  COFD[8688] = -2.24715441E+01;
  COFD[8689] = 5.01800199E+00;
  COFD[8690] = -3.74397273E-01;
  COFD[8691] = 1.38264725E-02;
  COFD[8692] = -2.14754365E+01;
  COFD[8693] = 4.58403944E+00;
  COFD[8694] = -3.11849240E-01;
  COFD[8695] = 1.08987964E-02;
  COFD[8696] = -2.28829630E+01;
  COFD[8697] = 5.15610802E+00;
  COFD[8698] = -3.96915596E-01;
  COFD[8699] = 1.49731206E-02;
  COFD[8700] = -2.28567174E+01;
  COFD[8701] = 5.15297410E+00;
  COFD[8702] = -3.97643104E-01;
  COFD[8703] = 1.50471734E-02;
  COFD[8704] = -2.18010620E+01;
  COFD[8705] = 4.82886477E+00;
  COFD[8706] = -3.44704925E-01;
  COFD[8707] = 1.23501995E-02;
  COFD[8708] = -2.18083411E+01;
  COFD[8709] = 4.82886477E+00;
  COFD[8710] = -3.44704925E-01;
  COFD[8711] = 1.23501995E-02;
  COFD[8712] = -2.22562443E+01;
  COFD[8713] = 4.98642801E+00;
  COFD[8714] = -3.69418838E-01;
  COFD[8715] = 1.35783254E-02;
  COFD[8716] = -2.15807975E+01;
  COFD[8717] = 4.61535250E+00;
  COFD[8718] = -3.16697948E-01;
  COFD[8719] = 1.11372758E-02;
  COFD[8720] = -2.22683529E+01;
  COFD[8721] = 4.76949339E+00;
  COFD[8722] = -3.35510618E-01;
  COFD[8723] = 1.18972671E-02;
  COFD[8724] = -2.21915733E+01;
  COFD[8725] = 4.76949339E+00;
  COFD[8726] = -3.35510618E-01;
  COFD[8727] = 1.18972671E-02;
  COFD[8728] = -2.28556346E+01;
  COFD[8729] = 5.40125902E+00;
  COFD[8730] = -4.38952702E-01;
  COFD[8731] = 1.71753151E-02;
  COFD[8732] = -2.28248371E+01;
  COFD[8733] = 5.37943451E+00;
  COFD[8734] = -4.34917480E-01;
  COFD[8735] = 1.69553154E-02;
  COFD[8736] = -2.18840182E+01;
  COFD[8737] = 4.58844599E+00;
  COFD[8738] = -3.11413674E-01;
  COFD[8739] = 1.08381861E-02;
  COFD[8740] = -2.15329516E+01;
  COFD[8741] = 4.54096878E+00;
  COFD[8742] = -3.04864851E-01;
  COFD[8743] = 1.05432027E-02;
  COFD[8744] = -2.15405641E+01;
  COFD[8745] = 4.51394400E+00;
  COFD[8746] = -3.01014625E-01;
  COFD[8747] = 1.03660332E-02;
  COFD[8748] = -2.22654986E+01;
  COFD[8749] = 4.79970617E+00;
  COFD[8750] = -3.40160538E-01;
  COFD[8751] = 1.21254182E-02;
  COFD[8752] = -2.18344033E+01;
  COFD[8753] = 4.58844599E+00;
  COFD[8754] = -3.11413674E-01;
  COFD[8755] = 1.08381861E-02;
  COFD[8756] = -2.18311738E+01;
  COFD[8757] = 4.58844599E+00;
  COFD[8758] = -3.11413674E-01;
  COFD[8759] = 1.08381861E-02;
  COFD[8760] = -2.26893474E+01;
  COFD[8761] = 4.91734229E+00;
  COFD[8762] = -3.58590688E-01;
  COFD[8763] = 1.30403665E-02;
  COFD[8764] = -2.16091286E+01;
  COFD[8765] = 4.35942660E+00;
  COFD[8766] = -2.74922937E-01;
  COFD[8767] = 9.00571669E-03;
  COFD[8768] = -2.16091286E+01;
  COFD[8769] = 4.35942660E+00;
  COFD[8770] = -2.74922937E-01;
  COFD[8771] = 9.00571669E-03;
  COFD[8772] = -2.16091286E+01;
  COFD[8773] = 4.35942660E+00;
  COFD[8774] = -2.74922937E-01;
  COFD[8775] = 9.00571669E-03;
  COFD[8776] = -2.16091286E+01;
  COFD[8777] = 4.35942660E+00;
  COFD[8778] = -2.74922937E-01;
  COFD[8779] = 9.00571669E-03;
  COFD[8780] = -2.16091286E+01;
  COFD[8781] = 4.35942660E+00;
  COFD[8782] = -2.74922937E-01;
  COFD[8783] = 9.00571669E-03;
  COFD[8784] = -2.15173314E+01;
  COFD[8785] = 4.21707265E+00;
  COFD[8786] = -2.53123137E-01;
  COFD[8787] = 7.94062675E-03;
  COFD[8788] = -2.23009836E+01;
  COFD[8789] = 4.69760938E+00;
  COFD[8790] = -3.24528129E-01;
  COFD[8791] = 1.13606885E-02;
  COFD[8792] = -2.23009836E+01;
  COFD[8793] = 4.69760938E+00;
  COFD[8794] = -3.24528129E-01;
  COFD[8795] = 1.13606885E-02;
  COFD[8796] = -2.06721358E+01;
  COFD[8797] = 4.98377900E+00;
  COFD[8798] = -4.18452852E-01;
  COFD[8799] = 1.75709529E-02;
  COFD[8800] = -1.95514492E+01;
  COFD[8801] = 5.30461369E+00;
  COFD[8802] = -4.53088496E-01;
  COFD[8803] = 1.87998409E-02;
  COFD[8804] = -1.59136039E+01;
  COFD[8805] = 3.85500645E+00;
  COFD[8806] = -2.82834228E-01;
  COFD[8807] = 1.21237927E-02;
  COFD[8808] = -1.90756074E+01;
  COFD[8809] = 4.65976652E+00;
  COFD[8810] = -3.80698349E-01;
  COFD[8811] = 1.61038060E-02;
  COFD[8812] = -2.07843306E+01;
  COFD[8813] = 5.08900555E+00;
  COFD[8814] = -4.30341934E-01;
  COFD[8815] = 1.80173215E-02;
  COFD[8816] = -1.91004689E+01;
  COFD[8817] = 4.65976652E+00;
  COFD[8818] = -3.80698349E-01;
  COFD[8819] = 1.61038060E-02;
  COFD[8820] = -1.85864638E+01;
  COFD[8821] = 3.68971924E+00;
  COFD[8822] = -1.75261163E-01;
  COFD[8823] = 4.25905660E-03;
  COFD[8824] = -2.05043323E+01;
  COFD[8825] = 4.99719791E+00;
  COFD[8826] = -4.20035884E-01;
  COFD[8827] = 1.76333798E-02;
  COFD[8828] = -2.25606358E+01;
  COFD[8829] = 5.48480057E+00;
  COFD[8830] = -4.58431583E-01;
  COFD[8831] = 1.83416241E-02;
  COFD[8832] = -2.12336847E+01;
  COFD[8833] = 5.29671000E+00;
  COFD[8834] = -4.52208613E-01;
  COFD[8835] = 1.87672717E-02;
  COFD[8836] = -2.14398975E+01;
  COFD[8837] = 5.35638308E+00;
  COFD[8838] = -4.58721941E-01;
  COFD[8839] = 1.90025577E-02;
  COFD[8840] = -2.05805034E+01;
  COFD[8841] = 5.02104665E+00;
  COFD[8842] = -4.22831627E-01;
  COFD[8843] = 1.77428177E-02;
  COFD[8844] = -2.05907729E+01;
  COFD[8845] = 5.02104665E+00;
  COFD[8846] = -4.22831627E-01;
  COFD[8847] = 1.77428177E-02;
  COFD[8848] = -2.13808006E+01;
  COFD[8849] = 4.81362806E+00;
  COFD[8850] = -3.42326990E-01;
  COFD[8851] = 1.22325012E-02;
  COFD[8852] = -2.25355047E+01;
  COFD[8853] = 5.49116738E+00;
  COFD[8854] = -4.60872204E-01;
  COFD[8855] = 1.85085987E-02;
  COFD[8856] = -2.22850585E+01;
  COFD[8857] = 5.49115033E+00;
  COFD[8858] = -4.62266752E-01;
  COFD[8859] = 1.86223135E-02;
  COFD[8860] = -2.25234135E+01;
  COFD[8861] = 5.49116738E+00;
  COFD[8862] = -4.60872204E-01;
  COFD[8863] = 1.85085987E-02;
  COFD[8864] = -2.23850761E+01;
  COFD[8865] = 5.48227325E+00;
  COFD[8866] = -4.57157805E-01;
  COFD[8867] = 1.82509581E-02;
  COFD[8868] = -2.23989581E+01;
  COFD[8869] = 5.48227325E+00;
  COFD[8870] = -4.57157805E-01;
  COFD[8871] = 1.82509581E-02;
  COFD[8872] = -2.20442369E+01;
  COFD[8873] = 5.05908558E+00;
  COFD[8874] = -3.80945929E-01;
  COFD[8875] = 1.41553816E-02;
  COFD[8876] = -2.14253663E+01;
  COFD[8877] = 5.34211391E+00;
  COFD[8878] = -4.57230216E-01;
  COFD[8879] = 1.89516739E-02;
  COFD[8880] = -2.20589047E+01;
  COFD[8881] = 5.05908558E+00;
  COFD[8882] = -3.80945929E-01;
  COFD[8883] = 1.41553816E-02;
  COFD[8884] = -2.26414161E+01;
  COFD[8885] = 5.39941661E+00;
  COFD[8886] = -4.38608992E-01;
  COFD[8887] = 1.71564833E-02;
  COFD[8888] = -2.26656724E+01;
  COFD[8889] = 5.43804144E+00;
  COFD[8890] = -4.45999485E-01;
  COFD[8891] = 1.75662609E-02;
  COFD[8892] = -2.26989037E+01;
  COFD[8893] = 5.31130174E+00;
  COFD[8894] = -4.23012509E-01;
  COFD[8895] = 1.63250839E-02;
  COFD[8896] = -2.28159691E+01;
  COFD[8897] = 5.44442190E+00;
  COFD[8898] = -4.47434092E-01;
  COFD[8899] = 1.76512643E-02;
  COFD[8900] = -2.26989567E+01;
  COFD[8901] = 5.31729293E+00;
  COFD[8902] = -4.24040190E-01;
  COFD[8903] = 1.63789533E-02;
  COFD[8904] = -2.27040746E+01;
  COFD[8905] = 5.31729293E+00;
  COFD[8906] = -4.24040190E-01;
  COFD[8907] = 1.63789533E-02;
  COFD[8908] = -2.23275127E+01;
  COFD[8909] = 5.06089774E+00;
  COFD[8910] = -3.81239105E-01;
  COFD[8911] = 1.41702517E-02;
  COFD[8912] = -2.10466915E+01;
  COFD[8913] = 4.48381660E+00;
  COFD[8914] = -2.96509845E-01;
  COFD[8915] = 1.01535147E-02;
  COFD[8916] = -2.27023801E+01;
  COFD[8917] = 5.18383798E+00;
  COFD[8918] = -4.01666785E-01;
  COFD[8919] = 1.52216204E-02;
  COFD[8920] = -2.26780998E+01;
  COFD[8921] = 5.18129005E+00;
  COFD[8922] = -4.02449411E-01;
  COFD[8923] = 1.52976327E-02;
  COFD[8924] = -2.16580033E+01;
  COFD[8925] = 4.87709635E+00;
  COFD[8926] = -3.52250416E-01;
  COFD[8927] = 1.27244832E-02;
  COFD[8928] = -2.16643935E+01;
  COFD[8929] = 4.87709635E+00;
  COFD[8930] = -3.52250416E-01;
  COFD[8931] = 1.27244832E-02;
  COFD[8932] = -2.21073704E+01;
  COFD[8933] = 5.03131423E+00;
  COFD[8934] = -3.76503291E-01;
  COFD[8935] = 1.39316539E-02;
  COFD[8936] = -2.11645170E+01;
  COFD[8937] = 4.51897933E+00;
  COFD[8938] = -3.01998406E-01;
  COFD[8939] = 1.04247672E-02;
  COFD[8940] = -2.21174163E+01;
  COFD[8941] = 4.82134659E+00;
  COFD[8942] = -3.43531135E-01;
  COFD[8943] = 1.22920882E-02;
  COFD[8944] = -2.20545407E+01;
  COFD[8945] = 4.82134659E+00;
  COFD[8946] = -3.43531135E-01;
  COFD[8947] = 1.22920882E-02;
  COFD[8948] = -2.26581184E+01;
  COFD[8949] = 5.42030479E+00;
  COFD[8950] = -4.42541204E-01;
  COFD[8951] = 1.73729052E-02;
  COFD[8952] = -2.26331890E+01;
  COFD[8953] = 5.39941661E+00;
  COFD[8954] = -4.38608992E-01;
  COFD[8955] = 1.71564833E-02;
  COFD[8956] = -2.15329516E+01;
  COFD[8957] = 4.54096878E+00;
  COFD[8958] = -3.04864851E-01;
  COFD[8959] = 1.05432027E-02;
  COFD[8960] = -2.11409782E+01;
  COFD[8961] = 4.46557931E+00;
  COFD[8962] = -2.93691943E-01;
  COFD[8963] = 1.00124396E-02;
  COFD[8964] = -2.11452538E+01;
  COFD[8965] = 4.43017765E+00;
  COFD[8966] = -2.88253845E-01;
  COFD[8967] = 9.74851706E-03;
  COFD[8968] = -2.21244659E+01;
  COFD[8969] = 4.84823431E+00;
  COFD[8970] = -3.47731563E-01;
  COFD[8971] = 1.25001760E-02;
  COFD[8972] = -2.14919880E+01;
  COFD[8973] = 4.54096878E+00;
  COFD[8974] = -3.04864851E-01;
  COFD[8975] = 1.05432027E-02;
  COFD[8976] = -2.14892974E+01;
  COFD[8977] = 4.54096878E+00;
  COFD[8978] = -3.04864851E-01;
  COFD[8979] = 1.05432027E-02;
  COFD[8980] = -2.25506237E+01;
  COFD[8981] = 4.96541553E+00;
  COFD[8982] = -3.66120907E-01;
  COFD[8983] = 1.34143879E-02;
  COFD[8984] = -2.13962086E+01;
  COFD[8985] = 4.37956561E+00;
  COFD[8986] = -2.78446593E-01;
  COFD[8987] = 9.19232124E-03;
  COFD[8988] = -2.13962086E+01;
  COFD[8989] = 4.37956561E+00;
  COFD[8990] = -2.78446593E-01;
  COFD[8991] = 9.19232124E-03;
  COFD[8992] = -2.13962086E+01;
  COFD[8993] = 4.37956561E+00;
  COFD[8994] = -2.78446593E-01;
  COFD[8995] = 9.19232124E-03;
  COFD[8996] = -2.13962086E+01;
  COFD[8997] = 4.37956561E+00;
  COFD[8998] = -2.78446593E-01;
  COFD[8999] = 9.19232124E-03;
  COFD[9000] = -2.13962086E+01;
  COFD[9001] = 4.37956561E+00;
  COFD[9002] = -2.78446593E-01;
  COFD[9003] = 9.19232124E-03;
  COFD[9004] = -2.13456037E+01;
  COFD[9005] = 4.25479427E+00;
  COFD[9006] = -2.59093477E-01;
  COFD[9007] = 8.23869081E-03;
  COFD[9008] = -2.21833029E+01;
  COFD[9009] = 4.75657673E+00;
  COFD[9010] = -3.33531354E-01;
  COFD[9011] = 1.18003758E-02;
  COFD[9012] = -2.21833029E+01;
  COFD[9013] = 4.75657673E+00;
  COFD[9014] = -3.33531354E-01;
  COFD[9015] = 1.18003758E-02;
  COFD[9016] = -2.04535726E+01;
  COFD[9017] = 4.98209177E+00;
  COFD[9018] = -4.18253592E-01;
  COFD[9019] = 1.75630854E-02;
  COFD[9020] = -1.95829390E+01;
  COFD[9021] = 5.27835392E+00;
  COFD[9022] = -4.50143769E-01;
  COFD[9023] = 1.86899020E-02;
  COFD[9024] = -1.60254813E+01;
  COFD[9025] = 3.85862187E+00;
  COFD[9026] = -2.83262574E-01;
  COFD[9027] = 1.21406844E-02;
  COFD[9028] = -1.90773818E+01;
  COFD[9029] = 4.62426562E+00;
  COFD[9030] = -3.76333900E-01;
  COFD[9031] = 1.59240937E-02;
  COFD[9032] = -2.08687806E+01;
  COFD[9033] = 5.08643780E+00;
  COFD[9034] = -4.30070512E-01;
  COFD[9035] = 1.80079565E-02;
  COFD[9036] = -1.91021778E+01;
  COFD[9037] = 4.62426562E+00;
  COFD[9038] = -3.76333900E-01;
  COFD[9039] = 1.59240937E-02;
  COFD[9040] = -1.86138026E+01;
  COFD[9041] = 3.64451000E+00;
  COFD[9042] = -1.67694878E-01;
  COFD[9043] = 3.87427224E-03;
  COFD[9044] = -2.05899080E+01;
  COFD[9045] = 4.99533619E+00;
  COFD[9046] = -4.19816376E-01;
  COFD[9047] = 1.76247298E-02;
  COFD[9048] = -2.26462201E+01;
  COFD[9049] = 5.48561353E+00;
  COFD[9050] = -4.58748899E-01;
  COFD[9051] = 1.83633676E-02;
  COFD[9052] = -2.12409708E+01;
  COFD[9053] = 5.26987677E+00;
  COFD[9054] = -4.49189697E-01;
  COFD[9055] = 1.86541737E-02;
  COFD[9056] = -2.15282218E+01;
  COFD[9057] = 5.35564155E+00;
  COFD[9058] = -4.58644615E-01;
  COFD[9059] = 1.89999295E-02;
  COFD[9060] = -2.05856566E+01;
  COFD[9061] = 4.99149256E+00;
  COFD[9062] = -4.19363176E-01;
  COFD[9063] = 1.76068685E-02;
  COFD[9064] = -2.05958800E+01;
  COFD[9065] = 4.99149256E+00;
  COFD[9066] = -4.19363176E-01;
  COFD[9067] = 1.76068685E-02;
  COFD[9068] = -2.15521813E+01;
  COFD[9069] = 4.85623963E+00;
  COFD[9070] = -3.48984100E-01;
  COFD[9071] = 1.25623211E-02;
  COFD[9072] = -2.25966074E+01;
  COFD[9073] = 5.49074590E+00;
  COFD[9074] = -4.61641528E-01;
  COFD[9075] = 1.85733572E-02;
  COFD[9076] = -2.23629202E+01;
  COFD[9077] = 5.49413323E+00;
  COFD[9078] = -4.63498940E-01;
  COFD[9079] = 1.87080519E-02;
  COFD[9080] = -2.25845659E+01;
  COFD[9081] = 5.49074590E+00;
  COFD[9082] = -4.61641528E-01;
  COFD[9083] = 1.85733572E-02;
  COFD[9084] = -2.24589353E+01;
  COFD[9085] = 5.48421194E+00;
  COFD[9086] = -4.58197253E-01;
  COFD[9087] = 1.83255177E-02;
  COFD[9088] = -2.24727646E+01;
  COFD[9089] = 5.48421194E+00;
  COFD[9090] = -4.58197253E-01;
  COFD[9091] = 1.83255177E-02;
  COFD[9092] = -2.21907724E+01;
  COFD[9093] = 5.09350157E+00;
  COFD[9094] = -3.86533585E-01;
  COFD[9095] = 1.44394093E-02;
  COFD[9096] = -2.14529261E+01;
  COFD[9097] = 5.31795346E+00;
  COFD[9098] = -4.54574565E-01;
  COFD[9099] = 1.88549001E-02;
  COFD[9100] = -2.22053629E+01;
  COFD[9101] = 5.09350157E+00;
  COFD[9102] = -3.86533585E-01;
  COFD[9103] = 1.44394093E-02;
  COFD[9104] = -2.27438486E+01;
  COFD[9105] = 5.41656161E+00;
  COFD[9106] = -4.41824209E-01;
  COFD[9107] = 1.73331395E-02;
  COFD[9108] = -2.27506148E+01;
  COFD[9109] = 5.44709568E+00;
  COFD[9110] = -4.48069354E-01;
  COFD[9111] = 1.76894758E-02;
  COFD[9112] = -2.28127118E+01;
  COFD[9113] = 5.33452791E+00;
  COFD[9114] = -4.27009745E-01;
  COFD[9115] = 1.65349406E-02;
  COFD[9116] = -2.28951692E+01;
  COFD[9117] = 5.45291805E+00;
  COFD[9118] = -4.49357019E-01;
  COFD[9119] = 1.77649850E-02;
  COFD[9120] = -2.28126606E+01;
  COFD[9121] = 5.34025709E+00;
  COFD[9122] = -4.28002604E-01;
  COFD[9123] = 1.65872781E-02;
  COFD[9124] = -2.28177472E+01;
  COFD[9125] = 5.34025709E+00;
  COFD[9126] = -4.28002604E-01;
  COFD[9127] = 1.65872781E-02;
  COFD[9128] = -2.24655698E+01;
  COFD[9129] = 5.09524210E+00;
  COFD[9130] = -3.86817295E-01;
  COFD[9131] = 1.44538658E-02;
  COFD[9132] = -2.10487822E+01;
  COFD[9133] = 4.43820922E+00;
  COFD[9134] = -2.88877501E-01;
  COFD[9135] = 9.76343805E-03;
  COFD[9136] = -2.28320919E+01;
  COFD[9137] = 5.21637493E+00;
  COFD[9138] = -4.06956958E-01;
  COFD[9139] = 1.54905633E-02;
  COFD[9140] = -2.27790082E+01;
  COFD[9141] = 5.20168941E+00;
  COFD[9142] = -4.06049768E-01;
  COFD[9143] = 1.54891492E-02;
  COFD[9144] = -2.18230789E+01;
  COFD[9145] = 4.91762397E+00;
  COFD[9146] = -3.58634830E-01;
  COFD[9147] = 1.30425594E-02;
  COFD[9148] = -2.18294333E+01;
  COFD[9149] = 4.91762397E+00;
  COFD[9150] = -3.58634830E-01;
  COFD[9151] = 1.30425594E-02;
  COFD[9152] = -2.22582181E+01;
  COFD[9153] = 5.06826700E+00;
  COFD[9154] = -3.82432503E-01;
  COFD[9155] = 1.42308185E-02;
  COFD[9156] = -2.11597849E+01;
  COFD[9157] = 4.47157715E+00;
  COFD[9158] = -2.94123357E-01;
  COFD[9159] = 1.00236363E-02;
  COFD[9160] = -2.22721784E+01;
  COFD[9161] = 4.86395981E+00;
  COFD[9162] = -3.50192897E-01;
  COFD[9163] = 1.26223235E-02;
  COFD[9164] = -2.22098235E+01;
  COFD[9165] = 4.86395981E+00;
  COFD[9166] = -3.50192897E-01;
  COFD[9167] = 1.26223235E-02;
  COFD[9168] = -2.27561166E+01;
  COFD[9169] = 5.43540157E+00;
  COFD[9170] = -4.45477820E-01;
  COFD[9171] = 1.75369197E-02;
  COFD[9172] = -2.27356626E+01;
  COFD[9173] = 5.41656161E+00;
  COFD[9174] = -4.41824209E-01;
  COFD[9175] = 1.73331395E-02;
  COFD[9176] = -2.15405641E+01;
  COFD[9177] = 4.51394400E+00;
  COFD[9178] = -3.01014625E-01;
  COFD[9179] = 1.03660332E-02;
  COFD[9180] = -2.11452538E+01;
  COFD[9181] = 4.43017765E+00;
  COFD[9182] = -2.88253845E-01;
  COFD[9183] = 9.74851706E-03;
  COFD[9184] = -2.11277806E+01;
  COFD[9185] = 4.38003310E+00;
  COFD[9186] = -2.80097215E-01;
  COFD[9187] = 9.33767002E-03;
  COFD[9188] = -2.22786873E+01;
  COFD[9189] = 4.89093124E+00;
  COFD[9190] = -3.54419517E-01;
  COFD[9191] = 1.28322610E-02;
  COFD[9192] = -2.14999273E+01;
  COFD[9193] = 4.51394400E+00;
  COFD[9194] = -3.01014625E-01;
  COFD[9195] = 1.03660332E-02;
  COFD[9196] = -2.14972572E+01;
  COFD[9197] = 4.51394400E+00;
  COFD[9198] = -3.01014625E-01;
  COFD[9199] = 1.03660332E-02;
  COFD[9200] = -2.26945013E+01;
  COFD[9201] = 5.00634977E+00;
  COFD[9202] = -3.72557302E-01;
  COFD[9203] = 1.37346802E-02;
  COFD[9204] = -2.14928909E+01;
  COFD[9205] = 4.39966493E+00;
  COFD[9206] = -2.81886204E-01;
  COFD[9207] = 9.37271179E-03;
  COFD[9208] = -2.14928909E+01;
  COFD[9209] = 4.39966493E+00;
  COFD[9210] = -2.81886204E-01;
  COFD[9211] = 9.37271179E-03;
  COFD[9212] = -2.14928909E+01;
  COFD[9213] = 4.39966493E+00;
  COFD[9214] = -2.81886204E-01;
  COFD[9215] = 9.37271179E-03;
  COFD[9216] = -2.14928909E+01;
  COFD[9217] = 4.39966493E+00;
  COFD[9218] = -2.81886204E-01;
  COFD[9219] = 9.37271179E-03;
  COFD[9220] = -2.14928909E+01;
  COFD[9221] = 4.39966493E+00;
  COFD[9222] = -2.81886204E-01;
  COFD[9223] = 9.37271179E-03;
  COFD[9224] = -2.14606286E+01;
  COFD[9225] = 4.28507310E+00;
  COFD[9226] = -2.63941324E-01;
  COFD[9227] = 8.48270663E-03;
  COFD[9228] = -2.23442442E+01;
  COFD[9229] = 4.80471822E+00;
  COFD[9230] = -3.40939669E-01;
  COFD[9231] = 1.21639062E-02;
  COFD[9232] = -2.23442442E+01;
  COFD[9233] = 4.80471822E+00;
  COFD[9234] = -3.40939669E-01;
  COFD[9235] = 1.21639062E-02;
  COFD[9236] = -2.05335884E+01;
  COFD[9237] = 4.97826014E+00;
  COFD[9238] = -4.17803431E-01;
  COFD[9239] = 1.75454156E-02;
  COFD[9240] = -1.98161567E+01;
  COFD[9241] = 5.35897956E+00;
  COFD[9242] = -4.58992472E-01;
  COFD[9243] = 1.90117416E-02;
  COFD[9244] = -1.58862794E+01;
  COFD[9245] = 3.81826954E+00;
  COFD[9246] = -2.78442735E-01;
  COFD[9247] = 1.19489210E-02;
  COFD[9248] = -1.93847826E+01;
  COFD[9249] = 4.73396422E+00;
  COFD[9250] = -3.89665033E-01;
  COFD[9251] = 1.64665068E-02;
  COFD[9252] = -2.08403907E+01;
  COFD[9253] = 5.07617318E+00;
  COFD[9254] = -4.28983517E-01;
  COFD[9255] = 1.79703565E-02;
  COFD[9256] = -1.94103728E+01;
  COFD[9257] = 4.73396422E+00;
  COFD[9258] = -3.89665033E-01;
  COFD[9259] = 1.64665068E-02;
  COFD[9260] = -2.01687563E+01;
  COFD[9261] = 4.37329337E+00;
  COFD[9262] = -2.74949941E-01;
  COFD[9263] = 8.93930138E-03;
  COFD[9264] = -2.05171065E+01;
  COFD[9265] = 4.96961006E+00;
  COFD[9266] = -4.16785706E-01;
  COFD[9267] = 1.75054037E-02;
  COFD[9268] = -2.26588543E+01;
  COFD[9269] = 5.48550227E+00;
  COFD[9270] = -4.58704694E-01;
  COFD[9271] = 1.83603287E-02;
  COFD[9272] = -2.14961076E+01;
  COFD[9273] = 5.35264246E+00;
  COFD[9274] = -4.58331575E-01;
  COFD[9275] = 1.89892757E-02;
  COFD[9276] = -2.14562895E+01;
  COFD[9277] = 5.33532691E+00;
  COFD[9278] = -4.56505568E-01;
  COFD[9279] = 1.89262566E-02;
  COFD[9280] = -2.08516139E+01;
  COFD[9281] = 5.07617318E+00;
  COFD[9282] = -4.28983517E-01;
  COFD[9283] = 1.79703565E-02;
  COFD[9284] = -2.08624070E+01;
  COFD[9285] = 5.07617318E+00;
  COFD[9286] = -4.28983517E-01;
  COFD[9287] = 1.79703565E-02;
  COFD[9288] = -2.12488202E+01;
  COFD[9289] = 4.69672574E+00;
  COFD[9290] = -3.24393524E-01;
  COFD[9291] = 1.13541249E-02;
  COFD[9292] = -2.26588646E+01;
  COFD[9293] = 5.48378580E+00;
  COFD[9294] = -4.57964754E-01;
  COFD[9295] = 1.83088022E-02;
  COFD[9296] = -2.24277147E+01;
  COFD[9297] = 5.48901287E+00;
  COFD[9298] = -4.60031399E-01;
  COFD[9299] = 1.84508313E-02;
  COFD[9300] = -2.26462108E+01;
  COFD[9301] = 5.48378580E+00;
  COFD[9302] = -4.57964754E-01;
  COFD[9303] = 1.83088022E-02;
  COFD[9304] = -2.25056772E+01;
  COFD[9305] = 5.47343682E+00;
  COFD[9306] = -4.54166709E-01;
  COFD[9307] = 1.80526774E-02;
  COFD[9308] = -2.25201549E+01;
  COFD[9309] = 5.47343682E+00;
  COFD[9310] = -4.54166709E-01;
  COFD[9311] = 1.80526774E-02;
  COFD[9312] = -2.19740125E+01;
  COFD[9313] = 4.96635252E+00;
  COFD[9314] = -3.66267779E-01;
  COFD[9315] = 1.34216831E-02;
  COFD[9316] = -2.17030046E+01;
  COFD[9317] = 5.39237617E+00;
  COFD[9318] = -4.62530602E-01;
  COFD[9319] = 1.91345681E-02;
  COFD[9320] = -2.19895695E+01;
  COFD[9321] = 4.96635252E+00;
  COFD[9322] = -3.66267779E-01;
  COFD[9323] = 1.34216831E-02;
  COFD[9324] = -2.26809386E+01;
  COFD[9325] = 5.35408130E+00;
  COFD[9326] = -4.30433039E-01;
  COFD[9327] = 1.67163724E-02;
  COFD[9328] = -2.27276830E+01;
  COFD[9329] = 5.40059960E+00;
  COFD[9330] = -4.38830427E-01;
  COFD[9331] = 1.71686343E-02;
  COFD[9332] = -2.27156340E+01;
  COFD[9333] = 5.25593075E+00;
  COFD[9334] = -4.13540252E-01;
  COFD[9335] = 1.58298021E-02;
  COFD[9336] = -2.28854662E+01;
  COFD[9337] = 5.41193653E+00;
  COFD[9338] = -4.40946219E-01;
  COFD[9339] = 1.72846392E-02;
  COFD[9340] = -2.27176329E+01;
  COFD[9341] = 5.26237767E+00;
  COFD[9342] = -4.14629620E-01;
  COFD[9343] = 1.58863936E-02;
  COFD[9344] = -2.27231159E+01;
  COFD[9345] = 5.26237767E+00;
  COFD[9346] = -4.14629620E-01;
  COFD[9347] = 1.58863936E-02;
  COFD[9348] = -2.22575995E+01;
  COFD[9349] = 4.96852134E+00;
  COFD[9350] = -3.66607756E-01;
  COFD[9351] = 1.34385708E-02;
  COFD[9352] = -2.22261280E+01;
  COFD[9353] = 4.96982327E+00;
  COFD[9354] = -3.66811857E-01;
  COFD[9355] = 1.34487095E-02;
  COFD[9356] = -2.27064677E+01;
  COFD[9357] = 5.12211189E+00;
  COFD[9358] = -3.91225928E-01;
  COFD[9359] = 1.46792378E-02;
  COFD[9360] = -2.27719446E+01;
  COFD[9361] = 5.15606268E+00;
  COFD[9362] = -3.96907901E-01;
  COFD[9363] = 1.49727202E-02;
  COFD[9364] = -2.15669398E+01;
  COFD[9365] = 4.77388530E+00;
  COFD[9366] = -3.36183750E-01;
  COFD[9367] = 1.19302239E-02;
  COFD[9368] = -2.15737433E+01;
  COFD[9369] = 4.77388530E+00;
  COFD[9370] = -3.36183750E-01;
  COFD[9371] = 1.19302239E-02;
  COFD[9372] = -2.20318291E+01;
  COFD[9373] = 4.93482700E+00;
  COFD[9374] = -3.61331756E-01;
  COFD[9375] = 1.31765767E-02;
  COFD[9376] = -2.23257299E+01;
  COFD[9377] = 4.99720991E+00;
  COFD[9378] = -3.71116272E-01;
  COFD[9379] = 1.36628560E-02;
  COFD[9380] = -2.20054081E+01;
  COFD[9381] = 4.70635758E+00;
  COFD[9382] = -3.25860889E-01;
  COFD[9383] = 1.14256815E-02;
  COFD[9384] = -2.19363071E+01;
  COFD[9385] = 4.70635758E+00;
  COFD[9386] = -3.25860889E-01;
  COFD[9387] = 1.14256815E-02;
  COFD[9388] = -2.27109951E+01;
  COFD[9389] = 5.37975560E+00;
  COFD[9390] = -4.34974624E-01;
  COFD[9391] = 1.69583701E-02;
  COFD[9392] = -2.26722403E+01;
  COFD[9393] = 5.35408130E+00;
  COFD[9394] = -4.30433039E-01;
  COFD[9395] = 1.67163724E-02;
  COFD[9396] = -2.22654986E+01;
  COFD[9397] = 4.79970617E+00;
  COFD[9398] = -3.40160538E-01;
  COFD[9399] = 1.21254182E-02;
  COFD[9400] = -2.21244659E+01;
  COFD[9401] = 4.84823431E+00;
  COFD[9402] = -3.47731563E-01;
  COFD[9403] = 1.25001760E-02;
  COFD[9404] = -2.22786873E+01;
  COFD[9405] = 4.89093124E+00;
  COFD[9406] = -3.54419517E-01;
  COFD[9407] = 1.28322610E-02;
  COFD[9408] = -2.20198006E+01;
  COFD[9409] = 4.73965868E+00;
  COFD[9410] = -3.30939918E-01;
  COFD[9411] = 1.16735493E-02;
  COFD[9412] = -2.22206436E+01;
  COFD[9413] = 4.79970617E+00;
  COFD[9414] = -3.40160538E-01;
  COFD[9415] = 1.21254182E-02;
  COFD[9416] = -2.22177093E+01;
  COFD[9417] = 4.79970617E+00;
  COFD[9418] = -3.40160538E-01;
  COFD[9419] = 1.21254182E-02;
  COFD[9420] = -2.24701973E+01;
  COFD[9421] = 4.86736132E+00;
  COFD[9422] = -3.50725707E-01;
  COFD[9423] = 1.26487745E-02;
  COFD[9424] = -2.16636265E+01;
  COFD[9425] = 4.42530942E+00;
  COFD[9426] = -2.82800211E-01;
  COFD[9427] = 9.31937239E-03;
  COFD[9428] = -2.16636265E+01;
  COFD[9429] = 4.42530942E+00;
  COFD[9430] = -2.82800211E-01;
  COFD[9431] = 9.31937239E-03;
  COFD[9432] = -2.16636265E+01;
  COFD[9433] = 4.42530942E+00;
  COFD[9434] = -2.82800211E-01;
  COFD[9435] = 9.31937239E-03;
  COFD[9436] = -2.16636265E+01;
  COFD[9437] = 4.42530942E+00;
  COFD[9438] = -2.82800211E-01;
  COFD[9439] = 9.31937239E-03;
  COFD[9440] = -2.16636265E+01;
  COFD[9441] = 4.42530942E+00;
  COFD[9442] = -2.82800211E-01;
  COFD[9443] = 9.31937239E-03;
  COFD[9444] = -2.14832256E+01;
  COFD[9445] = 4.24469152E+00;
  COFD[9446] = -2.55617920E-01;
  COFD[9447] = 8.00605387E-03;
  COFD[9448] = -2.20449946E+01;
  COFD[9449] = 4.63376397E+00;
  COFD[9450] = -3.14793416E-01;
  COFD[9451] = 1.08858273E-02;
  COFD[9452] = -2.20449946E+01;
  COFD[9453] = 4.63376397E+00;
  COFD[9454] = -3.14793416E-01;
  COFD[9455] = 1.08858273E-02;
  COFD[9456] = -2.04878949E+01;
  COFD[9457] = 4.96174500E+00;
  COFD[9458] = -4.15861207E-01;
  COFD[9459] = 1.74690994E-02;
  COFD[9460] = -1.98465509E+01;
  COFD[9461] = 5.33311526E+00;
  COFD[9462] = -4.56260202E-01;
  COFD[9463] = 1.89172095E-02;
  COFD[9464] = -1.60791983E+01;
  COFD[9465] = 3.84841959E+00;
  COFD[9466] = -2.82051466E-01;
  COFD[9467] = 1.20928078E-02;
  COFD[9468] = -1.93840063E+01;
  COFD[9469] = 4.69695753E+00;
  COFD[9470] = -3.85218507E-01;
  COFD[9471] = 1.62877051E-02;
  COFD[9472] = -2.09856426E+01;
  COFD[9473] = 5.09017902E+00;
  COFD[9474] = -4.30465909E-01;
  COFD[9475] = 1.80215959E-02;
  COFD[9476] = -1.94096451E+01;
  COFD[9477] = 4.69695753E+00;
  COFD[9478] = -3.85218507E-01;
  COFD[9479] = 1.62877051E-02;
  COFD[9480] = -1.91635733E+01;
  COFD[9481] = 3.88158347E+00;
  COFD[9482] = -2.05180531E-01;
  COFD[9483] = 5.72414129E-03;
  COFD[9484] = -2.06932388E+01;
  COFD[9485] = 4.99635597E+00;
  COFD[9486] = -4.19936627E-01;
  COFD[9487] = 1.76294690E-02;
  COFD[9488] = -2.27616242E+01;
  COFD[9489] = 5.48417634E+00;
  COFD[9490] = -4.58175065E-01;
  COFD[9491] = 1.83238989E-02;
  COFD[9492] = -2.15027918E+01;
  COFD[9493] = 5.32532661E+00;
  COFD[9494] = -4.55395062E-01;
  COFD[9495] = 1.88852639E-02;
  COFD[9496] = -2.16172373E+01;
  COFD[9497] = 5.35518119E+00;
  COFD[9498] = -4.58596594E-01;
  COFD[9499] = 1.89982967E-02;
  COFD[9500] = -2.08727720E+01;
  COFD[9501] = 5.05236296E+00;
  COFD[9502] = -4.26457052E-01;
  COFD[9503] = 1.78827371E-02;
  COFD[9504] = -2.08836009E+01;
  COFD[9505] = 5.05236296E+00;
  COFD[9506] = -4.26457052E-01;
  COFD[9507] = 1.78827371E-02;
  COFD[9508] = -2.14718780E+01;
  COFD[9509] = 4.76032791E+00;
  COFD[9510] = -3.34106096E-01;
  COFD[9511] = 1.18285090E-02;
  COFD[9512] = -2.27319532E+01;
  COFD[9513] = 5.48750049E+00;
  COFD[9514] = -4.59445591E-01;
  COFD[9515] = 1.84106692E-02;
  COFD[9516] = -2.25044450E+01;
  COFD[9517] = 5.49111268E+00;
  COFD[9518] = -4.61324030E-01;
  COFD[9519] = 1.85456734E-02;
  COFD[9520] = -2.27192610E+01;
  COFD[9521] = 5.48750049E+00;
  COFD[9522] = -4.59445591E-01;
  COFD[9523] = 1.84106692E-02;
  COFD[9524] = -2.25876205E+01;
  COFD[9525] = 5.47808026E+00;
  COFD[9526] = -4.55721754E-01;
  COFD[9527] = 1.81554634E-02;
  COFD[9528] = -2.26021386E+01;
  COFD[9529] = 5.47808026E+00;
  COFD[9530] = -4.55721754E-01;
  COFD[9531] = 1.81554634E-02;
  COFD[9532] = -2.21599351E+01;
  COFD[9533] = 5.01596880E+00;
  COFD[9534] = -3.74075989E-01;
  COFD[9535] = 1.38104375E-02;
  COFD[9536] = -2.17251324E+01;
  COFD[9537] = 5.36513529E+00;
  COFD[9538] = -4.59632397E-01;
  COFD[9539] = 1.90333966E-02;
  COFD[9540] = -2.21755534E+01;
  COFD[9541] = 5.01596880E+00;
  COFD[9542] = -3.74075989E-01;
  COFD[9543] = 1.38104375E-02;
  COFD[9544] = -2.28058881E+01;
  COFD[9545] = 5.37943451E+00;
  COFD[9546] = -4.34917480E-01;
  COFD[9547] = 1.69553154E-02;
  COFD[9548] = -2.28416281E+01;
  COFD[9549] = 5.42114360E+00;
  COFD[9550] = -4.42702443E-01;
  COFD[9551] = 1.73818623E-02;
  COFD[9552] = -2.28501520E+01;
  COFD[9553] = 5.28643469E+00;
  COFD[9554] = -4.18704366E-01;
  COFD[9555] = 1.60983298E-02;
  COFD[9556] = -2.29901682E+01;
  COFD[9557] = 5.43102089E+00;
  COFD[9558] = -4.44617784E-01;
  COFD[9559] = 1.74886865E-02;
  COFD[9560] = -2.28509971E+01;
  COFD[9561] = 5.29211810E+00;
  COFD[9562] = -4.19685131E-01;
  COFD[9563] = 1.61498496E-02;
  COFD[9564] = -2.28565056E+01;
  COFD[9565] = 5.29211810E+00;
  COFD[9566] = -4.19685131E-01;
  COFD[9567] = 1.61498496E-02;
  COFD[9568] = -2.24359057E+01;
  COFD[9569] = 5.01800199E+00;
  COFD[9570] = -3.74397273E-01;
  COFD[9571] = 1.38264725E-02;
  COFD[9572] = -2.14394083E+01;
  COFD[9573] = 4.58403944E+00;
  COFD[9574] = -3.11849240E-01;
  COFD[9575] = 1.08987964E-02;
  COFD[9576] = -2.28429772E+01;
  COFD[9577] = 5.15610802E+00;
  COFD[9578] = -3.96915596E-01;
  COFD[9579] = 1.49731206E-02;
  COFD[9580] = -2.28163969E+01;
  COFD[9581] = 5.15297410E+00;
  COFD[9582] = -3.97643104E-01;
  COFD[9583] = 1.50471734E-02;
  COFD[9584] = -2.17696088E+01;
  COFD[9585] = 4.82886477E+00;
  COFD[9586] = -3.44704925E-01;
  COFD[9587] = 1.23501995E-02;
  COFD[9588] = -2.17764410E+01;
  COFD[9589] = 4.82886477E+00;
  COFD[9590] = -3.44704925E-01;
  COFD[9591] = 1.23501995E-02;
  COFD[9592] = -2.22214013E+01;
  COFD[9593] = 4.98642801E+00;
  COFD[9594] = -3.69418838E-01;
  COFD[9595] = 1.35783254E-02;
  COFD[9596] = -2.15455542E+01;
  COFD[9597] = 4.61535250E+00;
  COFD[9598] = -3.16697948E-01;
  COFD[9599] = 1.11372758E-02;
  COFD[9600] = -2.22151840E+01;
  COFD[9601] = 4.76949339E+00;
  COFD[9602] = -3.35510618E-01;
  COFD[9603] = 1.18972671E-02;
  COFD[9604] = -2.21456365E+01;
  COFD[9605] = 4.76949339E+00;
  COFD[9606] = -3.35510618E-01;
  COFD[9607] = 1.18972671E-02;
  COFD[9608] = -2.28269592E+01;
  COFD[9609] = 5.40125902E+00;
  COFD[9610] = -4.38952702E-01;
  COFD[9611] = 1.71753151E-02;
  COFD[9612] = -2.27971573E+01;
  COFD[9613] = 5.37943451E+00;
  COFD[9614] = -4.34917480E-01;
  COFD[9615] = 1.69553154E-02;
  COFD[9616] = -2.18344033E+01;
  COFD[9617] = 4.58844599E+00;
  COFD[9618] = -3.11413674E-01;
  COFD[9619] = 1.08381861E-02;
  COFD[9620] = -2.14919880E+01;
  COFD[9621] = 4.54096878E+00;
  COFD[9622] = -3.04864851E-01;
  COFD[9623] = 1.05432027E-02;
  COFD[9624] = -2.14999273E+01;
  COFD[9625] = 4.51394400E+00;
  COFD[9626] = -3.01014625E-01;
  COFD[9627] = 1.03660332E-02;
  COFD[9628] = -2.22206436E+01;
  COFD[9629] = 4.79970617E+00;
  COFD[9630] = -3.40160538E-01;
  COFD[9631] = 1.21254182E-02;
  COFD[9632] = -2.17892703E+01;
  COFD[9633] = 4.58844599E+00;
  COFD[9634] = -3.11413674E-01;
  COFD[9635] = 1.08381861E-02;
  COFD[9636] = -2.17863187E+01;
  COFD[9637] = 4.58844599E+00;
  COFD[9638] = -3.11413674E-01;
  COFD[9639] = 1.08381861E-02;
  COFD[9640] = -2.26406349E+01;
  COFD[9641] = 4.91734229E+00;
  COFD[9642] = -3.58590688E-01;
  COFD[9643] = 1.30403665E-02;
  COFD[9644] = -2.15541051E+01;
  COFD[9645] = 4.35942660E+00;
  COFD[9646] = -2.74922937E-01;
  COFD[9647] = 9.00571669E-03;
  COFD[9648] = -2.15541051E+01;
  COFD[9649] = 4.35942660E+00;
  COFD[9650] = -2.74922937E-01;
  COFD[9651] = 9.00571669E-03;
  COFD[9652] = -2.15541051E+01;
  COFD[9653] = 4.35942660E+00;
  COFD[9654] = -2.74922937E-01;
  COFD[9655] = 9.00571669E-03;
  COFD[9656] = -2.15541051E+01;
  COFD[9657] = 4.35942660E+00;
  COFD[9658] = -2.74922937E-01;
  COFD[9659] = 9.00571669E-03;
  COFD[9660] = -2.15541051E+01;
  COFD[9661] = 4.35942660E+00;
  COFD[9662] = -2.74922937E-01;
  COFD[9663] = 9.00571669E-03;
  COFD[9664] = -2.14573829E+01;
  COFD[9665] = 4.21707265E+00;
  COFD[9666] = -2.53123137E-01;
  COFD[9667] = 7.94062675E-03;
  COFD[9668] = -2.22491918E+01;
  COFD[9669] = 4.69760938E+00;
  COFD[9670] = -3.24528129E-01;
  COFD[9671] = 1.13606885E-02;
  COFD[9672] = -2.22491918E+01;
  COFD[9673] = 4.69760938E+00;
  COFD[9674] = -3.24528129E-01;
  COFD[9675] = 1.13606885E-02;
  COFD[9676] = -2.06504915E+01;
  COFD[9677] = 4.98377900E+00;
  COFD[9678] = -4.18452852E-01;
  COFD[9679] = 1.75709529E-02;
  COFD[9680] = -1.98464824E+01;
  COFD[9681] = 5.33311526E+00;
  COFD[9682] = -4.56260202E-01;
  COFD[9683] = 1.89172095E-02;
  COFD[9684] = -1.60790629E+01;
  COFD[9685] = 3.84841959E+00;
  COFD[9686] = -2.82051466E-01;
  COFD[9687] = 1.20928078E-02;
  COFD[9688] = -1.93830797E+01;
  COFD[9689] = 4.69695753E+00;
  COFD[9690] = -3.85218507E-01;
  COFD[9691] = 1.62877051E-02;
  COFD[9692] = -2.09840415E+01;
  COFD[9693] = 5.09017902E+00;
  COFD[9694] = -4.30465909E-01;
  COFD[9695] = 1.80215959E-02;
  COFD[9696] = -1.94086698E+01;
  COFD[9697] = 4.69695753E+00;
  COFD[9698] = -3.85218507E-01;
  COFD[9699] = 1.62877051E-02;
  COFD[9700] = -1.91625502E+01;
  COFD[9701] = 3.88158347E+00;
  COFD[9702] = -2.05180531E-01;
  COFD[9703] = 5.72414129E-03;
  COFD[9704] = -2.06917881E+01;
  COFD[9705] = 4.99635597E+00;
  COFD[9706] = -4.19936627E-01;
  COFD[9707] = 1.76294690E-02;
  COFD[9708] = -2.27596261E+01;
  COFD[9709] = 5.48417634E+00;
  COFD[9710] = -4.58175065E-01;
  COFD[9711] = 1.83238989E-02;
  COFD[9712] = -2.15019127E+01;
  COFD[9713] = 5.32532661E+00;
  COFD[9714] = -4.55395062E-01;
  COFD[9715] = 1.88852639E-02;
  COFD[9716] = -2.16163085E+01;
  COFD[9717] = 5.35518119E+00;
  COFD[9718] = -4.58596594E-01;
  COFD[9719] = 1.89982967E-02;
  COFD[9720] = -2.08711344E+01;
  COFD[9721] = 5.05236296E+00;
  COFD[9722] = -4.26457052E-01;
  COFD[9723] = 1.78827371E-02;
  COFD[9724] = -2.08819275E+01;
  COFD[9725] = 5.05236296E+00;
  COFD[9726] = -4.26457052E-01;
  COFD[9727] = 1.78827371E-02;
  COFD[9728] = -2.14703499E+01;
  COFD[9729] = 4.76032791E+00;
  COFD[9730] = -3.34106096E-01;
  COFD[9731] = 1.18285090E-02;
  COFD[9732] = -2.27304234E+01;
  COFD[9733] = 5.48750049E+00;
  COFD[9734] = -4.59445591E-01;
  COFD[9735] = 1.84106692E-02;
  COFD[9736] = -2.25029926E+01;
  COFD[9737] = 5.49111268E+00;
  COFD[9738] = -4.61324030E-01;
  COFD[9739] = 1.85456734E-02;
  COFD[9740] = -2.27177696E+01;
  COFD[9741] = 5.48750049E+00;
  COFD[9742] = -4.59445591E-01;
  COFD[9743] = 1.84106692E-02;
  COFD[9744] = -2.25862481E+01;
  COFD[9745] = 5.47808026E+00;
  COFD[9746] = -4.55721754E-01;
  COFD[9747] = 1.81554634E-02;
  COFD[9748] = -2.26007257E+01;
  COFD[9749] = 5.47808026E+00;
  COFD[9750] = -4.55721754E-01;
  COFD[9751] = 1.81554634E-02;
  COFD[9752] = -2.21579970E+01;
  COFD[9753] = 5.01596880E+00;
  COFD[9754] = -3.74075989E-01;
  COFD[9755] = 1.38104375E-02;
  COFD[9756] = -2.17232257E+01;
  COFD[9757] = 5.36513529E+00;
  COFD[9758] = -4.59632397E-01;
  COFD[9759] = 1.90333966E-02;
  COFD[9760] = -2.21735540E+01;
  COFD[9761] = 5.01596880E+00;
  COFD[9762] = -3.74075989E-01;
  COFD[9763] = 1.38104375E-02;
  COFD[9764] = -2.28040120E+01;
  COFD[9765] = 5.37943451E+00;
  COFD[9766] = -4.34917480E-01;
  COFD[9767] = 1.69553154E-02;
  COFD[9768] = -2.28396887E+01;
  COFD[9769] = 5.42114360E+00;
  COFD[9770] = -4.42702443E-01;
  COFD[9771] = 1.73818623E-02;
  COFD[9772] = -2.28478733E+01;
  COFD[9773] = 5.28643469E+00;
  COFD[9774] = -4.18704366E-01;
  COFD[9775] = 1.60983298E-02;
  COFD[9776] = -2.29881979E+01;
  COFD[9777] = 5.43102089E+00;
  COFD[9778] = -4.44617784E-01;
  COFD[9779] = 1.74886865E-02;
  COFD[9780] = -2.28486926E+01;
  COFD[9781] = 5.29211810E+00;
  COFD[9782] = -4.19685131E-01;
  COFD[9783] = 1.61498496E-02;
  COFD[9784] = -2.28541756E+01;
  COFD[9785] = 5.29211810E+00;
  COFD[9786] = -4.19685131E-01;
  COFD[9787] = 1.61498496E-02;
  COFD[9788] = -2.24335517E+01;
  COFD[9789] = 5.01800199E+00;
  COFD[9790] = -3.74397273E-01;
  COFD[9791] = 1.38264725E-02;
  COFD[9792] = -2.14370295E+01;
  COFD[9793] = 4.58403944E+00;
  COFD[9794] = -3.11849240E-01;
  COFD[9795] = 1.08987964E-02;
  COFD[9796] = -2.28403481E+01;
  COFD[9797] = 5.15610802E+00;
  COFD[9798] = -3.96915596E-01;
  COFD[9799] = 1.49731206E-02;
  COFD[9800] = -2.28137467E+01;
  COFD[9801] = 5.15297410E+00;
  COFD[9802] = -3.97643104E-01;
  COFD[9803] = 1.50471734E-02;
  COFD[9804] = -2.17675221E+01;
  COFD[9805] = 4.82886477E+00;
  COFD[9806] = -3.44704925E-01;
  COFD[9807] = 1.23501995E-02;
  COFD[9808] = -2.17743256E+01;
  COFD[9809] = 4.82886477E+00;
  COFD[9810] = -3.44704925E-01;
  COFD[9811] = 1.23501995E-02;
  COFD[9812] = -2.22190979E+01;
  COFD[9813] = 4.98642801E+00;
  COFD[9814] = -3.69418838E-01;
  COFD[9815] = 1.35783254E-02;
  COFD[9816] = -2.15432253E+01;
  COFD[9817] = 4.61535250E+00;
  COFD[9818] = -3.16697948E-01;
  COFD[9819] = 1.11372758E-02;
  COFD[9820] = -2.22117360E+01;
  COFD[9821] = 4.76949339E+00;
  COFD[9822] = -3.35510618E-01;
  COFD[9823] = 1.18972671E-02;
  COFD[9824] = -2.21426349E+01;
  COFD[9825] = 4.76949339E+00;
  COFD[9826] = -3.35510618E-01;
  COFD[9827] = 1.18972671E-02;
  COFD[9828] = -2.28250512E+01;
  COFD[9829] = 5.40125902E+00;
  COFD[9830] = -4.38952702E-01;
  COFD[9831] = 1.71753151E-02;
  COFD[9832] = -2.27953136E+01;
  COFD[9833] = 5.37943451E+00;
  COFD[9834] = -4.34917480E-01;
  COFD[9835] = 1.69553154E-02;
  COFD[9836] = -2.18311738E+01;
  COFD[9837] = 4.58844599E+00;
  COFD[9838] = -3.11413674E-01;
  COFD[9839] = 1.08381861E-02;
  COFD[9840] = -2.14892974E+01;
  COFD[9841] = 4.54096878E+00;
  COFD[9842] = -3.04864851E-01;
  COFD[9843] = 1.05432027E-02;
  COFD[9844] = -2.14972572E+01;
  COFD[9845] = 4.51394400E+00;
  COFD[9846] = -3.01014625E-01;
  COFD[9847] = 1.03660332E-02;
  COFD[9848] = -2.22177093E+01;
  COFD[9849] = 4.79970617E+00;
  COFD[9850] = -3.40160538E-01;
  COFD[9851] = 1.21254182E-02;
  COFD[9852] = -2.17863187E+01;
  COFD[9853] = 4.58844599E+00;
  COFD[9854] = -3.11413674E-01;
  COFD[9855] = 1.08381861E-02;
  COFD[9856] = -2.17833845E+01;
  COFD[9857] = 4.58844599E+00;
  COFD[9858] = -3.11413674E-01;
  COFD[9859] = 1.08381861E-02;
  COFD[9860] = -2.26374611E+01;
  COFD[9861] = 4.91734229E+00;
  COFD[9862] = -3.58590688E-01;
  COFD[9863] = 1.30403665E-02;
  COFD[9864] = -2.15505437E+01;
  COFD[9865] = 4.35942660E+00;
  COFD[9866] = -2.74922937E-01;
  COFD[9867] = 9.00571669E-03;
  COFD[9868] = -2.15505437E+01;
  COFD[9869] = 4.35942660E+00;
  COFD[9870] = -2.74922937E-01;
  COFD[9871] = 9.00571669E-03;
  COFD[9872] = -2.15505437E+01;
  COFD[9873] = 4.35942660E+00;
  COFD[9874] = -2.74922937E-01;
  COFD[9875] = 9.00571669E-03;
  COFD[9876] = -2.15505437E+01;
  COFD[9877] = 4.35942660E+00;
  COFD[9878] = -2.74922937E-01;
  COFD[9879] = 9.00571669E-03;
  COFD[9880] = -2.15505437E+01;
  COFD[9881] = 4.35942660E+00;
  COFD[9882] = -2.74922937E-01;
  COFD[9883] = 9.00571669E-03;
  COFD[9884] = -2.14535226E+01;
  COFD[9885] = 4.21707265E+00;
  COFD[9886] = -2.53123137E-01;
  COFD[9887] = 7.94062675E-03;
  COFD[9888] = -2.22458282E+01;
  COFD[9889] = 4.69760938E+00;
  COFD[9890] = -3.24528129E-01;
  COFD[9891] = 1.13606885E-02;
  COFD[9892] = -2.22458282E+01;
  COFD[9893] = 4.69760938E+00;
  COFD[9894] = -3.24528129E-01;
  COFD[9895] = 1.13606885E-02;
  COFD[9896] = -2.06490406E+01;
  COFD[9897] = 4.98377900E+00;
  COFD[9898] = -4.18452852E-01;
  COFD[9899] = 1.75709529E-02;
  COFD[9900] = -1.98431084E+01;
  COFD[9901] = 5.29318575E+00;
  COFD[9902] = -4.51815332E-01;
  COFD[9903] = 1.87526763E-02;
  COFD[9904] = -1.59092763E+01;
  COFD[9905] = 3.75176869E+00;
  COFD[9906] = -2.70323254E-01;
  COFD[9907] = 1.16183021E-02;
  COFD[9908] = -1.93555464E+01;
  COFD[9909] = 4.64408224E+00;
  COFD[9910] = -3.78774559E-01;
  COFD[9911] = 1.60247845E-02;
  COFD[9912] = -2.08510114E+01;
  COFD[9913] = 5.00799007E+00;
  COFD[9914] = -4.21303846E-01;
  COFD[9915] = 1.76831398E-02;
  COFD[9916] = -1.93817773E+01;
  COFD[9917] = 4.64408224E+00;
  COFD[9918] = -3.78774559E-01;
  COFD[9919] = 1.60247845E-02;
  COFD[9920] = -2.07027525E+01;
  COFD[9921] = 4.52425469E+00;
  COFD[9922] = -2.97869560E-01;
  COFD[9923] = 1.00531031E-02;
  COFD[9924] = -2.05041008E+01;
  COFD[9925] = 4.89401297E+00;
  COFD[9926] = -4.08087781E-01;
  COFD[9927] = 1.71722700E-02;
  COFD[9928] = -2.28305232E+01;
  COFD[9929] = 5.49066995E+00;
  COFD[9930] = -4.61705340E-01;
  COFD[9931] = 1.85789333E-02;
  COFD[9932] = -2.14866923E+01;
  COFD[9933] = 5.28483859E+00;
  COFD[9934] = -4.50875157E-01;
  COFD[9935] = 1.87173937E-02;
  COFD[9936] = -2.14364394E+01;
  COFD[9937] = 5.26245213E+00;
  COFD[9938] = -4.48352237E-01;
  COFD[9939] = 1.86227443E-02;
  COFD[9940] = -2.08627215E+01;
  COFD[9941] = 5.00799007E+00;
  COFD[9942] = -4.21303846E-01;
  COFD[9943] = 1.76831398E-02;
  COFD[9944] = -2.08739937E+01;
  COFD[9945] = 5.00799007E+00;
  COFD[9946] = -4.21303846E-01;
  COFD[9947] = 1.76831398E-02;
  COFD[9948] = -2.17304988E+01;
  COFD[9949] = 4.83264094E+00;
  COFD[9950] = -3.45294821E-01;
  COFD[9951] = 1.23794137E-02;
  COFD[9952] = -2.28191076E+01;
  COFD[9953] = 5.49118368E+00;
  COFD[9954] = -4.61244560E-01;
  COFD[9955] = 1.85388488E-02;
  COFD[9956] = -2.25951542E+01;
  COFD[9957] = 5.49332573E+00;
  COFD[9958] = -4.62935001E-01;
  COFD[9959] = 1.86660283E-02;
  COFD[9960] = -2.28059431E+01;
  COFD[9961] = 5.49118368E+00;
  COFD[9962] = -4.61244560E-01;
  COFD[9963] = 1.85388488E-02;
  COFD[9964] = -2.26835052E+01;
  COFD[9965] = 5.48311530E+00;
  COFD[9966] = -4.57619182E-01;
  COFD[9967] = 1.82841374E-02;
  COFD[9968] = -2.26985198E+01;
  COFD[9969] = 5.48311530E+00;
  COFD[9970] = -4.57619182E-01;
  COFD[9971] = 1.82841374E-02;
  COFD[9972] = -2.23860649E+01;
  COFD[9973] = 5.07468436E+00;
  COFD[9974] = -3.83473296E-01;
  COFD[9975] = 1.42836887E-02;
  COFD[9976] = -2.17533145E+01;
  COFD[9977] = 5.33181444E+00;
  COFD[9978] = -4.56115824E-01;
  COFD[9979] = 1.89118833E-02;
  COFD[9980] = -2.24024497E+01;
  COFD[9981] = 5.07468436E+00;
  COFD[9982] = -3.83473296E-01;
  COFD[9983] = 1.42836887E-02;
  COFD[9984] = -2.29546205E+01;
  COFD[9985] = 5.40726595E+00;
  COFD[9986] = -4.40072331E-01;
  COFD[9987] = 1.72366684E-02;
  COFD[9988] = -2.29808455E+01;
  COFD[9989] = 5.44447552E+00;
  COFD[9990] = -4.47281890E-01;
  COFD[9991] = 1.76387634E-02;
  COFD[9992] = -2.30198362E+01;
  COFD[9993] = 5.32186706E+00;
  COFD[9994] = -4.24826256E-01;
  COFD[9995] = 1.64201917E-02;
  COFD[9996] = -2.31098624E+01;
  COFD[9997] = 5.44798953E+00;
  COFD[9998] = -4.48265013E-01;
  COFD[9999] = 1.77009083E-02;
  COFD[10000] = -2.30219269E+01;
  COFD[10001] = 5.32771617E+00;
  COFD[10002] = -4.25833456E-01;
  COFD[10003] = 1.64730816E-02;
  COFD[10004] = -2.30277565E+01;
  COFD[10005] = 5.32771617E+00;
  COFD[10006] = -4.25833456E-01;
  COFD[10007] = 1.64730816E-02;
  COFD[10008] = -2.26588184E+01;
  COFD[10009] = 5.07646321E+00;
  COFD[10010] = -3.83762054E-01;
  COFD[10011] = 1.42983651E-02;
  COFD[10012] = -2.26303161E+01;
  COFD[10013] = 5.07752972E+00;
  COFD[10014] = -3.83935232E-01;
  COFD[10015] = 1.43071687E-02;
  COFD[10016] = -2.30240550E+01;
  COFD[10017] = 5.19737465E+00;
  COFD[10018] = -4.03890980E-01;
  COFD[10019] = 1.53353180E-02;
  COFD[10020] = -2.31022533E+01;
  COFD[10021] = 5.23643800E+00;
  COFD[10022] = -4.10255644E-01;
  COFD[10023] = 1.56593397E-02;
  COFD[10024] = -2.20221557E+01;
  COFD[10025] = 4.89616559E+00;
  COFD[10026] = -3.55241555E-01;
  COFD[10027] = 1.28731550E-02;
  COFD[10028] = -2.20293470E+01;
  COFD[10029] = 4.89616559E+00;
  COFD[10030] = -3.55241555E-01;
  COFD[10031] = 1.28731550E-02;
  COFD[10032] = -2.24600183E+01;
  COFD[10033] = 5.04880598E+00;
  COFD[10034] = -3.79285322E-01;
  COFD[10035] = 1.40712210E-02;
  COFD[10036] = -2.27123248E+01;
  COFD[10037] = 5.10007015E+00;
  COFD[10038] = -3.87606161E-01;
  COFD[10039] = 1.44941102E-02;
  COFD[10040] = -2.24803811E+01;
  COFD[10041] = 4.84032349E+00;
  COFD[10042] = -3.46494716E-01;
  COFD[10043] = 1.24388375E-02;
  COFD[10044] = -2.24050628E+01;
  COFD[10045] = 4.84032349E+00;
  COFD[10046] = -3.46494716E-01;
  COFD[10047] = 1.24388375E-02;
  COFD[10048] = -2.29717201E+01;
  COFD[10049] = 5.42721943E+00;
  COFD[10050] = -4.43876872E-01;
  COFD[10051] = 1.74472689E-02;
  COFD[10052] = -2.29454860E+01;
  COFD[10053] = 5.40726595E+00;
  COFD[10054] = -4.40072331E-01;
  COFD[10055] = 1.72366684E-02;
  COFD[10056] = -2.26893474E+01;
  COFD[10057] = 4.91734229E+00;
  COFD[10058] = -3.58590688E-01;
  COFD[10059] = 1.30403665E-02;
  COFD[10060] = -2.25506237E+01;
  COFD[10061] = 4.96541553E+00;
  COFD[10062] = -3.66120907E-01;
  COFD[10063] = 1.34143879E-02;
  COFD[10064] = -2.26945013E+01;
  COFD[10065] = 5.00634977E+00;
  COFD[10066] = -3.72557302E-01;
  COFD[10067] = 1.37346802E-02;
  COFD[10068] = -2.24701973E+01;
  COFD[10069] = 4.86736132E+00;
  COFD[10070] = -3.50725707E-01;
  COFD[10071] = 1.26487745E-02;
  COFD[10072] = -2.26406349E+01;
  COFD[10073] = 4.91734229E+00;
  COFD[10074] = -3.58590688E-01;
  COFD[10075] = 1.30403665E-02;
  COFD[10076] = -2.26374611E+01;
  COFD[10077] = 4.91734229E+00;
  COFD[10078] = -3.58590688E-01;
  COFD[10079] = 1.30403665E-02;
  COFD[10080] = -2.28846859E+01;
  COFD[10081] = 4.98408738E+00;
  COFD[10082] = -3.69050697E-01;
  COFD[10083] = 1.35600028E-02;
  COFD[10084] = -2.21485577E+01;
  COFD[10085] = 4.56927551E+00;
  COFD[10086] = -3.04798371E-01;
  COFD[10087] = 1.03930919E-02;
  COFD[10088] = -2.21485577E+01;
  COFD[10089] = 4.56927551E+00;
  COFD[10090] = -3.04798371E-01;
  COFD[10091] = 1.03930919E-02;
  COFD[10092] = -2.21485577E+01;
  COFD[10093] = 4.56927551E+00;
  COFD[10094] = -3.04798371E-01;
  COFD[10095] = 1.03930919E-02;
  COFD[10096] = -2.21485577E+01;
  COFD[10097] = 4.56927551E+00;
  COFD[10098] = -3.04798371E-01;
  COFD[10099] = 1.03930919E-02;
  COFD[10100] = -2.21485577E+01;
  COFD[10101] = 4.56927551E+00;
  COFD[10102] = -3.04798371E-01;
  COFD[10103] = 1.03930919E-02;
  COFD[10104] = -2.20144954E+01;
  COFD[10105] = 4.41014015E+00;
  COFD[10106] = -2.80504988E-01;
  COFD[10107] = 9.20806328E-03;
  COFD[10108] = -2.25315020E+01;
  COFD[10109] = 4.77923223E+00;
  COFD[10110] = -3.37003339E-01;
  COFD[10111] = 1.19703492E-02;
  COFD[10112] = -2.25315020E+01;
  COFD[10113] = 4.77923223E+00;
  COFD[10114] = -3.37003339E-01;
  COFD[10115] = 1.19703492E-02;
  COFD[10116] = -2.04827632E+01;
  COFD[10117] = 4.88918294E+00;
  COFD[10118] = -4.07583331E-01;
  COFD[10119] = 1.71552617E-02;
  COFD[10120] = -2.03662946E+01;
  COFD[10121] = 5.43917732E+00;
  COFD[10122] = -4.65585169E-01;
  COFD[10123] = 1.91504194E-02;
  COFD[10124] = -1.65211695E+01;
  COFD[10125] = 3.96045058E+00;
  COFD[10126] = -2.95491086E-01;
  COFD[10127] = 1.26309913E-02;
  COFD[10128] = -2.01011556E+01;
  COFD[10129] = 4.89020393E+00;
  COFD[10130] = -4.07690029E-01;
  COFD[10131] = 1.71588628E-02;
  COFD[10132] = -2.15001525E+01;
  COFD[10133] = 5.19791529E+00;
  COFD[10134] = -4.41398853E-01;
  COFD[10135] = 1.83766038E-02;
  COFD[10136] = -2.01282926E+01;
  COFD[10137] = 4.89020393E+00;
  COFD[10138] = -4.07690029E-01;
  COFD[10139] = 1.71588628E-02;
  COFD[10140] = -1.90849617E+01;
  COFD[10141] = 3.76037053E+00;
  COFD[10142] = -1.86344449E-01;
  COFD[10143] = 4.78342296E-03;
  COFD[10144] = -2.12596156E+01;
  COFD[10145] = 5.13107284E+00;
  COFD[10146] = -4.34832560E-01;
  COFD[10147] = 1.81741959E-02;
  COFD[10148] = -2.29703135E+01;
  COFD[10149] = 5.45099312E+00;
  COFD[10150] = -4.48927721E-01;
  COFD[10151] = 1.77397381E-02;
  COFD[10152] = -2.20377105E+01;
  COFD[10153] = 5.43771555E+00;
  COFD[10154] = -4.65617512E-01;
  COFD[10155] = 1.91604198E-02;
  COFD[10156] = -2.20523530E+01;
  COFD[10157] = 5.43694234E+00;
  COFD[10158] = -4.65634839E-01;
  COFD[10159] = 1.91657286E-02;
  COFD[10160] = -2.14847708E+01;
  COFD[10161] = 5.19080403E+00;
  COFD[10162] = -4.40813300E-01;
  COFD[10163] = 1.83643944E-02;
  COFD[10164] = -2.14967522E+01;
  COFD[10165] = 5.19080403E+00;
  COFD[10166] = -4.40813300E-01;
  COFD[10167] = 1.83643944E-02;
  COFD[10168] = -2.08674068E+01;
  COFD[10169] = 4.37860613E+00;
  COFD[10170] = -2.75749639E-01;
  COFD[10171] = 8.97792922E-03;
  COFD[10172] = -2.29332768E+01;
  COFD[10173] = 5.44974657E+00;
  COFD[10174] = -4.48651670E-01;
  COFD[10175] = 1.77235430E-02;
  COFD[10176] = -2.27384984E+01;
  COFD[10177] = 5.46322829E+00;
  COFD[10178] = -4.51749940E-01;
  COFD[10179] = 1.79075310E-02;
  COFD[10180] = -2.29193637E+01;
  COFD[10181] = 5.44974657E+00;
  COFD[10182] = -4.48651670E-01;
  COFD[10183] = 1.77235430E-02;
  COFD[10184] = -2.27214134E+01;
  COFD[10185] = 5.40961679E+00;
  COFD[10186] = -4.40511249E-01;
  COFD[10187] = 1.72607396E-02;
  COFD[10188] = -2.27372093E+01;
  COFD[10189] = 5.40961679E+00;
  COFD[10190] = -4.40511249E-01;
  COFD[10191] = 1.72607396E-02;
  COFD[10192] = -2.16898552E+01;
  COFD[10193] = 4.68658569E+00;
  COFD[10194] = -3.22849054E-01;
  COFD[10195] = 1.12788192E-02;
  COFD[10196] = -2.22344628E+01;
  COFD[10197] = 5.44527718E+00;
  COFD[10198] = -4.65287801E-01;
  COFD[10199] = 1.90954247E-02;
  COFD[10200] = -2.17074916E+01;
  COFD[10201] = 4.68658569E+00;
  COFD[10202] = -3.22849054E-01;
  COFD[10203] = 1.12788192E-02;
  COFD[10204] = -2.26847769E+01;
  COFD[10205] = 5.19870800E+00;
  COFD[10206] = -4.04106072E-01;
  COFD[10207] = 1.53462074E-02;
  COFD[10208] = -2.27935640E+01;
  COFD[10209] = 5.26880815E+00;
  COFD[10210] = -4.15708807E-01;
  COFD[10211] = 1.59422297E-02;
  COFD[10212] = -2.26693987E+01;
  COFD[10213] = 5.07552523E+00;
  COFD[10214] = -3.83609779E-01;
  COFD[10215] = 1.42906252E-02;
  COFD[10216] = -2.29519810E+01;
  COFD[10217] = 5.28477709E+00;
  COFD[10218] = -4.18418879E-01;
  COFD[10219] = 1.60833475E-02;
  COFD[10220] = -2.26785557E+01;
  COFD[10221] = 5.08419101E+00;
  COFD[10222] = -3.85017801E-01;
  COFD[10223] = 1.43622302E-02;
  COFD[10224] = -2.26849220E+01;
  COFD[10225] = 5.08419101E+00;
  COFD[10226] = -3.85017801E-01;
  COFD[10227] = 1.43622302E-02;
  COFD[10228] = -2.19726255E+01;
  COFD[10229] = 4.68933904E+00;
  COFD[10230] = -3.23268395E-01;
  COFD[10231] = 1.12992644E-02;
  COFD[10232] = -2.14841915E+01;
  COFD[10233] = 4.49540243E+00;
  COFD[10234] = -2.96514022E-01;
  COFD[10235] = 1.00871141E-02;
  COFD[10236] = -2.25275224E+01;
  COFD[10237] = 4.88611782E+00;
  COFD[10238] = -3.53664413E-01;
  COFD[10239] = 1.27947308E-02;
  COFD[10240] = -2.25844302E+01;
  COFD[10241] = 4.91727636E+00;
  COFD[10242] = -3.59056495E-01;
  COFD[10243] = 1.30783725E-02;
  COFD[10244] = -2.12201150E+01;
  COFD[10245] = 4.46261834E+00;
  COFD[10246] = -2.88453410E-01;
  COFD[10247] = 9.59378935E-03;
  COFD[10248] = -2.12278978E+01;
  COFD[10249] = 4.46261834E+00;
  COFD[10250] = -2.88453410E-01;
  COFD[10251] = 9.59378935E-03;
  COFD[10252] = -2.17388948E+01;
  COFD[10253] = 4.64756828E+00;
  COFD[10254] = -3.16905849E-01;
  COFD[10255] = 1.09890709E-02;
  COFD[10256] = -2.16032548E+01;
  COFD[10257] = 4.53358858E+00;
  COFD[10258] = -3.02279996E-01;
  COFD[10259] = 1.03666174E-02;
  COFD[10260] = -2.16641291E+01;
  COFD[10261] = 4.38937431E+00;
  COFD[10262] = -2.77368709E-01;
  COFD[10263] = 9.05610965E-03;
  COFD[10264] = -2.15785372E+01;
  COFD[10265] = 4.38937431E+00;
  COFD[10266] = -2.77368709E-01;
  COFD[10267] = 9.05610965E-03;
  COFD[10268] = -2.27496988E+01;
  COFD[10269] = 5.23793490E+00;
  COFD[10270] = -4.10507434E-01;
  COFD[10271] = 1.56723961E-02;
  COFD[10272] = -2.26749880E+01;
  COFD[10273] = 5.19870800E+00;
  COFD[10274] = -4.04106072E-01;
  COFD[10275] = 1.53462074E-02;
  COFD[10276] = -2.16091286E+01;
  COFD[10277] = 4.35942660E+00;
  COFD[10278] = -2.74922937E-01;
  COFD[10279] = 9.00571669E-03;
  COFD[10280] = -2.13962086E+01;
  COFD[10281] = 4.37956561E+00;
  COFD[10282] = -2.78446593E-01;
  COFD[10283] = 9.19232124E-03;
  COFD[10284] = -2.14928909E+01;
  COFD[10285] = 4.39966493E+00;
  COFD[10286] = -2.81886204E-01;
  COFD[10287] = 9.37271179E-03;
  COFD[10288] = -2.16636265E+01;
  COFD[10289] = 4.42530942E+00;
  COFD[10290] = -2.82800211E-01;
  COFD[10291] = 9.31937239E-03;
  COFD[10292] = -2.15541051E+01;
  COFD[10293] = 4.35942660E+00;
  COFD[10294] = -2.74922937E-01;
  COFD[10295] = 9.00571669E-03;
  COFD[10296] = -2.15505437E+01;
  COFD[10297] = 4.35942660E+00;
  COFD[10298] = -2.74922937E-01;
  COFD[10299] = 9.00571669E-03;
  COFD[10300] = -2.21485577E+01;
  COFD[10301] = 4.56927551E+00;
  COFD[10302] = -3.04798371E-01;
  COFD[10303] = 1.03930919E-02;
  COFD[10304] = -2.10080914E+01;
  COFD[10305] = 3.98704554E+00;
  COFD[10306] = -2.18285971E-01;
  COFD[10307] = 6.25051659E-03;
  COFD[10308] = -2.10080914E+01;
  COFD[10309] = 3.98704554E+00;
  COFD[10310] = -2.18285971E-01;
  COFD[10311] = 6.25051659E-03;
  COFD[10312] = -2.10080914E+01;
  COFD[10313] = 3.98704554E+00;
  COFD[10314] = -2.18285971E-01;
  COFD[10315] = 6.25051659E-03;
  COFD[10316] = -2.10080914E+01;
  COFD[10317] = 3.98704554E+00;
  COFD[10318] = -2.18285971E-01;
  COFD[10319] = 6.25051659E-03;
  COFD[10320] = -2.10080914E+01;
  COFD[10321] = 3.98704554E+00;
  COFD[10322] = -2.18285971E-01;
  COFD[10323] = 6.25051659E-03;
  COFD[10324] = -2.07325212E+01;
  COFD[10325] = 3.76716501E+00;
  COFD[10326] = -1.85775461E-01;
  COFD[10327] = 4.69798106E-03;
  COFD[10328] = -2.16640027E+01;
  COFD[10329] = 4.30841644E+00;
  COFD[10330] = -2.65200479E-01;
  COFD[10331] = 8.46889236E-03;
  COFD[10332] = -2.16640027E+01;
  COFD[10333] = 4.30841644E+00;
  COFD[10334] = -2.65200479E-01;
  COFD[10335] = 8.46889236E-03;
  COFD[10336] = -2.12317349E+01;
  COFD[10337] = 5.12393234E+00;
  COFD[10338] = -4.34047488E-01;
  COFD[10339] = 1.81456922E-02;
  COFD[10340] = -2.03662946E+01;
  COFD[10341] = 5.43917732E+00;
  COFD[10342] = -4.65585169E-01;
  COFD[10343] = 1.91504194E-02;
  COFD[10344] = -1.65211695E+01;
  COFD[10345] = 3.96045058E+00;
  COFD[10346] = -2.95491086E-01;
  COFD[10347] = 1.26309913E-02;
  COFD[10348] = -2.01011556E+01;
  COFD[10349] = 4.89020393E+00;
  COFD[10350] = -4.07690029E-01;
  COFD[10351] = 1.71588628E-02;
  COFD[10352] = -2.15001525E+01;
  COFD[10353] = 5.19791529E+00;
  COFD[10354] = -4.41398853E-01;
  COFD[10355] = 1.83766038E-02;
  COFD[10356] = -2.01282926E+01;
  COFD[10357] = 4.89020393E+00;
  COFD[10358] = -4.07690029E-01;
  COFD[10359] = 1.71588628E-02;
  COFD[10360] = -1.90849617E+01;
  COFD[10361] = 3.76037053E+00;
  COFD[10362] = -1.86344449E-01;
  COFD[10363] = 4.78342296E-03;
  COFD[10364] = -2.12596156E+01;
  COFD[10365] = 5.13107284E+00;
  COFD[10366] = -4.34832560E-01;
  COFD[10367] = 1.81741959E-02;
  COFD[10368] = -2.29703135E+01;
  COFD[10369] = 5.45099312E+00;
  COFD[10370] = -4.48927721E-01;
  COFD[10371] = 1.77397381E-02;
  COFD[10372] = -2.20377105E+01;
  COFD[10373] = 5.43771555E+00;
  COFD[10374] = -4.65617512E-01;
  COFD[10375] = 1.91604198E-02;
  COFD[10376] = -2.20523530E+01;
  COFD[10377] = 5.43694234E+00;
  COFD[10378] = -4.65634839E-01;
  COFD[10379] = 1.91657286E-02;
  COFD[10380] = -2.14847708E+01;
  COFD[10381] = 5.19080403E+00;
  COFD[10382] = -4.40813300E-01;
  COFD[10383] = 1.83643944E-02;
  COFD[10384] = -2.14967522E+01;
  COFD[10385] = 5.19080403E+00;
  COFD[10386] = -4.40813300E-01;
  COFD[10387] = 1.83643944E-02;
  COFD[10388] = -2.08674068E+01;
  COFD[10389] = 4.37860613E+00;
  COFD[10390] = -2.75749639E-01;
  COFD[10391] = 8.97792922E-03;
  COFD[10392] = -2.29332768E+01;
  COFD[10393] = 5.44974657E+00;
  COFD[10394] = -4.48651670E-01;
  COFD[10395] = 1.77235430E-02;
  COFD[10396] = -2.27384984E+01;
  COFD[10397] = 5.46322829E+00;
  COFD[10398] = -4.51749940E-01;
  COFD[10399] = 1.79075310E-02;
  COFD[10400] = -2.29193637E+01;
  COFD[10401] = 5.44974657E+00;
  COFD[10402] = -4.48651670E-01;
  COFD[10403] = 1.77235430E-02;
  COFD[10404] = -2.27214134E+01;
  COFD[10405] = 5.40961679E+00;
  COFD[10406] = -4.40511249E-01;
  COFD[10407] = 1.72607396E-02;
  COFD[10408] = -2.27372093E+01;
  COFD[10409] = 5.40961679E+00;
  COFD[10410] = -4.40511249E-01;
  COFD[10411] = 1.72607396E-02;
  COFD[10412] = -2.16898552E+01;
  COFD[10413] = 4.68658569E+00;
  COFD[10414] = -3.22849054E-01;
  COFD[10415] = 1.12788192E-02;
  COFD[10416] = -2.22344628E+01;
  COFD[10417] = 5.44527718E+00;
  COFD[10418] = -4.65287801E-01;
  COFD[10419] = 1.90954247E-02;
  COFD[10420] = -2.17074916E+01;
  COFD[10421] = 4.68658569E+00;
  COFD[10422] = -3.22849054E-01;
  COFD[10423] = 1.12788192E-02;
  COFD[10424] = -2.26847769E+01;
  COFD[10425] = 5.19870800E+00;
  COFD[10426] = -4.04106072E-01;
  COFD[10427] = 1.53462074E-02;
  COFD[10428] = -2.27935640E+01;
  COFD[10429] = 5.26880815E+00;
  COFD[10430] = -4.15708807E-01;
  COFD[10431] = 1.59422297E-02;
  COFD[10432] = -2.26693987E+01;
  COFD[10433] = 5.07552523E+00;
  COFD[10434] = -3.83609779E-01;
  COFD[10435] = 1.42906252E-02;
  COFD[10436] = -2.29519810E+01;
  COFD[10437] = 5.28477709E+00;
  COFD[10438] = -4.18418879E-01;
  COFD[10439] = 1.60833475E-02;
  COFD[10440] = -2.26785557E+01;
  COFD[10441] = 5.08419101E+00;
  COFD[10442] = -3.85017801E-01;
  COFD[10443] = 1.43622302E-02;
  COFD[10444] = -2.26849220E+01;
  COFD[10445] = 5.08419101E+00;
  COFD[10446] = -3.85017801E-01;
  COFD[10447] = 1.43622302E-02;
  COFD[10448] = -2.19726255E+01;
  COFD[10449] = 4.68933904E+00;
  COFD[10450] = -3.23268395E-01;
  COFD[10451] = 1.12992644E-02;
  COFD[10452] = -2.14841915E+01;
  COFD[10453] = 4.49540243E+00;
  COFD[10454] = -2.96514022E-01;
  COFD[10455] = 1.00871141E-02;
  COFD[10456] = -2.25275224E+01;
  COFD[10457] = 4.88611782E+00;
  COFD[10458] = -3.53664413E-01;
  COFD[10459] = 1.27947308E-02;
  COFD[10460] = -2.25844302E+01;
  COFD[10461] = 4.91727636E+00;
  COFD[10462] = -3.59056495E-01;
  COFD[10463] = 1.30783725E-02;
  COFD[10464] = -2.12201150E+01;
  COFD[10465] = 4.46261834E+00;
  COFD[10466] = -2.88453410E-01;
  COFD[10467] = 9.59378935E-03;
  COFD[10468] = -2.12278978E+01;
  COFD[10469] = 4.46261834E+00;
  COFD[10470] = -2.88453410E-01;
  COFD[10471] = 9.59378935E-03;
  COFD[10472] = -2.17388948E+01;
  COFD[10473] = 4.64756828E+00;
  COFD[10474] = -3.16905849E-01;
  COFD[10475] = 1.09890709E-02;
  COFD[10476] = -2.16032548E+01;
  COFD[10477] = 4.53358858E+00;
  COFD[10478] = -3.02279996E-01;
  COFD[10479] = 1.03666174E-02;
  COFD[10480] = -2.16641291E+01;
  COFD[10481] = 4.38937431E+00;
  COFD[10482] = -2.77368709E-01;
  COFD[10483] = 9.05610965E-03;
  COFD[10484] = -2.15785372E+01;
  COFD[10485] = 4.38937431E+00;
  COFD[10486] = -2.77368709E-01;
  COFD[10487] = 9.05610965E-03;
  COFD[10488] = -2.27496988E+01;
  COFD[10489] = 5.23793490E+00;
  COFD[10490] = -4.10507434E-01;
  COFD[10491] = 1.56723961E-02;
  COFD[10492] = -2.26749880E+01;
  COFD[10493] = 5.19870800E+00;
  COFD[10494] = -4.04106072E-01;
  COFD[10495] = 1.53462074E-02;
  COFD[10496] = -2.16091286E+01;
  COFD[10497] = 4.35942660E+00;
  COFD[10498] = -2.74922937E-01;
  COFD[10499] = 9.00571669E-03;
  COFD[10500] = -2.13962086E+01;
  COFD[10501] = 4.37956561E+00;
  COFD[10502] = -2.78446593E-01;
  COFD[10503] = 9.19232124E-03;
  COFD[10504] = -2.14928909E+01;
  COFD[10505] = 4.39966493E+00;
  COFD[10506] = -2.81886204E-01;
  COFD[10507] = 9.37271179E-03;
  COFD[10508] = -2.16636265E+01;
  COFD[10509] = 4.42530942E+00;
  COFD[10510] = -2.82800211E-01;
  COFD[10511] = 9.31937239E-03;
  COFD[10512] = -2.15541051E+01;
  COFD[10513] = 4.35942660E+00;
  COFD[10514] = -2.74922937E-01;
  COFD[10515] = 9.00571669E-03;
  COFD[10516] = -2.15505437E+01;
  COFD[10517] = 4.35942660E+00;
  COFD[10518] = -2.74922937E-01;
  COFD[10519] = 9.00571669E-03;
  COFD[10520] = -2.21485577E+01;
  COFD[10521] = 4.56927551E+00;
  COFD[10522] = -3.04798371E-01;
  COFD[10523] = 1.03930919E-02;
  COFD[10524] = -2.10080914E+01;
  COFD[10525] = 3.98704554E+00;
  COFD[10526] = -2.18285971E-01;
  COFD[10527] = 6.25051659E-03;
  COFD[10528] = -2.10080914E+01;
  COFD[10529] = 3.98704554E+00;
  COFD[10530] = -2.18285971E-01;
  COFD[10531] = 6.25051659E-03;
  COFD[10532] = -2.10080914E+01;
  COFD[10533] = 3.98704554E+00;
  COFD[10534] = -2.18285971E-01;
  COFD[10535] = 6.25051659E-03;
  COFD[10536] = -2.10080914E+01;
  COFD[10537] = 3.98704554E+00;
  COFD[10538] = -2.18285971E-01;
  COFD[10539] = 6.25051659E-03;
  COFD[10540] = -2.10080914E+01;
  COFD[10541] = 3.98704554E+00;
  COFD[10542] = -2.18285971E-01;
  COFD[10543] = 6.25051659E-03;
  COFD[10544] = -2.07325212E+01;
  COFD[10545] = 3.76716501E+00;
  COFD[10546] = -1.85775461E-01;
  COFD[10547] = 4.69798106E-03;
  COFD[10548] = -2.16640027E+01;
  COFD[10549] = 4.30841644E+00;
  COFD[10550] = -2.65200479E-01;
  COFD[10551] = 8.46889236E-03;
  COFD[10552] = -2.16640027E+01;
  COFD[10553] = 4.30841644E+00;
  COFD[10554] = -2.65200479E-01;
  COFD[10555] = 8.46889236E-03;
  COFD[10556] = -2.12317349E+01;
  COFD[10557] = 5.12393234E+00;
  COFD[10558] = -4.34047488E-01;
  COFD[10559] = 1.81456922E-02;
  COFD[10560] = -2.03662946E+01;
  COFD[10561] = 5.43917732E+00;
  COFD[10562] = -4.65585169E-01;
  COFD[10563] = 1.91504194E-02;
  COFD[10564] = -1.65211695E+01;
  COFD[10565] = 3.96045058E+00;
  COFD[10566] = -2.95491086E-01;
  COFD[10567] = 1.26309913E-02;
  COFD[10568] = -2.01011556E+01;
  COFD[10569] = 4.89020393E+00;
  COFD[10570] = -4.07690029E-01;
  COFD[10571] = 1.71588628E-02;
  COFD[10572] = -2.15001525E+01;
  COFD[10573] = 5.19791529E+00;
  COFD[10574] = -4.41398853E-01;
  COFD[10575] = 1.83766038E-02;
  COFD[10576] = -2.01282926E+01;
  COFD[10577] = 4.89020393E+00;
  COFD[10578] = -4.07690029E-01;
  COFD[10579] = 1.71588628E-02;
  COFD[10580] = -1.90849617E+01;
  COFD[10581] = 3.76037053E+00;
  COFD[10582] = -1.86344449E-01;
  COFD[10583] = 4.78342296E-03;
  COFD[10584] = -2.12596156E+01;
  COFD[10585] = 5.13107284E+00;
  COFD[10586] = -4.34832560E-01;
  COFD[10587] = 1.81741959E-02;
  COFD[10588] = -2.29703135E+01;
  COFD[10589] = 5.45099312E+00;
  COFD[10590] = -4.48927721E-01;
  COFD[10591] = 1.77397381E-02;
  COFD[10592] = -2.20377105E+01;
  COFD[10593] = 5.43771555E+00;
  COFD[10594] = -4.65617512E-01;
  COFD[10595] = 1.91604198E-02;
  COFD[10596] = -2.20523530E+01;
  COFD[10597] = 5.43694234E+00;
  COFD[10598] = -4.65634839E-01;
  COFD[10599] = 1.91657286E-02;
  COFD[10600] = -2.14847708E+01;
  COFD[10601] = 5.19080403E+00;
  COFD[10602] = -4.40813300E-01;
  COFD[10603] = 1.83643944E-02;
  COFD[10604] = -2.14967522E+01;
  COFD[10605] = 5.19080403E+00;
  COFD[10606] = -4.40813300E-01;
  COFD[10607] = 1.83643944E-02;
  COFD[10608] = -2.08674068E+01;
  COFD[10609] = 4.37860613E+00;
  COFD[10610] = -2.75749639E-01;
  COFD[10611] = 8.97792922E-03;
  COFD[10612] = -2.29332768E+01;
  COFD[10613] = 5.44974657E+00;
  COFD[10614] = -4.48651670E-01;
  COFD[10615] = 1.77235430E-02;
  COFD[10616] = -2.27384984E+01;
  COFD[10617] = 5.46322829E+00;
  COFD[10618] = -4.51749940E-01;
  COFD[10619] = 1.79075310E-02;
  COFD[10620] = -2.29193637E+01;
  COFD[10621] = 5.44974657E+00;
  COFD[10622] = -4.48651670E-01;
  COFD[10623] = 1.77235430E-02;
  COFD[10624] = -2.27214134E+01;
  COFD[10625] = 5.40961679E+00;
  COFD[10626] = -4.40511249E-01;
  COFD[10627] = 1.72607396E-02;
  COFD[10628] = -2.27372093E+01;
  COFD[10629] = 5.40961679E+00;
  COFD[10630] = -4.40511249E-01;
  COFD[10631] = 1.72607396E-02;
  COFD[10632] = -2.16898552E+01;
  COFD[10633] = 4.68658569E+00;
  COFD[10634] = -3.22849054E-01;
  COFD[10635] = 1.12788192E-02;
  COFD[10636] = -2.22344628E+01;
  COFD[10637] = 5.44527718E+00;
  COFD[10638] = -4.65287801E-01;
  COFD[10639] = 1.90954247E-02;
  COFD[10640] = -2.17074916E+01;
  COFD[10641] = 4.68658569E+00;
  COFD[10642] = -3.22849054E-01;
  COFD[10643] = 1.12788192E-02;
  COFD[10644] = -2.26847769E+01;
  COFD[10645] = 5.19870800E+00;
  COFD[10646] = -4.04106072E-01;
  COFD[10647] = 1.53462074E-02;
  COFD[10648] = -2.27935640E+01;
  COFD[10649] = 5.26880815E+00;
  COFD[10650] = -4.15708807E-01;
  COFD[10651] = 1.59422297E-02;
  COFD[10652] = -2.26693987E+01;
  COFD[10653] = 5.07552523E+00;
  COFD[10654] = -3.83609779E-01;
  COFD[10655] = 1.42906252E-02;
  COFD[10656] = -2.29519810E+01;
  COFD[10657] = 5.28477709E+00;
  COFD[10658] = -4.18418879E-01;
  COFD[10659] = 1.60833475E-02;
  COFD[10660] = -2.26785557E+01;
  COFD[10661] = 5.08419101E+00;
  COFD[10662] = -3.85017801E-01;
  COFD[10663] = 1.43622302E-02;
  COFD[10664] = -2.26849220E+01;
  COFD[10665] = 5.08419101E+00;
  COFD[10666] = -3.85017801E-01;
  COFD[10667] = 1.43622302E-02;
  COFD[10668] = -2.19726255E+01;
  COFD[10669] = 4.68933904E+00;
  COFD[10670] = -3.23268395E-01;
  COFD[10671] = 1.12992644E-02;
  COFD[10672] = -2.14841915E+01;
  COFD[10673] = 4.49540243E+00;
  COFD[10674] = -2.96514022E-01;
  COFD[10675] = 1.00871141E-02;
  COFD[10676] = -2.25275224E+01;
  COFD[10677] = 4.88611782E+00;
  COFD[10678] = -3.53664413E-01;
  COFD[10679] = 1.27947308E-02;
  COFD[10680] = -2.25844302E+01;
  COFD[10681] = 4.91727636E+00;
  COFD[10682] = -3.59056495E-01;
  COFD[10683] = 1.30783725E-02;
  COFD[10684] = -2.12201150E+01;
  COFD[10685] = 4.46261834E+00;
  COFD[10686] = -2.88453410E-01;
  COFD[10687] = 9.59378935E-03;
  COFD[10688] = -2.12278978E+01;
  COFD[10689] = 4.46261834E+00;
  COFD[10690] = -2.88453410E-01;
  COFD[10691] = 9.59378935E-03;
  COFD[10692] = -2.17388948E+01;
  COFD[10693] = 4.64756828E+00;
  COFD[10694] = -3.16905849E-01;
  COFD[10695] = 1.09890709E-02;
  COFD[10696] = -2.16032548E+01;
  COFD[10697] = 4.53358858E+00;
  COFD[10698] = -3.02279996E-01;
  COFD[10699] = 1.03666174E-02;
  COFD[10700] = -2.16641291E+01;
  COFD[10701] = 4.38937431E+00;
  COFD[10702] = -2.77368709E-01;
  COFD[10703] = 9.05610965E-03;
  COFD[10704] = -2.15785372E+01;
  COFD[10705] = 4.38937431E+00;
  COFD[10706] = -2.77368709E-01;
  COFD[10707] = 9.05610965E-03;
  COFD[10708] = -2.27496988E+01;
  COFD[10709] = 5.23793490E+00;
  COFD[10710] = -4.10507434E-01;
  COFD[10711] = 1.56723961E-02;
  COFD[10712] = -2.26749880E+01;
  COFD[10713] = 5.19870800E+00;
  COFD[10714] = -4.04106072E-01;
  COFD[10715] = 1.53462074E-02;
  COFD[10716] = -2.16091286E+01;
  COFD[10717] = 4.35942660E+00;
  COFD[10718] = -2.74922937E-01;
  COFD[10719] = 9.00571669E-03;
  COFD[10720] = -2.13962086E+01;
  COFD[10721] = 4.37956561E+00;
  COFD[10722] = -2.78446593E-01;
  COFD[10723] = 9.19232124E-03;
  COFD[10724] = -2.14928909E+01;
  COFD[10725] = 4.39966493E+00;
  COFD[10726] = -2.81886204E-01;
  COFD[10727] = 9.37271179E-03;
  COFD[10728] = -2.16636265E+01;
  COFD[10729] = 4.42530942E+00;
  COFD[10730] = -2.82800211E-01;
  COFD[10731] = 9.31937239E-03;
  COFD[10732] = -2.15541051E+01;
  COFD[10733] = 4.35942660E+00;
  COFD[10734] = -2.74922937E-01;
  COFD[10735] = 9.00571669E-03;
  COFD[10736] = -2.15505437E+01;
  COFD[10737] = 4.35942660E+00;
  COFD[10738] = -2.74922937E-01;
  COFD[10739] = 9.00571669E-03;
  COFD[10740] = -2.21485577E+01;
  COFD[10741] = 4.56927551E+00;
  COFD[10742] = -3.04798371E-01;
  COFD[10743] = 1.03930919E-02;
  COFD[10744] = -2.10080914E+01;
  COFD[10745] = 3.98704554E+00;
  COFD[10746] = -2.18285971E-01;
  COFD[10747] = 6.25051659E-03;
  COFD[10748] = -2.10080914E+01;
  COFD[10749] = 3.98704554E+00;
  COFD[10750] = -2.18285971E-01;
  COFD[10751] = 6.25051659E-03;
  COFD[10752] = -2.10080914E+01;
  COFD[10753] = 3.98704554E+00;
  COFD[10754] = -2.18285971E-01;
  COFD[10755] = 6.25051659E-03;
  COFD[10756] = -2.10080914E+01;
  COFD[10757] = 3.98704554E+00;
  COFD[10758] = -2.18285971E-01;
  COFD[10759] = 6.25051659E-03;
  COFD[10760] = -2.10080914E+01;
  COFD[10761] = 3.98704554E+00;
  COFD[10762] = -2.18285971E-01;
  COFD[10763] = 6.25051659E-03;
  COFD[10764] = -2.07325212E+01;
  COFD[10765] = 3.76716501E+00;
  COFD[10766] = -1.85775461E-01;
  COFD[10767] = 4.69798106E-03;
  COFD[10768] = -2.16640027E+01;
  COFD[10769] = 4.30841644E+00;
  COFD[10770] = -2.65200479E-01;
  COFD[10771] = 8.46889236E-03;
  COFD[10772] = -2.16640027E+01;
  COFD[10773] = 4.30841644E+00;
  COFD[10774] = -2.65200479E-01;
  COFD[10775] = 8.46889236E-03;
  COFD[10776] = -2.12317349E+01;
  COFD[10777] = 5.12393234E+00;
  COFD[10778] = -4.34047488E-01;
  COFD[10779] = 1.81456922E-02;
  COFD[10780] = -2.03662946E+01;
  COFD[10781] = 5.43917732E+00;
  COFD[10782] = -4.65585169E-01;
  COFD[10783] = 1.91504194E-02;
  COFD[10784] = -1.65211695E+01;
  COFD[10785] = 3.96045058E+00;
  COFD[10786] = -2.95491086E-01;
  COFD[10787] = 1.26309913E-02;
  COFD[10788] = -2.01011556E+01;
  COFD[10789] = 4.89020393E+00;
  COFD[10790] = -4.07690029E-01;
  COFD[10791] = 1.71588628E-02;
  COFD[10792] = -2.15001525E+01;
  COFD[10793] = 5.19791529E+00;
  COFD[10794] = -4.41398853E-01;
  COFD[10795] = 1.83766038E-02;
  COFD[10796] = -2.01282926E+01;
  COFD[10797] = 4.89020393E+00;
  COFD[10798] = -4.07690029E-01;
  COFD[10799] = 1.71588628E-02;
  COFD[10800] = -1.90849617E+01;
  COFD[10801] = 3.76037053E+00;
  COFD[10802] = -1.86344449E-01;
  COFD[10803] = 4.78342296E-03;
  COFD[10804] = -2.12596156E+01;
  COFD[10805] = 5.13107284E+00;
  COFD[10806] = -4.34832560E-01;
  COFD[10807] = 1.81741959E-02;
  COFD[10808] = -2.29703135E+01;
  COFD[10809] = 5.45099312E+00;
  COFD[10810] = -4.48927721E-01;
  COFD[10811] = 1.77397381E-02;
  COFD[10812] = -2.20377105E+01;
  COFD[10813] = 5.43771555E+00;
  COFD[10814] = -4.65617512E-01;
  COFD[10815] = 1.91604198E-02;
  COFD[10816] = -2.20523530E+01;
  COFD[10817] = 5.43694234E+00;
  COFD[10818] = -4.65634839E-01;
  COFD[10819] = 1.91657286E-02;
  COFD[10820] = -2.14847708E+01;
  COFD[10821] = 5.19080403E+00;
  COFD[10822] = -4.40813300E-01;
  COFD[10823] = 1.83643944E-02;
  COFD[10824] = -2.14967522E+01;
  COFD[10825] = 5.19080403E+00;
  COFD[10826] = -4.40813300E-01;
  COFD[10827] = 1.83643944E-02;
  COFD[10828] = -2.08674068E+01;
  COFD[10829] = 4.37860613E+00;
  COFD[10830] = -2.75749639E-01;
  COFD[10831] = 8.97792922E-03;
  COFD[10832] = -2.29332768E+01;
  COFD[10833] = 5.44974657E+00;
  COFD[10834] = -4.48651670E-01;
  COFD[10835] = 1.77235430E-02;
  COFD[10836] = -2.27384984E+01;
  COFD[10837] = 5.46322829E+00;
  COFD[10838] = -4.51749940E-01;
  COFD[10839] = 1.79075310E-02;
  COFD[10840] = -2.29193637E+01;
  COFD[10841] = 5.44974657E+00;
  COFD[10842] = -4.48651670E-01;
  COFD[10843] = 1.77235430E-02;
  COFD[10844] = -2.27214134E+01;
  COFD[10845] = 5.40961679E+00;
  COFD[10846] = -4.40511249E-01;
  COFD[10847] = 1.72607396E-02;
  COFD[10848] = -2.27372093E+01;
  COFD[10849] = 5.40961679E+00;
  COFD[10850] = -4.40511249E-01;
  COFD[10851] = 1.72607396E-02;
  COFD[10852] = -2.16898552E+01;
  COFD[10853] = 4.68658569E+00;
  COFD[10854] = -3.22849054E-01;
  COFD[10855] = 1.12788192E-02;
  COFD[10856] = -2.22344628E+01;
  COFD[10857] = 5.44527718E+00;
  COFD[10858] = -4.65287801E-01;
  COFD[10859] = 1.90954247E-02;
  COFD[10860] = -2.17074916E+01;
  COFD[10861] = 4.68658569E+00;
  COFD[10862] = -3.22849054E-01;
  COFD[10863] = 1.12788192E-02;
  COFD[10864] = -2.26847769E+01;
  COFD[10865] = 5.19870800E+00;
  COFD[10866] = -4.04106072E-01;
  COFD[10867] = 1.53462074E-02;
  COFD[10868] = -2.27935640E+01;
  COFD[10869] = 5.26880815E+00;
  COFD[10870] = -4.15708807E-01;
  COFD[10871] = 1.59422297E-02;
  COFD[10872] = -2.26693987E+01;
  COFD[10873] = 5.07552523E+00;
  COFD[10874] = -3.83609779E-01;
  COFD[10875] = 1.42906252E-02;
  COFD[10876] = -2.29519810E+01;
  COFD[10877] = 5.28477709E+00;
  COFD[10878] = -4.18418879E-01;
  COFD[10879] = 1.60833475E-02;
  COFD[10880] = -2.26785557E+01;
  COFD[10881] = 5.08419101E+00;
  COFD[10882] = -3.85017801E-01;
  COFD[10883] = 1.43622302E-02;
  COFD[10884] = -2.26849220E+01;
  COFD[10885] = 5.08419101E+00;
  COFD[10886] = -3.85017801E-01;
  COFD[10887] = 1.43622302E-02;
  COFD[10888] = -2.19726255E+01;
  COFD[10889] = 4.68933904E+00;
  COFD[10890] = -3.23268395E-01;
  COFD[10891] = 1.12992644E-02;
  COFD[10892] = -2.14841915E+01;
  COFD[10893] = 4.49540243E+00;
  COFD[10894] = -2.96514022E-01;
  COFD[10895] = 1.00871141E-02;
  COFD[10896] = -2.25275224E+01;
  COFD[10897] = 4.88611782E+00;
  COFD[10898] = -3.53664413E-01;
  COFD[10899] = 1.27947308E-02;
  COFD[10900] = -2.25844302E+01;
  COFD[10901] = 4.91727636E+00;
  COFD[10902] = -3.59056495E-01;
  COFD[10903] = 1.30783725E-02;
  COFD[10904] = -2.12201150E+01;
  COFD[10905] = 4.46261834E+00;
  COFD[10906] = -2.88453410E-01;
  COFD[10907] = 9.59378935E-03;
  COFD[10908] = -2.12278978E+01;
  COFD[10909] = 4.46261834E+00;
  COFD[10910] = -2.88453410E-01;
  COFD[10911] = 9.59378935E-03;
  COFD[10912] = -2.17388948E+01;
  COFD[10913] = 4.64756828E+00;
  COFD[10914] = -3.16905849E-01;
  COFD[10915] = 1.09890709E-02;
  COFD[10916] = -2.16032548E+01;
  COFD[10917] = 4.53358858E+00;
  COFD[10918] = -3.02279996E-01;
  COFD[10919] = 1.03666174E-02;
  COFD[10920] = -2.16641291E+01;
  COFD[10921] = 4.38937431E+00;
  COFD[10922] = -2.77368709E-01;
  COFD[10923] = 9.05610965E-03;
  COFD[10924] = -2.15785372E+01;
  COFD[10925] = 4.38937431E+00;
  COFD[10926] = -2.77368709E-01;
  COFD[10927] = 9.05610965E-03;
  COFD[10928] = -2.27496988E+01;
  COFD[10929] = 5.23793490E+00;
  COFD[10930] = -4.10507434E-01;
  COFD[10931] = 1.56723961E-02;
  COFD[10932] = -2.26749880E+01;
  COFD[10933] = 5.19870800E+00;
  COFD[10934] = -4.04106072E-01;
  COFD[10935] = 1.53462074E-02;
  COFD[10936] = -2.16091286E+01;
  COFD[10937] = 4.35942660E+00;
  COFD[10938] = -2.74922937E-01;
  COFD[10939] = 9.00571669E-03;
  COFD[10940] = -2.13962086E+01;
  COFD[10941] = 4.37956561E+00;
  COFD[10942] = -2.78446593E-01;
  COFD[10943] = 9.19232124E-03;
  COFD[10944] = -2.14928909E+01;
  COFD[10945] = 4.39966493E+00;
  COFD[10946] = -2.81886204E-01;
  COFD[10947] = 9.37271179E-03;
  COFD[10948] = -2.16636265E+01;
  COFD[10949] = 4.42530942E+00;
  COFD[10950] = -2.82800211E-01;
  COFD[10951] = 9.31937239E-03;
  COFD[10952] = -2.15541051E+01;
  COFD[10953] = 4.35942660E+00;
  COFD[10954] = -2.74922937E-01;
  COFD[10955] = 9.00571669E-03;
  COFD[10956] = -2.15505437E+01;
  COFD[10957] = 4.35942660E+00;
  COFD[10958] = -2.74922937E-01;
  COFD[10959] = 9.00571669E-03;
  COFD[10960] = -2.21485577E+01;
  COFD[10961] = 4.56927551E+00;
  COFD[10962] = -3.04798371E-01;
  COFD[10963] = 1.03930919E-02;
  COFD[10964] = -2.10080914E+01;
  COFD[10965] = 3.98704554E+00;
  COFD[10966] = -2.18285971E-01;
  COFD[10967] = 6.25051659E-03;
  COFD[10968] = -2.10080914E+01;
  COFD[10969] = 3.98704554E+00;
  COFD[10970] = -2.18285971E-01;
  COFD[10971] = 6.25051659E-03;
  COFD[10972] = -2.10080914E+01;
  COFD[10973] = 3.98704554E+00;
  COFD[10974] = -2.18285971E-01;
  COFD[10975] = 6.25051659E-03;
  COFD[10976] = -2.10080914E+01;
  COFD[10977] = 3.98704554E+00;
  COFD[10978] = -2.18285971E-01;
  COFD[10979] = 6.25051659E-03;
  COFD[10980] = -2.10080914E+01;
  COFD[10981] = 3.98704554E+00;
  COFD[10982] = -2.18285971E-01;
  COFD[10983] = 6.25051659E-03;
  COFD[10984] = -2.07325212E+01;
  COFD[10985] = 3.76716501E+00;
  COFD[10986] = -1.85775461E-01;
  COFD[10987] = 4.69798106E-03;
  COFD[10988] = -2.16640027E+01;
  COFD[10989] = 4.30841644E+00;
  COFD[10990] = -2.65200479E-01;
  COFD[10991] = 8.46889236E-03;
  COFD[10992] = -2.16640027E+01;
  COFD[10993] = 4.30841644E+00;
  COFD[10994] = -2.65200479E-01;
  COFD[10995] = 8.46889236E-03;
  COFD[10996] = -2.12317349E+01;
  COFD[10997] = 5.12393234E+00;
  COFD[10998] = -4.34047488E-01;
  COFD[10999] = 1.81456922E-02;
  COFD[11000] = -2.03662946E+01;
  COFD[11001] = 5.43917732E+00;
  COFD[11002] = -4.65585169E-01;
  COFD[11003] = 1.91504194E-02;
  COFD[11004] = -1.65211695E+01;
  COFD[11005] = 3.96045058E+00;
  COFD[11006] = -2.95491086E-01;
  COFD[11007] = 1.26309913E-02;
  COFD[11008] = -2.01011556E+01;
  COFD[11009] = 4.89020393E+00;
  COFD[11010] = -4.07690029E-01;
  COFD[11011] = 1.71588628E-02;
  COFD[11012] = -2.15001525E+01;
  COFD[11013] = 5.19791529E+00;
  COFD[11014] = -4.41398853E-01;
  COFD[11015] = 1.83766038E-02;
  COFD[11016] = -2.01282926E+01;
  COFD[11017] = 4.89020393E+00;
  COFD[11018] = -4.07690029E-01;
  COFD[11019] = 1.71588628E-02;
  COFD[11020] = -1.90849617E+01;
  COFD[11021] = 3.76037053E+00;
  COFD[11022] = -1.86344449E-01;
  COFD[11023] = 4.78342296E-03;
  COFD[11024] = -2.12596156E+01;
  COFD[11025] = 5.13107284E+00;
  COFD[11026] = -4.34832560E-01;
  COFD[11027] = 1.81741959E-02;
  COFD[11028] = -2.29703135E+01;
  COFD[11029] = 5.45099312E+00;
  COFD[11030] = -4.48927721E-01;
  COFD[11031] = 1.77397381E-02;
  COFD[11032] = -2.20377105E+01;
  COFD[11033] = 5.43771555E+00;
  COFD[11034] = -4.65617512E-01;
  COFD[11035] = 1.91604198E-02;
  COFD[11036] = -2.20523530E+01;
  COFD[11037] = 5.43694234E+00;
  COFD[11038] = -4.65634839E-01;
  COFD[11039] = 1.91657286E-02;
  COFD[11040] = -2.14847708E+01;
  COFD[11041] = 5.19080403E+00;
  COFD[11042] = -4.40813300E-01;
  COFD[11043] = 1.83643944E-02;
  COFD[11044] = -2.14967522E+01;
  COFD[11045] = 5.19080403E+00;
  COFD[11046] = -4.40813300E-01;
  COFD[11047] = 1.83643944E-02;
  COFD[11048] = -2.08674068E+01;
  COFD[11049] = 4.37860613E+00;
  COFD[11050] = -2.75749639E-01;
  COFD[11051] = 8.97792922E-03;
  COFD[11052] = -2.29332768E+01;
  COFD[11053] = 5.44974657E+00;
  COFD[11054] = -4.48651670E-01;
  COFD[11055] = 1.77235430E-02;
  COFD[11056] = -2.27384984E+01;
  COFD[11057] = 5.46322829E+00;
  COFD[11058] = -4.51749940E-01;
  COFD[11059] = 1.79075310E-02;
  COFD[11060] = -2.29193637E+01;
  COFD[11061] = 5.44974657E+00;
  COFD[11062] = -4.48651670E-01;
  COFD[11063] = 1.77235430E-02;
  COFD[11064] = -2.27214134E+01;
  COFD[11065] = 5.40961679E+00;
  COFD[11066] = -4.40511249E-01;
  COFD[11067] = 1.72607396E-02;
  COFD[11068] = -2.27372093E+01;
  COFD[11069] = 5.40961679E+00;
  COFD[11070] = -4.40511249E-01;
  COFD[11071] = 1.72607396E-02;
  COFD[11072] = -2.16898552E+01;
  COFD[11073] = 4.68658569E+00;
  COFD[11074] = -3.22849054E-01;
  COFD[11075] = 1.12788192E-02;
  COFD[11076] = -2.22344628E+01;
  COFD[11077] = 5.44527718E+00;
  COFD[11078] = -4.65287801E-01;
  COFD[11079] = 1.90954247E-02;
  COFD[11080] = -2.17074916E+01;
  COFD[11081] = 4.68658569E+00;
  COFD[11082] = -3.22849054E-01;
  COFD[11083] = 1.12788192E-02;
  COFD[11084] = -2.26847769E+01;
  COFD[11085] = 5.19870800E+00;
  COFD[11086] = -4.04106072E-01;
  COFD[11087] = 1.53462074E-02;
  COFD[11088] = -2.27935640E+01;
  COFD[11089] = 5.26880815E+00;
  COFD[11090] = -4.15708807E-01;
  COFD[11091] = 1.59422297E-02;
  COFD[11092] = -2.26693987E+01;
  COFD[11093] = 5.07552523E+00;
  COFD[11094] = -3.83609779E-01;
  COFD[11095] = 1.42906252E-02;
  COFD[11096] = -2.29519810E+01;
  COFD[11097] = 5.28477709E+00;
  COFD[11098] = -4.18418879E-01;
  COFD[11099] = 1.60833475E-02;
  COFD[11100] = -2.26785557E+01;
  COFD[11101] = 5.08419101E+00;
  COFD[11102] = -3.85017801E-01;
  COFD[11103] = 1.43622302E-02;
  COFD[11104] = -2.26849220E+01;
  COFD[11105] = 5.08419101E+00;
  COFD[11106] = -3.85017801E-01;
  COFD[11107] = 1.43622302E-02;
  COFD[11108] = -2.19726255E+01;
  COFD[11109] = 4.68933904E+00;
  COFD[11110] = -3.23268395E-01;
  COFD[11111] = 1.12992644E-02;
  COFD[11112] = -2.14841915E+01;
  COFD[11113] = 4.49540243E+00;
  COFD[11114] = -2.96514022E-01;
  COFD[11115] = 1.00871141E-02;
  COFD[11116] = -2.25275224E+01;
  COFD[11117] = 4.88611782E+00;
  COFD[11118] = -3.53664413E-01;
  COFD[11119] = 1.27947308E-02;
  COFD[11120] = -2.25844302E+01;
  COFD[11121] = 4.91727636E+00;
  COFD[11122] = -3.59056495E-01;
  COFD[11123] = 1.30783725E-02;
  COFD[11124] = -2.12201150E+01;
  COFD[11125] = 4.46261834E+00;
  COFD[11126] = -2.88453410E-01;
  COFD[11127] = 9.59378935E-03;
  COFD[11128] = -2.12278978E+01;
  COFD[11129] = 4.46261834E+00;
  COFD[11130] = -2.88453410E-01;
  COFD[11131] = 9.59378935E-03;
  COFD[11132] = -2.17388948E+01;
  COFD[11133] = 4.64756828E+00;
  COFD[11134] = -3.16905849E-01;
  COFD[11135] = 1.09890709E-02;
  COFD[11136] = -2.16032548E+01;
  COFD[11137] = 4.53358858E+00;
  COFD[11138] = -3.02279996E-01;
  COFD[11139] = 1.03666174E-02;
  COFD[11140] = -2.16641291E+01;
  COFD[11141] = 4.38937431E+00;
  COFD[11142] = -2.77368709E-01;
  COFD[11143] = 9.05610965E-03;
  COFD[11144] = -2.15785372E+01;
  COFD[11145] = 4.38937431E+00;
  COFD[11146] = -2.77368709E-01;
  COFD[11147] = 9.05610965E-03;
  COFD[11148] = -2.27496988E+01;
  COFD[11149] = 5.23793490E+00;
  COFD[11150] = -4.10507434E-01;
  COFD[11151] = 1.56723961E-02;
  COFD[11152] = -2.26749880E+01;
  COFD[11153] = 5.19870800E+00;
  COFD[11154] = -4.04106072E-01;
  COFD[11155] = 1.53462074E-02;
  COFD[11156] = -2.16091286E+01;
  COFD[11157] = 4.35942660E+00;
  COFD[11158] = -2.74922937E-01;
  COFD[11159] = 9.00571669E-03;
  COFD[11160] = -2.13962086E+01;
  COFD[11161] = 4.37956561E+00;
  COFD[11162] = -2.78446593E-01;
  COFD[11163] = 9.19232124E-03;
  COFD[11164] = -2.14928909E+01;
  COFD[11165] = 4.39966493E+00;
  COFD[11166] = -2.81886204E-01;
  COFD[11167] = 9.37271179E-03;
  COFD[11168] = -2.16636265E+01;
  COFD[11169] = 4.42530942E+00;
  COFD[11170] = -2.82800211E-01;
  COFD[11171] = 9.31937239E-03;
  COFD[11172] = -2.15541051E+01;
  COFD[11173] = 4.35942660E+00;
  COFD[11174] = -2.74922937E-01;
  COFD[11175] = 9.00571669E-03;
  COFD[11176] = -2.15505437E+01;
  COFD[11177] = 4.35942660E+00;
  COFD[11178] = -2.74922937E-01;
  COFD[11179] = 9.00571669E-03;
  COFD[11180] = -2.21485577E+01;
  COFD[11181] = 4.56927551E+00;
  COFD[11182] = -3.04798371E-01;
  COFD[11183] = 1.03930919E-02;
  COFD[11184] = -2.10080914E+01;
  COFD[11185] = 3.98704554E+00;
  COFD[11186] = -2.18285971E-01;
  COFD[11187] = 6.25051659E-03;
  COFD[11188] = -2.10080914E+01;
  COFD[11189] = 3.98704554E+00;
  COFD[11190] = -2.18285971E-01;
  COFD[11191] = 6.25051659E-03;
  COFD[11192] = -2.10080914E+01;
  COFD[11193] = 3.98704554E+00;
  COFD[11194] = -2.18285971E-01;
  COFD[11195] = 6.25051659E-03;
  COFD[11196] = -2.10080914E+01;
  COFD[11197] = 3.98704554E+00;
  COFD[11198] = -2.18285971E-01;
  COFD[11199] = 6.25051659E-03;
  COFD[11200] = -2.10080914E+01;
  COFD[11201] = 3.98704554E+00;
  COFD[11202] = -2.18285971E-01;
  COFD[11203] = 6.25051659E-03;
  COFD[11204] = -2.07325212E+01;
  COFD[11205] = 3.76716501E+00;
  COFD[11206] = -1.85775461E-01;
  COFD[11207] = 4.69798106E-03;
  COFD[11208] = -2.16640027E+01;
  COFD[11209] = 4.30841644E+00;
  COFD[11210] = -2.65200479E-01;
  COFD[11211] = 8.46889236E-03;
  COFD[11212] = -2.16640027E+01;
  COFD[11213] = 4.30841644E+00;
  COFD[11214] = -2.65200479E-01;
  COFD[11215] = 8.46889236E-03;
  COFD[11216] = -2.12317349E+01;
  COFD[11217] = 5.12393234E+00;
  COFD[11218] = -4.34047488E-01;
  COFD[11219] = 1.81456922E-02;
  COFD[11220] = -2.06638982E+01;
  COFD[11221] = 5.45347668E+00;
  COFD[11222] = -4.65289819E-01;
  COFD[11223] = 1.90547288E-02;
  COFD[11224] = -1.69048258E+01;
  COFD[11225] = 4.02910048E+00;
  COFD[11226] = -3.03801060E-01;
  COFD[11227] = 1.29668775E-02;
  COFD[11228] = -2.05451536E+01;
  COFD[11229] = 4.97155662E+00;
  COFD[11230] = -4.17014903E-01;
  COFD[11231] = 1.75144222E-02;
  COFD[11232] = -2.19077473E+01;
  COFD[11233] = 5.26494285E+00;
  COFD[11234] = -4.48633357E-01;
  COFD[11235] = 1.86333023E-02;
  COFD[11236] = -2.05728982E+01;
  COFD[11237] = 4.97155662E+00;
  COFD[11238] = -4.17014903E-01;
  COFD[11239] = 1.75144222E-02;
  COFD[11240] = -1.89362720E+01;
  COFD[11241] = 3.59051834E+00;
  COFD[11242] = -1.61030553E-01;
  COFD[11243] = 3.56695042E-03;
  COFD[11244] = -2.16246520E+01;
  COFD[11245] = 5.18371904E+00;
  COFD[11246] = -4.40201152E-01;
  COFD[11247] = 1.83498534E-02;
  COFD[11248] = -2.31435776E+01;
  COFD[11249] = 5.41522402E+00;
  COFD[11250] = -4.41568976E-01;
  COFD[11251] = 1.73190088E-02;
  COFD[11252] = -2.23095149E+01;
  COFD[11253] = 5.45157330E+00;
  COFD[11254] = -4.65253665E-01;
  COFD[11255] = 1.90612411E-02;
  COFD[11256] = -2.23193197E+01;
  COFD[11257] = 5.44963079E+00;
  COFD[11258] = -4.65238095E-01;
  COFD[11259] = 1.90696359E-02;
  COFD[11260] = -2.18845568E+01;
  COFD[11261] = 5.25324658E+00;
  COFD[11262] = -4.47318036E-01;
  COFD[11263] = 1.85841342E-02;
  COFD[11264] = -2.18970360E+01;
  COFD[11265] = 5.25324658E+00;
  COFD[11266] = -4.47318036E-01;
  COFD[11267] = 1.85841342E-02;
  COFD[11268] = -2.06803848E+01;
  COFD[11269] = 4.19360028E+00;
  COFD[11270] = -2.47975502E-01;
  COFD[11271] = 7.63834548E-03;
  COFD[11272] = -2.30861207E+01;
  COFD[11273] = 5.41058317E+00;
  COFD[11274] = -4.40692244E-01;
  COFD[11275] = 1.72706793E-02;
  COFD[11276] = -2.29301040E+01;
  COFD[11277] = 5.43667678E+00;
  COFD[11278] = -4.45729487E-01;
  COFD[11279] = 1.75510667E-02;
  COFD[11280] = -2.30716871E+01;
  COFD[11281] = 5.41058317E+00;
  COFD[11282] = -4.40692244E-01;
  COFD[11283] = 1.72706793E-02;
  COFD[11284] = -2.28355507E+01;
  COFD[11285] = 5.35124813E+00;
  COFD[11286] = -4.29932425E-01;
  COFD[11287] = 1.66897210E-02;
  COFD[11288] = -2.28518854E+01;
  COFD[11289] = 5.35124813E+00;
  COFD[11290] = -4.29932425E-01;
  COFD[11291] = 1.66897210E-02;
  COFD[11292] = -2.15840331E+01;
  COFD[11293] = 4.53462922E+00;
  COFD[11294] = -2.99463362E-01;
  COFD[11295] = 1.01311942E-02;
  COFD[11296] = -2.25529552E+01;
  COFD[11297] = 5.46297654E+00;
  COFD[11298] = -4.65485734E-01;
  COFD[11299] = 1.90234280E-02;
  COFD[11300] = -2.16025672E+01;
  COFD[11301] = 4.53462922E+00;
  COFD[11302] = -2.99463362E-01;
  COFD[11303] = 1.01311942E-02;
  COFD[11304] = -2.27363635E+01;
  COFD[11305] = 5.11476665E+00;
  COFD[11306] = -3.90017950E-01;
  COFD[11307] = 1.46174143E-02;
  COFD[11308] = -2.28367124E+01;
  COFD[11309] = 5.18065235E+00;
  COFD[11310] = -4.01095736E-01;
  COFD[11311] = 1.51910791E-02;
  COFD[11312] = -2.26349149E+01;
  COFD[11313] = 4.95583598E+00;
  COFD[11314] = -3.64620833E-01;
  COFD[11315] = 1.33399033E-02;
  COFD[11316] = -2.29903857E+01;
  COFD[11317] = 5.19862924E+00;
  COFD[11318] = -4.04093368E-01;
  COFD[11319] = 1.53455642E-02;
  COFD[11320] = -2.26506436E+01;
  COFD[11321] = 4.96659745E+00;
  COFD[11322] = -3.66306172E-01;
  COFD[11323] = 1.34235902E-02;
  COFD[11324] = -2.26574044E+01;
  COFD[11325] = 4.96659745E+00;
  COFD[11326] = -3.66306172E-01;
  COFD[11327] = 1.34235902E-02;
  COFD[11328] = -2.18595496E+01;
  COFD[11329] = 4.53718327E+00;
  COFD[11330] = -2.99856359E-01;
  COFD[11331] = 1.01504725E-02;
  COFD[11332] = -2.14584062E+01;
  COFD[11333] = 4.38117791E+00;
  COFD[11334] = -2.78570958E-01;
  COFD[11335] = 9.19430084E-03;
  COFD[11336] = -2.24440093E+01;
  COFD[11337] = 4.74813432E+00;
  COFD[11338] = -3.32238042E-01;
  COFD[11339] = 1.17370757E-02;
  COFD[11340] = -2.25319242E+01;
  COFD[11341] = 4.79201226E+00;
  COFD[11342] = -3.39345463E-01;
  COFD[11343] = 1.20970888E-02;
  COFD[11344] = -2.10625877E+01;
  COFD[11345] = 4.28688746E+00;
  COFD[11346] = -2.61952393E-01;
  COFD[11347] = 8.31175423E-03;
  COFD[11348] = -2.10707986E+01;
  COFD[11349] = 4.28688746E+00;
  COFD[11350] = -2.61952393E-01;
  COFD[11351] = 8.31175423E-03;
  COFD[11352] = -2.16429021E+01;
  COFD[11353] = 4.49834811E+00;
  COFD[11354] = -2.93898563E-01;
  COFD[11355] = 9.85901966E-03;
  COFD[11356] = -2.15585497E+01;
  COFD[11357] = 4.41358668E+00;
  COFD[11358] = -2.83552169E-01;
  COFD[11359] = 9.43843063E-03;
  COFD[11360] = -2.14857867E+01;
  COFD[11361] = 4.20500747E+00;
  COFD[11362] = -2.49679875E-01;
  COFD[11363] = 7.72027057E-03;
  COFD[11364] = -2.13920876E+01;
  COFD[11365] = 4.20500747E+00;
  COFD[11366] = -2.49679875E-01;
  COFD[11367] = 7.72027057E-03;
  COFD[11368] = -2.27937039E+01;
  COFD[11369] = 5.15050798E+00;
  COFD[11370] = -3.95966829E-01;
  COFD[11371] = 1.49238043E-02;
  COFD[11372] = -2.27261088E+01;
  COFD[11373] = 5.11476665E+00;
  COFD[11374] = -3.90017950E-01;
  COFD[11375] = 1.46174143E-02;
  COFD[11376] = -2.15173314E+01;
  COFD[11377] = 4.21707265E+00;
  COFD[11378] = -2.53123137E-01;
  COFD[11379] = 7.94062675E-03;
  COFD[11380] = -2.13456037E+01;
  COFD[11381] = 4.25479427E+00;
  COFD[11382] = -2.59093477E-01;
  COFD[11383] = 8.23869081E-03;
  COFD[11384] = -2.14606286E+01;
  COFD[11385] = 4.28507310E+00;
  COFD[11386] = -2.63941324E-01;
  COFD[11387] = 8.48270663E-03;
  COFD[11388] = -2.14832256E+01;
  COFD[11389] = 4.24469152E+00;
  COFD[11390] = -2.55617920E-01;
  COFD[11391] = 8.00605387E-03;
  COFD[11392] = -2.14573829E+01;
  COFD[11393] = 4.21707265E+00;
  COFD[11394] = -2.53123137E-01;
  COFD[11395] = 7.94062675E-03;
  COFD[11396] = -2.14535226E+01;
  COFD[11397] = 4.21707265E+00;
  COFD[11398] = -2.53123137E-01;
  COFD[11399] = 7.94062675E-03;
  COFD[11400] = -2.20144954E+01;
  COFD[11401] = 4.41014015E+00;
  COFD[11402] = -2.80504988E-01;
  COFD[11403] = 9.20806328E-03;
  COFD[11404] = -2.07325212E+01;
  COFD[11405] = 3.76716501E+00;
  COFD[11406] = -1.85775461E-01;
  COFD[11407] = 4.69798106E-03;
  COFD[11408] = -2.07325212E+01;
  COFD[11409] = 3.76716501E+00;
  COFD[11410] = -1.85775461E-01;
  COFD[11411] = 4.69798106E-03;
  COFD[11412] = -2.07325212E+01;
  COFD[11413] = 3.76716501E+00;
  COFD[11414] = -1.85775461E-01;
  COFD[11415] = 4.69798106E-03;
  COFD[11416] = -2.07325212E+01;
  COFD[11417] = 3.76716501E+00;
  COFD[11418] = -1.85775461E-01;
  COFD[11419] = 4.69798106E-03;
  COFD[11420] = -2.07325212E+01;
  COFD[11421] = 3.76716501E+00;
  COFD[11422] = -1.85775461E-01;
  COFD[11423] = 4.69798106E-03;
  COFD[11424] = -2.04162017E+01;
  COFD[11425] = 3.53236182E+00;
  COFD[11426] = -1.51329611E-01;
  COFD[11427] = 3.06303467E-03;
  COFD[11428] = -2.14573465E+01;
  COFD[11429] = 4.11830569E+00;
  COFD[11430] = -2.36735638E-01;
  COFD[11431] = 7.09853565E-03;
  COFD[11432] = -2.14573465E+01;
  COFD[11433] = 4.11830569E+00;
  COFD[11434] = -2.36735638E-01;
  COFD[11435] = 7.09853565E-03;
  COFD[11436] = -2.16048312E+01;
  COFD[11437] = 5.17969892E+00;
  COFD[11438] = -4.39844546E-01;
  COFD[11439] = 1.83408439E-02;
  COFD[11440] = -2.01927134E+01;
  COFD[11441] = 5.40010667E+00;
  COFD[11442] = -4.63239430E-01;
  COFD[11443] = 1.91539217E-02;
  COFD[11444] = -1.62247253E+01;
  COFD[11445] = 3.85939026E+00;
  COFD[11446] = -2.83353647E-01;
  COFD[11447] = 1.21442775E-02;
  COFD[11448] = -1.97866767E+01;
  COFD[11449] = 4.78902303E+00;
  COFD[11450] = -3.96144974E-01;
  COFD[11451] = 1.67211738E-02;
  COFD[11452] = -2.12048332E+01;
  COFD[11453] = 5.11479735E+00;
  COFD[11454] = -4.33050578E-01;
  COFD[11455] = 1.81098360E-02;
  COFD[11456] = -1.98133697E+01;
  COFD[11457] = 4.78902303E+00;
  COFD[11458] = -3.96144974E-01;
  COFD[11459] = 1.67211738E-02;
  COFD[11460] = -2.01714793E+01;
  COFD[11461] = 4.25399524E+00;
  COFD[11462] = -2.57013670E-01;
  COFD[11463] = 8.07339307E-03;
  COFD[11464] = -2.09238553E+01;
  COFD[11465] = 5.02943557E+00;
  COFD[11466] = -4.23811924E-01;
  COFD[11467] = 1.77810575E-02;
  COFD[11468] = -2.29289528E+01;
  COFD[11469] = 5.48025735E+00;
  COFD[11470] = -4.56422639E-01;
  COFD[11471] = 1.82014258E-02;
  COFD[11472] = -2.18504778E+01;
  COFD[11473] = 5.39546703E+00;
  COFD[11474] = -4.62825371E-01;
  COFD[11475] = 1.91432238E-02;
  COFD[11476] = -2.18110440E+01;
  COFD[11477] = 5.37758536E+00;
  COFD[11478] = -4.60945701E-01;
  COFD[11479] = 1.90787306E-02;
  COFD[11480] = -2.12169053E+01;
  COFD[11481] = 5.11479735E+00;
  COFD[11482] = -4.33050578E-01;
  COFD[11483] = 1.81098360E-02;
  COFD[11484] = -2.12285344E+01;
  COFD[11485] = 5.11479735E+00;
  COFD[11486] = -4.33050578E-01;
  COFD[11487] = 1.81098360E-02;
  COFD[11488] = -2.12861516E+01;
  COFD[11489] = 4.59638767E+00;
  COFD[11490] = -3.08980273E-01;
  COFD[11491] = 1.05986522E-02;
  COFD[11492] = -2.29039591E+01;
  COFD[11493] = 5.47759909E+00;
  COFD[11494] = -4.55570838E-01;
  COFD[11495] = 1.81456235E-02;
  COFD[11496] = -2.26898731E+01;
  COFD[11497] = 5.48310931E+00;
  COFD[11498] = -4.57615590E-01;
  COFD[11499] = 1.82838764E-02;
  COFD[11500] = -2.28904169E+01;
  COFD[11501] = 5.47759909E+00;
  COFD[11502] = -4.55570838E-01;
  COFD[11503] = 1.81456235E-02;
  COFD[11504] = -2.27371431E+01;
  COFD[11505] = 5.45828076E+00;
  COFD[11506] = -4.50591566E-01;
  COFD[11507] = 1.78383531E-02;
  COFD[11508] = -2.27525528E+01;
  COFD[11509] = 5.45828076E+00;
  COFD[11510] = -4.50591566E-01;
  COFD[11511] = 1.78383531E-02;
  COFD[11512] = -2.20529065E+01;
  COFD[11513] = 4.88259016E+00;
  COFD[11514] = -3.53111373E-01;
  COFD[11515] = 1.27672516E-02;
  COFD[11516] = -2.20783416E+01;
  COFD[11517] = 5.42074110E+00;
  COFD[11518] = -4.64982008E-01;
  COFD[11519] = 1.91934150E-02;
  COFD[11520] = -2.20699172E+01;
  COFD[11521] = 4.88259016E+00;
  COFD[11522] = -3.53111373E-01;
  COFD[11523] = 1.27672516E-02;
  COFD[11524] = -2.28434526E+01;
  COFD[11525] = 5.30874092E+00;
  COFD[11526] = -4.22570517E-01;
  COFD[11527] = 1.63018518E-02;
  COFD[11528] = -2.29126227E+01;
  COFD[11529] = 5.36245215E+00;
  COFD[11530] = -4.31910941E-01;
  COFD[11531] = 1.67950232E-02;
  COFD[11532] = -2.28440112E+01;
  COFD[11533] = 5.19534599E+00;
  COFD[11534] = -4.03564468E-01;
  COFD[11535] = 1.53188143E-02;
  COFD[11536] = -2.30647680E+01;
  COFD[11537] = 5.37596433E+00;
  COFD[11538] = -4.34300692E-01;
  COFD[11539] = 1.69223661E-02;
  COFD[11540] = -2.28532493E+01;
  COFD[11541] = 5.20408596E+00;
  COFD[11542] = -4.04973723E-01;
  COFD[11543] = 1.53901363E-02;
  COFD[11544] = -2.28593453E+01;
  COFD[11545] = 5.20408596E+00;
  COFD[11546] = -4.04973723E-01;
  COFD[11547] = 1.53901363E-02;
  COFD[11548] = -2.23303137E+01;
  COFD[11549] = 4.88479479E+00;
  COFD[11550] = -3.53456980E-01;
  COFD[11551] = 1.27844233E-02;
  COFD[11552] = -2.23028432E+01;
  COFD[11553] = 4.88611782E+00;
  COFD[11554] = -3.53664413E-01;
  COFD[11555] = 1.27947308E-02;
  COFD[11556] = -2.28166711E+01;
  COFD[11557] = 5.05461151E+00;
  COFD[11558] = -3.80222586E-01;
  COFD[11559] = 1.41187082E-02;
  COFD[11560] = -2.29010028E+01;
  COFD[11561] = 5.09658829E+00;
  COFD[11562] = -3.87036802E-01;
  COFD[11563] = 1.44650532E-02;
  COFD[11564] = -2.16041924E+01;
  COFD[11565] = 4.66858934E+00;
  COFD[11566] = -3.20108476E-01;
  COFD[11567] = 1.11452199E-02;
  COFD[11568] = -2.16116786E+01;
  COFD[11569] = 4.66858934E+00;
  COFD[11570] = -3.20108476E-01;
  COFD[11571] = 1.11452199E-02;
  COFD[11572] = -2.21166421E+01;
  COFD[11573] = 4.85109413E+00;
  COFD[11574] = -3.48178913E-01;
  COFD[11575] = 1.25223681E-02;
  COFD[11576] = -2.23943834E+01;
  COFD[11577] = 4.91274983E+00;
  COFD[11578] = -3.57867526E-01;
  COFD[11579] = 1.30043584E-02;
  COFD[11580] = -2.20578311E+01;
  COFD[11581] = 4.60526318E+00;
  COFD[11582] = -3.10351603E-01;
  COFD[11583] = 1.06661278E-02;
  COFD[11584] = -2.19775159E+01;
  COFD[11585] = 4.60526318E+00;
  COFD[11586] = -3.10351603E-01;
  COFD[11587] = 1.06661278E-02;
  COFD[11588] = -2.28830495E+01;
  COFD[11589] = 5.33738936E+00;
  COFD[11590] = -4.27502526E-01;
  COFD[11591] = 1.65608197E-02;
  COFD[11592] = -2.28339902E+01;
  COFD[11593] = 5.30874092E+00;
  COFD[11594] = -4.22570517E-01;
  COFD[11595] = 1.63018518E-02;
  COFD[11596] = -2.23009836E+01;
  COFD[11597] = 4.69760938E+00;
  COFD[11598] = -3.24528129E-01;
  COFD[11599] = 1.13606885E-02;
  COFD[11600] = -2.21833029E+01;
  COFD[11601] = 4.75657673E+00;
  COFD[11602] = -3.33531354E-01;
  COFD[11603] = 1.18003758E-02;
  COFD[11604] = -2.23442442E+01;
  COFD[11605] = 4.80471822E+00;
  COFD[11606] = -3.40939669E-01;
  COFD[11607] = 1.21639062E-02;
  COFD[11608] = -2.20449946E+01;
  COFD[11609] = 4.63376397E+00;
  COFD[11610] = -3.14793416E-01;
  COFD[11611] = 1.08858273E-02;
  COFD[11612] = -2.22491918E+01;
  COFD[11613] = 4.69760938E+00;
  COFD[11614] = -3.24528129E-01;
  COFD[11615] = 1.13606885E-02;
  COFD[11616] = -2.22458282E+01;
  COFD[11617] = 4.69760938E+00;
  COFD[11618] = -3.24528129E-01;
  COFD[11619] = 1.13606885E-02;
  COFD[11620] = -2.25315020E+01;
  COFD[11621] = 4.77923223E+00;
  COFD[11622] = -3.37003339E-01;
  COFD[11623] = 1.19703492E-02;
  COFD[11624] = -2.16640027E+01;
  COFD[11625] = 4.30841644E+00;
  COFD[11626] = -2.65200479E-01;
  COFD[11627] = 8.46889236E-03;
  COFD[11628] = -2.16640027E+01;
  COFD[11629] = 4.30841644E+00;
  COFD[11630] = -2.65200479E-01;
  COFD[11631] = 8.46889236E-03;
  COFD[11632] = -2.16640027E+01;
  COFD[11633] = 4.30841644E+00;
  COFD[11634] = -2.65200479E-01;
  COFD[11635] = 8.46889236E-03;
  COFD[11636] = -2.16640027E+01;
  COFD[11637] = 4.30841644E+00;
  COFD[11638] = -2.65200479E-01;
  COFD[11639] = 8.46889236E-03;
  COFD[11640] = -2.16640027E+01;
  COFD[11641] = 4.30841644E+00;
  COFD[11642] = -2.65200479E-01;
  COFD[11643] = 8.46889236E-03;
  COFD[11644] = -2.14573465E+01;
  COFD[11645] = 4.11830569E+00;
  COFD[11646] = -2.36735638E-01;
  COFD[11647] = 7.09853565E-03;
  COFD[11648] = -2.20903494E+01;
  COFD[11649] = 4.53657991E+00;
  COFD[11650] = -2.99763510E-01;
  COFD[11651] = 1.01459176E-02;
  COFD[11652] = -2.20903494E+01;
  COFD[11653] = 4.53657991E+00;
  COFD[11654] = -2.99763510E-01;
  COFD[11655] = 1.01459176E-02;
  COFD[11656] = -2.08960030E+01;
  COFD[11657] = 5.02187007E+00;
  COFD[11658] = -4.22927894E-01;
  COFD[11659] = 1.77465747E-02;
  COFD[11660] = -2.01927134E+01;
  COFD[11661] = 5.40010667E+00;
  COFD[11662] = -4.63239430E-01;
  COFD[11663] = 1.91539217E-02;
  COFD[11664] = -1.62247253E+01;
  COFD[11665] = 3.85939026E+00;
  COFD[11666] = -2.83353647E-01;
  COFD[11667] = 1.21442775E-02;
  COFD[11668] = -1.97866767E+01;
  COFD[11669] = 4.78902303E+00;
  COFD[11670] = -3.96144974E-01;
  COFD[11671] = 1.67211738E-02;
  COFD[11672] = -2.12048332E+01;
  COFD[11673] = 5.11479735E+00;
  COFD[11674] = -4.33050578E-01;
  COFD[11675] = 1.81098360E-02;
  COFD[11676] = -1.98133697E+01;
  COFD[11677] = 4.78902303E+00;
  COFD[11678] = -3.96144974E-01;
  COFD[11679] = 1.67211738E-02;
  COFD[11680] = -2.01714793E+01;
  COFD[11681] = 4.25399524E+00;
  COFD[11682] = -2.57013670E-01;
  COFD[11683] = 8.07339307E-03;
  COFD[11684] = -2.09238553E+01;
  COFD[11685] = 5.02943557E+00;
  COFD[11686] = -4.23811924E-01;
  COFD[11687] = 1.77810575E-02;
  COFD[11688] = -2.29289528E+01;
  COFD[11689] = 5.48025735E+00;
  COFD[11690] = -4.56422639E-01;
  COFD[11691] = 1.82014258E-02;
  COFD[11692] = -2.18504778E+01;
  COFD[11693] = 5.39546703E+00;
  COFD[11694] = -4.62825371E-01;
  COFD[11695] = 1.91432238E-02;
  COFD[11696] = -2.18110440E+01;
  COFD[11697] = 5.37758536E+00;
  COFD[11698] = -4.60945701E-01;
  COFD[11699] = 1.90787306E-02;
  COFD[11700] = -2.12169053E+01;
  COFD[11701] = 5.11479735E+00;
  COFD[11702] = -4.33050578E-01;
  COFD[11703] = 1.81098360E-02;
  COFD[11704] = -2.12285344E+01;
  COFD[11705] = 5.11479735E+00;
  COFD[11706] = -4.33050578E-01;
  COFD[11707] = 1.81098360E-02;
  COFD[11708] = -2.12861516E+01;
  COFD[11709] = 4.59638767E+00;
  COFD[11710] = -3.08980273E-01;
  COFD[11711] = 1.05986522E-02;
  COFD[11712] = -2.29039591E+01;
  COFD[11713] = 5.47759909E+00;
  COFD[11714] = -4.55570838E-01;
  COFD[11715] = 1.81456235E-02;
  COFD[11716] = -2.26898731E+01;
  COFD[11717] = 5.48310931E+00;
  COFD[11718] = -4.57615590E-01;
  COFD[11719] = 1.82838764E-02;
  COFD[11720] = -2.28904169E+01;
  COFD[11721] = 5.47759909E+00;
  COFD[11722] = -4.55570838E-01;
  COFD[11723] = 1.81456235E-02;
  COFD[11724] = -2.27371431E+01;
  COFD[11725] = 5.45828076E+00;
  COFD[11726] = -4.50591566E-01;
  COFD[11727] = 1.78383531E-02;
  COFD[11728] = -2.27525528E+01;
  COFD[11729] = 5.45828076E+00;
  COFD[11730] = -4.50591566E-01;
  COFD[11731] = 1.78383531E-02;
  COFD[11732] = -2.20529065E+01;
  COFD[11733] = 4.88259016E+00;
  COFD[11734] = -3.53111373E-01;
  COFD[11735] = 1.27672516E-02;
  COFD[11736] = -2.20783416E+01;
  COFD[11737] = 5.42074110E+00;
  COFD[11738] = -4.64982008E-01;
  COFD[11739] = 1.91934150E-02;
  COFD[11740] = -2.20699172E+01;
  COFD[11741] = 4.88259016E+00;
  COFD[11742] = -3.53111373E-01;
  COFD[11743] = 1.27672516E-02;
  COFD[11744] = -2.28434526E+01;
  COFD[11745] = 5.30874092E+00;
  COFD[11746] = -4.22570517E-01;
  COFD[11747] = 1.63018518E-02;
  COFD[11748] = -2.29126227E+01;
  COFD[11749] = 5.36245215E+00;
  COFD[11750] = -4.31910941E-01;
  COFD[11751] = 1.67950232E-02;
  COFD[11752] = -2.28440112E+01;
  COFD[11753] = 5.19534599E+00;
  COFD[11754] = -4.03564468E-01;
  COFD[11755] = 1.53188143E-02;
  COFD[11756] = -2.30647680E+01;
  COFD[11757] = 5.37596433E+00;
  COFD[11758] = -4.34300692E-01;
  COFD[11759] = 1.69223661E-02;
  COFD[11760] = -2.28532493E+01;
  COFD[11761] = 5.20408596E+00;
  COFD[11762] = -4.04973723E-01;
  COFD[11763] = 1.53901363E-02;
  COFD[11764] = -2.28593453E+01;
  COFD[11765] = 5.20408596E+00;
  COFD[11766] = -4.04973723E-01;
  COFD[11767] = 1.53901363E-02;
  COFD[11768] = -2.23303137E+01;
  COFD[11769] = 4.88479479E+00;
  COFD[11770] = -3.53456980E-01;
  COFD[11771] = 1.27844233E-02;
  COFD[11772] = -2.23028432E+01;
  COFD[11773] = 4.88611782E+00;
  COFD[11774] = -3.53664413E-01;
  COFD[11775] = 1.27947308E-02;
  COFD[11776] = -2.28166711E+01;
  COFD[11777] = 5.05461151E+00;
  COFD[11778] = -3.80222586E-01;
  COFD[11779] = 1.41187082E-02;
  COFD[11780] = -2.29010028E+01;
  COFD[11781] = 5.09658829E+00;
  COFD[11782] = -3.87036802E-01;
  COFD[11783] = 1.44650532E-02;
  COFD[11784] = -2.16041924E+01;
  COFD[11785] = 4.66858934E+00;
  COFD[11786] = -3.20108476E-01;
  COFD[11787] = 1.11452199E-02;
  COFD[11788] = -2.16116786E+01;
  COFD[11789] = 4.66858934E+00;
  COFD[11790] = -3.20108476E-01;
  COFD[11791] = 1.11452199E-02;
  COFD[11792] = -2.21166421E+01;
  COFD[11793] = 4.85109413E+00;
  COFD[11794] = -3.48178913E-01;
  COFD[11795] = 1.25223681E-02;
  COFD[11796] = -2.23943834E+01;
  COFD[11797] = 4.91274983E+00;
  COFD[11798] = -3.57867526E-01;
  COFD[11799] = 1.30043584E-02;
  COFD[11800] = -2.20578311E+01;
  COFD[11801] = 4.60526318E+00;
  COFD[11802] = -3.10351603E-01;
  COFD[11803] = 1.06661278E-02;
  COFD[11804] = -2.19775159E+01;
  COFD[11805] = 4.60526318E+00;
  COFD[11806] = -3.10351603E-01;
  COFD[11807] = 1.06661278E-02;
  COFD[11808] = -2.28830495E+01;
  COFD[11809] = 5.33738936E+00;
  COFD[11810] = -4.27502526E-01;
  COFD[11811] = 1.65608197E-02;
  COFD[11812] = -2.28339902E+01;
  COFD[11813] = 5.30874092E+00;
  COFD[11814] = -4.22570517E-01;
  COFD[11815] = 1.63018518E-02;
  COFD[11816] = -2.23009836E+01;
  COFD[11817] = 4.69760938E+00;
  COFD[11818] = -3.24528129E-01;
  COFD[11819] = 1.13606885E-02;
  COFD[11820] = -2.21833029E+01;
  COFD[11821] = 4.75657673E+00;
  COFD[11822] = -3.33531354E-01;
  COFD[11823] = 1.18003758E-02;
  COFD[11824] = -2.23442442E+01;
  COFD[11825] = 4.80471822E+00;
  COFD[11826] = -3.40939669E-01;
  COFD[11827] = 1.21639062E-02;
  COFD[11828] = -2.20449946E+01;
  COFD[11829] = 4.63376397E+00;
  COFD[11830] = -3.14793416E-01;
  COFD[11831] = 1.08858273E-02;
  COFD[11832] = -2.22491918E+01;
  COFD[11833] = 4.69760938E+00;
  COFD[11834] = -3.24528129E-01;
  COFD[11835] = 1.13606885E-02;
  COFD[11836] = -2.22458282E+01;
  COFD[11837] = 4.69760938E+00;
  COFD[11838] = -3.24528129E-01;
  COFD[11839] = 1.13606885E-02;
  COFD[11840] = -2.25315020E+01;
  COFD[11841] = 4.77923223E+00;
  COFD[11842] = -3.37003339E-01;
  COFD[11843] = 1.19703492E-02;
  COFD[11844] = -2.16640027E+01;
  COFD[11845] = 4.30841644E+00;
  COFD[11846] = -2.65200479E-01;
  COFD[11847] = 8.46889236E-03;
  COFD[11848] = -2.16640027E+01;
  COFD[11849] = 4.30841644E+00;
  COFD[11850] = -2.65200479E-01;
  COFD[11851] = 8.46889236E-03;
  COFD[11852] = -2.16640027E+01;
  COFD[11853] = 4.30841644E+00;
  COFD[11854] = -2.65200479E-01;
  COFD[11855] = 8.46889236E-03;
  COFD[11856] = -2.16640027E+01;
  COFD[11857] = 4.30841644E+00;
  COFD[11858] = -2.65200479E-01;
  COFD[11859] = 8.46889236E-03;
  COFD[11860] = -2.16640027E+01;
  COFD[11861] = 4.30841644E+00;
  COFD[11862] = -2.65200479E-01;
  COFD[11863] = 8.46889236E-03;
  COFD[11864] = -2.14573465E+01;
  COFD[11865] = 4.11830569E+00;
  COFD[11866] = -2.36735638E-01;
  COFD[11867] = 7.09853565E-03;
  COFD[11868] = -2.20903494E+01;
  COFD[11869] = 4.53657991E+00;
  COFD[11870] = -2.99763510E-01;
  COFD[11871] = 1.01459176E-02;
  COFD[11872] = -2.20903494E+01;
  COFD[11873] = 4.53657991E+00;
  COFD[11874] = -2.99763510E-01;
  COFD[11875] = 1.01459176E-02;
  COFD[11876] = -2.08960030E+01;
  COFD[11877] = 5.02187007E+00;
  COFD[11878] = -4.22927894E-01;
  COFD[11879] = 1.77465747E-02;
  COFD[11880] = -1.38221854E+01;
  COFD[11881] = 3.46560000E+00;
  COFD[11882] = -2.34075114E-01;
  COFD[11883] = 1.00849661E-02;
  COFD[11884] = -1.11071703E+01;
  COFD[11885] = 2.21467976E+00;
  COFD[11886] = -7.20501534E-02;
  COFD[11887] = 3.07515437E-03;
  COFD[11888] = -1.36761934E+01;
  COFD[11889] = 2.89678405E+00;
  COFD[11890] = -1.62418864E-01;
  COFD[11891] = 7.07300755E-03;
  COFD[11892] = -1.48133685E+01;
  COFD[11893] = 3.16773813E+00;
  COFD[11894] = -1.96823168E-01;
  COFD[11895] = 8.53058072E-03;
  COFD[11896] = -1.36954208E+01;
  COFD[11897] = 2.89678405E+00;
  COFD[11898] = -1.62418864E-01;
  COFD[11899] = 7.07300755E-03;
  COFD[11900] = -2.06077929E+01;
  COFD[11901] = 5.33386551E+00;
  COFD[11902] = -4.56343451E-01;
  COFD[11903] = 1.89202797E-02;
  COFD[11904] = -1.45806462E+01;
  COFD[11905] = 3.07340947E+00;
  COFD[11906] = -1.84805140E-01;
  COFD[11907] = 8.01973216E-03;
  COFD[11908] = -1.74370408E+01;
  COFD[11909] = 4.06188586E+00;
  COFD[11910] = -3.07715468E-01;
  COFD[11911] = 1.31226885E-02;
  COFD[11912] = -1.54972236E+01;
  COFD[11913] = 3.45957322E+00;
  COFD[11914] = -2.33335381E-01;
  COFD[11915] = 1.00546680E-02;
  COFD[11916] = -1.54573387E+01;
  COFD[11917] = 3.44303981E+00;
  COFD[11918] = -2.31296721E-01;
  COFD[11919] = 9.97079557E-03;
  COFD[11920] = -1.48205479E+01;
  COFD[11921] = 3.16773813E+00;
  COFD[11922] = -1.96823168E-01;
  COFD[11923] = 8.53058072E-03;
  COFD[11924] = -1.48273972E+01;
  COFD[11925] = 3.16773813E+00;
  COFD[11926] = -1.96823168E-01;
  COFD[11927] = 8.53058072E-03;
  COFD[11928] = -1.99350678E+01;
  COFD[11929] = 4.98617709E+00;
  COFD[11930] = -4.18736053E-01;
  COFD[11931] = 1.75821344E-02;
  COFD[11932] = -1.75535743E+01;
  COFD[11933] = 4.07809359E+00;
  COFD[11934] = -3.09646036E-01;
  COFD[11935] = 1.31992743E-02;
  COFD[11936] = -1.71876461E+01;
  COFD[11937] = 4.03536932E+00;
  COFD[11938] = -3.04548174E-01;
  COFD[11939] = 1.29965591E-02;
  COFD[11940] = -1.75452793E+01;
  COFD[11941] = 4.07809359E+00;
  COFD[11942] = -3.09646036E-01;
  COFD[11943] = 1.31992743E-02;
  COFD[11944] = -1.76034224E+01;
  COFD[11945] = 4.16734978E+00;
  COFD[11946] = -3.20508152E-01;
  COFD[11947] = 1.36405589E-02;
  COFD[11948] = -1.76131750E+01;
  COFD[11949] = 4.16734978E+00;
  COFD[11950] = -3.20508152E-01;
  COFD[11951] = 1.36405589E-02;
  COFD[11952] = -1.96541240E+01;
  COFD[11953] = 4.83228605E+00;
  COFD[11954] = -4.01127235E-01;
  COFD[11955] = 1.69121265E-02;
  COFD[11956] = -1.55055942E+01;
  COFD[11957] = 3.50663983E+00;
  COFD[11958] = -2.39273841E-01;
  COFD[11959] = 1.03049488E-02;
  COFD[11960] = -1.96633593E+01;
  COFD[11961] = 4.83228605E+00;
  COFD[11962] = -4.01127235E-01;
  COFD[11963] = 1.69121265E-02;
  COFD[11964] = -1.86480192E+01;
  COFD[11965] = 4.45508831E+00;
  COFD[11966] = -3.56068927E-01;
  COFD[11967] = 1.51117769E-02;
  COFD[11968] = -1.84298529E+01;
  COFD[11969] = 4.38777139E+00;
  COFD[11970] = -3.47895358E-01;
  COFD[11971] = 1.47793796E-02;
  COFD[11972] = -1.91111522E+01;
  COFD[11973] = 4.55863849E+00;
  COFD[11974] = -3.68274023E-01;
  COFD[11975] = 1.55925459E-02;
  COFD[11976] = -1.85464184E+01;
  COFD[11977] = 4.36850016E+00;
  COFD[11978] = -3.45531357E-01;
  COFD[11979] = 1.46822403E-02;
  COFD[11980] = -1.90794537E+01;
  COFD[11981] = 4.55246544E+00;
  COFD[11982] = -3.67548311E-01;
  COFD[11983] = 1.55640443E-02;
  COFD[11984] = -1.90824905E+01;
  COFD[11985] = 4.55246544E+00;
  COFD[11986] = -3.67548311E-01;
  COFD[11987] = 1.55640443E-02;
  COFD[11988] = -1.99275866E+01;
  COFD[11989] = 4.83095096E+00;
  COFD[11990] = -4.00972558E-01;
  COFD[11991] = 1.69061563E-02;
  COFD[11992] = -2.01873438E+01;
  COFD[11993] = 4.92914818E+00;
  COFD[11994] = -4.12032796E-01;
  COFD[11995] = 1.73189340E-02;
  COFD[11996] = -1.97684831E+01;
  COFD[11997] = 4.71961665E+00;
  COFD[11998] = -3.87953877E-01;
  COFD[11999] = 1.63982506E-02;
  COFD[12000] = -1.96740363E+01;
  COFD[12001] = 4.68296254E+00;
  COFD[12002] = -3.83520383E-01;
  COFD[12003] = 1.62187256E-02;
  COFD[12004] = -1.99112694E+01;
  COFD[12005] = 4.94145734E+00;
  COFD[12006] = -4.13478429E-01;
  COFD[12007] = 1.73756310E-02;
  COFD[12008] = -1.99152010E+01;
  COFD[12009] = 4.94145734E+00;
  COFD[12010] = -4.13478429E-01;
  COFD[12011] = 1.73756310E-02;
  COFD[12012] = -1.97977801E+01;
  COFD[12013] = 4.85079945E+00;
  COFD[12014] = -4.03257284E-01;
  COFD[12015] = 1.69936877E-02;
  COFD[12016] = -2.01834936E+01;
  COFD[12017] = 4.90590042E+00;
  COFD[12018] = -4.09326365E-01;
  COFD[12019] = 1.72138687E-02;
  COFD[12020] = -2.05477587E+01;
  COFD[12021] = 4.98069219E+00;
  COFD[12022] = -4.18089208E-01;
  COFD[12023] = 1.75566350E-02;
  COFD[12024] = -2.05151212E+01;
  COFD[12025] = 4.98069219E+00;
  COFD[12026] = -4.18089208E-01;
  COFD[12027] = 1.75566350E-02;
  COFD[12028] = -1.85439310E+01;
  COFD[12029] = 4.42312522E+00;
  COFD[12030] = -3.52239033E-01;
  COFD[12031] = 1.49581799E-02;
  COFD[12032] = -1.86427372E+01;
  COFD[12033] = 4.45508831E+00;
  COFD[12034] = -3.56068927E-01;
  COFD[12035] = 1.51117769E-02;
  COFD[12036] = -2.06721358E+01;
  COFD[12037] = 4.98377900E+00;
  COFD[12038] = -4.18452852E-01;
  COFD[12039] = 1.75709529E-02;
  COFD[12040] = -2.04535726E+01;
  COFD[12041] = 4.98209177E+00;
  COFD[12042] = -4.18253592E-01;
  COFD[12043] = 1.75630854E-02;
  COFD[12044] = -2.05335884E+01;
  COFD[12045] = 4.97826014E+00;
  COFD[12046] = -4.17803431E-01;
  COFD[12047] = 1.75454156E-02;
  COFD[12048] = -2.04878949E+01;
  COFD[12049] = 4.96174500E+00;
  COFD[12050] = -4.15861207E-01;
  COFD[12051] = 1.74690994E-02;
  COFD[12052] = -2.06504915E+01;
  COFD[12053] = 4.98377900E+00;
  COFD[12054] = -4.18452852E-01;
  COFD[12055] = 1.75709529E-02;
  COFD[12056] = -2.06490406E+01;
  COFD[12057] = 4.98377900E+00;
  COFD[12058] = -4.18452852E-01;
  COFD[12059] = 1.75709529E-02;
  COFD[12060] = -2.04827632E+01;
  COFD[12061] = 4.88918294E+00;
  COFD[12062] = -4.07583331E-01;
  COFD[12063] = 1.71552617E-02;
  COFD[12064] = -2.12317349E+01;
  COFD[12065] = 5.12393234E+00;
  COFD[12066] = -4.34047488E-01;
  COFD[12067] = 1.81456922E-02;
  COFD[12068] = -2.12317349E+01;
  COFD[12069] = 5.12393234E+00;
  COFD[12070] = -4.34047488E-01;
  COFD[12071] = 1.81456922E-02;
  COFD[12072] = -2.12317349E+01;
  COFD[12073] = 5.12393234E+00;
  COFD[12074] = -4.34047488E-01;
  COFD[12075] = 1.81456922E-02;
  COFD[12076] = -2.12317349E+01;
  COFD[12077] = 5.12393234E+00;
  COFD[12078] = -4.34047488E-01;
  COFD[12079] = 1.81456922E-02;
  COFD[12080] = -2.12317349E+01;
  COFD[12081] = 5.12393234E+00;
  COFD[12082] = -4.34047488E-01;
  COFD[12083] = 1.81456922E-02;
  COFD[12084] = -2.16048312E+01;
  COFD[12085] = 5.17969892E+00;
  COFD[12086] = -4.39844546E-01;
  COFD[12087] = 1.83408439E-02;
  COFD[12088] = -2.08960030E+01;
  COFD[12089] = 5.02187007E+00;
  COFD[12090] = -4.22927894E-01;
  COFD[12091] = 1.77465747E-02;
  COFD[12092] = -2.08960030E+01;
  COFD[12093] = 5.02187007E+00;
  COFD[12094] = -4.22927894E-01;
  COFD[12095] = 1.77465747E-02;
  COFD[12096] = -1.45599127E+01;
  COFD[12097] = 3.06880733E+00;
  COFD[12098] = -1.84232163E-01;
  COFD[12099] = 7.99594639E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 0;
  KTDIF[1] = 1;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 0.00000000E+00;
  COFTD[1] = 0.00000000E+00;
  COFTD[2] = 0.00000000E+00;
  COFTD[3] = 0.00000000E+00;
  COFTD[4] = 1.58593068E-01;
  COFTD[5] = 3.77534860E-05;
  COFTD[6] = -1.76801591E-08;
  COFTD[7] = 2.63675347E-12;
  COFTD[8] = 2.97684663E-01;
  COFTD[9] = 2.85456850E-04;
  COFTD[10] = -1.28553496E-07;
  COFTD[11] = 1.75750084E-11;
  COFTD[12] = 2.53688084E-01;
  COFTD[13] = 3.89160027E-04;
  COFTD[14] = -1.70615841E-07;
  COFTD[15] = 2.27712605E-11;
  COFTD[16] = 2.99924635E-01;
  COFTD[17] = 2.87604812E-04;
  COFTD[18] = -1.29520816E-07;
  COFTD[19] = 1.77072541E-11;
  COFTD[20] = -1.11291627E-01;
  COFTD[21] = 6.84136016E-04;
  COFTD[22] = -2.50607231E-07;
  COFTD[23] = 2.96930988E-11;
  COFTD[24] = 2.71277260E-01;
  COFTD[25] = 3.59776957E-04;
  COFTD[26] = -1.59065065E-07;
  COFTD[27] = 2.13804116E-11;
  COFTD[28] = 6.30511122E-02;
  COFTD[29] = 6.13215017E-04;
  COFTD[30] = -2.48081637E-07;
  COFTD[31] = 3.12630804E-11;
  COFTD[32] = 1.73584764E-01;
  COFTD[33] = 4.39396027E-04;
  COFTD[34] = -1.87349388E-07;
  COFTD[35] = 2.44720799E-11;
  COFTD[36] = 1.79061926E-01;
  COFTD[37] = 4.38430800E-04;
  COFTD[38] = -1.87266336E-07;
  COFTD[39] = 2.44927728E-11;
  COFTD[40] = 2.54177155E-01;
  COFTD[41] = 3.89910267E-04;
  COFTD[42] = -1.70944762E-07;
  COFTD[43] = 2.28151600E-11;
  COFTD[44] = 2.54638073E-01;
  COFTD[45] = 3.90617320E-04;
  COFTD[46] = -1.71254749E-07;
  COFTD[47] = 2.28565324E-11;
  COFTD[48] = -9.12112367E-02;
  COFTD[49] = 7.07338518E-04;
  COFTD[50] = -2.63897394E-07;
  COFTD[51] = 3.16205895E-11;
  COFTD[52] = 5.84179594E-02;
  COFTD[53] = 6.03361569E-04;
  COFTD[54] = -2.43735046E-07;
  COFTD[55] = 3.06860296E-11;
  COFTD[56] = 6.68055678E-02;
  COFTD[57] = 5.92433551E-04;
  COFTD[58] = -2.40250165E-07;
  COFTD[59] = 3.03232790E-11;
  COFTD[60] = 5.82821160E-02;
  COFTD[61] = 6.01958530E-04;
  COFTD[62] = -2.43168272E-07;
  COFTD[63] = 3.06146732E-11;
  COFTD[64] = 4.19396633E-02;
  COFTD[65] = 6.11354347E-04;
  COFTD[66] = -2.45177111E-07;
  COFTD[67] = 3.07240365E-11;
  COFTD[68] = 4.20610358E-02;
  COFTD[69] = 6.13123594E-04;
  COFTD[70] = -2.45886648E-07;
  COFTD[71] = 3.08129512E-11;
  COFTD[72] = -6.66681145E-02;
  COFTD[73] = 7.08750603E-04;
  COFTD[74] = -2.68826300E-07;
  COFTD[75] = 3.25384320E-11;
  COFTD[76] = 1.79302390E-01;
  COFTD[77] = 4.89724622E-04;
  COFTD[78] = -2.07986182E-07;
  COFTD[79] = 2.70898913E-11;
  COFTD[80] = -6.68146718E-02;
  COFTD[81] = 7.10308658E-04;
  COFTD[82] = -2.69417264E-07;
  COFTD[83] = 3.26099616E-11;
  COFTD[84] = -3.32041440E-03;
  COFTD[85] = 6.66105012E-04;
  COFTD[86] = -2.61376193E-07;
  COFTD[87] = 3.23068561E-11;
  COFTD[88] = 8.84151535E-03;
  COFTD[89] = 6.58330824E-04;
  COFTD[90] = -2.59852150E-07;
  COFTD[91] = 3.22370899E-11;
  COFTD[92] = -2.45819129E-02;
  COFTD[93] = 6.90164430E-04;
  COFTD[94] = -2.67970186E-07;
  COFTD[95] = 3.29050815E-11;
  COFTD[96] = 1.21402309E-02;
  COFTD[97] = 6.56462228E-04;
  COFTD[98] = -2.59520308E-07;
  COFTD[99] = 3.22275611E-11;
  COFTD[100] = -2.33526069E-02;
  COFTD[101] = 6.89775262E-04;
  COFTD[102] = -2.67989469E-07;
  COFTD[103] = 3.29204129E-11;
  COFTD[104] = -2.33679670E-02;
  COFTD[105] = 6.90228961E-04;
  COFTD[106] = -2.68165739E-07;
  COFTD[107] = 3.29420662E-11;
  COFTD[108] = -6.72791134E-02;
  COFTD[109] = 7.17640223E-04;
  COFTD[110] = -2.72235892E-07;
  COFTD[111] = 3.29539296E-11;
  COFTD[112] = -6.71779125E-02;
  COFTD[113] = 7.18004909E-04;
  COFTD[114] = -2.72396938E-07;
  COFTD[115] = 3.29751090E-11;
  COFTD[116] = -4.79844214E-02;
  COFTD[117] = 7.10843019E-04;
  COFTD[118] = -2.72660143E-07;
  COFTD[119] = 3.32304673E-11;
  COFTD[120] = -4.21365072E-02;
  COFTD[121] = 7.07509917E-04;
  COFTD[122] = -2.72239705E-07;
  COFTD[123] = 3.32437712E-11;
  COFTD[124] = -8.70320623E-02;
  COFTD[125] = 7.22048527E-04;
  COFTD[126] = -2.70516326E-07;
  COFTD[127] = 3.24968732E-11;
  COFTD[128] = -8.71104065E-02;
  COFTD[129] = 7.22698497E-04;
  COFTD[130] = -2.70759838E-07;
  COFTD[131] = 3.25261261E-11;
  COFTD[132] = -7.07948414E-02;
  COFTD[133] = 7.18593309E-04;
  COFTD[134] = -2.72018226E-07;
  COFTD[135] = 3.28846854E-11;
  COFTD[136] = -6.40249545E-02;
  COFTD[137] = 7.15460805E-04;
  COFTD[138] = -2.71917215E-07;
  COFTD[139] = 3.29531210E-11;
  COFTD[140] = -9.51413327E-02;
  COFTD[141] = 7.43670757E-04;
  COFTD[142] = -2.77594732E-07;
  COFTD[143] = 3.32722648E-11;
  COFTD[144] = -9.45743180E-02;
  COFTD[145] = 7.39238695E-04;
  COFTD[146] = -2.75940348E-07;
  COFTD[147] = 3.30739718E-11;
  COFTD[148] = 2.86681177E-03;
  COFTD[149] = 6.62208026E-04;
  COFTD[150] = -2.60633068E-07;
  COFTD[151] = 3.22758573E-11;
  COFTD[152] = -3.31610240E-03;
  COFTD[153] = 6.65239985E-04;
  COFTD[154] = -2.61036761E-07;
  COFTD[155] = 3.22649013E-11;
  COFTD[156] = -8.66667913E-02;
  COFTD[157] = 7.38146878E-04;
  COFTD[158] = -2.76968238E-07;
  COFTD[159] = 3.33028966E-11;
  COFTD[160] = -8.08762211E-02;
  COFTD[161] = 7.29511222E-04;
  COFTD[162] = -2.74585182E-07;
  COFTD[163] = 3.30796032E-11;
  COFTD[164] = -7.63276449E-02;
  COFTD[165] = 7.27045826E-04;
  COFTD[166] = -2.74408579E-07;
  COFTD[167] = 3.31138718E-11;
  COFTD[168] = -9.17020338E-02;
  COFTD[169] = 7.37311460E-04;
  COFTD[170] = -2.75712029E-07;
  COFTD[171] = 3.30826731E-11;
  COFTD[172] = -8.63172955E-02;
  COFTD[173] = 7.35170199E-04;
  COFTD[174] = -2.75851325E-07;
  COFTD[175] = 3.31685981E-11;
  COFTD[176] = -8.62933727E-02;
  COFTD[177] = 7.34966446E-04;
  COFTD[178] = -2.75774873E-07;
  COFTD[179] = 3.31594054E-11;
  COFTD[180] = -7.94773793E-02;
  COFTD[181] = 7.34284683E-04;
  COFTD[182] = -2.76722585E-07;
  COFTD[183] = 3.33622509E-11;
  COFTD[184] = -1.18886151E-01;
  COFTD[185] = 7.52624613E-04;
  COFTD[186] = -2.76446497E-07;
  COFTD[187] = 3.28093452E-11;
  COFTD[188] = -1.18886151E-01;
  COFTD[189] = 7.52624613E-04;
  COFTD[190] = -2.76446497E-07;
  COFTD[191] = 3.28093452E-11;
  COFTD[192] = -1.18886151E-01;
  COFTD[193] = 7.52624613E-04;
  COFTD[194] = -2.76446497E-07;
  COFTD[195] = 3.28093452E-11;
  COFTD[196] = -1.18886151E-01;
  COFTD[197] = 7.52624613E-04;
  COFTD[198] = -2.76446497E-07;
  COFTD[199] = 3.28093452E-11;
  COFTD[200] = -1.18886151E-01;
  COFTD[201] = 7.52624613E-04;
  COFTD[202] = -2.76446497E-07;
  COFTD[203] = 3.28093452E-11;
  COFTD[204] = -1.31634317E-01;
  COFTD[205] = 7.57660598E-04;
  COFTD[206] = -2.75710534E-07;
  COFTD[207] = 3.25350566E-11;
  COFTD[208] = -1.01086501E-01;
  COFTD[209] = 7.45272551E-04;
  COFTD[210] = -2.77097608E-07;
  COFTD[211] = 3.31326203E-11;
  COFTD[212] = -1.01086501E-01;
  COFTD[213] = 7.45272551E-04;
  COFTD[214] = -2.77097608E-07;
  COFTD[215] = 3.31326203E-11;
  COFTD[216] = 2.72542793E-01;
  COFTD[217] = 3.58110203E-04;
  COFTD[218] = -1.58413184E-07;
  COFTD[219] = 2.13026714E-11;
  COFTD[220] = -1.58593068E-01;
  COFTD[221] = -3.77534860E-05;
  COFTD[222] = 1.76801591E-08;
  COFTD[223] = -2.63675347E-12;
  COFTD[224] = 0.00000000E+00;
  COFTD[225] = 0.00000000E+00;
  COFTD[226] = 0.00000000E+00;
  COFTD[227] = 0.00000000E+00;
  COFTD[228] = 4.20466706E-01;
  COFTD[229] = -3.28747658E-06;
  COFTD[230] = 6.10307873E-09;
  COFTD[231] = -8.09348795E-13;
  COFTD[232] = 4.53476773E-01;
  COFTD[233] = 4.08538395E-05;
  COFTD[234] = -1.74068074E-08;
  COFTD[235] = 2.81096192E-12;
  COFTD[236] = 4.26891116E-01;
  COFTD[237] = -3.33770671E-06;
  COFTD[238] = 6.19632912E-09;
  COFTD[239] = -8.21715028E-13;
  COFTD[240] = 9.22530884E-02;
  COFTD[241] = 4.74226232E-04;
  COFTD[242] = -1.95750032E-07;
  COFTD[243] = 2.49969266E-11;
  COFTD[244] = 4.53623880E-01;
  COFTD[245] = 2.51671149E-05;
  COFTD[246] = -9.21171721E-09;
  COFTD[247] = 1.58881878E-12;
  COFTD[248] = 3.51115953E-01;
  COFTD[249] = 2.33655782E-04;
  COFTD[250] = -1.07224852E-07;
  COFTD[251] = 1.49680735E-11;
  COFTD[252] = 3.64045628E-01;
  COFTD[253] = 8.51846079E-05;
  COFTD[254] = -3.98779297E-08;
  COFTD[255] = 5.95436644E-12;
  COFTD[256] = 3.72387310E-01;
  COFTD[257] = 8.32172239E-05;
  COFTD[258] = -3.89127987E-08;
  COFTD[259] = 5.82900733E-12;
  COFTD[260] = 4.55232006E-01;
  COFTD[261] = 4.10119688E-05;
  COFTD[262] = -1.74741824E-08;
  COFTD[263] = 2.82184206E-12;
  COFTD[264] = 4.56889027E-01;
  COFTD[265] = 4.11612503E-05;
  COFTD[266] = -1.75377875E-08;
  COFTD[267] = 2.83211342E-12;
  COFTD[268] = 1.94871710E-01;
  COFTD[269] = 4.13928427E-04;
  COFTD[270] = -1.78164297E-07;
  COFTD[271] = 2.34363231E-11;
  COFTD[272] = 3.33962477E-01;
  COFTD[273] = 2.27613747E-04;
  COFTD[274] = -1.04334473E-07;
  COFTD[275] = 1.45440184E-11;
  COFTD[276] = 3.37242908E-01;
  COFTD[277] = 2.15794493E-04;
  COFTD[278] = -9.92077457E-08;
  COFTD[279] = 1.38812818E-11;
  COFTD[280] = 3.32405684E-01;
  COFTD[281] = 2.26552707E-04;
  COFTD[282] = -1.03848110E-07;
  COFTD[283] = 1.44762203E-11;
  COFTD[284] = 3.14868364E-01;
  COFTD[285] = 2.40739373E-04;
  COFTD[286] = -1.09728667E-07;
  COFTD[287] = 1.51936889E-11;
  COFTD[288] = 3.16701419E-01;
  COFTD[289] = 2.42140874E-04;
  COFTD[290] = -1.10367469E-07;
  COFTD[291] = 1.52821413E-11;
  COFTD[292] = 2.31980190E-01;
  COFTD[293] = 3.93733230E-04;
  COFTD[294] = -1.71621438E-07;
  COFTD[295] = 2.27979134E-11;
  COFTD[296] = 4.26648889E-01;
  COFTD[297] = 1.10257622E-04;
  COFTD[298] = -5.17014928E-08;
  COFTD[299] = 7.66702623E-12;
  COFTD[300] = 2.33002930E-01;
  COFTD[301] = 3.95469097E-04;
  COFTD[302] = -1.72378072E-07;
  COFTD[303] = 2.28984234E-11;
  COFTD[304] = 2.92929438E-01;
  COFTD[305] = 3.10046943E-04;
  COFTD[306] = -1.38859811E-07;
  COFTD[307] = 1.88830350E-11;
  COFTD[308] = 3.05186962E-01;
  COFTD[309] = 2.96540324E-04;
  COFTD[310] = -1.33447425E-07;
  COFTD[311] = 1.82309214E-11;
  COFTD[312] = 2.80770402E-01;
  COFTD[313] = 3.45295316E-04;
  COFTD[314] = -1.53328214E-07;
  COFTD[315] = 2.06879005E-11;
  COFTD[316] = 3.08749815E-01;
  COFTD[317] = 2.93187740E-04;
  COFTD[318] = -1.32106200E-07;
  COFTD[319] = 1.80703857E-11;
  COFTD[320] = 2.82354796E-01;
  COFTD[321] = 3.44157322E-04;
  COFTD[322] = -1.52901365E-07;
  COFTD[323] = 2.06397216E-11;
  COFTD[324] = 2.82726723E-01;
  COFTD[325] = 3.44610656E-04;
  COFTD[326] = -1.53102772E-07;
  COFTD[327] = 2.06669089E-11;
  COFTD[328] = 2.38184783E-01;
  COFTD[329] = 4.03501017E-04;
  COFTD[330] = -1.75898036E-07;
  COFTD[331] = 2.33680265E-11;
  COFTD[332] = 2.09859763E-01;
  COFTD[333] = 4.39448887E-04;
  COFTD[334] = -1.89297669E-07;
  COFTD[335] = 2.49156947E-11;
  COFTD[336] = 2.62100624E-01;
  COFTD[337] = 3.81644326E-04;
  COFTD[338] = -1.67824795E-07;
  COFTD[339] = 2.24546868E-11;
  COFTD[340] = 2.67936670E-01;
  COFTD[341] = 3.74638896E-04;
  COFTD[342] = -1.65130639E-07;
  COFTD[343] = 2.21378178E-11;
  COFTD[344] = 2.12060544E-01;
  COFTD[345] = 4.25505418E-04;
  COFTD[346] = -1.83725494E-07;
  COFTD[347] = 2.42259679E-11;
  COFTD[348] = 2.12443016E-01;
  COFTD[349] = 4.26272859E-04;
  COFTD[350] = -1.84056861E-07;
  COFTD[351] = 2.42696618E-11;
  COFTD[352] = 2.33636014E-01;
  COFTD[353] = 4.07413399E-04;
  COFTD[354] = -1.77310628E-07;
  COFTD[355] = 2.35247395E-11;
  COFTD[356] = 2.13687575E-01;
  COFTD[357] = 4.33052982E-04;
  COFTD[358] = -1.86881052E-07;
  COFTD[359] = 2.46316279E-11;
  COFTD[360] = 2.16582250E-01;
  COFTD[361] = 4.56845370E-04;
  COFTD[362] = -1.96712283E-07;
  COFTD[363] = 2.58837192E-11;
  COFTD[364] = 2.14007663E-01;
  COFTD[365] = 4.51414692E-04;
  COFTD[366] = -1.94373896E-07;
  COFTD[367] = 2.55760306E-11;
  COFTD[368] = 2.99203978E-01;
  COFTD[369] = 3.03159142E-04;
  COFTD[370] = -1.36108409E-07;
  COFTD[371] = 1.85522675E-11;
  COFTD[372] = 2.92167631E-01;
  COFTD[373] = 3.09240620E-04;
  COFTD[374] = -1.38498686E-07;
  COFTD[375] = 1.88339269E-11;
  COFTD[376] = 2.11069768E-01;
  COFTD[377] = 4.59608188E-04;
  COFTD[378] = -1.97556594E-07;
  COFTD[379] = 2.59605289E-11;
  COFTD[380] = 2.05726587E-01;
  COFTD[381] = 4.53871190E-04;
  COFTD[382] = -1.94951308E-07;
  COFTD[383] = 2.56044118E-11;
  COFTD[384] = 2.04595831E-01;
  COFTD[385] = 4.54673196E-04;
  COFTD[386] = -1.95218382E-07;
  COFTD[387] = 2.56318598E-11;
  COFTD[388] = 2.16849454E-01;
  COFTD[389] = 4.46454805E-04;
  COFTD[390] = -1.92495823E-07;
  COFTD[391] = 2.53547105E-11;
  COFTD[392] = 2.09370282E-01;
  COFTD[393] = 4.55907527E-04;
  COFTD[394] = -1.95965913E-07;
  COFTD[395] = 2.57515006E-11;
  COFTD[396] = 2.09254196E-01;
  COFTD[397] = 4.55654748E-04;
  COFTD[398] = -1.95857260E-07;
  COFTD[399] = 2.57372226E-11;
  COFTD[400] = 2.33012197E-01;
  COFTD[401] = 4.31675598E-04;
  COFTD[402] = -1.87225995E-07;
  COFTD[403] = 2.47732232E-11;
  COFTD[404] = 1.83133052E-01;
  COFTD[405] = 4.98248629E-04;
  COFTD[406] = -2.11648478E-07;
  COFTD[407] = 2.75708675E-11;
  COFTD[408] = 1.83133052E-01;
  COFTD[409] = 4.98248629E-04;
  COFTD[410] = -2.11648478E-07;
  COFTD[411] = 2.75708675E-11;
  COFTD[412] = 1.83133052E-01;
  COFTD[413] = 4.98248629E-04;
  COFTD[414] = -2.11648478E-07;
  COFTD[415] = 2.75708675E-11;
  COFTD[416] = 1.83133052E-01;
  COFTD[417] = 4.98248629E-04;
  COFTD[418] = -2.11648478E-07;
  COFTD[419] = 2.75708675E-11;
  COFTD[420] = 1.83133052E-01;
  COFTD[421] = 4.98248629E-04;
  COFTD[422] = -2.11648478E-07;
  COFTD[423] = 2.75708675E-11;
  COFTD[424] = 1.68767014E-01;
  COFTD[425] = 5.18906620E-04;
  COFTD[426] = -2.19073531E-07;
  COFTD[427] = 2.84128390E-11;
  COFTD[428] = 2.08813875E-01;
  COFTD[429] = 4.64764889E-04;
  COFTD[430] = -1.99534561E-07;
  COFTD[431] = 2.61969143E-11;
  COFTD[432] = 2.08813875E-01;
  COFTD[433] = 4.64764889E-04;
  COFTD[434] = -1.99534561E-07;
  COFTD[435] = 2.61969143E-11;
  COFTD[436] = 4.54133806E-01;
  COFTD[437] = 2.42489786E-05;
  COFTD[438] = -8.71976557E-09;
  COFTD[439] = 1.51469336E-12;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[55];
  amrex::Real SIG[55];
  amrex::Real wt[55];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: h
  Tci[0] = 1.316 * EPS[0];
  ai[0] = (5.55 * avogadro * avogadro * EPS[0] * boltzmann * 1e-24 * SIG[0] *
           SIG[0] * SIG[0]) /
          (wt[0] * wt[0]);
  bi[0] = 0.855 * avogadro * 1e-24 * SIG[0] * SIG[0] * SIG[0] / (wt[0]);
  acentric_i[0] = 0.0;

  // species 1: h2
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: o
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: o2
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: oh
  Tci[4] = 1.316 * EPS[4];
  ai[4] = (5.55 * avogadro * avogadro * EPS[4] * boltzmann * 1e-24 * SIG[4] *
           SIG[4] * SIG[4]) /
          (wt[4] * wt[4]);
  bi[4] = 0.855 * avogadro * 1e-24 * SIG[4] * SIG[4] * SIG[4] / (wt[4]);
  acentric_i[4] = 0.0;

  // species 5: h2o
  Tci[5] = 1.316 * EPS[5];
  ai[5] = (5.55 * avogadro * avogadro * EPS[5] * boltzmann * 1e-24 * SIG[5] *
           SIG[5] * SIG[5]) /
          (wt[5] * wt[5]);
  bi[5] = 0.855 * avogadro * 1e-24 * SIG[5] * SIG[5] * SIG[5] / (wt[5]);
  acentric_i[5] = 0.0;

  // species 6: co
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: co2
  Tci[7] = 1.316 * EPS[7];
  ai[7] = (5.55 * avogadro * avogadro * EPS[7] * boltzmann * 1e-24 * SIG[7] *
           SIG[7] * SIG[7]) /
          (wt[7] * wt[7]);
  bi[7] = 0.855 * avogadro * 1e-24 * SIG[7] * SIG[7] * SIG[7] / (wt[7]);
  acentric_i[7] = 0.0;

  // species 8: ch3
  Tci[8] = 1.316 * EPS[8];
  ai[8] = (5.55 * avogadro * avogadro * EPS[8] * boltzmann * 1e-24 * SIG[8] *
           SIG[8] * SIG[8]) /
          (wt[8] * wt[8]);
  bi[8] = 0.855 * avogadro * 1e-24 * SIG[8] * SIG[8] * SIG[8] / (wt[8]);
  acentric_i[8] = 0.0;

  // species 9: ch4
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: ho2
  Tci[10] = 1.316 * EPS[10];
  ai[10] = (5.55 * avogadro * avogadro * EPS[10] * boltzmann * 1e-24 * SIG[10] *
            SIG[10] * SIG[10]) /
           (wt[10] * wt[10]);
  bi[10] = 0.855 * avogadro * 1e-24 * SIG[10] * SIG[10] * SIG[10] / (wt[10]);
  acentric_i[10] = 0.0;

  // species 11: h2o2
  Tci[11] = 1.316 * EPS[11];
  ai[11] = (5.55 * avogadro * avogadro * EPS[11] * boltzmann * 1e-24 * SIG[11] *
            SIG[11] * SIG[11]) /
           (wt[11] * wt[11]);
  bi[11] = 0.855 * avogadro * 1e-24 * SIG[11] * SIG[11] * SIG[11] / (wt[11]);
  acentric_i[11] = 0.0;

  // species 12: ch2o
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: c2h6
  Tci[13] = 1.316 * EPS[13];
  ai[13] = (5.55 * avogadro * avogadro * EPS[13] * boltzmann * 1e-24 * SIG[13] *
            SIG[13] * SIG[13]) /
           (wt[13] * wt[13]);
  bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]);
  acentric_i[13] = 0.0;

  // species 14: c2h4
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: c2h5
  Tci[15] = 1.316 * EPS[15];
  ai[15] = (5.55 * avogadro * avogadro * EPS[15] * boltzmann * 1e-24 * SIG[15] *
            SIG[15] * SIG[15]) /
           (wt[15] * wt[15]);
  bi[15] = 0.855 * avogadro * 1e-24 * SIG[15] * SIG[15] * SIG[15] / (wt[15]);
  acentric_i[15] = 0.0;

  // species 16: c2h2
  Tci[16] = 1.316 * EPS[16];
  ai[16] = (5.55 * avogadro * avogadro * EPS[16] * boltzmann * 1e-24 * SIG[16] *
            SIG[16] * SIG[16]) /
           (wt[16] * wt[16]);
  bi[16] = 0.855 * avogadro * 1e-24 * SIG[16] * SIG[16] * SIG[16] / (wt[16]);
  acentric_i[16] = 0.0;

  // species 17: c2h3
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: ch2co
  Tci[18] = 1.316 * EPS[18];
  ai[18] = (5.55 * avogadro * avogadro * EPS[18] * boltzmann * 1e-24 * SIG[18] *
            SIG[18] * SIG[18]) /
           (wt[18] * wt[18]);
  bi[18] = 0.855 * avogadro * 1e-24 * SIG[18] * SIG[18] * SIG[18] / (wt[18]);
  acentric_i[18] = 0.0;

  // species 19: hcco
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: ch3cho
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: c3h4-a
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: c3h6
  Tci[22] = 1.316 * EPS[22];
  ai[22] = (5.55 * avogadro * avogadro * EPS[22] * boltzmann * 1e-24 * SIG[22] *
            SIG[22] * SIG[22]) /
           (wt[22] * wt[22]);
  bi[22] = 0.855 * avogadro * 1e-24 * SIG[22] * SIG[22] * SIG[22] / (wt[22]);
  acentric_i[22] = 0.0;

  // species 23: c4h6
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: nc3h7
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: c4h7
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: c4h8-1
  Tci[26] = 1.316 * EPS[26];
  ai[26] = (5.55 * avogadro * avogadro * EPS[26] * boltzmann * 1e-24 * SIG[26] *
            SIG[26] * SIG[26]) /
           (wt[26] * wt[26]);
  bi[26] = 0.855 * avogadro * 1e-24 * SIG[26] * SIG[26] * SIG[26] / (wt[26]);
  acentric_i[26] = 0.0;

  // species 27: ch3coch2
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: c2h5cho
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: c5h9
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: c5h10-1
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: ch3o2
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: ch3o2h
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: c2h3co
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;

  // species 34: c2h3cho
  Tci[34] = 1.316 * EPS[34];
  ai[34] = (5.55 * avogadro * avogadro * EPS[34] * boltzmann * 1e-24 * SIG[34] *
            SIG[34] * SIG[34]) /
           (wt[34] * wt[34]);
  bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]);
  acentric_i[34] = 0.0;

  // species 35: c4h8ooh1-3o2
  Tci[35] = 1.316 * EPS[35];
  ai[35] = (5.55 * avogadro * avogadro * EPS[35] * boltzmann * 1e-24 * SIG[35] *
            SIG[35] * SIG[35]) /
           (wt[35] * wt[35]);
  bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]);
  acentric_i[35] = 0.0;

  // species 36: pc4h9o2
  Tci[36] = 1.316 * EPS[36];
  ai[36] = (5.55 * avogadro * avogadro * EPS[36] * boltzmann * 1e-24 * SIG[36] *
            SIG[36] * SIG[36]) /
           (wt[36] * wt[36]);
  bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]);
  acentric_i[36] = 0.0;

  // species 37: c3h5-a
  Tci[37] = 1.316 * EPS[37];
  ai[37] = (5.55 * avogadro * avogadro * EPS[37] * boltzmann * 1e-24 * SIG[37] *
            SIG[37] * SIG[37]) /
           (wt[37] * wt[37]);
  bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]);
  acentric_i[37] = 0.0;

  // species 38: c3h3
  Tci[38] = 1.316 * EPS[38];
  ai[38] = (5.55 * avogadro * avogadro * EPS[38] * boltzmann * 1e-24 * SIG[38] *
            SIG[38] * SIG[38]) /
           (wt[38] * wt[38]);
  bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]);
  acentric_i[38] = 0.0;

  // species 39: nc4ket13
  Tci[39] = 1.316 * EPS[39];
  ai[39] = (5.55 * avogadro * avogadro * EPS[39] * boltzmann * 1e-24 * SIG[39] *
            SIG[39] * SIG[39]) /
           (wt[39] * wt[39]);
  bi[39] = 0.855 * avogadro * 1e-24 * SIG[39] * SIG[39] * SIG[39] / (wt[39]);
  acentric_i[39] = 0.0;

  // species 40: nc3h7cho
  Tci[40] = 1.316 * EPS[40];
  ai[40] = (5.55 * avogadro * avogadro * EPS[40] * boltzmann * 1e-24 * SIG[40] *
            SIG[40] * SIG[40]) /
           (wt[40] * wt[40]);
  bi[40] = 0.855 * avogadro * 1e-24 * SIG[40] * SIG[40] * SIG[40] / (wt[40]);
  acentric_i[40] = 0.0;

  // species 41: c2h5coch2
  Tci[41] = 1.316 * EPS[41];
  ai[41] = (5.55 * avogadro * avogadro * EPS[41] * boltzmann * 1e-24 * SIG[41] *
            SIG[41] * SIG[41]) /
           (wt[41] * wt[41]);
  bi[41] = 0.855 * avogadro * 1e-24 * SIG[41] * SIG[41] * SIG[41] / (wt[41]);
  acentric_i[41] = 0.0;

  // species 42: nc3h7coch2
  Tci[42] = 1.316 * EPS[42];
  ai[42] = (5.55 * avogadro * avogadro * EPS[42] * boltzmann * 1e-24 * SIG[42] *
            SIG[42] * SIG[42]) /
           (wt[42] * wt[42]);
  bi[42] = 0.855 * avogadro * 1e-24 * SIG[42] * SIG[42] * SIG[42] / (wt[42]);
  acentric_i[42] = 0.0;

  // species 43: nc4h9cho
  Tci[43] = 1.316 * EPS[43];
  ai[43] = (5.55 * avogadro * avogadro * EPS[43] * boltzmann * 1e-24 * SIG[43] *
            SIG[43] * SIG[43]) /
           (wt[43] * wt[43]);
  bi[43] = 0.855 * avogadro * 1e-24 * SIG[43] * SIG[43] * SIG[43] / (wt[43]);
  acentric_i[43] = 0.0;

  // species 44: nc4h9co
  Tci[44] = 1.316 * EPS[44];
  ai[44] = (5.55 * avogadro * avogadro * EPS[44] * boltzmann * 1e-24 * SIG[44] *
            SIG[44] * SIG[44]) /
           (wt[44] * wt[44]);
  bi[44] = 0.855 * avogadro * 1e-24 * SIG[44] * SIG[44] * SIG[44] / (wt[44]);
  acentric_i[44] = 0.0;

  // species 45: nc7h16
  Tci[45] = 1.316 * EPS[45];
  ai[45] = (5.55 * avogadro * avogadro * EPS[45] * boltzmann * 1e-24 * SIG[45] *
            SIG[45] * SIG[45]) /
           (wt[45] * wt[45]);
  bi[45] = 0.855 * avogadro * 1e-24 * SIG[45] * SIG[45] * SIG[45] / (wt[45]);
  acentric_i[45] = 0.0;

  // species 46: c7h15o2-1
  Tci[46] = 1.316 * EPS[46];
  ai[46] = (5.55 * avogadro * avogadro * EPS[46] * boltzmann * 1e-24 * SIG[46] *
            SIG[46] * SIG[46]) /
           (wt[46] * wt[46]);
  bi[46] = 0.855 * avogadro * 1e-24 * SIG[46] * SIG[46] * SIG[46] / (wt[46]);
  acentric_i[46] = 0.0;

  // species 47: c7h15o2-2
  Tci[47] = 1.316 * EPS[47];
  ai[47] = (5.55 * avogadro * avogadro * EPS[47] * boltzmann * 1e-24 * SIG[47] *
            SIG[47] * SIG[47]) /
           (wt[47] * wt[47]);
  bi[47] = 0.855 * avogadro * 1e-24 * SIG[47] * SIG[47] * SIG[47] / (wt[47]);
  acentric_i[47] = 0.0;

  // species 48: c7h15o2-3
  Tci[48] = 1.316 * EPS[48];
  ai[48] = (5.55 * avogadro * avogadro * EPS[48] * boltzmann * 1e-24 * SIG[48] *
            SIG[48] * SIG[48]) /
           (wt[48] * wt[48]);
  bi[48] = 0.855 * avogadro * 1e-24 * SIG[48] * SIG[48] * SIG[48] / (wt[48]);
  acentric_i[48] = 0.0;

  // species 49: c7h15o2-4
  Tci[49] = 1.316 * EPS[49];
  ai[49] = (5.55 * avogadro * avogadro * EPS[49] * boltzmann * 1e-24 * SIG[49] *
            SIG[49] * SIG[49]) /
           (wt[49] * wt[49]);
  bi[49] = 0.855 * avogadro * 1e-24 * SIG[49] * SIG[49] * SIG[49] / (wt[49]);
  acentric_i[49] = 0.0;

  // species 50: c7h14ooh4-3
  Tci[50] = 1.316 * EPS[50];
  ai[50] = (5.55 * avogadro * avogadro * EPS[50] * boltzmann * 1e-24 * SIG[50] *
            SIG[50] * SIG[50]) /
           (wt[50] * wt[50]);
  bi[50] = 0.855 * avogadro * 1e-24 * SIG[50] * SIG[50] * SIG[50] / (wt[50]);
  acentric_i[50] = 0.0;

  // species 51: c7h14ooh1-3o2
  Tci[51] = 1.316 * EPS[51];
  ai[51] = (5.55 * avogadro * avogadro * EPS[51] * boltzmann * 1e-24 * SIG[51] *
            SIG[51] * SIG[51]) /
           (wt[51] * wt[51]);
  bi[51] = 0.855 * avogadro * 1e-24 * SIG[51] * SIG[51] * SIG[51] / (wt[51]);
  acentric_i[51] = 0.0;

  // species 52: c7h14o1-3
  Tci[52] = 1.316 * EPS[52];
  ai[52] = (5.55 * avogadro * avogadro * EPS[52] * boltzmann * 1e-24 * SIG[52] *
            SIG[52] * SIG[52]) /
           (wt[52] * wt[52]);
  bi[52] = 0.855 * avogadro * 1e-24 * SIG[52] * SIG[52] * SIG[52] / (wt[52]);
  acentric_i[52] = 0.0;

  // species 53: c7h14o2-4
  Tci[53] = 1.316 * EPS[53];
  ai[53] = (5.55 * avogadro * avogadro * EPS[53] * boltzmann * 1e-24 * SIG[53] *
            SIG[53] * SIG[53]) /
           (wt[53] * wt[53]);
  bi[53] = 0.855 * avogadro * 1e-24 * SIG[53] * SIG[53] * SIG[53] / (wt[53]);
  acentric_i[53] = 0.0;

  // species 54: n2
  Tci[54] = 1.316 * EPS[54];
  ai[54] = (5.55 * avogadro * avogadro * EPS[54] * boltzmann * 1e-24 * SIG[54] *
            SIG[54] * SIG[54]) /
           (wt[54] * wt[54]);
  bi[54] = 0.855 * avogadro * 1e-24 * SIG[54] * SIG[54] * SIG[54] / (wt[54]);
  acentric_i[54] = 0.0;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif

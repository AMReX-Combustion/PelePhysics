#include "mechanism.H"
const int rmap[560] = {
  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,  12,  13,  14,
  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,
  30,  31,  32,  33,  34,  35,  36,  37,  38,  39,  40,  41,  42,  43,  44,
  45,  46,  47,  48,  49,  50,  51,  52,  53,  54,  55,  56,  57,  58,  59,
  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  74,
  75,  76,  77,  78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,
  90,  91,  92,  93,  94,  95,  96,  97,  98,  99,  100, 101, 102, 103, 104,
  105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,
  120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
  135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
  150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
  165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
  180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
  195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
  210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
  225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
  240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
  255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
  270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
  285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
  300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314,
  315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329,
  330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344,
  345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
  360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
  375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389,
  390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404,
  405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419,
  420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
  435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449,
  450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
  465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
  480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494,
  495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
  510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524,
  525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
  540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
  555, 556, 557, 558, 559};

// Returns 0-based map of reaction order
void
GET_RMAP(int* _rmap)
{
  for (int j = 0; j < 560; ++j) {
    _rmap[j] = rmap[j];
  }
}

// Returns a count of species in a reaction, and their indices
// and stoichiometric coefficients. (Eq 50)
void
CKINU(const int i, int& nspec, int ki[], int nu[])
{
  const int ns[560] = {
    3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
    3, 3, 2, 2, 2, 2, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 3, 3, 6, 8, 8, 8, 8, 8, 8,
    4, 4, 4, 3, 4, 4, 3, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4,
    4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    3, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4,
    3, 3, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 3, 3, 4, 4, 5, 4, 4, 4, 4, 3, 3,
    4, 3, 3, 4, 4, 4, 3, 4, 2, 4, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 5, 4, 4, 2, 4, 4, 5, 4, 5, 4, 4, 3, 4, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 5,
    4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 3, 3, 4, 4, 4, 4, 4, 3, 4, 4, 2, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4,
    4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3,
    4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 5, 4, 4, 5,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4,
    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 4, 4,
    4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
    4, 3, 4, 4, 4, 4, 4, 4, 4, 4};
  const int kiv[4480] = {
    13, 12, 15, 0,  0,  0,  0,  0,  14, 18, 0,  0,  0,  0,  0,  0,  7,  5,  19,
    0,  0,  0,  0,  0,  46, 7,  55, 0,  0,  0,  0,  0,  13, 49, 19, 0,  0,  0,
    0,  0,  47, 13, 11, 0,  0,  0,  0,  0,  47, 7,  22, 0,  0,  0,  0,  0,  19,
    13, 51, 0,  0,  0,  0,  0,  19, 13, 50, 0,  0,  0,  0,  0,  11, 13, 2,  0,
    0,  0,  0,  0,  11, 6,  0,  0,  0,  0,  0,  0,  53, 13, 8,  0,  0,  0,  0,
    0,  54, 8,  13, 0,  0,  0,  0,  0,  22, 13, 57, 0,  0,  0,  0,  0,  54, 13,
    1,  0,  0,  0,  0,  0,  54, 11, 3,  0,  0,  0,  0,  0,  11, 7,  56, 0,  0,
    0,  0,  0,  1,  13, 21, 0,  0,  0,  0,  0,  21, 13, 6,  0,  0,  0,  0,  0,
    13, 24, 3,  0,  0,  0,  0,  0,  3,  13, 59, 0,  0,  0,  0,  0,  13, 26, 4,
    0,  0,  0,  0,  0,  13, 33, 32, 0,  0,  0,  0,  0,  13, 29, 35, 0,  0,  0,
    0,  0,  29, 16, 30, 0,  0,  0,  0,  0,  7,  16, 20, 0,  0,  0,  0,  0,  36,
    44, 16, 0,  0,  0,  0,  0,  13, 5,  0,  0,  0,  0,  0,  0,  13, 5,  0,  0,
    0,  0,  0,  0,  13, 5,  0,  0,  0,  0,  0,  0,  13, 5,  0,  0,  0,  0,  0,
    0,  13, 14, 17, 0,  0,  0,  0,  0,  13, 16, 14, 0,  0,  0,  0,  0,  16, 12,
    0,  0,  0,  0,  0,  0,  49, 7,  13, 0,  0,  0,  0,  0,  49, 7,  13, 0,  0,
    0,  0,  0,  56, 11, 7,  0,  0,  0,  0,  0,  31, 64, 13, 0,  0,  0,  0,  0,
    31, 64, 13, 0,  0,  0,  0,  0,  31, 37, 0,  0,  0,  0,  0,  0,  38, 7,  34,
    0,  0,  0,  0,  0,  40, 7,  62, 0,  0,  0,  0,  0,  41, 45, 44, 0,  0,  0,
    0,  0,  0,  1,  3,  11, 13, 4,  0,  0,  13, 0,  1,  3,  11, 13, 5,  4,  11,
    0,  1,  3,  11, 2,  13, 4,  14, 0,  1,  3,  11, 13, 17, 4,  12, 0,  1,  3,
    11, 13, 15, 4,  15, 0,  1,  3,  11, 13, 18, 4,  16, 0,  1,  3,  11, 13, 14,
    4,  13, 12, 16, 14, 0,  0,  0,  0,  5,  16, 13, 14, 0,  0,  0,  0,  5,  14,
    13, 17, 0,  0,  0,  0,  14, 17, 16, 0,  0,  0,  0,  0,  5,  12, 13, 15, 0,
    0,  0,  0,  13, 15, 17, 16, 0,  0,  0,  0,  13, 15, 14, 0,  0,  0,  0,  0,
    15, 16, 12, 14, 0,  0,  0,  0,  15, 18, 12, 0,  0,  0,  0,  0,  15, 18, 12,
    0,  0,  0,  0,  0,  15, 14, 17, 12, 0,  0,  0,  0,  15, 14, 17, 12, 0,  0,
    0,  0,  15, 14, 17, 12, 0,  0,  0,  0,  15, 14, 17, 12, 0,  0,  0,  0,  15,
    14, 17, 12, 0,  0,  0,  0,  13, 18, 5,  15, 0,  0,  0,  0,  13, 18, 17, 14,
    0,  0,  0,  0,  18, 16, 15, 14, 0,  0,  0,  0,  18, 14, 17, 15, 0,  0,  0,
    0,  18, 14, 17, 15, 0,  0,  0,  0,  7,  14, 20, 13, 0,  0,  0,  0,  7,  14,
    20, 13, 0,  0,  0,  0,  7,  12, 20, 16, 0,  0,  0,  0,  7,  15, 20, 14, 0,
    0,  0,  0,  13, 49, 7,  5,  0,  0,  0,  0,  49, 16, 7,  14, 0,  0,  0,  0,
    49, 16, 20, 13, 0,  0,  0,  0,  49, 14, 7,  17, 0,  0,  0,  0,  49, 12, 7,
    15, 0,  0,  0,  0,  45, 14, 7,  13, 0,  0,  0,  0,  45, 12, 7,  16, 0,  0,
    0,  0,  46, 13, 45, 5,  0,  0,  0,  0,  46, 16, 7,  13, 0,  0,  0,  0,  46,
    14, 13, 49, 0,  0,  0,  0,  46, 5,  47, 13, 0,  0,  0,  0,  46, 17, 19, 13,
    0,  0,  0,  0,  46, 12, 49, 16, 0,  0,  0,  0,  46, 20, 7,  49, 0,  0,  0,
    0,  47, 16, 13, 49, 0,  0,  0,  0,  47, 14, 19, 13, 0,  0,  0,  0,  47, 14,
    46, 17, 0,  0,  0,  0,  47, 5,  11, 13, 0,  0,  0,  0,  47, 12, 49, 14, 0,
    0,  0,  0,  47, 12, 20, 13, 0,  0,  0,  0,  47, 15, 19, 14, 0,  0,  0,  0,
    45, 47, 53, 13, 0,  0,  0,  0,  46, 47, 8,  13, 0,  0,  0,  0,  47, 8,  5,
    0,  0,  0,  0,  0,  48, 44, 47, 44, 0,  0,  0,  0,  48, 13, 46, 5,  0,  0,
    0,  0,  48, 16, 7,  5,  0,  0,  0,  0,  48, 16, 13, 49, 0,  0,  0,  0,  48,
    14, 19, 13, 0,  0,  0,  0,  48, 5,  11, 13, 0,  0,  0,  0,  48, 12, 7,  13,
    14, 0,  0,  0,  48, 12, 7,  17, 0,  0,  0,  0,  48, 17, 47, 17, 0,  0,  0,
    0,  48, 7,  47, 7,  0,  0,  0,  0,  48, 20, 47, 20, 0,  0,  0,  0,  48, 20,
    19, 7,  0,  0,  0,  0,  19, 13, 5,  49, 0,  0,  0,  0,  19, 16, 49, 14, 0,
    0,  0,  0,  19, 14, 17, 49, 0,  0,  0,  0,  19, 12, 49, 15, 0,  0,  0,  0,
    19, 15, 18, 49, 0,  0,  0,  0,  46, 19, 22, 13, 0,  0,  0,  0,  11, 16, 19,
    13, 0,  0,  0,  0,  11, 14, 47, 17, 0,  0,  0,  0,  11, 14, 48, 17, 0,  0,
    0,  0,  11, 12, 50, 16, 0,  0,  0,  0,  11, 12, 19, 14, 0,  0,  0,  0,  11,
    15, 2,  12, 0,  0,  0,  0,  11, 15, 50, 14, 0,  0,  0,  0,  11, 18, 2,  15,
    0,  0,  0,  0,  45, 11, 8,  13, 0,  0,  0,  0,  46, 11, 54, 13, 0,  0,  0,
    0,  11, 49, 2,  7,  0,  0,  0,  0,  19, 11, 2,  49, 0,  0,  0,  0,  47, 11,
    1,  13, 0,  0,  0,  0,  48, 11, 1,  13, 0,  0,  0,  0,  11, 21, 13, 0,  0,
    0,  0,  0,  11, 55, 1,  7,  0,  0,  0,  0,  53, 11, 23, 13, 0,  0,  0,  0,
    50, 13, 51, 13, 0,  0,  0,  0,  50, 13, 19, 5,  0,  0,  0,  0,  50, 13, 11,
    14, 0,  0,  0,  0,  50, 13, 48, 17, 0,  0,  0,  0,  50, 16, 19, 14, 0,  0,
    0,  0,  50, 14, 19, 17, 0,  0,  0,  0,  50, 12, 19, 15, 0,  0,  0,  0,  51,
    13, 19, 5,  0,  0,  0,  0,  51, 13, 11, 14, 0,  0,  0,  0,  51, 13, 48, 17,
    0,  0,  0,  0,  51, 16, 19, 14, 0,  0,  0,  0,  51, 14, 19, 17, 0,  0,  0,
    0,  51, 12, 19, 15, 0,  0,  0,  0,  2,  13, 11, 5,  0,  0,  0,  0,  2,  16,
    11, 14, 0,  0,  0,  0,  2,  14, 11, 17, 0,  0,  0,  0,  46, 2,  1,  13, 0,
    0,  0,  0,  47, 2,  11, 0,  0,  0,  0,  0,  48, 2,  11, 0,  0,  0,  0,  0,
    53, 2,  8,  11, 0,  0,  0,  0,  53, 16, 46, 7,  0,  0,  0,  0,  53, 14, 13,
    55, 0,  0,  0,  0,  53, 12, 7,  49, 0,  0,  0,  0,  53, 5,  8,  13, 0,  0,
    0,  0,  52, 13, 46, 7,  0,  0,  0,  0,  52, 16, 7,  0,  0,  0,  0,  0,  52,
    14, 7,  13, 0,  0,  0,  0,  52, 12, 7,  16, 0,  0,  0,  0,  13, 55, 48, 7,
    0,  0,  0,  0,  55, 16, 7,  13, 0,  0,  0,  0,  55, 12, 7,  14, 0,  0,  0,
    0,  46, 55, 8,  7,  0,  0,  0,  0,  47, 55, 54, 7,  0,  0,  0,  0,  55, 8,
    7,  0,  0,  0,  0,  0,  55, 14, 52, 17, 0,  0,  0,  0,  8,  16, 53, 14, 0,
    0,  0,  0,  8,  16, 47, 7,  0,  0,  0,  0,  8,  16, 13, 55, 0,  0,  0,  0,
    8,  14, 22, 13, 0,  0,  0,  0,  8,  14, 53, 17, 0,  0,  0,  0,  8,  14, 11,
    7,  0,  0,  0,  0,  8,  49, 54, 7,  0,  0,  0,  0,  8,  47, 23, 13, 0,  0,
    0,  0,  8,  48, 23, 13, 0,  0,  0,  0,  8,  55, 23, 7,  0,  0,  0,  0,  8,
    11, 13, 9,  0,  0,  0,  0,  8,  11, 13, 10, 0,  0,  0,  0,  8,  11, 58, 0,
    0,  0,  0,  0,  8,  11, 24, 0,  0,  0,  0,  0,  22, 13, 5,  55, 0,  0,  0,
    0,  22, 13, 11, 7,  0,  0,  0,  0,  22, 16, 55, 14, 0,  0,  0,  0,  22, 16,
    47, 20, 0,  0,  0,  0,  22, 14, 17, 55, 0,  0,  0,  0,  54, 13, 8,  5,  0,
    0,  0,  0,  54, 16, 22, 13, 0,  0,  0,  0,  54, 16, 11, 7,  0,  0,  0,  0,
    54, 14, 8,  17, 0,  0,  0,  0,  54, 12, 8,  15, 0,  0,  0,  0,  54, 12, 57,
    16, 0,  0,  0,  0,  54, 12, 19, 49, 0,  0,  0,  0,  54, 15, 57, 14, 0,  0,
    0,  0,  54, 18, 1,  15, 0,  0,  0,  0,  54, 49, 1,  7,  0,  0,  0,  0,  54,
    49, 25, 0,  0,  0,  0,  0,  54, 11, 8,  2,  0,  0,  0,  0,  54, 11, 13, 24,
    0,  0,  0,  0,  54, 8,  1,  0,  0,  0,  0,  0,  57, 11, 7,  0,  0,  0,  0,
    0,  57, 13, 56, 13, 0,  0,  0,  0,  57, 13, 11, 49, 0,  0,  0,  0,  57, 13,
    22, 5,  0,  0,  0,  0,  57, 16, 22, 14, 0,  0,  0,  0,  57, 14, 22, 17, 0,
    0,  0,  0,  57, 12, 22, 15, 0,  0,  0,  0,  57, 12, 19, 7,  14, 0,  0,  0,
    56, 13, 11, 49, 0,  0,  0,  0,  56, 16, 22, 14, 0,  0,  0,  0,  56, 16, 11,
    20, 0,  0,  0,  0,  56, 14, 22, 17, 0,  0,  0,  0,  56, 15, 11, 20, 14, 0,
    0,  0,  1,  13, 54, 5,  0,  0,  0,  0,  1,  16, 54, 14, 0,  0,  0,  0,  1,
    16, 11, 49, 0,  0,  0,  0,  1,  16, 47, 19, 0,  0,  0,  0,  1,  14, 54, 17,
    0,  0,  0,  0,  1,  49, 21, 7,  0,  0,  0,  0,  1,  46, 13, 10, 0,  0,  0,
    0,  1,  46, 13, 9,  0,  0,  0,  0,  1,  47, 13, 24, 0,  0,  0,  0,  1,  48,
    13, 24, 0,  0,  0,  0,  1,  11, 54, 2,  0,  0,  0,  0,  1,  12, 54, 15, 0,
    0,  0,  0,  21, 13, 1,  5,  0,  0,  0,  0,  21, 16, 19, 11, 0,  0,  0,  0,
    21, 12, 1,  15, 0,  0,  0,  0,  21, 15, 6,  12, 0,  0,  0,  0,  21, 15, 1,
    18, 0,  0,  0,  0,  21, 15, 19, 11, 14, 0,  0,  0,  21, 18, 6,  15, 0,  0,
    0,  0,  54, 21, 11, 24, 0,  0,  0,  0,  6,  13, 21, 5,  0,  0,  0,  0,  6,
    16, 21, 14, 0,  0,  0,  0,  6,  14, 21, 17, 0,  0,  0,  0,  6,  48, 21, 11,
    0,  0,  0,  0,  6,  11, 21, 2,  0,  0,  0,  0,  23, 13, 9,  0,  0,  0,  0,
    0,  23, 13, 10, 0,  0,  0,  0,  0,  23, 16, 53, 19, 0,  0,  0,  0,  23, 12,
    22, 49, 0,  0,  0,  0,  23, 15, 54, 7,  14, 0,  0,  0,  23, 15, 12, 10, 0,
    0,  0,  0,  23, 15, 12, 9,  0,  0,  0,  0,  23, 49, 7,  10, 0,  0,  0,  0,
    23, 49, 7,  9,  0,  0,  0,  0,  8,  23, 27, 0,  0,  0,  0,  0,  23, 60, 13,
    0,  0,  0,  0,  0,  13, 10, 23, 5,  0,  0,  0,  0,  13, 10, 58, 0,  0,  0,
    0,  0,  13, 10, 24, 0,  0,  0,  0,  0,  16, 10, 1,  7,  0,  0,  0,  0,  14,
    10, 23, 17, 0,  0,  0,  0,  11, 10, 23, 2,  0,  0,  0,  0,  11, 10, 26, 0,
    0,  0,  0,  0,  53, 10, 8,  23, 0,  0,  0,  0,  9,  10, 0,  0,  0,  0,  0,
    0,  13, 9,  13, 10, 0,  0,  0,  0,  13, 9,  58, 0,  0,  0,  0,  0,  13, 9,
    24, 0,  0,  0,  0,  0,  13, 9,  23, 5,  0,  0,  0,  0,  23, 9,  23, 10, 0,
    0,  0,  0,  16, 9,  11, 55, 0,  0,  0,  0,  16, 9,  1,  7,  0,  0,  0,  0,
    14, 9,  23, 17, 0,  0,  0,  0,  53, 9,  8,  23, 0,  0,  0,  0,  11, 9,  23,
    2,  0,  0,  0,  0,  13, 24, 5,  10, 0,  0,  0,  0,  16, 24, 25, 13, 0,  0,
    0,  0,  14, 24, 25, 13, 0,  0,  0,  0,  14, 24, 17, 10, 0,  0,  0,  0,  12,
    24, 15, 10, 0,  0,  0,  0,  12, 24, 19, 56, 0,  0,  0,  0,  12, 24, 25, 14,
    0,  0,  0,  0,  15, 24, 3,  12, 0,  0,  0,  0,  15, 24, 54, 19, 14, 0,  0,
    0,  49, 24, 3,  7,  0,  0,  0,  0,  11, 24, 2,  10, 0,  0,  0,  0,  24, 58,
    0,  0,  0,  0,  0,  0,  58, 13, 5,  9,  0,  0,  0,  0,  58, 16, 22, 11, 0,
    0,  0,  0,  58, 14, 22, 11, 13, 0,  0,  0,  58, 12, 19, 56, 0,  0,  0,  0,
    58, 15, 22, 11, 14, 0,  0,  0,  58, 49, 3,  7,  0,  0,  0,  0,  11, 58, 2,
    9,  0,  0,  0,  0,  11, 58, 4,  0,  0,  0,  0,  0,  3,  13, 1,  11, 0,  0,
    0,  0,  3,  13, 5,  24, 0,  0,  0,  0,  3,  13, 58, 5,  0,  0,  0,  0,  3,
    16, 22, 11, 13, 0,  0,  0,  3,  16, 25, 13, 0,  0,  0,  0,  3,  16, 21, 49,
    0,  0,  0,  0,  3,  16, 14, 24, 0,  0,  0,  0,  3,  16, 58, 14, 0,  0,  0,
    0,  3,  14, 17, 24, 0,  0,  0,  0,  3,  14, 58, 17, 0,  0,  0,  0,  3,  15,
    18, 24, 0,  0,  0,  0,  3,  11, 2,  24, 0,  0,  0,  0,  3,  11, 58, 2,  0,
    0,  0,  0,  25, 13, 1,  49, 0,  0,  0,  0,  25, 16, 54, 7,  14, 0,  0,  0,
    25, 16, 22, 19, 0,  0,  0,  0,  25, 14, 54, 7,  17, 0,  0,  0,  13, 59, 21,
    11, 0,  0,  0,  0,  13, 59, 3,  5,  0,  0,  0,  0,  14, 59, 3,  17, 0,  0,
    0,  0,  12, 59, 3,  15, 0,  0,  0,  0,  11, 59, 3,  2,  0,  0,  0,  0,  13,
    26, 11, 58, 0,  0,  0,  0,  16, 26, 19, 58, 0,  0,  0,  0,  14, 26, 51, 58,
    0,  0,  0,  0,  15, 26, 19, 58, 14, 0,  0,  0,  12, 26, 22, 19, 11, 0,  0,
    0,  12, 26, 1,  22, 14, 0,  0,  0,  13, 4,  5,  26, 0,  0,  0,  0,  13, 4,
    3,  11, 0,  0,  0,  0,  16, 4,  22, 11, 0,  0,  0,  0,  16, 4,  49, 59, 0,
    0,  0,  0,  16, 4,  14, 26, 0,  0,  0,  0,  14, 4,  17, 26, 0,  0,  0,  0,
    15, 4,  18, 26, 0,  0,  0,  0,  15, 4,  3,  19, 14, 0,  0,  0,  12, 4,  15,
    26, 0,  0,  0,  0,  11, 4,  2,  26, 0,  0,  0,  0,  60, 12, 28, 16, 0,  0,
    0,  0,  60, 16, 27, 7,  0,  0,  0,  0,  60, 14, 28, 13, 0,  0,  0,  0,  60,
    15, 28, 14, 0,  0,  0,  0,  28, 13, 27, 49, 0,  0,  0,  0,  28, 27, 7,  0,
    0,  0,  0,  0,  24, 26, 10, 4,  0,  0,  0,  0,  24, 4,  3,  26, 0,  0,  0,
    0,  24, 3,  10, 0,  0,  0,  0,  0,  3,  24, 59, 0,  0,  0,  0,  0,  13, 4,
    5,  61, 0,  0,  0,  0,  11, 4,  2,  61, 0,  0,  0,  0,  14, 4,  17, 61, 0,
    0,  0,  0,  16, 4,  14, 61, 0,  0,  0,  0,  15, 61, 12, 4,  0,  0,  0,  0,
    61, 11, 9,  0,  0,  0,  0,  0,  13, 26, 2,  10, 0,  0,  0,  0,  24, 26, 4,
    9,  0,  0,  0,  0,  61, 26, 0,  0,  0,  0,  0,  0,  13, 32, 5,  33, 0,  0,
    0,  0,  32, 16, 33, 14, 0,  0,  0,  0,  32, 14, 17, 33, 0,  0,  0,  0,  15,
    32, 18, 33, 0,  0,  0,  0,  5,  34, 13, 33, 0,  0,  0,  0,  33, 16, 13, 35,
    0,  0,  0,  0,  33, 16, 34, 14, 0,  0,  0,  0,  33, 16, 34, 14, 0,  0,  0,
    0,  33, 14, 17, 34, 0,  0,  0,  0,  15, 33, 32, 12, 0,  0,  0,  0,  15, 33,
    17, 35, 0,  0,  0,  0,  15, 33, 17, 35, 0,  0,  0,  0,  33, 12, 35, 14, 0,
    0,  0,  0,  33, 34, 32, 0,  0,  0,  0,  0,  34, 33, 62, 32, 0,  0,  0,  0,
    62, 33, 13, 44, 0,  0,  0,  0,  35, 33, 32, 29, 0,  0,  0,  0,  33, 29, 17,
    44, 0,  0,  0,  0,  33, 29, 63, 14, 0,  0,  0,  0,  33, 30, 17, 36, 0,  0,
    0,  0,  13, 34, 5,  62, 0,  0,  0,  0,  34, 16, 13, 29, 0,  0,  0,  0,  34,
    14, 13, 35, 0,  0,  0,  0,  34, 14, 17, 62, 0,  0,  0,  0,  34, 12, 35, 16,
    0,  0,  0,  0,  34, 12, 29, 14, 0,  0,  0,  0,  34, 62, 33, 0,  0,  0,  0,
    0,  62, 34, 13, 44, 0,  0,  0,  0,  34, 29, 13, 36, 0,  0,  0,  0,  34, 29,
    44, 14, 0,  0,  0,  0,  34, 30, 36, 14, 0,  0,  0,  0,  34, 30, 35, 29, 0,
    0,  0,  0,  62, 14, 13, 29, 0,  0,  0,  0,  62, 12, 29, 16, 0,  0,  0,  0,
    62, 29, 44, 16, 0,  0,  0,  0,  63, 13, 44, 0,  0,  0,  0,  0,  13, 63, 5,
    44, 0,  0,  0,  0,  63, 16, 13, 36, 0,  0,  0,  0,  63, 16, 44, 14, 0,  0,
    0,  0,  63, 16, 34, 29, 0,  0,  0,  0,  63, 14, 17, 44, 0,  0,  0,  0,  63,
    12, 15, 44, 0,  0,  0,  0,  34, 63, 44, 33, 0,  0,  0,  0,  33, 63, 44, 32,
    0,  0,  0,  0,  63, 29, 35, 44, 0,  0,  0,  0,  13, 35, 5,  29, 0,  0,  0,
    0,  35, 16, 29, 14, 0,  0,  0,  0,  35, 14, 17, 29, 0,  0,  0,  0,  35, 12,
    15, 29, 0,  0,  0,  0,  35, 17, 36, 0,  0,  0,  0,  0,  15, 29, 30, 14, 0,
    0,  0,  0,  13, 30, 29, 14, 0,  0,  0,  0,  30, 16, 29, 12, 0,  0,  0,  0,
    30, 29, 12, 0,  0,  0,  0,  0,  13, 36, 44, 14, 0,  0,  0,  0,  36, 16, 29,
    0,  0,  0,  0,  0,  36, 16, 44, 12, 0,  0,  0,  0,  36, 14, 15, 44, 0,  0,
    0,  0,  36, 14, 35, 29, 0,  0,  0,  0,  36, 29, 44, 30, 0,  0,  0,  0,  64,
    5,  13, 31, 0,  0,  0,  0,  31, 16, 13, 40, 0,  0,  0,  0,  31, 16, 7,  34,
    0,  0,  0,  0,  31, 16, 64, 14, 0,  0,  0,  0,  31, 14, 64, 17, 0,  0,  0,
    0,  31, 14, 13, 38, 0,  0,  0,  0,  31, 14, 7,  33, 0,  0,  0,  0,  31, 12,
    64, 15, 0,  0,  0,  0,  13, 37, 13, 31, 0,  0,  0,  0,  37, 16, 7,  34, 0,
    0,  0,  0,  37, 14, 13, 38, 0,  0,  0,  0,  37, 14, 64, 17, 0,  0,  0,  0,
    64, 16, 7,  62, 0,  0,  0,  0,  64, 14, 13, 40, 0,  0,  0,  0,  64, 12, 40,
    16, 0,  0,  0,  0,  64, 12, 7,  29, 0,  0,  0,  0,  64, 29, 62, 40, 0,  0,
    0,  0,  64, 30, 40, 29, 0,  0,  0,  0,  64, 30, 7,  36, 0,  0,  0,  0,  64,
    30, 20, 44, 0,  0,  0,  0,  64, 35, 31, 29, 0,  0,  0,  0,  64, 38, 31, 40,
    0,  0,  0,  0,  64, 38, 7,  42, 0,  0,  0,  0,  64, 40, 7,  41, 0,  0,  0,
    0,  13, 38, 7,  33, 0,  0,  0,  0,  13, 38, 5,  40, 0,  0,  0,  0,  38, 16,
    40, 14, 0,  0,  0,  0,  38, 16, 20, 34, 0,  0,  0,  0,  38, 16, 7,  35, 0,
    0,  0,  0,  38, 14, 17, 40, 0,  0,  0,  0,  38, 15, 18, 40, 0,  0,  0,  0,
    38, 12, 20, 35, 0,  0,  0,  0,  17, 38, 20, 32, 0,  0,  0,  0,  38, 34, 40,
    33, 0,  0,  0,  0,  39, 31, 16, 0,  0,  0,  0,  0,  13, 39, 31, 14, 0,  0,
    0,  0,  39, 16, 49, 29, 0,  0,  0,  0,  39, 16, 40, 14, 0,  0,  0,  0,  39,
    14, 49, 35, 0,  0,  0,  0,  64, 39, 31, 40, 0,  0,  0,  0,  39, 40, 7,  31,
    29, 0,  0,  0,  13, 40, 7,  34, 0,  0,  0,  0,  40, 16, 7,  29, 0,  0,  0,
    0,  40, 14, 7,  13, 29, 0,  0,  0,  15, 40, 38, 12, 0,  0,  0,  0,  40, 12,
    20, 29, 0,  0,  0,  0,  40, 29, 7,  36, 0,  0,  0,  0,  40, 29, 20, 44, 0,
    0,  0,  0,  40, 30, 7,  29, 0,  0,  0,  0,  40, 30, 20, 36, 0,  0,  0,  0,
    35, 40, 38, 29, 0,  0,  0,  0,  40, 32, 38, 33, 0,  0,  0,  0,  62, 40, 7,
    44, 0,  0,  0,  0,  40, 7,  44, 0,  0,  0,  0,  0,  7,  30, 20, 29, 0,  0,
    0,  0,  7,  36, 20, 44, 0,  0,  0,  0,  20, 62, 7,  29, 0,  0,  0,  0,  64,
    20, 7,  40, 0,  0,  0,  0,  19, 64, 31, 49, 0,  0,  0,  0,  19, 40, 49, 38,
    0,  0,  0,  0,  49, 29, 7,  35, 0,  0,  0,  0,  49, 35, 19, 29, 0,  0,  0,
    0,  49, 30, 20, 13, 29, 0,  0,  0,  49, 30, 7,  29, 14, 0,  0,  0,  49, 40,
    7,  38, 0,  0,  0,  0,  2,  33, 11, 32, 0,  0,  0,  0,  2,  64, 11, 31, 0,
    0,  0,  0,  2,  40, 11, 38, 0,  0,  0,  0,  11, 33, 2,  34, 0,  0,  0,  0,
    11, 33, 47, 32, 0,  0,  0,  0,  11, 34, 43, 13, 0,  0,  0,  0,  11, 34, 2,
    62, 0,  0,  0,  0,  11, 62, 13, 65, 0,  0,  0,  0,  11, 35, 2,  29, 0,  0,
    0,  0,  11, 29, 17, 31, 0,  0,  0,  0,  11, 29, 65, 14, 0,  0,  0,  0,  11,
    30, 50, 29, 0,  0,  0,  0,  47, 44, 31, 34, 0,  0,  0,  0,  47, 62, 13, 31,
    0,  0,  0,  0,  47, 29, 13, 39, 0,  0,  0,  0,  47, 29, 31, 14, 0,  0,  0,
    0,  47, 30, 19, 29, 0,  0,  0,  0,  48, 29, 31, 14, 0,  0,  0,  0,  48, 29,
    47, 29, 0,  0,  0,  0,  48, 36, 19, 44, 0,  0,  0,  0,  46, 44, 13, 41, 0,
    0,  0,  0,  46, 44, 42, 0,  0,  0,  0,  0,  46, 32, 13, 65, 0,  0,  0,  0,
    46, 62, 64, 13, 0,  0,  0,  0,  46, 29, 7,  34, 0,  0,  0,  0,  46, 29, 13,
    40, 0,  0,  0,  0,  46, 29, 31, 16, 0,  0,  0,  0,  46, 29, 64, 14, 0,  0,
    0,  0,  46, 29, 49, 62, 0,  0,  0,  0,  46, 30, 49, 29, 0,  0,  0,  0,  64,
    62, 45, 44, 0,  0,  0,  0,  46, 36, 31, 29, 0,  0,  0,  0,  45, 29, 64, 16,
    0,  0,  0,  0,  45, 29, 7,  62, 0,  0,  0,  0,  45, 36, 64, 29, 0,  0,  0,
    0,  50, 29, 19, 35, 0,  0,  0,  0,  50, 29, 19, 35, 0,  0,  0,  0,  51, 29,
    17, 38, 0,  0,  0,  0,  6,  33, 21, 32, 0,  0,  0,  0,  6,  64, 21, 31, 0,
    0,  0,  0,  6,  40, 21, 38, 0,  0,  0,  0,  21, 62, 1,  34, 0,  0,  0,  0,
    21, 62, 11, 65, 0,  0,  0,  0,  1,  33, 54, 32, 0,  0,  0,  0,  54, 29, 19,
    31, 0,  0,  0,  0,  54, 30, 57, 29, 0,  0,  0,  0,  8,  40, 55, 31, 0,  0,
    0,  0,  53, 32, 8,  33, 0,  0,  0,  0,  53, 29, 7,  31, 0,  0,  0,  0,  53,
    29, 64, 49, 0,  0,  0,  0,  53, 30, 55, 29, 0,  0,  0,  0,  56, 30, 11, 20,
    29, 0,  0,  0,  55, 62, 7,  31, 0,  0,  0,  0,  55, 29, 7,  39, 0,  0,  0,
    0,  55, 29, 20, 31, 0,  0,  0,  0,  55, 30, 20, 39, 0,  0,  0,  0,  52, 29,
    7,  40, 0,  0,  0,  0,  52, 30, 20, 40, 0,  0,  0,  0,  13, 41, 42, 0,  0,
    0,  0,  0,  13, 41, 31, 62, 0,  0,  0,  0,  13, 41, 37, 62, 0,  0,  0,  0,
    41, 16, 64, 29, 0,  0,  0,  0,  41, 14, 40, 34, 0,  0,  0,  0,  41, 14, 31,
    29, 0,  0,  0,  0,  41, 12, 40, 29, 0,  0,  0,  0,  41, 29, 64, 36, 0,  0,
    0,  0,  41, 64, 44, 0,  0,  0,  0,  0,  5,  41, 13, 42, 0,  0,  0,  0,  42,
    16, 37, 29, 0,  0,  0,  0,  42, 16, 40, 34, 0,  0,  0,  0,  42, 16, 64, 35,
    0,  0,  0,  0,  42, 14, 17, 41, 0,  0,  0,  0,  42, 12, 15, 41, 0,  0,  0,
    0,  11, 33, 43, 5,  0,  0,  0,  0,  43, 13, 5,  65, 0,  0,  0,  0,  43, 16,
    65, 14, 0,  0,  0,  0,  43, 16, 19, 34, 0,  0,  0,  0,  43, 14, 65, 17, 0,
    0,  0,  0,  43, 11, 2,  65, 0,  0,  0,  0,  43, 33, 65, 32, 0,  0,  0,  0,
    65, 13, 31, 0,  0,  0,  0,  0,  13, 65, 5,  31, 0,  0,  0,  0,  65, 16, 31,
    14, 0,  0,  0,  0,  65, 14, 17, 31, 0,  0,  0,  0,  65, 14, 17, 31, 0,  0,
    0,  0,  65, 12, 19, 29, 0,  0,  0,  0,  65, 33, 31, 32, 0,  0,  0,  0,  65,
    34, 31, 33, 0,  0,  0,  0,  65, 62, 47, 44, 0,  0,  0,  0};
  const int nuv[4480] = {
    -1, -1, 1, 0, 0,  0,  0, 0, -2, 1,  0, 0, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -2, 1,  0, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, 1,  1, 0,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -2, 1,  0, 0,
    0,  0,  0, 0, -2, 1,  0, 0, 0,  0,  0, 0, -2, 1,  0, 0, 0,  0,  0, 0,
    -2, 1,  0, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -2, 1,  0, 0, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0,
    -1, 1,  1, 0, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -1, 1,  1, 0,
    0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -1, 1,  0, 0, 0,  0,  0, 0,
    -1, 1,  1, 0, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -1, 1,  1, 0,
    0,  0,  0, 0, -1, 0,  0, 0, 1,  2,  0, 0, -1, -1, 0, 0, 0,  0,  1, 2,
    -1, -1, 0, 0, 0,  1,  0, 2, -1, -1, 0, 0, 0,  0,  1, 2, -1, -1, 0, 0,
    0,  0,  1, 2, -1, -1, 0, 0, 0,  0,  1, 2, -1, -1, 0, 0, 0,  0,  1, 2,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -2, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 2, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -2, 1,  1, 0, 0,  0,  0, 0, -2, 1,  1, 0, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 2, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -2, 1,  1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -2, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 2, 0, 0,  0,  0, 0, -1, -1, 2, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 2, 0, 0,  0,  0, 0, -1, -1, 2, 1, 0,  0,  0, 0,
    -1, -1, 2, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 2, 1,
    0,  0,  0, 0, -1, -1, 2, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -2, 1,  2, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -2, 1,  1, 0, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -2, 1,  1, 0, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, 1,  0, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 2, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, 1,  0, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    1,  0,  0, 0, -1, -1, 1, 2, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0,
    -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 2, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, 1,  1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -2, 1,  1, 0, 0,  0,  0, 0, -2, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, 1,  1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, 1,  0, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -2, 1,  1, 0, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 2, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -2, 1,  1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -2, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -2, 2,  1, 0, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 2, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 2, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -2, 2,  1, 0, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0, -1, -1, 1, 1, 1,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 0,
    0,  0,  0, 0, -1, -1, 2, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    1,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 0, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -2, 2,  1, 0,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, 1,  1, 0, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0,
    -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1,
    0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0, -1, -1, 1, 1, 0,  0,  0, 0};
  if (i < 1) {
    // Return max num species per reaction
    nspec = 8;
  } else {
    if (i > 560) {
      nspec = -1;
    } else {
      nspec = ns[i - 1];
      for (int j = 0; j < nspec; ++j) {
        ki[j] = kiv[(i - 1) * 8 + j] + 1;
        nu[j] = nuv[(i - 1) * 8 + j];
      }
    }
  }
}

// Returns the progress rates of each reactions
// Given P, T, and mole fractions
void
CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real q_f[],
  amrex::Real q_r[])
{
  amrex::Real c[45]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 45; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  progressRateFR(q_f, q_r, c, T);

  // convert to chemkin units
  for (int id = 0; id < 560; ++id) {
    q_f[id] *= 1.0e-6;
    q_r[id] *= 1.0e-6;
  }
}

// compute the progress rate for each reaction
// USES progressRate : todo switch to GPU
void
progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  // compute the Gibbs free energy
  amrex::Real g_RT[45];
  gibbs(g_RT, tc);
  amrex::Real g_RT_qss[21];
  gibbs_qss(g_RT_qss, tc);

  amrex::Real sc_qss[21];
  // Fill sc_qss here
  amrex::Real kf_qss[334], qf_qss[334], qr_qss[334];
  comp_k_f_qss(tc, invT, kf_qss);
  comp_qss_coeff(kf_qss, qf_qss, qr_qss, sc, tc, g_RT, g_RT_qss);
  comp_sc_qss(sc_qss, qf_qss, qr_qss);
  comp_qfqr(q_f, q_r, sc, sc_qss, tc, invT);
}

// save atomic weights into array
void
atomicWeight(amrex::Real* awt)
{
  awt[0] = 12.011000; // C
  awt[1] = 1.008000;  // H
  awt[2] = 15.999000; // O
  awt[3] = 14.007000; // N
}

// get atomic weight for all elements
void
CKAWT(amrex::Real* awt)
{
  atomicWeight(awt);
}

// Returns the elemental composition
// of the speciesi (mdim is num of elements)
void
CKNCF(int* ncf)
{
  int kd = 4;
  // Zero ncf
  for (int id = 0; id < kd * 45; ++id) {
    ncf[id] = 0;
  }

  // POSF11498
  ncf[0 * kd + 0] = 13; // C
  ncf[0 * kd + 1] = 28; // H

  // C2H4
  ncf[1 * kd + 0] = 2; // C
  ncf[1 * kd + 1] = 4; // H

  // CH4
  ncf[2 * kd + 0] = 1; // C
  ncf[2 * kd + 1] = 4; // H

  // C3H6
  ncf[3 * kd + 0] = 3; // C
  ncf[3 * kd + 1] = 6; // H

  // iC4H8
  ncf[4 * kd + 0] = 4; // C
  ncf[4 * kd + 1] = 8; // H

  // H2
  ncf[5 * kd + 1] = 2; // H

  // C2H6
  ncf[6 * kd + 0] = 2; // C
  ncf[6 * kd + 1] = 6; // H

  // CO
  ncf[7 * kd + 0] = 1; // C
  ncf[7 * kd + 2] = 1; // O

  // C2H2
  ncf[8 * kd + 0] = 2; // C
  ncf[8 * kd + 1] = 2; // H

  // pC3H4
  ncf[9 * kd + 0] = 3; // C
  ncf[9 * kd + 1] = 4; // H

  // aC3H4
  ncf[10 * kd + 0] = 3; // C
  ncf[10 * kd + 1] = 4; // H

  // CH3
  ncf[11 * kd + 0] = 1; // C
  ncf[11 * kd + 1] = 3; // H

  // O2
  ncf[12 * kd + 2] = 2; // O

  // H
  ncf[13 * kd + 1] = 1; // H

  // OH
  ncf[14 * kd + 1] = 1; // H
  ncf[14 * kd + 2] = 1; // O

  // HO2
  ncf[15 * kd + 1] = 1; // H
  ncf[15 * kd + 2] = 2; // O

  // O
  ncf[16 * kd + 2] = 1; // O

  // H2O
  ncf[17 * kd + 1] = 2; // H
  ncf[17 * kd + 2] = 1; // O

  // H2O2
  ncf[18 * kd + 1] = 2; // H
  ncf[18 * kd + 2] = 2; // O

  // CH2O
  ncf[19 * kd + 0] = 1; // C
  ncf[19 * kd + 1] = 2; // H
  ncf[19 * kd + 2] = 1; // O

  // CO2
  ncf[20 * kd + 0] = 1; // C
  ncf[20 * kd + 2] = 2; // O

  // C2H5
  ncf[21 * kd + 0] = 2; // C
  ncf[21 * kd + 1] = 5; // H

  // CH2CO
  ncf[22 * kd + 0] = 2; // C
  ncf[22 * kd + 1] = 2; // H
  ncf[22 * kd + 2] = 1; // O

  // C3H3
  ncf[23 * kd + 0] = 3; // C
  ncf[23 * kd + 1] = 3; // H

  // aC3H5
  ncf[24 * kd + 0] = 3; // C
  ncf[24 * kd + 1] = 5; // H

  // C2H3CHO
  ncf[25 * kd + 0] = 3; // C
  ncf[25 * kd + 1] = 4; // H
  ncf[25 * kd + 2] = 1; // O

  // iC4H7
  ncf[26 * kd + 0] = 4; // C
  ncf[26 * kd + 1] = 7; // H

  // C5H5
  ncf[27 * kd + 0] = 5; // C
  ncf[27 * kd + 1] = 5; // H

  // C6H5O
  ncf[28 * kd + 0] = 6; // C
  ncf[28 * kd + 1] = 5; // H
  ncf[28 * kd + 2] = 1; // O

  // NO
  ncf[29 * kd + 3] = 1; // N
  ncf[29 * kd + 2] = 1; // O

  // NO2
  ncf[30 * kd + 3] = 1; // N
  ncf[30 * kd + 2] = 2; // O

  // HCN
  ncf[31 * kd + 0] = 1; // C
  ncf[31 * kd + 1] = 1; // H
  ncf[31 * kd + 3] = 1; // N

  // NH3
  ncf[32 * kd + 1] = 3; // H
  ncf[32 * kd + 3] = 1; // N

  // NH2
  ncf[33 * kd + 1] = 2; // H
  ncf[33 * kd + 3] = 1; // N

  // NH
  ncf[34 * kd + 1] = 1; // H
  ncf[34 * kd + 3] = 1; // N

  // HNO
  ncf[35 * kd + 1] = 1; // H
  ncf[35 * kd + 3] = 1; // N
  ncf[35 * kd + 2] = 1; // O

  // N2O
  ncf[36 * kd + 3] = 2; // N
  ncf[36 * kd + 2] = 1; // O

  // HNC
  ncf[37 * kd + 0] = 1; // C
  ncf[37 * kd + 1] = 1; // H
  ncf[37 * kd + 3] = 1; // N

  // HNCO
  ncf[38 * kd + 0] = 1; // C
  ncf[38 * kd + 1] = 1; // H
  ncf[38 * kd + 3] = 1; // N
  ncf[38 * kd + 2] = 1; // O

  // HCNO
  ncf[39 * kd + 0] = 1; // C
  ncf[39 * kd + 1] = 1; // H
  ncf[39 * kd + 3] = 1; // N
  ncf[39 * kd + 2] = 1; // O

  // NCO
  ncf[40 * kd + 0] = 1; // C
  ncf[40 * kd + 3] = 1; // N
  ncf[40 * kd + 2] = 1; // O

  // NCN
  ncf[41 * kd + 0] = 1; // C
  ncf[41 * kd + 3] = 2; // N

  // HNCN
  ncf[42 * kd + 0] = 1; // C
  ncf[42 * kd + 1] = 1; // H
  ncf[42 * kd + 3] = 2; // N

  // CH2NH
  ncf[43 * kd + 0] = 1; // C
  ncf[43 * kd + 1] = 3; // H
  ncf[43 * kd + 3] = 1; // N

  // N2
  ncf[44 * kd + 3] = 2; // N
}

// Returns the vector of strings of element names
void
CKSYME_STR(amrex::Vector<std::string>& ename)
{
  ename.resize(4);
  ename[0] = "C";
  ename[1] = "H";
  ename[2] = "O";
  ename[3] = "N";
}

// Returns the vector of strings of species names
void
CKSYMS_STR(amrex::Vector<std::string>& kname)
{
  kname.resize(45);
  kname[0] = "POSF11498";
  kname[1] = "C2H4";
  kname[2] = "CH4";
  kname[3] = "C3H6";
  kname[4] = "iC4H8";
  kname[5] = "H2";
  kname[6] = "C2H6";
  kname[7] = "CO";
  kname[8] = "C2H2";
  kname[9] = "pC3H4";
  kname[10] = "aC3H4";
  kname[11] = "CH3";
  kname[12] = "O2";
  kname[13] = "H";
  kname[14] = "OH";
  kname[15] = "HO2";
  kname[16] = "O";
  kname[17] = "H2O";
  kname[18] = "H2O2";
  kname[19] = "CH2O";
  kname[20] = "CO2";
  kname[21] = "C2H5";
  kname[22] = "CH2CO";
  kname[23] = "C3H3";
  kname[24] = "aC3H5";
  kname[25] = "C2H3CHO";
  kname[26] = "iC4H7";
  kname[27] = "C5H5";
  kname[28] = "C6H5O";
  kname[29] = "NO";
  kname[30] = "NO2";
  kname[31] = "HCN";
  kname[32] = "NH3";
  kname[33] = "NH2";
  kname[34] = "NH";
  kname[35] = "HNO";
  kname[36] = "N2O";
  kname[37] = "HNC";
  kname[38] = "HNCO";
  kname[39] = "HCNO";
  kname[40] = "NCO";
  kname[41] = "NCN";
  kname[42] = "HNCN";
  kname[43] = "CH2NH";
  kname[44] = "N2";
}

// compute the sparsity pattern of the chemistry Jacobian
void
SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 46; k++) {
    for (int l = 0; l < 46; l++) {
      if (Jac[46 * k + l] != 0.0) {
        nJdata_tmp = nJdata_tmp + 1;
      }
    }
  }

  *nJdata = NCELLS * nJdata_tmp;
}

// compute the sparsity pattern of the system Jacobian
void
SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 46; k++) {
    for (int l = 0; l < 46; l++) {
      if (k == l) {
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[46 * k + l] != 0.0) {
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
  }

  *nJdata = NCELLS * nJdata_tmp;
}

// compute the sparsity pattern of the simplified (for preconditioning) system
// Jacobian
void
SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  int nJdata_tmp = 0;
  for (int k = 0; k < 46; k++) {
    for (int l = 0; l < 46; l++) {
      if (k == l) {
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[46 * k + l] != 0.0) {
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
  }

  nJdata[0] = nJdata_tmp;
}

// compute the sparsity pattern of the chemistry Jacobian in CSC format -- base
// 0
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  colPtrs[0] = 0;
  int nJdata_tmp = 0;
  for (int nc = 0; nc < NCELLS; nc++) {
    int offset_row = nc * 46;
    int offset_col = nc * 46;
    for (int k = 0; k < 46; k++) {
      for (int l = 0; l < 46; l++) {
        if (Jac[46 * k + l] != 0.0) {
          rowVals[nJdata_tmp] = l + offset_row;
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
      colPtrs[offset_col + (k + 1)] = nJdata_tmp;
    }
  }
}

// compute the sparsity pattern of the chemistry Jacobian in CSR format -- base
// 0
void
SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtrs[0] = 1;
    int nJdata_tmp = 1;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 46;
      for (int l = 0; l < 46; l++) {
        for (int k = 0; k < 46; k++) {
          if (Jac[46 * k + l] != 0.0) {
            colVals[nJdata_tmp - 1] = k + 1 + offset;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
        rowPtrs[offset + (l + 1)] = nJdata_tmp;
      }
    }
  } else {
    rowPtrs[0] = 0;
    int nJdata_tmp = 0;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 46;
      for (int l = 0; l < 46; l++) {
        for (int k = 0; k < 46; k++) {
          if (Jac[46 * k + l] != 0.0) {
            colVals[nJdata_tmp] = k + offset;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
        rowPtrs[offset + (l + 1)] = nJdata_tmp;
      }
    }
  }
}

// compute the sparsity pattern of the system Jacobian
// CSR format BASE is user choice
void
SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtr, const int* consP, int NCELLS, int base)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtr[0] = 1;
    int nJdata_tmp = 1;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 46;
      for (int l = 0; l < 46; l++) {
        for (int k = 0; k < 46; k++) {
          if (k == l) {
            colVals[nJdata_tmp - 1] = l + 1 + offset;
            nJdata_tmp = nJdata_tmp + 1;
          } else {
            if (Jac[46 * k + l] != 0.0) {
              colVals[nJdata_tmp - 1] = k + 1 + offset;
              nJdata_tmp = nJdata_tmp + 1;
            }
          }
        }
        rowPtr[offset + (l + 1)] = nJdata_tmp;
      }
    }
  } else {
    rowPtr[0] = 0;
    int nJdata_tmp = 0;
    for (int nc = 0; nc < NCELLS; nc++) {
      int offset = nc * 46;
      for (int l = 0; l < 46; l++) {
        for (int k = 0; k < 46; k++) {
          if (k == l) {
            colVals[nJdata_tmp] = l + offset;
            nJdata_tmp = nJdata_tmp + 1;
          } else {
            if (Jac[46 * k + l] != 0.0) {
              colVals[nJdata_tmp] = k + offset;
              nJdata_tmp = nJdata_tmp + 1;
            }
          }
        }
        rowPtr[offset + (l + 1)] = nJdata_tmp;
      }
    }
  }
}

// compute the sparsity pattern of the simplified (for precond) system Jacobian
// on CPU BASE 0
void
SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  colPtrs[0] = 0;
  int nJdata_tmp = 0;
  for (int k = 0; k < 46; k++) {
    for (int l = 0; l < 46; l++) {
      if (k == l) {
        rowVals[nJdata_tmp] = l;
        indx[nJdata_tmp] = 46 * k + l;
        nJdata_tmp = nJdata_tmp + 1;
      } else {
        if (Jac[46 * k + l] != 0.0) {
          rowVals[nJdata_tmp] = l;
          indx[nJdata_tmp] = 46 * k + l;
          nJdata_tmp = nJdata_tmp + 1;
        }
      }
    }
    colPtrs[k + 1] = nJdata_tmp;
  }
}

// compute the sparsity pattern of the simplified (for precond) system Jacobian
// CSR format BASE is under choice
void
SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base)
{
  amrex::GpuArray<amrex::Real, 2116> Jac = {0.0};
  amrex::GpuArray<amrex::Real, 45> conc = {0.0};
  for (int n = 0; n < 45; n++) {
    conc[n] = 1.0 / 45.000000;
  }
  aJacobian_precond(Jac.data(), conc.data(), 1500.0, *consP);

  if (base == 1) {
    rowPtr[0] = 1;
    int nJdata_tmp = 1;
    for (int l = 0; l < 46; l++) {
      for (int k = 0; k < 46; k++) {
        if (k == l) {
          colVals[nJdata_tmp - 1] = l + 1;
          nJdata_tmp = nJdata_tmp + 1;
        } else {
          if (Jac[46 * k + l] != 0.0) {
            colVals[nJdata_tmp - 1] = k + 1;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
      }
      rowPtr[l + 1] = nJdata_tmp;
    }
  } else {
    rowPtr[0] = 0;
    int nJdata_tmp = 0;
    for (int l = 0; l < 46; l++) {
      for (int k = 0; k < 46; k++) {
        if (k == l) {
          colVals[nJdata_tmp] = l;
          nJdata_tmp = nJdata_tmp + 1;
        } else {
          if (Jac[46 * k + l] != 0.0) {
            colVals[nJdata_tmp] = k;
            nJdata_tmp = nJdata_tmp + 1;
          }
        }
      }
      rowPtr[l + 1] = nJdata_tmp;
    }
  }
}

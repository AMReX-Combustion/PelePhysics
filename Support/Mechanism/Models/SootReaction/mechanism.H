#ifndef MECHANISM_H
#define MECHANISM_H

#include <AMReX_Gpu.H>
#include <AMReX_REAL.H>

/* Elements
0  N
1  C
2  H
3  O
*/

// Species
#define N2_ID 0
#define SCH2_ID 1
#define TCH2_ID 2
#define O_ID 3
#define H2_ID 4
#define H_ID 5
#define OH_ID 6
#define H2O_ID 7
#define O2_ID 8
#define HO2_ID 9
#define CH_ID 10
#define CO_ID 11
#define HCO_ID 12
#define CH2O_ID 13
#define CH3_ID 14
#define CO2_ID 15
#define CH4_ID 16
#define C2H3_ID 17
#define C2H4_ID 18
#define C2H5_ID 19
#define C2H_ID 20
#define HCCO_ID 21
#define C2H2_ID 22
#define C3H3_ID 23
#define AC3H5_ID 24
#define NC3H7_ID 25
#define C2H6_ID 26
#define PC3H4_ID 27
#define AC3H4_ID 28
#define A1_ID 29
#define A1n_ID 30
#define C5H5_ID 31
#define C3H6_ID 32
#define C4H8_ID 33
#define C5H6_ID 34
#define A2_ID 35
#define C5H10_ID 36
#define C5H11_ID 37
#define A1C2H2_ID 38
#define A1CH2_ID 39
#define A1CHO_ID 40
#define A1CH3_ID 41
#define C7H15_ID 42
#define NC7H16_ID 43
#define A1C2HD_ID 44
#define A2n_ID 45
#define A1C2H_ID 46

#define NUM_ELEMENTS 4
#define NUM_SPECIES 47
#define NUM_IONS 2
#define NUM_REACTIONS 224

#define NUM_FIT 4

//  ALWAYS on CPU stuff -- can have different def depending on if we are CPU or
//  GPU based. Defined in mechanism.cpp
void atomicWeight(amrex::Real* awt);
//  MISC
void CKAWT(amrex::Real* awt);
void CKNCF(int* ncf);
void CKSYME_STR(amrex::Vector<std::string>& ename);
void CKSYMS_STR(amrex::Vector<std::string>& kname);
void GET_RMAP(int* _rmap);
void CKINU(const int i, int& nspec, int* ki, int* nu);
void CKKFKR(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real* x,
  amrex::Real* q_f,
  amrex::Real* q_r);
void progressRateFR(
  amrex::Real* q_f, amrex::Real* q_r, amrex::Real* sc, amrex::Real T);
//  SPARSE INFORMATION
void SPARSITY_INFO(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST(int* nJdata, const int* consP, int NCELLS);
void SPARSITY_INFO_SYST_SIMPLIFIED(int* nJdata, const int* consP);
void
SPARSITY_PREPROC_CSC(int* rowVals, int* colPtrs, const int* consP, int NCELLS);
void SPARSITY_PREPROC_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_CSR(
  int* colVals, int* rowPtrs, const int* consP, int NCELLS, int base);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSC(
  int* rowVals, int* colPtrs, int* indx, const int* consP);
void SPARSITY_PREPROC_SYST_SIMPLIFIED_CSR(
  int* colVals, int* rowPtr, const int* consP, int base);

// A few mechanism parameters
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKINDX(int& mm, int& kk, int& ii, int& nfit)
{
  mm = 4;
  kk = 47;
  ii = 224;
  nfit = -1; // Why do you need this anyway ?
}

//  inverse molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_imw[47] = {
  0.0356964374955379, // N2
  0.0712910814857061, // S-CH2
  0.0712910814857061, // T-CH2
  0.0625039064941559, // O
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0312519532470779, // O2
  0.0302975216627280, // HO2
  0.0768108149627468, // CH
  0.0357015351660121, // CO
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0665114732291320, // CH3
  0.0227226249176305, // CO2
  0.0623324814560868, // CH4
  0.0369740442209569, // C2H3
  0.0356455407428531, // C2H4
  0.0344091941366733, // C2H5
  0.0399520575309628, // C2H
  0.0243730044602598, // HCCO
  0.0384054074813734, // C2H2
  0.0256036049875823, // C3H3
  0.0243468945535997, // A-C3H5
  0.0232077792476038, // N-C3H7
  0.0332557366145660, // C2H6
  0.0249594409085237, // P-C3H4
  0.0249594409085237, // A-C3H4
  0.0128018024937911, // A1
  0.0129691593390916, // A1-
  0.0153621629925494, // C5H5
  0.0237636938285687, // C3H6
  0.0178227703714265, // C4H8
  0.0151279064490265, // C5H6
  0.0078018942999360, // A2
  0.0142582162971412, // C5H10
  0.0140561966743039, // C5H11
  0.0096951834328706, // A1C2H2
  0.0109729735661067, // A1CH2
  0.0094229392031963, // A1CHO
  0.0108529319195581, // A1CH3
  0.0100809500287307, // C7H15
  0.0099795419390250, // N-C7H16
  0.0098884581915988, // A1C2H*
  0.0078637371624491, // A2-
  0.0097908670791885, // A1C2H
};
const amrex::Real h_global_imw[47] = {
  0.0356964374955379, // N2
  0.0712910814857061, // S-CH2
  0.0712910814857061, // T-CH2
  0.0625039064941559, // O
  0.4960317460317460, // H2
  0.9920634920634921, // H
  0.0587993179279120, // OH
  0.0555092978073827, // H2O
  0.0312519532470779, // O2
  0.0302975216627280, // HO2
  0.0768108149627468, // CH
  0.0357015351660121, // CO
  0.0344613688055690, // HCO
  0.0333044694598015, // CH2O
  0.0665114732291320, // CH3
  0.0227226249176305, // CO2
  0.0623324814560868, // CH4
  0.0369740442209569, // C2H3
  0.0356455407428531, // C2H4
  0.0344091941366733, // C2H5
  0.0399520575309628, // C2H
  0.0243730044602598, // HCCO
  0.0384054074813734, // C2H2
  0.0256036049875823, // C3H3
  0.0243468945535997, // A-C3H5
  0.0232077792476038, // N-C3H7
  0.0332557366145660, // C2H6
  0.0249594409085237, // P-C3H4
  0.0249594409085237, // A-C3H4
  0.0128018024937911, // A1
  0.0129691593390916, // A1-
  0.0153621629925494, // C5H5
  0.0237636938285687, // C3H6
  0.0178227703714265, // C4H8
  0.0151279064490265, // C5H6
  0.0078018942999360, // A2
  0.0142582162971412, // C5H10
  0.0140561966743039, // C5H11
  0.0096951834328706, // A1C2H2
  0.0109729735661067, // A1CH2
  0.0094229392031963, // A1CHO
  0.0108529319195581, // A1CH3
  0.0100809500287307, // C7H15
  0.0099795419390250, // N-C7H16
  0.0098884581915988, // A1C2H*
  0.0078637371624491, // A2-
  0.0097908670791885, // A1C2H
};

//  molecular weights
AMREX_GPU_CONSTANT const amrex::Real global_mw[47] = {
  28.014000,  // N2
  14.027000,  // S-CH2
  14.027000,  // T-CH2
  15.999000,  // O
  2.016000,   // H2
  1.008000,   // H
  17.007000,  // OH
  18.015000,  // H2O
  31.998000,  // O2
  33.006000,  // HO2
  13.019000,  // CH
  28.010000,  // CO
  29.018000,  // HCO
  30.026000,  // CH2O
  15.035000,  // CH3
  44.009000,  // CO2
  16.043000,  // CH4
  27.046000,  // C2H3
  28.054000,  // C2H4
  29.062000,  // C2H5
  25.030000,  // C2H
  41.029000,  // HCCO
  26.038000,  // C2H2
  39.057000,  // C3H3
  41.073000,  // A-C3H5
  43.089000,  // N-C3H7
  30.070000,  // C2H6
  40.065000,  // P-C3H4
  40.065000,  // A-C3H4
  78.114000,  // A1
  77.106000,  // A1-
  65.095000,  // C5H5
  42.081000,  // C3H6
  56.108000,  // C4H8
  66.103000,  // C5H6
  128.174000, // A2
  70.135000,  // C5H10
  71.143000,  // C5H11
  103.144000, // A1C2H2
  91.133000,  // A1CH2
  106.124000, // A1CHO
  92.141000,  // A1CH3
  99.197000,  // C7H15
  100.205000, // N-C7H16
  101.128000, // A1C2H*
  127.166000, // A2-
  102.136000, // A1C2H
};
const amrex::Real h_global_mw[47] = {
  28.014000,  // N2
  14.027000,  // S-CH2
  14.027000,  // T-CH2
  15.999000,  // O
  2.016000,   // H2
  1.008000,   // H
  17.007000,  // OH
  18.015000,  // H2O
  31.998000,  // O2
  33.006000,  // HO2
  13.019000,  // CH
  28.010000,  // CO
  29.018000,  // HCO
  30.026000,  // CH2O
  15.035000,  // CH3
  44.009000,  // CO2
  16.043000,  // CH4
  27.046000,  // C2H3
  28.054000,  // C2H4
  29.062000,  // C2H5
  25.030000,  // C2H
  41.029000,  // HCCO
  26.038000,  // C2H2
  39.057000,  // C3H3
  41.073000,  // A-C3H5
  43.089000,  // N-C3H7
  30.070000,  // C2H6
  40.065000,  // P-C3H4
  40.065000,  // A-C3H4
  78.114000,  // A1
  77.106000,  // A1-
  65.095000,  // C5H5
  42.081000,  // C3H6
  56.108000,  // C4H8
  66.103000,  // C5H6
  128.174000, // A2
  70.135000,  // C5H10
  71.143000,  // C5H11
  103.144000, // A1C2H2
  91.133000,  // A1CH2
  106.124000, // A1CHO
  92.141000,  // A1CH3
  99.197000,  // C7H15
  100.205000, // N-C7H16
  101.128000, // A1C2H*
  127.166000, // A2-
  102.136000, // A1C2H
};

//  inverse molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_imw(amrex::Real* imw_new)
{
  imw_new[0] = 0.0356964374955379;  // N2
  imw_new[1] = 0.0712910814857061;  // S-CH2
  imw_new[2] = 0.0712910814857061;  // T-CH2
  imw_new[3] = 0.0625039064941559;  // O
  imw_new[4] = 0.4960317460317460;  // H2
  imw_new[5] = 0.9920634920634921;  // H
  imw_new[6] = 0.0587993179279120;  // OH
  imw_new[7] = 0.0555092978073827;  // H2O
  imw_new[8] = 0.0312519532470779;  // O2
  imw_new[9] = 0.0302975216627280;  // HO2
  imw_new[10] = 0.0768108149627468; // CH
  imw_new[11] = 0.0357015351660121; // CO
  imw_new[12] = 0.0344613688055690; // HCO
  imw_new[13] = 0.0333044694598015; // CH2O
  imw_new[14] = 0.0665114732291320; // CH3
  imw_new[15] = 0.0227226249176305; // CO2
  imw_new[16] = 0.0623324814560868; // CH4
  imw_new[17] = 0.0369740442209569; // C2H3
  imw_new[18] = 0.0356455407428531; // C2H4
  imw_new[19] = 0.0344091941366733; // C2H5
  imw_new[20] = 0.0399520575309628; // C2H
  imw_new[21] = 0.0243730044602598; // HCCO
  imw_new[22] = 0.0384054074813734; // C2H2
  imw_new[23] = 0.0256036049875823; // C3H3
  imw_new[24] = 0.0243468945535997; // A-C3H5
  imw_new[25] = 0.0232077792476038; // N-C3H7
  imw_new[26] = 0.0332557366145660; // C2H6
  imw_new[27] = 0.0249594409085237; // P-C3H4
  imw_new[28] = 0.0249594409085237; // A-C3H4
  imw_new[29] = 0.0128018024937911; // A1
  imw_new[30] = 0.0129691593390916; // A1-
  imw_new[31] = 0.0153621629925494; // C5H5
  imw_new[32] = 0.0237636938285687; // C3H6
  imw_new[33] = 0.0178227703714265; // C4H8
  imw_new[34] = 0.0151279064490265; // C5H6
  imw_new[35] = 0.0078018942999360; // A2
  imw_new[36] = 0.0142582162971412; // C5H10
  imw_new[37] = 0.0140561966743039; // C5H11
  imw_new[38] = 0.0096951834328706; // A1C2H2
  imw_new[39] = 0.0109729735661067; // A1CH2
  imw_new[40] = 0.0094229392031963; // A1CHO
  imw_new[41] = 0.0108529319195581; // A1CH3
  imw_new[42] = 0.0100809500287307; // C7H15
  imw_new[43] = 0.0099795419390250; // N-C7H16
  imw_new[44] = 0.0098884581915988; // A1C2H*
  imw_new[45] = 0.0078637371624491; // A2-
  imw_new[46] = 0.0097908670791885; // A1C2H
}

//  inverse molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
imw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_imw[n];
#else
  return h_global_imw[n];
#endif
}
//  molecular weights
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
get_mw(amrex::Real* mw_new)
{
  mw_new[0] = 28.014000;   // N2
  mw_new[1] = 14.027000;   // S-CH2
  mw_new[2] = 14.027000;   // T-CH2
  mw_new[3] = 15.999000;   // O
  mw_new[4] = 2.016000;    // H2
  mw_new[5] = 1.008000;    // H
  mw_new[6] = 17.007000;   // OH
  mw_new[7] = 18.015000;   // H2O
  mw_new[8] = 31.998000;   // O2
  mw_new[9] = 33.006000;   // HO2
  mw_new[10] = 13.019000;  // CH
  mw_new[11] = 28.010000;  // CO
  mw_new[12] = 29.018000;  // HCO
  mw_new[13] = 30.026000;  // CH2O
  mw_new[14] = 15.035000;  // CH3
  mw_new[15] = 44.009000;  // CO2
  mw_new[16] = 16.043000;  // CH4
  mw_new[17] = 27.046000;  // C2H3
  mw_new[18] = 28.054000;  // C2H4
  mw_new[19] = 29.062000;  // C2H5
  mw_new[20] = 25.030000;  // C2H
  mw_new[21] = 41.029000;  // HCCO
  mw_new[22] = 26.038000;  // C2H2
  mw_new[23] = 39.057000;  // C3H3
  mw_new[24] = 41.073000;  // A-C3H5
  mw_new[25] = 43.089000;  // N-C3H7
  mw_new[26] = 30.070000;  // C2H6
  mw_new[27] = 40.065000;  // P-C3H4
  mw_new[28] = 40.065000;  // A-C3H4
  mw_new[29] = 78.114000;  // A1
  mw_new[30] = 77.106000;  // A1-
  mw_new[31] = 65.095000;  // C5H5
  mw_new[32] = 42.081000;  // C3H6
  mw_new[33] = 56.108000;  // C4H8
  mw_new[34] = 66.103000;  // C5H6
  mw_new[35] = 128.174000; // A2
  mw_new[36] = 70.135000;  // C5H10
  mw_new[37] = 71.143000;  // C5H11
  mw_new[38] = 103.144000; // A1C2H2
  mw_new[39] = 91.133000;  // A1CH2
  mw_new[40] = 106.124000; // A1CHO
  mw_new[41] = 92.141000;  // A1CH3
  mw_new[42] = 99.197000;  // C7H15
  mw_new[43] = 100.205000; // N-C7H16
  mw_new[44] = 101.128000; // A1C2H*
  mw_new[45] = 127.166000; // A2-
  mw_new[46] = 102.136000; // A1C2H
}

//  molecular weight
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE amrex::Real
mw(const int n)
{
#if AMREX_DEVICE_COMPILE
  return global_mw[n];
#else
  return h_global_mw[n];
#endif
}

//  Returns R, Rc, Patm
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRP(amrex::Real& ru, amrex::Real& ruc, amrex::Real& pa)
{
  ru = 8.31446261815324e+07;
  ruc = 1.98721558317399615845;
  pa = 1.01325e+06;
}

// compute Cv/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cv_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +2.29867700e+00 + 1.40824040e-03 * tc[1] -
                 3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                 2.44485400e-12 * tc[4];
    // species 1: S-CH2
    species[1] = +3.19860411e+00 - 2.36661419e-03 * tc[1] +
                 8.23296220e-06 * tc[2] - 6.68815981e-09 * tc[3] +
                 1.94314737e-12 * tc[4];
    // species 2: T-CH2
    species[2] = +2.76267867e+00 + 9.68872143e-04 * tc[1] +
                 2.79489841e-06 * tc[2] - 3.85091153e-09 * tc[3] +
                 1.68741719e-12 * tc[4];
    // species 3: O
    species[3] = +2.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 4: H2
    species[4] = +1.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 5: H
    species[5] = +1.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 6: OH
    species[6] = +3.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 7: H2O
    species[7] = +3.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 8: O2
    species[8] = +2.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 9: HO2
    species[9] = +3.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 10: CH
    species[10] = +2.48981665e+00 + 3.23835541e-04 * tc[1] -
                  1.68899065e-06 * tc[2] + 3.16217327e-09 * tc[3] -
                  1.40609067e-12 * tc[4];
    // species 11: CO
    species[11] = +2.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 12: HCO
    species[12] = +3.22118584e+00 - 3.24392532e-03 * tc[1] +
                  1.37799446e-05 * tc[2] - 1.33144093e-08 * tc[3] +
                  4.33768865e-12 * tc[4];
    // species 13: CH2O
    species[13] = +3.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 14: CH3
    species[14] = +2.65717970e+00 + 2.12659790e-03 * tc[1] +
                  5.45838830e-06 * tc[2] - 6.61810030e-09 * tc[3] +
                  2.46570740e-12 * tc[4];
    // species 15: CO2
    species[15] = +1.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 16: CH4
    species[16] = +4.14911468e+00 - 1.36622009e-02 * tc[1] +
                  4.91453921e-05 * tc[2] - 4.84246767e-08 * tc[3] +
                  1.66603441e-11 * tc[4];
    // species 17: C2H3
    species[17] = +2.21246645e+00 + 1.51479162e-03 * tc[1] +
                  2.59209412e-05 * tc[2] - 3.57657847e-08 * tc[3] +
                  1.47150873e-11 * tc[4];
    // species 18: C2H4
    species[18] = +2.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 19: C2H5
    species[19] = +3.30646568e+00 - 4.18658892e-03 * tc[1] +
                  4.97142807e-05 * tc[2] - 5.99126606e-08 * tc[3] +
                  2.30509004e-11 * tc[4];
    // species 20: C2H
    species[20] = +1.88965733e+00 + 1.34099611e-02 * tc[1] -
                  2.84769501e-05 * tc[2] + 2.94791045e-08 * tc[3] -
                  1.09331511e-11 * tc[4];
    // species 21: HCCO
    species[21] = +1.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 22: C2H2
    species[22] = -1.91318906e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 23: C3H3
    species[23] = +4.02992380e-01 + 3.01773327e-02 * tc[1] -
                  3.98449373e-05 * tc[2] + 2.93534629e-08 * tc[3] -
                  8.70554579e-12 * tc[4];
    // species 24: A-C3H5
    species[24] = -2.03516444e+00 + 3.75043366e-02 * tc[1] -
                  3.26381242e-05 * tc[2] + 1.47662613e-08 * tc[3] -
                  2.43741154e-12 * tc[4];
    // species 25: N-C3H7
    species[25] = +4.75473000e-02 + 2.60077940e-02 * tc[1] +
                  2.35622520e-06 * tc[2] - 1.95923170e-08 * tc[3] +
                  9.36801160e-12 * tc[4];
    // species 26: C2H6
    species[26] = +3.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 27: P-C3H4
    species[27] = +4.61753230e-01 + 2.46026602e-02 * tc[1] -
                  1.90219395e-05 * tc[2] + 8.60363422e-09 * tc[3] -
                  1.66729240e-12 * tc[4];
    // species 28: A-C3H4
    species[28] = -6.31071735e-01 + 2.89351397e-02 * tc[1] -
                  2.44386408e-05 * tc[2] + 1.12547166e-08 * tc[3] -
                  2.03040262e-12 * tc[4];
    // species 29: A1
    species[29] = -6.51558393e+00 + 6.45453225e-02 * tc[1] -
                  4.41402928e-05 * tc[2] + 7.47712161e-09 * tc[3] +
                  3.10282254e-12 * tc[4];
    // species 30: A1-
    species[30] = -5.87654845e+00 + 6.26805782e-02 * tc[1] -
                  4.87402286e-05 * tc[2] + 1.41122287e-08 * tc[3] +
                  5.18518312e-13 * tc[4];
    // species 31: C5H5
    species[31] = -8.37844042e+00 + 9.72391818e-02 * tc[1] -
                  1.69579138e-04 * tc[2] + 1.51818667e-07 * tc[3] -
                  5.12075479e-11 * tc[4];
    // species 32: C3H6
    species[32] = -1.00229262e+00 + 3.10261065e-02 * tc[1] -
                  1.67151548e-05 * tc[2] + 1.89594170e-09 * tc[3] +
                  1.24957915e-12 * tc[4];
    // species 33: C4H8
    species[33] = -1.83137209e+00 + 4.52580978e-02 * tc[1] -
                  2.93658559e-05 * tc[2] + 1.00220436e-08 * tc[3] -
                  1.43191680e-12 * tc[4];
    // species 34: C5H6
    species[34] = -6.13691194e+00 + 6.06953453e-02 * tc[1] -
                  4.60552837e-05 * tc[2] + 1.28457201e-08 * tc[3] +
                  7.41214852e-13 * tc[4];
    // species 35: A2
    species[35] = -9.72434585e+00 + 1.05376008e-01 * tc[1] -
                  8.01710690e-05 * tc[2] + 2.18545974e-08 * tc[3] +
                  1.42066606e-12 * tc[4];
    // species 36: C5H10
    species[36] = -2.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
    // species 37: C5H11
    species[37] = -1.90525591e+00 + 6.10632852e-02 * tc[1] -
                  4.09491825e-05 * tc[2] + 1.46093470e-08 * tc[3] -
                  2.18859615e-12 * tc[4];
    // species 38: A1C2H2
    species[38] = -7.31199276e+00 + 9.51097942e-02 * tc[1] -
                  9.56352102e-05 * tc[2] + 4.97780207e-08 * tc[3] -
                  1.02323717e-11 * tc[4];
    // species 39: A1CH2
    species[39] = -7.07053038e+00 + 8.35201507e-02 * tc[1] -
                  7.41700083e-05 * tc[2] + 3.13153847e-08 * tc[3] -
                  4.23670868e-12 * tc[4];
    // species 40: A1CHO
    species[40] = -4.47171048e+00 + 6.92891889e-02 * tc[1] -
                  4.32603509e-05 * tc[2] + 3.43871096e-09 * tc[3] +
                  4.81010261e-12 * tc[4];
    // species 41: A1CH3
    species[41] = -5.54072038e+00 + 6.85427145e-02 * tc[1] -
                  3.57113024e-05 * tc[2] - 4.19397642e-09 * tc[3] +
                  7.41779795e-12 * tc[4];
    // species 42: C7H15
    species[42] = -1.03791558e+00 + 7.56726570e-02 * tc[1] -
                  4.07473634e-05 * tc[2] + 9.32678943e-09 * tc[3] -
                  4.92360745e-13 * tc[4];
    // species 43: N-C7H16
    species[43] = -2.26836187e+00 + 8.54355820e-02 * tc[1] -
                  5.25346786e-05 * tc[2] + 1.62945721e-08 * tc[3] -
                  2.02394925e-12 * tc[4];
    // species 44: A1C2H*
    species[44] = -5.42757639e+00 + 8.36668645e-02 * tc[1] -
                  8.70106362e-05 * tc[2] + 4.70285661e-08 * tc[3] -
                  1.01816985e-11 * tc[4];
    // species 45: A2-
    species[45] = -9.02718034e+00 + 1.02924518e-01 * tc[1] -
                  8.34272010e-05 * tc[2] + 2.72135383e-08 * tc[3] -
                  7.24559554e-13 * tc[4];
    // species 46: A1C2H
    species[46] = -6.21036925e+00 + 8.65551944e-02 * tc[1] -
                  8.45007483e-05 * tc[2] + 4.21920706e-08 * tc[3] -
                  8.16766167e-12 * tc[4];
  } else {
    // species 0: N2
    species[0] = +1.92664000e+00 + 1.48797680e-03 * tc[1] -
                 5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                 6.75335100e-15 * tc[4];
    // species 1: S-CH2
    species[1] = +1.29203842e+00 + 4.65588637e-03 * tc[1] -
                 2.01191947e-06 * tc[2] + 4.17906000e-10 * tc[3] -
                 3.39716365e-14 * tc[4];
    // species 2: T-CH2
    species[2] = +1.87410113e+00 + 3.65639292e-03 * tc[1] -
                 1.40894597e-06 * tc[2] + 2.60179549e-10 * tc[3] -
                 1.87727567e-14 * tc[4];
    // species 3: O
    species[3] = +1.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 4: H2
    species[4] = +2.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 5: H
    species[5] = +1.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 6: OH
    species[6] = +1.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 7: H2O
    species[7] = +2.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 8: O2
    species[8] = +2.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 9: HO2
    species[9] = +3.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 10: CH
    species[10] = +1.87846473e+00 + 9.70913681e-04 * tc[1] +
                  1.44445655e-07 * tc[2] - 1.30687849e-10 * tc[3] +
                  1.76079383e-14 * tc[4];
    // species 11: CO
    species[11] = +1.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 12: HCO
    species[12] = +1.77217438e+00 + 4.95695526e-03 * tc[1] -
                  2.48445613e-06 * tc[2] + 5.89161778e-10 * tc[3] -
                  5.33508711e-14 * tc[4];
    // species 13: CH2O
    species[13] = +7.60690080e-01 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 14: CH3
    species[14] = +1.97812060e+00 + 5.79785200e-03 * tc[1] -
                  1.97558000e-06 * tc[2] + 3.07297900e-10 * tc[3] -
                  1.79174160e-14 * tc[4];
    // species 15: CO2
    species[15] = +2.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 16: CH4
    species[16] = +6.53262260e-01 + 1.00263099e-02 * tc[1] -
                  3.31661238e-06 * tc[2] + 5.36483138e-10 * tc[3] -
                  3.14696758e-14 * tc[4];
    // species 17: C2H3
    species[17] = +2.01672400e+00 + 1.03302292e-02 * tc[1] -
                  4.68082349e-06 * tc[2] + 1.01763288e-09 * tc[3] -
                  8.62607041e-14 * tc[4];
    // species 18: C2H4
    species[18] = +1.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 19: C2H5
    species[19] = +9.54656420e-01 + 1.73972722e-02 * tc[1] -
                  7.98206668e-06 * tc[2] + 1.75217689e-09 * tc[3] -
                  1.49641576e-13 * tc[4];
    // species 20: C2H
    species[20] = +2.16780652e+00 + 4.75221902e-03 * tc[1] -
                  1.83787077e-06 * tc[2] + 3.04190252e-10 * tc[3] -
                  1.77232770e-14 * tc[4];
    // species 21: HCCO
    species[21] = +4.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 22: C2H2
    species[22] = +3.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 23: C3H3
    species[23] = +5.14915291e+00 + 9.34063166e-03 * tc[1] -
                  3.75055354e-06 * tc[2] + 6.90156316e-10 * tc[3] -
                  4.60824994e-14 * tc[4];
    // species 24: A-C3H5
    species[24] = +1.28794927e+00 + 2.36401575e-02 * tc[1] -
                  1.27891450e-05 * tc[2] + 3.36838540e-09 * tc[3] -
                  3.47449449e-13 * tc[4];
    // species 25: N-C3H7
    species[25] = +6.70404050e+00 + 1.60415400e-02 * tc[1] -
                  5.28159670e-06 * tc[2] + 7.62544030e-10 * tc[3] -
                  3.93534620e-14 * tc[4];
    // species 26: C2H6
    species[26] = +7.18815000e-02 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 27: P-C3H4
    species[27] = +1.81460543e+00 + 1.85524496e-02 * tc[1] -
                  9.55026768e-06 * tc[2] + 2.39951370e-09 * tc[3] -
                  2.37485257e-13 * tc[4];
    // species 28: A-C3H4
    species[28] = +1.56128757e+00 + 1.95080128e-02 * tc[1] -
                  1.04061366e-05 * tc[2] + 2.70165173e-09 * tc[3] -
                  2.75074329e-13 * tc[4];
    // species 29: A1
    species[29] = -1.20624061e+00 + 4.64122440e-02 * tc[1] -
                  2.77653536e-05 * tc[2] + 7.88910537e-09 * tc[3] -
                  8.60365259e-13 * tc[4];
    // species 30: A1-
    species[30] = +3.80163360e-01 + 4.04032009e-02 * tc[1] -
                  2.42250885e-05 * tc[2] + 6.88723321e-09 * tc[3] -
                  7.50960802e-13 * tc[4];
    // species 31: C5H5
    species[31] = +3.21464919e+00 + 2.71834728e-02 * tc[1] -
                  1.33173209e-05 * tc[2] + 3.08980119e-09 * tc[3] -
                  2.77879873e-13 * tc[4];
    // species 32: C3H6
    species[32] = -5.28302018e-01 + 2.89513070e-02 * tc[1] -
                  1.56601819e-05 * tc[2] + 4.11443199e-09 * tc[3] -
                  4.23075141e-13 * tc[4];
    // species 33: C4H8
    species[33] = +2.04470367e+00 + 3.27451765e-02 * tc[1] -
                  1.45363237e-05 * tc[2] + 2.39744017e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 34: C5H6
    species[34] = -7.69462538e-01 + 4.09571826e-02 * tc[1] -
                  2.41588958e-05 * tc[2] + 6.79763480e-09 * tc[3] -
                  7.36374421e-13 * tc[4];
    // species 35: A2
    species[35] = +7.68262750e-01 + 6.89143506e-02 * tc[1] -
                  4.14322176e-05 * tc[2] + 1.17914309e-08 * tc[3] -
                  1.28597061e-12 * tc[4];
    // species 36: C5H10
    species[36] = +2.98580522e+00 + 4.12429986e-02 * tc[1] -
                  1.84390497e-05 * tc[2] + 3.06155241e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 37: C5H11
    species[37] = +3.88920629e+00 + 4.22834537e-02 * tc[1] -
                  1.85843100e-05 * tc[2] + 3.04124763e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 38: A1C2H2
    species[38] = +4.85935080e+00 + 4.72571459e-02 * tc[1] -
                  2.69864733e-05 * tc[2] + 7.35311775e-09 * tc[3] -
                  7.74900830e-13 * tc[4];
    // species 39: A1CH2
    species[39] = +2.30049696e+00 + 4.80055340e-02 * tc[1] -
                  2.78443022e-05 * tc[2] + 7.72371356e-09 * tc[3] -
                  8.27154136e-13 * tc[4];
    // species 40: A1CHO
    species[40] = +8.73557560e-01 + 5.26231551e-02 * tc[1] -
                  3.17644962e-05 * tc[2] + 9.06403069e-09 * tc[3] -
                  9.90306123e-13 * tc[4];
    // species 41: A1CH3
    species[41] = -2.01117220e+00 + 5.85301912e-02 * tc[1] -
                  3.47595069e-05 * tc[2] + 9.82180993e-09 * tc[3] -
                  1.06680870e-12 * tc[4];
    // species 42: C7H15
    species[42] = +2.74721159e+00 + 6.49345162e-02 * tc[1] -
                  3.01341025e-05 * tc[2] + 5.17418142e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 43: N-C7H16
    species[43] = +4.14079241e+00 + 6.53078671e-02 * tc[1] -
                  2.94827624e-05 * tc[2] + 4.93726726e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 44: A1C2H*
    species[44] = +6.23812069e+00 + 3.83812109e-02 * tc[1] -
                  2.18850731e-05 * tc[2] + 5.97161247e-09 * tc[3] -
                  6.30351467e-13 * tc[4];
    // species 45: A2-
    species[45] = +2.22892303e+00 + 6.31264486e-02 * tc[1] -
                  3.80582381e-05 * tc[2] + 1.08454069e-08 * tc[3] -
                  1.18342512e-12 * tc[4];
    // species 46: A1C2H
    species[46] = +4.81520488e+00 + 4.40872933e-02 * tc[1] -
                  2.52053858e-05 * tc[2] + 6.90275228e-09 * tc[3] -
                  7.31378908e-13 * tc[4];
  }
}

// compute Cp/R at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
cp_R(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +3.29867700e+00 + 1.40824040e-03 * tc[1] -
                 3.96322200e-06 * tc[2] + 5.64151500e-09 * tc[3] -
                 2.44485400e-12 * tc[4];
    // species 1: S-CH2
    species[1] = +4.19860411e+00 - 2.36661419e-03 * tc[1] +
                 8.23296220e-06 * tc[2] - 6.68815981e-09 * tc[3] +
                 1.94314737e-12 * tc[4];
    // species 2: T-CH2
    species[2] = +3.76267867e+00 + 9.68872143e-04 * tc[1] +
                 2.79489841e-06 * tc[2] - 3.85091153e-09 * tc[3] +
                 1.68741719e-12 * tc[4];
    // species 3: O
    species[3] = +3.16826710e+00 - 3.27931884e-03 * tc[1] +
                 6.64306396e-06 * tc[2] - 6.12806624e-09 * tc[3] +
                 2.11265971e-12 * tc[4];
    // species 4: H2
    species[4] = +2.34433112e+00 + 7.98052075e-03 * tc[1] -
                 1.94781510e-05 * tc[2] + 2.01572094e-08 * tc[3] -
                 7.37611761e-12 * tc[4];
    // species 5: H
    species[5] = +2.50000000e+00 + 7.05332819e-13 * tc[1] -
                 1.99591964e-15 * tc[2] + 2.30081632e-18 * tc[3] -
                 9.27732332e-22 * tc[4];
    // species 6: OH
    species[6] = +4.12530561e+00 - 3.22544939e-03 * tc[1] +
                 6.52764691e-06 * tc[2] - 5.79853643e-09 * tc[3] +
                 2.06237379e-12 * tc[4];
    // species 7: H2O
    species[7] = +4.19864056e+00 - 2.03643410e-03 * tc[1] +
                 6.52040211e-06 * tc[2] - 5.48797062e-09 * tc[3] +
                 1.77197817e-12 * tc[4];
    // species 8: O2
    species[8] = +3.78245636e+00 - 2.99673416e-03 * tc[1] +
                 9.84730201e-06 * tc[2] - 9.68129509e-09 * tc[3] +
                 3.24372837e-12 * tc[4];
    // species 9: HO2
    species[9] = +4.30179801e+00 - 4.74912051e-03 * tc[1] +
                 2.11582891e-05 * tc[2] - 2.42763894e-08 * tc[3] +
                 9.29225124e-12 * tc[4];
    // species 10: CH
    species[10] = +3.48981665e+00 + 3.23835541e-04 * tc[1] -
                  1.68899065e-06 * tc[2] + 3.16217327e-09 * tc[3] -
                  1.40609067e-12 * tc[4];
    // species 11: CO
    species[11] = +3.57953347e+00 - 6.10353680e-04 * tc[1] +
                  1.01681433e-06 * tc[2] + 9.07005884e-10 * tc[3] -
                  9.04424499e-13 * tc[4];
    // species 12: HCO
    species[12] = +4.22118584e+00 - 3.24392532e-03 * tc[1] +
                  1.37799446e-05 * tc[2] - 1.33144093e-08 * tc[3] +
                  4.33768865e-12 * tc[4];
    // species 13: CH2O
    species[13] = +4.79372315e+00 - 9.90833369e-03 * tc[1] +
                  3.73220008e-05 * tc[2] - 3.79285261e-08 * tc[3] +
                  1.31772652e-11 * tc[4];
    // species 14: CH3
    species[14] = +3.65717970e+00 + 2.12659790e-03 * tc[1] +
                  5.45838830e-06 * tc[2] - 6.61810030e-09 * tc[3] +
                  2.46570740e-12 * tc[4];
    // species 15: CO2
    species[15] = +2.35677352e+00 + 8.98459677e-03 * tc[1] -
                  7.12356269e-06 * tc[2] + 2.45919022e-09 * tc[3] -
                  1.43699548e-13 * tc[4];
    // species 16: CH4
    species[16] = +5.14911468e+00 - 1.36622009e-02 * tc[1] +
                  4.91453921e-05 * tc[2] - 4.84246767e-08 * tc[3] +
                  1.66603441e-11 * tc[4];
    // species 17: C2H3
    species[17] = +3.21246645e+00 + 1.51479162e-03 * tc[1] +
                  2.59209412e-05 * tc[2] - 3.57657847e-08 * tc[3] +
                  1.47150873e-11 * tc[4];
    // species 18: C2H4
    species[18] = +3.95920148e+00 - 7.57052247e-03 * tc[1] +
                  5.70990292e-05 * tc[2] - 6.91588753e-08 * tc[3] +
                  2.69884373e-11 * tc[4];
    // species 19: C2H5
    species[19] = +4.30646568e+00 - 4.18658892e-03 * tc[1] +
                  4.97142807e-05 * tc[2] - 5.99126606e-08 * tc[3] +
                  2.30509004e-11 * tc[4];
    // species 20: C2H
    species[20] = +2.88965733e+00 + 1.34099611e-02 * tc[1] -
                  2.84769501e-05 * tc[2] + 2.94791045e-08 * tc[3] -
                  1.09331511e-11 * tc[4];
    // species 21: HCCO
    species[21] = +2.25172140e+00 + 1.76550210e-02 * tc[1] -
                  2.37291010e-05 * tc[2] + 1.72757590e-08 * tc[3] -
                  5.06648110e-12 * tc[4];
    // species 22: C2H2
    species[22] = +8.08681094e-01 + 2.33615629e-02 * tc[1] -
                  3.55171815e-05 * tc[2] + 2.80152437e-08 * tc[3] -
                  8.50072974e-12 * tc[4];
    // species 23: C3H3
    species[23] = +1.40299238e+00 + 3.01773327e-02 * tc[1] -
                  3.98449373e-05 * tc[2] + 2.93534629e-08 * tc[3] -
                  8.70554579e-12 * tc[4];
    // species 24: A-C3H5
    species[24] = -1.03516444e+00 + 3.75043366e-02 * tc[1] -
                  3.26381242e-05 * tc[2] + 1.47662613e-08 * tc[3] -
                  2.43741154e-12 * tc[4];
    // species 25: N-C3H7
    species[25] = +1.04754730e+00 + 2.60077940e-02 * tc[1] +
                  2.35622520e-06 * tc[2] - 1.95923170e-08 * tc[3] +
                  9.36801160e-12 * tc[4];
    // species 26: C2H6
    species[26] = +4.29142492e+00 - 5.50154270e-03 * tc[1] +
                  5.99438288e-05 * tc[2] - 7.08466285e-08 * tc[3] +
                  2.68685771e-11 * tc[4];
    // species 27: P-C3H4
    species[27] = +1.46175323e+00 + 2.46026602e-02 * tc[1] -
                  1.90219395e-05 * tc[2] + 8.60363422e-09 * tc[3] -
                  1.66729240e-12 * tc[4];
    // species 28: A-C3H4
    species[28] = +3.68928265e-01 + 2.89351397e-02 * tc[1] -
                  2.44386408e-05 * tc[2] + 1.12547166e-08 * tc[3] -
                  2.03040262e-12 * tc[4];
    // species 29: A1
    species[29] = -5.51558393e+00 + 6.45453225e-02 * tc[1] -
                  4.41402928e-05 * tc[2] + 7.47712161e-09 * tc[3] +
                  3.10282254e-12 * tc[4];
    // species 30: A1-
    species[30] = -4.87654845e+00 + 6.26805782e-02 * tc[1] -
                  4.87402286e-05 * tc[2] + 1.41122287e-08 * tc[3] +
                  5.18518312e-13 * tc[4];
    // species 31: C5H5
    species[31] = -7.37844042e+00 + 9.72391818e-02 * tc[1] -
                  1.69579138e-04 * tc[2] + 1.51818667e-07 * tc[3] -
                  5.12075479e-11 * tc[4];
    // species 32: C3H6
    species[32] = -2.29261670e-03 + 3.10261065e-02 * tc[1] -
                  1.67151548e-05 * tc[2] + 1.89594170e-09 * tc[3] +
                  1.24957915e-12 * tc[4];
    // species 33: C4H8
    species[33] = -8.31372089e-01 + 4.52580978e-02 * tc[1] -
                  2.93658559e-05 * tc[2] + 1.00220436e-08 * tc[3] -
                  1.43191680e-12 * tc[4];
    // species 34: C5H6
    species[34] = -5.13691194e+00 + 6.06953453e-02 * tc[1] -
                  4.60552837e-05 * tc[2] + 1.28457201e-08 * tc[3] +
                  7.41214852e-13 * tc[4];
    // species 35: A2
    species[35] = -8.72434585e+00 + 1.05376008e-01 * tc[1] -
                  8.01710690e-05 * tc[2] + 2.18545974e-08 * tc[3] +
                  1.42066606e-12 * tc[4];
    // species 36: C5H10
    species[36] = -1.06223481e+00 + 5.74218294e-02 * tc[1] -
                  3.74486890e-05 * tc[2] + 1.27364989e-08 * tc[3] -
                  1.79609789e-12 * tc[4];
    // species 37: C5H11
    species[37] = -9.05255912e-01 + 6.10632852e-02 * tc[1] -
                  4.09491825e-05 * tc[2] + 1.46093470e-08 * tc[3] -
                  2.18859615e-12 * tc[4];
    // species 38: A1C2H2
    species[38] = -6.31199276e+00 + 9.51097942e-02 * tc[1] -
                  9.56352102e-05 * tc[2] + 4.97780207e-08 * tc[3] -
                  1.02323717e-11 * tc[4];
    // species 39: A1CH2
    species[39] = -6.07053038e+00 + 8.35201507e-02 * tc[1] -
                  7.41700083e-05 * tc[2] + 3.13153847e-08 * tc[3] -
                  4.23670868e-12 * tc[4];
    // species 40: A1CHO
    species[40] = -3.47171048e+00 + 6.92891889e-02 * tc[1] -
                  4.32603509e-05 * tc[2] + 3.43871096e-09 * tc[3] +
                  4.81010261e-12 * tc[4];
    // species 41: A1CH3
    species[41] = -4.54072038e+00 + 6.85427145e-02 * tc[1] -
                  3.57113024e-05 * tc[2] - 4.19397642e-09 * tc[3] +
                  7.41779795e-12 * tc[4];
    // species 42: C7H15
    species[42] = -3.79155767e-02 + 7.56726570e-02 * tc[1] -
                  4.07473634e-05 * tc[2] + 9.32678943e-09 * tc[3] -
                  4.92360745e-13 * tc[4];
    // species 43: N-C7H16
    species[43] = -1.26836187e+00 + 8.54355820e-02 * tc[1] -
                  5.25346786e-05 * tc[2] + 1.62945721e-08 * tc[3] -
                  2.02394925e-12 * tc[4];
    // species 44: A1C2H*
    species[44] = -4.42757639e+00 + 8.36668645e-02 * tc[1] -
                  8.70106362e-05 * tc[2] + 4.70285661e-08 * tc[3] -
                  1.01816985e-11 * tc[4];
    // species 45: A2-
    species[45] = -8.02718034e+00 + 1.02924518e-01 * tc[1] -
                  8.34272010e-05 * tc[2] + 2.72135383e-08 * tc[3] -
                  7.24559554e-13 * tc[4];
    // species 46: A1C2H
    species[46] = -5.21036925e+00 + 8.65551944e-02 * tc[1] -
                  8.45007483e-05 * tc[2] + 4.21920706e-08 * tc[3] -
                  8.16766167e-12 * tc[4];
  } else {
    // species 0: N2
    species[0] = +2.92664000e+00 + 1.48797680e-03 * tc[1] -
                 5.68476000e-07 * tc[2] + 1.00970380e-10 * tc[3] -
                 6.75335100e-15 * tc[4];
    // species 1: S-CH2
    species[1] = +2.29203842e+00 + 4.65588637e-03 * tc[1] -
                 2.01191947e-06 * tc[2] + 4.17906000e-10 * tc[3] -
                 3.39716365e-14 * tc[4];
    // species 2: T-CH2
    species[2] = +2.87410113e+00 + 3.65639292e-03 * tc[1] -
                 1.40894597e-06 * tc[2] + 2.60179549e-10 * tc[3] -
                 1.87727567e-14 * tc[4];
    // species 3: O
    species[3] = +2.56942078e+00 - 8.59741137e-05 * tc[1] +
                 4.19484589e-08 * tc[2] - 1.00177799e-11 * tc[3] +
                 1.22833691e-15 * tc[4];
    // species 4: H2
    species[4] = +3.33727920e+00 - 4.94024731e-05 * tc[1] +
                 4.99456778e-07 * tc[2] - 1.79566394e-10 * tc[3] +
                 2.00255376e-14 * tc[4];
    // species 5: H
    species[5] = +2.50000001e+00 - 2.30842973e-11 * tc[1] +
                 1.61561948e-14 * tc[2] - 4.73515235e-18 * tc[3] +
                 4.98197357e-22 * tc[4];
    // species 6: OH
    species[6] = +2.86472886e+00 + 1.05650448e-03 * tc[1] -
                 2.59082758e-07 * tc[2] + 3.05218674e-11 * tc[3] -
                 1.33195876e-15 * tc[4];
    // species 7: H2O
    species[7] = +3.03399249e+00 + 2.17691804e-03 * tc[1] -
                 1.64072518e-07 * tc[2] - 9.70419870e-11 * tc[3] +
                 1.68200992e-14 * tc[4];
    // species 8: O2
    species[8] = +3.28253784e+00 + 1.48308754e-03 * tc[1] -
                 7.57966669e-07 * tc[2] + 2.09470555e-10 * tc[3] -
                 2.16717794e-14 * tc[4];
    // species 9: HO2
    species[9] = +4.01721090e+00 + 2.23982013e-03 * tc[1] -
                 6.33658150e-07 * tc[2] + 1.14246370e-10 * tc[3] -
                 1.07908535e-14 * tc[4];
    // species 10: CH
    species[10] = +2.87846473e+00 + 9.70913681e-04 * tc[1] +
                  1.44445655e-07 * tc[2] - 1.30687849e-10 * tc[3] +
                  1.76079383e-14 * tc[4];
    // species 11: CO
    species[11] = +2.71518561e+00 + 2.06252743e-03 * tc[1] -
                  9.98825771e-07 * tc[2] + 2.30053008e-10 * tc[3] -
                  2.03647716e-14 * tc[4];
    // species 12: HCO
    species[12] = +2.77217438e+00 + 4.95695526e-03 * tc[1] -
                  2.48445613e-06 * tc[2] + 5.89161778e-10 * tc[3] -
                  5.33508711e-14 * tc[4];
    // species 13: CH2O
    species[13] = +1.76069008e+00 + 9.20000082e-03 * tc[1] -
                  4.42258813e-06 * tc[2] + 1.00641212e-09 * tc[3] -
                  8.83855640e-14 * tc[4];
    // species 14: CH3
    species[14] = +2.97812060e+00 + 5.79785200e-03 * tc[1] -
                  1.97558000e-06 * tc[2] + 3.07297900e-10 * tc[3] -
                  1.79174160e-14 * tc[4];
    // species 15: CO2
    species[15] = +3.85746029e+00 + 4.41437026e-03 * tc[1] -
                  2.21481404e-06 * tc[2] + 5.23490188e-10 * tc[3] -
                  4.72084164e-14 * tc[4];
    // species 16: CH4
    species[16] = +1.65326226e+00 + 1.00263099e-02 * tc[1] -
                  3.31661238e-06 * tc[2] + 5.36483138e-10 * tc[3] -
                  3.14696758e-14 * tc[4];
    // species 17: C2H3
    species[17] = +3.01672400e+00 + 1.03302292e-02 * tc[1] -
                  4.68082349e-06 * tc[2] + 1.01763288e-09 * tc[3] -
                  8.62607041e-14 * tc[4];
    // species 18: C2H4
    species[18] = +2.03611116e+00 + 1.46454151e-02 * tc[1] -
                  6.71077915e-06 * tc[2] + 1.47222923e-09 * tc[3] -
                  1.25706061e-13 * tc[4];
    // species 19: C2H5
    species[19] = +1.95465642e+00 + 1.73972722e-02 * tc[1] -
                  7.98206668e-06 * tc[2] + 1.75217689e-09 * tc[3] -
                  1.49641576e-13 * tc[4];
    // species 20: C2H
    species[20] = +3.16780652e+00 + 4.75221902e-03 * tc[1] -
                  1.83787077e-06 * tc[2] + 3.04190252e-10 * tc[3] -
                  1.77232770e-14 * tc[4];
    // species 21: HCCO
    species[21] = +5.62820580e+00 + 4.08534010e-03 * tc[1] -
                  1.59345470e-06 * tc[2] + 2.86260520e-10 * tc[3] -
                  1.94078320e-14 * tc[4];
    // species 22: C2H2
    species[22] = +4.14756964e+00 + 5.96166664e-03 * tc[1] -
                  2.37294852e-06 * tc[2] + 4.67412171e-10 * tc[3] -
                  3.61235213e-14 * tc[4];
    // species 23: C3H3
    species[23] = +6.14915291e+00 + 9.34063166e-03 * tc[1] -
                  3.75055354e-06 * tc[2] + 6.90156316e-10 * tc[3] -
                  4.60824994e-14 * tc[4];
    // species 24: A-C3H5
    species[24] = +2.28794927e+00 + 2.36401575e-02 * tc[1] -
                  1.27891450e-05 * tc[2] + 3.36838540e-09 * tc[3] -
                  3.47449449e-13 * tc[4];
    // species 25: N-C3H7
    species[25] = +7.70404050e+00 + 1.60415400e-02 * tc[1] -
                  5.28159670e-06 * tc[2] + 7.62544030e-10 * tc[3] -
                  3.93534620e-14 * tc[4];
    // species 26: C2H6
    species[26] = +1.07188150e+00 + 2.16852677e-02 * tc[1] -
                  1.00256067e-05 * tc[2] + 2.21412001e-09 * tc[3] -
                  1.90002890e-13 * tc[4];
    // species 27: P-C3H4
    species[27] = +2.81460543e+00 + 1.85524496e-02 * tc[1] -
                  9.55026768e-06 * tc[2] + 2.39951370e-09 * tc[3] -
                  2.37485257e-13 * tc[4];
    // species 28: A-C3H4
    species[28] = +2.56128757e+00 + 1.95080128e-02 * tc[1] -
                  1.04061366e-05 * tc[2] + 2.70165173e-09 * tc[3] -
                  2.75074329e-13 * tc[4];
    // species 29: A1
    species[29] = -2.06240612e-01 + 4.64122440e-02 * tc[1] -
                  2.77653536e-05 * tc[2] + 7.88910537e-09 * tc[3] -
                  8.60365259e-13 * tc[4];
    // species 30: A1-
    species[30] = +1.38016336e+00 + 4.04032009e-02 * tc[1] -
                  2.42250885e-05 * tc[2] + 6.88723321e-09 * tc[3] -
                  7.50960802e-13 * tc[4];
    // species 31: C5H5
    species[31] = +4.21464919e+00 + 2.71834728e-02 * tc[1] -
                  1.33173209e-05 * tc[2] + 3.08980119e-09 * tc[3] -
                  2.77879873e-13 * tc[4];
    // species 32: C3H6
    species[32] = +4.71697982e-01 + 2.89513070e-02 * tc[1] -
                  1.56601819e-05 * tc[2] + 4.11443199e-09 * tc[3] -
                  4.23075141e-13 * tc[4];
    // species 33: C4H8
    species[33] = +3.04470367e+00 + 3.27451765e-02 * tc[1] -
                  1.45363237e-05 * tc[2] + 2.39744017e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 34: C5H6
    species[34] = +2.30537462e-01 + 4.09571826e-02 * tc[1] -
                  2.41588958e-05 * tc[2] + 6.79763480e-09 * tc[3] -
                  7.36374421e-13 * tc[4];
    // species 35: A2
    species[35] = +1.76826275e+00 + 6.89143506e-02 * tc[1] -
                  4.14322176e-05 * tc[2] + 1.17914309e-08 * tc[3] -
                  1.28597061e-12 * tc[4];
    // species 36: C5H10
    species[36] = +3.98580522e+00 + 4.12429986e-02 * tc[1] -
                  1.84390497e-05 * tc[2] + 3.06155241e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 37: C5H11
    species[37] = +4.88920629e+00 + 4.22834537e-02 * tc[1] -
                  1.85843100e-05 * tc[2] + 3.04124763e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 38: A1C2H2
    species[38] = +5.85935080e+00 + 4.72571459e-02 * tc[1] -
                  2.69864733e-05 * tc[2] + 7.35311775e-09 * tc[3] -
                  7.74900830e-13 * tc[4];
    // species 39: A1CH2
    species[39] = +3.30049696e+00 + 4.80055340e-02 * tc[1] -
                  2.78443022e-05 * tc[2] + 7.72371356e-09 * tc[3] -
                  8.27154136e-13 * tc[4];
    // species 40: A1CHO
    species[40] = +1.87355756e+00 + 5.26231551e-02 * tc[1] -
                  3.17644962e-05 * tc[2] + 9.06403069e-09 * tc[3] -
                  9.90306123e-13 * tc[4];
    // species 41: A1CH3
    species[41] = -1.01117220e+00 + 5.85301912e-02 * tc[1] -
                  3.47595069e-05 * tc[2] + 9.82180993e-09 * tc[3] -
                  1.06680870e-12 * tc[4];
    // species 42: C7H15
    species[42] = +3.74721159e+00 + 6.49345162e-02 * tc[1] -
                  3.01341025e-05 * tc[2] + 5.17418142e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 43: N-C7H16
    species[43] = +5.14079241e+00 + 6.53078671e-02 * tc[1] -
                  2.94827624e-05 * tc[2] + 4.93726726e-09 * tc[3] +
                  0.00000000e+00 * tc[4];
    // species 44: A1C2H*
    species[44] = +7.23812069e+00 + 3.83812109e-02 * tc[1] -
                  2.18850731e-05 * tc[2] + 5.97161247e-09 * tc[3] -
                  6.30351467e-13 * tc[4];
    // species 45: A2-
    species[45] = +3.22892303e+00 + 6.31264486e-02 * tc[1] -
                  3.80582381e-05 * tc[2] + 1.08454069e-08 * tc[3] -
                  1.18342512e-12 * tc[4];
    // species 46: A1C2H
    species[46] = +5.81520488e+00 + 4.40872933e-02 * tc[1] -
                  2.52053858e-05 * tc[2] + 6.90275228e-09 * tc[3] -
                  7.31378908e-13 * tc[4];
  }
}

// compute the g/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
gibbs(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = -1.020899900000000e+03 * invT - 6.516950000000001e-01 -
                 3.298677000000000e+00 * tc[0] - 7.041202000000000e-04 * tc[1] +
                 6.605369999999999e-07 * tc[2] - 4.701262500000001e-10 * tc[3] +
                 1.222427000000000e-13 * tc[4];
    // species 1: S-CH2
    species[1] = +5.049681630000000e+04 * invT + 4.967723077000000e+00 -
                 4.198604110000000e+00 * tc[0] + 1.183307095000000e-03 * tc[1] -
                 1.372160366666667e-06 * tc[2] + 5.573466508333334e-10 * tc[3] -
                 9.715736850000000e-14 * tc[4];
    // species 2: T-CH2
    species[2] = +4.600404010000000e+04 * invT + 2.200146820000000e+00 -
                 3.762678670000000e+00 * tc[0] - 4.844360715000000e-04 * tc[1] -
                 4.658164016666667e-07 * tc[2] + 3.209092941666667e-10 * tc[3] -
                 8.437085950000000e-14 * tc[4];
    // species 3: O
    species[3] = +2.912225920000000e+04 * invT + 1.116333640000000e+00 -
                 3.168267100000000e+00 * tc[0] + 1.639659420000000e-03 * tc[1] -
                 1.107177326666667e-06 * tc[2] + 5.106721866666666e-10 * tc[3] -
                 1.056329855000000e-13 * tc[4];
    // species 4: H2
    species[4] = -9.179351730000000e+02 * invT + 1.661320882000000e+00 -
                 2.344331120000000e+00 * tc[0] - 3.990260375000000e-03 * tc[1] +
                 3.246358500000000e-06 * tc[2] - 1.679767450000000e-09 * tc[3] +
                 3.688058805000000e-13 * tc[4];
    // species 5: H
    species[5] = +2.547365990000000e+04 * invT + 2.946682853000000e+00 -
                 2.500000000000000e+00 * tc[0] - 3.526664095000000e-13 * tc[1] +
                 3.326532733333333e-16 * tc[2] - 1.917346933333333e-19 * tc[3] +
                 4.638661660000000e-23 * tc[4];
    // species 6: OH
    species[6] = +3.381538120000000e+03 * invT + 4.815738570000000e+00 -
                 4.125305610000000e+00 * tc[0] + 1.612724695000000e-03 * tc[1] -
                 1.087941151666667e-06 * tc[2] + 4.832113691666666e-10 * tc[3] -
                 1.031186895000000e-13 * tc[4];
    // species 7: H2O
    species[7] = -3.029372670000000e+04 * invT + 5.047672768000000e+00 -
                 4.198640560000000e+00 * tc[0] + 1.018217050000000e-03 * tc[1] -
                 1.086733685000000e-06 * tc[2] + 4.573308850000000e-10 * tc[3] -
                 8.859890850000000e-14 * tc[4];
    // species 8: O2
    species[8] = -1.063943560000000e+03 * invT + 1.247806300000001e-01 -
                 3.782456360000000e+00 * tc[0] + 1.498367080000000e-03 * tc[1] -
                 1.641217001666667e-06 * tc[2] + 8.067745908333334e-10 * tc[3] -
                 1.621864185000000e-13 * tc[4];
    // species 9: HO2
    species[9] = +2.948080400000000e+02 * invT + 5.851355599999999e-01 -
                 4.301798010000000e+00 * tc[0] + 2.374560255000000e-03 * tc[1] -
                 3.526381516666666e-06 * tc[2] + 2.023032450000000e-09 * tc[3] -
                 4.646125620000001e-13 * tc[4];
    // species 10: CH
    species[10] = +7.079729340000000e+04 * invT + 1.405805570000000e+00 -
                  3.489816650000000e+00 * tc[0] -
                  1.619177705000000e-04 * tc[1] +
                  2.814984416666667e-07 * tc[2] -
                  2.635144391666666e-10 * tc[3] + 7.030453350000001e-14 * tc[4];
    // species 11: CO
    species[11] = -1.434408600000000e+04 * invT + 7.112418999999992e-02 -
                  3.579533470000000e+00 * tc[0] +
                  3.051768400000000e-04 * tc[1] -
                  1.694690550000000e-07 * tc[2] -
                  7.558382366666667e-11 * tc[3] + 4.522122495000000e-14 * tc[4];
    // species 12: HCO
    species[12] = +3.839564960000000e+03 * invT + 8.268134100000002e-01 -
                  4.221185840000000e+00 * tc[0] +
                  1.621962660000000e-03 * tc[1] -
                  2.296657433333333e-06 * tc[2] +
                  1.109534108333333e-09 * tc[3] - 2.168844325000000e-13 * tc[4];
    // species 13: CH2O
    species[13] = -1.430895670000000e+04 * invT + 4.190910250000000e+00 -
                  4.793723150000000e+00 * tc[0] +
                  4.954166845000000e-03 * tc[1] -
                  6.220333466666666e-06 * tc[2] +
                  3.160710508333333e-09 * tc[3] - 6.588632600000000e-13 * tc[4];
    // species 14: CH3
    species[14] = +1.642271600000000e+04 * invT + 1.983644300000000e+00 -
                  3.657179700000000e+00 * tc[0] -
                  1.063298950000000e-03 * tc[1] -
                  9.097313833333333e-07 * tc[2] +
                  5.515083583333334e-10 * tc[3] - 1.232853700000000e-13 * tc[4];
    // species 15: CO2
    species[15] = -4.837196970000000e+04 * invT - 7.544278700000000e+00 -
                  2.356773520000000e+00 * tc[0] -
                  4.492298385000000e-03 * tc[1] +
                  1.187260448333333e-06 * tc[2] -
                  2.049325183333333e-10 * tc[3] + 7.184977399999999e-15 * tc[4];
    // species 16: CH4
    species[16] = -1.024659830000000e+04 * invT + 9.787603100000000e+00 -
                  5.149114680000000e+00 * tc[0] +
                  6.831100450000000e-03 * tc[1] -
                  8.190898683333333e-06 * tc[2] +
                  4.035389725000000e-09 * tc[3] - 8.330172050000000e-13 * tc[4];
    // species 17: C2H3
    species[17] = +3.485984680000000e+04 * invT - 5.298073800000000e+00 -
                  3.212466450000000e+00 * tc[0] -
                  7.573958100000000e-04 * tc[1] -
                  4.320156866666666e-06 * tc[2] +
                  2.980482058333333e-09 * tc[3] - 7.357543650000000e-13 * tc[4];
    // species 18: C2H4
    species[18] = +5.089775930000000e+03 * invT - 1.381294799999999e-01 -
                  3.959201480000000e+00 * tc[0] +
                  3.785261235000000e-03 * tc[1] -
                  9.516504866666667e-06 * tc[2] +
                  5.763239608333333e-09 * tc[3] - 1.349421865000000e-12 * tc[4];
    // species 19: C2H5
    species[19] = +1.284162650000000e+04 * invT - 4.007435600000004e-01 -
                  4.306465680000000e+00 * tc[0] +
                  2.093294460000000e-03 * tc[1] -
                  8.285713450000000e-06 * tc[2] +
                  4.992721716666666e-09 * tc[3] - 1.152545020000000e-12 * tc[4];
    // species 20: C2H
    species[20] = +6.683939320000001e+04 * invT - 3.333307050000000e+00 -
                  2.889657330000000e+00 * tc[0] -
                  6.704980550000000e-03 * tc[1] +
                  4.746158350000000e-06 * tc[2] -
                  2.456592041666667e-09 * tc[3] + 5.466575550000000e-13 * tc[4];
    // species 21: HCCO
    species[21] = +2.005944900000000e+04 * invT - 1.023869560000000e+01 -
                  2.251721400000000e+00 * tc[0] -
                  8.827510500000000e-03 * tc[1] +
                  3.954850166666666e-06 * tc[2] -
                  1.439646583333334e-09 * tc[3] + 2.533240550000000e-13 * tc[4];
    // species 22: C2H2
    species[22] = +2.642898070000000e+04 * invT - 1.313102400600000e+01 -
                  8.086810940000000e-01 * tc[0] -
                  1.168078145000000e-02 * tc[1] +
                  5.919530250000000e-06 * tc[2] -
                  2.334603641666667e-09 * tc[3] + 4.250364870000000e-13 * tc[4];
    // species 23: C3H3
    species[23] = +3.931082200000000e+04 * invT - 1.374979212000000e+01 -
                  1.402992380000000e+00 * tc[0] -
                  1.508866635000000e-02 * tc[1] +
                  6.640822883333333e-06 * tc[2] -
                  2.446121908333333e-09 * tc[3] + 4.352772895000000e-13 * tc[4];
    // species 24: A-C3H5
    species[24] = +1.887922540000000e+04 * invT - 2.818027154000000e+01 +
                  1.035164440000000e+00 * tc[0] -
                  1.875216830000000e-02 * tc[1] +
                  5.439687366666666e-06 * tc[2] -
                  1.230521775000000e-09 * tc[3] + 1.218705770000000e-13 * tc[4];
    // species 25: N-C3H7
    species[25] = +1.063263700000000e+04 * invT - 2.009432870000000e+01 -
                  1.047547300000000e+00 * tc[0] -
                  1.300389700000000e-02 * tc[1] -
                  3.927042000000000e-07 * tc[2] +
                  1.632693083333333e-09 * tc[3] - 4.684005800000000e-13 * tc[4];
    // species 26: C2H6
    species[26] = -1.152220550000000e+04 * invT + 1.624601760000000e+00 -
                  4.291424920000000e+00 * tc[0] +
                  2.750771350000000e-03 * tc[1] -
                  9.990638133333334e-06 * tc[2] +
                  5.903885708333334e-09 * tc[3] - 1.343428855000000e-12 * tc[4];
    // species 27: P-C3H4
    species[27] = +2.092097930000000e+04 * invT - 1.346450527000000e+01 -
                  1.461753230000000e+00 * tc[0] -
                  1.230133010000000e-02 * tc[1] +
                  3.170323250000000e-06 * tc[2] -
                  7.169695183333333e-10 * tc[3] + 8.336462000000000e-14 * tc[4];
    // species 28: A-C3H4
    species[28] = +2.175852560000000e+04 * invT - 1.915779283500000e+01 -
                  3.689282650000000e-01 * tc[0] -
                  1.446756985000000e-02 * tc[1] +
                  4.073106800000000e-06 * tc[2] -
                  9.378930499999999e-10 * tc[3] + 1.015201310000000e-13 * tc[4];
    // species 29: A1
    species[29] = +9.110314570000000e+03 * invT - 5.204881323000000e+01 +
                  5.515583930000000e+00 * tc[0] -
                  3.227266125000000e-02 * tc[1] +
                  7.356715466666667e-06 * tc[2] -
                  6.230934675000001e-10 * tc[3] - 1.551411270000000e-13 * tc[4];
    // species 30: A1-
    species[30] = +3.992694380000000e+04 * invT - 5.087296575000000e+01 +
                  4.876548450000000e+00 * tc[0] -
                  3.134028910000000e-02 * tc[1] +
                  8.123371433333333e-06 * tc[2] -
                  1.176019058333333e-09 * tc[3] - 2.592591560000000e-14 * tc[4];
    // species 31: C5H5
    species[31] = +3.055146620000000e+04 * invT - 5.866139432000000e+01 +
                  7.378440420000000e+00 * tc[0] -
                  4.861959090000000e-02 * tc[1] +
                  2.826318966666666e-05 * tc[2] -
                  1.265155558333333e-08 * tc[3] + 2.560377395000000e-12 * tc[4];
    // species 32: C3H6
    species[32] = +1.134374060000000e+03 * invT - 2.357425271670000e+01 +
                  2.292616700000000e-03 * tc[0] -
                  1.551305325000000e-02 * tc[1] +
                  2.785859133333333e-06 * tc[2] -
                  1.579951416666667e-10 * tc[3] - 6.247895749999999e-14 * tc[4];
    // species 33: C4H8
    species[33] = -1.578750350000000e+03 * invT - 3.033979568900000e+01 +
                  8.313720890000000e-01 * tc[0] -
                  2.262904890000000e-02 * tc[1] +
                  4.894309316666667e-06 * tc[2] -
                  8.351702999999999e-10 * tc[3] + 7.159584000000000e-14 * tc[4];
    // species 34: C5H6
    species[34] = +1.536757130000000e+04 * invT - 5.129366784000000e+01 +
                  5.136911940000000e+00 * tc[0] -
                  3.034767265000000e-02 * tc[1] +
                  7.675880616666666e-06 * tc[2] -
                  1.070476675000000e-09 * tc[3] - 3.706074260000000e-14 * tc[4];
    // species 35: A2
    species[35] = +1.480597740000000e+04 * invT - 7.070709985000001e+01 +
                  8.724345850000001e+00 * tc[0] -
                  5.268800400000000e-02 * tc[1] +
                  1.336184483333333e-05 * tc[2] -
                  1.821216450000000e-09 * tc[3] - 7.103330300000001e-14 * tc[4];
    // species 36: C5H10
    species[36] = -4.465466660000000e+03 * invT - 3.333621381000000e+01 +
                  1.062234810000000e+00 * tc[0] -
                  2.871091470000000e-02 * tc[1] +
                  6.241448166666667e-06 * tc[2] -
                  1.061374908333333e-09 * tc[3] + 8.980489449999999e-14 * tc[4];
    // species 37: C5H11
    species[37] = +4.839953030000000e+03 * invT - 3.346275221200000e+01 +
                  9.052559120000000e-01 * tc[0] -
                  3.053164260000000e-02 * tc[1] +
                  6.824863750000000e-06 * tc[2] -
                  1.217445583333333e-09 * tc[3] + 1.094298075000000e-13 * tc[4];
    // species 38: A1C2H2
    species[38] = +4.573309750000000e+04 * invT - 5.985951496000001e+01 +
                  6.311992760000000e+00 * tc[0] -
                  4.755489710000000e-02 * tc[1] +
                  1.593920170000000e-05 * tc[2] -
                  4.148168391666667e-09 * tc[3] + 5.116185850000001e-13 * tc[4];
    // species 39: A1CH2
    species[39] = +2.358947120000000e+04 * invT - 5.686374758000000e+01 +
                  6.070530380000000e+00 * tc[0] -
                  4.176007535000000e-02 * tc[1] +
                  1.236166805000000e-05 * tc[2] -
                  2.609615391666667e-09 * tc[3] + 2.118354340000000e-13 * tc[4];
    // species 40: A1CHO
    species[40] = -6.145587740000000e+03 * invT - 4.488111288000000e+01 +
                  3.471710480000000e+00 * tc[0] -
                  3.464459445000000e-02 * tc[1] +
                  7.210058483333333e-06 * tc[2] -
                  2.865592466666667e-10 * tc[3] - 2.405051305000000e-13 * tc[4];
    // species 41: A1CH3
    species[41] = +4.641210870000000e+03 * invT - 5.029720528000000e+01 +
                  4.540720380000000e+00 * tc[0] -
                  3.427135725000000e-02 * tc[1] +
                  5.951883733333334e-06 * tc[2] +
                  3.494980350000000e-10 * tc[3] - 3.708898975000000e-13 * tc[4];
    // species 42: C7H15
    species[42] = -2.356053030000000e+03 * invT - 3.377006617670000e+01 +
                  3.791557670000000e-02 * tc[0] -
                  3.783632850000000e-02 * tc[1] +
                  6.791227233333333e-06 * tc[2] -
                  7.772324525000000e-10 * tc[3] + 2.461803725000000e-14 * tc[4];
    // species 43: N-C7H16
    species[43] = -2.565865650000000e+04 * invT - 3.664165307000000e+01 +
                  1.268361870000000e+00 * tc[0] -
                  4.271779100000000e-02 * tc[1] +
                  8.755779766666667e-06 * tc[2] -
                  1.357881008333333e-09 * tc[3] + 1.011974625000000e-13 * tc[4];
    // species 44: A1C2H*
    species[44] = +6.733023590000000e+04 * invT - 4.923940509000000e+01 +
                  4.427576390000000e+00 * tc[0] -
                  4.183343225000000e-02 * tc[1] +
                  1.450177270000000e-05 * tc[2] -
                  3.919047175000000e-09 * tc[3] + 5.090849250000000e-13 * tc[4];
    // species 45: A2-
    species[45] = +5.013633440000000e+04 * invT - 6.891740674000000e+01 +
                  8.027180339999999e+00 * tc[0] -
                  5.146225900000000e-02 * tc[1] +
                  1.390453350000000e-05 * tc[2] -
                  2.267794858333333e-09 * tc[3] + 3.622797770000000e-14 * tc[4];
    // species 46: A1C2H
    species[46] = +3.524886200000000e+04 * invT - 5.215487495000000e+01 +
                  5.210369250000000e+00 * tc[0] -
                  4.327759720000000e-02 * tc[1] +
                  1.408345805000000e-05 * tc[2] -
                  3.516005883333333e-09 * tc[3] + 4.083830835000000e-13 * tc[4];
  } else {
    // species 0: N2
    species[0] = -9.227977000000000e+02 * invT - 3.053888000000000e+00 -
                 2.926640000000000e+00 * tc[0] - 7.439884000000000e-04 * tc[1] +
                 9.474600000000001e-08 * tc[2] - 8.414198333333333e-12 * tc[3] +
                 3.376675500000000e-16 * tc[4];
    // species 1: S-CH2
    species[1] = +5.092599970000000e+04 * invT - 6.334463270000000e+00 -
                 2.292038420000000e+00 * tc[0] - 2.327943185000000e-03 * tc[1] +
                 3.353199116666667e-07 * tc[2] - 3.482550000000000e-11 * tc[3] +
                 1.698581825000000e-15 * tc[4];
    // species 2: T-CH2
    species[2] = +4.626360400000000e+04 * invT - 3.297092110000000e+00 -
                 2.874101130000000e+00 * tc[0] - 1.828196460000000e-03 * tc[1] +
                 2.348243283333333e-07 * tc[2] - 2.168162908333333e-11 * tc[3] +
                 9.386378350000000e-16 * tc[4];
    // species 3: O
    species[3] = +2.921757910000000e+04 * invT - 2.214917859999999e+00 -
                 2.569420780000000e+00 * tc[0] + 4.298705685000000e-05 * tc[1] -
                 6.991409816666667e-09 * tc[2] + 8.348149916666666e-13 * tc[3] -
                 6.141684549999999e-17 * tc[4];
    // species 4: H2
    species[4] = -9.501589220000000e+02 * invT + 6.542302510000000e+00 -
                 3.337279200000000e+00 * tc[0] + 2.470123655000000e-05 * tc[1] -
                 8.324279633333333e-08 * tc[2] + 1.496386616666667e-11 * tc[3] -
                 1.001276880000000e-15 * tc[4];
    // species 5: H
    species[5] = +2.547365990000000e+04 * invT + 2.946682924000000e+00 -
                 2.500000010000000e+00 * tc[0] + 1.154214865000000e-11 * tc[1] -
                 2.692699133333334e-15 * tc[2] + 3.945960291666667e-19 * tc[3] -
                 2.490986785000000e-23 * tc[4];
    // species 6: OH
    species[6] = +3.718857740000000e+03 * invT - 2.836911870000000e+00 -
                 2.864728860000000e+00 * tc[0] - 5.282522400000000e-04 * tc[1] +
                 4.318045966666667e-08 * tc[2] - 2.543488950000000e-12 * tc[3] +
                 6.659793800000000e-17 * tc[4];
    // species 7: H2O
    species[7] = -3.000429710000000e+04 * invT - 1.932777610000000e+00 -
                 3.033992490000000e+00 * tc[0] - 1.088459020000000e-03 * tc[1] +
                 2.734541966666666e-08 * tc[2] + 8.086832250000000e-12 * tc[3] -
                 8.410049600000000e-16 * tc[4];
    // species 8: O2
    species[8] = -1.088457720000000e+03 * invT - 2.170693450000000e+00 -
                 3.282537840000000e+00 * tc[0] - 7.415437700000000e-04 * tc[1] +
                 1.263277781666667e-07 * tc[2] - 1.745587958333333e-11 * tc[3] +
                 1.083588970000000e-15 * tc[4];
    // species 9: HO2
    species[9] = +1.118567130000000e+02 * invT + 2.321087500000001e-01 -
                 4.017210900000000e+00 * tc[0] - 1.119910065000000e-03 * tc[1] +
                 1.056096916666667e-07 * tc[2] - 9.520530833333334e-12 * tc[3] +
                 5.395426750000000e-16 * tc[4];
    // species 10: CH
    species[10] = +7.101243640000001e+04 * invT - 2.606515260000000e+00 -
                  2.878464730000000e+00 * tc[0] -
                  4.854568405000000e-04 * tc[1] -
                  2.407427583333333e-08 * tc[2] +
                  1.089065408333333e-11 * tc[3] - 8.803969149999999e-16 * tc[4];
    // species 11: CO
    species[11] = -1.415187240000000e+04 * invT - 5.103502110000000e+00 -
                  2.715185610000000e+00 * tc[0] -
                  1.031263715000000e-03 * tc[1] +
                  1.664709618333334e-07 * tc[2] -
                  1.917108400000000e-11 * tc[3] + 1.018238580000000e-15 * tc[4];
    // species 12: HCO
    species[12] = +4.011918150000000e+03 * invT - 7.026170540000000e+00 -
                  2.772174380000000e+00 * tc[0] -
                  2.478477630000000e-03 * tc[1] +
                  4.140760216666667e-07 * tc[2] -
                  4.909681483333334e-11 * tc[3] + 2.667543555000000e-15 * tc[4];
    // species 13: CH2O
    species[13] = -1.399583230000000e+04 * invT - 1.189563292000000e+01 -
                  1.760690080000000e+00 * tc[0] -
                  4.600000410000000e-03 * tc[1] +
                  7.370980216666666e-07 * tc[2] -
                  8.386767666666666e-11 * tc[3] + 4.419278200000001e-15 * tc[4];
    // species 14: CH3
    species[14] = +1.650951300000000e+04 * invT - 1.744359300000000e+00 -
                  2.978120600000000e+00 * tc[0] -
                  2.898926000000000e-03 * tc[1] +
                  3.292633333333333e-07 * tc[2] -
                  2.560815833333334e-11 * tc[3] + 8.958708000000000e-16 * tc[4];
    // species 15: CO2
    species[15] = -4.875916600000000e+04 * invT + 1.585822230000000e+00 -
                  3.857460290000000e+00 * tc[0] -
                  2.207185130000000e-03 * tc[1] +
                  3.691356733333334e-07 * tc[2] -
                  4.362418233333334e-11 * tc[3] + 2.360420820000000e-15 * tc[4];
    // species 16: CH4
    species[16] = -1.000959360000000e+04 * invT - 8.251800570000000e+00 -
                  1.653262260000000e+00 * tc[0] -
                  5.013154950000000e-03 * tc[1] +
                  5.527687300000000e-07 * tc[2] -
                  4.470692816666667e-11 * tc[3] + 1.573483790000000e-15 * tc[4];
    // species 17: C2H3
    species[17] = +3.461287390000000e+04 * invT - 4.770599780000000e+00 -
                  3.016724000000000e+00 * tc[0] -
                  5.165114600000000e-03 * tc[1] +
                  7.801372483333333e-07 * tc[2] -
                  8.480274000000000e-11 * tc[3] + 4.313035205000000e-15 * tc[4];
    // species 18: C2H4
    species[18] = +4.939886140000000e+03 * invT - 8.269258140000002e+00 -
                  2.036111160000000e+00 * tc[0] -
                  7.322707550000000e-03 * tc[1] +
                  1.118463191666667e-06 * tc[2] -
                  1.226857691666667e-10 * tc[3] + 6.285303050000000e-15 * tc[4];
    // species 19: C2H5
    species[19] = +1.285752000000000e+04 * invT - 1.150777788000000e+01 -
                  1.954656420000000e+00 * tc[0] -
                  8.698636100000001e-03 * tc[1] +
                  1.330344446666667e-06 * tc[2] -
                  1.460147408333333e-10 * tc[3] + 7.482078800000000e-15 * tc[4];
    // species 20: C2H
    species[20] = +6.712106500000000e+04 * invT - 3.468088230000000e+00 -
                  3.167806520000000e+00 * tc[0] -
                  2.376109510000000e-03 * tc[1] +
                  3.063117950000000e-07 * tc[2] -
                  2.534918766666666e-11 * tc[3] + 8.861638500000000e-16 * tc[4];
    // species 21: HCCO
    species[21] = +1.932721500000000e+04 * invT + 9.558465300000000e+00 -
                  5.628205800000000e+00 * tc[0] -
                  2.042670050000000e-03 * tc[1] +
                  2.655757833333333e-07 * tc[2] -
                  2.385504333333333e-11 * tc[3] + 9.703915999999999e-16 * tc[4];
    // species 22: C2H2
    species[22] = +2.593599920000000e+04 * invT + 5.377850850000001e+00 -
                  4.147569640000000e+00 * tc[0] -
                  2.980833320000000e-03 * tc[1] +
                  3.954914200000000e-07 * tc[2] -
                  3.895101425000000e-11 * tc[3] + 1.806176065000000e-15 * tc[4];
    // species 23: C3H3
    species[23] = +3.838548480000000e+04 * invT + 1.360260506000000e+01 -
                  6.149152910000000e+00 * tc[0] -
                  4.670315830000000e-03 * tc[1] +
                  6.250922566666667e-07 * tc[2] -
                  5.751302633333333e-11 * tc[3] + 2.304124970000000e-15 * tc[4];
    // species 24: A-C3H5
    species[24] = +1.830335140000000e+04 * invT - 9.118392529999999e+00 -
                  2.287949270000000e+00 * tc[0] -
                  1.182007875000000e-02 * tc[1] +
                  2.131524166666667e-06 * tc[2] -
                  2.806987833333333e-10 * tc[3] + 1.737247245000000e-14 * tc[4];
    // species 25: N-C3H7
    species[25] = +8.297953100000001e+03 * invT + 2.319155450000000e+01 -
                  7.704040500000000e+00 * tc[0] -
                  8.020770000000000e-03 * tc[1] +
                  8.802661166666667e-07 * tc[2] -
                  6.354533583333333e-11 * tc[3] + 1.967673100000000e-15 * tc[4];
    // species 26: C2H6
    species[26] = -1.142639320000000e+04 * invT - 1.404372920000000e+01 -
                  1.071881500000000e+00 * tc[0] -
                  1.084263385000000e-02 * tc[1] +
                  1.670934450000000e-06 * tc[2] -
                  1.845100008333333e-10 * tc[3] + 9.500144500000000e-15 * tc[4];
    // species 27: P-C3H4
    species[27] = +2.070107710000000e+04 * invT - 5.791444289999999e+00 -
                  2.814605430000000e+00 * tc[0] -
                  9.276224800000000e-03 * tc[1] +
                  1.591711280000000e-06 * tc[2] -
                  1.999594750000000e-10 * tc[3] + 1.187426285000000e-14 * tc[4];
    // species 28: A-C3H4
    species[28] = +2.138942890000000e+04 * invT - 6.644216400000000e+00 -
                  2.561287570000000e+00 * tc[0] -
                  9.754006399999999e-03 * tc[1] +
                  1.734356100000000e-06 * tc[2] -
                  2.251376441666667e-10 * tc[3] + 1.375371645000000e-14 * tc[4];
    // species 29: A1
    species[29] = +8.098839050000000e+03 * invT - 2.086290351200000e+01 +
                  2.062406120000000e-01 * tc[0] -
                  2.320612200000000e-02 * tc[1] +
                  4.627558933333333e-06 * tc[2] -
                  6.574254475000000e-10 * tc[3] + 4.301826295000000e-14 * tc[4];
    // species 30: A1-
    species[30] = +3.869735200000000e+04 * invT - 1.414192874000000e+01 -
                  1.380163360000000e+00 * tc[0] -
                  2.020160045000000e-02 * tc[1] +
                  4.037514750000000e-06 * tc[2] -
                  5.739361008333333e-10 * tc[3] + 3.754804010000000e-14 * tc[4];
    // species 31: C5H5
    species[31] = +2.889524160000000e+04 * invT + 4.245249168100000e+00 -
                  4.214649190000000e+00 * tc[0] -
                  1.359173640000000e-02 * tc[1] +
                  2.219553483333333e-06 * tc[2] -
                  2.574834325000000e-10 * tc[3] + 1.389399365000000e-14 * tc[4];
    // species 32: C3H6
    species[32] = +1.126033870000000e+03 * invT - 2.105203091800000e+01 -
                  4.716979820000000e-01 * tc[0] -
                  1.447565350000000e-02 * tc[1] +
                  2.610030316666666e-06 * tc[2] -
                  3.428693325000000e-10 * tc[3] + 2.115375705000000e-14 * tc[4];
    // species 33: C4H8
    species[33] = -2.521775340000000e+03 * invT - 6.970447730000000e+00 -
                  3.044703670000000e+00 * tc[0] -
                  1.637258825000000e-02 * tc[1] +
                  2.422720616666667e-06 * tc[2] -
                  1.997866808333333e-10 * tc[3] - 0.000000000000000e+00 * tc[4];
    // species 34: C5H6
    species[34] = +1.437794650000000e+04 * invT - 2.002458593800000e+01 -
                  2.305374620000000e-01 * tc[0] -
                  2.047859130000000e-02 * tc[1] +
                  4.026482633333333e-06 * tc[2] -
                  5.664695666666667e-10 * tc[3] + 3.681872105000000e-14 * tc[4];
    // species 35: A2
    species[35] = +1.268836570000000e+04 * invT - 8.857398050000000e+00 -
                  1.768262750000000e+00 * tc[0] -
                  3.445717530000000e-02 * tc[1] +
                  6.905369600000001e-06 * tc[2] -
                  9.826192416666666e-10 * tc[3] + 6.429853050000000e-14 * tc[4];
    // species 36: C5H10
    species[36] = -5.701120710000000e+03 * invT - 2.867517420000000e+00 -
                  3.985805220000000e+00 * tc[0] -
                  2.062149930000000e-02 * tc[1] +
                  3.073174950000000e-06 * tc[2] -
                  2.551293675000000e-10 * tc[3] - 0.000000000000000e+00 * tc[4];
    // species 37: C5H11
    species[37] = +3.434754680000000e+03 * invT + 1.452157510000000e+00 -
                  4.889206290000000e+00 * tc[0] -
                  2.114172685000000e-02 * tc[1] +
                  3.097385000000000e-06 * tc[2] -
                  2.534373025000000e-10 * tc[3] - 0.000000000000000e+00 * tc[4];
    // species 38: A1C2H2
    species[38] = +4.331989740000000e+04 * invT + 1.108294483000000e+01 -
                  5.859350800000000e+00 * tc[0] -
                  2.362857295000000e-02 * tc[1] +
                  4.497745550000000e-06 * tc[2] -
                  6.127598125000000e-10 * tc[3] + 3.874504150000000e-14 * tc[4];
    // species 39: A1CH2
    species[39] = +2.174985720000000e+04 * invT - 2.123222230000000e+00 -
                  3.300496960000000e+00 * tc[0] -
                  2.400276700000000e-02 * tc[1] +
                  4.640717033333333e-06 * tc[2] -
                  6.436427966666667e-10 * tc[3] + 4.135770680000000e-14 * tc[4];
    // species 40: A1CHO
    species[40] = -7.236038650000000e+03 * invT - 1.310514334000000e+01 -
                  1.873557560000000e+00 * tc[0] -
                  2.631157755000000e-02 * tc[1] +
                  5.294082700000000e-06 * tc[2] -
                  7.553358908333333e-10 * tc[3] + 4.951530615000001e-14 * tc[4];
    // species 41: A1CH3
    species[41] = +3.993633950000000e+03 * invT - 2.937225050000000e+01 +
                  1.011172200000000e+00 * tc[0] -
                  2.926509560000000e-02 * tc[1] +
                  5.793251150000000e-06 * tc[2] -
                  8.184841608333334e-10 * tc[3] + 5.334043500000000e-14 * tc[4];
    // species 42: C7H15
    species[42] = -3.370183570000000e+03 * invT - 1.053082971000000e+01 -
                  3.747211590000000e+00 * tc[0] -
                  3.246725810000000e-02 * tc[1] +
                  5.022350416666667e-06 * tc[2] -
                  4.311817850000000e-10 * tc[3] - 0.000000000000000e+00 * tc[4];
    // species 43: N-C7H16
    species[43] = -2.725338900000000e+04 * invT + 2.158832740000000e+00 -
                  5.140792410000000e+00 * tc[0] -
                  3.265393355000000e-02 * tc[1] +
                  4.913793733333333e-06 * tc[2] -
                  4.114389383333333e-10 * tc[3] - 0.000000000000000e+00 * tc[4];
    // species 44: A1C2H*
    species[44] = +6.495281350000000e+04 * invT + 1.898938609000000e+01 -
                  7.238120690000000e+00 * tc[0] -
                  1.919060545000000e-02 * tc[1] +
                  3.647512183333333e-06 * tc[2] -
                  4.976343725000000e-10 * tc[3] + 3.151757335000000e-14 * tc[4];
    // species 45: A2-
    species[45] = +4.784008400000000e+04 * invT - 2.591243940000000e+00 -
                  3.228923030000000e+00 * tc[0] -
                  3.156322430000000e-02 * tc[1] +
                  6.343039683333334e-06 * tc[2] -
                  9.037839083333333e-10 * tc[3] + 5.917125599999999e-14 * tc[4];
    // species 46: A1C2H
    species[46] = +3.302719060000000e+04 * invT + 1.230841178000000e+01 -
                  5.815204880000000e+00 * tc[0] -
                  2.204364665000000e-02 * tc[1] +
                  4.200897633333333e-06 * tc[2] -
                  5.752293566666667e-10 * tc[3] + 3.656894540000000e-14 * tc[4];
  }
}

// compute the a/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
helmholtz(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = -1.02089990e+03 * invT - 1.65169500e+00 -
                 3.29867700e+00 * tc[0] - 7.04120200e-04 * tc[1] +
                 6.60537000e-07 * tc[2] - 4.70126250e-10 * tc[3] +
                 1.22242700e-13 * tc[4];
    // species 1: S-CH2
    species[1] = +5.04968163e+04 * invT + 3.96772308e+00 -
                 4.19860411e+00 * tc[0] + 1.18330710e-03 * tc[1] -
                 1.37216037e-06 * tc[2] + 5.57346651e-10 * tc[3] -
                 9.71573685e-14 * tc[4];
    // species 2: T-CH2
    species[2] = +4.60040401e+04 * invT + 1.20014682e+00 -
                 3.76267867e+00 * tc[0] - 4.84436072e-04 * tc[1] -
                 4.65816402e-07 * tc[2] + 3.20909294e-10 * tc[3] -
                 8.43708595e-14 * tc[4];
    // species 3: O
    species[3] = +2.91222592e+04 * invT + 1.16333640e-01 -
                 3.16826710e+00 * tc[0] + 1.63965942e-03 * tc[1] -
                 1.10717733e-06 * tc[2] + 5.10672187e-10 * tc[3] -
                 1.05632985e-13 * tc[4];
    // species 4: H2
    species[4] = -9.17935173e+02 * invT + 6.61320882e-01 -
                 2.34433112e+00 * tc[0] - 3.99026037e-03 * tc[1] +
                 3.24635850e-06 * tc[2] - 1.67976745e-09 * tc[3] +
                 3.68805881e-13 * tc[4];
    // species 5: H
    species[5] = +2.54736599e+04 * invT + 1.94668285e+00 -
                 2.50000000e+00 * tc[0] - 3.52666409e-13 * tc[1] +
                 3.32653273e-16 * tc[2] - 1.91734693e-19 * tc[3] +
                 4.63866166e-23 * tc[4];
    // species 6: OH
    species[6] = +3.38153812e+03 * invT + 3.81573857e+00 -
                 4.12530561e+00 * tc[0] + 1.61272470e-03 * tc[1] -
                 1.08794115e-06 * tc[2] + 4.83211369e-10 * tc[3] -
                 1.03118689e-13 * tc[4];
    // species 7: H2O
    species[7] = -3.02937267e+04 * invT + 4.04767277e+00 -
                 4.19864056e+00 * tc[0] + 1.01821705e-03 * tc[1] -
                 1.08673369e-06 * tc[2] + 4.57330885e-10 * tc[3] -
                 8.85989085e-14 * tc[4];
    // species 8: O2
    species[8] = -1.06394356e+03 * invT - 8.75219370e-01 -
                 3.78245636e+00 * tc[0] + 1.49836708e-03 * tc[1] -
                 1.64121700e-06 * tc[2] + 8.06774591e-10 * tc[3] -
                 1.62186418e-13 * tc[4];
    // species 9: HO2
    species[9] = +2.94808040e+02 * invT - 4.14864440e-01 -
                 4.30179801e+00 * tc[0] + 2.37456025e-03 * tc[1] -
                 3.52638152e-06 * tc[2] + 2.02303245e-09 * tc[3] -
                 4.64612562e-13 * tc[4];
    // species 10: CH
    species[10] = +7.07972934e+04 * invT + 4.05805570e-01 -
                  3.48981665e+00 * tc[0] - 1.61917771e-04 * tc[1] +
                  2.81498442e-07 * tc[2] - 2.63514439e-10 * tc[3] +
                  7.03045335e-14 * tc[4];
    // species 11: CO
    species[11] = -1.43440860e+04 * invT - 9.28875810e-01 -
                  3.57953347e+00 * tc[0] + 3.05176840e-04 * tc[1] -
                  1.69469055e-07 * tc[2] - 7.55838237e-11 * tc[3] +
                  4.52212249e-14 * tc[4];
    // species 12: HCO
    species[12] = +3.83956496e+03 * invT - 1.73186590e-01 -
                  4.22118584e+00 * tc[0] + 1.62196266e-03 * tc[1] -
                  2.29665743e-06 * tc[2] + 1.10953411e-09 * tc[3] -
                  2.16884432e-13 * tc[4];
    // species 13: CH2O
    species[13] = -1.43089567e+04 * invT + 3.19091025e+00 -
                  4.79372315e+00 * tc[0] + 4.95416684e-03 * tc[1] -
                  6.22033347e-06 * tc[2] + 3.16071051e-09 * tc[3] -
                  6.58863260e-13 * tc[4];
    // species 14: CH3
    species[14] = +1.64227160e+04 * invT + 9.83644300e-01 -
                  3.65717970e+00 * tc[0] - 1.06329895e-03 * tc[1] -
                  9.09731383e-07 * tc[2] + 5.51508358e-10 * tc[3] -
                  1.23285370e-13 * tc[4];
    // species 15: CO2
    species[15] = -4.83719697e+04 * invT - 8.54427870e+00 -
                  2.35677352e+00 * tc[0] - 4.49229839e-03 * tc[1] +
                  1.18726045e-06 * tc[2] - 2.04932518e-10 * tc[3] +
                  7.18497740e-15 * tc[4];
    // species 16: CH4
    species[16] = -1.02465983e+04 * invT + 8.78760310e+00 -
                  5.14911468e+00 * tc[0] + 6.83110045e-03 * tc[1] -
                  8.19089868e-06 * tc[2] + 4.03538972e-09 * tc[3] -
                  8.33017205e-13 * tc[4];
    // species 17: C2H3
    species[17] = +3.48598468e+04 * invT - 6.29807380e+00 -
                  3.21246645e+00 * tc[0] - 7.57395810e-04 * tc[1] -
                  4.32015687e-06 * tc[2] + 2.98048206e-09 * tc[3] -
                  7.35754365e-13 * tc[4];
    // species 18: C2H4
    species[18] = +5.08977593e+03 * invT - 1.13812948e+00 -
                  3.95920148e+00 * tc[0] + 3.78526124e-03 * tc[1] -
                  9.51650487e-06 * tc[2] + 5.76323961e-09 * tc[3] -
                  1.34942187e-12 * tc[4];
    // species 19: C2H5
    species[19] = +1.28416265e+04 * invT - 1.40074356e+00 -
                  4.30646568e+00 * tc[0] + 2.09329446e-03 * tc[1] -
                  8.28571345e-06 * tc[2] + 4.99272172e-09 * tc[3] -
                  1.15254502e-12 * tc[4];
    // species 20: C2H
    species[20] = +6.68393932e+04 * invT - 4.33330705e+00 -
                  2.88965733e+00 * tc[0] - 6.70498055e-03 * tc[1] +
                  4.74615835e-06 * tc[2] - 2.45659204e-09 * tc[3] +
                  5.46657555e-13 * tc[4];
    // species 21: HCCO
    species[21] = +2.00594490e+04 * invT - 1.12386956e+01 -
                  2.25172140e+00 * tc[0] - 8.82751050e-03 * tc[1] +
                  3.95485017e-06 * tc[2] - 1.43964658e-09 * tc[3] +
                  2.53324055e-13 * tc[4];
    // species 22: C2H2
    species[22] = +2.64289807e+04 * invT - 1.41310240e+01 -
                  8.08681094e-01 * tc[0] - 1.16807815e-02 * tc[1] +
                  5.91953025e-06 * tc[2] - 2.33460364e-09 * tc[3] +
                  4.25036487e-13 * tc[4];
    // species 23: C3H3
    species[23] = +3.93108220e+04 * invT - 1.47497921e+01 -
                  1.40299238e+00 * tc[0] - 1.50886664e-02 * tc[1] +
                  6.64082288e-06 * tc[2] - 2.44612191e-09 * tc[3] +
                  4.35277289e-13 * tc[4];
    // species 24: A-C3H5
    species[24] = +1.88792254e+04 * invT - 2.91802715e+01 +
                  1.03516444e+00 * tc[0] - 1.87521683e-02 * tc[1] +
                  5.43968737e-06 * tc[2] - 1.23052177e-09 * tc[3] +
                  1.21870577e-13 * tc[4];
    // species 25: N-C3H7
    species[25] = +1.06326370e+04 * invT - 2.10943287e+01 -
                  1.04754730e+00 * tc[0] - 1.30038970e-02 * tc[1] -
                  3.92704200e-07 * tc[2] + 1.63269308e-09 * tc[3] -
                  4.68400580e-13 * tc[4];
    // species 26: C2H6
    species[26] = -1.15222055e+04 * invT + 6.24601760e-01 -
                  4.29142492e+00 * tc[0] + 2.75077135e-03 * tc[1] -
                  9.99063813e-06 * tc[2] + 5.90388571e-09 * tc[3] -
                  1.34342886e-12 * tc[4];
    // species 27: P-C3H4
    species[27] = +2.09209793e+04 * invT - 1.44645053e+01 -
                  1.46175323e+00 * tc[0] - 1.23013301e-02 * tc[1] +
                  3.17032325e-06 * tc[2] - 7.16969518e-10 * tc[3] +
                  8.33646200e-14 * tc[4];
    // species 28: A-C3H4
    species[28] = +2.17585256e+04 * invT - 2.01577928e+01 -
                  3.68928265e-01 * tc[0] - 1.44675699e-02 * tc[1] +
                  4.07310680e-06 * tc[2] - 9.37893050e-10 * tc[3] +
                  1.01520131e-13 * tc[4];
    // species 29: A1
    species[29] = +9.11031457e+03 * invT - 5.30488132e+01 +
                  5.51558393e+00 * tc[0] - 3.22726613e-02 * tc[1] +
                  7.35671547e-06 * tc[2] - 6.23093468e-10 * tc[3] -
                  1.55141127e-13 * tc[4];
    // species 30: A1-
    species[30] = +3.99269438e+04 * invT - 5.18729657e+01 +
                  4.87654845e+00 * tc[0] - 3.13402891e-02 * tc[1] +
                  8.12337143e-06 * tc[2] - 1.17601906e-09 * tc[3] -
                  2.59259156e-14 * tc[4];
    // species 31: C5H5
    species[31] = +3.05514662e+04 * invT - 5.96613943e+01 +
                  7.37844042e+00 * tc[0] - 4.86195909e-02 * tc[1] +
                  2.82631897e-05 * tc[2] - 1.26515556e-08 * tc[3] +
                  2.56037739e-12 * tc[4];
    // species 32: C3H6
    species[32] = +1.13437406e+03 * invT - 2.45742527e+01 +
                  2.29261670e-03 * tc[0] - 1.55130533e-02 * tc[1] +
                  2.78585913e-06 * tc[2] - 1.57995142e-10 * tc[3] -
                  6.24789575e-14 * tc[4];
    // species 33: C4H8
    species[33] = -1.57875035e+03 * invT - 3.13397957e+01 +
                  8.31372089e-01 * tc[0] - 2.26290489e-02 * tc[1] +
                  4.89430932e-06 * tc[2] - 8.35170300e-10 * tc[3] +
                  7.15958400e-14 * tc[4];
    // species 34: C5H6
    species[34] = +1.53675713e+04 * invT - 5.22936678e+01 +
                  5.13691194e+00 * tc[0] - 3.03476727e-02 * tc[1] +
                  7.67588062e-06 * tc[2] - 1.07047667e-09 * tc[3] -
                  3.70607426e-14 * tc[4];
    // species 35: A2
    species[35] = +1.48059774e+04 * invT - 7.17070999e+01 +
                  8.72434585e+00 * tc[0] - 5.26880040e-02 * tc[1] +
                  1.33618448e-05 * tc[2] - 1.82121645e-09 * tc[3] -
                  7.10333030e-14 * tc[4];
    // species 36: C5H10
    species[36] = -4.46546666e+03 * invT - 3.43362138e+01 +
                  1.06223481e+00 * tc[0] - 2.87109147e-02 * tc[1] +
                  6.24144817e-06 * tc[2] - 1.06137491e-09 * tc[3] +
                  8.98048945e-14 * tc[4];
    // species 37: C5H11
    species[37] = +4.83995303e+03 * invT - 3.44627522e+01 +
                  9.05255912e-01 * tc[0] - 3.05316426e-02 * tc[1] +
                  6.82486375e-06 * tc[2] - 1.21744558e-09 * tc[3] +
                  1.09429807e-13 * tc[4];
    // species 38: A1C2H2
    species[38] = +4.57330975e+04 * invT - 6.08595150e+01 +
                  6.31199276e+00 * tc[0] - 4.75548971e-02 * tc[1] +
                  1.59392017e-05 * tc[2] - 4.14816839e-09 * tc[3] +
                  5.11618585e-13 * tc[4];
    // species 39: A1CH2
    species[39] = +2.35894712e+04 * invT - 5.78637476e+01 +
                  6.07053038e+00 * tc[0] - 4.17600754e-02 * tc[1] +
                  1.23616681e-05 * tc[2] - 2.60961539e-09 * tc[3] +
                  2.11835434e-13 * tc[4];
    // species 40: A1CHO
    species[40] = -6.14558774e+03 * invT - 4.58811129e+01 +
                  3.47171048e+00 * tc[0] - 3.46445945e-02 * tc[1] +
                  7.21005848e-06 * tc[2] - 2.86559247e-10 * tc[3] -
                  2.40505130e-13 * tc[4];
    // species 41: A1CH3
    species[41] = +4.64121087e+03 * invT - 5.12972053e+01 +
                  4.54072038e+00 * tc[0] - 3.42713573e-02 * tc[1] +
                  5.95188373e-06 * tc[2] + 3.49498035e-10 * tc[3] -
                  3.70889898e-13 * tc[4];
    // species 42: C7H15
    species[42] = -2.35605303e+03 * invT - 3.47700662e+01 +
                  3.79155767e-02 * tc[0] - 3.78363285e-02 * tc[1] +
                  6.79122723e-06 * tc[2] - 7.77232453e-10 * tc[3] +
                  2.46180373e-14 * tc[4];
    // species 43: N-C7H16
    species[43] = -2.56586565e+04 * invT - 3.76416531e+01 +
                  1.26836187e+00 * tc[0] - 4.27177910e-02 * tc[1] +
                  8.75577977e-06 * tc[2] - 1.35788101e-09 * tc[3] +
                  1.01197462e-13 * tc[4];
    // species 44: A1C2H*
    species[44] = +6.73302359e+04 * invT - 5.02394051e+01 +
                  4.42757639e+00 * tc[0] - 4.18334322e-02 * tc[1] +
                  1.45017727e-05 * tc[2] - 3.91904717e-09 * tc[3] +
                  5.09084925e-13 * tc[4];
    // species 45: A2-
    species[45] = +5.01363344e+04 * invT - 6.99174067e+01 +
                  8.02718034e+00 * tc[0] - 5.14622590e-02 * tc[1] +
                  1.39045335e-05 * tc[2] - 2.26779486e-09 * tc[3] +
                  3.62279777e-14 * tc[4];
    // species 46: A1C2H
    species[46] = +3.52488620e+04 * invT - 5.31548749e+01 +
                  5.21036925e+00 * tc[0] - 4.32775972e-02 * tc[1] +
                  1.40834581e-05 * tc[2] - 3.51600588e-09 * tc[3] +
                  4.08383083e-13 * tc[4];
  } else {
    // species 0: N2
    species[0] = -9.22797700e+02 * invT - 4.05388800e+00 -
                 2.92664000e+00 * tc[0] - 7.43988400e-04 * tc[1] +
                 9.47460000e-08 * tc[2] - 8.41419833e-12 * tc[3] +
                 3.37667550e-16 * tc[4];
    // species 1: S-CH2
    species[1] = +5.09259997e+04 * invT - 7.33446327e+00 -
                 2.29203842e+00 * tc[0] - 2.32794318e-03 * tc[1] +
                 3.35319912e-07 * tc[2] - 3.48255000e-11 * tc[3] +
                 1.69858182e-15 * tc[4];
    // species 2: T-CH2
    species[2] = +4.62636040e+04 * invT - 4.29709211e+00 -
                 2.87410113e+00 * tc[0] - 1.82819646e-03 * tc[1] +
                 2.34824328e-07 * tc[2] - 2.16816291e-11 * tc[3] +
                 9.38637835e-16 * tc[4];
    // species 3: O
    species[3] = +2.92175791e+04 * invT - 3.21491786e+00 -
                 2.56942078e+00 * tc[0] + 4.29870569e-05 * tc[1] -
                 6.99140982e-09 * tc[2] + 8.34814992e-13 * tc[3] -
                 6.14168455e-17 * tc[4];
    // species 4: H2
    species[4] = -9.50158922e+02 * invT + 5.54230251e+00 -
                 3.33727920e+00 * tc[0] + 2.47012365e-05 * tc[1] -
                 8.32427963e-08 * tc[2] + 1.49638662e-11 * tc[3] -
                 1.00127688e-15 * tc[4];
    // species 5: H
    species[5] = +2.54736599e+04 * invT + 1.94668292e+00 -
                 2.50000001e+00 * tc[0] + 1.15421486e-11 * tc[1] -
                 2.69269913e-15 * tc[2] + 3.94596029e-19 * tc[3] -
                 2.49098679e-23 * tc[4];
    // species 6: OH
    species[6] = +3.71885774e+03 * invT - 3.83691187e+00 -
                 2.86472886e+00 * tc[0] - 5.28252240e-04 * tc[1] +
                 4.31804597e-08 * tc[2] - 2.54348895e-12 * tc[3] +
                 6.65979380e-17 * tc[4];
    // species 7: H2O
    species[7] = -3.00042971e+04 * invT - 2.93277761e+00 -
                 3.03399249e+00 * tc[0] - 1.08845902e-03 * tc[1] +
                 2.73454197e-08 * tc[2] + 8.08683225e-12 * tc[3] -
                 8.41004960e-16 * tc[4];
    // species 8: O2
    species[8] = -1.08845772e+03 * invT - 3.17069345e+00 -
                 3.28253784e+00 * tc[0] - 7.41543770e-04 * tc[1] +
                 1.26327778e-07 * tc[2] - 1.74558796e-11 * tc[3] +
                 1.08358897e-15 * tc[4];
    // species 9: HO2
    species[9] = +1.11856713e+02 * invT - 7.67891250e-01 -
                 4.01721090e+00 * tc[0] - 1.11991006e-03 * tc[1] +
                 1.05609692e-07 * tc[2] - 9.52053083e-12 * tc[3] +
                 5.39542675e-16 * tc[4];
    // species 10: CH
    species[10] = +7.10124364e+04 * invT - 3.60651526e+00 -
                  2.87846473e+00 * tc[0] - 4.85456840e-04 * tc[1] -
                  2.40742758e-08 * tc[2] + 1.08906541e-11 * tc[3] -
                  8.80396915e-16 * tc[4];
    // species 11: CO
    species[11] = -1.41518724e+04 * invT - 6.10350211e+00 -
                  2.71518561e+00 * tc[0] - 1.03126372e-03 * tc[1] +
                  1.66470962e-07 * tc[2] - 1.91710840e-11 * tc[3] +
                  1.01823858e-15 * tc[4];
    // species 12: HCO
    species[12] = +4.01191815e+03 * invT - 8.02617054e+00 -
                  2.77217438e+00 * tc[0] - 2.47847763e-03 * tc[1] +
                  4.14076022e-07 * tc[2] - 4.90968148e-11 * tc[3] +
                  2.66754356e-15 * tc[4];
    // species 13: CH2O
    species[13] = -1.39958323e+04 * invT - 1.28956329e+01 -
                  1.76069008e+00 * tc[0] - 4.60000041e-03 * tc[1] +
                  7.37098022e-07 * tc[2] - 8.38676767e-11 * tc[3] +
                  4.41927820e-15 * tc[4];
    // species 14: CH3
    species[14] = +1.65095130e+04 * invT - 2.74435930e+00 -
                  2.97812060e+00 * tc[0] - 2.89892600e-03 * tc[1] +
                  3.29263333e-07 * tc[2] - 2.56081583e-11 * tc[3] +
                  8.95870800e-16 * tc[4];
    // species 15: CO2
    species[15] = -4.87591660e+04 * invT + 5.85822230e-01 -
                  3.85746029e+00 * tc[0] - 2.20718513e-03 * tc[1] +
                  3.69135673e-07 * tc[2] - 4.36241823e-11 * tc[3] +
                  2.36042082e-15 * tc[4];
    // species 16: CH4
    species[16] = -1.00095936e+04 * invT - 9.25180057e+00 -
                  1.65326226e+00 * tc[0] - 5.01315495e-03 * tc[1] +
                  5.52768730e-07 * tc[2] - 4.47069282e-11 * tc[3] +
                  1.57348379e-15 * tc[4];
    // species 17: C2H3
    species[17] = +3.46128739e+04 * invT - 5.77059978e+00 -
                  3.01672400e+00 * tc[0] - 5.16511460e-03 * tc[1] +
                  7.80137248e-07 * tc[2] - 8.48027400e-11 * tc[3] +
                  4.31303520e-15 * tc[4];
    // species 18: C2H4
    species[18] = +4.93988614e+03 * invT - 9.26925814e+00 -
                  2.03611116e+00 * tc[0] - 7.32270755e-03 * tc[1] +
                  1.11846319e-06 * tc[2] - 1.22685769e-10 * tc[3] +
                  6.28530305e-15 * tc[4];
    // species 19: C2H5
    species[19] = +1.28575200e+04 * invT - 1.25077779e+01 -
                  1.95465642e+00 * tc[0] - 8.69863610e-03 * tc[1] +
                  1.33034445e-06 * tc[2] - 1.46014741e-10 * tc[3] +
                  7.48207880e-15 * tc[4];
    // species 20: C2H
    species[20] = +6.71210650e+04 * invT - 4.46808823e+00 -
                  3.16780652e+00 * tc[0] - 2.37610951e-03 * tc[1] +
                  3.06311795e-07 * tc[2] - 2.53491877e-11 * tc[3] +
                  8.86163850e-16 * tc[4];
    // species 21: HCCO
    species[21] = +1.93272150e+04 * invT + 8.55846530e+00 -
                  5.62820580e+00 * tc[0] - 2.04267005e-03 * tc[1] +
                  2.65575783e-07 * tc[2] - 2.38550433e-11 * tc[3] +
                  9.70391600e-16 * tc[4];
    // species 22: C2H2
    species[22] = +2.59359992e+04 * invT + 4.37785085e+00 -
                  4.14756964e+00 * tc[0] - 2.98083332e-03 * tc[1] +
                  3.95491420e-07 * tc[2] - 3.89510143e-11 * tc[3] +
                  1.80617607e-15 * tc[4];
    // species 23: C3H3
    species[23] = +3.83854848e+04 * invT + 1.26026051e+01 -
                  6.14915291e+00 * tc[0] - 4.67031583e-03 * tc[1] +
                  6.25092257e-07 * tc[2] - 5.75130263e-11 * tc[3] +
                  2.30412497e-15 * tc[4];
    // species 24: A-C3H5
    species[24] = +1.83033514e+04 * invT - 1.01183925e+01 -
                  2.28794927e+00 * tc[0] - 1.18200788e-02 * tc[1] +
                  2.13152417e-06 * tc[2] - 2.80698783e-10 * tc[3] +
                  1.73724725e-14 * tc[4];
    // species 25: N-C3H7
    species[25] = +8.29795310e+03 * invT + 2.21915545e+01 -
                  7.70404050e+00 * tc[0] - 8.02077000e-03 * tc[1] +
                  8.80266117e-07 * tc[2] - 6.35453358e-11 * tc[3] +
                  1.96767310e-15 * tc[4];
    // species 26: C2H6
    species[26] = -1.14263932e+04 * invT - 1.50437292e+01 -
                  1.07188150e+00 * tc[0] - 1.08426339e-02 * tc[1] +
                  1.67093445e-06 * tc[2] - 1.84510001e-10 * tc[3] +
                  9.50014450e-15 * tc[4];
    // species 27: P-C3H4
    species[27] = +2.07010771e+04 * invT - 6.79144429e+00 -
                  2.81460543e+00 * tc[0] - 9.27622480e-03 * tc[1] +
                  1.59171128e-06 * tc[2] - 1.99959475e-10 * tc[3] +
                  1.18742629e-14 * tc[4];
    // species 28: A-C3H4
    species[28] = +2.13894289e+04 * invT - 7.64421640e+00 -
                  2.56128757e+00 * tc[0] - 9.75400640e-03 * tc[1] +
                  1.73435610e-06 * tc[2] - 2.25137644e-10 * tc[3] +
                  1.37537164e-14 * tc[4];
    // species 29: A1
    species[29] = +8.09883905e+03 * invT - 2.18629035e+01 +
                  2.06240612e-01 * tc[0] - 2.32061220e-02 * tc[1] +
                  4.62755893e-06 * tc[2] - 6.57425448e-10 * tc[3] +
                  4.30182630e-14 * tc[4];
    // species 30: A1-
    species[30] = +3.86973520e+04 * invT - 1.51419287e+01 -
                  1.38016336e+00 * tc[0] - 2.02016004e-02 * tc[1] +
                  4.03751475e-06 * tc[2] - 5.73936101e-10 * tc[3] +
                  3.75480401e-14 * tc[4];
    // species 31: C5H5
    species[31] = +2.88952416e+04 * invT + 3.24524917e+00 -
                  4.21464919e+00 * tc[0] - 1.35917364e-02 * tc[1] +
                  2.21955348e-06 * tc[2] - 2.57483433e-10 * tc[3] +
                  1.38939937e-14 * tc[4];
    // species 32: C3H6
    species[32] = +1.12603387e+03 * invT - 2.20520309e+01 -
                  4.71697982e-01 * tc[0] - 1.44756535e-02 * tc[1] +
                  2.61003032e-06 * tc[2] - 3.42869333e-10 * tc[3] +
                  2.11537571e-14 * tc[4];
    // species 33: C4H8
    species[33] = -2.52177534e+03 * invT - 7.97044773e+00 -
                  3.04470367e+00 * tc[0] - 1.63725883e-02 * tc[1] +
                  2.42272062e-06 * tc[2] - 1.99786681e-10 * tc[3] -
                  0.00000000e+00 * tc[4];
    // species 34: C5H6
    species[34] = +1.43779465e+04 * invT - 2.10245859e+01 -
                  2.30537462e-01 * tc[0] - 2.04785913e-02 * tc[1] +
                  4.02648263e-06 * tc[2] - 5.66469567e-10 * tc[3] +
                  3.68187210e-14 * tc[4];
    // species 35: A2
    species[35] = +1.26883657e+04 * invT - 9.85739805e+00 -
                  1.76826275e+00 * tc[0] - 3.44571753e-02 * tc[1] +
                  6.90536960e-06 * tc[2] - 9.82619242e-10 * tc[3] +
                  6.42985305e-14 * tc[4];
    // species 36: C5H10
    species[36] = -5.70112071e+03 * invT - 3.86751742e+00 -
                  3.98580522e+00 * tc[0] - 2.06214993e-02 * tc[1] +
                  3.07317495e-06 * tc[2] - 2.55129368e-10 * tc[3] -
                  0.00000000e+00 * tc[4];
    // species 37: C5H11
    species[37] = +3.43475468e+03 * invT + 4.52157510e-01 -
                  4.88920629e+00 * tc[0] - 2.11417269e-02 * tc[1] +
                  3.09738500e-06 * tc[2] - 2.53437302e-10 * tc[3] -
                  0.00000000e+00 * tc[4];
    // species 38: A1C2H2
    species[38] = +4.33198974e+04 * invT + 1.00829448e+01 -
                  5.85935080e+00 * tc[0] - 2.36285729e-02 * tc[1] +
                  4.49774555e-06 * tc[2] - 6.12759813e-10 * tc[3] +
                  3.87450415e-14 * tc[4];
    // species 39: A1CH2
    species[39] = +2.17498572e+04 * invT - 3.12322223e+00 -
                  3.30049696e+00 * tc[0] - 2.40027670e-02 * tc[1] +
                  4.64071703e-06 * tc[2] - 6.43642797e-10 * tc[3] +
                  4.13577068e-14 * tc[4];
    // species 40: A1CHO
    species[40] = -7.23603865e+03 * invT - 1.41051433e+01 -
                  1.87355756e+00 * tc[0] - 2.63115775e-02 * tc[1] +
                  5.29408270e-06 * tc[2] - 7.55335891e-10 * tc[3] +
                  4.95153062e-14 * tc[4];
    // species 41: A1CH3
    species[41] = +3.99363395e+03 * invT - 3.03722505e+01 +
                  1.01117220e+00 * tc[0] - 2.92650956e-02 * tc[1] +
                  5.79325115e-06 * tc[2] - 8.18484161e-10 * tc[3] +
                  5.33404350e-14 * tc[4];
    // species 42: C7H15
    species[42] = -3.37018357e+03 * invT - 1.15308297e+01 -
                  3.74721159e+00 * tc[0] - 3.24672581e-02 * tc[1] +
                  5.02235042e-06 * tc[2] - 4.31181785e-10 * tc[3] -
                  0.00000000e+00 * tc[4];
    // species 43: N-C7H16
    species[43] = -2.72533890e+04 * invT + 1.15883274e+00 -
                  5.14079241e+00 * tc[0] - 3.26539335e-02 * tc[1] +
                  4.91379373e-06 * tc[2] - 4.11438938e-10 * tc[3] -
                  0.00000000e+00 * tc[4];
    // species 44: A1C2H*
    species[44] = +6.49528135e+04 * invT + 1.79893861e+01 -
                  7.23812069e+00 * tc[0] - 1.91906054e-02 * tc[1] +
                  3.64751218e-06 * tc[2] - 4.97634372e-10 * tc[3] +
                  3.15175734e-14 * tc[4];
    // species 45: A2-
    species[45] = +4.78400840e+04 * invT - 3.59124394e+00 -
                  3.22892303e+00 * tc[0] - 3.15632243e-02 * tc[1] +
                  6.34303968e-06 * tc[2] - 9.03783908e-10 * tc[3] +
                  5.91712560e-14 * tc[4];
    // species 46: A1C2H
    species[46] = +3.30271906e+04 * invT + 1.13084118e+01 -
                  5.81520488e+00 * tc[0] - 2.20436466e-02 * tc[1] +
                  4.20089763e-06 * tc[2] - 5.75229357e-10 * tc[3] +
                  3.65689454e-14 * tc[4];
  }
}

// compute the e/(RT) at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesInternalEnergy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +2.29867700e+00 + 7.04120200e-04 * tc[1] -
                 1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                 4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
    // species 1: S-CH2
    species[1] = +3.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 2: T-CH2
    species[2] = +2.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 3: O
    species[3] = +2.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 4: H2
    species[4] = +1.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 5: H
    species[5] = +1.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 6: OH
    species[6] = +3.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 7: H2O
    species[7] = +3.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 8: O2
    species[8] = +2.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 9: HO2
    species[9] = +3.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 10: CH
    species[10] = +2.48981665e+00 + 1.61917771e-04 * tc[1] -
                  5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
                  2.81218134e-13 * tc[4] + 7.07972934e+04 * invT;
    // species 11: CO
    species[11] = +2.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 12: HCO
    species[12] = +3.22118584e+00 - 1.62196266e-03 * tc[1] +
                  4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                  8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 13: CH2O
    species[13] = +3.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 14: CH3
    species[14] = +2.65717970e+00 + 1.06329895e-03 * tc[1] +
                  1.81946277e-06 * tc[2] - 1.65452507e-09 * tc[3] +
                  4.93141480e-13 * tc[4] + 1.64227160e+04 * invT;
    // species 15: CO2
    species[15] = +1.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 16: CH4
    species[16] = +4.14911468e+00 - 6.83110045e-03 * tc[1] +
                  1.63817974e-05 * tc[2] - 1.21061692e-08 * tc[3] +
                  3.33206882e-12 * tc[4] - 1.02465983e+04 * invT;
    // species 17: C2H3
    species[17] = +2.21246645e+00 + 7.57395810e-04 * tc[1] +
                  8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                  2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 18: C2H4
    species[18] = +2.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 19: C2H5
    species[19] = +3.30646568e+00 - 2.09329446e-03 * tc[1] +
                  1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                  4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 20: C2H
    species[20] = +1.88965733e+00 + 6.70498055e-03 * tc[1] -
                  9.49231670e-06 * tc[2] + 7.36977613e-09 * tc[3] -
                  2.18663022e-12 * tc[4] + 6.68393932e+04 * invT;
    // species 21: HCCO
    species[21] = +1.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 22: C2H2
    species[22] = -1.91318906e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 23: C3H3
    species[23] = +4.02992380e-01 + 1.50886664e-02 * tc[1] -
                  1.32816458e-05 * tc[2] + 7.33836572e-09 * tc[3] -
                  1.74110916e-12 * tc[4] + 3.93108220e+04 * invT;
    // species 24: A-C3H5
    species[24] = -2.03516444e+00 + 1.87521683e-02 * tc[1] -
                  1.08793747e-05 * tc[2] + 3.69156533e-09 * tc[3] -
                  4.87482308e-13 * tc[4] + 1.88792254e+04 * invT;
    // species 25: N-C3H7
    species[25] = +4.75473000e-02 + 1.30038970e-02 * tc[1] +
                  7.85408400e-07 * tc[2] - 4.89807925e-09 * tc[3] +
                  1.87360232e-12 * tc[4] + 1.06326370e+04 * invT;
    // species 26: C2H6
    species[26] = +3.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 27: P-C3H4
    species[27] = +4.61753230e-01 + 1.23013301e-02 * tc[1] -
                  6.34064650e-06 * tc[2] + 2.15090855e-09 * tc[3] -
                  3.33458480e-13 * tc[4] + 2.09209793e+04 * invT;
    // species 28: A-C3H4
    species[28] = -6.31071735e-01 + 1.44675699e-02 * tc[1] -
                  8.14621360e-06 * tc[2] + 2.81367915e-09 * tc[3] -
                  4.06080524e-13 * tc[4] + 2.17585256e+04 * invT;
    // species 29: A1
    species[29] = -6.51558393e+00 + 3.22726613e-02 * tc[1] -
                  1.47134309e-05 * tc[2] + 1.86928040e-09 * tc[3] +
                  6.20564508e-13 * tc[4] + 9.11031457e+03 * invT;
    // species 30: A1-
    species[30] = -5.87654845e+00 + 3.13402891e-02 * tc[1] -
                  1.62467429e-05 * tc[2] + 3.52805717e-09 * tc[3] +
                  1.03703662e-13 * tc[4] + 3.99269438e+04 * invT;
    // species 31: C5H5
    species[31] = -8.37844042e+00 + 4.86195909e-02 * tc[1] -
                  5.65263793e-05 * tc[2] + 3.79546668e-08 * tc[3] -
                  1.02415096e-11 * tc[4] + 3.05514662e+04 * invT;
    // species 32: C3H6
    species[32] = -1.00229262e+00 + 1.55130533e-02 * tc[1] -
                  5.57171827e-06 * tc[2] + 4.73985425e-10 * tc[3] +
                  2.49915830e-13 * tc[4] + 1.13437406e+03 * invT;
    // species 33: C4H8
    species[33] = -1.83137209e+00 + 2.26290489e-02 * tc[1] -
                  9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
                  2.86383360e-13 * tc[4] - 1.57875035e+03 * invT;
    // species 34: C5H6
    species[34] = -6.13691194e+00 + 3.03476727e-02 * tc[1] -
                  1.53517612e-05 * tc[2] + 3.21143002e-09 * tc[3] +
                  1.48242970e-13 * tc[4] + 1.53675713e+04 * invT;
    // species 35: A2
    species[35] = -9.72434585e+00 + 5.26880040e-02 * tc[1] -
                  2.67236897e-05 * tc[2] + 5.46364935e-09 * tc[3] +
                  2.84133212e-13 * tc[4] + 1.48059774e+04 * invT;
    // species 36: C5H10
    species[36] = -2.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
    // species 37: C5H11
    species[37] = -1.90525591e+00 + 3.05316426e-02 * tc[1] -
                  1.36497275e-05 * tc[2] + 3.65233675e-09 * tc[3] -
                  4.37719230e-13 * tc[4] + 4.83995303e+03 * invT;
    // species 38: A1C2H2
    species[38] = -7.31199276e+00 + 4.75548971e-02 * tc[1] -
                  3.18784034e-05 * tc[2] + 1.24445052e-08 * tc[3] -
                  2.04647434e-12 * tc[4] + 4.57330975e+04 * invT;
    // species 39: A1CH2
    species[39] = -7.07053038e+00 + 4.17600754e-02 * tc[1] -
                  2.47233361e-05 * tc[2] + 7.82884618e-09 * tc[3] -
                  8.47341736e-13 * tc[4] + 2.35894712e+04 * invT;
    // species 40: A1CHO
    species[40] = -4.47171048e+00 + 3.46445945e-02 * tc[1] -
                  1.44201170e-05 * tc[2] + 8.59677740e-10 * tc[3] +
                  9.62020522e-13 * tc[4] - 6.14558774e+03 * invT;
    // species 41: A1CH3
    species[41] = -5.54072038e+00 + 3.42713573e-02 * tc[1] -
                  1.19037675e-05 * tc[2] - 1.04849410e-09 * tc[3] +
                  1.48355959e-12 * tc[4] + 4.64121087e+03 * invT;
    // species 42: C7H15
    species[42] = -1.03791558e+00 + 3.78363285e-02 * tc[1] -
                  1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
                  9.84721490e-14 * tc[4] - 2.35605303e+03 * invT;
    // species 43: N-C7H16
    species[43] = -2.26836187e+00 + 4.27177910e-02 * tc[1] -
                  1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
                  4.04789850e-13 * tc[4] - 2.56586565e+04 * invT;
    // species 44: A1C2H*
    species[44] = -5.42757639e+00 + 4.18334322e-02 * tc[1] -
                  2.90035454e-05 * tc[2] + 1.17571415e-08 * tc[3] -
                  2.03633970e-12 * tc[4] + 6.73302359e+04 * invT;
    // species 45: A2-
    species[45] = -9.02718034e+00 + 5.14622590e-02 * tc[1] -
                  2.78090670e-05 * tc[2] + 6.80338458e-09 * tc[3] -
                  1.44911911e-13 * tc[4] + 5.01363344e+04 * invT;
    // species 46: A1C2H
    species[46] = -6.21036925e+00 + 4.32775972e-02 * tc[1] -
                  2.81669161e-05 * tc[2] + 1.05480176e-08 * tc[3] -
                  1.63353233e-12 * tc[4] + 3.52488620e+04 * invT;
  } else {
    // species 0: N2
    species[0] = +1.92664000e+00 + 7.43988400e-04 * tc[1] -
                 1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                 1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
    // species 1: S-CH2
    species[1] = +1.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 2: T-CH2
    species[2] = +1.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 3: O
    species[3] = +1.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 4: H2
    species[4] = +2.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 5: H
    species[5] = +1.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 6: OH
    species[6] = +1.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 7: H2O
    species[7] = +2.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 8: O2
    species[8] = +2.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 9: HO2
    species[9] = +3.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 10: CH
    species[10] = +1.87846473e+00 + 4.85456840e-04 * tc[1] +
                  4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
                  3.52158766e-15 * tc[4] + 7.10124364e+04 * invT;
    // species 11: CO
    species[11] = +1.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 12: HCO
    species[12] = +1.77217438e+00 + 2.47847763e-03 * tc[1] -
                  8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                  1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 13: CH2O
    species[13] = +7.60690080e-01 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 14: CH3
    species[14] = +1.97812060e+00 + 2.89892600e-03 * tc[1] -
                  6.58526667e-07 * tc[2] + 7.68244750e-11 * tc[3] -
                  3.58348320e-15 * tc[4] + 1.65095130e+04 * invT;
    // species 15: CO2
    species[15] = +2.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 16: CH4
    species[16] = +6.53262260e-01 + 5.01315495e-03 * tc[1] -
                  1.10553746e-06 * tc[2] + 1.34120785e-10 * tc[3] -
                  6.29393516e-15 * tc[4] - 1.00095936e+04 * invT;
    // species 17: C2H3
    species[17] = +2.01672400e+00 + 5.16511460e-03 * tc[1] -
                  1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                  1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 18: C2H4
    species[18] = +1.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 19: C2H5
    species[19] = +9.54656420e-01 + 8.69863610e-03 * tc[1] -
                  2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                  2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 20: C2H
    species[20] = +2.16780652e+00 + 2.37610951e-03 * tc[1] -
                  6.12623590e-07 * tc[2] + 7.60475630e-11 * tc[3] -
                  3.54465540e-15 * tc[4] + 6.71210650e+04 * invT;
    // species 21: HCCO
    species[21] = +4.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 22: C2H2
    species[22] = +3.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 23: C3H3
    species[23] = +5.14915291e+00 + 4.67031583e-03 * tc[1] -
                  1.25018451e-06 * tc[2] + 1.72539079e-10 * tc[3] -
                  9.21649988e-15 * tc[4] + 3.83854848e+04 * invT;
    // species 24: A-C3H5
    species[24] = +1.28794927e+00 + 1.18200788e-02 * tc[1] -
                  4.26304833e-06 * tc[2] + 8.42096350e-10 * tc[3] -
                  6.94898898e-14 * tc[4] + 1.83033514e+04 * invT;
    // species 25: N-C3H7
    species[25] = +6.70404050e+00 + 8.02077000e-03 * tc[1] -
                  1.76053223e-06 * tc[2] + 1.90636007e-10 * tc[3] -
                  7.87069240e-15 * tc[4] + 8.29795310e+03 * invT;
    // species 26: C2H6
    species[26] = +7.18815000e-02 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 27: P-C3H4
    species[27] = +1.81460543e+00 + 9.27622480e-03 * tc[1] -
                  3.18342256e-06 * tc[2] + 5.99878425e-10 * tc[3] -
                  4.74970514e-14 * tc[4] + 2.07010771e+04 * invT;
    // species 28: A-C3H4
    species[28] = +1.56128757e+00 + 9.75400640e-03 * tc[1] -
                  3.46871220e-06 * tc[2] + 6.75412933e-10 * tc[3] -
                  5.50148658e-14 * tc[4] + 2.13894289e+04 * invT;
    // species 29: A1
    species[29] = -1.20624061e+00 + 2.32061220e-02 * tc[1] -
                  9.25511787e-06 * tc[2] + 1.97227634e-09 * tc[3] -
                  1.72073052e-13 * tc[4] + 8.09883905e+03 * invT;
    // species 30: A1-
    species[30] = +3.80163360e-01 + 2.02016004e-02 * tc[1] -
                  8.07502950e-06 * tc[2] + 1.72180830e-09 * tc[3] -
                  1.50192160e-13 * tc[4] + 3.86973520e+04 * invT;
    // species 31: C5H5
    species[31] = +3.21464919e+00 + 1.35917364e-02 * tc[1] -
                  4.43910697e-06 * tc[2] + 7.72450297e-10 * tc[3] -
                  5.55759746e-14 * tc[4] + 2.88952416e+04 * invT;
    // species 32: C3H6
    species[32] = -5.28302018e-01 + 1.44756535e-02 * tc[1] -
                  5.22006063e-06 * tc[2] + 1.02860800e-09 * tc[3] -
                  8.46150282e-14 * tc[4] + 1.12603387e+03 * invT;
    // species 33: C4H8
    species[33] = +2.04470367e+00 + 1.63725883e-02 * tc[1] -
                  4.84544123e-06 * tc[2] + 5.99360043e-10 * tc[3] +
                  0.00000000e+00 * tc[4] - 2.52177534e+03 * invT;
    // species 34: C5H6
    species[34] = -7.69462538e-01 + 2.04785913e-02 * tc[1] -
                  8.05296527e-06 * tc[2] + 1.69940870e-09 * tc[3] -
                  1.47274884e-13 * tc[4] + 1.43779465e+04 * invT;
    // species 35: A2
    species[35] = +7.68262750e-01 + 3.44571753e-02 * tc[1] -
                  1.38107392e-05 * tc[2] + 2.94785772e-09 * tc[3] -
                  2.57194122e-13 * tc[4] + 1.26883657e+04 * invT;
    // species 36: C5H10
    species[36] = +2.98580522e+00 + 2.06214993e-02 * tc[1] -
                  6.14634990e-06 * tc[2] + 7.65388102e-10 * tc[3] +
                  0.00000000e+00 * tc[4] - 5.70112071e+03 * invT;
    // species 37: C5H11
    species[37] = +3.88920629e+00 + 2.11417269e-02 * tc[1] -
                  6.19477000e-06 * tc[2] + 7.60311908e-10 * tc[3] +
                  0.00000000e+00 * tc[4] + 3.43475468e+03 * invT;
    // species 38: A1C2H2
    species[38] = +4.85935080e+00 + 2.36285729e-02 * tc[1] -
                  8.99549110e-06 * tc[2] + 1.83827944e-09 * tc[3] -
                  1.54980166e-13 * tc[4] + 4.33198974e+04 * invT;
    // species 39: A1CH2
    species[39] = +2.30049696e+00 + 2.40027670e-02 * tc[1] -
                  9.28143407e-06 * tc[2] + 1.93092839e-09 * tc[3] -
                  1.65430827e-13 * tc[4] + 2.17498572e+04 * invT;
    // species 40: A1CHO
    species[40] = +8.73557560e-01 + 2.63115775e-02 * tc[1] -
                  1.05881654e-05 * tc[2] + 2.26600767e-09 * tc[3] -
                  1.98061225e-13 * tc[4] - 7.23603865e+03 * invT;
    // species 41: A1CH3
    species[41] = -2.01117220e+00 + 2.92650956e-02 * tc[1] -
                  1.15865023e-05 * tc[2] + 2.45545248e-09 * tc[3] -
                  2.13361740e-13 * tc[4] + 3.99363395e+03 * invT;
    // species 42: C7H15
    species[42] = +2.74721159e+00 + 3.24672581e-02 * tc[1] -
                  1.00447008e-05 * tc[2] + 1.29354536e-09 * tc[3] +
                  0.00000000e+00 * tc[4] - 3.37018357e+03 * invT;
    // species 43: N-C7H16
    species[43] = +4.14079241e+00 + 3.26539335e-02 * tc[1] -
                  9.82758747e-06 * tc[2] + 1.23431681e-09 * tc[3] +
                  0.00000000e+00 * tc[4] - 2.72533890e+04 * invT;
    // species 44: A1C2H*
    species[44] = +6.23812069e+00 + 1.91906054e-02 * tc[1] -
                  7.29502437e-06 * tc[2] + 1.49290312e-09 * tc[3] -
                  1.26070293e-13 * tc[4] + 6.49528135e+04 * invT;
    // species 45: A2-
    species[45] = +2.22892303e+00 + 3.15632243e-02 * tc[1] -
                  1.26860794e-05 * tc[2] + 2.71135172e-09 * tc[3] -
                  2.36685024e-13 * tc[4] + 4.78400840e+04 * invT;
    // species 46: A1C2H
    species[46] = +4.81520488e+00 + 2.20436466e-02 * tc[1] -
                  8.40179527e-06 * tc[2] + 1.72568807e-09 * tc[3] -
                  1.46275782e-13 * tc[4] + 3.30271906e+04 * invT;
  }
}

// compute the h/(RT) at the given temperature (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEnthalpy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +3.29867700e+00 + 7.04120200e-04 * tc[1] -
                 1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
                 4.88970800e-13 * tc[4] - 1.02089990e+03 * invT;
    // species 1: S-CH2
    species[1] = +4.19860411e+00 - 1.18330710e-03 * tc[1] +
                 2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
                 3.88629474e-13 * tc[4] + 5.04968163e+04 * invT;
    // species 2: T-CH2
    species[2] = +3.76267867e+00 + 4.84436072e-04 * tc[1] +
                 9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
                 3.37483438e-13 * tc[4] + 4.60040401e+04 * invT;
    // species 3: O
    species[3] = +3.16826710e+00 - 1.63965942e-03 * tc[1] +
                 2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
                 4.22531942e-13 * tc[4] + 2.91222592e+04 * invT;
    // species 4: H2
    species[4] = +2.34433112e+00 + 3.99026037e-03 * tc[1] -
                 6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
                 1.47522352e-12 * tc[4] - 9.17935173e+02 * invT;
    // species 5: H
    species[5] = +2.50000000e+00 + 3.52666409e-13 * tc[1] -
                 6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
                 1.85546466e-22 * tc[4] + 2.54736599e+04 * invT;
    // species 6: OH
    species[6] = +4.12530561e+00 - 1.61272470e-03 * tc[1] +
                 2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
                 4.12474758e-13 * tc[4] + 3.38153812e+03 * invT;
    // species 7: H2O
    species[7] = +4.19864056e+00 - 1.01821705e-03 * tc[1] +
                 2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
                 3.54395634e-13 * tc[4] - 3.02937267e+04 * invT;
    // species 8: O2
    species[8] = +3.78245636e+00 - 1.49836708e-03 * tc[1] +
                 3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
                 6.48745674e-13 * tc[4] - 1.06394356e+03 * invT;
    // species 9: HO2
    species[9] = +4.30179801e+00 - 2.37456025e-03 * tc[1] +
                 7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
                 1.85845025e-12 * tc[4] + 2.94808040e+02 * invT;
    // species 10: CH
    species[10] = +3.48981665e+00 + 1.61917771e-04 * tc[1] -
                  5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
                  2.81218134e-13 * tc[4] + 7.07972934e+04 * invT;
    // species 11: CO
    species[11] = +3.57953347e+00 - 3.05176840e-04 * tc[1] +
                  3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
                  1.80884900e-13 * tc[4] - 1.43440860e+04 * invT;
    // species 12: HCO
    species[12] = +4.22118584e+00 - 1.62196266e-03 * tc[1] +
                  4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
                  8.67537730e-13 * tc[4] + 3.83956496e+03 * invT;
    // species 13: CH2O
    species[13] = +4.79372315e+00 - 4.95416684e-03 * tc[1] +
                  1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
                  2.63545304e-12 * tc[4] - 1.43089567e+04 * invT;
    // species 14: CH3
    species[14] = +3.65717970e+00 + 1.06329895e-03 * tc[1] +
                  1.81946277e-06 * tc[2] - 1.65452507e-09 * tc[3] +
                  4.93141480e-13 * tc[4] + 1.64227160e+04 * invT;
    // species 15: CO2
    species[15] = +2.35677352e+00 + 4.49229839e-03 * tc[1] -
                  2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
                  2.87399096e-14 * tc[4] - 4.83719697e+04 * invT;
    // species 16: CH4
    species[16] = +5.14911468e+00 - 6.83110045e-03 * tc[1] +
                  1.63817974e-05 * tc[2] - 1.21061692e-08 * tc[3] +
                  3.33206882e-12 * tc[4] - 1.02465983e+04 * invT;
    // species 17: C2H3
    species[17] = +3.21246645e+00 + 7.57395810e-04 * tc[1] +
                  8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
                  2.94301746e-12 * tc[4] + 3.48598468e+04 * invT;
    // species 18: C2H4
    species[18] = +3.95920148e+00 - 3.78526124e-03 * tc[1] +
                  1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
                  5.39768746e-12 * tc[4] + 5.08977593e+03 * invT;
    // species 19: C2H5
    species[19] = +4.30646568e+00 - 2.09329446e-03 * tc[1] +
                  1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
                  4.61018008e-12 * tc[4] + 1.28416265e+04 * invT;
    // species 20: C2H
    species[20] = +2.88965733e+00 + 6.70498055e-03 * tc[1] -
                  9.49231670e-06 * tc[2] + 7.36977613e-09 * tc[3] -
                  2.18663022e-12 * tc[4] + 6.68393932e+04 * invT;
    // species 21: HCCO
    species[21] = +2.25172140e+00 + 8.82751050e-03 * tc[1] -
                  7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
                  1.01329622e-12 * tc[4] + 2.00594490e+04 * invT;
    // species 22: C2H2
    species[22] = +8.08681094e-01 + 1.16807815e-02 * tc[1] -
                  1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
                  1.70014595e-12 * tc[4] + 2.64289807e+04 * invT;
    // species 23: C3H3
    species[23] = +1.40299238e+00 + 1.50886664e-02 * tc[1] -
                  1.32816458e-05 * tc[2] + 7.33836572e-09 * tc[3] -
                  1.74110916e-12 * tc[4] + 3.93108220e+04 * invT;
    // species 24: A-C3H5
    species[24] = -1.03516444e+00 + 1.87521683e-02 * tc[1] -
                  1.08793747e-05 * tc[2] + 3.69156533e-09 * tc[3] -
                  4.87482308e-13 * tc[4] + 1.88792254e+04 * invT;
    // species 25: N-C3H7
    species[25] = +1.04754730e+00 + 1.30038970e-02 * tc[1] +
                  7.85408400e-07 * tc[2] - 4.89807925e-09 * tc[3] +
                  1.87360232e-12 * tc[4] + 1.06326370e+04 * invT;
    // species 26: C2H6
    species[26] = +4.29142492e+00 - 2.75077135e-03 * tc[1] +
                  1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
                  5.37371542e-12 * tc[4] - 1.15222055e+04 * invT;
    // species 27: P-C3H4
    species[27] = +1.46175323e+00 + 1.23013301e-02 * tc[1] -
                  6.34064650e-06 * tc[2] + 2.15090855e-09 * tc[3] -
                  3.33458480e-13 * tc[4] + 2.09209793e+04 * invT;
    // species 28: A-C3H4
    species[28] = +3.68928265e-01 + 1.44675699e-02 * tc[1] -
                  8.14621360e-06 * tc[2] + 2.81367915e-09 * tc[3] -
                  4.06080524e-13 * tc[4] + 2.17585256e+04 * invT;
    // species 29: A1
    species[29] = -5.51558393e+00 + 3.22726613e-02 * tc[1] -
                  1.47134309e-05 * tc[2] + 1.86928040e-09 * tc[3] +
                  6.20564508e-13 * tc[4] + 9.11031457e+03 * invT;
    // species 30: A1-
    species[30] = -4.87654845e+00 + 3.13402891e-02 * tc[1] -
                  1.62467429e-05 * tc[2] + 3.52805717e-09 * tc[3] +
                  1.03703662e-13 * tc[4] + 3.99269438e+04 * invT;
    // species 31: C5H5
    species[31] = -7.37844042e+00 + 4.86195909e-02 * tc[1] -
                  5.65263793e-05 * tc[2] + 3.79546668e-08 * tc[3] -
                  1.02415096e-11 * tc[4] + 3.05514662e+04 * invT;
    // species 32: C3H6
    species[32] = -2.29261670e-03 + 1.55130533e-02 * tc[1] -
                  5.57171827e-06 * tc[2] + 4.73985425e-10 * tc[3] +
                  2.49915830e-13 * tc[4] + 1.13437406e+03 * invT;
    // species 33: C4H8
    species[33] = -8.31372089e-01 + 2.26290489e-02 * tc[1] -
                  9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
                  2.86383360e-13 * tc[4] - 1.57875035e+03 * invT;
    // species 34: C5H6
    species[34] = -5.13691194e+00 + 3.03476727e-02 * tc[1] -
                  1.53517612e-05 * tc[2] + 3.21143002e-09 * tc[3] +
                  1.48242970e-13 * tc[4] + 1.53675713e+04 * invT;
    // species 35: A2
    species[35] = -8.72434585e+00 + 5.26880040e-02 * tc[1] -
                  2.67236897e-05 * tc[2] + 5.46364935e-09 * tc[3] +
                  2.84133212e-13 * tc[4] + 1.48059774e+04 * invT;
    // species 36: C5H10
    species[36] = -1.06223481e+00 + 2.87109147e-02 * tc[1] -
                  1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
                  3.59219578e-13 * tc[4] - 4.46546666e+03 * invT;
    // species 37: C5H11
    species[37] = -9.05255912e-01 + 3.05316426e-02 * tc[1] -
                  1.36497275e-05 * tc[2] + 3.65233675e-09 * tc[3] -
                  4.37719230e-13 * tc[4] + 4.83995303e+03 * invT;
    // species 38: A1C2H2
    species[38] = -6.31199276e+00 + 4.75548971e-02 * tc[1] -
                  3.18784034e-05 * tc[2] + 1.24445052e-08 * tc[3] -
                  2.04647434e-12 * tc[4] + 4.57330975e+04 * invT;
    // species 39: A1CH2
    species[39] = -6.07053038e+00 + 4.17600754e-02 * tc[1] -
                  2.47233361e-05 * tc[2] + 7.82884618e-09 * tc[3] -
                  8.47341736e-13 * tc[4] + 2.35894712e+04 * invT;
    // species 40: A1CHO
    species[40] = -3.47171048e+00 + 3.46445945e-02 * tc[1] -
                  1.44201170e-05 * tc[2] + 8.59677740e-10 * tc[3] +
                  9.62020522e-13 * tc[4] - 6.14558774e+03 * invT;
    // species 41: A1CH3
    species[41] = -4.54072038e+00 + 3.42713573e-02 * tc[1] -
                  1.19037675e-05 * tc[2] - 1.04849410e-09 * tc[3] +
                  1.48355959e-12 * tc[4] + 4.64121087e+03 * invT;
    // species 42: C7H15
    species[42] = -3.79155767e-02 + 3.78363285e-02 * tc[1] -
                  1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
                  9.84721490e-14 * tc[4] - 2.35605303e+03 * invT;
    // species 43: N-C7H16
    species[43] = -1.26836187e+00 + 4.27177910e-02 * tc[1] -
                  1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
                  4.04789850e-13 * tc[4] - 2.56586565e+04 * invT;
    // species 44: A1C2H*
    species[44] = -4.42757639e+00 + 4.18334322e-02 * tc[1] -
                  2.90035454e-05 * tc[2] + 1.17571415e-08 * tc[3] -
                  2.03633970e-12 * tc[4] + 6.73302359e+04 * invT;
    // species 45: A2-
    species[45] = -8.02718034e+00 + 5.14622590e-02 * tc[1] -
                  2.78090670e-05 * tc[2] + 6.80338458e-09 * tc[3] -
                  1.44911911e-13 * tc[4] + 5.01363344e+04 * invT;
    // species 46: A1C2H
    species[46] = -5.21036925e+00 + 4.32775972e-02 * tc[1] -
                  2.81669161e-05 * tc[2] + 1.05480176e-08 * tc[3] -
                  1.63353233e-12 * tc[4] + 3.52488620e+04 * invT;
  } else {
    // species 0: N2
    species[0] = +2.92664000e+00 + 7.43988400e-04 * tc[1] -
                 1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
                 1.35067020e-15 * tc[4] - 9.22797700e+02 * invT;
    // species 1: S-CH2
    species[1] = +2.29203842e+00 + 2.32794318e-03 * tc[1] -
                 6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
                 6.79432730e-15 * tc[4] + 5.09259997e+04 * invT;
    // species 2: T-CH2
    species[2] = +2.87410113e+00 + 1.82819646e-03 * tc[1] -
                 4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
                 3.75455134e-15 * tc[4] + 4.62636040e+04 * invT;
    // species 3: O
    species[3] = +2.56942078e+00 - 4.29870569e-05 * tc[1] +
                 1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
                 2.45667382e-16 * tc[4] + 2.92175791e+04 * invT;
    // species 4: H2
    species[4] = +3.33727920e+00 - 2.47012365e-05 * tc[1] +
                 1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
                 4.00510752e-15 * tc[4] - 9.50158922e+02 * invT;
    // species 5: H
    species[5] = +2.50000001e+00 - 1.15421486e-11 * tc[1] +
                 5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
                 9.96394714e-23 * tc[4] + 2.54736599e+04 * invT;
    // species 6: OH
    species[6] = +2.86472886e+00 + 5.28252240e-04 * tc[1] -
                 8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
                 2.66391752e-16 * tc[4] + 3.71885774e+03 * invT;
    // species 7: H2O
    species[7] = +3.03399249e+00 + 1.08845902e-03 * tc[1] -
                 5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
                 3.36401984e-15 * tc[4] - 3.00042971e+04 * invT;
    // species 8: O2
    species[8] = +3.28253784e+00 + 7.41543770e-04 * tc[1] -
                 2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
                 4.33435588e-15 * tc[4] - 1.08845772e+03 * invT;
    // species 9: HO2
    species[9] = +4.01721090e+00 + 1.11991006e-03 * tc[1] -
                 2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
                 2.15817070e-15 * tc[4] + 1.11856713e+02 * invT;
    // species 10: CH
    species[10] = +2.87846473e+00 + 4.85456840e-04 * tc[1] +
                  4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
                  3.52158766e-15 * tc[4] + 7.10124364e+04 * invT;
    // species 11: CO
    species[11] = +2.71518561e+00 + 1.03126372e-03 * tc[1] -
                  3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
                  4.07295432e-15 * tc[4] - 1.41518724e+04 * invT;
    // species 12: HCO
    species[12] = +2.77217438e+00 + 2.47847763e-03 * tc[1] -
                  8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
                  1.06701742e-14 * tc[4] + 4.01191815e+03 * invT;
    // species 13: CH2O
    species[13] = +1.76069008e+00 + 4.60000041e-03 * tc[1] -
                  1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
                  1.76771128e-14 * tc[4] - 1.39958323e+04 * invT;
    // species 14: CH3
    species[14] = +2.97812060e+00 + 2.89892600e-03 * tc[1] -
                  6.58526667e-07 * tc[2] + 7.68244750e-11 * tc[3] -
                  3.58348320e-15 * tc[4] + 1.65095130e+04 * invT;
    // species 15: CO2
    species[15] = +3.85746029e+00 + 2.20718513e-03 * tc[1] -
                  7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
                  9.44168328e-15 * tc[4] - 4.87591660e+04 * invT;
    // species 16: CH4
    species[16] = +1.65326226e+00 + 5.01315495e-03 * tc[1] -
                  1.10553746e-06 * tc[2] + 1.34120785e-10 * tc[3] -
                  6.29393516e-15 * tc[4] - 1.00095936e+04 * invT;
    // species 17: C2H3
    species[17] = +3.01672400e+00 + 5.16511460e-03 * tc[1] -
                  1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
                  1.72521408e-14 * tc[4] + 3.46128739e+04 * invT;
    // species 18: C2H4
    species[18] = +2.03611116e+00 + 7.32270755e-03 * tc[1] -
                  2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
                  2.51412122e-14 * tc[4] + 4.93988614e+03 * invT;
    // species 19: C2H5
    species[19] = +1.95465642e+00 + 8.69863610e-03 * tc[1] -
                  2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
                  2.99283152e-14 * tc[4] + 1.28575200e+04 * invT;
    // species 20: C2H
    species[20] = +3.16780652e+00 + 2.37610951e-03 * tc[1] -
                  6.12623590e-07 * tc[2] + 7.60475630e-11 * tc[3] -
                  3.54465540e-15 * tc[4] + 6.71210650e+04 * invT;
    // species 21: HCCO
    species[21] = +5.62820580e+00 + 2.04267005e-03 * tc[1] -
                  5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
                  3.88156640e-15 * tc[4] + 1.93272150e+04 * invT;
    // species 22: C2H2
    species[22] = +4.14756964e+00 + 2.98083332e-03 * tc[1] -
                  7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
                  7.22470426e-15 * tc[4] + 2.59359992e+04 * invT;
    // species 23: C3H3
    species[23] = +6.14915291e+00 + 4.67031583e-03 * tc[1] -
                  1.25018451e-06 * tc[2] + 1.72539079e-10 * tc[3] -
                  9.21649988e-15 * tc[4] + 3.83854848e+04 * invT;
    // species 24: A-C3H5
    species[24] = +2.28794927e+00 + 1.18200788e-02 * tc[1] -
                  4.26304833e-06 * tc[2] + 8.42096350e-10 * tc[3] -
                  6.94898898e-14 * tc[4] + 1.83033514e+04 * invT;
    // species 25: N-C3H7
    species[25] = +7.70404050e+00 + 8.02077000e-03 * tc[1] -
                  1.76053223e-06 * tc[2] + 1.90636007e-10 * tc[3] -
                  7.87069240e-15 * tc[4] + 8.29795310e+03 * invT;
    // species 26: C2H6
    species[26] = +1.07188150e+00 + 1.08426339e-02 * tc[1] -
                  3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
                  3.80005780e-14 * tc[4] - 1.14263932e+04 * invT;
    // species 27: P-C3H4
    species[27] = +2.81460543e+00 + 9.27622480e-03 * tc[1] -
                  3.18342256e-06 * tc[2] + 5.99878425e-10 * tc[3] -
                  4.74970514e-14 * tc[4] + 2.07010771e+04 * invT;
    // species 28: A-C3H4
    species[28] = +2.56128757e+00 + 9.75400640e-03 * tc[1] -
                  3.46871220e-06 * tc[2] + 6.75412933e-10 * tc[3] -
                  5.50148658e-14 * tc[4] + 2.13894289e+04 * invT;
    // species 29: A1
    species[29] = -2.06240612e-01 + 2.32061220e-02 * tc[1] -
                  9.25511787e-06 * tc[2] + 1.97227634e-09 * tc[3] -
                  1.72073052e-13 * tc[4] + 8.09883905e+03 * invT;
    // species 30: A1-
    species[30] = +1.38016336e+00 + 2.02016004e-02 * tc[1] -
                  8.07502950e-06 * tc[2] + 1.72180830e-09 * tc[3] -
                  1.50192160e-13 * tc[4] + 3.86973520e+04 * invT;
    // species 31: C5H5
    species[31] = +4.21464919e+00 + 1.35917364e-02 * tc[1] -
                  4.43910697e-06 * tc[2] + 7.72450297e-10 * tc[3] -
                  5.55759746e-14 * tc[4] + 2.88952416e+04 * invT;
    // species 32: C3H6
    species[32] = +4.71697982e-01 + 1.44756535e-02 * tc[1] -
                  5.22006063e-06 * tc[2] + 1.02860800e-09 * tc[3] -
                  8.46150282e-14 * tc[4] + 1.12603387e+03 * invT;
    // species 33: C4H8
    species[33] = +3.04470367e+00 + 1.63725883e-02 * tc[1] -
                  4.84544123e-06 * tc[2] + 5.99360043e-10 * tc[3] +
                  0.00000000e+00 * tc[4] - 2.52177534e+03 * invT;
    // species 34: C5H6
    species[34] = +2.30537462e-01 + 2.04785913e-02 * tc[1] -
                  8.05296527e-06 * tc[2] + 1.69940870e-09 * tc[3] -
                  1.47274884e-13 * tc[4] + 1.43779465e+04 * invT;
    // species 35: A2
    species[35] = +1.76826275e+00 + 3.44571753e-02 * tc[1] -
                  1.38107392e-05 * tc[2] + 2.94785772e-09 * tc[3] -
                  2.57194122e-13 * tc[4] + 1.26883657e+04 * invT;
    // species 36: C5H10
    species[36] = +3.98580522e+00 + 2.06214993e-02 * tc[1] -
                  6.14634990e-06 * tc[2] + 7.65388102e-10 * tc[3] +
                  0.00000000e+00 * tc[4] - 5.70112071e+03 * invT;
    // species 37: C5H11
    species[37] = +4.88920629e+00 + 2.11417269e-02 * tc[1] -
                  6.19477000e-06 * tc[2] + 7.60311908e-10 * tc[3] +
                  0.00000000e+00 * tc[4] + 3.43475468e+03 * invT;
    // species 38: A1C2H2
    species[38] = +5.85935080e+00 + 2.36285729e-02 * tc[1] -
                  8.99549110e-06 * tc[2] + 1.83827944e-09 * tc[3] -
                  1.54980166e-13 * tc[4] + 4.33198974e+04 * invT;
    // species 39: A1CH2
    species[39] = +3.30049696e+00 + 2.40027670e-02 * tc[1] -
                  9.28143407e-06 * tc[2] + 1.93092839e-09 * tc[3] -
                  1.65430827e-13 * tc[4] + 2.17498572e+04 * invT;
    // species 40: A1CHO
    species[40] = +1.87355756e+00 + 2.63115775e-02 * tc[1] -
                  1.05881654e-05 * tc[2] + 2.26600767e-09 * tc[3] -
                  1.98061225e-13 * tc[4] - 7.23603865e+03 * invT;
    // species 41: A1CH3
    species[41] = -1.01117220e+00 + 2.92650956e-02 * tc[1] -
                  1.15865023e-05 * tc[2] + 2.45545248e-09 * tc[3] -
                  2.13361740e-13 * tc[4] + 3.99363395e+03 * invT;
    // species 42: C7H15
    species[42] = +3.74721159e+00 + 3.24672581e-02 * tc[1] -
                  1.00447008e-05 * tc[2] + 1.29354536e-09 * tc[3] +
                  0.00000000e+00 * tc[4] - 3.37018357e+03 * invT;
    // species 43: N-C7H16
    species[43] = +5.14079241e+00 + 3.26539335e-02 * tc[1] -
                  9.82758747e-06 * tc[2] + 1.23431681e-09 * tc[3] +
                  0.00000000e+00 * tc[4] - 2.72533890e+04 * invT;
    // species 44: A1C2H*
    species[44] = +7.23812069e+00 + 1.91906054e-02 * tc[1] -
                  7.29502437e-06 * tc[2] + 1.49290312e-09 * tc[3] -
                  1.26070293e-13 * tc[4] + 6.49528135e+04 * invT;
    // species 45: A2-
    species[45] = +3.22892303e+00 + 3.15632243e-02 * tc[1] -
                  1.26860794e-05 * tc[2] + 2.71135172e-09 * tc[3] -
                  2.36685024e-13 * tc[4] + 4.78400840e+04 * invT;
    // species 46: A1C2H
    species[46] = +5.81520488e+00 + 2.20436466e-02 * tc[1] -
                  8.40179527e-06 * tc[2] + 1.72568807e-09 * tc[3] -
                  1.46275782e-13 * tc[4] + 3.30271906e+04 * invT;
  }
}

// compute the S/R at the given temperature (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
speciesEntropy(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +3.29867700e+00 * tc[0] + 1.40824040e-03 * tc[1] -
                 1.98161100e-06 * tc[2] + 1.88050500e-09 * tc[3] -
                 6.11213500e-13 * tc[4] + 3.95037200e+00;
    // species 1: S-CH2
    species[1] = +4.19860411e+00 * tc[0] - 2.36661419e-03 * tc[1] +
                 4.11648110e-06 * tc[2] - 2.22938660e-09 * tc[3] +
                 4.85786843e-13 * tc[4] - 7.69118967e-01;
    // species 2: T-CH2
    species[2] = +3.76267867e+00 * tc[0] + 9.68872143e-04 * tc[1] +
                 1.39744921e-06 * tc[2] - 1.28363718e-09 * tc[3] +
                 4.21854298e-13 * tc[4] + 1.56253185e+00;
    // species 3: O
    species[3] = +3.16826710e+00 * tc[0] - 3.27931884e-03 * tc[1] +
                 3.32153198e-06 * tc[2] - 2.04268875e-09 * tc[3] +
                 5.28164927e-13 * tc[4] + 2.05193346e+00;
    // species 4: H2
    species[4] = +2.34433112e+00 * tc[0] + 7.98052075e-03 * tc[1] -
                 9.73907550e-06 * tc[2] + 6.71906980e-09 * tc[3] -
                 1.84402940e-12 * tc[4] + 6.83010238e-01;
    // species 5: H
    species[5] = +2.50000000e+00 * tc[0] + 7.05332819e-13 * tc[1] -
                 9.97959820e-16 * tc[2] + 7.66938773e-19 * tc[3] -
                 2.31933083e-22 * tc[4] - 4.46682853e-01;
    // species 6: OH
    species[6] = +4.12530561e+00 * tc[0] - 3.22544939e-03 * tc[1] +
                 3.26382346e-06 * tc[2] - 1.93284548e-09 * tc[3] +
                 5.15593447e-13 * tc[4] - 6.90432960e-01;
    // species 7: H2O
    species[7] = +4.19864056e+00 * tc[0] - 2.03643410e-03 * tc[1] +
                 3.26020105e-06 * tc[2] - 1.82932354e-09 * tc[3] +
                 4.42994543e-13 * tc[4] - 8.49032208e-01;
    // species 8: O2
    species[8] = +3.78245636e+00 * tc[0] - 2.99673416e-03 * tc[1] +
                 4.92365101e-06 * tc[2] - 3.22709836e-09 * tc[3] +
                 8.10932092e-13 * tc[4] + 3.65767573e+00;
    // species 9: HO2
    species[9] = +4.30179801e+00 * tc[0] - 4.74912051e-03 * tc[1] +
                 1.05791445e-05 * tc[2] - 8.09212980e-09 * tc[3] +
                 2.32306281e-12 * tc[4] + 3.71666245e+00;
    // species 10: CH
    species[10] = +3.48981665e+00 * tc[0] + 3.23835541e-04 * tc[1] -
                  8.44495325e-07 * tc[2] + 1.05405776e-09 * tc[3] -
                  3.51522668e-13 * tc[4] + 2.08401108e+00;
    // species 11: CO
    species[11] = +3.57953347e+00 * tc[0] - 6.10353680e-04 * tc[1] +
                  5.08407165e-07 * tc[2] + 3.02335295e-10 * tc[3] -
                  2.26106125e-13 * tc[4] + 3.50840928e+00;
    // species 12: HCO
    species[12] = +4.22118584e+00 * tc[0] - 3.24392532e-03 * tc[1] +
                  6.88997230e-06 * tc[2] - 4.43813643e-09 * tc[3] +
                  1.08442216e-12 * tc[4] + 3.39437243e+00;
    // species 13: CH2O
    species[13] = +4.79372315e+00 * tc[0] - 9.90833369e-03 * tc[1] +
                  1.86610004e-05 * tc[2] - 1.26428420e-08 * tc[3] +
                  3.29431630e-12 * tc[4] + 6.02812900e-01;
    // species 14: CH3
    species[14] = +3.65717970e+00 * tc[0] + 2.12659790e-03 * tc[1] +
                  2.72919415e-06 * tc[2] - 2.20603343e-09 * tc[3] +
                  6.16426850e-13 * tc[4] + 1.67353540e+00;
    // species 15: CO2
    species[15] = +2.35677352e+00 * tc[0] + 8.98459677e-03 * tc[1] -
                  3.56178134e-06 * tc[2] + 8.19730073e-10 * tc[3] -
                  3.59248870e-14 * tc[4] + 9.90105222e+00;
    // species 16: CH4
    species[16] = +5.14911468e+00 * tc[0] - 1.36622009e-02 * tc[1] +
                  2.45726961e-05 * tc[2] - 1.61415589e-08 * tc[3] +
                  4.16508602e-12 * tc[4] - 4.63848842e+00;
    // species 17: C2H3
    species[17] = +3.21246645e+00 * tc[0] + 1.51479162e-03 * tc[1] +
                  1.29604706e-05 * tc[2] - 1.19219282e-08 * tc[3] +
                  3.67877182e-12 * tc[4] + 8.51054025e+00;
    // species 18: C2H4
    species[18] = +3.95920148e+00 * tc[0] - 7.57052247e-03 * tc[1] +
                  2.85495146e-05 * tc[2] - 2.30529584e-08 * tc[3] +
                  6.74710933e-12 * tc[4] + 4.09733096e+00;
    // species 19: C2H5
    species[19] = +4.30646568e+00 * tc[0] - 4.18658892e-03 * tc[1] +
                  2.48571403e-05 * tc[2] - 1.99708869e-08 * tc[3] +
                  5.76272510e-12 * tc[4] + 4.70720924e+00;
    // species 20: C2H
    species[20] = +2.88965733e+00 * tc[0] + 1.34099611e-02 * tc[1] -
                  1.42384751e-05 * tc[2] + 9.82636817e-09 * tc[3] -
                  2.73328777e-12 * tc[4] + 6.22296438e+00;
    // species 21: HCCO
    species[21] = +2.25172140e+00 * tc[0] + 1.76550210e-02 * tc[1] -
                  1.18645505e-05 * tc[2] + 5.75858633e-09 * tc[3] -
                  1.26662028e-12 * tc[4] + 1.24904170e+01;
    // species 22: C2H2
    species[22] = +8.08681094e-01 * tc[0] + 2.33615629e-02 * tc[1] -
                  1.77585907e-05 * tc[2] + 9.33841457e-09 * tc[3] -
                  2.12518243e-12 * tc[4] + 1.39397051e+01;
    // species 23: C3H3
    species[23] = +1.40299238e+00 * tc[0] + 3.01773327e-02 * tc[1] -
                  1.99224686e-05 * tc[2] + 9.78448763e-09 * tc[3] -
                  2.17638645e-12 * tc[4] + 1.51527845e+01;
    // species 24: A-C3H5
    species[24] = -1.03516444e+00 * tc[0] + 3.75043366e-02 * tc[1] -
                  1.63190621e-05 * tc[2] + 4.92208710e-09 * tc[3] -
                  6.09352885e-13 * tc[4] + 2.71451071e+01;
    // species 25: N-C3H7
    species[25] = +1.04754730e+00 * tc[0] + 2.60077940e-02 * tc[1] +
                  1.17811260e-06 * tc[2] - 6.53077233e-09 * tc[3] +
                  2.34200290e-12 * tc[4] + 2.11418760e+01;
    // species 26: C2H6
    species[26] = +4.29142492e+00 * tc[0] - 5.50154270e-03 * tc[1] +
                  2.99719144e-05 * tc[2] - 2.36155428e-08 * tc[3] +
                  6.71714427e-12 * tc[4] + 2.66682316e+00;
    // species 27: P-C3H4
    species[27] = +1.46175323e+00 * tc[0] + 2.46026602e-02 * tc[1] -
                  9.51096975e-06 * tc[2] + 2.86787807e-09 * tc[3] -
                  4.16823100e-13 * tc[4] + 1.49262585e+01;
    // species 28: A-C3H4
    species[28] = +3.68928265e-01 * tc[0] + 2.89351397e-02 * tc[1] -
                  1.22193204e-05 * tc[2] + 3.75157220e-09 * tc[3] -
                  5.07600655e-13 * tc[4] + 1.95267211e+01;
    // species 29: A1
    species[29] = -5.51558393e+00 * tc[0] + 6.45453225e-02 * tc[1] -
                  2.20701464e-05 * tc[2] + 2.49237387e-09 * tc[3] +
                  7.75705635e-13 * tc[4] + 4.65332293e+01;
    // species 30: A1-
    species[30] = -4.87654845e+00 * tc[0] + 6.26805782e-02 * tc[1] -
                  2.43701143e-05 * tc[2] + 4.70407623e-09 * tc[3] +
                  1.29629578e-13 * tc[4] + 4.59964173e+01;
    // species 31: C5H5
    species[31] = -7.37844042e+00 * tc[0] + 9.72391818e-02 * tc[1] -
                  8.47895690e-05 * tc[2] + 5.06062223e-08 * tc[3] -
                  1.28018870e-11 * tc[4] + 5.12829539e+01;
    // species 32: C3H6
    species[32] = -2.29261670e-03 * tc[0] + 3.10261065e-02 * tc[1] -
                  8.35757740e-06 * tc[2] + 6.31980567e-10 * tc[3] +
                  3.12394787e-13 * tc[4] + 2.35719601e+01;
    // species 33: C4H8
    species[33] = -8.31372089e-01 * tc[0] + 4.52580978e-02 * tc[1] -
                  1.46829280e-05 * tc[2] + 3.34068120e-09 * tc[3] -
                  3.57979200e-13 * tc[4] + 2.95084236e+01;
    // species 34: C5H6
    species[34] = -5.13691194e+00 * tc[0] + 6.06953453e-02 * tc[1] -
                  2.30276419e-05 * tc[2] + 4.28190670e-09 * tc[3] +
                  1.85303713e-13 * tc[4] + 4.61567559e+01;
    // species 35: A2
    species[35] = -8.72434585e+00 * tc[0] + 1.05376008e-01 * tc[1] -
                  4.00855345e-05 * tc[2] + 7.28486580e-09 * tc[3] +
                  3.55166515e-13 * tc[4] + 6.19827540e+01;
    // species 36: C5H10
    species[36] = -1.06223481e+00 * tc[0] + 5.74218294e-02 * tc[1] -
                  1.87243445e-05 * tc[2] + 4.24549963e-09 * tc[3] -
                  4.49024472e-13 * tc[4] + 3.22739790e+01;
    // species 37: C5H11
    species[37] = -9.05255912e-01 * tc[0] + 6.10632852e-02 * tc[1] -
                  2.04745912e-05 * tc[2] + 4.86978233e-09 * tc[3] -
                  5.47149037e-13 * tc[4] + 3.25574963e+01;
    // species 38: A1C2H2
    species[38] = -6.31199276e+00 * tc[0] + 9.51097942e-02 * tc[1] -
                  4.78176051e-05 * tc[2] + 1.65926736e-08 * tc[3] -
                  2.55809293e-12 * tc[4] + 5.35475222e+01;
    // species 39: A1CH2
    species[39] = -6.07053038e+00 * tc[0] + 8.35201507e-02 * tc[1] -
                  3.70850041e-05 * tc[2] + 1.04384616e-08 * tc[3] -
                  1.05917717e-12 * tc[4] + 5.07932172e+01;
    // species 40: A1CHO
    species[40] = -3.47171048e+00 * tc[0] + 6.92891889e-02 * tc[1] -
                  2.16301754e-05 * tc[2] + 1.14623699e-09 * tc[3] +
                  1.20252565e-12 * tc[4] + 4.14094024e+01;
    // species 41: A1CH3
    species[41] = -4.54072038e+00 * tc[0] + 6.85427145e-02 * tc[1] -
                  1.78556512e-05 * tc[2] - 1.39799214e-09 * tc[3] +
                  1.85444949e-12 * tc[4] + 4.57564849e+01;
    // species 42: C7H15
    species[42] = -3.79155767e-02 * tc[0] + 7.56726570e-02 * tc[1] -
                  2.03736817e-05 * tc[2] + 3.10892981e-09 * tc[3] -
                  1.23090186e-13 * tc[4] + 3.37321506e+01;
    // species 43: N-C7H16
    species[43] = -1.26836187e+00 * tc[0] + 8.54355820e-02 * tc[1] -
                  2.62673393e-05 * tc[2] + 5.43152403e-09 * tc[3] -
                  5.05987313e-13 * tc[4] + 3.53732912e+01;
    // species 44: A1C2H*
    species[44] = -4.42757639e+00 * tc[0] + 8.36668645e-02 * tc[1] -
                  4.35053181e-05 * tc[2] + 1.56761887e-08 * tc[3] -
                  2.54542463e-12 * tc[4] + 4.48118287e+01;
    // species 45: A2-
    species[45] = -8.02718034e+00 * tc[0] + 1.02924518e-01 * tc[1] -
                  4.17136005e-05 * tc[2] + 9.07117943e-09 * tc[3] -
                  1.81139889e-13 * tc[4] + 6.08902264e+01;
    // species 46: A1C2H
    species[46] = -5.21036925e+00 * tc[0] + 8.65551944e-02 * tc[1] -
                  4.22503742e-05 * tc[2] + 1.40640235e-08 * tc[3] -
                  2.04191542e-12 * tc[4] + 4.69445057e+01;
  } else {
    // species 0: N2
    species[0] = +2.92664000e+00 * tc[0] + 1.48797680e-03 * tc[1] -
                 2.84238000e-07 * tc[2] + 3.36567933e-11 * tc[3] -
                 1.68833775e-15 * tc[4] + 5.98052800e+00;
    // species 1: S-CH2
    species[1] = +2.29203842e+00 * tc[0] + 4.65588637e-03 * tc[1] -
                 1.00595973e-06 * tc[2] + 1.39302000e-10 * tc[3] -
                 8.49290912e-15 * tc[4] + 8.62650169e+00;
    // species 2: T-CH2
    species[2] = +2.87410113e+00 * tc[0] + 3.65639292e-03 * tc[1] -
                 7.04472985e-07 * tc[2] + 8.67265163e-11 * tc[3] -
                 4.69318918e-15 * tc[4] + 6.17119324e+00;
    // species 3: O
    species[3] = +2.56942078e+00 * tc[0] - 8.59741137e-05 * tc[1] +
                 2.09742295e-08 * tc[2] - 3.33925997e-12 * tc[3] +
                 3.07084227e-16 * tc[4] + 4.78433864e+00;
    // species 4: H2
    species[4] = +3.33727920e+00 * tc[0] - 4.94024731e-05 * tc[1] +
                 2.49728389e-07 * tc[2] - 5.98554647e-11 * tc[3] +
                 5.00638440e-15 * tc[4] - 3.20502331e+00;
    // species 5: H
    species[5] = +2.50000001e+00 * tc[0] - 2.30842973e-11 * tc[1] +
                 8.07809740e-15 * tc[2] - 1.57838412e-18 * tc[3] +
                 1.24549339e-22 * tc[4] - 4.46682914e-01;
    // species 6: OH
    species[6] = +2.86472886e+00 * tc[0] + 1.05650448e-03 * tc[1] -
                 1.29541379e-07 * tc[2] + 1.01739558e-11 * tc[3] -
                 3.32989690e-16 * tc[4] + 5.70164073e+00;
    // species 7: H2O
    species[7] = +3.03399249e+00 * tc[0] + 2.17691804e-03 * tc[1] -
                 8.20362590e-08 * tc[2] - 3.23473290e-11 * tc[3] +
                 4.20502480e-15 * tc[4] + 4.96677010e+00;
    // species 8: O2
    species[8] = +3.28253784e+00 * tc[0] + 1.48308754e-03 * tc[1] -
                 3.78983334e-07 * tc[2] + 6.98235183e-11 * tc[3] -
                 5.41794485e-15 * tc[4] + 5.45323129e+00;
    // species 9: HO2
    species[9] = +4.01721090e+00 * tc[0] + 2.23982013e-03 * tc[1] -
                 3.16829075e-07 * tc[2] + 3.80821233e-11 * tc[3] -
                 2.69771337e-15 * tc[4] + 3.78510215e+00;
    // species 10: CH
    species[10] = +2.87846473e+00 * tc[0] + 9.70913681e-04 * tc[1] +
                  7.22228275e-08 * tc[2] - 4.35626163e-11 * tc[3] +
                  4.40198457e-15 * tc[4] + 5.48497999e+00;
    // species 11: CO
    species[11] = +2.71518561e+00 * tc[0] + 2.06252743e-03 * tc[1] -
                  4.99412886e-07 * tc[2] + 7.66843360e-11 * tc[3] -
                  5.09119290e-15 * tc[4] + 7.81868772e+00;
    // species 12: HCO
    species[12] = +2.77217438e+00 * tc[0] + 4.95695526e-03 * tc[1] -
                  1.24222806e-06 * tc[2] + 1.96387259e-10 * tc[3] -
                  1.33377178e-14 * tc[4] + 9.79834492e+00;
    // species 13: CH2O
    species[13] = +1.76069008e+00 * tc[0] + 9.20000082e-03 * tc[1] -
                  2.21129406e-06 * tc[2] + 3.35470707e-10 * tc[3] -
                  2.20963910e-14 * tc[4] + 1.36563230e+01;
    // species 14: CH3
    species[14] = +2.97812060e+00 * tc[0] + 5.79785200e-03 * tc[1] -
                  9.87790000e-07 * tc[2] + 1.02432633e-10 * tc[3] -
                  4.47935400e-15 * tc[4] + 4.72247990e+00;
    // species 15: CO2
    species[15] = +3.85746029e+00 * tc[0] + 4.41437026e-03 * tc[1] -
                  1.10740702e-06 * tc[2] + 1.74496729e-10 * tc[3] -
                  1.18021041e-14 * tc[4] + 2.27163806e+00;
    // species 16: CH4
    species[16] = +1.65326226e+00 * tc[0] + 1.00263099e-02 * tc[1] -
                  1.65830619e-06 * tc[2] + 1.78827713e-10 * tc[3] -
                  7.86741895e-15 * tc[4] + 9.90506283e+00;
    // species 17: C2H3
    species[17] = +3.01672400e+00 * tc[0] + 1.03302292e-02 * tc[1] -
                  2.34041174e-06 * tc[2] + 3.39210960e-10 * tc[3] -
                  2.15651760e-14 * tc[4] + 7.78732378e+00;
    // species 18: C2H4
    species[18] = +2.03611116e+00 * tc[0] + 1.46454151e-02 * tc[1] -
                  3.35538958e-06 * tc[2] + 4.90743077e-10 * tc[3] -
                  3.14265152e-14 * tc[4] + 1.03053693e+01;
    // species 19: C2H5
    species[19] = +1.95465642e+00 * tc[0] + 1.73972722e-02 * tc[1] -
                  3.99103334e-06 * tc[2] + 5.84058963e-10 * tc[3] -
                  3.74103940e-14 * tc[4] + 1.34624343e+01;
    // species 20: C2H
    species[20] = +3.16780652e+00 * tc[0] + 4.75221902e-03 * tc[1] -
                  9.18935385e-07 * tc[2] + 1.01396751e-10 * tc[3] -
                  4.43081925e-15 * tc[4] + 6.63589475e+00;
    // species 21: HCCO
    species[21] = +5.62820580e+00 * tc[0] + 4.08534010e-03 * tc[1] -
                  7.96727350e-07 * tc[2] + 9.54201733e-11 * tc[3] -
                  4.85195800e-15 * tc[4] - 3.93025950e+00;
    // species 22: C2H2
    species[22] = +4.14756964e+00 * tc[0] + 5.96166664e-03 * tc[1] -
                  1.18647426e-06 * tc[2] + 1.55804057e-10 * tc[3] -
                  9.03088033e-15 * tc[4] - 1.23028121e+00;
    // species 23: C3H3
    species[23] = +6.14915291e+00 * tc[0] + 9.34063166e-03 * tc[1] -
                  1.87527677e-06 * tc[2] + 2.30052105e-10 * tc[3] -
                  1.15206249e-14 * tc[4] - 7.45345215e+00;
    // species 24: A-C3H5
    species[24] = +2.28794927e+00 * tc[0] + 2.36401575e-02 * tc[1] -
                  6.39457250e-06 * tc[2] + 1.12279513e-09 * tc[3] -
                  8.68623623e-14 * tc[4] + 1.14063418e+01;
    // species 25: N-C3H7
    species[25] = +7.70404050e+00 * tc[0] + 1.60415400e-02 * tc[1] -
                  2.64079835e-06 * tc[2] + 2.54181343e-10 * tc[3] -
                  9.83836550e-15 * tc[4] - 1.54875140e+01;
    // species 26: C2H6
    species[26] = +1.07188150e+00 * tc[0] + 2.16852677e-02 * tc[1] -
                  5.01280335e-06 * tc[2] + 7.38040003e-10 * tc[3] -
                  4.75007225e-14 * tc[4] + 1.51156107e+01;
    // species 27: P-C3H4
    species[27] = +2.81460543e+00 * tc[0] + 1.85524496e-02 * tc[1] -
                  4.77513384e-06 * tc[2] + 7.99837900e-10 * tc[3] -
                  5.93713142e-14 * tc[4] + 8.60604972e+00;
    // species 28: A-C3H4
    species[28] = +2.56128757e+00 * tc[0] + 1.95080128e-02 * tc[1] -
                  5.20306830e-06 * tc[2] + 9.00550577e-10 * tc[3] -
                  6.87685823e-14 * tc[4] + 9.20550397e+00;
    // species 29: A1
    species[29] = -2.06240612e-01 * tc[0] + 4.64122440e-02 * tc[1] -
                  1.38826768e-05 * tc[2] + 2.62970179e-09 * tc[3] -
                  2.15091315e-13 * tc[4] + 2.06566629e+01;
    // species 30: A1-
    species[30] = +1.38016336e+00 * tc[0] + 4.04032009e-02 * tc[1] -
                  1.21125443e-05 * tc[2] + 2.29574440e-09 * tc[3] -
                  1.87740200e-13 * tc[4] + 1.55220921e+01;
    // species 31: C5H5
    species[31] = +4.21464919e+00 * tc[0] + 2.71834728e-02 * tc[1] -
                  6.65866045e-06 * tc[2] + 1.02993373e-09 * tc[3] -
                  6.94699683e-14 * tc[4] - 3.05999781e-02;
    // species 32: C3H6
    species[32] = +4.71697982e-01 * tc[0] + 2.89513070e-02 * tc[1] -
                  7.83009095e-06 * tc[2] + 1.37147733e-09 * tc[3] -
                  1.05768785e-13 * tc[4] + 2.15237289e+01;
    // species 33: C4H8
    species[33] = +3.04470367e+00 * tc[0] + 3.27451765e-02 * tc[1] -
                  7.26816185e-06 * tc[2] + 7.99146723e-10 * tc[3] +
                  0.00000000e+00 * tc[4] + 1.00151514e+01;
    // species 34: C5H6
    species[34] = +2.30537462e-01 * tc[0] + 4.09571826e-02 * tc[1] -
                  1.20794479e-05 * tc[2] + 2.26587827e-09 * tc[3] -
                  1.84093605e-13 * tc[4] + 2.02551234e+01;
    // species 35: A2
    species[35] = +1.76826275e+00 * tc[0] + 6.89143506e-02 * tc[1] -
                  2.07161088e-05 * tc[2] + 3.93047697e-09 * tc[3] -
                  3.21492653e-13 * tc[4] + 1.06256608e+01;
    // species 36: C5H10
    species[36] = +3.98580522e+00 * tc[0] + 4.12429986e-02 * tc[1] -
                  9.21952485e-06 * tc[2] + 1.02051747e-09 * tc[3] +
                  0.00000000e+00 * tc[4] + 6.85332264e+00;
    // species 37: C5H11
    species[37] = +4.88920629e+00 * tc[0] + 4.22834537e-02 * tc[1] -
                  9.29215500e-06 * tc[2] + 1.01374921e-09 * tc[3] +
                  0.00000000e+00 * tc[4] + 3.43704878e+00;
    // species 38: A1C2H2
    species[38] = +5.85935080e+00 * tc[0] + 4.72571459e-02 * tc[1] -
                  1.34932367e-05 * tc[2] + 2.45103925e-09 * tc[3] -
                  1.93725207e-13 * tc[4] - 5.22359403e+00;
    // species 39: A1CH2
    species[39] = +3.30049696e+00 * tc[0] + 4.80055340e-02 * tc[1] -
                  1.39221511e-05 * tc[2] + 2.57457119e-09 * tc[3] -
                  2.06788534e-13 * tc[4] + 5.42371919e+00;
    // species 40: A1CHO
    species[40] = +1.87355756e+00 * tc[0] + 5.26231551e-02 * tc[1] -
                  1.58822481e-05 * tc[2] + 3.02134356e-09 * tc[3] -
                  2.47576531e-13 * tc[4] + 1.49787009e+01;
    // species 41: A1CH3
    species[41] = -1.01117220e+00 * tc[0] + 5.85301912e-02 * tc[1] -
                  1.73797534e-05 * tc[2] + 3.27393664e-09 * tc[3] -
                  2.66702175e-13 * tc[4] + 2.83610783e+01;
    // species 42: C7H15
    species[42] = +3.74721159e+00 * tc[0] + 6.49345162e-02 * tc[1] -
                  1.50670513e-05 * tc[2] + 1.72472714e-09 * tc[3] +
                  0.00000000e+00 * tc[4] + 1.42780413e+01;
    // species 43: N-C7H16
    species[43] = +5.14079241e+00 * tc[0] + 6.53078671e-02 * tc[1] -
                  1.47413812e-05 * tc[2] + 1.64575575e-09 * tc[3] +
                  0.00000000e+00 * tc[4] + 2.98195967e+00;
    // species 44: A1C2H*
    species[44] = +7.23812069e+00 * tc[0] + 3.83812109e-02 * tc[1] -
                  1.09425365e-05 * tc[2] + 1.99053749e-09 * tc[3] -
                  1.57587867e-13 * tc[4] - 1.17512654e+01;
    // species 45: A2-
    species[45] = +3.22892303e+00 * tc[0] + 6.31264486e-02 * tc[1] -
                  1.90291191e-05 * tc[2] + 3.61513563e-09 * tc[3] -
                  2.95856280e-13 * tc[4] + 5.82016697e+00;
    // species 46: A1C2H
    species[46] = +5.81520488e+00 * tc[0] + 4.40872933e-02 * tc[1] -
                  1.26026929e-05 * tc[2] + 2.30091743e-09 * tc[3] -
                  1.82844727e-13 * tc[4] - 6.49320690e+00;
  }
}

// Returns the mean specific heat at CP (Eq. 33)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cpbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cpor[47];                               //  temporary storage
  cp_R(cpor, tc);

  // perform dot product
  for (int id = 0; id < 47; ++id) {
    result += x[id] * cpor[id];
  }

  cpbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CP (Eq. 34)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cpbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache

  // compute Cp/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result +=
      y[0] *
      (+3.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
    // species 1: S-CH2
    result +=
      y[1] *
      (+4.19860411e+00 - 2.36661419e-03 * tc[1] + 8.23296220e-06 * tc[2] -
       6.68815981e-09 * tc[3] + 1.94314737e-12 * tc[4]) *
      0.0712910814857061;
    // species 2: T-CH2
    result +=
      y[2] *
      (+3.76267867e+00 + 9.68872143e-04 * tc[1] + 2.79489841e-06 * tc[2] -
       3.85091153e-09 * tc[3] + 1.68741719e-12 * tc[4]) *
      0.0712910814857061;
    // species 3: O
    result +=
      y[3] *
      (+3.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+2.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 5: H
    result +=
      y[5] *
      (+2.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 6: OH
    result +=
      y[6] *
      (+4.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 7: H2O
    result +=
      y[7] *
      (+4.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 8: O2
    result +=
      y[8] *
      (+3.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 9: HO2
    result +=
      y[9] *
      (+4.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 10: CH
    result +=
      y[10] *
      (+3.48981665e+00 + 3.23835541e-04 * tc[1] - 1.68899065e-06 * tc[2] +
       3.16217327e-09 * tc[3] - 1.40609067e-12 * tc[4]) *
      0.0768108149627468;
    // species 11: CO
    result +=
      y[11] *
      (+3.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 12: HCO
    result +=
      y[12] *
      (+4.22118584e+00 - 3.24392532e-03 * tc[1] + 1.37799446e-05 * tc[2] -
       1.33144093e-08 * tc[3] + 4.33768865e-12 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+4.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3
    result +=
      y[14] *
      (+3.65717970e+00 + 2.12659790e-03 * tc[1] + 5.45838830e-06 * tc[2] -
       6.61810030e-09 * tc[3] + 2.46570740e-12 * tc[4]) *
      0.0665114732291320;
    // species 15: CO2
    result +=
      y[15] *
      (+2.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 16: CH4
    result +=
      y[16] *
      (+5.14911468e+00 - 1.36622009e-02 * tc[1] + 4.91453921e-05 * tc[2] -
       4.84246767e-08 * tc[3] + 1.66603441e-11 * tc[4]) *
      0.0623324814560868;
    // species 17: C2H3
    result +=
      y[17] *
      (+3.21246645e+00 + 1.51479162e-03 * tc[1] + 2.59209412e-05 * tc[2] -
       3.57657847e-08 * tc[3] + 1.47150873e-11 * tc[4]) *
      0.0369740442209569;
    // species 18: C2H4
    result +=
      y[18] *
      (+3.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 19: C2H5
    result +=
      y[19] *
      (+4.30646568e+00 - 4.18658892e-03 * tc[1] + 4.97142807e-05 * tc[2] -
       5.99126606e-08 * tc[3] + 2.30509004e-11 * tc[4]) *
      0.0344091941366733;
    // species 20: C2H
    result +=
      y[20] *
      (+2.88965733e+00 + 1.34099611e-02 * tc[1] - 2.84769501e-05 * tc[2] +
       2.94791045e-08 * tc[3] - 1.09331511e-11 * tc[4]) *
      0.0399520575309628;
    // species 21: HCCO
    result +=
      y[21] *
      (+2.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 22: C2H2
    result +=
      y[22] *
      (+8.08681094e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 23: C3H3
    result +=
      y[23] *
      (+1.40299238e+00 + 3.01773327e-02 * tc[1] - 3.98449373e-05 * tc[2] +
       2.93534629e-08 * tc[3] - 8.70554579e-12 * tc[4]) *
      0.0256036049875823;
    // species 24: A-C3H5
    result +=
      y[24] *
      (-1.03516444e+00 + 3.75043366e-02 * tc[1] - 3.26381242e-05 * tc[2] +
       1.47662613e-08 * tc[3] - 2.43741154e-12 * tc[4]) *
      0.0243468945535997;
    // species 25: N-C3H7
    result +=
      y[25] *
      (+1.04754730e+00 + 2.60077940e-02 * tc[1] + 2.35622520e-06 * tc[2] -
       1.95923170e-08 * tc[3] + 9.36801160e-12 * tc[4]) *
      0.0232077792476038;
    // species 26: C2H6
    result +=
      y[26] *
      (+4.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 27: P-C3H4
    result +=
      y[27] *
      (+1.46175323e+00 + 2.46026602e-02 * tc[1] - 1.90219395e-05 * tc[2] +
       8.60363422e-09 * tc[3] - 1.66729240e-12 * tc[4]) *
      0.0249594409085237;
    // species 28: A-C3H4
    result +=
      y[28] *
      (+3.68928265e-01 + 2.89351397e-02 * tc[1] - 2.44386408e-05 * tc[2] +
       1.12547166e-08 * tc[3] - 2.03040262e-12 * tc[4]) *
      0.0249594409085237;
    // species 29: A1
    result +=
      y[29] *
      (-5.51558393e+00 + 6.45453225e-02 * tc[1] - 4.41402928e-05 * tc[2] +
       7.47712161e-09 * tc[3] + 3.10282254e-12 * tc[4]) *
      0.0128018024937911;
    // species 30: A1-
    result +=
      y[30] *
      (-4.87654845e+00 + 6.26805782e-02 * tc[1] - 4.87402286e-05 * tc[2] +
       1.41122287e-08 * tc[3] + 5.18518312e-13 * tc[4]) *
      0.0129691593390916;
    // species 31: C5H5
    result +=
      y[31] *
      (-7.37844042e+00 + 9.72391818e-02 * tc[1] - 1.69579138e-04 * tc[2] +
       1.51818667e-07 * tc[3] - 5.12075479e-11 * tc[4]) *
      0.0153621629925494;
    // species 32: C3H6
    result +=
      y[32] *
      (-2.29261670e-03 + 3.10261065e-02 * tc[1] - 1.67151548e-05 * tc[2] +
       1.89594170e-09 * tc[3] + 1.24957915e-12 * tc[4]) *
      0.0237636938285687;
    // species 33: C4H8
    result +=
      y[33] *
      (-8.31372089e-01 + 4.52580978e-02 * tc[1] - 2.93658559e-05 * tc[2] +
       1.00220436e-08 * tc[3] - 1.43191680e-12 * tc[4]) *
      0.0178227703714265;
    // species 34: C5H6
    result +=
      y[34] *
      (-5.13691194e+00 + 6.06953453e-02 * tc[1] - 4.60552837e-05 * tc[2] +
       1.28457201e-08 * tc[3] + 7.41214852e-13 * tc[4]) *
      0.0151279064490265;
    // species 35: A2
    result +=
      y[35] *
      (-8.72434585e+00 + 1.05376008e-01 * tc[1] - 8.01710690e-05 * tc[2] +
       2.18545974e-08 * tc[3] + 1.42066606e-12 * tc[4]) *
      0.0078018942999360;
    // species 36: C5H10
    result +=
      y[36] *
      (-1.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
    // species 37: C5H11
    result +=
      y[37] *
      (-9.05255912e-01 + 6.10632852e-02 * tc[1] - 4.09491825e-05 * tc[2] +
       1.46093470e-08 * tc[3] - 2.18859615e-12 * tc[4]) *
      0.0140561966743039;
    // species 38: A1C2H2
    result +=
      y[38] *
      (-6.31199276e+00 + 9.51097942e-02 * tc[1] - 9.56352102e-05 * tc[2] +
       4.97780207e-08 * tc[3] - 1.02323717e-11 * tc[4]) *
      0.0096951834328706;
    // species 39: A1CH2
    result +=
      y[39] *
      (-6.07053038e+00 + 8.35201507e-02 * tc[1] - 7.41700083e-05 * tc[2] +
       3.13153847e-08 * tc[3] - 4.23670868e-12 * tc[4]) *
      0.0109729735661067;
    // species 40: A1CHO
    result +=
      y[40] *
      (-3.47171048e+00 + 6.92891889e-02 * tc[1] - 4.32603509e-05 * tc[2] +
       3.43871096e-09 * tc[3] + 4.81010261e-12 * tc[4]) *
      0.0094229392031963;
    // species 41: A1CH3
    result +=
      y[41] *
      (-4.54072038e+00 + 6.85427145e-02 * tc[1] - 3.57113024e-05 * tc[2] -
       4.19397642e-09 * tc[3] + 7.41779795e-12 * tc[4]) *
      0.0108529319195581;
    // species 42: C7H15
    result +=
      y[42] *
      (-3.79155767e-02 + 7.56726570e-02 * tc[1] - 4.07473634e-05 * tc[2] +
       9.32678943e-09 * tc[3] - 4.92360745e-13 * tc[4]) *
      0.0100809500287307;
    // species 43: N-C7H16
    result +=
      y[43] *
      (-1.26836187e+00 + 8.54355820e-02 * tc[1] - 5.25346786e-05 * tc[2] +
       1.62945721e-08 * tc[3] - 2.02394925e-12 * tc[4]) *
      0.0099795419390250;
    // species 44: A1C2H*
    result +=
      y[44] *
      (-4.42757639e+00 + 8.36668645e-02 * tc[1] - 8.70106362e-05 * tc[2] +
       4.70285661e-08 * tc[3] - 1.01816985e-11 * tc[4]) *
      0.0098884581915988;
    // species 45: A2-
    result +=
      y[45] *
      (-8.02718034e+00 + 1.02924518e-01 * tc[1] - 8.34272010e-05 * tc[2] +
       2.72135383e-08 * tc[3] - 7.24559554e-13 * tc[4]) *
      0.0078637371624491;
    // species 46: A1C2H
    result +=
      y[46] *
      (-5.21036925e+00 + 8.65551944e-02 * tc[1] - 8.45007483e-05 * tc[2] +
       4.21920706e-08 * tc[3] - 8.16766167e-12 * tc[4]) *
      0.0097908670791885;
  } else {
    // species 0: N2
    result +=
      y[0] *
      (+2.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
    // species 1: S-CH2
    result +=
      y[1] *
      (+2.29203842e+00 + 4.65588637e-03 * tc[1] - 2.01191947e-06 * tc[2] +
       4.17906000e-10 * tc[3] - 3.39716365e-14 * tc[4]) *
      0.0712910814857061;
    // species 2: T-CH2
    result +=
      y[2] *
      (+2.87410113e+00 + 3.65639292e-03 * tc[1] - 1.40894597e-06 * tc[2] +
       2.60179549e-10 * tc[3] - 1.87727567e-14 * tc[4]) *
      0.0712910814857061;
    // species 3: O
    result +=
      y[3] *
      (+2.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+3.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 5: H
    result +=
      y[5] *
      (+2.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 6: OH
    result +=
      y[6] *
      (+2.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 7: H2O
    result +=
      y[7] *
      (+3.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 8: O2
    result +=
      y[8] *
      (+3.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 9: HO2
    result +=
      y[9] *
      (+4.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 10: CH
    result +=
      y[10] *
      (+2.87846473e+00 + 9.70913681e-04 * tc[1] + 1.44445655e-07 * tc[2] -
       1.30687849e-10 * tc[3] + 1.76079383e-14 * tc[4]) *
      0.0768108149627468;
    // species 11: CO
    result +=
      y[11] *
      (+2.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 12: HCO
    result +=
      y[12] *
      (+2.77217438e+00 + 4.95695526e-03 * tc[1] - 2.48445613e-06 * tc[2] +
       5.89161778e-10 * tc[3] - 5.33508711e-14 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+1.76069008e+00 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3
    result +=
      y[14] *
      (+2.97812060e+00 + 5.79785200e-03 * tc[1] - 1.97558000e-06 * tc[2] +
       3.07297900e-10 * tc[3] - 1.79174160e-14 * tc[4]) *
      0.0665114732291320;
    // species 15: CO2
    result +=
      y[15] *
      (+3.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 16: CH4
    result +=
      y[16] *
      (+1.65326226e+00 + 1.00263099e-02 * tc[1] - 3.31661238e-06 * tc[2] +
       5.36483138e-10 * tc[3] - 3.14696758e-14 * tc[4]) *
      0.0623324814560868;
    // species 17: C2H3
    result +=
      y[17] *
      (+3.01672400e+00 + 1.03302292e-02 * tc[1] - 4.68082349e-06 * tc[2] +
       1.01763288e-09 * tc[3] - 8.62607041e-14 * tc[4]) *
      0.0369740442209569;
    // species 18: C2H4
    result +=
      y[18] *
      (+2.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 19: C2H5
    result +=
      y[19] *
      (+1.95465642e+00 + 1.73972722e-02 * tc[1] - 7.98206668e-06 * tc[2] +
       1.75217689e-09 * tc[3] - 1.49641576e-13 * tc[4]) *
      0.0344091941366733;
    // species 20: C2H
    result +=
      y[20] *
      (+3.16780652e+00 + 4.75221902e-03 * tc[1] - 1.83787077e-06 * tc[2] +
       3.04190252e-10 * tc[3] - 1.77232770e-14 * tc[4]) *
      0.0399520575309628;
    // species 21: HCCO
    result +=
      y[21] *
      (+5.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 22: C2H2
    result +=
      y[22] *
      (+4.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 23: C3H3
    result +=
      y[23] *
      (+6.14915291e+00 + 9.34063166e-03 * tc[1] - 3.75055354e-06 * tc[2] +
       6.90156316e-10 * tc[3] - 4.60824994e-14 * tc[4]) *
      0.0256036049875823;
    // species 24: A-C3H5
    result +=
      y[24] *
      (+2.28794927e+00 + 2.36401575e-02 * tc[1] - 1.27891450e-05 * tc[2] +
       3.36838540e-09 * tc[3] - 3.47449449e-13 * tc[4]) *
      0.0243468945535997;
    // species 25: N-C3H7
    result +=
      y[25] *
      (+7.70404050e+00 + 1.60415400e-02 * tc[1] - 5.28159670e-06 * tc[2] +
       7.62544030e-10 * tc[3] - 3.93534620e-14 * tc[4]) *
      0.0232077792476038;
    // species 26: C2H6
    result +=
      y[26] *
      (+1.07188150e+00 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 27: P-C3H4
    result +=
      y[27] *
      (+2.81460543e+00 + 1.85524496e-02 * tc[1] - 9.55026768e-06 * tc[2] +
       2.39951370e-09 * tc[3] - 2.37485257e-13 * tc[4]) *
      0.0249594409085237;
    // species 28: A-C3H4
    result +=
      y[28] *
      (+2.56128757e+00 + 1.95080128e-02 * tc[1] - 1.04061366e-05 * tc[2] +
       2.70165173e-09 * tc[3] - 2.75074329e-13 * tc[4]) *
      0.0249594409085237;
    // species 29: A1
    result +=
      y[29] *
      (-2.06240612e-01 + 4.64122440e-02 * tc[1] - 2.77653536e-05 * tc[2] +
       7.88910537e-09 * tc[3] - 8.60365259e-13 * tc[4]) *
      0.0128018024937911;
    // species 30: A1-
    result +=
      y[30] *
      (+1.38016336e+00 + 4.04032009e-02 * tc[1] - 2.42250885e-05 * tc[2] +
       6.88723321e-09 * tc[3] - 7.50960802e-13 * tc[4]) *
      0.0129691593390916;
    // species 31: C5H5
    result +=
      y[31] *
      (+4.21464919e+00 + 2.71834728e-02 * tc[1] - 1.33173209e-05 * tc[2] +
       3.08980119e-09 * tc[3] - 2.77879873e-13 * tc[4]) *
      0.0153621629925494;
    // species 32: C3H6
    result +=
      y[32] *
      (+4.71697982e-01 + 2.89513070e-02 * tc[1] - 1.56601819e-05 * tc[2] +
       4.11443199e-09 * tc[3] - 4.23075141e-13 * tc[4]) *
      0.0237636938285687;
    // species 33: C4H8
    result +=
      y[33] *
      (+3.04470367e+00 + 3.27451765e-02 * tc[1] - 1.45363237e-05 * tc[2] +
       2.39744017e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0178227703714265;
    // species 34: C5H6
    result +=
      y[34] *
      (+2.30537462e-01 + 4.09571826e-02 * tc[1] - 2.41588958e-05 * tc[2] +
       6.79763480e-09 * tc[3] - 7.36374421e-13 * tc[4]) *
      0.0151279064490265;
    // species 35: A2
    result +=
      y[35] *
      (+1.76826275e+00 + 6.89143506e-02 * tc[1] - 4.14322176e-05 * tc[2] +
       1.17914309e-08 * tc[3] - 1.28597061e-12 * tc[4]) *
      0.0078018942999360;
    // species 36: C5H10
    result +=
      y[36] *
      (+3.98580522e+00 + 4.12429986e-02 * tc[1] - 1.84390497e-05 * tc[2] +
       3.06155241e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0142582162971412;
    // species 37: C5H11
    result +=
      y[37] *
      (+4.88920629e+00 + 4.22834537e-02 * tc[1] - 1.85843100e-05 * tc[2] +
       3.04124763e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0140561966743039;
    // species 38: A1C2H2
    result +=
      y[38] *
      (+5.85935080e+00 + 4.72571459e-02 * tc[1] - 2.69864733e-05 * tc[2] +
       7.35311775e-09 * tc[3] - 7.74900830e-13 * tc[4]) *
      0.0096951834328706;
    // species 39: A1CH2
    result +=
      y[39] *
      (+3.30049696e+00 + 4.80055340e-02 * tc[1] - 2.78443022e-05 * tc[2] +
       7.72371356e-09 * tc[3] - 8.27154136e-13 * tc[4]) *
      0.0109729735661067;
    // species 40: A1CHO
    result +=
      y[40] *
      (+1.87355756e+00 + 5.26231551e-02 * tc[1] - 3.17644962e-05 * tc[2] +
       9.06403069e-09 * tc[3] - 9.90306123e-13 * tc[4]) *
      0.0094229392031963;
    // species 41: A1CH3
    result +=
      y[41] *
      (-1.01117220e+00 + 5.85301912e-02 * tc[1] - 3.47595069e-05 * tc[2] +
       9.82180993e-09 * tc[3] - 1.06680870e-12 * tc[4]) *
      0.0108529319195581;
    // species 42: C7H15
    result +=
      y[42] *
      (+3.74721159e+00 + 6.49345162e-02 * tc[1] - 3.01341025e-05 * tc[2] +
       5.17418142e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0100809500287307;
    // species 43: N-C7H16
    result +=
      y[43] *
      (+5.14079241e+00 + 6.53078671e-02 * tc[1] - 2.94827624e-05 * tc[2] +
       4.93726726e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0099795419390250;
    // species 44: A1C2H*
    result +=
      y[44] *
      (+7.23812069e+00 + 3.83812109e-02 * tc[1] - 2.18850731e-05 * tc[2] +
       5.97161247e-09 * tc[3] - 6.30351467e-13 * tc[4]) *
      0.0098884581915988;
    // species 45: A2-
    result +=
      y[45] *
      (+3.22892303e+00 + 6.31264486e-02 * tc[1] - 3.80582381e-05 * tc[2] +
       1.08454069e-08 * tc[3] - 1.18342512e-12 * tc[4]) *
      0.0078637371624491;
    // species 46: A1C2H
    result +=
      y[46] *
      (+5.81520488e+00 + 4.40872933e-02 * tc[1] - 2.52053858e-05 * tc[2] +
       6.90275228e-09 * tc[3] - 7.31378908e-13 * tc[4]) *
      0.0097908670791885;
  }

  cpbs = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 35)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBL(const amrex::Real T, const amrex::Real x[], amrex::Real& cvbl)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real cvor[47];                               //  temporary storage
  cv_R(cvor, tc);

  // perform dot product
  for (int id = 0; id < 47; ++id) {
    result += x[id] * cvor[id];
  }

  cvbl = result * 8.31446261815324e+07;
}

// Returns the mean specific heat at CV (Eq. 36)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVBS(const amrex::Real T, const amrex::Real y[], amrex::Real& cvbs)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  // compute Cv/R at the given temperature

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result +=
      y[0] *
      (+2.29867700e+00 + 1.40824040e-03 * tc[1] - 3.96322200e-06 * tc[2] +
       5.64151500e-09 * tc[3] - 2.44485400e-12 * tc[4]) *
      0.0356964374955379;
    // species 1: S-CH2
    result +=
      y[1] *
      (+3.19860411e+00 - 2.36661419e-03 * tc[1] + 8.23296220e-06 * tc[2] -
       6.68815981e-09 * tc[3] + 1.94314737e-12 * tc[4]) *
      0.0712910814857061;
    // species 2: T-CH2
    result +=
      y[2] *
      (+2.76267867e+00 + 9.68872143e-04 * tc[1] + 2.79489841e-06 * tc[2] -
       3.85091153e-09 * tc[3] + 1.68741719e-12 * tc[4]) *
      0.0712910814857061;
    // species 3: O
    result +=
      y[3] *
      (+2.16826710e+00 - 3.27931884e-03 * tc[1] + 6.64306396e-06 * tc[2] -
       6.12806624e-09 * tc[3] + 2.11265971e-12 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+1.34433112e+00 + 7.98052075e-03 * tc[1] - 1.94781510e-05 * tc[2] +
       2.01572094e-08 * tc[3] - 7.37611761e-12 * tc[4]) *
      0.4960317460317460;
    // species 5: H
    result +=
      y[5] *
      (+1.50000000e+00 + 7.05332819e-13 * tc[1] - 1.99591964e-15 * tc[2] +
       2.30081632e-18 * tc[3] - 9.27732332e-22 * tc[4]) *
      0.9920634920634921;
    // species 6: OH
    result +=
      y[6] *
      (+3.12530561e+00 - 3.22544939e-03 * tc[1] + 6.52764691e-06 * tc[2] -
       5.79853643e-09 * tc[3] + 2.06237379e-12 * tc[4]) *
      0.0587993179279120;
    // species 7: H2O
    result +=
      y[7] *
      (+3.19864056e+00 - 2.03643410e-03 * tc[1] + 6.52040211e-06 * tc[2] -
       5.48797062e-09 * tc[3] + 1.77197817e-12 * tc[4]) *
      0.0555092978073827;
    // species 8: O2
    result +=
      y[8] *
      (+2.78245636e+00 - 2.99673416e-03 * tc[1] + 9.84730201e-06 * tc[2] -
       9.68129509e-09 * tc[3] + 3.24372837e-12 * tc[4]) *
      0.0312519532470779;
    // species 9: HO2
    result +=
      y[9] *
      (+3.30179801e+00 - 4.74912051e-03 * tc[1] + 2.11582891e-05 * tc[2] -
       2.42763894e-08 * tc[3] + 9.29225124e-12 * tc[4]) *
      0.0302975216627280;
    // species 10: CH
    result +=
      y[10] *
      (+2.48981665e+00 + 3.23835541e-04 * tc[1] - 1.68899065e-06 * tc[2] +
       3.16217327e-09 * tc[3] - 1.40609067e-12 * tc[4]) *
      0.0768108149627468;
    // species 11: CO
    result +=
      y[11] *
      (+2.57953347e+00 - 6.10353680e-04 * tc[1] + 1.01681433e-06 * tc[2] +
       9.07005884e-10 * tc[3] - 9.04424499e-13 * tc[4]) *
      0.0357015351660121;
    // species 12: HCO
    result +=
      y[12] *
      (+3.22118584e+00 - 3.24392532e-03 * tc[1] + 1.37799446e-05 * tc[2] -
       1.33144093e-08 * tc[3] + 4.33768865e-12 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+3.79372315e+00 - 9.90833369e-03 * tc[1] + 3.73220008e-05 * tc[2] -
       3.79285261e-08 * tc[3] + 1.31772652e-11 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3
    result +=
      y[14] *
      (+2.65717970e+00 + 2.12659790e-03 * tc[1] + 5.45838830e-06 * tc[2] -
       6.61810030e-09 * tc[3] + 2.46570740e-12 * tc[4]) *
      0.0665114732291320;
    // species 15: CO2
    result +=
      y[15] *
      (+1.35677352e+00 + 8.98459677e-03 * tc[1] - 7.12356269e-06 * tc[2] +
       2.45919022e-09 * tc[3] - 1.43699548e-13 * tc[4]) *
      0.0227226249176305;
    // species 16: CH4
    result +=
      y[16] *
      (+4.14911468e+00 - 1.36622009e-02 * tc[1] + 4.91453921e-05 * tc[2] -
       4.84246767e-08 * tc[3] + 1.66603441e-11 * tc[4]) *
      0.0623324814560868;
    // species 17: C2H3
    result +=
      y[17] *
      (+2.21246645e+00 + 1.51479162e-03 * tc[1] + 2.59209412e-05 * tc[2] -
       3.57657847e-08 * tc[3] + 1.47150873e-11 * tc[4]) *
      0.0369740442209569;
    // species 18: C2H4
    result +=
      y[18] *
      (+2.95920148e+00 - 7.57052247e-03 * tc[1] + 5.70990292e-05 * tc[2] -
       6.91588753e-08 * tc[3] + 2.69884373e-11 * tc[4]) *
      0.0356455407428531;
    // species 19: C2H5
    result +=
      y[19] *
      (+3.30646568e+00 - 4.18658892e-03 * tc[1] + 4.97142807e-05 * tc[2] -
       5.99126606e-08 * tc[3] + 2.30509004e-11 * tc[4]) *
      0.0344091941366733;
    // species 20: C2H
    result +=
      y[20] *
      (+1.88965733e+00 + 1.34099611e-02 * tc[1] - 2.84769501e-05 * tc[2] +
       2.94791045e-08 * tc[3] - 1.09331511e-11 * tc[4]) *
      0.0399520575309628;
    // species 21: HCCO
    result +=
      y[21] *
      (+1.25172140e+00 + 1.76550210e-02 * tc[1] - 2.37291010e-05 * tc[2] +
       1.72757590e-08 * tc[3] - 5.06648110e-12 * tc[4]) *
      0.0243730044602598;
    // species 22: C2H2
    result +=
      y[22] *
      (-1.91318906e-01 + 2.33615629e-02 * tc[1] - 3.55171815e-05 * tc[2] +
       2.80152437e-08 * tc[3] - 8.50072974e-12 * tc[4]) *
      0.0384054074813734;
    // species 23: C3H3
    result +=
      y[23] *
      (+4.02992380e-01 + 3.01773327e-02 * tc[1] - 3.98449373e-05 * tc[2] +
       2.93534629e-08 * tc[3] - 8.70554579e-12 * tc[4]) *
      0.0256036049875823;
    // species 24: A-C3H5
    result +=
      y[24] *
      (-2.03516444e+00 + 3.75043366e-02 * tc[1] - 3.26381242e-05 * tc[2] +
       1.47662613e-08 * tc[3] - 2.43741154e-12 * tc[4]) *
      0.0243468945535997;
    // species 25: N-C3H7
    result +=
      y[25] *
      (+4.75473000e-02 + 2.60077940e-02 * tc[1] + 2.35622520e-06 * tc[2] -
       1.95923170e-08 * tc[3] + 9.36801160e-12 * tc[4]) *
      0.0232077792476038;
    // species 26: C2H6
    result +=
      y[26] *
      (+3.29142492e+00 - 5.50154270e-03 * tc[1] + 5.99438288e-05 * tc[2] -
       7.08466285e-08 * tc[3] + 2.68685771e-11 * tc[4]) *
      0.0332557366145660;
    // species 27: P-C3H4
    result +=
      y[27] *
      (+4.61753230e-01 + 2.46026602e-02 * tc[1] - 1.90219395e-05 * tc[2] +
       8.60363422e-09 * tc[3] - 1.66729240e-12 * tc[4]) *
      0.0249594409085237;
    // species 28: A-C3H4
    result +=
      y[28] *
      (-6.31071735e-01 + 2.89351397e-02 * tc[1] - 2.44386408e-05 * tc[2] +
       1.12547166e-08 * tc[3] - 2.03040262e-12 * tc[4]) *
      0.0249594409085237;
    // species 29: A1
    result +=
      y[29] *
      (-6.51558393e+00 + 6.45453225e-02 * tc[1] - 4.41402928e-05 * tc[2] +
       7.47712161e-09 * tc[3] + 3.10282254e-12 * tc[4]) *
      0.0128018024937911;
    // species 30: A1-
    result +=
      y[30] *
      (-5.87654845e+00 + 6.26805782e-02 * tc[1] - 4.87402286e-05 * tc[2] +
       1.41122287e-08 * tc[3] + 5.18518312e-13 * tc[4]) *
      0.0129691593390916;
    // species 31: C5H5
    result +=
      y[31] *
      (-8.37844042e+00 + 9.72391818e-02 * tc[1] - 1.69579138e-04 * tc[2] +
       1.51818667e-07 * tc[3] - 5.12075479e-11 * tc[4]) *
      0.0153621629925494;
    // species 32: C3H6
    result +=
      y[32] *
      (-1.00229262e+00 + 3.10261065e-02 * tc[1] - 1.67151548e-05 * tc[2] +
       1.89594170e-09 * tc[3] + 1.24957915e-12 * tc[4]) *
      0.0237636938285687;
    // species 33: C4H8
    result +=
      y[33] *
      (-1.83137209e+00 + 4.52580978e-02 * tc[1] - 2.93658559e-05 * tc[2] +
       1.00220436e-08 * tc[3] - 1.43191680e-12 * tc[4]) *
      0.0178227703714265;
    // species 34: C5H6
    result +=
      y[34] *
      (-6.13691194e+00 + 6.06953453e-02 * tc[1] - 4.60552837e-05 * tc[2] +
       1.28457201e-08 * tc[3] + 7.41214852e-13 * tc[4]) *
      0.0151279064490265;
    // species 35: A2
    result +=
      y[35] *
      (-9.72434585e+00 + 1.05376008e-01 * tc[1] - 8.01710690e-05 * tc[2] +
       2.18545974e-08 * tc[3] + 1.42066606e-12 * tc[4]) *
      0.0078018942999360;
    // species 36: C5H10
    result +=
      y[36] *
      (-2.06223481e+00 + 5.74218294e-02 * tc[1] - 3.74486890e-05 * tc[2] +
       1.27364989e-08 * tc[3] - 1.79609789e-12 * tc[4]) *
      0.0142582162971412;
    // species 37: C5H11
    result +=
      y[37] *
      (-1.90525591e+00 + 6.10632852e-02 * tc[1] - 4.09491825e-05 * tc[2] +
       1.46093470e-08 * tc[3] - 2.18859615e-12 * tc[4]) *
      0.0140561966743039;
    // species 38: A1C2H2
    result +=
      y[38] *
      (-7.31199276e+00 + 9.51097942e-02 * tc[1] - 9.56352102e-05 * tc[2] +
       4.97780207e-08 * tc[3] - 1.02323717e-11 * tc[4]) *
      0.0096951834328706;
    // species 39: A1CH2
    result +=
      y[39] *
      (-7.07053038e+00 + 8.35201507e-02 * tc[1] - 7.41700083e-05 * tc[2] +
       3.13153847e-08 * tc[3] - 4.23670868e-12 * tc[4]) *
      0.0109729735661067;
    // species 40: A1CHO
    result +=
      y[40] *
      (-4.47171048e+00 + 6.92891889e-02 * tc[1] - 4.32603509e-05 * tc[2] +
       3.43871096e-09 * tc[3] + 4.81010261e-12 * tc[4]) *
      0.0094229392031963;
    // species 41: A1CH3
    result +=
      y[41] *
      (-5.54072038e+00 + 6.85427145e-02 * tc[1] - 3.57113024e-05 * tc[2] -
       4.19397642e-09 * tc[3] + 7.41779795e-12 * tc[4]) *
      0.0108529319195581;
    // species 42: C7H15
    result +=
      y[42] *
      (-1.03791558e+00 + 7.56726570e-02 * tc[1] - 4.07473634e-05 * tc[2] +
       9.32678943e-09 * tc[3] - 4.92360745e-13 * tc[4]) *
      0.0100809500287307;
    // species 43: N-C7H16
    result +=
      y[43] *
      (-2.26836187e+00 + 8.54355820e-02 * tc[1] - 5.25346786e-05 * tc[2] +
       1.62945721e-08 * tc[3] - 2.02394925e-12 * tc[4]) *
      0.0099795419390250;
    // species 44: A1C2H*
    result +=
      y[44] *
      (-5.42757639e+00 + 8.36668645e-02 * tc[1] - 8.70106362e-05 * tc[2] +
       4.70285661e-08 * tc[3] - 1.01816985e-11 * tc[4]) *
      0.0098884581915988;
    // species 45: A2-
    result +=
      y[45] *
      (-9.02718034e+00 + 1.02924518e-01 * tc[1] - 8.34272010e-05 * tc[2] +
       2.72135383e-08 * tc[3] - 7.24559554e-13 * tc[4]) *
      0.0078637371624491;
    // species 46: A1C2H
    result +=
      y[46] *
      (-6.21036925e+00 + 8.65551944e-02 * tc[1] - 8.45007483e-05 * tc[2] +
       4.21920706e-08 * tc[3] - 8.16766167e-12 * tc[4]) *
      0.0097908670791885;
  } else {
    // species 0: N2
    result +=
      y[0] *
      (+1.92664000e+00 + 1.48797680e-03 * tc[1] - 5.68476000e-07 * tc[2] +
       1.00970380e-10 * tc[3] - 6.75335100e-15 * tc[4]) *
      0.0356964374955379;
    // species 1: S-CH2
    result +=
      y[1] *
      (+1.29203842e+00 + 4.65588637e-03 * tc[1] - 2.01191947e-06 * tc[2] +
       4.17906000e-10 * tc[3] - 3.39716365e-14 * tc[4]) *
      0.0712910814857061;
    // species 2: T-CH2
    result +=
      y[2] *
      (+1.87410113e+00 + 3.65639292e-03 * tc[1] - 1.40894597e-06 * tc[2] +
       2.60179549e-10 * tc[3] - 1.87727567e-14 * tc[4]) *
      0.0712910814857061;
    // species 3: O
    result +=
      y[3] *
      (+1.56942078e+00 - 8.59741137e-05 * tc[1] + 4.19484589e-08 * tc[2] -
       1.00177799e-11 * tc[3] + 1.22833691e-15 * tc[4]) *
      0.0625039064941559;
    // species 4: H2
    result +=
      y[4] *
      (+2.33727920e+00 - 4.94024731e-05 * tc[1] + 4.99456778e-07 * tc[2] -
       1.79566394e-10 * tc[3] + 2.00255376e-14 * tc[4]) *
      0.4960317460317460;
    // species 5: H
    result +=
      y[5] *
      (+1.50000001e+00 - 2.30842973e-11 * tc[1] + 1.61561948e-14 * tc[2] -
       4.73515235e-18 * tc[3] + 4.98197357e-22 * tc[4]) *
      0.9920634920634921;
    // species 6: OH
    result +=
      y[6] *
      (+1.86472886e+00 + 1.05650448e-03 * tc[1] - 2.59082758e-07 * tc[2] +
       3.05218674e-11 * tc[3] - 1.33195876e-15 * tc[4]) *
      0.0587993179279120;
    // species 7: H2O
    result +=
      y[7] *
      (+2.03399249e+00 + 2.17691804e-03 * tc[1] - 1.64072518e-07 * tc[2] -
       9.70419870e-11 * tc[3] + 1.68200992e-14 * tc[4]) *
      0.0555092978073827;
    // species 8: O2
    result +=
      y[8] *
      (+2.28253784e+00 + 1.48308754e-03 * tc[1] - 7.57966669e-07 * tc[2] +
       2.09470555e-10 * tc[3] - 2.16717794e-14 * tc[4]) *
      0.0312519532470779;
    // species 9: HO2
    result +=
      y[9] *
      (+3.01721090e+00 + 2.23982013e-03 * tc[1] - 6.33658150e-07 * tc[2] +
       1.14246370e-10 * tc[3] - 1.07908535e-14 * tc[4]) *
      0.0302975216627280;
    // species 10: CH
    result +=
      y[10] *
      (+1.87846473e+00 + 9.70913681e-04 * tc[1] + 1.44445655e-07 * tc[2] -
       1.30687849e-10 * tc[3] + 1.76079383e-14 * tc[4]) *
      0.0768108149627468;
    // species 11: CO
    result +=
      y[11] *
      (+1.71518561e+00 + 2.06252743e-03 * tc[1] - 9.98825771e-07 * tc[2] +
       2.30053008e-10 * tc[3] - 2.03647716e-14 * tc[4]) *
      0.0357015351660121;
    // species 12: HCO
    result +=
      y[12] *
      (+1.77217438e+00 + 4.95695526e-03 * tc[1] - 2.48445613e-06 * tc[2] +
       5.89161778e-10 * tc[3] - 5.33508711e-14 * tc[4]) *
      0.0344613688055690;
    // species 13: CH2O
    result +=
      y[13] *
      (+7.60690080e-01 + 9.20000082e-03 * tc[1] - 4.42258813e-06 * tc[2] +
       1.00641212e-09 * tc[3] - 8.83855640e-14 * tc[4]) *
      0.0333044694598015;
    // species 14: CH3
    result +=
      y[14] *
      (+1.97812060e+00 + 5.79785200e-03 * tc[1] - 1.97558000e-06 * tc[2] +
       3.07297900e-10 * tc[3] - 1.79174160e-14 * tc[4]) *
      0.0665114732291320;
    // species 15: CO2
    result +=
      y[15] *
      (+2.85746029e+00 + 4.41437026e-03 * tc[1] - 2.21481404e-06 * tc[2] +
       5.23490188e-10 * tc[3] - 4.72084164e-14 * tc[4]) *
      0.0227226249176305;
    // species 16: CH4
    result +=
      y[16] *
      (+6.53262260e-01 + 1.00263099e-02 * tc[1] - 3.31661238e-06 * tc[2] +
       5.36483138e-10 * tc[3] - 3.14696758e-14 * tc[4]) *
      0.0623324814560868;
    // species 17: C2H3
    result +=
      y[17] *
      (+2.01672400e+00 + 1.03302292e-02 * tc[1] - 4.68082349e-06 * tc[2] +
       1.01763288e-09 * tc[3] - 8.62607041e-14 * tc[4]) *
      0.0369740442209569;
    // species 18: C2H4
    result +=
      y[18] *
      (+1.03611116e+00 + 1.46454151e-02 * tc[1] - 6.71077915e-06 * tc[2] +
       1.47222923e-09 * tc[3] - 1.25706061e-13 * tc[4]) *
      0.0356455407428531;
    // species 19: C2H5
    result +=
      y[19] *
      (+9.54656420e-01 + 1.73972722e-02 * tc[1] - 7.98206668e-06 * tc[2] +
       1.75217689e-09 * tc[3] - 1.49641576e-13 * tc[4]) *
      0.0344091941366733;
    // species 20: C2H
    result +=
      y[20] *
      (+2.16780652e+00 + 4.75221902e-03 * tc[1] - 1.83787077e-06 * tc[2] +
       3.04190252e-10 * tc[3] - 1.77232770e-14 * tc[4]) *
      0.0399520575309628;
    // species 21: HCCO
    result +=
      y[21] *
      (+4.62820580e+00 + 4.08534010e-03 * tc[1] - 1.59345470e-06 * tc[2] +
       2.86260520e-10 * tc[3] - 1.94078320e-14 * tc[4]) *
      0.0243730044602598;
    // species 22: C2H2
    result +=
      y[22] *
      (+3.14756964e+00 + 5.96166664e-03 * tc[1] - 2.37294852e-06 * tc[2] +
       4.67412171e-10 * tc[3] - 3.61235213e-14 * tc[4]) *
      0.0384054074813734;
    // species 23: C3H3
    result +=
      y[23] *
      (+5.14915291e+00 + 9.34063166e-03 * tc[1] - 3.75055354e-06 * tc[2] +
       6.90156316e-10 * tc[3] - 4.60824994e-14 * tc[4]) *
      0.0256036049875823;
    // species 24: A-C3H5
    result +=
      y[24] *
      (+1.28794927e+00 + 2.36401575e-02 * tc[1] - 1.27891450e-05 * tc[2] +
       3.36838540e-09 * tc[3] - 3.47449449e-13 * tc[4]) *
      0.0243468945535997;
    // species 25: N-C3H7
    result +=
      y[25] *
      (+6.70404050e+00 + 1.60415400e-02 * tc[1] - 5.28159670e-06 * tc[2] +
       7.62544030e-10 * tc[3] - 3.93534620e-14 * tc[4]) *
      0.0232077792476038;
    // species 26: C2H6
    result +=
      y[26] *
      (+7.18815000e-02 + 2.16852677e-02 * tc[1] - 1.00256067e-05 * tc[2] +
       2.21412001e-09 * tc[3] - 1.90002890e-13 * tc[4]) *
      0.0332557366145660;
    // species 27: P-C3H4
    result +=
      y[27] *
      (+1.81460543e+00 + 1.85524496e-02 * tc[1] - 9.55026768e-06 * tc[2] +
       2.39951370e-09 * tc[3] - 2.37485257e-13 * tc[4]) *
      0.0249594409085237;
    // species 28: A-C3H4
    result +=
      y[28] *
      (+1.56128757e+00 + 1.95080128e-02 * tc[1] - 1.04061366e-05 * tc[2] +
       2.70165173e-09 * tc[3] - 2.75074329e-13 * tc[4]) *
      0.0249594409085237;
    // species 29: A1
    result +=
      y[29] *
      (-1.20624061e+00 + 4.64122440e-02 * tc[1] - 2.77653536e-05 * tc[2] +
       7.88910537e-09 * tc[3] - 8.60365259e-13 * tc[4]) *
      0.0128018024937911;
    // species 30: A1-
    result +=
      y[30] *
      (+3.80163360e-01 + 4.04032009e-02 * tc[1] - 2.42250885e-05 * tc[2] +
       6.88723321e-09 * tc[3] - 7.50960802e-13 * tc[4]) *
      0.0129691593390916;
    // species 31: C5H5
    result +=
      y[31] *
      (+3.21464919e+00 + 2.71834728e-02 * tc[1] - 1.33173209e-05 * tc[2] +
       3.08980119e-09 * tc[3] - 2.77879873e-13 * tc[4]) *
      0.0153621629925494;
    // species 32: C3H6
    result +=
      y[32] *
      (-5.28302018e-01 + 2.89513070e-02 * tc[1] - 1.56601819e-05 * tc[2] +
       4.11443199e-09 * tc[3] - 4.23075141e-13 * tc[4]) *
      0.0237636938285687;
    // species 33: C4H8
    result +=
      y[33] *
      (+2.04470367e+00 + 3.27451765e-02 * tc[1] - 1.45363237e-05 * tc[2] +
       2.39744017e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0178227703714265;
    // species 34: C5H6
    result +=
      y[34] *
      (-7.69462538e-01 + 4.09571826e-02 * tc[1] - 2.41588958e-05 * tc[2] +
       6.79763480e-09 * tc[3] - 7.36374421e-13 * tc[4]) *
      0.0151279064490265;
    // species 35: A2
    result +=
      y[35] *
      (+7.68262750e-01 + 6.89143506e-02 * tc[1] - 4.14322176e-05 * tc[2] +
       1.17914309e-08 * tc[3] - 1.28597061e-12 * tc[4]) *
      0.0078018942999360;
    // species 36: C5H10
    result +=
      y[36] *
      (+2.98580522e+00 + 4.12429986e-02 * tc[1] - 1.84390497e-05 * tc[2] +
       3.06155241e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0142582162971412;
    // species 37: C5H11
    result +=
      y[37] *
      (+3.88920629e+00 + 4.22834537e-02 * tc[1] - 1.85843100e-05 * tc[2] +
       3.04124763e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0140561966743039;
    // species 38: A1C2H2
    result +=
      y[38] *
      (+4.85935080e+00 + 4.72571459e-02 * tc[1] - 2.69864733e-05 * tc[2] +
       7.35311775e-09 * tc[3] - 7.74900830e-13 * tc[4]) *
      0.0096951834328706;
    // species 39: A1CH2
    result +=
      y[39] *
      (+2.30049696e+00 + 4.80055340e-02 * tc[1] - 2.78443022e-05 * tc[2] +
       7.72371356e-09 * tc[3] - 8.27154136e-13 * tc[4]) *
      0.0109729735661067;
    // species 40: A1CHO
    result +=
      y[40] *
      (+8.73557560e-01 + 5.26231551e-02 * tc[1] - 3.17644962e-05 * tc[2] +
       9.06403069e-09 * tc[3] - 9.90306123e-13 * tc[4]) *
      0.0094229392031963;
    // species 41: A1CH3
    result +=
      y[41] *
      (-2.01117220e+00 + 5.85301912e-02 * tc[1] - 3.47595069e-05 * tc[2] +
       9.82180993e-09 * tc[3] - 1.06680870e-12 * tc[4]) *
      0.0108529319195581;
    // species 42: C7H15
    result +=
      y[42] *
      (+2.74721159e+00 + 6.49345162e-02 * tc[1] - 3.01341025e-05 * tc[2] +
       5.17418142e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0100809500287307;
    // species 43: N-C7H16
    result +=
      y[43] *
      (+4.14079241e+00 + 6.53078671e-02 * tc[1] - 2.94827624e-05 * tc[2] +
       4.93726726e-09 * tc[3] + 0.00000000e+00 * tc[4]) *
      0.0099795419390250;
    // species 44: A1C2H*
    result +=
      y[44] *
      (+6.23812069e+00 + 3.83812109e-02 * tc[1] - 2.18850731e-05 * tc[2] +
       5.97161247e-09 * tc[3] - 6.30351467e-13 * tc[4]) *
      0.0098884581915988;
    // species 45: A2-
    result +=
      y[45] *
      (+2.22892303e+00 + 6.31264486e-02 * tc[1] - 3.80582381e-05 * tc[2] +
       1.08454069e-08 * tc[3] - 1.18342512e-12 * tc[4]) *
      0.0078637371624491;
    // species 46: A1C2H
    result +=
      y[46] *
      (+4.81520488e+00 + 4.40872933e-02 * tc[1] - 2.52053858e-05 * tc[2] +
       6.90275228e-09 * tc[3] - 7.31378908e-13 * tc[4]) *
      0.0097908670791885;
  }

  cvbs = result * 8.31446261815324e+07;
}

// Returns the mean enthalpy of the mixture in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBML(const amrex::Real T, const amrex::Real x[], amrex::Real& hbml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real hml[47];                                //  temporary storage
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // perform dot product
  for (int id = 0; id < 47; ++id) {
    result += x[id] * hml[id];
  }

  hbml = result * RT;
}

// Returns mean enthalpy of mixture in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& hbms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result += y[0] *
              (+3.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
    // species 1: S-CH2
    result += y[1] *
              (+4.19860411e+00 - 1.18330710e-03 * tc[1] +
               2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
               3.88629474e-13 * tc[4] + 5.04968163e+04 * invT) *
              0.0712910814857061;
    // species 2: T-CH2
    result += y[2] *
              (+3.76267867e+00 + 4.84436072e-04 * tc[1] +
               9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
               3.37483438e-13 * tc[4] + 4.60040401e+04 * invT) *
              0.0712910814857061;
    // species 3: O
    result += y[3] *
              (+3.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+2.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 5: H
    result += y[5] *
              (+2.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 6: OH
    result += y[6] *
              (+4.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 7: H2O
    result += y[7] *
              (+4.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 8: O2
    result += y[8] *
              (+3.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 9: HO2
    result += y[9] *
              (+4.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 10: CH
    result += y[10] *
              (+3.48981665e+00 + 1.61917771e-04 * tc[1] -
               5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
               2.81218134e-13 * tc[4] + 7.07972934e+04 * invT) *
              0.0768108149627468;
    // species 11: CO
    result += y[11] *
              (+3.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 12: HCO
    result += y[12] *
              (+4.22118584e+00 - 1.62196266e-03 * tc[1] +
               4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
               8.67537730e-13 * tc[4] + 3.83956496e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+4.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3
    result += y[14] *
              (+3.65717970e+00 + 1.06329895e-03 * tc[1] +
               1.81946277e-06 * tc[2] - 1.65452507e-09 * tc[3] +
               4.93141480e-13 * tc[4] + 1.64227160e+04 * invT) *
              0.0665114732291320;
    // species 15: CO2
    result += y[15] *
              (+2.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 16: CH4
    result += y[16] *
              (+5.14911468e+00 - 6.83110045e-03 * tc[1] +
               1.63817974e-05 * tc[2] - 1.21061692e-08 * tc[3] +
               3.33206882e-12 * tc[4] - 1.02465983e+04 * invT) *
              0.0623324814560868;
    // species 17: C2H3
    result += y[17] *
              (+3.21246645e+00 + 7.57395810e-04 * tc[1] +
               8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
               2.94301746e-12 * tc[4] + 3.48598468e+04 * invT) *
              0.0369740442209569;
    // species 18: C2H4
    result += y[18] *
              (+3.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 19: C2H5
    result += y[19] *
              (+4.30646568e+00 - 2.09329446e-03 * tc[1] +
               1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
               4.61018008e-12 * tc[4] + 1.28416265e+04 * invT) *
              0.0344091941366733;
    // species 20: C2H
    result += y[20] *
              (+2.88965733e+00 + 6.70498055e-03 * tc[1] -
               9.49231670e-06 * tc[2] + 7.36977613e-09 * tc[3] -
               2.18663022e-12 * tc[4] + 6.68393932e+04 * invT) *
              0.0399520575309628;
    // species 21: HCCO
    result += y[21] *
              (+2.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 22: C2H2
    result += y[22] *
              (+8.08681094e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 23: C3H3
    result += y[23] *
              (+1.40299238e+00 + 1.50886664e-02 * tc[1] -
               1.32816458e-05 * tc[2] + 7.33836572e-09 * tc[3] -
               1.74110916e-12 * tc[4] + 3.93108220e+04 * invT) *
              0.0256036049875823;
    // species 24: A-C3H5
    result += y[24] *
              (-1.03516444e+00 + 1.87521683e-02 * tc[1] -
               1.08793747e-05 * tc[2] + 3.69156533e-09 * tc[3] -
               4.87482308e-13 * tc[4] + 1.88792254e+04 * invT) *
              0.0243468945535997;
    // species 25: N-C3H7
    result += y[25] *
              (+1.04754730e+00 + 1.30038970e-02 * tc[1] +
               7.85408400e-07 * tc[2] - 4.89807925e-09 * tc[3] +
               1.87360232e-12 * tc[4] + 1.06326370e+04 * invT) *
              0.0232077792476038;
    // species 26: C2H6
    result += y[26] *
              (+4.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 27: P-C3H4
    result += y[27] *
              (+1.46175323e+00 + 1.23013301e-02 * tc[1] -
               6.34064650e-06 * tc[2] + 2.15090855e-09 * tc[3] -
               3.33458480e-13 * tc[4] + 2.09209793e+04 * invT) *
              0.0249594409085237;
    // species 28: A-C3H4
    result += y[28] *
              (+3.68928265e-01 + 1.44675699e-02 * tc[1] -
               8.14621360e-06 * tc[2] + 2.81367915e-09 * tc[3] -
               4.06080524e-13 * tc[4] + 2.17585256e+04 * invT) *
              0.0249594409085237;
    // species 29: A1
    result += y[29] *
              (-5.51558393e+00 + 3.22726613e-02 * tc[1] -
               1.47134309e-05 * tc[2] + 1.86928040e-09 * tc[3] +
               6.20564508e-13 * tc[4] + 9.11031457e+03 * invT) *
              0.0128018024937911;
    // species 30: A1-
    result += y[30] *
              (-4.87654845e+00 + 3.13402891e-02 * tc[1] -
               1.62467429e-05 * tc[2] + 3.52805717e-09 * tc[3] +
               1.03703662e-13 * tc[4] + 3.99269438e+04 * invT) *
              0.0129691593390916;
    // species 31: C5H5
    result += y[31] *
              (-7.37844042e+00 + 4.86195909e-02 * tc[1] -
               5.65263793e-05 * tc[2] + 3.79546668e-08 * tc[3] -
               1.02415096e-11 * tc[4] + 3.05514662e+04 * invT) *
              0.0153621629925494;
    // species 32: C3H6
    result += y[32] *
              (-2.29261670e-03 + 1.55130533e-02 * tc[1] -
               5.57171827e-06 * tc[2] + 4.73985425e-10 * tc[3] +
               2.49915830e-13 * tc[4] + 1.13437406e+03 * invT) *
              0.0237636938285687;
    // species 33: C4H8
    result += y[33] *
              (-8.31372089e-01 + 2.26290489e-02 * tc[1] -
               9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
               2.86383360e-13 * tc[4] - 1.57875035e+03 * invT) *
              0.0178227703714265;
    // species 34: C5H6
    result += y[34] *
              (-5.13691194e+00 + 3.03476727e-02 * tc[1] -
               1.53517612e-05 * tc[2] + 3.21143002e-09 * tc[3] +
               1.48242970e-13 * tc[4] + 1.53675713e+04 * invT) *
              0.0151279064490265;
    // species 35: A2
    result += y[35] *
              (-8.72434585e+00 + 5.26880040e-02 * tc[1] -
               2.67236897e-05 * tc[2] + 5.46364935e-09 * tc[3] +
               2.84133212e-13 * tc[4] + 1.48059774e+04 * invT) *
              0.0078018942999360;
    // species 36: C5H10
    result += y[36] *
              (-1.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
    // species 37: C5H11
    result += y[37] *
              (-9.05255912e-01 + 3.05316426e-02 * tc[1] -
               1.36497275e-05 * tc[2] + 3.65233675e-09 * tc[3] -
               4.37719230e-13 * tc[4] + 4.83995303e+03 * invT) *
              0.0140561966743039;
    // species 38: A1C2H2
    result += y[38] *
              (-6.31199276e+00 + 4.75548971e-02 * tc[1] -
               3.18784034e-05 * tc[2] + 1.24445052e-08 * tc[3] -
               2.04647434e-12 * tc[4] + 4.57330975e+04 * invT) *
              0.0096951834328706;
    // species 39: A1CH2
    result += y[39] *
              (-6.07053038e+00 + 4.17600754e-02 * tc[1] -
               2.47233361e-05 * tc[2] + 7.82884618e-09 * tc[3] -
               8.47341736e-13 * tc[4] + 2.35894712e+04 * invT) *
              0.0109729735661067;
    // species 40: A1CHO
    result += y[40] *
              (-3.47171048e+00 + 3.46445945e-02 * tc[1] -
               1.44201170e-05 * tc[2] + 8.59677740e-10 * tc[3] +
               9.62020522e-13 * tc[4] - 6.14558774e+03 * invT) *
              0.0094229392031963;
    // species 41: A1CH3
    result += y[41] *
              (-4.54072038e+00 + 3.42713573e-02 * tc[1] -
               1.19037675e-05 * tc[2] - 1.04849410e-09 * tc[3] +
               1.48355959e-12 * tc[4] + 4.64121087e+03 * invT) *
              0.0108529319195581;
    // species 42: C7H15
    result += y[42] *
              (-3.79155767e-02 + 3.78363285e-02 * tc[1] -
               1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
               9.84721490e-14 * tc[4] - 2.35605303e+03 * invT) *
              0.0100809500287307;
    // species 43: N-C7H16
    result += y[43] *
              (-1.26836187e+00 + 4.27177910e-02 * tc[1] -
               1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
               4.04789850e-13 * tc[4] - 2.56586565e+04 * invT) *
              0.0099795419390250;
    // species 44: A1C2H*
    result += y[44] *
              (-4.42757639e+00 + 4.18334322e-02 * tc[1] -
               2.90035454e-05 * tc[2] + 1.17571415e-08 * tc[3] -
               2.03633970e-12 * tc[4] + 6.73302359e+04 * invT) *
              0.0098884581915988;
    // species 45: A2-
    result += y[45] *
              (-8.02718034e+00 + 5.14622590e-02 * tc[1] -
               2.78090670e-05 * tc[2] + 6.80338458e-09 * tc[3] -
               1.44911911e-13 * tc[4] + 5.01363344e+04 * invT) *
              0.0078637371624491;
    // species 46: A1C2H
    result += y[46] *
              (-5.21036925e+00 + 4.32775972e-02 * tc[1] -
               2.81669161e-05 * tc[2] + 1.05480176e-08 * tc[3] -
               1.63353233e-12 * tc[4] + 3.52488620e+04 * invT) *
              0.0097908670791885;
  } else {
    // species 0: N2
    result += y[0] *
              (+2.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
    // species 1: S-CH2
    result += y[1] *
              (+2.29203842e+00 + 2.32794318e-03 * tc[1] -
               6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
               6.79432730e-15 * tc[4] + 5.09259997e+04 * invT) *
              0.0712910814857061;
    // species 2: T-CH2
    result += y[2] *
              (+2.87410113e+00 + 1.82819646e-03 * tc[1] -
               4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
               3.75455134e-15 * tc[4] + 4.62636040e+04 * invT) *
              0.0712910814857061;
    // species 3: O
    result += y[3] *
              (+2.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+3.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 5: H
    result += y[5] *
              (+2.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 6: OH
    result += y[6] *
              (+2.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 7: H2O
    result += y[7] *
              (+3.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 8: O2
    result += y[8] *
              (+3.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 9: HO2
    result += y[9] *
              (+4.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 10: CH
    result += y[10] *
              (+2.87846473e+00 + 4.85456840e-04 * tc[1] +
               4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
               3.52158766e-15 * tc[4] + 7.10124364e+04 * invT) *
              0.0768108149627468;
    // species 11: CO
    result += y[11] *
              (+2.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 12: HCO
    result += y[12] *
              (+2.77217438e+00 + 2.47847763e-03 * tc[1] -
               8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
               1.06701742e-14 * tc[4] + 4.01191815e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+1.76069008e+00 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3
    result += y[14] *
              (+2.97812060e+00 + 2.89892600e-03 * tc[1] -
               6.58526667e-07 * tc[2] + 7.68244750e-11 * tc[3] -
               3.58348320e-15 * tc[4] + 1.65095130e+04 * invT) *
              0.0665114732291320;
    // species 15: CO2
    result += y[15] *
              (+3.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 16: CH4
    result += y[16] *
              (+1.65326226e+00 + 5.01315495e-03 * tc[1] -
               1.10553746e-06 * tc[2] + 1.34120785e-10 * tc[3] -
               6.29393516e-15 * tc[4] - 1.00095936e+04 * invT) *
              0.0623324814560868;
    // species 17: C2H3
    result += y[17] *
              (+3.01672400e+00 + 5.16511460e-03 * tc[1] -
               1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
               1.72521408e-14 * tc[4] + 3.46128739e+04 * invT) *
              0.0369740442209569;
    // species 18: C2H4
    result += y[18] *
              (+2.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 19: C2H5
    result += y[19] *
              (+1.95465642e+00 + 8.69863610e-03 * tc[1] -
               2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
               2.99283152e-14 * tc[4] + 1.28575200e+04 * invT) *
              0.0344091941366733;
    // species 20: C2H
    result += y[20] *
              (+3.16780652e+00 + 2.37610951e-03 * tc[1] -
               6.12623590e-07 * tc[2] + 7.60475630e-11 * tc[3] -
               3.54465540e-15 * tc[4] + 6.71210650e+04 * invT) *
              0.0399520575309628;
    // species 21: HCCO
    result += y[21] *
              (+5.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 22: C2H2
    result += y[22] *
              (+4.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 23: C3H3
    result += y[23] *
              (+6.14915291e+00 + 4.67031583e-03 * tc[1] -
               1.25018451e-06 * tc[2] + 1.72539079e-10 * tc[3] -
               9.21649988e-15 * tc[4] + 3.83854848e+04 * invT) *
              0.0256036049875823;
    // species 24: A-C3H5
    result += y[24] *
              (+2.28794927e+00 + 1.18200788e-02 * tc[1] -
               4.26304833e-06 * tc[2] + 8.42096350e-10 * tc[3] -
               6.94898898e-14 * tc[4] + 1.83033514e+04 * invT) *
              0.0243468945535997;
    // species 25: N-C3H7
    result += y[25] *
              (+7.70404050e+00 + 8.02077000e-03 * tc[1] -
               1.76053223e-06 * tc[2] + 1.90636007e-10 * tc[3] -
               7.87069240e-15 * tc[4] + 8.29795310e+03 * invT) *
              0.0232077792476038;
    // species 26: C2H6
    result += y[26] *
              (+1.07188150e+00 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 27: P-C3H4
    result += y[27] *
              (+2.81460543e+00 + 9.27622480e-03 * tc[1] -
               3.18342256e-06 * tc[2] + 5.99878425e-10 * tc[3] -
               4.74970514e-14 * tc[4] + 2.07010771e+04 * invT) *
              0.0249594409085237;
    // species 28: A-C3H4
    result += y[28] *
              (+2.56128757e+00 + 9.75400640e-03 * tc[1] -
               3.46871220e-06 * tc[2] + 6.75412933e-10 * tc[3] -
               5.50148658e-14 * tc[4] + 2.13894289e+04 * invT) *
              0.0249594409085237;
    // species 29: A1
    result += y[29] *
              (-2.06240612e-01 + 2.32061220e-02 * tc[1] -
               9.25511787e-06 * tc[2] + 1.97227634e-09 * tc[3] -
               1.72073052e-13 * tc[4] + 8.09883905e+03 * invT) *
              0.0128018024937911;
    // species 30: A1-
    result += y[30] *
              (+1.38016336e+00 + 2.02016004e-02 * tc[1] -
               8.07502950e-06 * tc[2] + 1.72180830e-09 * tc[3] -
               1.50192160e-13 * tc[4] + 3.86973520e+04 * invT) *
              0.0129691593390916;
    // species 31: C5H5
    result += y[31] *
              (+4.21464919e+00 + 1.35917364e-02 * tc[1] -
               4.43910697e-06 * tc[2] + 7.72450297e-10 * tc[3] -
               5.55759746e-14 * tc[4] + 2.88952416e+04 * invT) *
              0.0153621629925494;
    // species 32: C3H6
    result += y[32] *
              (+4.71697982e-01 + 1.44756535e-02 * tc[1] -
               5.22006063e-06 * tc[2] + 1.02860800e-09 * tc[3] -
               8.46150282e-14 * tc[4] + 1.12603387e+03 * invT) *
              0.0237636938285687;
    // species 33: C4H8
    result += y[33] *
              (+3.04470367e+00 + 1.63725883e-02 * tc[1] -
               4.84544123e-06 * tc[2] + 5.99360043e-10 * tc[3] +
               0.00000000e+00 * tc[4] - 2.52177534e+03 * invT) *
              0.0178227703714265;
    // species 34: C5H6
    result += y[34] *
              (+2.30537462e-01 + 2.04785913e-02 * tc[1] -
               8.05296527e-06 * tc[2] + 1.69940870e-09 * tc[3] -
               1.47274884e-13 * tc[4] + 1.43779465e+04 * invT) *
              0.0151279064490265;
    // species 35: A2
    result += y[35] *
              (+1.76826275e+00 + 3.44571753e-02 * tc[1] -
               1.38107392e-05 * tc[2] + 2.94785772e-09 * tc[3] -
               2.57194122e-13 * tc[4] + 1.26883657e+04 * invT) *
              0.0078018942999360;
    // species 36: C5H10
    result += y[36] *
              (+3.98580522e+00 + 2.06214993e-02 * tc[1] -
               6.14634990e-06 * tc[2] + 7.65388102e-10 * tc[3] +
               0.00000000e+00 * tc[4] - 5.70112071e+03 * invT) *
              0.0142582162971412;
    // species 37: C5H11
    result += y[37] *
              (+4.88920629e+00 + 2.11417269e-02 * tc[1] -
               6.19477000e-06 * tc[2] + 7.60311908e-10 * tc[3] +
               0.00000000e+00 * tc[4] + 3.43475468e+03 * invT) *
              0.0140561966743039;
    // species 38: A1C2H2
    result += y[38] *
              (+5.85935080e+00 + 2.36285729e-02 * tc[1] -
               8.99549110e-06 * tc[2] + 1.83827944e-09 * tc[3] -
               1.54980166e-13 * tc[4] + 4.33198974e+04 * invT) *
              0.0096951834328706;
    // species 39: A1CH2
    result += y[39] *
              (+3.30049696e+00 + 2.40027670e-02 * tc[1] -
               9.28143407e-06 * tc[2] + 1.93092839e-09 * tc[3] -
               1.65430827e-13 * tc[4] + 2.17498572e+04 * invT) *
              0.0109729735661067;
    // species 40: A1CHO
    result += y[40] *
              (+1.87355756e+00 + 2.63115775e-02 * tc[1] -
               1.05881654e-05 * tc[2] + 2.26600767e-09 * tc[3] -
               1.98061225e-13 * tc[4] - 7.23603865e+03 * invT) *
              0.0094229392031963;
    // species 41: A1CH3
    result += y[41] *
              (-1.01117220e+00 + 2.92650956e-02 * tc[1] -
               1.15865023e-05 * tc[2] + 2.45545248e-09 * tc[3] -
               2.13361740e-13 * tc[4] + 3.99363395e+03 * invT) *
              0.0108529319195581;
    // species 42: C7H15
    result += y[42] *
              (+3.74721159e+00 + 3.24672581e-02 * tc[1] -
               1.00447008e-05 * tc[2] + 1.29354536e-09 * tc[3] +
               0.00000000e+00 * tc[4] - 3.37018357e+03 * invT) *
              0.0100809500287307;
    // species 43: N-C7H16
    result += y[43] *
              (+5.14079241e+00 + 3.26539335e-02 * tc[1] -
               9.82758747e-06 * tc[2] + 1.23431681e-09 * tc[3] +
               0.00000000e+00 * tc[4] - 2.72533890e+04 * invT) *
              0.0099795419390250;
    // species 44: A1C2H*
    result += y[44] *
              (+7.23812069e+00 + 1.91906054e-02 * tc[1] -
               7.29502437e-06 * tc[2] + 1.49290312e-09 * tc[3] -
               1.26070293e-13 * tc[4] + 6.49528135e+04 * invT) *
              0.0098884581915988;
    // species 45: A2-
    result += y[45] *
              (+3.22892303e+00 + 3.15632243e-02 * tc[1] -
               1.26860794e-05 * tc[2] + 2.71135172e-09 * tc[3] -
               2.36685024e-13 * tc[4] + 4.78400840e+04 * invT) *
              0.0078637371624491;
    // species 46: A1C2H
    result += y[46] *
              (+5.81520488e+00 + 2.20436466e-02 * tc[1] -
               8.40179527e-06 * tc[2] + 1.72568807e-09 * tc[3] -
               1.46275782e-13 * tc[4] + 3.30271906e+04 * invT) *
              0.0097908670791885;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  hbms = result * RT;
}

// get mean internal energy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBML(const amrex::Real T, const amrex::Real x[], amrex::Real& ubml)
{
  amrex::Real result = 0;
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real uml[47];                                //  temporary energy array
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // perform dot product
  for (int id = 0; id < 47; ++id) {
    result += x[id] * uml[id];
  }

  ubml = result * RT;
}

// get mean internal energy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUBMS(const amrex::Real T, const amrex::Real y[], amrex::Real& ubms)
{
  amrex::Real result = 0.0;
  const amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  const amrex::Real invT = 1.0 / T;

  // species with midpoint at T=1000 kelvin
  if (tT < 1000) {
    // species 0: N2
    result += y[0] *
              (+2.29867700e+00 + 7.04120200e-04 * tc[1] -
               1.32107400e-06 * tc[2] + 1.41037875e-09 * tc[3] -
               4.88970800e-13 * tc[4] - 1.02089990e+03 * invT) *
              0.0356964374955379;
    // species 1: S-CH2
    result += y[1] *
              (+3.19860411e+00 - 1.18330710e-03 * tc[1] +
               2.74432073e-06 * tc[2] - 1.67203995e-09 * tc[3] +
               3.88629474e-13 * tc[4] + 5.04968163e+04 * invT) *
              0.0712910814857061;
    // species 2: T-CH2
    result += y[2] *
              (+2.76267867e+00 + 4.84436072e-04 * tc[1] +
               9.31632803e-07 * tc[2] - 9.62727883e-10 * tc[3] +
               3.37483438e-13 * tc[4] + 4.60040401e+04 * invT) *
              0.0712910814857061;
    // species 3: O
    result += y[3] *
              (+2.16826710e+00 - 1.63965942e-03 * tc[1] +
               2.21435465e-06 * tc[2] - 1.53201656e-09 * tc[3] +
               4.22531942e-13 * tc[4] + 2.91222592e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+1.34433112e+00 + 3.99026037e-03 * tc[1] -
               6.49271700e-06 * tc[2] + 5.03930235e-09 * tc[3] -
               1.47522352e-12 * tc[4] - 9.17935173e+02 * invT) *
              0.4960317460317460;
    // species 5: H
    result += y[5] *
              (+1.50000000e+00 + 3.52666409e-13 * tc[1] -
               6.65306547e-16 * tc[2] + 5.75204080e-19 * tc[3] -
               1.85546466e-22 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 6: OH
    result += y[6] *
              (+3.12530561e+00 - 1.61272470e-03 * tc[1] +
               2.17588230e-06 * tc[2] - 1.44963411e-09 * tc[3] +
               4.12474758e-13 * tc[4] + 3.38153812e+03 * invT) *
              0.0587993179279120;
    // species 7: H2O
    result += y[7] *
              (+3.19864056e+00 - 1.01821705e-03 * tc[1] +
               2.17346737e-06 * tc[2] - 1.37199266e-09 * tc[3] +
               3.54395634e-13 * tc[4] - 3.02937267e+04 * invT) *
              0.0555092978073827;
    // species 8: O2
    result += y[8] *
              (+2.78245636e+00 - 1.49836708e-03 * tc[1] +
               3.28243400e-06 * tc[2] - 2.42032377e-09 * tc[3] +
               6.48745674e-13 * tc[4] - 1.06394356e+03 * invT) *
              0.0312519532470779;
    // species 9: HO2
    result += y[9] *
              (+3.30179801e+00 - 2.37456025e-03 * tc[1] +
               7.05276303e-06 * tc[2] - 6.06909735e-09 * tc[3] +
               1.85845025e-12 * tc[4] + 2.94808040e+02 * invT) *
              0.0302975216627280;
    // species 10: CH
    result += y[10] *
              (+2.48981665e+00 + 1.61917771e-04 * tc[1] -
               5.62996883e-07 * tc[2] + 7.90543317e-10 * tc[3] -
               2.81218134e-13 * tc[4] + 7.07972934e+04 * invT) *
              0.0768108149627468;
    // species 11: CO
    result += y[11] *
              (+2.57953347e+00 - 3.05176840e-04 * tc[1] +
               3.38938110e-07 * tc[2] + 2.26751471e-10 * tc[3] -
               1.80884900e-13 * tc[4] - 1.43440860e+04 * invT) *
              0.0357015351660121;
    // species 12: HCO
    result += y[12] *
              (+3.22118584e+00 - 1.62196266e-03 * tc[1] +
               4.59331487e-06 * tc[2] - 3.32860233e-09 * tc[3] +
               8.67537730e-13 * tc[4] + 3.83956496e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+3.79372315e+00 - 4.95416684e-03 * tc[1] +
               1.24406669e-05 * tc[2] - 9.48213152e-09 * tc[3] +
               2.63545304e-12 * tc[4] - 1.43089567e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3
    result += y[14] *
              (+2.65717970e+00 + 1.06329895e-03 * tc[1] +
               1.81946277e-06 * tc[2] - 1.65452507e-09 * tc[3] +
               4.93141480e-13 * tc[4] + 1.64227160e+04 * invT) *
              0.0665114732291320;
    // species 15: CO2
    result += y[15] *
              (+1.35677352e+00 + 4.49229839e-03 * tc[1] -
               2.37452090e-06 * tc[2] + 6.14797555e-10 * tc[3] -
               2.87399096e-14 * tc[4] - 4.83719697e+04 * invT) *
              0.0227226249176305;
    // species 16: CH4
    result += y[16] *
              (+4.14911468e+00 - 6.83110045e-03 * tc[1] +
               1.63817974e-05 * tc[2] - 1.21061692e-08 * tc[3] +
               3.33206882e-12 * tc[4] - 1.02465983e+04 * invT) *
              0.0623324814560868;
    // species 17: C2H3
    result += y[17] *
              (+2.21246645e+00 + 7.57395810e-04 * tc[1] +
               8.64031373e-06 * tc[2] - 8.94144617e-09 * tc[3] +
               2.94301746e-12 * tc[4] + 3.48598468e+04 * invT) *
              0.0369740442209569;
    // species 18: C2H4
    result += y[18] *
              (+2.95920148e+00 - 3.78526124e-03 * tc[1] +
               1.90330097e-05 * tc[2] - 1.72897188e-08 * tc[3] +
               5.39768746e-12 * tc[4] + 5.08977593e+03 * invT) *
              0.0356455407428531;
    // species 19: C2H5
    result += y[19] *
              (+3.30646568e+00 - 2.09329446e-03 * tc[1] +
               1.65714269e-05 * tc[2] - 1.49781651e-08 * tc[3] +
               4.61018008e-12 * tc[4] + 1.28416265e+04 * invT) *
              0.0344091941366733;
    // species 20: C2H
    result += y[20] *
              (+1.88965733e+00 + 6.70498055e-03 * tc[1] -
               9.49231670e-06 * tc[2] + 7.36977613e-09 * tc[3] -
               2.18663022e-12 * tc[4] + 6.68393932e+04 * invT) *
              0.0399520575309628;
    // species 21: HCCO
    result += y[21] *
              (+1.25172140e+00 + 8.82751050e-03 * tc[1] -
               7.90970033e-06 * tc[2] + 4.31893975e-09 * tc[3] -
               1.01329622e-12 * tc[4] + 2.00594490e+04 * invT) *
              0.0243730044602598;
    // species 22: C2H2
    result += y[22] *
              (-1.91318906e-01 + 1.16807815e-02 * tc[1] -
               1.18390605e-05 * tc[2] + 7.00381092e-09 * tc[3] -
               1.70014595e-12 * tc[4] + 2.64289807e+04 * invT) *
              0.0384054074813734;
    // species 23: C3H3
    result += y[23] *
              (+4.02992380e-01 + 1.50886664e-02 * tc[1] -
               1.32816458e-05 * tc[2] + 7.33836572e-09 * tc[3] -
               1.74110916e-12 * tc[4] + 3.93108220e+04 * invT) *
              0.0256036049875823;
    // species 24: A-C3H5
    result += y[24] *
              (-2.03516444e+00 + 1.87521683e-02 * tc[1] -
               1.08793747e-05 * tc[2] + 3.69156533e-09 * tc[3] -
               4.87482308e-13 * tc[4] + 1.88792254e+04 * invT) *
              0.0243468945535997;
    // species 25: N-C3H7
    result += y[25] *
              (+4.75473000e-02 + 1.30038970e-02 * tc[1] +
               7.85408400e-07 * tc[2] - 4.89807925e-09 * tc[3] +
               1.87360232e-12 * tc[4] + 1.06326370e+04 * invT) *
              0.0232077792476038;
    // species 26: C2H6
    result += y[26] *
              (+3.29142492e+00 - 2.75077135e-03 * tc[1] +
               1.99812763e-05 * tc[2] - 1.77116571e-08 * tc[3] +
               5.37371542e-12 * tc[4] - 1.15222055e+04 * invT) *
              0.0332557366145660;
    // species 27: P-C3H4
    result += y[27] *
              (+4.61753230e-01 + 1.23013301e-02 * tc[1] -
               6.34064650e-06 * tc[2] + 2.15090855e-09 * tc[3] -
               3.33458480e-13 * tc[4] + 2.09209793e+04 * invT) *
              0.0249594409085237;
    // species 28: A-C3H4
    result += y[28] *
              (-6.31071735e-01 + 1.44675699e-02 * tc[1] -
               8.14621360e-06 * tc[2] + 2.81367915e-09 * tc[3] -
               4.06080524e-13 * tc[4] + 2.17585256e+04 * invT) *
              0.0249594409085237;
    // species 29: A1
    result += y[29] *
              (-6.51558393e+00 + 3.22726613e-02 * tc[1] -
               1.47134309e-05 * tc[2] + 1.86928040e-09 * tc[3] +
               6.20564508e-13 * tc[4] + 9.11031457e+03 * invT) *
              0.0128018024937911;
    // species 30: A1-
    result += y[30] *
              (-5.87654845e+00 + 3.13402891e-02 * tc[1] -
               1.62467429e-05 * tc[2] + 3.52805717e-09 * tc[3] +
               1.03703662e-13 * tc[4] + 3.99269438e+04 * invT) *
              0.0129691593390916;
    // species 31: C5H5
    result += y[31] *
              (-8.37844042e+00 + 4.86195909e-02 * tc[1] -
               5.65263793e-05 * tc[2] + 3.79546668e-08 * tc[3] -
               1.02415096e-11 * tc[4] + 3.05514662e+04 * invT) *
              0.0153621629925494;
    // species 32: C3H6
    result += y[32] *
              (-1.00229262e+00 + 1.55130533e-02 * tc[1] -
               5.57171827e-06 * tc[2] + 4.73985425e-10 * tc[3] +
               2.49915830e-13 * tc[4] + 1.13437406e+03 * invT) *
              0.0237636938285687;
    // species 33: C4H8
    result += y[33] *
              (-1.83137209e+00 + 2.26290489e-02 * tc[1] -
               9.78861863e-06 * tc[2] + 2.50551090e-09 * tc[3] -
               2.86383360e-13 * tc[4] - 1.57875035e+03 * invT) *
              0.0178227703714265;
    // species 34: C5H6
    result += y[34] *
              (-6.13691194e+00 + 3.03476727e-02 * tc[1] -
               1.53517612e-05 * tc[2] + 3.21143002e-09 * tc[3] +
               1.48242970e-13 * tc[4] + 1.53675713e+04 * invT) *
              0.0151279064490265;
    // species 35: A2
    result += y[35] *
              (-9.72434585e+00 + 5.26880040e-02 * tc[1] -
               2.67236897e-05 * tc[2] + 5.46364935e-09 * tc[3] +
               2.84133212e-13 * tc[4] + 1.48059774e+04 * invT) *
              0.0078018942999360;
    // species 36: C5H10
    result += y[36] *
              (-2.06223481e+00 + 2.87109147e-02 * tc[1] -
               1.24828963e-05 * tc[2] + 3.18412472e-09 * tc[3] -
               3.59219578e-13 * tc[4] - 4.46546666e+03 * invT) *
              0.0142582162971412;
    // species 37: C5H11
    result += y[37] *
              (-1.90525591e+00 + 3.05316426e-02 * tc[1] -
               1.36497275e-05 * tc[2] + 3.65233675e-09 * tc[3] -
               4.37719230e-13 * tc[4] + 4.83995303e+03 * invT) *
              0.0140561966743039;
    // species 38: A1C2H2
    result += y[38] *
              (-7.31199276e+00 + 4.75548971e-02 * tc[1] -
               3.18784034e-05 * tc[2] + 1.24445052e-08 * tc[3] -
               2.04647434e-12 * tc[4] + 4.57330975e+04 * invT) *
              0.0096951834328706;
    // species 39: A1CH2
    result += y[39] *
              (-7.07053038e+00 + 4.17600754e-02 * tc[1] -
               2.47233361e-05 * tc[2] + 7.82884618e-09 * tc[3] -
               8.47341736e-13 * tc[4] + 2.35894712e+04 * invT) *
              0.0109729735661067;
    // species 40: A1CHO
    result += y[40] *
              (-4.47171048e+00 + 3.46445945e-02 * tc[1] -
               1.44201170e-05 * tc[2] + 8.59677740e-10 * tc[3] +
               9.62020522e-13 * tc[4] - 6.14558774e+03 * invT) *
              0.0094229392031963;
    // species 41: A1CH3
    result += y[41] *
              (-5.54072038e+00 + 3.42713573e-02 * tc[1] -
               1.19037675e-05 * tc[2] - 1.04849410e-09 * tc[3] +
               1.48355959e-12 * tc[4] + 4.64121087e+03 * invT) *
              0.0108529319195581;
    // species 42: C7H15
    result += y[42] *
              (-1.03791558e+00 + 3.78363285e-02 * tc[1] -
               1.35824545e-05 * tc[2] + 2.33169736e-09 * tc[3] -
               9.84721490e-14 * tc[4] - 2.35605303e+03 * invT) *
              0.0100809500287307;
    // species 43: N-C7H16
    result += y[43] *
              (-2.26836187e+00 + 4.27177910e-02 * tc[1] -
               1.75115595e-05 * tc[2] + 4.07364302e-09 * tc[3] -
               4.04789850e-13 * tc[4] - 2.56586565e+04 * invT) *
              0.0099795419390250;
    // species 44: A1C2H*
    result += y[44] *
              (-5.42757639e+00 + 4.18334322e-02 * tc[1] -
               2.90035454e-05 * tc[2] + 1.17571415e-08 * tc[3] -
               2.03633970e-12 * tc[4] + 6.73302359e+04 * invT) *
              0.0098884581915988;
    // species 45: A2-
    result += y[45] *
              (-9.02718034e+00 + 5.14622590e-02 * tc[1] -
               2.78090670e-05 * tc[2] + 6.80338458e-09 * tc[3] -
               1.44911911e-13 * tc[4] + 5.01363344e+04 * invT) *
              0.0078637371624491;
    // species 46: A1C2H
    result += y[46] *
              (-6.21036925e+00 + 4.32775972e-02 * tc[1] -
               2.81669161e-05 * tc[2] + 1.05480176e-08 * tc[3] -
               1.63353233e-12 * tc[4] + 3.52488620e+04 * invT) *
              0.0097908670791885;
  } else {
    // species 0: N2
    result += y[0] *
              (+1.92664000e+00 + 7.43988400e-04 * tc[1] -
               1.89492000e-07 * tc[2] + 2.52425950e-11 * tc[3] -
               1.35067020e-15 * tc[4] - 9.22797700e+02 * invT) *
              0.0356964374955379;
    // species 1: S-CH2
    result += y[1] *
              (+1.29203842e+00 + 2.32794318e-03 * tc[1] -
               6.70639823e-07 * tc[2] + 1.04476500e-10 * tc[3] -
               6.79432730e-15 * tc[4] + 5.09259997e+04 * invT) *
              0.0712910814857061;
    // species 2: T-CH2
    result += y[2] *
              (+1.87410113e+00 + 1.82819646e-03 * tc[1] -
               4.69648657e-07 * tc[2] + 6.50448872e-11 * tc[3] -
               3.75455134e-15 * tc[4] + 4.62636040e+04 * invT) *
              0.0712910814857061;
    // species 3: O
    result += y[3] *
              (+1.56942078e+00 - 4.29870569e-05 * tc[1] +
               1.39828196e-08 * tc[2] - 2.50444497e-12 * tc[3] +
               2.45667382e-16 * tc[4] + 2.92175791e+04 * invT) *
              0.0625039064941559;
    // species 4: H2
    result += y[4] *
              (+2.33727920e+00 - 2.47012365e-05 * tc[1] +
               1.66485593e-07 * tc[2] - 4.48915985e-11 * tc[3] +
               4.00510752e-15 * tc[4] - 9.50158922e+02 * invT) *
              0.4960317460317460;
    // species 5: H
    result += y[5] *
              (+1.50000001e+00 - 1.15421486e-11 * tc[1] +
               5.38539827e-15 * tc[2] - 1.18378809e-18 * tc[3] +
               9.96394714e-23 * tc[4] + 2.54736599e+04 * invT) *
              0.9920634920634921;
    // species 6: OH
    result += y[6] *
              (+1.86472886e+00 + 5.28252240e-04 * tc[1] -
               8.63609193e-08 * tc[2] + 7.63046685e-12 * tc[3] -
               2.66391752e-16 * tc[4] + 3.71885774e+03 * invT) *
              0.0587993179279120;
    // species 7: H2O
    result += y[7] *
              (+2.03399249e+00 + 1.08845902e-03 * tc[1] -
               5.46908393e-08 * tc[2] - 2.42604967e-11 * tc[3] +
               3.36401984e-15 * tc[4] - 3.00042971e+04 * invT) *
              0.0555092978073827;
    // species 8: O2
    result += y[8] *
              (+2.28253784e+00 + 7.41543770e-04 * tc[1] -
               2.52655556e-07 * tc[2] + 5.23676387e-11 * tc[3] -
               4.33435588e-15 * tc[4] - 1.08845772e+03 * invT) *
              0.0312519532470779;
    // species 9: HO2
    result += y[9] *
              (+3.01721090e+00 + 1.11991006e-03 * tc[1] -
               2.11219383e-07 * tc[2] + 2.85615925e-11 * tc[3] -
               2.15817070e-15 * tc[4] + 1.11856713e+02 * invT) *
              0.0302975216627280;
    // species 10: CH
    result += y[10] *
              (+1.87846473e+00 + 4.85456840e-04 * tc[1] +
               4.81485517e-08 * tc[2] - 3.26719623e-11 * tc[3] +
               3.52158766e-15 * tc[4] + 7.10124364e+04 * invT) *
              0.0768108149627468;
    // species 11: CO
    result += y[11] *
              (+1.71518561e+00 + 1.03126372e-03 * tc[1] -
               3.32941924e-07 * tc[2] + 5.75132520e-11 * tc[3] -
               4.07295432e-15 * tc[4] - 1.41518724e+04 * invT) *
              0.0357015351660121;
    // species 12: HCO
    result += y[12] *
              (+1.77217438e+00 + 2.47847763e-03 * tc[1] -
               8.28152043e-07 * tc[2] + 1.47290445e-10 * tc[3] -
               1.06701742e-14 * tc[4] + 4.01191815e+03 * invT) *
              0.0344613688055690;
    // species 13: CH2O
    result += y[13] *
              (+7.60690080e-01 + 4.60000041e-03 * tc[1] -
               1.47419604e-06 * tc[2] + 2.51603030e-10 * tc[3] -
               1.76771128e-14 * tc[4] - 1.39958323e+04 * invT) *
              0.0333044694598015;
    // species 14: CH3
    result += y[14] *
              (+1.97812060e+00 + 2.89892600e-03 * tc[1] -
               6.58526667e-07 * tc[2] + 7.68244750e-11 * tc[3] -
               3.58348320e-15 * tc[4] + 1.65095130e+04 * invT) *
              0.0665114732291320;
    // species 15: CO2
    result += y[15] *
              (+2.85746029e+00 + 2.20718513e-03 * tc[1] -
               7.38271347e-07 * tc[2] + 1.30872547e-10 * tc[3] -
               9.44168328e-15 * tc[4] - 4.87591660e+04 * invT) *
              0.0227226249176305;
    // species 16: CH4
    result += y[16] *
              (+6.53262260e-01 + 5.01315495e-03 * tc[1] -
               1.10553746e-06 * tc[2] + 1.34120785e-10 * tc[3] -
               6.29393516e-15 * tc[4] - 1.00095936e+04 * invT) *
              0.0623324814560868;
    // species 17: C2H3
    result += y[17] *
              (+2.01672400e+00 + 5.16511460e-03 * tc[1] -
               1.56027450e-06 * tc[2] + 2.54408220e-10 * tc[3] -
               1.72521408e-14 * tc[4] + 3.46128739e+04 * invT) *
              0.0369740442209569;
    // species 18: C2H4
    result += y[18] *
              (+1.03611116e+00 + 7.32270755e-03 * tc[1] -
               2.23692638e-06 * tc[2] + 3.68057308e-10 * tc[3] -
               2.51412122e-14 * tc[4] + 4.93988614e+03 * invT) *
              0.0356455407428531;
    // species 19: C2H5
    result += y[19] *
              (+9.54656420e-01 + 8.69863610e-03 * tc[1] -
               2.66068889e-06 * tc[2] + 4.38044223e-10 * tc[3] -
               2.99283152e-14 * tc[4] + 1.28575200e+04 * invT) *
              0.0344091941366733;
    // species 20: C2H
    result += y[20] *
              (+2.16780652e+00 + 2.37610951e-03 * tc[1] -
               6.12623590e-07 * tc[2] + 7.60475630e-11 * tc[3] -
               3.54465540e-15 * tc[4] + 6.71210650e+04 * invT) *
              0.0399520575309628;
    // species 21: HCCO
    result += y[21] *
              (+4.62820580e+00 + 2.04267005e-03 * tc[1] -
               5.31151567e-07 * tc[2] + 7.15651300e-11 * tc[3] -
               3.88156640e-15 * tc[4] + 1.93272150e+04 * invT) *
              0.0243730044602598;
    // species 22: C2H2
    result += y[22] *
              (+3.14756964e+00 + 2.98083332e-03 * tc[1] -
               7.90982840e-07 * tc[2] + 1.16853043e-10 * tc[3] -
               7.22470426e-15 * tc[4] + 2.59359992e+04 * invT) *
              0.0384054074813734;
    // species 23: C3H3
    result += y[23] *
              (+5.14915291e+00 + 4.67031583e-03 * tc[1] -
               1.25018451e-06 * tc[2] + 1.72539079e-10 * tc[3] -
               9.21649988e-15 * tc[4] + 3.83854848e+04 * invT) *
              0.0256036049875823;
    // species 24: A-C3H5
    result += y[24] *
              (+1.28794927e+00 + 1.18200788e-02 * tc[1] -
               4.26304833e-06 * tc[2] + 8.42096350e-10 * tc[3] -
               6.94898898e-14 * tc[4] + 1.83033514e+04 * invT) *
              0.0243468945535997;
    // species 25: N-C3H7
    result += y[25] *
              (+6.70404050e+00 + 8.02077000e-03 * tc[1] -
               1.76053223e-06 * tc[2] + 1.90636007e-10 * tc[3] -
               7.87069240e-15 * tc[4] + 8.29795310e+03 * invT) *
              0.0232077792476038;
    // species 26: C2H6
    result += y[26] *
              (+7.18815000e-02 + 1.08426339e-02 * tc[1] -
               3.34186890e-06 * tc[2] + 5.53530003e-10 * tc[3] -
               3.80005780e-14 * tc[4] - 1.14263932e+04 * invT) *
              0.0332557366145660;
    // species 27: P-C3H4
    result += y[27] *
              (+1.81460543e+00 + 9.27622480e-03 * tc[1] -
               3.18342256e-06 * tc[2] + 5.99878425e-10 * tc[3] -
               4.74970514e-14 * tc[4] + 2.07010771e+04 * invT) *
              0.0249594409085237;
    // species 28: A-C3H4
    result += y[28] *
              (+1.56128757e+00 + 9.75400640e-03 * tc[1] -
               3.46871220e-06 * tc[2] + 6.75412933e-10 * tc[3] -
               5.50148658e-14 * tc[4] + 2.13894289e+04 * invT) *
              0.0249594409085237;
    // species 29: A1
    result += y[29] *
              (-1.20624061e+00 + 2.32061220e-02 * tc[1] -
               9.25511787e-06 * tc[2] + 1.97227634e-09 * tc[3] -
               1.72073052e-13 * tc[4] + 8.09883905e+03 * invT) *
              0.0128018024937911;
    // species 30: A1-
    result += y[30] *
              (+3.80163360e-01 + 2.02016004e-02 * tc[1] -
               8.07502950e-06 * tc[2] + 1.72180830e-09 * tc[3] -
               1.50192160e-13 * tc[4] + 3.86973520e+04 * invT) *
              0.0129691593390916;
    // species 31: C5H5
    result += y[31] *
              (+3.21464919e+00 + 1.35917364e-02 * tc[1] -
               4.43910697e-06 * tc[2] + 7.72450297e-10 * tc[3] -
               5.55759746e-14 * tc[4] + 2.88952416e+04 * invT) *
              0.0153621629925494;
    // species 32: C3H6
    result += y[32] *
              (-5.28302018e-01 + 1.44756535e-02 * tc[1] -
               5.22006063e-06 * tc[2] + 1.02860800e-09 * tc[3] -
               8.46150282e-14 * tc[4] + 1.12603387e+03 * invT) *
              0.0237636938285687;
    // species 33: C4H8
    result += y[33] *
              (+2.04470367e+00 + 1.63725883e-02 * tc[1] -
               4.84544123e-06 * tc[2] + 5.99360043e-10 * tc[3] +
               0.00000000e+00 * tc[4] - 2.52177534e+03 * invT) *
              0.0178227703714265;
    // species 34: C5H6
    result += y[34] *
              (-7.69462538e-01 + 2.04785913e-02 * tc[1] -
               8.05296527e-06 * tc[2] + 1.69940870e-09 * tc[3] -
               1.47274884e-13 * tc[4] + 1.43779465e+04 * invT) *
              0.0151279064490265;
    // species 35: A2
    result += y[35] *
              (+7.68262750e-01 + 3.44571753e-02 * tc[1] -
               1.38107392e-05 * tc[2] + 2.94785772e-09 * tc[3] -
               2.57194122e-13 * tc[4] + 1.26883657e+04 * invT) *
              0.0078018942999360;
    // species 36: C5H10
    result += y[36] *
              (+2.98580522e+00 + 2.06214993e-02 * tc[1] -
               6.14634990e-06 * tc[2] + 7.65388102e-10 * tc[3] +
               0.00000000e+00 * tc[4] - 5.70112071e+03 * invT) *
              0.0142582162971412;
    // species 37: C5H11
    result += y[37] *
              (+3.88920629e+00 + 2.11417269e-02 * tc[1] -
               6.19477000e-06 * tc[2] + 7.60311908e-10 * tc[3] +
               0.00000000e+00 * tc[4] + 3.43475468e+03 * invT) *
              0.0140561966743039;
    // species 38: A1C2H2
    result += y[38] *
              (+4.85935080e+00 + 2.36285729e-02 * tc[1] -
               8.99549110e-06 * tc[2] + 1.83827944e-09 * tc[3] -
               1.54980166e-13 * tc[4] + 4.33198974e+04 * invT) *
              0.0096951834328706;
    // species 39: A1CH2
    result += y[39] *
              (+2.30049696e+00 + 2.40027670e-02 * tc[1] -
               9.28143407e-06 * tc[2] + 1.93092839e-09 * tc[3] -
               1.65430827e-13 * tc[4] + 2.17498572e+04 * invT) *
              0.0109729735661067;
    // species 40: A1CHO
    result += y[40] *
              (+8.73557560e-01 + 2.63115775e-02 * tc[1] -
               1.05881654e-05 * tc[2] + 2.26600767e-09 * tc[3] -
               1.98061225e-13 * tc[4] - 7.23603865e+03 * invT) *
              0.0094229392031963;
    // species 41: A1CH3
    result += y[41] *
              (-2.01117220e+00 + 2.92650956e-02 * tc[1] -
               1.15865023e-05 * tc[2] + 2.45545248e-09 * tc[3] -
               2.13361740e-13 * tc[4] + 3.99363395e+03 * invT) *
              0.0108529319195581;
    // species 42: C7H15
    result += y[42] *
              (+2.74721159e+00 + 3.24672581e-02 * tc[1] -
               1.00447008e-05 * tc[2] + 1.29354536e-09 * tc[3] +
               0.00000000e+00 * tc[4] - 3.37018357e+03 * invT) *
              0.0100809500287307;
    // species 43: N-C7H16
    result += y[43] *
              (+4.14079241e+00 + 3.26539335e-02 * tc[1] -
               9.82758747e-06 * tc[2] + 1.23431681e-09 * tc[3] +
               0.00000000e+00 * tc[4] - 2.72533890e+04 * invT) *
              0.0099795419390250;
    // species 44: A1C2H*
    result += y[44] *
              (+6.23812069e+00 + 1.91906054e-02 * tc[1] -
               7.29502437e-06 * tc[2] + 1.49290312e-09 * tc[3] -
               1.26070293e-13 * tc[4] + 6.49528135e+04 * invT) *
              0.0098884581915988;
    // species 45: A2-
    result += y[45] *
              (+2.22892303e+00 + 3.15632243e-02 * tc[1] -
               1.26860794e-05 * tc[2] + 2.71135172e-09 * tc[3] -
               2.36685024e-13 * tc[4] + 4.78400840e+04 * invT) *
              0.0078637371624491;
    // species 46: A1C2H
    result += y[46] *
              (+4.81520488e+00 + 2.20436466e-02 * tc[1] -
               8.40179527e-06 * tc[2] + 1.72568807e-09 * tc[3] -
               1.46275782e-13 * tc[4] + 3.30271906e+04 * invT) *
              0.0097908670791885;
  }

  const amrex::Real RT = 8.31446261815324e+07 * tT; // R*T

  ubms = result * RT;
}

// get mixture entropy in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBML(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& sbml)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[47]; //  temporary storage
  speciesEntropy(sor, tc);

  // Compute Eq 42
  for (int id = 0; id < 47; ++id) {
    result += x[id] * (sor[id] - log((x[id] + 1e-100)) - logPratio);
  }

  sbml = result * 8.31446261815324e+07;
}

// get mixture entropy in mass units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSBMS(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& sbms)
{
  amrex::Real result = 0;
  // Log of normalized pressure in cgs units dynes/cm^2 by Patm
  amrex::Real logPratio = log(P / 1013250.0);
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real sor[47]; //  temporary storage
  amrex::Real x[47];   //  need a ytx conversion
  amrex::Real YOW = 0; // See Eq 4, 6 in CK Manual

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 47; i++) {
    YOW += y[i] * imw(i);
  }
  // Now compute y to x conversion
  x[0] = y[0] / (28.014000 * YOW);
  x[1] = y[1] / (14.027000 * YOW);
  x[2] = y[2] / (14.027000 * YOW);
  x[3] = y[3] / (15.999000 * YOW);
  x[4] = y[4] / (2.016000 * YOW);
  x[5] = y[5] / (1.008000 * YOW);
  x[6] = y[6] / (17.007000 * YOW);
  x[7] = y[7] / (18.015000 * YOW);
  x[8] = y[8] / (31.998000 * YOW);
  x[9] = y[9] / (33.006000 * YOW);
  x[10] = y[10] / (13.019000 * YOW);
  x[11] = y[11] / (28.010000 * YOW);
  x[12] = y[12] / (29.018000 * YOW);
  x[13] = y[13] / (30.026000 * YOW);
  x[14] = y[14] / (15.035000 * YOW);
  x[15] = y[15] / (44.009000 * YOW);
  x[16] = y[16] / (16.043000 * YOW);
  x[17] = y[17] / (27.046000 * YOW);
  x[18] = y[18] / (28.054000 * YOW);
  x[19] = y[19] / (29.062000 * YOW);
  x[20] = y[20] / (25.030000 * YOW);
  x[21] = y[21] / (41.029000 * YOW);
  x[22] = y[22] / (26.038000 * YOW);
  x[23] = y[23] / (39.057000 * YOW);
  x[24] = y[24] / (41.073000 * YOW);
  x[25] = y[25] / (43.089000 * YOW);
  x[26] = y[26] / (30.070000 * YOW);
  x[27] = y[27] / (40.065000 * YOW);
  x[28] = y[28] / (40.065000 * YOW);
  x[29] = y[29] / (78.114000 * YOW);
  x[30] = y[30] / (77.106000 * YOW);
  x[31] = y[31] / (65.095000 * YOW);
  x[32] = y[32] / (42.081000 * YOW);
  x[33] = y[33] / (56.108000 * YOW);
  x[34] = y[34] / (66.103000 * YOW);
  x[35] = y[35] / (128.174000 * YOW);
  x[36] = y[36] / (70.135000 * YOW);
  x[37] = y[37] / (71.143000 * YOW);
  x[38] = y[38] / (103.144000 * YOW);
  x[39] = y[39] / (91.133000 * YOW);
  x[40] = y[40] / (106.124000 * YOW);
  x[41] = y[41] / (92.141000 * YOW);
  x[42] = y[42] / (99.197000 * YOW);
  x[43] = y[43] / (100.205000 * YOW);
  x[44] = y[44] / (101.128000 * YOW);
  x[45] = y[45] / (127.166000 * YOW);
  x[46] = y[46] / (102.136000 * YOW);
  speciesEntropy(sor, tc);
  // Perform computation in Eq 42 and 43
  for (int i = 0; i < 47; i++) {
    result += x[i] * (sor[i] - log((x[i] + 1e-100)) - logPratio);
  }
  // Scale by R/W
  sbms = result * 8.31446261815324e+07 * YOW;
}

//  get temperature given internal energy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_EY(
  const amrex::Real e, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real e1, emin, emax, cv, t1, dt;
  CKUBMS(tmin, y, emin);
  CKUBMS(tmax, y, emax);
  if (e < emin) {
    // Linear Extrapolation below tmin
    CKCVBS(tmin, y, cv);
    t = tmin - (emin - e) / cv;
    ierr = 1;
    return;
  }
  if (e > emax) {
    // Linear Extrapolation above tmax
    CKCVBS(tmax, y, cv);
    t = tmax - (emax - e) / cv;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (emax - emin) * (e - emin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKUBMS(t1, y, e1);
    CKCVBS(t1, y, cv);
    dt = (e - e1) / cv;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

//  get temperature given enthalpy in mass units and mass fracs
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_T_GIVEN_HY(
  const amrex::Real h, const amrex::Real y[], amrex::Real& t, int& ierr)
{
#ifdef CONVERGENCE
  const int maxiter = 5000;
  const amrex::Real tol = 1.e-12;
#else
  const int maxiter = 200;
  const amrex::Real tol = 1.e-6;
#endif
  amrex::Real tmin = 90;   // max lower bound for thermo def
  amrex::Real tmax = 4000; // min upper bound for thermo def
  amrex::Real h1, hmin, hmax, cp, t1, dt;
  CKHBMS(tmin, y, hmin);
  CKHBMS(tmax, y, hmax);
  if (h < hmin) {
    // Linear Extrapolation below tmin
    CKCPBS(tmin, y, cp);
    t = tmin - (hmin - h) / cp;
    ierr = 1;
    return;
  }
  if (h > hmax) {
    // Linear Extrapolation above tmax
    CKCPBS(tmax, y, cp);
    t = tmax - (hmax - h) / cp;
    ierr = 1;
    return;
  }
  t1 = t;
  if (t1 < tmin || t1 > tmax) {
    t1 = tmin + (tmax - tmin) / (hmax - hmin) * (h - hmin);
  }
  for (int i = 0; i < maxiter; ++i) {
    CKHBMS(t1, y, h1);
    CKCPBS(t1, y, cp);
    dt = (h - h1) / cp;
    if (dt > 100.) {
      dt = 100.;
    } else if (dt < -100.) {
      dt = -100.;
    } else if (fabs(dt) < tol) {
      break;
    }
    t1 += dt;
  }
  t = t1;
  ierr = 0;
}

// Compute P = rhoRT/W(x)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPX(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& P)
{
  amrex::Real XW = 0;                      //  To hold mean molecular wt
  XW += x[0] * 28.014000;                  // N2
  XW += x[1] * 14.027000;                  // S-CH2
  XW += x[2] * 14.027000;                  // T-CH2
  XW += x[3] * 15.999000;                  // O
  XW += x[4] * 2.016000;                   // H2
  XW += x[5] * 1.008000;                   // H
  XW += x[6] * 17.007000;                  // OH
  XW += x[7] * 18.015000;                  // H2O
  XW += x[8] * 31.998000;                  // O2
  XW += x[9] * 33.006000;                  // HO2
  XW += x[10] * 13.019000;                 // CH
  XW += x[11] * 28.010000;                 // CO
  XW += x[12] * 29.018000;                 // HCO
  XW += x[13] * 30.026000;                 // CH2O
  XW += x[14] * 15.035000;                 // CH3
  XW += x[15] * 44.009000;                 // CO2
  XW += x[16] * 16.043000;                 // CH4
  XW += x[17] * 27.046000;                 // C2H3
  XW += x[18] * 28.054000;                 // C2H4
  XW += x[19] * 29.062000;                 // C2H5
  XW += x[20] * 25.030000;                 // C2H
  XW += x[21] * 41.029000;                 // HCCO
  XW += x[22] * 26.038000;                 // C2H2
  XW += x[23] * 39.057000;                 // C3H3
  XW += x[24] * 41.073000;                 // A-C3H5
  XW += x[25] * 43.089000;                 // N-C3H7
  XW += x[26] * 30.070000;                 // C2H6
  XW += x[27] * 40.065000;                 // P-C3H4
  XW += x[28] * 40.065000;                 // A-C3H4
  XW += x[29] * 78.114000;                 // A1
  XW += x[30] * 77.106000;                 // A1-
  XW += x[31] * 65.095000;                 // C5H5
  XW += x[32] * 42.081000;                 // C3H6
  XW += x[33] * 56.108000;                 // C4H8
  XW += x[34] * 66.103000;                 // C5H6
  XW += x[35] * 128.174000;                // A2
  XW += x[36] * 70.135000;                 // C5H10
  XW += x[37] * 71.143000;                 // C5H11
  XW += x[38] * 103.144000;                // A1C2H2
  XW += x[39] * 91.133000;                 // A1CH2
  XW += x[40] * 106.124000;                // A1CHO
  XW += x[41] * 92.141000;                 // A1CH3
  XW += x[42] * 99.197000;                 // C7H15
  XW += x[43] * 100.205000;                // N-C7H16
  XW += x[44] * 101.128000;                // A1C2H*
  XW += x[45] * 127.166000;                // A2-
  XW += x[46] * 102.136000;                // A1C2H
  P = rho * 8.31446261815324e+07 * T / XW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(y)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPY(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& P)
{
  amrex::Real YOW = 0; //  for computing mean MW

  for (int i = 0; i < 47; i++) {
    YOW += y[i] * imw(i);
  }
  P = rho * 8.31446261815324e+07 * T * YOW; // P = rho*R*T/W
}

// Compute P = rhoRT/W(c)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKPC(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& P)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 28.014000;   // N2
  W += c[1] * 14.027000;   // S-CH2
  W += c[2] * 14.027000;   // T-CH2
  W += c[3] * 15.999000;   // O
  W += c[4] * 2.016000;    // H2
  W += c[5] * 1.008000;    // H
  W += c[6] * 17.007000;   // OH
  W += c[7] * 18.015000;   // H2O
  W += c[8] * 31.998000;   // O2
  W += c[9] * 33.006000;   // HO2
  W += c[10] * 13.019000;  // CH
  W += c[11] * 28.010000;  // CO
  W += c[12] * 29.018000;  // HCO
  W += c[13] * 30.026000;  // CH2O
  W += c[14] * 15.035000;  // CH3
  W += c[15] * 44.009000;  // CO2
  W += c[16] * 16.043000;  // CH4
  W += c[17] * 27.046000;  // C2H3
  W += c[18] * 28.054000;  // C2H4
  W += c[19] * 29.062000;  // C2H5
  W += c[20] * 25.030000;  // C2H
  W += c[21] * 41.029000;  // HCCO
  W += c[22] * 26.038000;  // C2H2
  W += c[23] * 39.057000;  // C3H3
  W += c[24] * 41.073000;  // A-C3H5
  W += c[25] * 43.089000;  // N-C3H7
  W += c[26] * 30.070000;  // C2H6
  W += c[27] * 40.065000;  // P-C3H4
  W += c[28] * 40.065000;  // A-C3H4
  W += c[29] * 78.114000;  // A1
  W += c[30] * 77.106000;  // A1-
  W += c[31] * 65.095000;  // C5H5
  W += c[32] * 42.081000;  // C3H6
  W += c[33] * 56.108000;  // C4H8
  W += c[34] * 66.103000;  // C5H6
  W += c[35] * 128.174000; // A2
  W += c[36] * 70.135000;  // C5H10
  W += c[37] * 71.143000;  // C5H11
  W += c[38] * 103.144000; // A1C2H2
  W += c[39] * 91.133000;  // A1CH2
  W += c[40] * 106.124000; // A1CHO
  W += c[41] * 92.141000;  // A1CH3
  W += c[42] * 99.197000;  // C7H15
  W += c[43] * 100.205000; // N-C7H16
  W += c[44] * 101.128000; // A1C2H*
  W += c[45] * 127.166000; // A2-
  W += c[46] * 102.136000; // A1C2H

  for (int id = 0; id < 47; ++id) {
    sumC += c[id];
  }
  P = rho * 8.31446261815324e+07 * T * sumC / W; // P = rho*R*T/W
}

// Compute rho = PW(x)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOX(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real& rho)
{
  amrex::Real XW = 0;                        //  To hold mean molecular wt
  XW += x[0] * 28.014000;                    // N2
  XW += x[1] * 14.027000;                    // S-CH2
  XW += x[2] * 14.027000;                    // T-CH2
  XW += x[3] * 15.999000;                    // O
  XW += x[4] * 2.016000;                     // H2
  XW += x[5] * 1.008000;                     // H
  XW += x[6] * 17.007000;                    // OH
  XW += x[7] * 18.015000;                    // H2O
  XW += x[8] * 31.998000;                    // O2
  XW += x[9] * 33.006000;                    // HO2
  XW += x[10] * 13.019000;                   // CH
  XW += x[11] * 28.010000;                   // CO
  XW += x[12] * 29.018000;                   // HCO
  XW += x[13] * 30.026000;                   // CH2O
  XW += x[14] * 15.035000;                   // CH3
  XW += x[15] * 44.009000;                   // CO2
  XW += x[16] * 16.043000;                   // CH4
  XW += x[17] * 27.046000;                   // C2H3
  XW += x[18] * 28.054000;                   // C2H4
  XW += x[19] * 29.062000;                   // C2H5
  XW += x[20] * 25.030000;                   // C2H
  XW += x[21] * 41.029000;                   // HCCO
  XW += x[22] * 26.038000;                   // C2H2
  XW += x[23] * 39.057000;                   // C3H3
  XW += x[24] * 41.073000;                   // A-C3H5
  XW += x[25] * 43.089000;                   // N-C3H7
  XW += x[26] * 30.070000;                   // C2H6
  XW += x[27] * 40.065000;                   // P-C3H4
  XW += x[28] * 40.065000;                   // A-C3H4
  XW += x[29] * 78.114000;                   // A1
  XW += x[30] * 77.106000;                   // A1-
  XW += x[31] * 65.095000;                   // C5H5
  XW += x[32] * 42.081000;                   // C3H6
  XW += x[33] * 56.108000;                   // C4H8
  XW += x[34] * 66.103000;                   // C5H6
  XW += x[35] * 128.174000;                  // A2
  XW += x[36] * 70.135000;                   // C5H10
  XW += x[37] * 71.143000;                   // C5H11
  XW += x[38] * 103.144000;                  // A1C2H2
  XW += x[39] * 91.133000;                   // A1CH2
  XW += x[40] * 106.124000;                  // A1CHO
  XW += x[41] * 92.141000;                   // A1CH3
  XW += x[42] * 99.197000;                   // C7H15
  XW += x[43] * 100.205000;                  // N-C7H16
  XW += x[44] * 101.128000;                  // A1C2H*
  XW += x[45] * 127.166000;                  // A2-
  XW += x[46] * 102.136000;                  // A1C2H
  rho = P * XW / (8.31446261815324e+07 * T); // rho = P*W/(R*T)
}

// Compute rho = P*W(y)/RT
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOY(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real& rho)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 47; i++) {
    YOW += y[i] * imw(i);
  }

  rho = P / (8.31446261815324e+07 * T * YOW); // rho = P*W/(R*T)
}

// Compute rho = P*W(c)/(R*T)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKRHOC(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real c[],
  amrex::Real& rho)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 28.014000;   // N2
  W += c[1] * 14.027000;   // S-CH2
  W += c[2] * 14.027000;   // T-CH2
  W += c[3] * 15.999000;   // O
  W += c[4] * 2.016000;    // H2
  W += c[5] * 1.008000;    // H
  W += c[6] * 17.007000;   // OH
  W += c[7] * 18.015000;   // H2O
  W += c[8] * 31.998000;   // O2
  W += c[9] * 33.006000;   // HO2
  W += c[10] * 13.019000;  // CH
  W += c[11] * 28.010000;  // CO
  W += c[12] * 29.018000;  // HCO
  W += c[13] * 30.026000;  // CH2O
  W += c[14] * 15.035000;  // CH3
  W += c[15] * 44.009000;  // CO2
  W += c[16] * 16.043000;  // CH4
  W += c[17] * 27.046000;  // C2H3
  W += c[18] * 28.054000;  // C2H4
  W += c[19] * 29.062000;  // C2H5
  W += c[20] * 25.030000;  // C2H
  W += c[21] * 41.029000;  // HCCO
  W += c[22] * 26.038000;  // C2H2
  W += c[23] * 39.057000;  // C3H3
  W += c[24] * 41.073000;  // A-C3H5
  W += c[25] * 43.089000;  // N-C3H7
  W += c[26] * 30.070000;  // C2H6
  W += c[27] * 40.065000;  // P-C3H4
  W += c[28] * 40.065000;  // A-C3H4
  W += c[29] * 78.114000;  // A1
  W += c[30] * 77.106000;  // A1-
  W += c[31] * 65.095000;  // C5H5
  W += c[32] * 42.081000;  // C3H6
  W += c[33] * 56.108000;  // C4H8
  W += c[34] * 66.103000;  // C5H6
  W += c[35] * 128.174000; // A2
  W += c[36] * 70.135000;  // C5H10
  W += c[37] * 71.143000;  // C5H11
  W += c[38] * 103.144000; // A1C2H2
  W += c[39] * 91.133000;  // A1CH2
  W += c[40] * 106.124000; // A1CHO
  W += c[41] * 92.141000;  // A1CH3
  W += c[42] * 99.197000;  // C7H15
  W += c[43] * 100.205000; // N-C7H16
  W += c[44] * 101.128000; // A1C2H*
  W += c[45] * 127.166000; // A2-
  W += c[46] * 102.136000; // A1C2H

  for (int id = 0; id < 47; ++id) {
    sumC += c[id];
  }
  rho = P * W / (sumC * T * 8.31446261815324e+07); // rho = PW/(R*T)
}

// get molecular weight for all species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWT(amrex::Real wt[])
{
  get_mw(wt);
}

// given y[species]: mass fractions
// s mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWY(const amrex::Real y[], amrex::Real& wtm)
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 47; i++) {
    YOW += y[i] * imw(i);
  }

  wtm = 1.0 / YOW;
}

// given x[species]: mole fractions
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWX(const amrex::Real x[], amrex::Real& wtm)
{
  amrex::Real XW = 0;       //  see Eq 4 in CK Manual
  XW += x[0] * 28.014000;   // N2
  XW += x[1] * 14.027000;   // S-CH2
  XW += x[2] * 14.027000;   // T-CH2
  XW += x[3] * 15.999000;   // O
  XW += x[4] * 2.016000;    // H2
  XW += x[5] * 1.008000;    // H
  XW += x[6] * 17.007000;   // OH
  XW += x[7] * 18.015000;   // H2O
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 33.006000;   // HO2
  XW += x[10] * 13.019000;  // CH
  XW += x[11] * 28.010000;  // CO
  XW += x[12] * 29.018000;  // HCO
  XW += x[13] * 30.026000;  // CH2O
  XW += x[14] * 15.035000;  // CH3
  XW += x[15] * 44.009000;  // CO2
  XW += x[16] * 16.043000;  // CH4
  XW += x[17] * 27.046000;  // C2H3
  XW += x[18] * 28.054000;  // C2H4
  XW += x[19] * 29.062000;  // C2H5
  XW += x[20] * 25.030000;  // C2H
  XW += x[21] * 41.029000;  // HCCO
  XW += x[22] * 26.038000;  // C2H2
  XW += x[23] * 39.057000;  // C3H3
  XW += x[24] * 41.073000;  // A-C3H5
  XW += x[25] * 43.089000;  // N-C3H7
  XW += x[26] * 30.070000;  // C2H6
  XW += x[27] * 40.065000;  // P-C3H4
  XW += x[28] * 40.065000;  // A-C3H4
  XW += x[29] * 78.114000;  // A1
  XW += x[30] * 77.106000;  // A1-
  XW += x[31] * 65.095000;  // C5H5
  XW += x[32] * 42.081000;  // C3H6
  XW += x[33] * 56.108000;  // C4H8
  XW += x[34] * 66.103000;  // C5H6
  XW += x[35] * 128.174000; // A2
  XW += x[36] * 70.135000;  // C5H10
  XW += x[37] * 71.143000;  // C5H11
  XW += x[38] * 103.144000; // A1C2H2
  XW += x[39] * 91.133000;  // A1CH2
  XW += x[40] * 106.124000; // A1CHO
  XW += x[41] * 92.141000;  // A1CH3
  XW += x[42] * 99.197000;  // C7H15
  XW += x[43] * 100.205000; // N-C7H16
  XW += x[44] * 101.128000; // A1C2H*
  XW += x[45] * 127.166000; // A2-
  XW += x[46] * 102.136000; // A1C2H
  wtm = XW;
}

// given c[species]: molar concentration
// returns mean molecular weight (gm/mole)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKMMWC(const amrex::Real c[], amrex::Real& wtm)
{
  // See Eq 5 in CK Manual
  amrex::Real W = 0;
  amrex::Real sumC = 0;
  W += c[0] * 28.014000;   // N2
  W += c[1] * 14.027000;   // S-CH2
  W += c[2] * 14.027000;   // T-CH2
  W += c[3] * 15.999000;   // O
  W += c[4] * 2.016000;    // H2
  W += c[5] * 1.008000;    // H
  W += c[6] * 17.007000;   // OH
  W += c[7] * 18.015000;   // H2O
  W += c[8] * 31.998000;   // O2
  W += c[9] * 33.006000;   // HO2
  W += c[10] * 13.019000;  // CH
  W += c[11] * 28.010000;  // CO
  W += c[12] * 29.018000;  // HCO
  W += c[13] * 30.026000;  // CH2O
  W += c[14] * 15.035000;  // CH3
  W += c[15] * 44.009000;  // CO2
  W += c[16] * 16.043000;  // CH4
  W += c[17] * 27.046000;  // C2H3
  W += c[18] * 28.054000;  // C2H4
  W += c[19] * 29.062000;  // C2H5
  W += c[20] * 25.030000;  // C2H
  W += c[21] * 41.029000;  // HCCO
  W += c[22] * 26.038000;  // C2H2
  W += c[23] * 39.057000;  // C3H3
  W += c[24] * 41.073000;  // A-C3H5
  W += c[25] * 43.089000;  // N-C3H7
  W += c[26] * 30.070000;  // C2H6
  W += c[27] * 40.065000;  // P-C3H4
  W += c[28] * 40.065000;  // A-C3H4
  W += c[29] * 78.114000;  // A1
  W += c[30] * 77.106000;  // A1-
  W += c[31] * 65.095000;  // C5H5
  W += c[32] * 42.081000;  // C3H6
  W += c[33] * 56.108000;  // C4H8
  W += c[34] * 66.103000;  // C5H6
  W += c[35] * 128.174000; // A2
  W += c[36] * 70.135000;  // C5H10
  W += c[37] * 71.143000;  // C5H11
  W += c[38] * 103.144000; // A1C2H2
  W += c[39] * 91.133000;  // A1CH2
  W += c[40] * 106.124000; // A1CHO
  W += c[41] * 92.141000;  // A1CH3
  W += c[42] * 99.197000;  // C7H15
  W += c[43] * 100.205000; // N-C7H16
  W += c[44] * 101.128000; // A1C2H*
  W += c[45] * 127.166000; // A2-
  W += c[46] * 102.136000; // A1C2H

  for (int id = 0; id < 47; ++id) {
    sumC += c[id];
  }
  //  CK provides no guard against divison by zero
  wtm = W / sumC;
}

// get Cp/R as a function of T
// for all species (Eq 19)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPOR(const amrex::Real T, amrex::Real cpor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpor, tc);
}

// get H/RT as a function of T
// for all species (Eq 20)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHORT(const amrex::Real T, amrex::Real hort[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEnthalpy(hort, tc);
}

// get S/R as a function of T
// for all species (Eq 21)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSOR(const amrex::Real T, amrex::Real sor[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sor, tc);
}

// convert y[species] (mass fracs) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTX(const amrex::Real y[], amrex::Real x[])
{
  amrex::Real YOW = 0;

  for (int i = 0; i < 47; i++) {
    YOW += y[i] * imw(i);
  }

  amrex::Real YOWINV = 1.0 / YOW;

  for (int i = 0; i < 47; i++) {
    x[i] = y[i] * imw(i) * YOWINV;
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real c[])
{
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 47; i++) {
    c[i] = y[i] * imw(i);
  }
  for (int i = 0; i < 47; i++) {
    YOW += c[i];
  }

  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // Now compute conversion

  for (int i = 0; i < 47; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }
}

// convert y[species] (mass fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKYTCR(
  const amrex::Real rho,
  amrex::Real /*T*/,
  const amrex::Real y[],
  amrex::Real c[])
{

  for (int i = 0; i < 47; i++) {
    c[i] = rho * y[i] * imw(i);
  }
}

// convert x[species] (mole fracs) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTY(const amrex::Real x[], amrex::Real y[])
{
  amrex::Real XW = 0; // See Eq 4, 9 in CK Manual
  // Compute mean molecular wt first
  XW += x[0] * 28.014000;   // N2
  XW += x[1] * 14.027000;   // S-CH2
  XW += x[2] * 14.027000;   // T-CH2
  XW += x[3] * 15.999000;   // O
  XW += x[4] * 2.016000;    // H2
  XW += x[5] * 1.008000;    // H
  XW += x[6] * 17.007000;   // OH
  XW += x[7] * 18.015000;   // H2O
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 33.006000;   // HO2
  XW += x[10] * 13.019000;  // CH
  XW += x[11] * 28.010000;  // CO
  XW += x[12] * 29.018000;  // HCO
  XW += x[13] * 30.026000;  // CH2O
  XW += x[14] * 15.035000;  // CH3
  XW += x[15] * 44.009000;  // CO2
  XW += x[16] * 16.043000;  // CH4
  XW += x[17] * 27.046000;  // C2H3
  XW += x[18] * 28.054000;  // C2H4
  XW += x[19] * 29.062000;  // C2H5
  XW += x[20] * 25.030000;  // C2H
  XW += x[21] * 41.029000;  // HCCO
  XW += x[22] * 26.038000;  // C2H2
  XW += x[23] * 39.057000;  // C3H3
  XW += x[24] * 41.073000;  // A-C3H5
  XW += x[25] * 43.089000;  // N-C3H7
  XW += x[26] * 30.070000;  // C2H6
  XW += x[27] * 40.065000;  // P-C3H4
  XW += x[28] * 40.065000;  // A-C3H4
  XW += x[29] * 78.114000;  // A1
  XW += x[30] * 77.106000;  // A1-
  XW += x[31] * 65.095000;  // C5H5
  XW += x[32] * 42.081000;  // C3H6
  XW += x[33] * 56.108000;  // C4H8
  XW += x[34] * 66.103000;  // C5H6
  XW += x[35] * 128.174000; // A2
  XW += x[36] * 70.135000;  // C5H10
  XW += x[37] * 71.143000;  // C5H11
  XW += x[38] * 103.144000; // A1C2H2
  XW += x[39] * 91.133000;  // A1CH2
  XW += x[40] * 106.124000; // A1CHO
  XW += x[41] * 92.141000;  // A1CH3
  XW += x[42] * 99.197000;  // C7H15
  XW += x[43] * 100.205000; // N-C7H16
  XW += x[44] * 101.128000; // A1C2H*
  XW += x[45] * 127.166000; // A2-
  XW += x[46] * 102.136000; // A1C2H
  // Now compute conversion
  amrex::Real XWinv = 1.0 / XW;
  y[0] = x[0] * 28.014000 * XWinv;
  y[1] = x[1] * 14.027000 * XWinv;
  y[2] = x[2] * 14.027000 * XWinv;
  y[3] = x[3] * 15.999000 * XWinv;
  y[4] = x[4] * 2.016000 * XWinv;
  y[5] = x[5] * 1.008000 * XWinv;
  y[6] = x[6] * 17.007000 * XWinv;
  y[7] = x[7] * 18.015000 * XWinv;
  y[8] = x[8] * 31.998000 * XWinv;
  y[9] = x[9] * 33.006000 * XWinv;
  y[10] = x[10] * 13.019000 * XWinv;
  y[11] = x[11] * 28.010000 * XWinv;
  y[12] = x[12] * 29.018000 * XWinv;
  y[13] = x[13] * 30.026000 * XWinv;
  y[14] = x[14] * 15.035000 * XWinv;
  y[15] = x[15] * 44.009000 * XWinv;
  y[16] = x[16] * 16.043000 * XWinv;
  y[17] = x[17] * 27.046000 * XWinv;
  y[18] = x[18] * 28.054000 * XWinv;
  y[19] = x[19] * 29.062000 * XWinv;
  y[20] = x[20] * 25.030000 * XWinv;
  y[21] = x[21] * 41.029000 * XWinv;
  y[22] = x[22] * 26.038000 * XWinv;
  y[23] = x[23] * 39.057000 * XWinv;
  y[24] = x[24] * 41.073000 * XWinv;
  y[25] = x[25] * 43.089000 * XWinv;
  y[26] = x[26] * 30.070000 * XWinv;
  y[27] = x[27] * 40.065000 * XWinv;
  y[28] = x[28] * 40.065000 * XWinv;
  y[29] = x[29] * 78.114000 * XWinv;
  y[30] = x[30] * 77.106000 * XWinv;
  y[31] = x[31] * 65.095000 * XWinv;
  y[32] = x[32] * 42.081000 * XWinv;
  y[33] = x[33] * 56.108000 * XWinv;
  y[34] = x[34] * 66.103000 * XWinv;
  y[35] = x[35] * 128.174000 * XWinv;
  y[36] = x[36] * 70.135000 * XWinv;
  y[37] = x[37] * 71.143000 * XWinv;
  y[38] = x[38] * 103.144000 * XWinv;
  y[39] = x[39] * 91.133000 * XWinv;
  y[40] = x[40] * 106.124000 * XWinv;
  y[41] = x[41] * 92.141000 * XWinv;
  y[42] = x[42] * 99.197000 * XWinv;
  y[43] = x[43] * 100.205000 * XWinv;
  y[44] = x[44] * 101.128000 * XWinv;
  y[45] = x[45] * 127.166000 * XWinv;
  y[46] = x[46] * 102.136000 * XWinv;
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real PORT = P / (8.31446261815324e+07 * T); // P/RT

  // Compute conversion, see Eq 10
  for (int id = 0; id < 47; ++id) {
    c[id] = x[id] * PORT;
  }
}

// convert x[species] (mole fracs) to c[species] (molar conc)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKXTCR(
  const amrex::Real rho,
  const amrex::Real /*T*/,
  const amrex::Real x[],
  amrex::Real c[])
{
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 28.014000;   // N2
  XW += x[1] * 14.027000;   // S-CH2
  XW += x[2] * 14.027000;   // T-CH2
  XW += x[3] * 15.999000;   // O
  XW += x[4] * 2.016000;    // H2
  XW += x[5] * 1.008000;    // H
  XW += x[6] * 17.007000;   // OH
  XW += x[7] * 18.015000;   // H2O
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 33.006000;   // HO2
  XW += x[10] * 13.019000;  // CH
  XW += x[11] * 28.010000;  // CO
  XW += x[12] * 29.018000;  // HCO
  XW += x[13] * 30.026000;  // CH2O
  XW += x[14] * 15.035000;  // CH3
  XW += x[15] * 44.009000;  // CO2
  XW += x[16] * 16.043000;  // CH4
  XW += x[17] * 27.046000;  // C2H3
  XW += x[18] * 28.054000;  // C2H4
  XW += x[19] * 29.062000;  // C2H5
  XW += x[20] * 25.030000;  // C2H
  XW += x[21] * 41.029000;  // HCCO
  XW += x[22] * 26.038000;  // C2H2
  XW += x[23] * 39.057000;  // C3H3
  XW += x[24] * 41.073000;  // A-C3H5
  XW += x[25] * 43.089000;  // N-C3H7
  XW += x[26] * 30.070000;  // C2H6
  XW += x[27] * 40.065000;  // P-C3H4
  XW += x[28] * 40.065000;  // A-C3H4
  XW += x[29] * 78.114000;  // A1
  XW += x[30] * 77.106000;  // A1-
  XW += x[31] * 65.095000;  // C5H5
  XW += x[32] * 42.081000;  // C3H6
  XW += x[33] * 56.108000;  // C4H8
  XW += x[34] * 66.103000;  // C5H6
  XW += x[35] * 128.174000; // A2
  XW += x[36] * 70.135000;  // C5H10
  XW += x[37] * 71.143000;  // C5H11
  XW += x[38] * 103.144000; // A1C2H2
  XW += x[39] * 91.133000;  // A1CH2
  XW += x[40] * 106.124000; // A1CHO
  XW += x[41] * 92.141000;  // A1CH3
  XW += x[42] * 99.197000;  // C7H15
  XW += x[43] * 100.205000; // N-C7H16
  XW += x[44] * 101.128000; // A1C2H*
  XW += x[45] * 127.166000; // A2-
  XW += x[46] * 102.136000; // A1C2H
  ROW = rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 47; ++id) {
    c[id] = x[id] * ROW;
  }
}

// convert c[species] (molar conc) to x[species] (mole fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTX(const amrex::Real c[], amrex::Real x[])
{
  amrex::Real sumC = 0;

  // compute sum of c
  for (int id = 0; id < 47; ++id) {
    sumC += c[id];
  }

  //  See Eq 13
  amrex::Real sumCinv = 1.0 / sumC;
  for (int id = 0; id < 47; ++id) {
    x[id] = c[id] * sumCinv;
  }
}

// convert c[species] (molar conc) to y[species] (mass fracs)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCTY(const amrex::Real c[], amrex::Real y[])
{
  amrex::Real CW = 0; // See Eq 12 in CK Manual
  // compute denominator in eq 12 first
  CW += c[0] * 28.014000;   // N2
  CW += c[1] * 14.027000;   // S-CH2
  CW += c[2] * 14.027000;   // T-CH2
  CW += c[3] * 15.999000;   // O
  CW += c[4] * 2.016000;    // H2
  CW += c[5] * 1.008000;    // H
  CW += c[6] * 17.007000;   // OH
  CW += c[7] * 18.015000;   // H2O
  CW += c[8] * 31.998000;   // O2
  CW += c[9] * 33.006000;   // HO2
  CW += c[10] * 13.019000;  // CH
  CW += c[11] * 28.010000;  // CO
  CW += c[12] * 29.018000;  // HCO
  CW += c[13] * 30.026000;  // CH2O
  CW += c[14] * 15.035000;  // CH3
  CW += c[15] * 44.009000;  // CO2
  CW += c[16] * 16.043000;  // CH4
  CW += c[17] * 27.046000;  // C2H3
  CW += c[18] * 28.054000;  // C2H4
  CW += c[19] * 29.062000;  // C2H5
  CW += c[20] * 25.030000;  // C2H
  CW += c[21] * 41.029000;  // HCCO
  CW += c[22] * 26.038000;  // C2H2
  CW += c[23] * 39.057000;  // C3H3
  CW += c[24] * 41.073000;  // A-C3H5
  CW += c[25] * 43.089000;  // N-C3H7
  CW += c[26] * 30.070000;  // C2H6
  CW += c[27] * 40.065000;  // P-C3H4
  CW += c[28] * 40.065000;  // A-C3H4
  CW += c[29] * 78.114000;  // A1
  CW += c[30] * 77.106000;  // A1-
  CW += c[31] * 65.095000;  // C5H5
  CW += c[32] * 42.081000;  // C3H6
  CW += c[33] * 56.108000;  // C4H8
  CW += c[34] * 66.103000;  // C5H6
  CW += c[35] * 128.174000; // A2
  CW += c[36] * 70.135000;  // C5H10
  CW += c[37] * 71.143000;  // C5H11
  CW += c[38] * 103.144000; // A1C2H2
  CW += c[39] * 91.133000;  // A1CH2
  CW += c[40] * 106.124000; // A1CHO
  CW += c[41] * 92.141000;  // A1CH3
  CW += c[42] * 99.197000;  // C7H15
  CW += c[43] * 100.205000; // N-C7H16
  CW += c[44] * 101.128000; // A1C2H*
  CW += c[45] * 127.166000; // A2-
  CW += c[46] * 102.136000; // A1C2H
  // Now compute conversion
  amrex::Real CWinv = 1.0 / CW;
  y[0] = c[0] * 28.014000 * CWinv;
  y[1] = c[1] * 14.027000 * CWinv;
  y[2] = c[2] * 14.027000 * CWinv;
  y[3] = c[3] * 15.999000 * CWinv;
  y[4] = c[4] * 2.016000 * CWinv;
  y[5] = c[5] * 1.008000 * CWinv;
  y[6] = c[6] * 17.007000 * CWinv;
  y[7] = c[7] * 18.015000 * CWinv;
  y[8] = c[8] * 31.998000 * CWinv;
  y[9] = c[9] * 33.006000 * CWinv;
  y[10] = c[10] * 13.019000 * CWinv;
  y[11] = c[11] * 28.010000 * CWinv;
  y[12] = c[12] * 29.018000 * CWinv;
  y[13] = c[13] * 30.026000 * CWinv;
  y[14] = c[14] * 15.035000 * CWinv;
  y[15] = c[15] * 44.009000 * CWinv;
  y[16] = c[16] * 16.043000 * CWinv;
  y[17] = c[17] * 27.046000 * CWinv;
  y[18] = c[18] * 28.054000 * CWinv;
  y[19] = c[19] * 29.062000 * CWinv;
  y[20] = c[20] * 25.030000 * CWinv;
  y[21] = c[21] * 41.029000 * CWinv;
  y[22] = c[22] * 26.038000 * CWinv;
  y[23] = c[23] * 39.057000 * CWinv;
  y[24] = c[24] * 41.073000 * CWinv;
  y[25] = c[25] * 43.089000 * CWinv;
  y[26] = c[26] * 30.070000 * CWinv;
  y[27] = c[27] * 40.065000 * CWinv;
  y[28] = c[28] * 40.065000 * CWinv;
  y[29] = c[29] * 78.114000 * CWinv;
  y[30] = c[30] * 77.106000 * CWinv;
  y[31] = c[31] * 65.095000 * CWinv;
  y[32] = c[32] * 42.081000 * CWinv;
  y[33] = c[33] * 56.108000 * CWinv;
  y[34] = c[34] * 66.103000 * CWinv;
  y[35] = c[35] * 128.174000 * CWinv;
  y[36] = c[36] * 70.135000 * CWinv;
  y[37] = c[37] * 71.143000 * CWinv;
  y[38] = c[38] * 103.144000 * CWinv;
  y[39] = c[39] * 91.133000 * CWinv;
  y[40] = c[40] * 106.124000 * CWinv;
  y[41] = c[41] * 92.141000 * CWinv;
  y[42] = c[42] * 99.197000 * CWinv;
  y[43] = c[43] * 100.205000 * CWinv;
  y[44] = c[44] * 101.128000 * CWinv;
  y[45] = c[45] * 127.166000 * CWinv;
  y[46] = c[46] * 102.136000 * CWinv;
}

// get specific heat at constant volume as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVML(const amrex::Real T, amrex::Real cvml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvml, tc);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    cvml[id] *= 8.31446261815324e+07;
  }
}

// get specific heat at constant pressure as a
// function of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPML(const amrex::Real T, amrex::Real cpml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpml, tc);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    cpml[id] *= 8.31446261815324e+07;
  }
}

// get internal energy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUML(const amrex::Real T, amrex::Real uml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesInternalEnergy(uml, tc);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    uml[id] *= RT;
  }
}

// get enthalpy as a function
// of T for all species (molar units)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHML(const amrex::Real T, amrex::Real hml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T
  speciesEnthalpy(hml, tc);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    hml[id] *= RT;
  }
}

// Returns the standard-state entropies in molar units
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSML(const amrex::Real T, amrex::Real sml[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sml, tc);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    sml[id] *= 8.31446261815324e+07;
  }
}

// Returns the specific heats at constant volume
// in mass units (Eq. 29)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCVMS(const amrex::Real T, amrex::Real cvms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cv_R(cvms, tc);
  // multiply by R/molecularweight
  cvms[0] *= 2.967966951578939e+06;  // N2
  cvms[1] *= 5.927470320206203e+06;  // S-CH2
  cvms[2] *= 5.927470320206203e+06;  // T-CH2
  cvms[3] *= 5.196863940342046e+06;  // O
  cvms[4] *= 4.124237409798234e+07;  // H2
  cvms[5] *= 8.248474819596468e+07;  // H
  cvms[6] *= 4.888847308845322e+06;  // OH
  cvms[7] *= 4.615299815794193e+06;  // H2O
  cvms[8] *= 2.598431970171023e+06;  // O2
  cvms[9] *= 2.519076112874398e+06;  // HO2
  cvms[10] *= 6.386406496776436e+06; // CH
  cvms[11] *= 2.968390795484913e+06; // CO
  cvms[12] *= 2.865277627042952e+06; // HCO
  cvms[13] *= 2.769087663409458e+06; // CH2O
  cvms[14] *= 5.530071578419182e+06; // CH3
  cvms[15] *= 1.889264154639560e+06; // CO2
  cvms[16] *= 5.182610869633635e+06; // CH4
  cvms[17] *= 3.074193085170909e+06; // C2H3
  cvms[18] *= 2.963735160103101e+06; // C2H4
  cvms[19] *= 2.860939583701480e+06; // C2H5
  cvms[20] *= 3.321798888594982e+06; // C2H
  cvms[21] *= 2.026484344769124e+06; // HCCO
  cvms[22] *= 3.193203248388218e+06; // C2H2
  cvms[23] *= 2.128802165592145e+06; // C3H3
  cvms[24] *= 2.024313446340233e+06; // A-C3H5
  cvms[25] *= 1.929602130045543e+06; // N-C3H7
  cvms[26] *= 2.765035789209591e+06; // C2H6
  cvms[27] *= 2.075243384039246e+06; // P-C3H4
  cvms[28] *= 2.075243384039246e+06; // A-C3H4
  cvms[29] *= 1.064401082796072e+06; // A1
  cvms[30] *= 1.078315905137504e+06; // A1-
  cvms[31] *= 1.277281299355287e+06; // C5H5
  cvms[32] *= 1.975823440068734e+06; // C3H6
  cvms[33] *= 1.481867580051551e+06; // C4H8
  cvms[34] *= 1.257804126613503e+06; // C5H6
  cvms[35] *= 6.486855850760093e+05; // A2
  cvms[36] *= 1.185494064041241e+06; // C5H10
  cvms[37] *= 1.168697218019094e+06; // C5H11
  cvms[38] *= 8.061024022874079e+05; // A1C2H2
  cvms[39] *= 9.123437852537764e+05; // A1CH2
  cvms[40] *= 7.834667575810599e+05; // A1CHO
  cvms[41] *= 9.023629674252765e+05; // A1CH3
  cvms[42] *= 8.381768216935230e+05; // C7H15
  cvms[43] *= 8.297452839831585e+05; // N-C7H16
  cvms[44] *= 8.221721598521912e+05; // A1C2H*
  cvms[45] *= 6.538274867616533e+05; // A2-
  cvms[46] *= 8.140579832922026e+05; // A1C2H
}

// Returns the specific heats at constant pressure
// in mass units (Eq. 26)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCPMS(const amrex::Real T, amrex::Real cpms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  cp_R(cpms, tc);
  // multiply by R/molecularweight
  cpms[0] *= 2.967966951578939e+06;  // N2
  cpms[1] *= 5.927470320206203e+06;  // S-CH2
  cpms[2] *= 5.927470320206203e+06;  // T-CH2
  cpms[3] *= 5.196863940342046e+06;  // O
  cpms[4] *= 4.124237409798234e+07;  // H2
  cpms[5] *= 8.248474819596468e+07;  // H
  cpms[6] *= 4.888847308845322e+06;  // OH
  cpms[7] *= 4.615299815794193e+06;  // H2O
  cpms[8] *= 2.598431970171023e+06;  // O2
  cpms[9] *= 2.519076112874398e+06;  // HO2
  cpms[10] *= 6.386406496776436e+06; // CH
  cpms[11] *= 2.968390795484913e+06; // CO
  cpms[12] *= 2.865277627042952e+06; // HCO
  cpms[13] *= 2.769087663409458e+06; // CH2O
  cpms[14] *= 5.530071578419182e+06; // CH3
  cpms[15] *= 1.889264154639560e+06; // CO2
  cpms[16] *= 5.182610869633635e+06; // CH4
  cpms[17] *= 3.074193085170909e+06; // C2H3
  cpms[18] *= 2.963735160103101e+06; // C2H4
  cpms[19] *= 2.860939583701480e+06; // C2H5
  cpms[20] *= 3.321798888594982e+06; // C2H
  cpms[21] *= 2.026484344769124e+06; // HCCO
  cpms[22] *= 3.193203248388218e+06; // C2H2
  cpms[23] *= 2.128802165592145e+06; // C3H3
  cpms[24] *= 2.024313446340233e+06; // A-C3H5
  cpms[25] *= 1.929602130045543e+06; // N-C3H7
  cpms[26] *= 2.765035789209591e+06; // C2H6
  cpms[27] *= 2.075243384039246e+06; // P-C3H4
  cpms[28] *= 2.075243384039246e+06; // A-C3H4
  cpms[29] *= 1.064401082796072e+06; // A1
  cpms[30] *= 1.078315905137504e+06; // A1-
  cpms[31] *= 1.277281299355287e+06; // C5H5
  cpms[32] *= 1.975823440068734e+06; // C3H6
  cpms[33] *= 1.481867580051551e+06; // C4H8
  cpms[34] *= 1.257804126613503e+06; // C5H6
  cpms[35] *= 6.486855850760093e+05; // A2
  cpms[36] *= 1.185494064041241e+06; // C5H10
  cpms[37] *= 1.168697218019094e+06; // C5H11
  cpms[38] *= 8.061024022874079e+05; // A1C2H2
  cpms[39] *= 9.123437852537764e+05; // A1CH2
  cpms[40] *= 7.834667575810599e+05; // A1CHO
  cpms[41] *= 9.023629674252765e+05; // A1CH3
  cpms[42] *= 8.381768216935230e+05; // C7H15
  cpms[43] *= 8.297452839831585e+05; // N-C7H16
  cpms[44] *= 8.221721598521912e+05; // A1C2H*
  cpms[45] *= 6.538274867616533e+05; // A2-
  cpms[46] *= 8.140579832922026e+05; // A1C2H
}

// Returns internal energy in mass units (Eq 30.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKUMS(const amrex::Real T, amrex::Real ums[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesInternalEnergy(ums, tc);

  for (int i = 0; i < 47; i++) {
    ums[i] *= RT * imw(i);
  }
}

// Returns enthalpy in mass units (Eq 27.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKHMS(const amrex::Real T, amrex::Real hms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    0, tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  amrex::Real RT = 8.31446261815324e+07 * tT;         // R*T

  speciesEnthalpy(hms, tc);

  for (int i = 0; i < 47; i++) {
    hms[i] *= RT * imw(i);
  }
}

// Returns the entropies in mass units (Eq 28.)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKSMS(const amrex::Real T, amrex::Real sms[])
{
  amrex::Real tT = T; // temporary temperature
  const amrex::Real tc[5] = {
    log(tT), tT, tT * tT, tT * tT * tT, tT * tT * tT * tT}; // temperature cache
  speciesEntropy(sms, tc);
  // multiply by R/molecularweight
  sms[0] *= 2.967966951578939e+06;  // N2
  sms[1] *= 5.927470320206203e+06;  // S-CH2
  sms[2] *= 5.927470320206203e+06;  // T-CH2
  sms[3] *= 5.196863940342046e+06;  // O
  sms[4] *= 4.124237409798234e+07;  // H2
  sms[5] *= 8.248474819596468e+07;  // H
  sms[6] *= 4.888847308845322e+06;  // OH
  sms[7] *= 4.615299815794193e+06;  // H2O
  sms[8] *= 2.598431970171023e+06;  // O2
  sms[9] *= 2.519076112874398e+06;  // HO2
  sms[10] *= 6.386406496776436e+06; // CH
  sms[11] *= 2.968390795484913e+06; // CO
  sms[12] *= 2.865277627042952e+06; // HCO
  sms[13] *= 2.769087663409458e+06; // CH2O
  sms[14] *= 5.530071578419182e+06; // CH3
  sms[15] *= 1.889264154639560e+06; // CO2
  sms[16] *= 5.182610869633635e+06; // CH4
  sms[17] *= 3.074193085170909e+06; // C2H3
  sms[18] *= 2.963735160103101e+06; // C2H4
  sms[19] *= 2.860939583701480e+06; // C2H5
  sms[20] *= 3.321798888594982e+06; // C2H
  sms[21] *= 2.026484344769124e+06; // HCCO
  sms[22] *= 3.193203248388218e+06; // C2H2
  sms[23] *= 2.128802165592145e+06; // C3H3
  sms[24] *= 2.024313446340233e+06; // A-C3H5
  sms[25] *= 1.929602130045543e+06; // N-C3H7
  sms[26] *= 2.765035789209591e+06; // C2H6
  sms[27] *= 2.075243384039246e+06; // P-C3H4
  sms[28] *= 2.075243384039246e+06; // A-C3H4
  sms[29] *= 1.064401082796072e+06; // A1
  sms[30] *= 1.078315905137504e+06; // A1-
  sms[31] *= 1.277281299355287e+06; // C5H5
  sms[32] *= 1.975823440068734e+06; // C3H6
  sms[33] *= 1.481867580051551e+06; // C4H8
  sms[34] *= 1.257804126613503e+06; // C5H6
  sms[35] *= 6.486855850760093e+05; // A2
  sms[36] *= 1.185494064041241e+06; // C5H10
  sms[37] *= 1.168697218019094e+06; // C5H11
  sms[38] *= 8.061024022874079e+05; // A1C2H2
  sms[39] *= 9.123437852537764e+05; // A1CH2
  sms[40] *= 7.834667575810599e+05; // A1CHO
  sms[41] *= 9.023629674252765e+05; // A1CH3
  sms[42] *= 8.381768216935230e+05; // C7H15
  sms[43] *= 8.297452839831585e+05; // N-C7H16
  sms[44] *= 8.221721598521912e+05; // A1C2H*
  sms[45] *= 6.538274867616533e+05; // A2-
  sms[46] *= 8.140579832922026e+05; // A1C2H
}

// GPU version of productionRate: no more use of thermo namespace vectors
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
comp_qfqr(
  amrex::Real* qf,
  amrex::Real* qr,
  const amrex::Real* sc,
  const amrex::Real* /*sc_qss*/,
  const amrex::Real* tc,
  const amrex::Real invT)
{

  // reaction 6: H + O2 (+M) => HO2 (+M)
  qf[0] = sc[5] * sc[8];
  qr[0] = 0.0;

  // reaction 29: H2O + S-CH2 (+M) => CH2O + H2 (+M)
  qf[1] = sc[1] * sc[7];
  qr[1] = 0.0;

  // reaction 35: CH3 + OH (+M) => CH2O + H2 (+M)
  qf[2] = sc[6] * sc[14];
  qr[2] = 0.0;

  // reaction 51: CO + O (+M) => CO2 (+M)
  qf[3] = sc[3] * sc[11];
  qr[3] = 0.0;

  // reaction 75: C2H2 + H (+M) <=> C2H3 (+M)
  qf[4] = sc[5] * sc[22];
  qr[4] = sc[17];

  // reaction 83: C2H3 + H (+M) => C2H4 (+M)
  qf[5] = sc[5] * sc[17];
  qr[5] = 0.0;

  // reaction 93: C2H4 + H (+M) <=> C2H5 (+M)
  qf[6] = sc[5] * sc[18];
  qr[6] = sc[19];

  // reaction 101: C2H4 + CH3 (+M) <=> N-C3H7 (+M)
  qf[7] = sc[14] * sc[18];
  qr[7] = sc[25];

  // reaction 102: C2H5 + H (+M) <=> C2H6 (+M)
  qf[8] = sc[5] * sc[19];
  qr[8] = sc[26];

  // reaction 108: C2H6 (+M) <=> 2 CH3 (+M)
  qf[9] = sc[26];
  qr[9] = (sc[14] * sc[14]);

  // reaction 113: HCCO (+M) => CH + CO (+M)
  qf[10] = sc[21];
  qr[10] = 0.0;

  // reaction 149: C3H6 + H (+M) <=> N-C3H7 (+M)
  qf[11] = sc[5] * sc[32];
  qr[11] = sc[25];

  // reaction 32: CH3 + H (+M) <=> CH4 (+M)
  qf[12] = sc[5] * sc[14];
  qr[12] = sc[16];

  // reaction 2: H + O + M => OH + M
  qf[13] = sc[3] * sc[5];
  qr[13] = 0.0;

  // reaction 3: H + OH + M => H2O + M
  qf[14] = sc[5] * sc[6];
  qr[14] = 0.0;

  // reaction 60: HCO + M <=> CO + H + M
  qf[15] = sc[12];
  qr[15] = sc[5] * sc[11];

  // reaction 61: HCO + H2O <=> CO + H + H2O
  qf[16] = sc[7] * sc[12];
  qr[16] = sc[5] * sc[7] * sc[11];

  // reaction 0: N2 + S-CH2 <=> N2 + T-CH2
  qf[17] = sc[0] * sc[1];
  qr[17] = sc[0] * sc[2];

  // reaction 1: H2 + O <=> H + OH
  qf[18] = sc[3] * sc[4];
  qr[18] = sc[5] * sc[6];

  // reaction 4: H2 + OH <=> H + H2O
  qf[19] = sc[4] * sc[6];
  qr[19] = sc[5] * sc[7];

  // reaction 5: 2 OH <=> H2O + O
  qf[20] = (sc[6] * sc[6]);
  qr[20] = sc[3] * sc[7];

  // reaction 7: H + O2 <=> O + OH
  qf[21] = sc[5] * sc[8];
  qr[21] = sc[3] * sc[6];

  // reaction 8: H + HO2 => H2 + O2
  qf[22] = sc[5] * sc[9];
  qr[22] = 0.0;

  // reaction 9: H + HO2 => H2O + O
  qf[23] = sc[5] * sc[9];
  qr[23] = 0.0;

  // reaction 10: H + HO2 => 2 OH
  qf[24] = sc[5] * sc[9];
  qr[24] = 0.0;

  // reaction 11: HO2 + O => O2 + OH
  qf[25] = sc[3] * sc[9];
  qr[25] = 0.0;

  // reaction 12: HO2 + OH => H2O + O2
  qf[26] = sc[6] * sc[9];
  qr[26] = 0.0;

  // reaction 13: HO2 + OH => H2O + O2
  qf[27] = sc[6] * sc[9];
  qr[27] = 0.0;

  // reaction 14: CH + O => CO + H
  qf[28] = sc[3] * sc[10];
  qr[28] = 0.0;

  // reaction 15: CH + OH => H + HCO
  qf[29] = sc[6] * sc[10];
  qr[29] = 0.0;

  // reaction 16: CH + H2 <=> H + T-CH2
  qf[30] = sc[4] * sc[10];
  qr[30] = sc[2] * sc[5];

  // reaction 17: CH + H2O => CH2O + H
  qf[31] = sc[7] * sc[10];
  qr[31] = 0.0;

  // reaction 18: CH + O2 => HCO + O
  qf[32] = sc[8] * sc[10];
  qr[32] = 0.0;

  // reaction 19: O + T-CH2 => H + HCO
  qf[33] = sc[2] * sc[3];
  qr[33] = 0.0;

  // reaction 20: OH + T-CH2 => CH2O + H
  qf[34] = sc[2] * sc[6];
  qr[34] = 0.0;

  // reaction 21: OH + T-CH2 <=> CH + H2O
  qf[35] = sc[2] * sc[6];
  qr[35] = sc[7] * sc[10];

  // reaction 22: H2 + T-CH2 <=> CH3 + H
  qf[36] = sc[2] * sc[4];
  qr[36] = sc[5] * sc[14];

  // reaction 23: O2 + T-CH2 => CO2 + 2 H
  qf[37] = sc[2] * sc[8];
  qr[37] = 0.0;

  // reaction 24: O2 + T-CH2 => CH2O + O
  qf[38] = sc[2] * sc[8];
  qr[38] = 0.0;

  // reaction 25: O2 + T-CH2 => CO + H + OH
  qf[39] = sc[2] * sc[8];
  qr[39] = 0.0;

  // reaction 26: H2 + S-CH2 <=> CH3 + H
  qf[40] = sc[1] * sc[4];
  qr[40] = sc[5] * sc[14];

  // reaction 27: O2 + S-CH2 => CO + H + OH
  qf[41] = sc[1] * sc[8];
  qr[41] = 0.0;

  // reaction 28: O2 + S-CH2 => CO + H2O
  qf[42] = sc[1] * sc[8];
  qr[42] = 0.0;

  // reaction 30: H2O + S-CH2 <=> H2O + T-CH2
  qf[43] = sc[1] * sc[7];
  qr[43] = sc[2] * sc[7];

  // reaction 31: H2O + S-CH2 => CH2O + H2
  qf[44] = sc[1] * sc[7];
  qr[44] = 0.0;

  // reaction 33: CH3 + O => CH2O + H
  qf[45] = sc[3] * sc[14];
  qr[45] = 0.0;

  // reaction 34: CH3 + O => CO + H + H2
  qf[46] = sc[3] * sc[14];
  qr[46] = 0.0;

  // reaction 36: CH3 + OH <=> H2O + T-CH2
  qf[47] = sc[6] * sc[14];
  qr[47] = sc[2] * sc[7];

  // reaction 37: CH3 + OH <=> H2O + S-CH2
  qf[48] = sc[6] * sc[14];
  qr[48] = sc[1] * sc[7];

  // reaction 38: CH3 + O2 => CH2O + H + O
  qf[49] = sc[8] * sc[14];
  qr[49] = 0.0;

  // reaction 39: CH3 + O2 => CH2O + OH
  qf[50] = sc[8] * sc[14];
  qr[50] = 0.0;

  // reaction 40: CH3 + HO2 => CH2O + H + OH
  qf[51] = sc[9] * sc[14];
  qr[51] = 0.0;

  // reaction 41: CH3 + HO2 => CH4 + O2
  qf[52] = sc[9] * sc[14];
  qr[52] = 0.0;

  // reaction 42: CH + CH3 => C2H3 + H
  qf[53] = sc[10] * sc[14];
  qr[53] = 0.0;

  // reaction 43: CH3 + T-CH2 => C2H4 + H
  qf[54] = sc[2] * sc[14];
  qr[54] = 0.0;

  // reaction 44: 2 CH3 <=> C2H5 + H
  qf[55] = (sc[14] * sc[14]);
  qr[55] = sc[5] * sc[19];

  // reaction 45: 2 CH3 => CH4 + S-CH2
  qf[56] = (sc[14] * sc[14]);
  qr[56] = 0.0;

  // reaction 46: CH4 + H <=> CH3 + H2
  qf[57] = sc[5] * sc[16];
  qr[57] = sc[4] * sc[14];

  // reaction 47: CH4 + O <=> CH3 + OH
  qf[58] = sc[3] * sc[16];
  qr[58] = sc[6] * sc[14];

  // reaction 48: CH4 + OH <=> CH3 + H2O
  qf[59] = sc[6] * sc[16];
  qr[59] = sc[7] * sc[14];

  // reaction 49: CH + CH4 => C2H4 + H
  qf[60] = sc[10] * sc[16];
  qr[60] = 0.0;

  // reaction 50: CH4 + T-CH2 <=> 2 CH3
  qf[61] = sc[2] * sc[16];
  qr[61] = (sc[14] * sc[14]);

  // reaction 52: CO + OH <=> CO2 + H
  qf[62] = sc[6] * sc[11];
  qr[62] = sc[5] * sc[15];

  // reaction 53: CO + OH <=> CO2 + H
  qf[63] = sc[6] * sc[11];
  qr[63] = sc[5] * sc[15];

  // reaction 54: CO + HO2 => CO2 + OH
  qf[64] = sc[9] * sc[11];
  qr[64] = 0.0;

  // reaction 55: CO + S-CH2 <=> CO + T-CH2
  qf[65] = sc[1] * sc[11];
  qr[65] = sc[2] * sc[11];

  // reaction 56: H + HCO => CO + H2
  qf[66] = sc[5] * sc[12];
  qr[66] = 0.0;

  // reaction 57: HCO + O => CO + OH
  qf[67] = sc[3] * sc[12];
  qr[67] = 0.0;

  // reaction 58: HCO + O => CO2 + H
  qf[68] = sc[3] * sc[12];
  qr[68] = 0.0;

  // reaction 59: HCO + OH => CO + H2O
  qf[69] = sc[6] * sc[12];
  qr[69] = 0.0;

  // reaction 62: HCO + O2 => CO + HO2
  qf[70] = sc[8] * sc[12];
  qr[70] = 0.0;

  // reaction 63: CH3 + HCO => CH4 + CO
  qf[71] = sc[12] * sc[14];
  qr[71] = 0.0;

  // reaction 64: CH2O + H <=> H2 + HCO
  qf[72] = sc[5] * sc[13];
  qr[72] = sc[4] * sc[12];

  // reaction 65: CH2O + O => HCO + OH
  qf[73] = sc[3] * sc[13];
  qr[73] = 0.0;

  // reaction 66: CH2O + OH => H2O + HCO
  qf[74] = sc[6] * sc[13];
  qr[74] = 0.0;

  // reaction 67: CH2O + CH3 => CH4 + HCO
  qf[75] = sc[13] * sc[14];
  qr[75] = 0.0;

  // reaction 68: CH + CO2 => CO + HCO
  qf[76] = sc[10] * sc[15];
  qr[76] = 0.0;

  // reaction 69: CO2 + S-CH2 <=> CO2 + T-CH2
  qf[77] = sc[1] * sc[15];
  qr[77] = sc[2] * sc[15];

  // reaction 70: CO2 + S-CH2 => CH2O + CO
  qf[78] = sc[1] * sc[15];
  qr[78] = 0.0;

  // reaction 71: C2H + O => CH + CO
  qf[79] = sc[3] * sc[20];
  qr[79] = 0.0;

  // reaction 72: C2H + OH => H + HCCO
  qf[80] = sc[6] * sc[20];
  qr[80] = 0.0;

  // reaction 73: C2H + O2 => CO + HCO
  qf[81] = sc[8] * sc[20];
  qr[81] = 0.0;

  // reaction 74: C2H + H2 <=> C2H2 + H
  qf[82] = sc[4] * sc[20];
  qr[82] = sc[5] * sc[22];

  // reaction 76: C2H2 + O => H + HCCO
  qf[83] = sc[3] * sc[22];
  qr[83] = 0.0;

  // reaction 77: C2H2 + O => CO + T-CH2
  qf[84] = sc[3] * sc[22];
  qr[84] = 0.0;

  // reaction 78: C2H2 + O => C2H + OH
  qf[85] = sc[3] * sc[22];
  qr[85] = 0.0;

  // reaction 79: C2H2 + OH => C2H + H2O
  qf[86] = sc[6] * sc[22];
  qr[86] = 0.0;

  // reaction 80: C2H2 + OH => CH3 + CO
  qf[87] = sc[6] * sc[22];
  qr[87] = 0.0;

  // reaction 81: C2H2 + OH => CH3 + CO
  qf[88] = sc[6] * sc[22];
  qr[88] = 0.0;

  // reaction 82: C2H2 + S-CH2 <=> C3H3 + H
  qf[89] = sc[1] * sc[22];
  qr[89] = sc[5] * sc[23];

  // reaction 84: C2H3 + H => C2H2 + H2
  qf[90] = sc[5] * sc[17];
  qr[90] = 0.0;

  // reaction 85: C2H3 + O => CH3 + CO
  qf[91] = sc[3] * sc[17];
  qr[91] = 0.0;

  // reaction 86: C2H3 + OH => C2H2 + H2O
  qf[92] = sc[6] * sc[17];
  qr[92] = 0.0;

  // reaction 87: C2H3 + O2 => C2H2 + HO2
  qf[93] = sc[8] * sc[17];
  qr[93] = 0.0;

  // reaction 88: C2H3 + O2 => CH3 + CO + O
  qf[94] = sc[8] * sc[17];
  qr[94] = 0.0;

  // reaction 89: C2H3 + O2 => CH2O + HCO
  qf[95] = sc[8] * sc[17];
  qr[95] = 0.0;

  // reaction 90: C2H3 + HCO => C2H4 + CO
  qf[96] = sc[12] * sc[17];
  qr[96] = 0.0;

  // reaction 91: C2H3 + CH3 => C2H2 + CH4
  qf[97] = sc[14] * sc[17];
  qr[97] = 0.0;

  // reaction 92: C2H3 + CH3 <=> A-C3H5 + H
  qf[98] = sc[14] * sc[17];
  qr[98] = sc[5] * sc[24];

  // reaction 94: C2H4 + H => C2H3 + H2
  qf[99] = sc[5] * sc[18];
  qr[99] = 0.0;

  // reaction 95: C2H4 + O => CH3 + CO + H
  qf[100] = sc[3] * sc[18];
  qr[100] = 0.0;

  // reaction 96: C2H4 + O => CH2O + T-CH2
  qf[101] = sc[3] * sc[18];
  qr[101] = 0.0;

  // reaction 97: C2H4 + O => CH3 + HCO
  qf[102] = sc[3] * sc[18];
  qr[102] = 0.0;

  // reaction 98: C2H4 + OH => C2H3 + H2O
  qf[103] = sc[6] * sc[18];
  qr[103] = 0.0;

  // reaction 99: C2H4 + OH => CH2O + CH3
  qf[104] = sc[6] * sc[18];
  qr[104] = 0.0;

  // reaction 100: C2H4 + CH3 => C2H3 + CH4
  qf[105] = sc[14] * sc[18];
  qr[105] = 0.0;

  // reaction 103: C2H5 + O => CH2O + CH3
  qf[106] = sc[3] * sc[19];
  qr[106] = 0.0;

  // reaction 104: C2H5 + O2 => C2H4 + HO2
  qf[107] = sc[8] * sc[19];
  qr[107] = 0.0;

  // reaction 105: C2H5 + HCO => C2H6 + CO
  qf[108] = sc[12] * sc[19];
  qr[108] = 0.0;

  // reaction 106: C2H5 + HO2 => C2H6 + O2
  qf[109] = sc[9] * sc[19];
  qr[109] = 0.0;

  // reaction 107: C2H5 + HO2 => CH2O + CH3 + OH
  qf[110] = sc[9] * sc[19];
  qr[110] = 0.0;

  // reaction 109: C2H6 + H => C2H5 + H2
  qf[111] = sc[5] * sc[26];
  qr[111] = 0.0;

  // reaction 110: C2H6 + O => C2H5 + OH
  qf[112] = sc[3] * sc[26];
  qr[112] = 0.0;

  // reaction 111: C2H6 + OH => C2H5 + H2O
  qf[113] = sc[6] * sc[26];
  qr[113] = 0.0;

  // reaction 112: C2H6 + CH3 => C2H5 + CH4
  qf[114] = sc[14] * sc[26];
  qr[114] = 0.0;

  // reaction 114: H + HCCO => CO + S-CH2
  qf[115] = sc[5] * sc[21];
  qr[115] = 0.0;

  // reaction 115: HCCO + O => 2 CO + H
  qf[116] = sc[3] * sc[21];
  qr[116] = 0.0;

  // reaction 116: HCCO + O2 => 2 CO + OH
  qf[117] = sc[8] * sc[21];
  qr[117] = 0.0;

  // reaction 117: 2 HCCO => C2H2 + 2 CO
  qf[118] = (sc[21] * sc[21]);
  qr[118] = 0.0;

  // reaction 118: C2H2 + HCCO => C3H3 + CO
  qf[119] = sc[21] * sc[22];
  qr[119] = 0.0;

  // reaction 119: CH3 + HCCO => C2H4 + CO
  qf[120] = sc[14] * sc[21];
  qr[120] = 0.0;

  // reaction 120: HCCO + OH => 2 HCO
  qf[121] = sc[6] * sc[21];
  qr[121] = 0.0;

  // reaction 121: C3H3 + H <=> P-C3H4
  qf[122] = sc[5] * sc[23];
  qr[122] = sc[27];

  // reaction 122: C3H3 + H <=> A-C3H4
  qf[123] = sc[5] * sc[23];
  qr[123] = sc[28];

  // reaction 123: C3H3 + OH => C2H4 + CO
  qf[124] = sc[6] * sc[23];
  qr[124] = 0.0;

  // reaction 124: C3H3 + O => C2H2 + CO + H
  qf[125] = sc[3] * sc[23];
  qr[125] = 0.0;

  // reaction 125: C3H3 + O2 => CH3 + 2 CO
  qf[126] = sc[8] * sc[23];
  qr[126] = 0.0;

  // reaction 126: C3H3 + HO2 => C2H3 + CO + OH
  qf[127] = sc[9] * sc[23];
  qr[127] = 0.0;

  // reaction 127: 2 C3H3 <=> A1
  qf[128] = (sc[23] * sc[23]);
  qr[128] = sc[29];

  // reaction 128: 2 C3H3 <=> A1- + H
  qf[129] = (sc[23] * sc[23]);
  qr[129] = sc[5] * sc[30];

  // reaction 129: C2H2 + C3H3 <=> C5H5
  qf[130] = sc[22] * sc[23];
  qr[130] = sc[31];

  // reaction 130: H + P-C3H4 <=> C2H2 + CH3
  qf[131] = sc[5] * sc[27];
  qr[131] = sc[14] * sc[22];

  // reaction 131: H + P-C3H4 <=> C3H3 + H2
  qf[132] = sc[5] * sc[27];
  qr[132] = sc[4] * sc[23];

  // reaction 132: OH + P-C3H4 => C3H3 + H2O
  qf[133] = sc[6] * sc[27];
  qr[133] = 0.0;

  // reaction 133: CH3 + P-C3H4 => C3H3 + CH4
  qf[134] = sc[14] * sc[27];
  qr[134] = 0.0;

  // reaction 134: O + P-C3H4 => CH3 + HCCO
  qf[135] = sc[3] * sc[27];
  qr[135] = 0.0;

  // reaction 135: O + P-C3H4 => C2H4 + CO
  qf[136] = sc[3] * sc[27];
  qr[136] = 0.0;

  // reaction 136: OH + P-C3H4 => C2H5 + CO
  qf[137] = sc[6] * sc[27];
  qr[137] = 0.0;

  // reaction 137: A-C3H4 + H <=> C2H2 + CH3
  qf[138] = sc[5] * sc[28];
  qr[138] = sc[14] * sc[22];

  // reaction 138: A-C3H4 <=> P-C3H4
  qf[139] = sc[28];
  qr[139] = sc[27];

  // reaction 139: A-C3H4 + H <=> H + P-C3H4
  qf[140] = sc[5] * sc[28];
  qr[140] = sc[5] * sc[27];

  // reaction 140: A-C3H4 + H => C3H3 + H2
  qf[141] = sc[5] * sc[28];
  qr[141] = 0.0;

  // reaction 141: A-C3H4 + OH => C3H3 + H2O
  qf[142] = sc[6] * sc[28];
  qr[142] = 0.0;

  // reaction 142: A-C3H4 + CH3 => C3H3 + CH4
  qf[143] = sc[14] * sc[28];
  qr[143] = 0.0;

  // reaction 143: A-C3H4 + H <=> A-C3H5
  qf[144] = sc[5] * sc[28];
  qr[144] = sc[24];

  // reaction 144: A-C3H5 + H => A-C3H4 + H2
  qf[145] = sc[5] * sc[24];
  qr[145] = 0.0;

  // reaction 145: A-C3H5 + OH => A-C3H4 + H2O
  qf[146] = sc[6] * sc[24];
  qr[146] = 0.0;

  // reaction 146: A-C3H5 + CH3 => A-C3H4 + CH4
  qf[147] = sc[14] * sc[24];
  qr[147] = 0.0;

  // reaction 147: A-C3H5 + O2 => C2H2 + CH2O + OH
  qf[148] = sc[8] * sc[24];
  qr[148] = 0.0;

  // reaction 148: A-C3H5 + C3H3 => A1 + 2 H
  qf[149] = sc[23] * sc[24];
  qr[149] = 0.0;

  // reaction 150: C3H6 <=> C2H3 + CH3
  qf[150] = sc[32];
  qr[150] = sc[14] * sc[17];

  // reaction 151: A-C3H5 + H <=> C3H6
  qf[151] = sc[5] * sc[24];
  qr[151] = sc[32];

  // reaction 152: C3H6 + H <=> C2H4 + CH3
  qf[152] = sc[5] * sc[32];
  qr[152] = sc[14] * sc[18];

  // reaction 153: C3H6 + O => 2 CH3 + CO
  qf[153] = sc[3] * sc[32];
  qr[153] = 0.0;

  // reaction 154: C3H6 + O => C2H5 + HCO
  qf[154] = sc[3] * sc[32];
  qr[154] = 0.0;

  // reaction 155: C3H6 + H => A-C3H5 + H2
  qf[155] = sc[5] * sc[32];
  qr[155] = 0.0;

  // reaction 156: C3H6 + O => A-C3H5 + OH
  qf[156] = sc[3] * sc[32];
  qr[156] = 0.0;

  // reaction 157: C3H6 + OH => A-C3H5 + H2O
  qf[157] = sc[6] * sc[32];
  qr[157] = 0.0;

  // reaction 158: C3H6 + CH3 => A-C3H5 + CH4
  qf[158] = sc[14] * sc[32];
  qr[158] = 0.0;

  // reaction 159: C4H8 + H => C2H4 + C2H5
  qf[159] = sc[5] * sc[33];
  qr[159] = 0.0;

  // reaction 160: C4H8 => A-C3H5 + CH3
  qf[160] = sc[33];
  qr[160] = 0.0;

  // reaction 161: C5H5 + HO2 => C5H6 + O2
  qf[161] = sc[9] * sc[31];
  qr[161] = 0.0;

  // reaction 162: 2 C5H5 => A2 + 2 H
  qf[162] = (sc[31] * sc[31]);
  qr[162] = 0.0;

  // reaction 163: C5H5 + O => C2H2 + C2H3 + CO
  qf[163] = sc[3] * sc[31];
  qr[163] = 0.0;

  // reaction 164: C5H5 + HO2 => C2H2 + C2H3 + CO + OH
  qf[164] = sc[9] * sc[31];
  qr[164] = 0.0;

  // reaction 165: C5H5 + HO2 => 2 C2H2 + CO + H2O
  qf[165] = sc[9] * sc[31];
  qr[165] = 0.0;

  // reaction 166: C5H5 + OH => C2H2 + C2H3 + CO + H
  qf[166] = sc[6] * sc[31];
  qr[166] = 0.0;

  // reaction 167: C5H6 <=> C5H5 + H
  qf[167] = sc[34];
  qr[167] = sc[5] * sc[31];

  // reaction 168: C5H6 + H => C5H5 + H2
  qf[168] = sc[5] * sc[34];
  qr[168] = 0.0;

  // reaction 169: C5H6 + H => A-C3H5 + C2H2
  qf[169] = sc[5] * sc[34];
  qr[169] = 0.0;

  // reaction 170: C5H6 + O => C5H5 + OH
  qf[170] = sc[3] * sc[34];
  qr[170] = 0.0;

  // reaction 171: C5H6 + OH => C5H5 + H2O
  qf[171] = sc[6] * sc[34];
  qr[171] = 0.0;

  // reaction 172: C5H6 + CH3 => C5H5 + CH4
  qf[172] = sc[14] * sc[34];
  qr[172] = 0.0;

  // reaction 173: C5H10 + H => C5H11
  qf[173] = sc[5] * sc[36];
  qr[173] = 0.0;

  // reaction 174: C5H10 => A-C3H5 + C2H5
  qf[174] = sc[36];
  qr[174] = 0.0;

  // reaction 175: C5H11 => C2H4 + N-C3H7
  qf[175] = sc[37];
  qr[175] = 0.0;

  // reaction 176: C5H11 => C5H10 + H
  qf[176] = sc[37];
  qr[176] = 0.0;

  // reaction 177: C5H11 => C2H5 + C3H6
  qf[177] = sc[37];
  qr[177] = 0.0;

  // reaction 178: A1- + O2 => C5H5 + CO + O
  qf[178] = sc[8] * sc[30];
  qr[178] = 0.0;

  // reaction 179: A1- + O2 => 2 C2H2 + 2 CO + H
  qf[179] = sc[8] * sc[30];
  qr[179] = 0.0;

  // reaction 180: A1- + O => C5H5 + CO
  qf[180] = sc[3] * sc[30];
  qr[180] = 0.0;

  // reaction 181: A1- + OH => C5H6 + CO
  qf[181] = sc[6] * sc[30];
  qr[181] = 0.0;

  // reaction 182: A1- + HO2 => C5H5 + CO + OH
  qf[182] = sc[9] * sc[30];
  qr[182] = 0.0;

  // reaction 183: A1- + C2H2 <=> A1C2H2
  qf[183] = sc[22] * sc[30];
  qr[183] = sc[38];

  // reaction 184: A1 <=> A1- + H
  qf[184] = sc[29];
  qr[184] = sc[5] * sc[30];

  // reaction 185: A1 + H => A1- + H2
  qf[185] = sc[5] * sc[29];
  qr[185] = 0.0;

  // reaction 186: A1 + OH => A1- + H2O
  qf[186] = sc[6] * sc[29];
  qr[186] = 0.0;

  // reaction 187: A1 + CH3 => A1- + CH4
  qf[187] = sc[14] * sc[29];
  qr[187] = 0.0;

  // reaction 188: A1 + O => C5H5 + CO + H
  qf[188] = sc[3] * sc[29];
  qr[188] = 0.0;

  // reaction 189: A1 + OH => C5H6 + CO + H
  qf[189] = sc[6] * sc[29];
  qr[189] = 0.0;

  // reaction 190: A1CH2 <=> C2H2 + C5H5
  qf[190] = sc[39];
  qr[190] = sc[22] * sc[31];

  // reaction 191: A1CH2 + H <=> A1- + CH3
  qf[191] = sc[5] * sc[39];
  qr[191] = sc[14] * sc[30];

  // reaction 192: A1CH2 + O => A1CHO + H
  qf[192] = sc[3] * sc[39];
  qr[192] = 0.0;

  // reaction 193: A1CH2 + HO2 => A1CHO + H + OH
  qf[193] = sc[9] * sc[39];
  qr[193] = 0.0;

  // reaction 194: A1CH2 + C3H3 => A2 + 2 H
  qf[194] = sc[23] * sc[39];
  qr[194] = 0.0;

  // reaction 195: A1CH3 + H <=> A1 + CH3
  qf[195] = sc[5] * sc[41];
  qr[195] = sc[14] * sc[29];

  // reaction 196: A1CH3 <=> A1CH2 + H
  qf[196] = sc[41];
  qr[196] = sc[5] * sc[39];

  // reaction 197: A1CH3 <=> A1- + CH3
  qf[197] = sc[41];
  qr[197] = sc[14] * sc[30];

  // reaction 198: A1CH3 + H => A1CH2 + H2
  qf[198] = sc[5] * sc[41];
  qr[198] = 0.0;

  // reaction 199: A1CH3 + OH => A1CH2 + H2O
  qf[199] = sc[6] * sc[41];
  qr[199] = 0.0;

  // reaction 200: A1CH3 + CH3 => A1CH2 + CH4
  qf[200] = sc[14] * sc[41];
  qr[200] = 0.0;

  // reaction 201: C7H15 => C2H4 + C5H11
  qf[201] = sc[42];
  qr[201] = 0.0;

  // reaction 202: C7H15 => C2H4 + C2H5 + C3H6
  qf[202] = sc[42];
  qr[202] = 0.0;

  // reaction 203: C7H15 => C4H8 + N-C3H7
  qf[203] = sc[42];
  qr[203] = 0.0;

  // reaction 204: C7H15 => C2H5 + C5H10
  qf[204] = sc[42];
  qr[204] = 0.0;

  // reaction 205: N-C7H16 => C2H5 + C5H11
  qf[205] = sc[43];
  qr[205] = 0.0;

  // reaction 206: N-C7H16 => C2H4 + C2H5 + N-C3H7
  qf[206] = sc[43];
  qr[206] = 0.0;

  // reaction 207: H + N-C7H16 => C7H15 + H2
  qf[207] = sc[5] * sc[43];
  qr[207] = 0.0;

  // reaction 208: N-C7H16 + O => C7H15 + OH
  qf[208] = sc[3] * sc[43];
  qr[208] = 0.0;

  // reaction 209: N-C7H16 + OH => C7H15 + H2O
  qf[209] = sc[6] * sc[43];
  qr[209] = 0.0;

  // reaction 210: CH3 + N-C7H16 => C7H15 + CH4
  qf[210] = sc[14] * sc[43];
  qr[210] = 0.0;

  // reaction 211: A1CHO => A1- + HCO
  qf[211] = sc[40];
  qr[211] = 0.0;

  // reaction 212: A1CHO + H => A1- + CO + H2
  qf[212] = sc[5] * sc[40];
  qr[212] = 0.0;

  // reaction 213: A1CHO + CH3 => A1- + CH4 + CO
  qf[213] = sc[14] * sc[40];
  qr[213] = 0.0;

  // reaction 214: A1C2H* + C2H2 <=> A2-
  qf[214] = sc[22] * sc[44];
  qr[214] = sc[45];

  // reaction 215: A1C2H* + C2H4 <=> A2 + H
  qf[215] = sc[18] * sc[44];
  qr[215] = sc[5] * sc[35];

  // reaction 216: A1C2H <=> A1C2H* + H
  qf[216] = sc[46];
  qr[216] = sc[5] * sc[44];

  // reaction 217: A1C2H + H <=> A1C2H* + H2
  qf[217] = sc[5] * sc[46];
  qr[217] = sc[4] * sc[44];

  // reaction 218: A1C2H + OH <=> A1C2H* + H2O
  qf[218] = sc[6] * sc[46];
  qr[218] = sc[7] * sc[44];

  // reaction 219: A1C2H2 <=> A1C2H + H
  qf[219] = sc[38];
  qr[219] = sc[5] * sc[46];

  // reaction 220: A1C2H2 + C2H2 <=> A2 + H
  qf[220] = sc[22] * sc[38];
  qr[220] = sc[5] * sc[35];

  // reaction 221: A2 <=> A2- + H
  qf[221] = sc[35];
  qr[221] = sc[5] * sc[45];

  // reaction 222: A2 + H <=> A2- + H2
  qf[222] = sc[5] * sc[35];
  qr[222] = sc[4] * sc[45];

  // reaction 223: A2 + OH <=> A2- + H2O
  qf[223] = sc[6] * sc[35];
  qr[223] = sc[7] * sc[45];

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 47; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[47];
  gibbs(g_RT, tc);

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 * invT;
  amrex::Real refCinv = 1 / refC;

  // Evaluate the kfs
  amrex::Real k_f, Corr;
  amrex::Real redP, F, logPred, logFcent, troe_c, troe_n, troe, F_troe;

  // reaction 0:  N2 + S-CH2 <=> N2 + T-CH2
  k_f = 15000000 * exp(-(301.879677816251) * invT);
  qf[17] *= k_f;
  qr[17] *= k_f * exp(-(g_RT[0] - g_RT[0] + g_RT[1] - g_RT[2]));
  // reaction 1:  H2 + O <=> H + OH
  k_f = 0.0459 * exp((2.7) * tc[0] - (3149.91491260459) * invT);
  qf[18] *= k_f;
  qr[18] *= k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[5] - g_RT[6]));
  // reaction 2:  H + O + M => OH + M
  k_f = 9430000 * exp((-1) * tc[0]);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  qf[13] *= Corr * k_f;
  qr[13] *= Corr * k_f * exp(-(g_RT[3] + g_RT[5] - g_RT[6])) * (refC);
  // reaction 3:  H + OH + M => H2O + M
  k_f = 44000000000 * exp((-2) * tc[0]);
  Corr = mixture + sc[4] + (5.3) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  qf[14] *= Corr * k_f;
  qr[14] *= Corr * k_f * exp(-(g_RT[5] + g_RT[6] - g_RT[7])) * (refC);
  // reaction 4:  H2 + OH <=> H + H2O
  k_f = 173 * exp((1.51) * tc[0] - (1725.89729521042) * invT);
  qf[19] *= k_f;
  qr[19] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[6] - g_RT[7]));
  // reaction 5:  2 OH <=> H2O + O
  k_f = 0.0397 * exp((2.4) * tc[0] - (-1061.9985158476) * invT);
  qf[20] *= k_f;
  qr[20] *= k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]));
  // reaction 6:  H + O2 (+M) => HO2 (+M)
  k_f = 5120000 * exp((0.44) * tc[0]);
  Corr = mixture + (-0.25) * sc[4] + (10.89) * sc[7] + (-0.15) * sc[8] +
         (0.0900000000000001) * sc[11] + (1.18) * sc[15];
  redP = Corr / k_f * 63300000 * exp(-1.4 * tc[0]);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(0.0 + 0.5 * exp(-tc[1] * 1e-10) + exp(-10000000000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[0] *= Corr * k_f;
  qr[0] *= Corr * k_f * exp(-(g_RT[5] + g_RT[8] - g_RT[9])) * (refC);
  // reaction 7:  H + O2 <=> O + OH
  k_f = 26400000000 * exp((-0.67) * tc[0] - (8575.37055581147) * invT);
  qf[21] *= k_f;
  qr[21] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[8]));
  // reaction 8:  H + HO2 => H2 + O2
  k_f = 3.649 * exp((2.07) * tc[0] - (-549.643435391863) * invT);
  qf[22] *= k_f;
  qr[22] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[8] + g_RT[9]));
  // reaction 9:  H + HO2 => H2O + O
  k_f = 3970000 * exp(-(337.965344921108) * invT);
  qf[23] *= k_f;
  qr[23] *= k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[7] + g_RT[9]));
  // reaction 10:  H + HO2 => 2 OH
  k_f = 74900000 * exp(-(319.925027452009) * invT);
  qf[24] *= k_f;
  qr[24] *= k_f * exp(-(g_RT[5] - 2.000000 * g_RT[6] + g_RT[9]));
  // reaction 11:  HO2 + O => O2 + OH
  k_f = 40000000;
  qf[25] *= k_f;
  qr[25] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[8] + g_RT[9]));
  // reaction 12:  HO2 + OH => H2O + O2
  k_f = 23800000 * exp(-(-251.366788902774) * invT);
  qf[26] *= k_f;
  qr[26] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[8] + g_RT[9]));
  // reaction 13:  HO2 + OH => H2O + O2
  k_f = 10000000000 * exp(-(8720.90081556219) * invT);
  qf[27] *= k_f;
  qr[27] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[8] + g_RT[9]));
  // reaction 14:  CH + O => CO + H
  k_f = 57000000;
  qf[28] *= k_f;
  qr[28] *= k_f * exp(-(g_RT[3] - g_RT[5] + g_RT[10] - g_RT[11]));
  // reaction 15:  CH + OH => H + HCO
  k_f = 30000000;
  qf[29] *= k_f;
  qr[29] *= k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[10] - g_RT[12]));
  // reaction 16:  CH + H2 <=> H + T-CH2
  k_f = 108000000 * exp(-(1564.73209365314) * invT);
  qf[30] *= k_f;
  qr[30] *= k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[5] + g_RT[10]));
  // reaction 17:  CH + H2O => CH2O + H
  k_f = 5710000 * exp(-(-380.059419015673) * invT);
  qf[31] *= k_f;
  qr[31] *= k_f * exp(-(-g_RT[5] + g_RT[7] + g_RT[10] - g_RT[13]));
  // reaction 18:  CH + O2 => HCO + O
  k_f = 67100000;
  qf[32] *= k_f;
  qr[32] *= k_f * exp(-(-g_RT[3] + g_RT[8] + g_RT[10] - g_RT[12]));
  // reaction 19:  O + T-CH2 => H + HCO
  k_f = 80000000;
  qf[33] *= k_f;
  qr[33] *= k_f * exp(-(g_RT[2] + g_RT[3] - g_RT[5] - g_RT[12]));
  // reaction 20:  OH + T-CH2 => CH2O + H
  k_f = 20000000;
  qf[34] *= k_f;
  qr[34] *= k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[6] - g_RT[13]));
  // reaction 21:  OH + T-CH2 <=> CH + H2O
  k_f = 11.3 * exp((2) * tc[0] - (1509.40845341457) * invT);
  qf[35] *= k_f;
  qr[35] *= k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[7] - g_RT[10]));
  // reaction 22:  H2 + T-CH2 <=> CH3 + H
  k_f = 0.5 * exp((2) * tc[0] - (3638.21623643486) * invT);
  qf[36] *= k_f;
  qr[36] *= k_f * exp(-(g_RT[2] + g_RT[4] - g_RT[5] - g_RT[14]));
  // reaction 23:  O2 + T-CH2 => CO2 + 2 H
  k_f = 5800000 * exp(-(755.308086706252) * invT);
  qf[37] *= k_f;
  qr[37] *=
    k_f * exp(-(g_RT[2] - 2.000000 * g_RT[5] + g_RT[8] - g_RT[15])) * (refCinv);
  // reaction 24:  O2 + T-CH2 => CH2O + O
  k_f = 2400000 * exp(-(755.308086706252) * invT);
  qf[38] *= k_f;
  qr[38] *= k_f * exp(-(g_RT[2] - g_RT[3] + g_RT[8] - g_RT[13]));
  // reaction 25:  O2 + T-CH2 => CO + H + OH
  k_f = 5000000 * exp(-(755.308086706252) * invT);
  qf[39] *= k_f;
  qr[39] *=
    k_f * exp(-(g_RT[2] - g_RT[5] - g_RT[6] + g_RT[8] - g_RT[11])) * (refCinv);
  // reaction 26:  H2 + S-CH2 <=> CH3 + H
  k_f = 70000000;
  qf[40] *= k_f;
  qr[40] *= k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5] - g_RT[14]));
  // reaction 27:  O2 + S-CH2 => CO + H + OH
  k_f = 28000000;
  qf[41] *= k_f;
  qr[41] *=
    k_f * exp(-(g_RT[1] - g_RT[5] - g_RT[6] + g_RT[8] - g_RT[11])) * (refCinv);
  // reaction 28:  O2 + S-CH2 => CO + H2O
  k_f = 12000000;
  qf[42] *= k_f;
  qr[42] *= k_f * exp(-(g_RT[1] - g_RT[7] + g_RT[8] - g_RT[11]));
  // reaction 29:  H2O + S-CH2 (+M) => CH2O + H2 (+M)
  k_f = 482000000000 * exp((-1.16) * tc[0] - (576.102567679875) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 1.88e+26 * exp(-6.36 * tc[0] - (2536.52902215524) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.3973) * exp(-tc[1] * 0.00480769230769231) +
    0.6027 * exp(-tc[1] * 0.000254971953085161) + exp(-10180 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[1] *= Corr * k_f;
  qr[1] *= Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[7] - g_RT[13]));
  // reaction 30:  H2O + S-CH2 <=> H2O + T-CH2
  k_f = 30000000;
  qf[43] *= k_f;
  qr[43] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[7] - g_RT[7]));
  // reaction 31:  H2O + S-CH2 => CH2O + H2
  k_f = 68200 * exp((0.25) * tc[0] - (-470.261006361169) * invT);
  qf[44] *= k_f;
  qr[44] *= k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[7] - g_RT[13]));
  // reaction 32:  CH3 + H (+M) <=> CH4 (+M)
  k_f = 69200000 * exp((0.18) * tc[0]);
  Corr = mixture + sc[4] + (5) * sc[7] + (0.5) * sc[11] + sc[15] +
         (2) * sc[16] + (2) * sc[26];
  redP = Corr / k_f * 3.47e+26 * exp(-6.3 * tc[0] - (2553.36665179307) * invT);
  Corr = redP / (1. + redP);
  qf[12] *= Corr * k_f;
  qr[12] *= Corr * k_f * exp(-(g_RT[5] + g_RT[14] - g_RT[16])) * (refC);
  // reaction 33:  CH3 + O => CH2O + H
  k_f = 50600000;
  qf[45] *= k_f;
  qr[45] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[13] + g_RT[14]));
  // reaction 34:  CH3 + O => CO + H + H2
  k_f = 33700000;
  qf[46] *= k_f;
  qr[46] *=
    k_f * exp(-(g_RT[3] - g_RT[4] - g_RT[5] - g_RT[11] + g_RT[14])) * (refCinv);
  // reaction 35:  CH3 + OH (+M) => CH2O + H2 (+M)
  k_f = 2790000000000 * exp((-1.43) * tc[0] - (669.912218519191) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 4e+24 * exp(-5.92 * tc[0] - (1580.37206762635) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.588) * exp(-tc[1] * 0.00512820512820513) +
    0.412 * exp(-tc[1] * 0.000169491525423729) + exp(-6394 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[2] *= Corr * k_f;
  qr[2] *= Corr * k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[13] + g_RT[14]));
  // reaction 36:  CH3 + OH <=> H2O + T-CH2
  k_f = 56 * exp((1.6) * tc[0] - (2727.76141949435) * invT);
  qf[47] *= k_f;
  qr[47] *= k_f * exp(-(-g_RT[2] + g_RT[6] - g_RT[7] + g_RT[14]));
  // reaction 37:  CH3 + OH <=> H2O + S-CH2
  k_f = 644000000000 * exp((-1.34) * tc[0] - (713.208980445029) * invT);
  qf[48] *= k_f;
  qr[48] *= k_f * exp(-(-g_RT[1] + g_RT[6] - g_RT[7] + g_RT[14]));
  // reaction 38:  CH3 + O2 => CH2O + H + O
  k_f = 13800000 * exp(-(15338.2452603942) * invT);
  qf[49] *= k_f;
  qr[49] *= k_f * exp(-(-g_RT[3] - g_RT[5] + g_RT[8] - g_RT[13] + g_RT[14])) *
            (refCinv);
  // reaction 39:  CH3 + O2 => CH2O + OH
  k_f = 587000 * exp(-(6964.93129240328) * invT);
  qf[50] *= k_f;
  qr[50] *= k_f * exp(-(-g_RT[6] + g_RT[8] - g_RT[13] + g_RT[14]));
  // reaction 40:  CH3 + HO2 => CH2O + H + OH
  k_f = 10000000;
  qf[51] *= k_f;
  qr[51] *= k_f * exp(-(-g_RT[5] - g_RT[6] + g_RT[9] - g_RT[13] + g_RT[14])) *
            (refCinv);
  // reaction 41:  CH3 + HO2 => CH4 + O2
  k_f = 3610000;
  qf[52] *= k_f;
  qr[52] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[14] - g_RT[16]));
  // reaction 42:  CH + CH3 => C2H3 + H
  k_f = 30000000;
  qf[53] *= k_f;
  qr[53] *= k_f * exp(-(-g_RT[5] + g_RT[10] + g_RT[14] - g_RT[17]));
  // reaction 43:  CH3 + T-CH2 => C2H4 + H
  k_f = 100000000;
  qf[54] *= k_f;
  qr[54] *= k_f * exp(-(g_RT[2] - g_RT[5] + g_RT[14] - g_RT[18]));
  // reaction 44:  2 CH3 <=> C2H5 + H
  k_f = 6840000 * exp((0.1) * tc[0] - (5334.04633586345) * invT);
  qf[55] *= k_f;
  qr[55] *= k_f * exp(-(-g_RT[5] + 2.000000 * g_RT[14] - g_RT[19]));
  // reaction 45:  2 CH3 => CH4 + S-CH2
  k_f = 2632000 * exp((-0.06) * tc[0] - (6874.72970505778) * invT);
  qf[56] *= k_f;
  qr[56] *= k_f * exp(-(-g_RT[1] + 2.000000 * g_RT[14] - g_RT[16]));
  // reaction 46:  CH4 + H <=> CH3 + H2
  k_f = 660 * exp((1.62) * tc[0] - (5455.52283898871) * invT);
  qf[57] *= k_f;
  qr[57] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[14] + g_RT[16]));
  // reaction 47:  CH4 + O <=> CH3 + OH
  k_f = 1020 * exp((1.5) * tc[0] - (4327.37649242108) * invT);
  qf[58] *= k_f;
  qr[58] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[16]));
  // reaction 48:  CH4 + OH <=> CH3 + H2O
  k_f = 100 * exp((1.6) * tc[0] - (1569.54284497824) * invT);
  qf[59] *= k_f;
  qr[59] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT[16]));
  // reaction 49:  CH + CH4 => C2H4 + H
  k_f = 60000000;
  qf[60] *= k_f;
  qr[60] *= k_f * exp(-(-g_RT[5] + g_RT[10] + g_RT[16] - g_RT[18]));
  // reaction 50:  CH4 + T-CH2 <=> 2 CH3
  k_f = 2.46 * exp((2) * tc[0] - (4161.40053953871) * invT);
  qf[61] *= k_f;
  qr[61] *= k_f * exp(-(g_RT[2] - 2.000000 * g_RT[14] + g_RT[16]));
  // reaction 51:  CO + O (+M) => CO2 (+M)
  k_f = 13600 * exp(-(1200.31264861068) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP =
    Corr / k_f * 1170000000000 * exp(-2.79 * tc[0] - (2109.56477771991) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[3] *= Corr * k_f;
  qr[3] *= Corr * k_f * exp(-(g_RT[3] + g_RT[11] - g_RT[15])) * (refC);
  // reaction 52:  CO + OH <=> CO2 + H
  k_f = 800000 * exp((0.14) * tc[0] - (3699.55834799645) * invT);
  qf[62] *= k_f;
  qr[62] *= k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15]));
  // reaction 53:  CO + OH <=> CO2 + H
  k_f = 87800 * exp((0.03) * tc[0] - (-8.41881481891296) * invT);
  qf[63] *= k_f;
  qr[63] *= k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15]));
  // reaction 54:  CO + HO2 => CO2 + OH
  k_f = 30100000 * exp(-(11573.741769509) * invT);
  qf[64] *= k_f;
  qr[64] *= k_f * exp(-(-g_RT[6] + g_RT[9] + g_RT[11] - g_RT[15]));
  // reaction 55:  CO + S-CH2 <=> CO + T-CH2
  k_f = 9000000;
  qf[65] *= k_f;
  qr[65] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[11] - g_RT[11]));
  // reaction 56:  H + HCO => CO + H2
  k_f = 120000000;
  qf[66] *= k_f;
  qr[66] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[11] + g_RT[12]));
  // reaction 57:  HCO + O => CO + OH
  k_f = 30000000;
  qf[67] *= k_f;
  qr[67] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[11] + g_RT[12]));
  // reaction 58:  HCO + O => CO2 + H
  k_f = 30000000;
  qf[68] *= k_f;
  qr[68] *= k_f * exp(-(g_RT[3] - g_RT[5] + g_RT[12] - g_RT[15]));
  // reaction 59:  HCO + OH => CO + H2O
  k_f = 30200000;
  qf[69] *= k_f;
  qr[69] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[11] + g_RT[12]));
  // reaction 60:  HCO + M <=> CO + H + M
  k_f = 187000000000 * exp((-1) * tc[0] - (8554.92486267982) * invT);
  Corr = mixture + sc[4] + (-1) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  qf[15] *= Corr * k_f;
  qr[15] *= Corr * k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[12])) * (refCinv);
  // reaction 61:  HCO + H2O <=> CO + H + H2O
  k_f = 2240000000000 * exp((-1) * tc[0] - (8554.92486267982) * invT);
  qf[16] *= k_f;
  qr[16] *= k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[12])) * (refCinv);
  // reaction 62:  HCO + O2 => CO + HO2
  k_f = 12000 * exp((0.81) * tc[0] - (-365.627165040393) * invT);
  qf[70] *= k_f;
  qr[70] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[11] + g_RT[12]));
  // reaction 63:  CH3 + HCO => CH4 + CO
  k_f = 26500000;
  qf[71] *= k_f;
  qr[71] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[14] - g_RT[16]));
  // reaction 64:  CH2O + H <=> H2 + HCO
  k_f = 57.4 * exp((1.9) * tc[0] - (1379.51816763706) * invT);
  qf[72] *= k_f;
  qr[72] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[12] + g_RT[13]));
  // reaction 65:  CH2O + O => HCO + OH
  k_f = 39000000 * exp(-(1781.22093544899) * invT);
  qf[73] *= k_f;
  qr[73] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[12] + g_RT[13]));
  // reaction 66:  CH2O + OH => H2O + HCO
  k_f = 3430 * exp((1.18) * tc[0] - (-224.907656614761) * invT);
  qf[74] *= k_f;
  qr[74] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[12] + g_RT[13]));
  // reaction 67:  CH2O + CH3 => CH4 + HCO
  k_f = 0.00332 * exp((2.81) * tc[0] - (2949.0610126153) * invT);
  qf[75] *= k_f;
  qr[75] *= k_f * exp(-(-g_RT[12] + g_RT[13] + g_RT[14] - g_RT[16]));
  // reaction 68:  CH + CO2 => CO + HCO
  k_f = 190000000 * exp(-(7946.34972355557) * invT);
  qf[76] *= k_f;
  qr[76] *= k_f * exp(-(g_RT[10] - g_RT[11] - g_RT[12] + g_RT[15]));
  // reaction 69:  CO2 + S-CH2 <=> CO2 + T-CH2
  k_f = 7000000;
  qf[77] *= k_f;
  qr[77] *= k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[15] - g_RT[15]));
  // reaction 70:  CO2 + S-CH2 => CH2O + CO
  k_f = 14000000;
  qf[78] *= k_f;
  qr[78] *= k_f * exp(-(g_RT[1] - g_RT[11] - g_RT[13] + g_RT[15]));
  // reaction 71:  C2H + O => CH + CO
  k_f = 50000000;
  qf[79] *= k_f;
  qr[79] *= k_f * exp(-(g_RT[3] - g_RT[10] - g_RT[11] + g_RT[20]));
  // reaction 72:  C2H + OH => H + HCCO
  k_f = 20000000;
  qf[80] *= k_f;
  qr[80] *= k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[20] - g_RT[21]));
  // reaction 73:  C2H + O2 => CO + HCO
  k_f = 10000000 * exp(-(-380.059419015673) * invT);
  qf[81] *= k_f;
  qr[81] *= k_f * exp(-(g_RT[8] - g_RT[11] - g_RT[12] + g_RT[20]));
  // reaction 74:  C2H + H2 <=> C2H2 + H
  k_f = 3.31 * exp((2.26) * tc[0] - (453.423376723343) * invT);
  qf[82] *= k_f;
  qr[82] *= k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[20] - g_RT[22]));
  // reaction 75:  C2H2 + H (+M) <=> C2H3 (+M)
  k_f = 17100 * exp((1.27) * tc[0] - (1362.67550583257) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 6.34e+19 * exp(-4.66 * tc[0] - (1902.69743857425) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.7878) * exp(-tc[1] * 1) + 0.2122 * exp(-tc[1] * -9.79431929480901e-05) +
    0.0);
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[4] *= Corr * k_f;
  qr[4] *= Corr * k_f * exp(-(g_RT[5] - g_RT[17] + g_RT[22])) * (refC);
  // reaction 76:  C2H2 + O => H + HCCO
  k_f = 8.1 * exp((2) * tc[0] - (956.161986695548) * invT);
  qf[83] *= k_f;
  qr[83] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[21] + g_RT[22]));
  // reaction 77:  C2H2 + O => CO + T-CH2
  k_f = 12.5 * exp((2) * tc[0] - (956.161986695548) * invT);
  qf[84] *= k_f;
  qr[84] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[11] + g_RT[22]));
  // reaction 78:  C2H2 + O => C2H + OH
  k_f = 33240000000 * exp((-0.44) * tc[0] - (15447.6948852067) * invT);
  qf[85] *= k_f;
  qr[85] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[20] + g_RT[22]));
  // reaction 79:  C2H2 + OH => C2H + H2O
  k_f = 2.63 * exp((2.14) * tc[0] - (8584.99205846165) * invT);
  qf[86] *= k_f;
  qr[86] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[20] + g_RT[22]));
  // reaction 80:  C2H2 + OH => CH3 + CO
  k_f = 7.53 * exp((1.55) * tc[0] - (1059.59314018505) * invT);
  qf[87] *= k_f;
  qr[87] *= k_f * exp(-(g_RT[6] - g_RT[11] - g_RT[14] + g_RT[22]));
  // reaction 81:  C2H2 + OH => CH3 + CO
  k_f = 1280 * exp((0.73) * tc[0] - (1297.73036294382) * invT);
  qf[88] *= k_f;
  qr[88] *= k_f * exp(-(g_RT[6] - g_RT[11] - g_RT[14] + g_RT[22]));
  // reaction 82:  C2H2 + S-CH2 <=> C3H3 + H
  k_f = 190000000;
  qf[89] *= k_f;
  qr[89] *= k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[22] - g_RT[23]));
  // reaction 83:  C2H3 + H (+M) => C2H4 (+M)
  k_f = 6080000 * exp((0.27) * tc[0] - (140.719508425632) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - (1670.57365497185) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.218) * exp(-tc[1] * 0.00481927710843374) +
    0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[5] *= Corr * k_f;
  qr[5] *= Corr * k_f * exp(-(g_RT[5] + g_RT[17] - g_RT[18])) * (refC);
  // reaction 84:  C2H3 + H => C2H2 + H2
  k_f = 30000000;
  qf[90] *= k_f;
  qr[90] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[17] - g_RT[22]));
  // reaction 85:  C2H3 + O => CH3 + CO
  k_f = 10300000 * exp((0.21) * tc[0] - (-215.286153964575) * invT);
  qf[91] *= k_f;
  qr[91] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[14] + g_RT[17]));
  // reaction 86:  C2H3 + OH => C2H2 + H2O
  k_f = 5000000;
  qf[92] *= k_f;
  qr[92] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[17] - g_RT[22]));
  // reaction 87:  C2H3 + O2 => C2H2 + HO2
  k_f = 1.34 * exp((1.61) * tc[0] - (-193.637773001656) * invT);
  qf[93] *= k_f;
  qr[93] *= k_f * exp(-(g_RT[8] - g_RT[9] + g_RT[17] - g_RT[22]));
  // reaction 88:  C2H3 + O2 => CH3 + CO + O
  k_f = 303000 * exp((0.29) * tc[0] - (6.0134391563664) * invT);
  qf[94] *= k_f;
  qr[94] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[11] - g_RT[14] + g_RT[17])) *
            (refCinv);
  // reaction 89:  C2H3 + O2 => CH2O + HCO
  k_f = 45800000000 * exp((-1.39) * tc[0] - (511.15239262446) * invT);
  qf[95] *= k_f;
  qr[95] *= k_f * exp(-(g_RT[8] - g_RT[12] - g_RT[13] + g_RT[17]));
  // reaction 90:  C2H3 + HCO => C2H4 + CO
  k_f = 90000000;
  qf[96] *= k_f;
  qr[96] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[17] - g_RT[18]));
  // reaction 91:  C2H3 + CH3 => C2H2 + CH4
  k_f = 9030000 * exp(-(-384.870170340766) * invT);
  qf[97] *= k_f;
  qr[97] *= k_f * exp(-(g_RT[14] - g_RT[16] + g_RT[17] - g_RT[22]));
  // reaction 92:  C2H3 + CH3 <=> A-C3H5 + H
  k_f = 1930000000000 * exp((-1.25) * tc[0] - (3859.5158295558) * invT);
  qf[98] *= k_f;
  qr[98] *= k_f * exp(-(-g_RT[5] + g_RT[14] + g_RT[17] - g_RT[24]));
  // reaction 93:  C2H4 + H (+M) <=> C2H5 (+M)
  k_f = 1370 * exp((1.46) * tc[0] - (681.939096831924) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 2.03e+27 * exp(-6.64 * tc[0] - (2903.35887502691) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (1.569) * exp(-tc[1] * 0.00334448160535117) +
    -0.569 * exp(-tc[1] * -0.000109325461900077) + exp(-152.4 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[6] *= Corr * k_f;
  qr[6] *= Corr * k_f * exp(-(g_RT[5] + g_RT[18] - g_RT[19])) * (refC);
  // reaction 94:  C2H4 + H => C2H3 + H2
  k_f = 1.33 * exp((2.53) * tc[0] - (6159.11031678355) * invT);
  qf[99] *= k_f;
  qr[99] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[17] + g_RT[18]));
  // reaction 95:  C2H4 + O => CH3 + CO + H
  k_f = 7660 * exp((0.88) * tc[0] - (573.697192017329) * invT);
  qf[100] *= k_f;
  qr[100] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[11] - g_RT[14] + g_RT[18])) *
             (refCinv);
  // reaction 96:  C2H4 + O => CH2O + T-CH2
  k_f = 0.0715 * exp((2.47) * tc[0] - (467.855630698622) * invT);
  qf[101] *= k_f;
  qr[101] *= k_f * exp(-(-g_RT[2] + g_RT[3] - g_RT[13] + g_RT[18]));
  // reaction 97:  C2H4 + O => CH3 + HCO
  k_f = 389 * exp((1.36) * tc[0] - (446.207249735703) * invT);
  qf[102] *= k_f;
  qr[102] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT[14] + g_RT[18]));
  // reaction 98:  C2H4 + OH => C2H3 + H2O
  k_f = 1.31e-07 * exp((4.2) * tc[0] - (-432.977683591697) * invT);
  qf[103] *= k_f;
  qr[103] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[17] + g_RT[18]));
  // reaction 99:  C2H4 + OH => CH2O + CH3
  k_f = 3.75e+30 * exp((-7.8) * tc[0] - (3552.82540041446) * invT);
  qf[104] *= k_f;
  qr[104] *= k_f * exp(-(g_RT[6] - g_RT[13] - g_RT[14] + g_RT[18]));
  // reaction 100:  C2H4 + CH3 => C2H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.25617023733) * invT);
  qf[105] *= k_f;
  qr[105] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[17] + g_RT[18]));
  // reaction 101:  C2H4 + CH3 (+M) <=> N-C3H7 (+M)
  k_f = 2.55 * exp((1.6) * tc[0] - (2868.48092791999) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 3e+51 * exp(-14.6 * tc[0] - (9143.05430867243) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.8106) * exp(-tc[1] * 0.0036101083032491) +
    0.1894 * exp(-tc[1] * 0.000114311842706904) + exp(-7891 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[7] *= Corr * k_f;
  qr[7] *= Corr * k_f * exp(-(g_RT[14] + g_RT[18] - g_RT[25])) * (refC);
  // reaction 102:  C2H5 + H (+M) <=> C2H6 (+M)
  k_f = 521000000000 * exp((-0.99) * tc[0] - (794.99678513827) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - (3363.99837873789) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.1578) * exp(-tc[1] * 0.008) +
    0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[8] *= Corr * k_f;
  qr[8] *= Corr * k_f * exp(-(g_RT[5] + g_RT[19] - g_RT[26])) * (refC);
  // reaction 103:  C2H5 + O => CH2O + CH3
  k_f = 31700000 * exp((0.03) * tc[0] - (-198.448524326749) * invT);
  qf[106] *= k_f;
  qr[106] *= k_f * exp(-(g_RT[3] - g_RT[13] - g_RT[14] + g_RT[19]));
  // reaction 104:  C2H5 + O2 => C2H4 + HO2
  k_f = 19.2 * exp((1.02) * tc[0] - (-1023.51250524685) * invT);
  qf[107] *= k_f;
  qr[107] *= k_f * exp(-(g_RT[8] - g_RT[9] - g_RT[18] + g_RT[19]));
  // reaction 105:  C2H5 + HCO => C2H6 + CO
  k_f = 120000000;
  qf[108] *= k_f;
  qr[108] *= k_f * exp(-(-g_RT[11] + g_RT[12] + g_RT[19] - g_RT[26]));
  // reaction 106:  C2H5 + HO2 => C2H6 + O2
  k_f = 300000;
  qf[109] *= k_f;
  qr[109] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[19] - g_RT[26]));
  // reaction 107:  C2H5 + HO2 => CH2O + CH3 + OH
  k_f = 31000000;
  qf[110] *= k_f;
  qr[110] *= k_f * exp(-(-g_RT[6] + g_RT[9] - g_RT[13] - g_RT[14] + g_RT[19])) *
             (refCinv);
  // reaction 108:  C2H6 (+M) <=> 2 CH3 (+M)
  k_f = 1.88e+50 * exp((-9.72) * tc[0] - (54016.4141771433) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP =
    Corr / k_f * 3.72e+59 * exp(-13.14 * tc[0] - (51116.6633656102) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.61) * exp(-tc[1] * 0.01) + 0.39 * exp(-tc[1] * 0.000526315789473684) +
    exp(-6000 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[9] *= Corr * k_f;
  qr[9] *= Corr * k_f * exp(-(-2.000000 * g_RT[14] + g_RT[26])) * (refCinv);
  // reaction 109:  C2H6 + H => C2H5 + H2
  k_f = 0.17 * exp((2.7) * tc[0] - (2888.92662105163) * invT);
  qf[111] *= k_f;
  qr[111] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[19] + g_RT[26]));
  // reaction 110:  C2H6 + O => C2H5 + OH
  k_f = 89.8 * exp((1.92) * tc[0] - (2863.67017659489) * invT);
  qf[112] *= k_f;
  qr[112] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[19] + g_RT[26]));
  // reaction 111:  C2H6 + OH => C2H5 + H2O
  k_f = 1.61 * exp((2.22) * tc[0] - (372.843292028033) * invT);
  qf[113] *= k_f;
  qr[113] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[19] + g_RT[26]));
  // reaction 112:  C2H6 + CH3 => C2H5 + CH4
  k_f = 843000000 * exp(-(11199.6957896497) * invT);
  qf[114] *= k_f;
  qr[114] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[19] + g_RT[26]));
  // reaction 113:  HCCO (+M) => CH + CO (+M)
  k_f = 2.255e+20 * exp((-1.44) * tc[0] - (37606.5438660847) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP =
    Corr / k_f * 1.213e+29 * exp(-5.18 * tc[0] - (38580.7461702494) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(
    (0.4243) * exp(-tc[1] * 0.00421940928270042) +
    0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[10] *= Corr * k_f;
  qr[10] *= Corr * k_f * exp(-(-g_RT[10] - g_RT[11] + g_RT[21])) * (refCinv);
  // reaction 114:  H + HCCO => CO + S-CH2
  k_f = 100000000;
  qf[115] *= k_f;
  qr[115] *= k_f * exp(-(-g_RT[1] + g_RT[5] - g_RT[11] + g_RT[21]));
  // reaction 115:  HCCO + O => 2 CO + H
  k_f = 100000000;
  qf[116] *= k_f;
  qr[116] *= k_f * exp(-(g_RT[3] - g_RT[5] - 2.000000 * g_RT[11] + g_RT[21])) *
             (refCinv);
  // reaction 116:  HCCO + O2 => 2 CO + OH
  k_f = 42000 * exp(-(429.369620097877) * invT);
  qf[117] *= k_f;
  qr[117] *= k_f * exp(-(-g_RT[6] + g_RT[8] - 2.000000 * g_RT[11] + g_RT[21])) *
             (refCinv);
  // reaction 117:  2 HCCO => C2H2 + 2 CO
  k_f = 10000000;
  qf[118] *= k_f;
  qr[118] *= k_f *
             exp(-(-2.000000 * g_RT[11] + 2.000000 * g_RT[21] - g_RT[22])) *
             (refCinv);
  // reaction 118:  C2H2 + HCCO => C3H3 + CO
  k_f = 100000 * exp(-(1509.40845341457) * invT);
  qf[119] *= k_f;
  qr[119] *= k_f * exp(-(-g_RT[11] + g_RT[21] + g_RT[22] - g_RT[23]));
  // reaction 119:  CH3 + HCCO => C2H4 + CO
  k_f = 50000000;
  qf[120] *= k_f;
  qr[120] *= k_f * exp(-(-g_RT[11] + g_RT[14] - g_RT[18] + g_RT[21]));
  // reaction 120:  HCCO + OH => 2 HCO
  k_f = 10000000;
  qf[121] *= k_f;
  qr[121] *= k_f * exp(-(g_RT[6] - 2.000000 * g_RT[12] + g_RT[21]));
  // reaction 121:  C3H3 + H <=> P-C3H4
  k_f = 7.94e+23 * exp((-5.06) * tc[0] - (2446.32743480975) * invT);
  qf[122] *= k_f;
  qr[122] *= k_f * exp(-(g_RT[5] + g_RT[23] - g_RT[27])) * (refC);
  // reaction 122:  C3H3 + H <=> A-C3H4
  k_f = 3.16e+23 * exp((-5) * tc[0] - (2370.55306927287) * invT);
  qf[123] *= k_f;
  qr[123] *= k_f * exp(-(g_RT[5] + g_RT[23] - g_RT[28])) * (refC);
  // reaction 123:  C3H3 + OH => C2H4 + CO
  k_f = 1280 * exp((0.73) * tc[0] - (1297.73036294382) * invT);
  qf[124] *= k_f;
  qr[124] *= k_f * exp(-(g_RT[6] - g_RT[11] - g_RT[18] + g_RT[23]));
  // reaction 124:  C3H3 + O => C2H2 + CO + H
  k_f = 69500000;
  qf[125] *= k_f;
  qr[125] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[11] - g_RT[22] + g_RT[23])) *
             (refCinv);
  // reaction 125:  C3H3 + O2 => CH3 + 2 CO
  k_f = 0.17 * exp((1.7) * tc[0] - (755.308086706252) * invT);
  qf[126] *= k_f;
  qr[126] *= k_f * exp(-(g_RT[8] - 2.000000 * g_RT[11] - g_RT[14] + g_RT[23])) *
             (refCinv);
  // reaction 126:  C3H3 + HO2 => C2H3 + CO + OH
  k_f = 800000;
  qf[127] *= k_f;
  qr[127] *= k_f * exp(-(-g_RT[6] + g_RT[9] - g_RT[11] - g_RT[17] + g_RT[23])) *
             (refCinv);
  // reaction 127:  2 C3H3 <=> A1
  k_f = 1.87e+40 * exp((-9.84) * tc[0] - (8456.29942834876) * invT);
  qf[128] *= k_f;
  qr[128] *= k_f * exp(-(2.000000 * g_RT[23] - g_RT[29])) * (refC);
  // reaction 128:  2 C3H3 <=> A1- + H
  k_f = 5.77e+31 * exp((-7) * tc[0] - (15854.2134365104) * invT);
  qf[129] *= k_f;
  qr[129] *= k_f * exp(-(-g_RT[5] + 2.000000 * g_RT[23] - g_RT[30]));
  // reaction 129:  C2H2 + C3H3 <=> C5H5
  k_f = 235000 * exp(-(5029.76128238465) * invT);
  qf[130] *= k_f;
  qr[130] *= k_f * exp(-(g_RT[22] + g_RT[23] - g_RT[31])) * (refC);
  // reaction 130:  H + P-C3H4 <=> C2H2 + CH3
  k_f = 3460000 * exp((0.44) * tc[0] - (2749.40980045727) * invT);
  qf[131] *= k_f;
  qr[131] *= k_f * exp(-(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[27]));
  // reaction 131:  H + P-C3H4 <=> C3H3 + H2
  k_f = 0.085 * exp((2.7) * tc[0] - (2888.92662105163) * invT);
  qf[132] *= k_f;
  qr[132] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[23] + g_RT[27]));
  // reaction 132:  OH + P-C3H4 => C3H3 + H2O
  k_f = 0.805 * exp((2.22) * tc[0] - (372.843292028033) * invT);
  qf[133] *= k_f;
  qr[133] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[23] + g_RT[27]));
  // reaction 133:  CH3 + P-C3H4 => C3H3 + CH4
  k_f = 422000000 * exp(-(11199.6957896497) * invT);
  qf[134] *= k_f;
  qr[134] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[23] + g_RT[27]));
  // reaction 134:  O + P-C3H4 => CH3 + HCCO
  k_f = 4.05 * exp((2) * tc[0] - (956.161986695548) * invT);
  qf[135] *= k_f;
  qr[135] *= k_f * exp(-(g_RT[3] - g_RT[14] - g_RT[21] + g_RT[27]));
  // reaction 135:  O + P-C3H4 => C2H4 + CO
  k_f = 6.25 * exp((2) * tc[0] - (956.161986695548) * invT);
  qf[136] *= k_f;
  qr[136] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[18] + g_RT[27]));
  // reaction 136:  OH + P-C3H4 => C2H5 + CO
  k_f = 1280 * exp((0.73) * tc[0] - (1297.73036294382) * invT);
  qf[137] *= k_f;
  qr[137] *= k_f * exp(-(g_RT[6] - g_RT[11] - g_RT[19] + g_RT[27]));
  // reaction 137:  A-C3H4 + H <=> C2H2 + CH3
  k_f = 89500000 * exp((-0.02) * tc[0] - (5661.1874903031) * invT);
  qf[138] *= k_f;
  qr[138] *= k_f * exp(-(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[28]));
  // reaction 138:  A-C3H4 <=> P-C3H4
  k_f = 7.76e+39 * exp((-7.8) * tc[0] - (39475.5660453833) * invT);
  qf[139] *= k_f;
  qr[139] *= k_f * exp(-(-g_RT[27] + g_RT[28]));
  // reaction 139:  A-C3H4 + H <=> H + P-C3H4
  k_f = 2470000000 * exp((-0.33) * tc[0] - (3238.91381211881) * invT);
  qf[140] *= k_f;
  qr[140] *= k_f * exp(-(g_RT[5] - g_RT[5] - g_RT[27] + g_RT[28]));
  // reaction 140:  A-C3H4 + H => C3H3 + H2
  k_f = 1.33 * exp((2.53) * tc[0] - (6159.11031678355) * invT);
  qf[141] *= k_f;
  qr[141] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[23] + g_RT[28]));
  // reaction 141:  A-C3H4 + OH => C3H3 + H2O
  k_f = 1.31e-07 * exp((4.2) * tc[0] - (-432.977683591697) * invT);
  qf[142] *= k_f;
  qr[142] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[23] + g_RT[28]));
  // reaction 142:  A-C3H4 + CH3 => C3H3 + CH4
  k_f = 0.227 * exp((2) * tc[0] - (4629.25617023733) * invT);
  qf[143] *= k_f;
  qr[143] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[23] + g_RT[28]));
  // reaction 143:  A-C3H4 + H <=> A-C3H5
  k_f = 2.01e+43 * exp((-10.77) * tc[0] - (9874.30360658656) * invT);
  qf[144] *= k_f;
  qr[144] *= k_f * exp(-(g_RT[5] - g_RT[24] + g_RT[28])) * (refC);
  // reaction 144:  A-C3H5 + H => A-C3H4 + H2
  k_f = 0.00956 * exp((2.8) * tc[0] - (1656.14140099657) * invT);
  qf[145] *= k_f;
  qr[145] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[24] - g_RT[28]));
  // reaction 145:  A-C3H5 + OH => A-C3H4 + H2O
  k_f = 6030000;
  qf[146] *= k_f;
  qr[146] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[24] - g_RT[28]));
  // reaction 146:  A-C3H5 + CH3 => A-C3H4 + CH4
  k_f = 486000 * exp((-0.32) * tc[0] - (-66.1478307200304) * invT);
  qf[147] *= k_f;
  qr[147] *= k_f * exp(-(g_RT[14] - g_RT[16] + g_RT[24] - g_RT[28]));
  // reaction 147:  A-C3H5 + O2 => C2H2 + CH2O + OH
  k_f = 971000000000000 * exp((-2.7) * tc[0] - (12570.7951424678) * invT);
  qf[148] *= k_f;
  qr[148] *= k_f * exp(-(-g_RT[6] + g_RT[8] - g_RT[13] - g_RT[22] + g_RT[24])) *
             (refCinv);
  // reaction 148:  A-C3H5 + C3H3 => A1 + 2 H
  k_f = 2.16e+33 * exp((-7.74) * tc[0] - (12003.1113896068) * invT);
  qf[149] *= k_f;
  qr[149] *= k_f *
             exp(-(-2.000000 * g_RT[5] + g_RT[23] + g_RT[24] - g_RT[29])) *
             (refCinv);
  // reaction 149:  C3H6 + H (+M) <=> N-C3H7 (+M)
  k_f = 306000000 * exp((-0.37) * tc[0] - (2028.9846930246) * invT);
  Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] + (2.6) * sc[15] +
         sc[16] + (2) * sc[26];
  redP = Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - (3522.75820463262) * invT);
  F = redP / (1.0 + redP);
  logPred = log10(redP);
  logFcent = log10(+exp(-tc[1] * 0.000763358778625954) + exp(-48100 * invT));
  troe_c = -0.4 - 0.67 * logFcent;
  troe_n = 0.75 - 1.27 * logFcent;
  troe = (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
  F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
  Corr = F * F_troe;
  qf[11] *= Corr * k_f;
  qr[11] *= Corr * k_f * exp(-(g_RT[5] - g_RT[25] + g_RT[32])) * (refC);
  // reaction 150:  C3H6 <=> C2H3 + CH3
  k_f = 4.04e+42 * exp((-7.67) * tc[0] - (56275.1122459411) * invT);
  qf[150] *= k_f;
  qr[150] *= k_f * exp(-(-g_RT[14] - g_RT[17] + g_RT[32])) * (refCinv);
  // reaction 151:  A-C3H5 + H <=> C3H6
  k_f = 5.93e+48 * exp((-11.76) * tc[0] - (11850.3700350351) * invT);
  qf[151] *= k_f;
  qr[151] *= k_f * exp(-(g_RT[5] + g_RT[24] - g_RT[32])) * (refC);
  // reaction 152:  C3H6 + H <=> C2H4 + CH3
  k_f = 8e+15 * exp((-2.39) * tc[0] - (5626.30954319617) * invT);
  qf[152] *= k_f;
  qr[152] *= k_f * exp(-(g_RT[5] - g_RT[14] - g_RT[18] + g_RT[32]));
  // reaction 153:  C3H6 + O => 2 CH3 + CO
  k_f = 120 * exp((1.6) * tc[0] - (164.773265051097) * invT);
  qf[153] *= k_f;
  qr[153] *= k_f * exp(-(g_RT[3] - g_RT[11] - 2.000000 * g_RT[14] + g_RT[32])) *
             (refCinv);
  // reaction 154:  C3H6 + O => C2H5 + HCO
  k_f = 35 * exp((1.6) * tc[0] - (-489.504011661541) * invT);
  qf[154] *= k_f;
  qr[154] *= k_f * exp(-(g_RT[3] - g_RT[12] - g_RT[19] + g_RT[32]));
  // reaction 155:  C3H6 + H => A-C3H5 + H2
  k_f = 0.66 * exp((2.54) * tc[0] - (3400.07901367609) * invT);
  qf[155] *= k_f;
  qr[155] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[24] + g_RT[32]));
  // reaction 156:  C3H6 + O => A-C3H5 + OH
  k_f = 0.0965 * exp((2.68) * tc[0] - (1870.22486712987) * invT);
  qf[156] *= k_f;
  qr[156] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[24] + g_RT[32]));
  // reaction 157:  C3H6 + OH => A-C3H5 + H2O
  k_f = 200 * exp((1.46) * tc[0] - (270.609794203146) * invT);
  qf[157] *= k_f;
  qr[157] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[24] + g_RT[32]));
  // reaction 158:  C3H6 + CH3 => A-C3H5 + CH4
  k_f = 4.52e-07 * exp((3.65) * tc[0] - (3599.73022583411) * invT);
  qf[158] *= k_f;
  qr[158] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[24] + g_RT[32]));
  // reaction 159:  C4H8 + H => C2H4 + C2H5
  k_f = 7680000 * exp((0.11) * tc[0] - (744.483896224792) * invT);
  qf[159] *= k_f;
  qr[159] *= k_f * exp(-(g_RT[5] - g_RT[18] - g_RT[19] + g_RT[33]));
  // reaction 160:  C4H8 => A-C3H5 + CH3
  k_f = 5e+15 * exp(-(35727.9001841359) * invT);
  qf[160] *= k_f;
  qr[160] *= k_f * exp(-(-g_RT[14] - g_RT[24] + g_RT[33])) * (refCinv);
  // reaction 161:  C5H5 + HO2 => C5H6 + O2
  k_f = 2561000 * exp((0.06) * tc[0] - (1568.34015714696) * invT);
  qf[161] *= k_f;
  qr[161] *= k_f * exp(-(-g_RT[8] + g_RT[9] + g_RT[31] - g_RT[34]));
  // reaction 162:  2 C5H5 => A2 + 2 H
  k_f = 6.39e+23 * exp((-4.03) * tc[0] - (17716.0144566547) * invT);
  qf[162] *= k_f;
  qr[162] *= k_f *
             exp(-(-2.000000 * g_RT[5] + 2.000000 * g_RT[31] - g_RT[35])) *
             (refCinv);
  // reaction 163:  C5H5 + O => C2H2 + C2H3 + CO
  k_f = 70000000;
  qf[163] *= k_f;
  qr[163] *= k_f * exp(-(g_RT[3] - g_RT[11] - g_RT[17] - g_RT[22] + g_RT[31])) *
             (refCinv);
  // reaction 164:  C5H5 + HO2 => C2H2 + C2H3 + CO + OH
  k_f = 6.776e+23 * exp((-4.7) * tc[0] - (5866.85214161749) * invT);
  qf[164] *= k_f;
  qr[164] *=
    k_f *
    exp(-(-g_RT[6] + g_RT[9] - g_RT[11] - g_RT[17] - g_RT[22] + g_RT[31])) *
    ((refCinv * refCinv));
  // reaction 165:  C5H5 + HO2 => 2 C2H2 + CO + H2O
  k_f = 1.19e+27 * exp((-6.52) * tc[0] - (6743.63169928234) * invT);
  qf[165] *= k_f;
  qr[165] *=
    k_f *
    exp(-(-g_RT[7] + g_RT[9] - g_RT[11] - 2.000000 * g_RT[22] + g_RT[31])) *
    ((refCinv * refCinv));
  // reaction 166:  C5H5 + OH => C2H2 + C2H3 + CO + H
  k_f = 30200000;
  qf[166] *= k_f;
  qr[166] *=
    k_f *
    exp(-(-g_RT[5] + g_RT[6] - g_RT[11] - g_RT[17] - g_RT[22] + g_RT[31])) *
    ((refCinv * refCinv));
  // reaction 167:  C5H6 <=> C5H5 + H
  k_f = 1.73e+68 * exp((-15.16) * tc[0] - (58560.2744791936) * invT);
  qf[167] *= k_f;
  qr[167] *= k_f * exp(-(-g_RT[5] - g_RT[31] + g_RT[34])) * (refCinv);
  // reaction 168:  C5H6 + H => C5H5 + H2
  k_f = 28000000 * exp(-(1136.56516138654) * invT);
  qf[168] *= k_f;
  qr[168] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[31] + g_RT[34]));
  // reaction 169:  C5H6 + H => A-C3H5 + C2H2
  k_f = 660000000 * exp(-(6212.03361352623) * invT);
  qf[169] *= k_f;
  qr[169] *= k_f * exp(-(g_RT[5] - g_RT[22] - g_RT[24] + g_RT[34]));
  // reaction 170:  C5H6 + O => C5H5 + OH
  k_f = 0.0477 * exp((2.71) * tc[0] - (556.859562379503) * invT);
  qf[170] *= k_f;
  qr[170] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[31] + g_RT[34]));
  // reaction 171:  C5H6 + OH => C5H5 + H2O
  k_f = 3.08 * exp((2) * tc[0]);
  qf[171] *= k_f;
  qr[171] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[31] + g_RT[34]));
  // reaction 172:  C5H6 + CH3 => C5H5 + CH4
  k_f = 1.8e-07 * exp((4) * tc[0]);
  qf[172] *= k_f;
  qr[172] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[31] + g_RT[34]));
  // reaction 173:  C5H10 + H => C5H11
  k_f = 7100000 * exp((0.12) * tc[0] - (734.862393574606) * invT);
  qf[173] *= k_f;
  qr[173] *= k_f * exp(-(g_RT[5] + g_RT[36] - g_RT[37])) * (refC);
  // reaction 174:  C5H10 => A-C3H5 + C2H5
  k_f = 9.17e+20 * exp((-1.63) * tc[0] - (37232.5029183921) * invT);
  qf[174] *= k_f;
  qr[174] *= k_f * exp(-(-g_RT[19] - g_RT[24] + g_RT[36])) * (refCinv);
  // reaction 175:  C5H11 => C2H4 + N-C3H7
  k_f = 7.46e+21 * exp((-2.61) * tc[0] - (16116.4044158946) * invT);
  qf[175] *= k_f;
  qr[175] *= k_f * exp(-(-g_RT[18] - g_RT[25] + g_RT[37])) * (refCinv);
  // reaction 176:  C5H11 => C5H10 + H
  k_f = 846000000000000 * exp((-0.47) * tc[0] - (18929.5566714094) * invT);
  qf[176] *= k_f;
  qr[176] *= k_f * exp(-(-g_RT[5] - g_RT[36] + g_RT[37])) * (refCinv);
  // reaction 177:  C5H11 => C2H5 + C3H6
  k_f = 3.15e-19 * exp((8.84) * tc[0] - (3575.67646920865) * invT);
  qf[177] *= k_f;
  qr[177] *= k_f * exp(-(-g_RT[19] - g_RT[32] + g_RT[37])) * (refCinv);
  // reaction 178:  A1- + O2 => C5H5 + CO + O
  k_f = 26000000 * exp(-(3080.15901839074) * invT);
  qf[178] *= k_f;
  qr[178] *= k_f * exp(-(-g_RT[3] + g_RT[8] - g_RT[11] + g_RT[30] - g_RT[31])) *
             (refCinv);
  // reaction 179:  A1- + O2 => 2 C2H2 + 2 CO + H
  k_f = 30000000 * exp(-(4518.60888976019) * invT);
  qf[179] *= k_f;
  qr[179] *= k_f *
             exp(
               -(-g_RT[5] + g_RT[8] - 2.000000 * g_RT[11] -
                 2.000000 * g_RT[22] + g_RT[30])) *
             ((refCinv * refCinv * refCinv));
  // reaction 180:  A1- + O => C5H5 + CO
  k_f = 100000000;
  qf[180] *= k_f;
  qr[180] *= k_f * exp(-(g_RT[3] - g_RT[11] + g_RT[30] - g_RT[31]));
  // reaction 181:  A1- + OH => C5H6 + CO
  k_f = 30000000;
  qf[181] *= k_f;
  qr[181] *= k_f * exp(-(g_RT[6] - g_RT[11] + g_RT[30] - g_RT[34]));
  // reaction 182:  A1- + HO2 => C5H5 + CO + OH
  k_f = 30000000;
  qf[182] *= k_f;
  qr[182] *= k_f * exp(-(-g_RT[6] + g_RT[9] - g_RT[11] + g_RT[30] - g_RT[31])) *
             (refCinv);
  // reaction 183:  A1- + C2H2 <=> A1C2H2
  k_f = 3.29 * exp((2.05) * tc[0] - (1591.19625810781) * invT);
  qf[183] *= k_f;
  qr[183] *= k_f * exp(-(g_RT[22] + g_RT[30] - g_RT[38])) * (refC);
  // reaction 184:  A1 <=> A1- + H
  k_f = 1.29e+61 * exp((-12.48) * tc[0] - (74519.1217570248) * invT);
  qf[184] *= k_f;
  qr[184] *= k_f * exp(-(-g_RT[5] + g_RT[29] - g_RT[30])) * (refCinv);
  // reaction 185:  A1 + H => A1- + H2
  k_f = 602 * exp((1.8) * tc[0] - (8228.98639607145) * invT);
  qf[185] *= k_f;
  qr[185] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[29] - g_RT[30]));
  // reaction 186:  A1 + OH => A1- + H2O
  k_f = 0.000403 * exp((3.33) * tc[0] - (732.451985745402) * invT);
  qf[186] *= k_f;
  qr[186] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[29] - g_RT[30]));
  // reaction 187:  A1 + CH3 => A1- + CH4
  k_f = 2.752e-08 * exp((4.46) * tc[0] - (6862.70282674505) * invT);
  qf[187] *= k_f;
  qr[187] *= k_f * exp(-(g_RT[14] - g_RT[16] + g_RT[29] - g_RT[30]));
  // reaction 188:  A1 + O => C5H5 + CO + H
  k_f = 22200000 * exp(-(2280.35148192738) * invT);
  qf[188] *= k_f;
  qr[188] *= k_f * exp(-(g_RT[3] - g_RT[5] - g_RT[11] + g_RT[29] - g_RT[31])) *
             (refCinv);
  // reaction 189:  A1 + OH => C5H6 + CO + H
  k_f = 0.000132 * exp((3.25) * tc[0] - (2813.15225551476) * invT);
  qf[189] *= k_f;
  qr[189] *= k_f * exp(-(-g_RT[5] + g_RT[6] - g_RT[11] + g_RT[29] - g_RT[34])) *
             (refCinv);
  // reaction 190:  A1CH2 <=> C2H2 + C5H5
  k_f = 820000000000000 * exp(-(40597.7039849612) * invT);
  qf[190] *= k_f;
  qr[190] *= k_f * exp(-(-g_RT[22] - g_RT[31] + g_RT[39])) * (refCinv);
  // reaction 191:  A1CH2 + H <=> A1- + CH3
  k_f = 5.83e+61 * exp((-14.15) * tc[0] - (34384.4676836037) * invT);
  qf[191] *= k_f;
  qr[191] *= k_f * exp(-(g_RT[5] - g_RT[14] - g_RT[30] + g_RT[39]));
  // reaction 192:  A1CH2 + O => A1CHO + H
  k_f = 331000000;
  qf[192] *= k_f;
  qr[192] *= k_f * exp(-(g_RT[3] - g_RT[5] + g_RT[39] - g_RT[40]));
  // reaction 193:  A1CH2 + HO2 => A1CHO + H + OH
  k_f = 10600000000 * exp((-0.94) * tc[0] - (1270.06854282453) * invT);
  qf[193] *= k_f;
  qr[193] *= k_f * exp(-(-g_RT[5] - g_RT[6] + g_RT[9] + g_RT[39] - g_RT[40])) *
             (refCinv);
  // reaction 194:  A1CH2 + C3H3 => A2 + 2 H
  k_f = 4.32e+33 * exp((-7.74) * tc[0] - (12003.1113896068) * invT);
  qf[194] *= k_f;
  qr[194] *= k_f *
             exp(-(-2.000000 * g_RT[5] + g_RT[23] - g_RT[35] + g_RT[39])) *
             (refCinv);
  // reaction 195:  A1CH3 + H <=> A1 + CH3
  k_f = 2.31 * exp((2.17) * tc[0] - (2095.13252374463) * invT);
  qf[195] *= k_f;
  qr[195] *= k_f * exp(-(g_RT[5] - g_RT[14] - g_RT[29] + g_RT[41]));
  // reaction 196:  A1CH3 <=> A1CH2 + H
  k_f = 1.25e+18 * exp((-0.6) * tc[0] - (47698.5390022984) * invT);
  qf[196] *= k_f;
  qr[196] *= k_f * exp(-(-g_RT[5] - g_RT[39] + g_RT[41])) * (refCinv);
  // reaction 197:  A1CH3 <=> A1- + CH3
  k_f = 2.16e+29 * exp((-3.58) * tc[0] - (55436.818698877) * invT);
  qf[197] *= k_f;
  qr[197] *= k_f * exp(-(-g_RT[14] - g_RT[30] + g_RT[41])) * (refCinv);
  // reaction 198:  A1CH3 + H => A1CH2 + H2
  k_f = 6.47e-06 * exp((3.98) * tc[0] - (1703.04622641623) * invT);
  qf[198] *= k_f;
  qr[198] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[39] + g_RT[41]));
  // reaction 199:  A1CH3 + OH => A1CH2 + H2O
  k_f = 16200000 * exp(-(1393.95042161234) * invT);
  qf[199] *= k_f;
  qr[199] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[39] + g_RT[41]));
  // reaction 200:  A1CH3 + CH3 => A1CH2 + CH4
  k_f = 422000000 * exp(-(11199.6957896497) * invT);
  qf[200] *= k_f;
  qr[200] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[39] + g_RT[41]));
  // reaction 201:  C7H15 => C2H4 + C5H11
  k_f = 1890000000000 * exp((0.02) * tc[0] - (13981.583193718) * invT);
  qf[201] *= k_f;
  qr[201] *= k_f * exp(-(-g_RT[18] - g_RT[37] + g_RT[42])) * (refCinv);
  // reaction 202:  C7H15 => C2H4 + C2H5 + C3H6
  k_f = 7.73e+18 * exp((-1.75) * tc[0] - (16089.9452836066) * invT);
  qf[202] *= k_f;
  qr[202] *= k_f * exp(-(-g_RT[18] - g_RT[19] - g_RT[32] + g_RT[42])) *
             ((refCinv * refCinv));
  // reaction 203:  C7H15 => C4H8 + N-C3H7
  k_f = 2.53e+18 * exp((-1.65) * tc[0] - (15943.2123360246) * invT);
  qf[203] *= k_f;
  qr[203] *= k_f * exp(-(-g_RT[25] - g_RT[33] + g_RT[42])) * (refCinv);
  // reaction 204:  C7H15 => C2H5 + C5H10
  k_f = 2.49e+16 * exp((-1.18) * tc[0] - (14853.5520000577) * invT);
  qf[204] *= k_f;
  qr[204] *= k_f * exp(-(-g_RT[19] - g_RT[36] + g_RT[42])) * (refCinv);
  // reaction 205:  N-C7H16 => C2H5 + C5H11
  k_f = 8.1e+77 * exp((-17.62) * tc[0] - (60586.8537965557) * invT);
  qf[205] *= k_f;
  qr[205] *= k_f * exp(-(-g_RT[19] - g_RT[37] + g_RT[43])) * (refCinv);
  // reaction 206:  N-C7H16 => C2H4 + C2H5 + N-C3H7
  k_f = 1.42e+78 * exp((-17.71) * tc[0] - (60738.3974954627) * invT);
  qf[206] *= k_f;
  qr[206] *= k_f * exp(-(-g_RT[18] - g_RT[19] - g_RT[25] + g_RT[43])) *
             ((refCinv * refCinv));
  // reaction 207:  H + N-C7H16 => C7H15 + H2
  k_f = 1.75 * exp((2.6) * tc[0] - (2194.95561374032) * invT);
  qf[207] *= k_f;
  qr[207] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[42] + g_RT[43]));
  // reaction 208:  N-C7H16 + O => C7H15 + OH
  k_f = 0.172 * exp((2.81) * tc[0] - (1137.76784921781) * invT);
  qf[208] *= k_f;
  qr[208] *= k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[42] + g_RT[43]));
  // reaction 209:  N-C7H16 + OH => C7H15 + H2O
  k_f = 740 * exp((1.5) * tc[0] - (129.895317944172) * invT);
  qf[209] *= k_f;
  qr[209] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[42] + g_RT[43]));
  // reaction 210:  CH3 + N-C7H16 => C7H15 + CH4
  k_f = 0.0146 * exp((2.57) * tc[0] - (3489.08294535697) * invT);
  qf[210] *= k_f;
  qr[210] *= k_f * exp(-(g_RT[14] - g_RT[16] - g_RT[42] + g_RT[43]));
  // reaction 211:  A1CHO => A1- + HCO
  k_f = 2.61e+15 * exp((0.15) * tc[0] - (40533.9564977371) * invT);
  qf[211] *= k_f;
  qr[211] *= k_f * exp(-(-g_RT[12] - g_RT[30] + g_RT[40])) * (refCinv);
  // reaction 212:  A1CHO + H => A1- + CO + H2
  k_f = 2050 * exp((1.16) * tc[0] - (1209.93415126087) * invT);
  qf[212] *= k_f;
  qr[212] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[11] - g_RT[30] + g_RT[40])) *
             (refCinv);
  // reaction 213:  A1CHO + CH3 => A1- + CH4 + CO
  k_f = 2.72 * exp((1.77) * tc[0] - (2979.12820839713) * invT);
  qf[213] *= k_f;
  qr[213] *= k_f *
             exp(-(-g_RT[11] + g_RT[14] - g_RT[16] - g_RT[30] + g_RT[40])) *
             (refCinv);
  // reaction 214:  A1C2H* + C2H2 <=> A2-
  k_f = 0.0134 * exp((2.5) * tc[0] - (645.858461893726) * invT);
  qf[214] *= k_f;
  qr[214] *= k_f * exp(-(g_RT[22] + g_RT[44] - g_RT[45])) * (refC);
  // reaction 215:  A1C2H* + C2H4 <=> A2 + H
  k_f = 3.62e+22 * exp((-4.24) * tc[0] - (12009.1248287632) * invT);
  qf[215] *= k_f;
  qr[215] *= k_f * exp(-(-g_RT[5] + g_RT[18] - g_RT[35] + g_RT[44]));
  // reaction 216:  A1C2H <=> A1C2H* + H
  k_f = 2.1e+60 * exp((-12.4) * tc[0] - (74514.3110056997) * invT);
  qf[216] *= k_f;
  qr[216] *= k_f * exp(-(-g_RT[5] - g_RT[44] + g_RT[46])) * (refCinv);
  // reaction 217:  A1C2H + H <=> A1C2H* + H2
  k_f = 132 * exp((1.88) * tc[0] - (8464.71824316767) * invT);
  qf[217] *= k_f;
  qr[217] *= k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[44] + g_RT[46]));
  // reaction 218:  A1C2H + OH <=> A1C2H* + H2O
  k_f = 0.000134 * exp((3.33) * tc[0] - (732.451985745402) * invT);
  qf[218] *= k_f;
  qr[218] *= k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[44] + g_RT[46]));
  // reaction 219:  A1C2H2 <=> A1C2H + H
  k_f = 1.34e+17 * exp((-0.86) * tc[0] - (20751.6740252883) * invT);
  qf[219] *= k_f;
  qr[219] *= k_f * exp(-(-g_RT[5] + g_RT[38] - g_RT[46])) * (refCinv);
  // reaction 220:  A1C2H2 + C2H2 <=> A2 + H
  k_f = 70910000 * exp((-0.26) * tc[0] - (3523.9608924639) * invT);
  qf[220] *= k_f;
  qr[220] *= k_f * exp(-(-g_RT[5] + g_RT[22] - g_RT[35] + g_RT[38]));
  // reaction 221:  A2 <=> A2- + H
  k_f = 8.6e+60 * exp((-12.48) * tc[0] - (74514.3110056997) * invT);
  qf[221] *= k_f;
  qr[221] *= k_f * exp(-(-g_RT[5] + g_RT[35] - g_RT[45])) * (refCinv);
  // reaction 222:  A2 + H <=> A2- + H2
  k_f = 265 * exp((1.87) * tc[0] - (8603.03237593075) * invT);
  qf[222] *= k_f;
  qr[222] *= k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[35] - g_RT[45]));
  // reaction 223:  A2 + OH <=> A2- + H2O
  k_f = 0.000963 * exp((3.02) * tc[0] - (2200.96905289668) * invT);
  qf[223] *= k_f;
  qr[223] *= k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[35] - g_RT[45]));
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
productionRate(amrex::Real* wdot, const amrex::Real* sc, const amrex::Real T)
{
  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  const amrex::Real invT = 1.0 / tc[1];

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  const amrex::Real refC = 101325 / 8.31446 * invT;
  const amrex::Real refCinv = 1 / refC;

  for (int i = 0; i < 47; ++i) {
    wdot[i] = 0.0;
  }

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int i = 0; i < 47; ++i) {
    mixture += sc[i];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[47];
  gibbs(g_RT, tc);

  {
    // reaction 6:  H + O2 (+M) => HO2 (+M)
    const amrex::Real k_f = 5120000 * exp((0.44) * tc[0]);
    amrex::Real Corr = mixture + (-0.25) * sc[4] + (10.89) * sc[7] +
                       (-0.15) * sc[8] + (0.0900000000000001) * sc[11] +
                       (1.18) * sc[15];
    const amrex::Real redP = Corr / k_f * 63300000 * exp(-1.4 * tc[0]);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(0.0 + 0.5 * exp(-tc[1] * 1e-10) + exp(-10000000000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[8]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[8] - g_RT[9])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[8] -= qdot;
    wdot[9] += qdot;
  }

  {
    // reaction 29:  H2O + S-CH2 (+M) => CH2O + H2 (+M)
    const amrex::Real k_f =
      482000000000 * exp((-1.16) * tc[0] - (576.102567679875) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 1.88e+26 * exp(-6.36 * tc[0] - 2536.52902215524 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.3973 * exp(-tc[1] * 0.00480769230769231) +
      0.6027 * exp(-tc[1] * 0.000254971953085161) + exp(-10180 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[1] - g_RT[4] + g_RT[7] - g_RT[13])) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 35:  CH3 + OH (+M) => CH2O + H2 (+M)
    const amrex::Real k_f =
      2790000000000 * exp((-1.43) * tc[0] - (669.912218519191) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 4e+24 * exp(-5.92 * tc[0] - 1580.37206762635 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.588 * exp(-tc[1] * 0.00512820512820513) +
      0.412 * exp(-tc[1] * 0.000169491525423729) + exp(-6394 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[4] + g_RT[6] - g_RT[13] + g_RT[14])) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[6] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 51:  CO + O (+M) => CO2 (+M)
    const amrex::Real k_f = 13600 * exp(-(1200.31264861068) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 1170000000000 * exp(-2.79 * tc[0] - 2109.56477771991 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 1e-07) + exp(-10000000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[11]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[11] - g_RT[15])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 75:  C2H2 + H (+M) <=> C2H3 (+M)
    const amrex::Real k_f =
      17100 * exp((1.27) * tc[0] - (1362.67550583257) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 6.34e+19 * exp(-4.66 * tc[0] - 1902.69743857425 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.7878 * exp(-tc[1] * 1) + 0.2122 * exp(-tc[1] * -9.79431929480901e-05) +
      0.0);
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[22]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] - g_RT[17] + g_RT[22])) * (refC) * (sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[17] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 83:  C2H3 + H (+M) => C2H4 (+M)
    const amrex::Real k_f =
      6080000 * exp((0.27) * tc[0] - (140.719508425632) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 1.4e+18 * exp(-3.86 * tc[0] - 1670.57365497185 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.218 * exp(-tc[1] * 0.00481927710843374) +
      0.782 * exp(-tc[1] * 0.000375516334960571) + exp(-6095 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[17]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[17] - g_RT[18])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[17] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 93:  C2H4 + H (+M) <=> C2H5 (+M)
    const amrex::Real k_f =
      1370 * exp((1.46) * tc[0] - (681.939096831924) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 2.03e+27 * exp(-6.64 * tc[0] - 2903.35887502691 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      1.569 * exp(-tc[1] * 0.00334448160535117) +
      -0.569 * exp(-tc[1] * -0.000109325461900077) + exp(-152.4 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[18] - g_RT[19])) * (refC) * (sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[18] -= qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 101:  C2H4 + CH3 (+M) <=> N-C3H7 (+M)
    const amrex::Real k_f =
      2.55 * exp((1.6) * tc[0] - (2868.48092791999) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 3e+51 * exp(-14.6 * tc[0] - 9143.05430867243 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.8106 * exp(-tc[1] * 0.0036101083032491) +
      0.1894 * exp(-tc[1] * 0.000114311842706904) + exp(-7891 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[14] * sc[18]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[14] + g_RT[18] - g_RT[25])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[18] -= qdot;
    wdot[25] += qdot;
  }

  {
    // reaction 102:  C2H5 + H (+M) <=> C2H6 (+M)
    const amrex::Real k_f =
      521000000000 * exp((-0.99) * tc[0] - (794.99678513827) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 1.99e+29 * exp(-7.08 * tc[0] - 3363.99837873789 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.1578 * exp(-tc[1] * 0.008) +
      0.8422 * exp(-tc[1] * 0.000450653447498873) + exp(-6882 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[19]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[19] - g_RT[26])) * (refC) * (sc[26]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[19] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 108:  C2H6 (+M) <=> 2 CH3 (+M)
    const amrex::Real k_f =
      1.88e+50 * exp((-9.72) * tc[0] - (54016.4141771433) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 3.72e+59 * exp(-13.14 * tc[0] - 51116.6633656102 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.61 * exp(-tc[1] * 0.01) + 0.39 * exp(-tc[1] * 0.000526315789473684) +
      exp(-6000 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[26]);
    const amrex::Real qr = Corr * k_f *
                           exp(-(-2.000000 * g_RT[14] + g_RT[26])) * (refCinv) *
                           ((sc[14] * sc[14]));
    const amrex::Real qdot = qf - qr;
    wdot[14] += 2.000000 * qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 113:  HCCO (+M) => CH + CO (+M)
    const amrex::Real k_f =
      2.255e+20 * exp((-1.44) * tc[0] - (37606.5438660847) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 1.213e+29 * exp(-5.18 * tc[0] - 38580.7461702494 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent = log10(
      0.4243 * exp(-tc[1] * 0.00421940928270042) +
      0.5757 * exp(-tc[1] * 0.000605326876513317) + exp(-5069 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[21]);
    const amrex::Real qr =
      Corr * k_f * exp(-(-g_RT[10] - g_RT[11] + g_RT[21])) * (refCinv) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[10] += qdot;
    wdot[11] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 149:  C3H6 + H (+M) <=> N-C3H7 (+M)
    const amrex::Real k_f =
      306000000 * exp((-0.37) * tc[0] - (2028.9846930246) * invT);
    amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                       (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 6.26e+26 * exp(-6.66 * tc[0] - 3522.75820463262 * invT);
    const amrex::Real F = redP / (1.0 + redP);
    const amrex::Real logPred = log10(redP);
    const amrex::Real logFcent =
      log10(+1 * exp(-tc[1] * 0.000763358778625954) + exp(-48100 * invT));
    const amrex::Real troe_c = -0.4 - 0.67 * logFcent;
    const amrex::Real troe_n = 0.75 - 1.27 * logFcent;
    const amrex::Real troe =
      (troe_c + logPred) / (troe_n - 0.14 * (troe_c + logPred));
    const amrex::Real F_troe = exp(M_LN10 * logFcent / (1.0 + troe * troe));
    Corr = F * F_troe;
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[32]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] - g_RT[25] + g_RT[32])) * (refC) * (sc[25]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[25] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 32:  CH3 + H (+M) <=> CH4 (+M)
    const amrex::Real k_f = 69200000 * exp((0.18) * tc[0]);
    amrex::Real Corr = mixture + sc[4] + (5) * sc[7] + (0.5) * sc[11] + sc[15] +
                       (2) * sc[16] + (2) * sc[26];
    const amrex::Real redP =
      Corr / k_f * 3.47e+26 * exp(-6.3 * tc[0] - 2553.36665179307 * invT);
    Corr = redP / (1.0 + redP);
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[14]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[14] - g_RT[16])) * (refC) * (sc[16]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 2:  H + O + M => OH + M
    const amrex::Real k_f = 9430000 * exp((-1) * tc[0]);
    const amrex::Real Corr = mixture + sc[4] + (11) * sc[7] + (0.75) * sc[11] +
                             (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real qf = Corr * k_f * (sc[3] * sc[5]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[3] + g_RT[5] - g_RT[6])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] -= qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 3:  H + OH + M => H2O + M
    const amrex::Real k_f = 44000000000 * exp((-2) * tc[0]);
    const amrex::Real Corr = mixture + sc[4] + (5.3) * sc[7] + (0.75) * sc[11] +
                             (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real qf = Corr * k_f * (sc[5] * sc[6]);
    const amrex::Real qr =
      Corr * k_f * exp(-(g_RT[5] + g_RT[6] - g_RT[7])) * (refC) * (0.0);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 60:  HCO + M <=> CO + H + M
    const amrex::Real k_f =
      187000000000 * exp((-1) * tc[0] - (8554.92486267982) * invT);
    const amrex::Real Corr = mixture + sc[4] + (-1) * sc[7] + (0.75) * sc[11] +
                             (2.6) * sc[15] + sc[16] + (2) * sc[26];
    const amrex::Real qf = Corr * k_f * (sc[12]);
    const amrex::Real qr = Corr * k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[12])) *
                           (refCinv) * (sc[5] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 61:  HCO + H2O <=> CO + H + H2O
    const amrex::Real k_f =
      2240000000000 * exp((-1) * tc[0] - (8554.92486267982) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[12]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] - g_RT[11] + g_RT[12])) *
                           (refCinv) * (sc[5] * sc[7] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 0:  N2 + S-CH2 <=> N2 + T-CH2
    const amrex::Real k_f = 15000000 * exp(-(301.879677816251) * invT);
    const amrex::Real qf = k_f * (sc[0] * sc[1]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[0] - g_RT[0] + g_RT[1] - g_RT[2])) * (sc[0] * sc[2]);
    const amrex::Real qdot = qf - qr;
    wdot[0] -= qdot;
    wdot[0] += qdot;
    wdot[1] -= qdot;
    wdot[2] += qdot;
  }

  {
    // reaction 1:  H2 + O <=> H + OH
    const amrex::Real k_f =
      0.0459 * exp((2.7) * tc[0] - (3149.91491260459) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] + g_RT[4] - g_RT[5] - g_RT[6])) * (sc[5] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
  }

  {
    // reaction 4:  H2 + OH <=> H + H2O
    const amrex::Real k_f =
      173 * exp((1.51) * tc[0] - (1725.89729521042) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[6] - g_RT[7])) * (sc[5] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 5:  2 OH <=> H2O + O
    const amrex::Real k_f =
      0.0397 * exp((2.4) * tc[0] - (-1061.9985158476) * invT);
    const amrex::Real qf = k_f * ((sc[6] * sc[6]));
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7])) * (sc[3] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[6] -= 2.000000 * qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 7:  H + O2 <=> O + OH
    const amrex::Real k_f =
      26400000000 * exp((-0.67) * tc[0] - (8575.37055581147) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[8]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[8])) * (sc[3] * sc[6]);
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
  }

  {
    // reaction 8:  H + HO2 => H2 + O2
    const amrex::Real k_f =
      3.649 * exp((2.07) * tc[0] - (-549.643435391863) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 9:  H + HO2 => H2O + O
    const amrex::Real k_f = 3970000 * exp(-(337.965344921108) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] -= qdot;
    wdot[7] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 10:  H + HO2 => 2 OH
    const amrex::Real k_f = 74900000 * exp(-(319.925027452009) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[6] += 2.000000 * qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 11:  HO2 + O => O2 + OH
    const amrex::Real k_f = 40000000;
    const amrex::Real qf = k_f * (sc[3] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 12:  HO2 + OH => H2O + O2
    const amrex::Real k_f = 23800000 * exp(-(-251.366788902774) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 13:  HO2 + OH => H2O + O2
    const amrex::Real k_f = 10000000000 * exp(-(8720.90081556219) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[9]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[8] += qdot;
    wdot[9] -= qdot;
  }

  {
    // reaction 14:  CH + O => CO + H
    const amrex::Real k_f = 57000000;
    const amrex::Real qf = k_f * (sc[3] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[10] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 15:  CH + OH => H + HCO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[6] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 16:  CH + H2 <=> H + T-CH2
    const amrex::Real k_f = 108000000 * exp(-(1564.73209365314) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[10]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[4] - g_RT[5] + g_RT[10])) * (sc[2] * sc[5]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[10] -= qdot;
  }

  {
    // reaction 17:  CH + H2O => CH2O + H
    const amrex::Real k_f = 5710000 * exp(-(-380.059419015673) * invT);
    const amrex::Real qf = k_f * (sc[7] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[7] -= qdot;
    wdot[10] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 18:  CH + O2 => HCO + O
    const amrex::Real k_f = 67100000;
    const amrex::Real qf = k_f * (sc[8] * sc[10]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[10] -= qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 19:  O + T-CH2 => H + HCO
    const amrex::Real k_f = 80000000;
    const amrex::Real qf = k_f * (sc[2] * sc[3]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[12] += qdot;
  }

  {
    // reaction 20:  OH + T-CH2 => CH2O + H
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 21:  OH + T-CH2 <=> CH + H2O
    const amrex::Real k_f = 11.3 * exp((2) * tc[0] - (1509.40845341457) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[6]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] + g_RT[6] - g_RT[7] - g_RT[10])) * (sc[7] * sc[10]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[10] += qdot;
  }

  {
    // reaction 22:  H2 + T-CH2 <=> CH3 + H
    const amrex::Real k_f = 0.5 * exp((2) * tc[0] - (3638.21623643486) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[2] + g_RT[4] - g_RT[5] - g_RT[14])) * (sc[5] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 23:  O2 + T-CH2 => CO2 + 2 H
    const amrex::Real k_f = 5800000 * exp(-(755.308086706252) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += 2.000000 * qdot;
    wdot[8] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 24:  O2 + T-CH2 => CH2O + O
    const amrex::Real k_f = 2400000 * exp(-(755.308086706252) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 25:  O2 + T-CH2 => CO + H + OH
    const amrex::Real k_f = 5000000 * exp(-(755.308086706252) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 26:  H2 + S-CH2 <=> CH3 + H
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[1] * sc[4]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] + g_RT[4] - g_RT[5] - g_RT[14])) * (sc[5] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[14] += qdot;
  }

  {
    // reaction 27:  O2 + S-CH2 => CO + H + OH
    const amrex::Real k_f = 28000000;
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 28:  O2 + S-CH2 => CO + H2O
    const amrex::Real k_f = 12000000;
    const amrex::Real qf = k_f * (sc[1] * sc[8]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[7] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 30:  H2O + S-CH2 <=> H2O + T-CH2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[7] - g_RT[7])) * (sc[2] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[7] -= qdot;
    wdot[7] += qdot;
  }

  {
    // reaction 31:  H2O + S-CH2 => CH2O + H2
    const amrex::Real k_f =
      68200 * exp((0.25) * tc[0] - (-470.261006361169) * invT);
    const amrex::Real qf = k_f * (sc[1] * sc[7]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[4] += qdot;
    wdot[7] -= qdot;
    wdot[13] += qdot;
  }

  {
    // reaction 33:  CH3 + O => CH2O + H
    const amrex::Real k_f = 50600000;
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 34:  CH3 + O => CO + H + H2
    const amrex::Real k_f = 33700000;
    const amrex::Real qf = k_f * (sc[3] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[4] += qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 36:  CH3 + OH <=> H2O + T-CH2
    const amrex::Real k_f = 56 * exp((1.6) * tc[0] - (2727.76141949435) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[2] + g_RT[6] - g_RT[7] + g_RT[14])) * (sc[2] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 37:  CH3 + OH <=> H2O + S-CH2
    const amrex::Real k_f =
      644000000000 * exp((-1.34) * tc[0] - (713.208980445029) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[14]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[1] + g_RT[6] - g_RT[7] + g_RT[14])) * (sc[1] * sc[7]);
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 38:  CH3 + O2 => CH2O + H + O
    const amrex::Real k_f = 13800000 * exp(-(15338.2452603942) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 39:  CH3 + O2 => CH2O + OH
    const amrex::Real k_f = 587000 * exp(-(6964.93129240328) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 40:  CH3 + HO2 => CH2O + H + OH
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[14] -= qdot;
  }

  {
    // reaction 41:  CH3 + HO2 => CH4 + O2
    const amrex::Real k_f = 3610000;
    const amrex::Real qf = k_f * (sc[9] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 42:  CH + CH3 => C2H3 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[10] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[10] -= qdot;
    wdot[14] -= qdot;
    wdot[17] += qdot;
  }

  {
    // reaction 43:  CH3 + T-CH2 => C2H4 + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[2] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[5] += qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 44:  2 CH3 <=> C2H5 + H
    const amrex::Real k_f =
      6840000 * exp((0.1) * tc[0] - (5334.04633586345) * invT);
    const amrex::Real qf = k_f * ((sc[14] * sc[14]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[5] + 2.000000 * g_RT[14] - g_RT[19])) *
                           (sc[5] * sc[19]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[14] -= 2.000000 * qdot;
    wdot[19] += qdot;
  }

  {
    // reaction 45:  2 CH3 => CH4 + S-CH2
    const amrex::Real k_f =
      2632000 * exp((-0.06) * tc[0] - (6874.72970505778) * invT);
    const amrex::Real qf = k_f * ((sc[14] * sc[14]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[14] -= 2.000000 * qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 46:  CH4 + H <=> CH3 + H2
    const amrex::Real k_f =
      660 * exp((1.62) * tc[0] - (5455.52283898871) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[14] + g_RT[16])) * (sc[4] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 47:  CH4 + O <=> CH3 + OH
    const amrex::Real k_f =
      1020 * exp((1.5) * tc[0] - (4327.37649242108) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[16])) * (sc[6] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 48:  CH4 + OH <=> CH3 + H2O
    const amrex::Real k_f =
      100 * exp((1.6) * tc[0] - (1569.54284497824) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[16]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[14] + g_RT[16])) * (sc[7] * sc[14]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[14] += qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 49:  CH + CH4 => C2H4 + H
    const amrex::Real k_f = 60000000;
    const amrex::Real qf = k_f * (sc[10] * sc[16]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[10] -= qdot;
    wdot[16] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 50:  CH4 + T-CH2 <=> 2 CH3
    const amrex::Real k_f = 2.46 * exp((2) * tc[0] - (4161.40053953871) * invT);
    const amrex::Real qf = k_f * (sc[2] * sc[16]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[2] - 2.000000 * g_RT[14] + g_RT[16])) *
                           ((sc[14] * sc[14]));
    const amrex::Real qdot = qf - qr;
    wdot[2] -= qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[16] -= qdot;
  }

  {
    // reaction 52:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      800000 * exp((0.14) * tc[0] - (3699.55834799645) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15])) * (sc[5] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 53:  CO + OH <=> CO2 + H
    const amrex::Real k_f =
      87800 * exp((0.03) * tc[0] - (-8.41881481891296) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15])) * (sc[5] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 54:  CO + HO2 => CO2 + OH
    const amrex::Real k_f = 30100000 * exp(-(11573.741769509) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[11]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[11] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 55:  CO + S-CH2 <=> CO + T-CH2
    const amrex::Real k_f = 9000000;
    const amrex::Real qf = k_f * (sc[1] * sc[11]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[11] - g_RT[11])) * (sc[2] * sc[11]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[11] -= qdot;
    wdot[11] += qdot;
  }

  {
    // reaction 56:  H + HCO => CO + H2
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[5] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 57:  HCO + O => CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 58:  HCO + O => CO2 + H
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[3] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[12] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 59:  HCO + OH => CO + H2O
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[6] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 62:  HCO + O2 => CO + HO2
    const amrex::Real k_f =
      12000 * exp((0.81) * tc[0] - (-365.627165040393) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[12]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[11] += qdot;
    wdot[12] -= qdot;
  }

  {
    // reaction 63:  CH3 + HCO => CH4 + CO
    const amrex::Real k_f = 26500000;
    const amrex::Real qf = k_f * (sc[12] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 64:  CH2O + H <=> H2 + HCO
    const amrex::Real k_f =
      57.4 * exp((1.9) * tc[0] - (1379.51816763706) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[13]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[12] + g_RT[13])) * (sc[4] * sc[12]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 65:  CH2O + O => HCO + OH
    const amrex::Real k_f = 39000000 * exp(-(1781.22093544899) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 66:  CH2O + OH => H2O + HCO
    const amrex::Real k_f =
      3430 * exp((1.18) * tc[0] - (-224.907656614761) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[13]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[12] += qdot;
    wdot[13] -= qdot;
  }

  {
    // reaction 67:  CH2O + CH3 => CH4 + HCO
    const amrex::Real k_f =
      0.00332 * exp((2.81) * tc[0] - (2949.0610126153) * invT);
    const amrex::Real qf = k_f * (sc[13] * sc[14]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[13] -= qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
  }

  {
    // reaction 68:  CH + CO2 => CO + HCO
    const amrex::Real k_f = 190000000 * exp(-(7946.34972355557) * invT);
    const amrex::Real qf = k_f * (sc[10] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[10] -= qdot;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 69:  CO2 + S-CH2 <=> CO2 + T-CH2
    const amrex::Real k_f = 7000000;
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[2] + g_RT[15] - g_RT[15])) * (sc[2] * sc[15]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[2] += qdot;
    wdot[15] -= qdot;
    wdot[15] += qdot;
  }

  {
    // reaction 70:  CO2 + S-CH2 => CH2O + CO
    const amrex::Real k_f = 14000000;
    const amrex::Real qf = k_f * (sc[1] * sc[15]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[11] += qdot;
    wdot[13] += qdot;
    wdot[15] -= qdot;
  }

  {
    // reaction 71:  C2H + O => CH + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[3] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[10] += qdot;
    wdot[11] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 72:  C2H + OH => H + HCCO
    const amrex::Real k_f = 20000000;
    const amrex::Real qf = k_f * (sc[6] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[20] -= qdot;
    wdot[21] += qdot;
  }

  {
    // reaction 73:  C2H + O2 => CO + HCO
    const amrex::Real k_f = 10000000 * exp(-(-380.059419015673) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[20]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[11] += qdot;
    wdot[12] += qdot;
    wdot[20] -= qdot;
  }

  {
    // reaction 74:  C2H + H2 <=> C2H2 + H
    const amrex::Real k_f =
      3.31 * exp((2.26) * tc[0] - (453.423376723343) * invT);
    const amrex::Real qf = k_f * (sc[4] * sc[20]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[4] - g_RT[5] + g_RT[20] - g_RT[22])) * (sc[5] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[4] -= qdot;
    wdot[5] += qdot;
    wdot[20] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 76:  C2H2 + O => H + HCCO
    const amrex::Real k_f = 8.1 * exp((2) * tc[0] - (956.161986695548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[21] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 77:  C2H2 + O => CO + T-CH2
    const amrex::Real k_f = 12.5 * exp((2) * tc[0] - (956.161986695548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 78:  C2H2 + O => C2H + OH
    const amrex::Real k_f =
      33240000000 * exp((-0.44) * tc[0] - (15447.6948852067) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[20] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 79:  C2H2 + OH => C2H + H2O
    const amrex::Real k_f =
      2.63 * exp((2.14) * tc[0] - (8584.99205846165) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[20] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 80:  C2H2 + OH => CH3 + CO
    const amrex::Real k_f =
      7.53 * exp((1.55) * tc[0] - (1059.59314018505) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 81:  C2H2 + OH => CH3 + CO
    const amrex::Real k_f =
      1280 * exp((0.73) * tc[0] - (1297.73036294382) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[22] -= qdot;
  }

  {
    // reaction 82:  C2H2 + S-CH2 <=> C3H3 + H
    const amrex::Real k_f = 190000000;
    const amrex::Real qf = k_f * (sc[1] * sc[22]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[1] - g_RT[5] + g_RT[22] - g_RT[23])) * (sc[5] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[1] -= qdot;
    wdot[5] += qdot;
    wdot[22] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 84:  C2H3 + H => C2H2 + H2
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[5] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[17] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 85:  C2H3 + O => CH3 + CO
    const amrex::Real k_f =
      10300000 * exp((0.21) * tc[0] - (-215.286153964575) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 86:  C2H3 + OH => C2H2 + H2O
    const amrex::Real k_f = 5000000;
    const amrex::Real qf = k_f * (sc[6] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[17] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 87:  C2H3 + O2 => C2H2 + HO2
    const amrex::Real k_f =
      1.34 * exp((1.61) * tc[0] - (-193.637773001656) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[17] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 88:  C2H3 + O2 => CH3 + CO + O
    const amrex::Real k_f =
      303000 * exp((0.29) * tc[0] - (6.0134391563664) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 89:  C2H3 + O2 => CH2O + HCO
    const amrex::Real k_f =
      45800000000 * exp((-1.39) * tc[0] - (511.15239262446) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[12] += qdot;
    wdot[13] += qdot;
    wdot[17] -= qdot;
  }

  {
    // reaction 90:  C2H3 + HCO => C2H4 + CO
    const amrex::Real k_f = 90000000;
    const amrex::Real qf = k_f * (sc[12] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[17] -= qdot;
    wdot[18] += qdot;
  }

  {
    // reaction 91:  C2H3 + CH3 => C2H2 + CH4
    const amrex::Real k_f = 9030000 * exp(-(-384.870170340766) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[17]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[17] -= qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 92:  C2H3 + CH3 <=> A-C3H5 + H
    const amrex::Real k_f =
      1930000000000 * exp((-1.25) * tc[0] - (3859.5158295558) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[17]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[5] + g_RT[14] + g_RT[17] - g_RT[24])) *
                           (sc[5] * sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[14] -= qdot;
    wdot[17] -= qdot;
    wdot[24] += qdot;
  }

  {
    // reaction 94:  C2H4 + H => C2H3 + H2
    const amrex::Real k_f =
      1.33 * exp((2.53) * tc[0] - (6159.11031678355) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[17] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 95:  C2H4 + O => CH3 + CO + H
    const amrex::Real k_f =
      7660 * exp((0.88) * tc[0] - (573.697192017329) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[14] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 96:  C2H4 + O => CH2O + T-CH2
    const amrex::Real k_f =
      0.0715 * exp((2.47) * tc[0] - (467.855630698622) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[2] += qdot;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 97:  C2H4 + O => CH3 + HCO
    const amrex::Real k_f =
      389 * exp((1.36) * tc[0] - (446.207249735703) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[14] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 98:  C2H4 + OH => C2H3 + H2O
    const amrex::Real k_f =
      1.31e-07 * exp((4.2) * tc[0] - (-432.977683591697) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[17] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 99:  C2H4 + OH => CH2O + CH3
    const amrex::Real k_f =
      3.75e+30 * exp((-7.8) * tc[0] - (3552.82540041446) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[13] += qdot;
    wdot[14] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 100:  C2H4 + CH3 => C2H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.25617023733) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[18]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[17] += qdot;
    wdot[18] -= qdot;
  }

  {
    // reaction 103:  C2H5 + O => CH2O + CH3
    const amrex::Real k_f =
      31700000 * exp((0.03) * tc[0] - (-198.448524326749) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[13] += qdot;
    wdot[14] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 104:  C2H5 + O2 => C2H4 + HO2
    const amrex::Real k_f =
      19.2 * exp((1.02) * tc[0] - (-1023.51250524685) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[9] += qdot;
    wdot[18] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 105:  C2H5 + HCO => C2H6 + CO
    const amrex::Real k_f = 120000000;
    const amrex::Real qf = k_f * (sc[12] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[12] -= qdot;
    wdot[19] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 106:  C2H5 + HO2 => C2H6 + O2
    const amrex::Real k_f = 300000;
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[19] -= qdot;
    wdot[26] += qdot;
  }

  {
    // reaction 107:  C2H5 + HO2 => CH2O + CH3 + OH
    const amrex::Real k_f = 31000000;
    const amrex::Real qf = k_f * (sc[9] * sc[19]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[13] += qdot;
    wdot[14] += qdot;
    wdot[19] -= qdot;
  }

  {
    // reaction 109:  C2H6 + H => C2H5 + H2
    const amrex::Real k_f =
      0.17 * exp((2.7) * tc[0] - (2888.92662105163) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 110:  C2H6 + O => C2H5 + OH
    const amrex::Real k_f =
      89.8 * exp((1.92) * tc[0] - (2863.67017659489) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 111:  C2H6 + OH => C2H5 + H2O
    const amrex::Real k_f =
      1.61 * exp((2.22) * tc[0] - (372.843292028033) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 112:  C2H6 + CH3 => C2H5 + CH4
    const amrex::Real k_f = 843000000 * exp(-(11199.6957896497) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[26]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[19] += qdot;
    wdot[26] -= qdot;
  }

  {
    // reaction 114:  H + HCCO => CO + S-CH2
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[5] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[1] += qdot;
    wdot[5] -= qdot;
    wdot[11] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 115:  HCCO + O => 2 CO + H
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[3] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 116:  HCCO + O2 => 2 CO + OH
    const amrex::Real k_f = 42000 * exp(-(429.369620097877) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 117:  2 HCCO => C2H2 + 2 CO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * ((sc[21] * sc[21]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += 2.000000 * qdot;
    wdot[21] -= 2.000000 * qdot;
    wdot[22] += qdot;
  }

  {
    // reaction 118:  C2H2 + HCCO => C3H3 + CO
    const amrex::Real k_f = 100000 * exp(-(1509.40845341457) * invT);
    const amrex::Real qf = k_f * (sc[21] * sc[22]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[21] -= qdot;
    wdot[22] -= qdot;
    wdot[23] += qdot;
  }

  {
    // reaction 119:  CH3 + HCCO => C2H4 + CO
    const amrex::Real k_f = 50000000;
    const amrex::Real qf = k_f * (sc[14] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[14] -= qdot;
    wdot[18] += qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 120:  HCCO + OH => 2 HCO
    const amrex::Real k_f = 10000000;
    const amrex::Real qf = k_f * (sc[6] * sc[21]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[12] += 2.000000 * qdot;
    wdot[21] -= qdot;
  }

  {
    // reaction 121:  C3H3 + H <=> P-C3H4
    const amrex::Real k_f =
      7.94e+23 * exp((-5.06) * tc[0] - (2446.32743480975) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] + g_RT[23] - g_RT[27])) * (refC) * (sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[23] -= qdot;
    wdot[27] += qdot;
  }

  {
    // reaction 122:  C3H3 + H <=> A-C3H4
    const amrex::Real k_f =
      3.16e+23 * exp((-5) * tc[0] - (2370.55306927287) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] + g_RT[23] - g_RT[28])) * (refC) * (sc[28]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[23] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 123:  C3H3 + OH => C2H4 + CO
    const amrex::Real k_f =
      1280 * exp((0.73) * tc[0] - (1297.73036294382) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 124:  C3H3 + O => C2H2 + CO + H
    const amrex::Real k_f = 69500000;
    const amrex::Real qf = k_f * (sc[3] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[22] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 125:  C3H3 + O2 => CH3 + 2 CO
    const amrex::Real k_f =
      0.17 * exp((1.7) * tc[0] - (755.308086706252) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[14] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 126:  C3H3 + HO2 => C2H3 + CO + OH
    const amrex::Real k_f = 800000;
    const amrex::Real qf = k_f * (sc[9] * sc[23]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
    wdot[17] += qdot;
    wdot[23] -= qdot;
  }

  {
    // reaction 127:  2 C3H3 <=> A1
    const amrex::Real k_f =
      1.87e+40 * exp((-9.84) * tc[0] - (8456.29942834876) * invT);
    const amrex::Real qf = k_f * ((sc[23] * sc[23]));
    const amrex::Real qr =
      k_f * exp(-(2.000000 * g_RT[23] - g_RT[29])) * (refC) * (sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[23] -= 2.000000 * qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 128:  2 C3H3 <=> A1- + H
    const amrex::Real k_f =
      5.77e+31 * exp((-7) * tc[0] - (15854.2134365104) * invT);
    const amrex::Real qf = k_f * ((sc[23] * sc[23]));
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[5] + 2.000000 * g_RT[23] - g_RT[30])) *
                           (sc[5] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[23] -= 2.000000 * qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 129:  C2H2 + C3H3 <=> C5H5
    const amrex::Real k_f = 235000 * exp(-(5029.76128238465) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[23]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[22] + g_RT[23] - g_RT[31])) * (refC) * (sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[23] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 130:  H + P-C3H4 <=> C2H2 + CH3
    const amrex::Real k_f =
      3460000 * exp((0.44) * tc[0] - (2749.40980045727) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[27]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[27])) *
                           (sc[14] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[22] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 131:  H + P-C3H4 <=> C3H3 + H2
    const amrex::Real k_f =
      0.085 * exp((2.7) * tc[0] - (2888.92662105163) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[27]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[23] + g_RT[27])) * (sc[4] * sc[23]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[23] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 132:  OH + P-C3H4 => C3H3 + H2O
    const amrex::Real k_f =
      0.805 * exp((2.22) * tc[0] - (372.843292028033) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[23] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 133:  CH3 + P-C3H4 => C3H3 + CH4
    const amrex::Real k_f = 422000000 * exp(-(11199.6957896497) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[23] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 134:  O + P-C3H4 => CH3 + HCCO
    const amrex::Real k_f = 4.05 * exp((2) * tc[0] - (956.161986695548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[14] += qdot;
    wdot[21] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 135:  O + P-C3H4 => C2H4 + CO
    const amrex::Real k_f = 6.25 * exp((2) * tc[0] - (956.161986695548) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[18] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 136:  OH + P-C3H4 => C2H5 + CO
    const amrex::Real k_f =
      1280 * exp((0.73) * tc[0] - (1297.73036294382) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[27]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[19] += qdot;
    wdot[27] -= qdot;
  }

  {
    // reaction 137:  A-C3H4 + H <=> C2H2 + CH3
    const amrex::Real k_f =
      89500000 * exp((-0.02) * tc[0] - (5661.1874903031) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[28])) *
                           (sc[14] * sc[22]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[22] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 138:  A-C3H4 <=> P-C3H4
    const amrex::Real k_f =
      7.76e+39 * exp((-7.8) * tc[0] - (39475.5660453833) * invT);
    const amrex::Real qf = k_f * (sc[28]);
    const amrex::Real qr = k_f * exp(-(-g_RT[27] + g_RT[28])) * (sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 139:  A-C3H4 + H <=> H + P-C3H4
    const amrex::Real k_f =
      2470000000 * exp((-0.33) * tc[0] - (3238.91381211881) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[5] - g_RT[27] + g_RT[28])) * (sc[5] * sc[27]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[5] += qdot;
    wdot[27] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 140:  A-C3H4 + H => C3H3 + H2
    const amrex::Real k_f =
      1.33 * exp((2.53) * tc[0] - (6159.11031678355) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[23] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 141:  A-C3H4 + OH => C3H3 + H2O
    const amrex::Real k_f =
      1.31e-07 * exp((4.2) * tc[0] - (-432.977683591697) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[23] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 142:  A-C3H4 + CH3 => C3H3 + CH4
    const amrex::Real k_f =
      0.227 * exp((2) * tc[0] - (4629.25617023733) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[28]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[23] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 143:  A-C3H4 + H <=> A-C3H5
    const amrex::Real k_f =
      2.01e+43 * exp((-10.77) * tc[0] - (9874.30360658656) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[28]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] - g_RT[24] + g_RT[28])) * (refC) * (sc[24]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[24] += qdot;
    wdot[28] -= qdot;
  }

  {
    // reaction 144:  A-C3H5 + H => A-C3H4 + H2
    const amrex::Real k_f =
      0.00956 * exp((2.8) * tc[0] - (1656.14140099657) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[24] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 145:  A-C3H5 + OH => A-C3H4 + H2O
    const amrex::Real k_f = 6030000;
    const amrex::Real qf = k_f * (sc[6] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[24] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 146:  A-C3H5 + CH3 => A-C3H4 + CH4
    const amrex::Real k_f =
      486000 * exp((-0.32) * tc[0] - (-66.1478307200304) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[24] -= qdot;
    wdot[28] += qdot;
  }

  {
    // reaction 147:  A-C3H5 + O2 => C2H2 + CH2O + OH
    const amrex::Real k_f =
      971000000000000 * exp((-2.7) * tc[0] - (12570.7951424678) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[8] -= qdot;
    wdot[13] += qdot;
    wdot[22] += qdot;
    wdot[24] -= qdot;
  }

  {
    // reaction 148:  A-C3H5 + C3H3 => A1 + 2 H
    const amrex::Real k_f =
      2.16e+33 * exp((-7.74) * tc[0] - (12003.1113896068) * invT);
    const amrex::Real qf = k_f * (sc[23] * sc[24]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += 2.000000 * qdot;
    wdot[23] -= qdot;
    wdot[24] -= qdot;
    wdot[29] += qdot;
  }

  {
    // reaction 150:  C3H6 <=> C2H3 + CH3
    const amrex::Real k_f =
      4.04e+42 * exp((-7.67) * tc[0] - (56275.1122459411) * invT);
    const amrex::Real qf = k_f * (sc[32]);
    const amrex::Real qr = k_f * exp(-(-g_RT[14] - g_RT[17] + g_RT[32])) *
                           (refCinv) * (sc[14] * sc[17]);
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[17] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 151:  A-C3H5 + H <=> C3H6
    const amrex::Real k_f =
      5.93e+48 * exp((-11.76) * tc[0] - (11850.3700350351) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[24]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[5] + g_RT[24] - g_RT[32])) * (refC) * (sc[32]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[24] -= qdot;
    wdot[32] += qdot;
  }

  {
    // reaction 152:  C3H6 + H <=> C2H4 + CH3
    const amrex::Real k_f =
      8e+15 * exp((-2.39) * tc[0] - (5626.30954319617) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[32]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[5] - g_RT[14] - g_RT[18] + g_RT[32])) *
                           (sc[14] * sc[18]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[18] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 153:  C3H6 + O => 2 CH3 + CO
    const amrex::Real k_f =
      120 * exp((1.6) * tc[0] - (164.773265051097) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[14] += 2.000000 * qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 154:  C3H6 + O => C2H5 + HCO
    const amrex::Real k_f =
      35 * exp((1.6) * tc[0] - (-489.504011661541) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[12] += qdot;
    wdot[19] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 155:  C3H6 + H => A-C3H5 + H2
    const amrex::Real k_f =
      0.66 * exp((2.54) * tc[0] - (3400.07901367609) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[24] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 156:  C3H6 + O => A-C3H5 + OH
    const amrex::Real k_f =
      0.0965 * exp((2.68) * tc[0] - (1870.22486712987) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[24] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 157:  C3H6 + OH => A-C3H5 + H2O
    const amrex::Real k_f =
      200 * exp((1.46) * tc[0] - (270.609794203146) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[24] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 158:  C3H6 + CH3 => A-C3H5 + CH4
    const amrex::Real k_f =
      4.52e-07 * exp((3.65) * tc[0] - (3599.73022583411) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[32]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[24] += qdot;
    wdot[32] -= qdot;
  }

  {
    // reaction 159:  C4H8 + H => C2H4 + C2H5
    const amrex::Real k_f =
      7680000 * exp((0.11) * tc[0] - (744.483896224792) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[18] += qdot;
    wdot[19] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 160:  C4H8 => A-C3H5 + CH3
    const amrex::Real k_f = 5e+15 * exp(-(35727.9001841359) * invT);
    const amrex::Real qf = k_f * (sc[33]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[24] += qdot;
    wdot[33] -= qdot;
  }

  {
    // reaction 161:  C5H5 + HO2 => C5H6 + O2
    const amrex::Real k_f =
      2561000 * exp((0.06) * tc[0] - (1568.34015714696) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[8] += qdot;
    wdot[9] -= qdot;
    wdot[31] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 162:  2 C5H5 => A2 + 2 H
    const amrex::Real k_f =
      6.39e+23 * exp((-4.03) * tc[0] - (17716.0144566547) * invT);
    const amrex::Real qf = k_f * ((sc[31] * sc[31]));
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += 2.000000 * qdot;
    wdot[31] -= 2.000000 * qdot;
    wdot[35] += qdot;
  }

  {
    // reaction 163:  C5H5 + O => C2H2 + C2H3 + CO
    const amrex::Real k_f = 70000000;
    const amrex::Real qf = k_f * (sc[3] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[17] += qdot;
    wdot[22] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 164:  C5H5 + HO2 => C2H2 + C2H3 + CO + OH
    const amrex::Real k_f =
      6.776e+23 * exp((-4.7) * tc[0] - (5866.85214161749) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
    wdot[17] += qdot;
    wdot[22] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 165:  C5H5 + HO2 => 2 C2H2 + CO + H2O
    const amrex::Real k_f =
      1.19e+27 * exp((-6.52) * tc[0] - (6743.63169928234) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[7] += qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
    wdot[22] += 2.000000 * qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 166:  C5H5 + OH => C2H2 + C2H3 + CO + H
    const amrex::Real k_f = 30200000;
    const amrex::Real qf = k_f * (sc[6] * sc[31]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[17] += qdot;
    wdot[22] += qdot;
    wdot[31] -= qdot;
  }

  {
    // reaction 167:  C5H6 <=> C5H5 + H
    const amrex::Real k_f =
      1.73e+68 * exp((-15.16) * tc[0] - (58560.2744791936) * invT);
    const amrex::Real qf = k_f * (sc[34]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] - g_RT[31] + g_RT[34])) *
                           (refCinv) * (sc[5] * sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[31] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 168:  C5H6 + H => C5H5 + H2
    const amrex::Real k_f = 28000000 * exp(-(1136.56516138654) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[31] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 169:  C5H6 + H => A-C3H5 + C2H2
    const amrex::Real k_f = 660000000 * exp(-(6212.03361352623) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[22] += qdot;
    wdot[24] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 170:  C5H6 + O => C5H5 + OH
    const amrex::Real k_f =
      0.0477 * exp((2.71) * tc[0] - (556.859562379503) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[31] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 171:  C5H6 + OH => C5H5 + H2O
    const amrex::Real k_f = 3.08 * exp((2) * tc[0]);
    const amrex::Real qf = k_f * (sc[6] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[31] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 172:  C5H6 + CH3 => C5H5 + CH4
    const amrex::Real k_f = 1.8e-07 * exp((4) * tc[0]);
    const amrex::Real qf = k_f * (sc[14] * sc[34]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[31] += qdot;
    wdot[34] -= qdot;
  }

  {
    // reaction 173:  C5H10 + H => C5H11
    const amrex::Real k_f =
      7100000 * exp((0.12) * tc[0] - (734.862393574606) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[36] -= qdot;
    wdot[37] += qdot;
  }

  {
    // reaction 174:  C5H10 => A-C3H5 + C2H5
    const amrex::Real k_f =
      9.17e+20 * exp((-1.63) * tc[0] - (37232.5029183921) * invT);
    const amrex::Real qf = k_f * (sc[36]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[24] += qdot;
    wdot[36] -= qdot;
  }

  {
    // reaction 175:  C5H11 => C2H4 + N-C3H7
    const amrex::Real k_f =
      7.46e+21 * exp((-2.61) * tc[0] - (16116.4044158946) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[25] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 176:  C5H11 => C5H10 + H
    const amrex::Real k_f =
      846000000000000 * exp((-0.47) * tc[0] - (18929.5566714094) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[36] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 177:  C5H11 => C2H5 + C3H6
    const amrex::Real k_f =
      3.15e-19 * exp((8.84) * tc[0] - (3575.67646920865) * invT);
    const amrex::Real qf = k_f * (sc[37]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[32] += qdot;
    wdot[37] -= qdot;
  }

  {
    // reaction 178:  A1- + O2 => C5H5 + CO + O
    const amrex::Real k_f = 26000000 * exp(-(3080.15901839074) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] += qdot;
    wdot[8] -= qdot;
    wdot[11] += qdot;
    wdot[30] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 179:  A1- + O2 => 2 C2H2 + 2 CO + H
    const amrex::Real k_f = 30000000 * exp(-(4518.60888976019) * invT);
    const amrex::Real qf = k_f * (sc[8] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[8] -= qdot;
    wdot[11] += 2.000000 * qdot;
    wdot[22] += 2.000000 * qdot;
    wdot[30] -= qdot;
  }

  {
    // reaction 180:  A1- + O => C5H5 + CO
    const amrex::Real k_f = 100000000;
    const amrex::Real qf = k_f * (sc[3] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[11] += qdot;
    wdot[30] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 181:  A1- + OH => C5H6 + CO
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[6] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[30] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 182:  A1- + HO2 => C5H5 + CO + OH
    const amrex::Real k_f = 30000000;
    const amrex::Real qf = k_f * (sc[9] * sc[30]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[11] += qdot;
    wdot[30] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 183:  A1- + C2H2 <=> A1C2H2
    const amrex::Real k_f =
      3.29 * exp((2.05) * tc[0] - (1591.19625810781) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[30]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[22] + g_RT[30] - g_RT[38])) * (refC) * (sc[38]);
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[30] -= qdot;
    wdot[38] += qdot;
  }

  {
    // reaction 184:  A1 <=> A1- + H
    const amrex::Real k_f =
      1.29e+61 * exp((-12.48) * tc[0] - (74519.1217570248) * invT);
    const amrex::Real qf = k_f * (sc[29]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[29] - g_RT[30])) *
                           (refCinv) * (sc[5] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 185:  A1 + H => A1- + H2
    const amrex::Real k_f =
      602 * exp((1.8) * tc[0] - (8228.98639607145) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 186:  A1 + OH => A1- + H2O
    const amrex::Real k_f =
      0.000403 * exp((3.33) * tc[0] - (732.451985745402) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 187:  A1 + CH3 => A1- + CH4
    const amrex::Real k_f =
      2.752e-08 * exp((4.46) * tc[0] - (6862.70282674505) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[29] -= qdot;
    wdot[30] += qdot;
  }

  {
    // reaction 188:  A1 + O => C5H5 + CO + H
    const amrex::Real k_f = 22200000 * exp(-(2280.35148192738) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[11] += qdot;
    wdot[29] -= qdot;
    wdot[31] += qdot;
  }

  {
    // reaction 189:  A1 + OH => C5H6 + CO + H
    const amrex::Real k_f =
      0.000132 * exp((3.25) * tc[0] - (2813.15225551476) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[29]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] -= qdot;
    wdot[11] += qdot;
    wdot[29] -= qdot;
    wdot[34] += qdot;
  }

  {
    // reaction 190:  A1CH2 <=> C2H2 + C5H5
    const amrex::Real k_f = 820000000000000 * exp(-(40597.7039849612) * invT);
    const amrex::Real qf = k_f * (sc[39]);
    const amrex::Real qr = k_f * exp(-(-g_RT[22] - g_RT[31] + g_RT[39])) *
                           (refCinv) * (sc[22] * sc[31]);
    const amrex::Real qdot = qf - qr;
    wdot[22] += qdot;
    wdot[31] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 191:  A1CH2 + H <=> A1- + CH3
    const amrex::Real k_f =
      5.83e+61 * exp((-14.15) * tc[0] - (34384.4676836037) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[39]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[5] - g_RT[14] - g_RT[30] + g_RT[39])) *
                           (sc[14] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[30] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 192:  A1CH2 + O => A1CHO + H
    const amrex::Real k_f = 331000000;
    const amrex::Real qf = k_f * (sc[3] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[5] += qdot;
    wdot[39] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 193:  A1CH2 + HO2 => A1CHO + H + OH
    const amrex::Real k_f =
      10600000000 * exp((-0.94) * tc[0] - (1270.06854282453) * invT);
    const amrex::Real qf = k_f * (sc[9] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[6] += qdot;
    wdot[9] -= qdot;
    wdot[39] -= qdot;
    wdot[40] += qdot;
  }

  {
    // reaction 194:  A1CH2 + C3H3 => A2 + 2 H
    const amrex::Real k_f =
      4.32e+33 * exp((-7.74) * tc[0] - (12003.1113896068) * invT);
    const amrex::Real qf = k_f * (sc[23] * sc[39]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[5] += 2.000000 * qdot;
    wdot[23] -= qdot;
    wdot[35] += qdot;
    wdot[39] -= qdot;
  }

  {
    // reaction 195:  A1CH3 + H <=> A1 + CH3
    const amrex::Real k_f =
      2.31 * exp((2.17) * tc[0] - (2095.13252374463) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[41]);
    const amrex::Real qr = k_f *
                           exp(-(g_RT[5] - g_RT[14] - g_RT[29] + g_RT[41])) *
                           (sc[14] * sc[29]);
    const amrex::Real qdot = qf - qr;
    wdot[5] -= qdot;
    wdot[14] += qdot;
    wdot[29] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 196:  A1CH3 <=> A1CH2 + H
    const amrex::Real k_f =
      1.25e+18 * exp((-0.6) * tc[0] - (47698.5390022984) * invT);
    const amrex::Real qf = k_f * (sc[41]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] - g_RT[39] + g_RT[41])) *
                           (refCinv) * (sc[5] * sc[39]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[39] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 197:  A1CH3 <=> A1- + CH3
    const amrex::Real k_f =
      2.16e+29 * exp((-3.58) * tc[0] - (55436.818698877) * invT);
    const amrex::Real qf = k_f * (sc[41]);
    const amrex::Real qr = k_f * exp(-(-g_RT[14] - g_RT[30] + g_RT[41])) *
                           (refCinv) * (sc[14] * sc[30]);
    const amrex::Real qdot = qf - qr;
    wdot[14] += qdot;
    wdot[30] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 198:  A1CH3 + H => A1CH2 + H2
    const amrex::Real k_f =
      6.47e-06 * exp((3.98) * tc[0] - (1703.04622641623) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[39] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 199:  A1CH3 + OH => A1CH2 + H2O
    const amrex::Real k_f = 16200000 * exp(-(1393.95042161234) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[39] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 200:  A1CH3 + CH3 => A1CH2 + CH4
    const amrex::Real k_f = 422000000 * exp(-(11199.6957896497) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[41]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[39] += qdot;
    wdot[41] -= qdot;
  }

  {
    // reaction 201:  C7H15 => C2H4 + C5H11
    const amrex::Real k_f =
      1890000000000 * exp((0.02) * tc[0] - (13981.583193718) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[37] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 202:  C7H15 => C2H4 + C2H5 + C3H6
    const amrex::Real k_f =
      7.73e+18 * exp((-1.75) * tc[0] - (16089.9452836066) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[19] += qdot;
    wdot[32] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 203:  C7H15 => C4H8 + N-C3H7
    const amrex::Real k_f =
      2.53e+18 * exp((-1.65) * tc[0] - (15943.2123360246) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[25] += qdot;
    wdot[33] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 204:  C7H15 => C2H5 + C5H10
    const amrex::Real k_f =
      2.49e+16 * exp((-1.18) * tc[0] - (14853.5520000577) * invT);
    const amrex::Real qf = k_f * (sc[42]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[36] += qdot;
    wdot[42] -= qdot;
  }

  {
    // reaction 205:  N-C7H16 => C2H5 + C5H11
    const amrex::Real k_f =
      8.1e+77 * exp((-17.62) * tc[0] - (60586.8537965557) * invT);
    const amrex::Real qf = k_f * (sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[19] += qdot;
    wdot[37] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 206:  N-C7H16 => C2H4 + C2H5 + N-C3H7
    const amrex::Real k_f =
      1.42e+78 * exp((-17.71) * tc[0] - (60738.3974954627) * invT);
    const amrex::Real qf = k_f * (sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[18] += qdot;
    wdot[19] += qdot;
    wdot[25] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 207:  H + N-C7H16 => C7H15 + H2
    const amrex::Real k_f =
      1.75 * exp((2.6) * tc[0] - (2194.95561374032) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[42] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 208:  N-C7H16 + O => C7H15 + OH
    const amrex::Real k_f =
      0.172 * exp((2.81) * tc[0] - (1137.76784921781) * invT);
    const amrex::Real qf = k_f * (sc[3] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[3] -= qdot;
    wdot[6] += qdot;
    wdot[42] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 209:  N-C7H16 + OH => C7H15 + H2O
    const amrex::Real k_f =
      740 * exp((1.5) * tc[0] - (129.895317944172) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[42] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 210:  CH3 + N-C7H16 => C7H15 + CH4
    const amrex::Real k_f =
      0.0146 * exp((2.57) * tc[0] - (3489.08294535697) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[43]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[42] += qdot;
    wdot[43] -= qdot;
  }

  {
    // reaction 211:  A1CHO => A1- + HCO
    const amrex::Real k_f =
      2.61e+15 * exp((0.15) * tc[0] - (40533.9564977371) * invT);
    const amrex::Real qf = k_f * (sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[12] += qdot;
    wdot[30] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 212:  A1CHO + H => A1- + CO + H2
    const amrex::Real k_f =
      2050 * exp((1.16) * tc[0] - (1209.93415126087) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[11] += qdot;
    wdot[30] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 213:  A1CHO + CH3 => A1- + CH4 + CO
    const amrex::Real k_f =
      2.72 * exp((1.77) * tc[0] - (2979.12820839713) * invT);
    const amrex::Real qf = k_f * (sc[14] * sc[40]);
    const amrex::Real qr = 0.0;
    const amrex::Real qdot = qf - qr;
    wdot[11] += qdot;
    wdot[14] -= qdot;
    wdot[16] += qdot;
    wdot[30] += qdot;
    wdot[40] -= qdot;
  }

  {
    // reaction 214:  A1C2H* + C2H2 <=> A2-
    const amrex::Real k_f =
      0.0134 * exp((2.5) * tc[0] - (645.858461893726) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[44]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[22] + g_RT[44] - g_RT[45])) * (refC) * (sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[22] -= qdot;
    wdot[44] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 215:  A1C2H* + C2H4 <=> A2 + H
    const amrex::Real k_f =
      3.62e+22 * exp((-4.24) * tc[0] - (12009.1248287632) * invT);
    const amrex::Real qf = k_f * (sc[18] * sc[44]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[5] + g_RT[18] - g_RT[35] + g_RT[44])) *
                           (sc[5] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[18] -= qdot;
    wdot[35] += qdot;
    wdot[44] -= qdot;
  }

  {
    // reaction 216:  A1C2H <=> A1C2H* + H
    const amrex::Real k_f =
      2.1e+60 * exp((-12.4) * tc[0] - (74514.3110056997) * invT);
    const amrex::Real qf = k_f * (sc[46]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] - g_RT[44] + g_RT[46])) *
                           (refCinv) * (sc[5] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[44] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 217:  A1C2H + H <=> A1C2H* + H2
    const amrex::Real k_f =
      132 * exp((1.88) * tc[0] - (8464.71824316767) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[46]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] - g_RT[44] + g_RT[46])) * (sc[4] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[44] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 218:  A1C2H + OH <=> A1C2H* + H2O
    const amrex::Real k_f =
      0.000134 * exp((3.33) * tc[0] - (732.451985745402) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[46]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] - g_RT[44] + g_RT[46])) * (sc[7] * sc[44]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[44] += qdot;
    wdot[46] -= qdot;
  }

  {
    // reaction 219:  A1C2H2 <=> A1C2H + H
    const amrex::Real k_f =
      1.34e+17 * exp((-0.86) * tc[0] - (20751.6740252883) * invT);
    const amrex::Real qf = k_f * (sc[38]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[38] - g_RT[46])) *
                           (refCinv) * (sc[5] * sc[46]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[38] -= qdot;
    wdot[46] += qdot;
  }

  {
    // reaction 220:  A1C2H2 + C2H2 <=> A2 + H
    const amrex::Real k_f =
      70910000 * exp((-0.26) * tc[0] - (3523.9608924639) * invT);
    const amrex::Real qf = k_f * (sc[22] * sc[38]);
    const amrex::Real qr = k_f *
                           exp(-(-g_RT[5] + g_RT[22] - g_RT[35] + g_RT[38])) *
                           (sc[5] * sc[35]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[22] -= qdot;
    wdot[35] += qdot;
    wdot[38] -= qdot;
  }

  {
    // reaction 221:  A2 <=> A2- + H
    const amrex::Real k_f =
      8.6e+60 * exp((-12.48) * tc[0] - (74514.3110056997) * invT);
    const amrex::Real qf = k_f * (sc[35]);
    const amrex::Real qr = k_f * exp(-(-g_RT[5] + g_RT[35] - g_RT[45])) *
                           (refCinv) * (sc[5] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[5] += qdot;
    wdot[35] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 222:  A2 + H <=> A2- + H2
    const amrex::Real k_f =
      265 * exp((1.87) * tc[0] - (8603.03237593075) * invT);
    const amrex::Real qf = k_f * (sc[5] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(-g_RT[4] + g_RT[5] + g_RT[35] - g_RT[45])) * (sc[4] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[4] += qdot;
    wdot[5] -= qdot;
    wdot[35] -= qdot;
    wdot[45] += qdot;
  }

  {
    // reaction 223:  A2 + OH <=> A2- + H2O
    const amrex::Real k_f =
      0.000963 * exp((3.02) * tc[0] - (2200.96905289668) * invT);
    const amrex::Real qf = k_f * (sc[6] * sc[35]);
    const amrex::Real qr =
      k_f * exp(-(g_RT[6] - g_RT[7] + g_RT[35] - g_RT[45])) * (sc[7] * sc[45]);
    const amrex::Real qdot = qf - qr;
    wdot[6] -= qdot;
    wdot[7] += qdot;
    wdot[35] -= qdot;
    wdot[45] += qdot;
  }
}

// compute the production rate for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWC(const amrex::Real T, amrex::Real C[], amrex::Real wdot[])
{

  // convert to SI
  for (int id = 0; id < 47; ++id) {
    C[id] *= 1.0e6;
  }

  // convert to chemkin units
  productionRate(wdot, C, T);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    C[id] *= 1.0e-6;
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[47]; // temporary storage
  amrex::Real YOW = 0;
  amrex::Real PWORT;

  // Compute inverse of mean molecular wt first
  for (int i = 0; i < 47; i++) {
    YOW += y[i] * imw(i);
  }
  // PW/RT (see Eq. 7)
  PWORT = P / (YOW * 8.31446261815324e+07 * T);
  // multiply by 1e6 so c goes to SI
  PWORT *= 1e6;
  // Now compute conversion (and go to SI)
  for (int i = 0; i < 47; i++) {
    c[i] = PWORT * y[i] * imw(i);
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given P, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXP(
  const amrex::Real P,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[47]; // temporary storage
  amrex::Real PORT =
    1e6 * P / (8.31446261815324e+07 * T); // 1e6 * P/RT so c goes to SI units

  // Compute conversion, see Eq 10
  for (int id = 0; id < 47; ++id) {
    c[id] = x[id] * PORT;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mass fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWYR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real y[],
  amrex::Real wdot[])
{
  amrex::Real c[47]; // temporary storage

  // See Eq 8 with an extra 1e6 so c goes to SI
  for (int i = 0; i < 47; i++) {
    c[i] = 1e6 * rho * y[i] * imw(i);
  }

  // call productionRate
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

// Returns the molar production rate of species
// Given rho, T, and mole fractions
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKWXR(
  const amrex::Real rho,
  const amrex::Real T,
  const amrex::Real x[],
  amrex::Real wdot[])
{
  amrex::Real c[47];  // temporary storage
  amrex::Real XW = 0; // See Eq 4, 11 in CK Manual
  amrex::Real ROW;
  // Compute mean molecular wt first
  XW += x[0] * 28.014000;   // N2
  XW += x[1] * 14.027000;   // S-CH2
  XW += x[2] * 14.027000;   // T-CH2
  XW += x[3] * 15.999000;   // O
  XW += x[4] * 2.016000;    // H2
  XW += x[5] * 1.008000;    // H
  XW += x[6] * 17.007000;   // OH
  XW += x[7] * 18.015000;   // H2O
  XW += x[8] * 31.998000;   // O2
  XW += x[9] * 33.006000;   // HO2
  XW += x[10] * 13.019000;  // CH
  XW += x[11] * 28.010000;  // CO
  XW += x[12] * 29.018000;  // HCO
  XW += x[13] * 30.026000;  // CH2O
  XW += x[14] * 15.035000;  // CH3
  XW += x[15] * 44.009000;  // CO2
  XW += x[16] * 16.043000;  // CH4
  XW += x[17] * 27.046000;  // C2H3
  XW += x[18] * 28.054000;  // C2H4
  XW += x[19] * 29.062000;  // C2H5
  XW += x[20] * 25.030000;  // C2H
  XW += x[21] * 41.029000;  // HCCO
  XW += x[22] * 26.038000;  // C2H2
  XW += x[23] * 39.057000;  // C3H3
  XW += x[24] * 41.073000;  // A-C3H5
  XW += x[25] * 43.089000;  // N-C3H7
  XW += x[26] * 30.070000;  // C2H6
  XW += x[27] * 40.065000;  // P-C3H4
  XW += x[28] * 40.065000;  // A-C3H4
  XW += x[29] * 78.114000;  // A1
  XW += x[30] * 77.106000;  // A1-
  XW += x[31] * 65.095000;  // C5H5
  XW += x[32] * 42.081000;  // C3H6
  XW += x[33] * 56.108000;  // C4H8
  XW += x[34] * 66.103000;  // C5H6
  XW += x[35] * 128.174000; // A2
  XW += x[36] * 70.135000;  // C5H10
  XW += x[37] * 71.143000;  // C5H11
  XW += x[38] * 103.144000; // A1C2H2
  XW += x[39] * 91.133000;  // A1CH2
  XW += x[40] * 106.124000; // A1CHO
  XW += x[41] * 92.141000;  // A1CH3
  XW += x[42] * 99.197000;  // C7H15
  XW += x[43] * 100.205000; // N-C7H16
  XW += x[44] * 101.128000; // A1C2H*
  XW += x[45] * 127.166000; // A2-
  XW += x[46] * 102.136000; // A1C2H
  // Extra 1e6 factor to take c to SI
  ROW = 1e6 * rho / XW;

  // Compute conversion, see Eq 11
  for (int id = 0; id < 47; ++id) {
    c[id] = x[id] * ROW;
  }

  // convert to chemkin units
  productionRate(wdot, c, T);

  // convert to chemkin units
  for (int id = 0; id < 47; ++id) {
    wdot[id] *= 1.0e-6;
  }
}

//  species unit charge number
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRG(int kcharge[])
{
  kcharge[0] = 0;  // N2
  kcharge[1] = 0;  // S-CH2
  kcharge[2] = 0;  // T-CH2
  kcharge[3] = 0;  // O
  kcharge[4] = 0;  // H2
  kcharge[5] = 0;  // H
  kcharge[6] = 0;  // OH
  kcharge[7] = 0;  // H2O
  kcharge[8] = 0;  // O2
  kcharge[9] = 0;  // HO2
  kcharge[10] = 0; // CH
  kcharge[11] = 0; // CO
  kcharge[12] = 0; // HCO
  kcharge[13] = 0; // CH2O
  kcharge[14] = 0; // CH3
  kcharge[15] = 0; // CO2
  kcharge[16] = 0; // CH4
  kcharge[17] = 0; // C2H3
  kcharge[18] = 0; // C2H4
  kcharge[19] = 0; // C2H5
  kcharge[20] = 0; // C2H
  kcharge[21] = 0; // HCCO
  kcharge[22] = 0; // C2H2
  kcharge[23] = 0; // C3H3
  kcharge[24] = 0; // A-C3H5
  kcharge[25] = 0; // N-C3H7
  kcharge[26] = 0; // C2H6
  kcharge[27] = 0; // P-C3H4
  kcharge[28] = 0; // A-C3H4
  kcharge[29] = 0; // A1
  kcharge[30] = 0; // A1-
  kcharge[31] = 0; // C5H5
  kcharge[32] = 0; // C3H6
  kcharge[33] = 0; // C4H8
  kcharge[34] = 0; // C5H6
  kcharge[35] = 0; // A2
  kcharge[36] = 0; // C5H10
  kcharge[37] = 0; // C5H11
  kcharge[38] = 0; // A1C2H2
  kcharge[39] = 0; // A1CH2
  kcharge[40] = 0; // A1CHO
  kcharge[41] = 0; // A1CH3
  kcharge[42] = 0; // C7H15
  kcharge[43] = 0; // N-C7H16
  kcharge[44] = 0; // A1C2H*
  kcharge[45] = 0; // A2-
  kcharge[46] = 0; // A1C2H
}

//  species charge per unit mass
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
CKCHRGMASS(amrex::Real zk[])
{

  int kchrg[47];
  CKCHRG(kchrg);

  for (int id = 0; id < 47; ++id) {
    zk[id] = 6.02214076e+23 * 1.60217663e-19 * kchrg[id] * imw(id);
  }
}

// compute d(Cp/R)/dT and d(Cv/R)/dT at the given temperature
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
dcvpRdT(amrex::Real* species, const amrex::Real* tc)
{

  // temperature
  const amrex::Real T = tc[1];

  // species with midpoint at T=1000 kelvin
  if (T < 1000) {
    // species 0: N2
    species[0] = +1.40824040e-03 - 7.92644400e-06 * tc[1] +
                 1.69245450e-08 * tc[2] - 9.77941600e-12 * tc[3];
    // species 1: S-CH2
    species[1] = -2.36661419e-03 + 1.64659244e-05 * tc[1] -
                 2.00644794e-08 * tc[2] + 7.77258948e-12 * tc[3];
    // species 2: T-CH2
    species[2] = +9.68872143e-04 + 5.58979682e-06 * tc[1] -
                 1.15527346e-08 * tc[2] + 6.74966876e-12 * tc[3];
    // species 3: O
    species[3] = -3.27931884e-03 + 1.32861279e-05 * tc[1] -
                 1.83841987e-08 * tc[2] + 8.45063884e-12 * tc[3];
    // species 4: H2
    species[4] = +7.98052075e-03 - 3.89563020e-05 * tc[1] +
                 6.04716282e-08 * tc[2] - 2.95044704e-11 * tc[3];
    // species 5: H
    species[5] = +7.05332819e-13 - 3.99183928e-15 * tc[1] +
                 6.90244896e-18 * tc[2] - 3.71092933e-21 * tc[3];
    // species 6: OH
    species[6] = -3.22544939e-03 + 1.30552938e-05 * tc[1] -
                 1.73956093e-08 * tc[2] + 8.24949516e-12 * tc[3];
    // species 7: H2O
    species[7] = -2.03643410e-03 + 1.30408042e-05 * tc[1] -
                 1.64639119e-08 * tc[2] + 7.08791268e-12 * tc[3];
    // species 8: O2
    species[8] = -2.99673416e-03 + 1.96946040e-05 * tc[1] -
                 2.90438853e-08 * tc[2] + 1.29749135e-11 * tc[3];
    // species 9: HO2
    species[9] = -4.74912051e-03 + 4.23165782e-05 * tc[1] -
                 7.28291682e-08 * tc[2] + 3.71690050e-11 * tc[3];
    // species 10: CH
    species[10] = +3.23835541e-04 - 3.37798130e-06 * tc[1] +
                  9.48651981e-09 * tc[2] - 5.62436268e-12 * tc[3];
    // species 11: CO
    species[11] = -6.10353680e-04 + 2.03362866e-06 * tc[1] +
                  2.72101765e-09 * tc[2] - 3.61769800e-12 * tc[3];
    // species 12: HCO
    species[12] = -3.24392532e-03 + 2.75598892e-05 * tc[1] -
                  3.99432279e-08 * tc[2] + 1.73507546e-11 * tc[3];
    // species 13: CH2O
    species[13] = -9.90833369e-03 + 7.46440016e-05 * tc[1] -
                  1.13785578e-07 * tc[2] + 5.27090608e-11 * tc[3];
    // species 14: CH3
    species[14] = +2.12659790e-03 + 1.09167766e-05 * tc[1] -
                  1.98543009e-08 * tc[2] + 9.86282960e-12 * tc[3];
    // species 15: CO2
    species[15] = +8.98459677e-03 - 1.42471254e-05 * tc[1] +
                  7.37757066e-09 * tc[2] - 5.74798192e-13 * tc[3];
    // species 16: CH4
    species[16] = -1.36622009e-02 + 9.82907842e-05 * tc[1] -
                  1.45274030e-07 * tc[2] + 6.66413764e-11 * tc[3];
    // species 17: C2H3
    species[17] = +1.51479162e-03 + 5.18418824e-05 * tc[1] -
                  1.07297354e-07 * tc[2] + 5.88603492e-11 * tc[3];
    // species 18: C2H4
    species[18] = -7.57052247e-03 + 1.14198058e-04 * tc[1] -
                  2.07476626e-07 * tc[2] + 1.07953749e-10 * tc[3];
    // species 19: C2H5
    species[19] = -4.18658892e-03 + 9.94285614e-05 * tc[1] -
                  1.79737982e-07 * tc[2] + 9.22036016e-11 * tc[3];
    // species 20: C2H
    species[20] = +1.34099611e-02 - 5.69539002e-05 * tc[1] +
                  8.84373135e-08 * tc[2] - 4.37326044e-11 * tc[3];
    // species 21: HCCO
    species[21] = +1.76550210e-02 - 4.74582020e-05 * tc[1] +
                  5.18272770e-08 * tc[2] - 2.02659244e-11 * tc[3];
    // species 22: C2H2
    species[22] = +2.33615629e-02 - 7.10343630e-05 * tc[1] +
                  8.40457311e-08 * tc[2] - 3.40029190e-11 * tc[3];
    // species 23: C3H3
    species[23] = +3.01773327e-02 - 7.96898746e-05 * tc[1] +
                  8.80603887e-08 * tc[2] - 3.48221832e-11 * tc[3];
    // species 24: A-C3H5
    species[24] = +3.75043366e-02 - 6.52762484e-05 * tc[1] +
                  4.42987839e-08 * tc[2] - 9.74964616e-12 * tc[3];
    // species 25: N-C3H7
    species[25] = +2.60077940e-02 + 4.71245040e-06 * tc[1] -
                  5.87769510e-08 * tc[2] + 3.74720464e-11 * tc[3];
    // species 26: C2H6
    species[26] = -5.50154270e-03 + 1.19887658e-04 * tc[1] -
                  2.12539886e-07 * tc[2] + 1.07474308e-10 * tc[3];
    // species 27: P-C3H4
    species[27] = +2.46026602e-02 - 3.80438790e-05 * tc[1] +
                  2.58109027e-08 * tc[2] - 6.66916960e-12 * tc[3];
    // species 28: A-C3H4
    species[28] = +2.89351397e-02 - 4.88772816e-05 * tc[1] +
                  3.37641498e-08 * tc[2] - 8.12161048e-12 * tc[3];
    // species 29: A1
    species[29] = +6.45453225e-02 - 8.82805856e-05 * tc[1] +
                  2.24313648e-08 * tc[2] + 1.24112902e-11 * tc[3];
    // species 30: A1-
    species[30] = +6.26805782e-02 - 9.74804572e-05 * tc[1] +
                  4.23366861e-08 * tc[2] + 2.07407325e-12 * tc[3];
    // species 31: C5H5
    species[31] = +9.72391818e-02 - 3.39158276e-04 * tc[1] +
                  4.55456001e-07 * tc[2] - 2.04830192e-10 * tc[3];
    // species 32: C3H6
    species[32] = +3.10261065e-02 - 3.34303096e-05 * tc[1] +
                  5.68782510e-09 * tc[2] + 4.99831660e-12 * tc[3];
    // species 33: C4H8
    species[33] = +4.52580978e-02 - 5.87317118e-05 * tc[1] +
                  3.00661308e-08 * tc[2] - 5.72766720e-12 * tc[3];
    // species 34: C5H6
    species[34] = +6.06953453e-02 - 9.21105674e-05 * tc[1] +
                  3.85371603e-08 * tc[2] + 2.96485941e-12 * tc[3];
    // species 35: A2
    species[35] = +1.05376008e-01 - 1.60342138e-04 * tc[1] +
                  6.55637922e-08 * tc[2] + 5.68266424e-12 * tc[3];
    // species 36: C5H10
    species[36] = +5.74218294e-02 - 7.48973780e-05 * tc[1] +
                  3.82094967e-08 * tc[2] - 7.18439156e-12 * tc[3];
    // species 37: C5H11
    species[37] = +6.10632852e-02 - 8.18983650e-05 * tc[1] +
                  4.38280410e-08 * tc[2] - 8.75438460e-12 * tc[3];
    // species 38: A1C2H2
    species[38] = +9.51097942e-02 - 1.91270420e-04 * tc[1] +
                  1.49334062e-07 * tc[2] - 4.09294868e-11 * tc[3];
    // species 39: A1CH2
    species[39] = +8.35201507e-02 - 1.48340017e-04 * tc[1] +
                  9.39461541e-08 * tc[2] - 1.69468347e-11 * tc[3];
    // species 40: A1CHO
    species[40] = +6.92891889e-02 - 8.65207018e-05 * tc[1] +
                  1.03161329e-08 * tc[2] + 1.92404104e-11 * tc[3];
    // species 41: A1CH3
    species[41] = +6.85427145e-02 - 7.14226048e-05 * tc[1] -
                  1.25819293e-08 * tc[2] + 2.96711918e-11 * tc[3];
    // species 42: C7H15
    species[42] = +7.56726570e-02 - 8.14947268e-05 * tc[1] +
                  2.79803683e-08 * tc[2] - 1.96944298e-12 * tc[3];
    // species 43: N-C7H16
    species[43] = +8.54355820e-02 - 1.05069357e-04 * tc[1] +
                  4.88837163e-08 * tc[2] - 8.09579700e-12 * tc[3];
    // species 44: A1C2H*
    species[44] = +8.36668645e-02 - 1.74021272e-04 * tc[1] +
                  1.41085698e-07 * tc[2] - 4.07267940e-11 * tc[3];
    // species 45: A2-
    species[45] = +1.02924518e-01 - 1.66854402e-04 * tc[1] +
                  8.16406149e-08 * tc[2] - 2.89823822e-12 * tc[3];
    // species 46: A1C2H
    species[46] = +8.65551944e-02 - 1.69001497e-04 * tc[1] +
                  1.26576212e-07 * tc[2] - 3.26706467e-11 * tc[3];
  } else {
    // species 0: N2
    species[0] = +1.48797680e-03 - 1.13695200e-06 * tc[1] +
                 3.02911140e-10 * tc[2] - 2.70134040e-14 * tc[3];
    // species 1: S-CH2
    species[1] = +4.65588637e-03 - 4.02383894e-06 * tc[1] +
                 1.25371800e-09 * tc[2] - 1.35886546e-13 * tc[3];
    // species 2: T-CH2
    species[2] = +3.65639292e-03 - 2.81789194e-06 * tc[1] +
                 7.80538647e-10 * tc[2] - 7.50910268e-14 * tc[3];
    // species 3: O
    species[3] = -8.59741137e-05 + 8.38969178e-08 * tc[1] -
                 3.00533397e-11 * tc[2] + 4.91334764e-15 * tc[3];
    // species 4: H2
    species[4] = -4.94024731e-05 + 9.98913556e-07 * tc[1] -
                 5.38699182e-10 * tc[2] + 8.01021504e-14 * tc[3];
    // species 5: H
    species[5] = -2.30842973e-11 + 3.23123896e-14 * tc[1] -
                 1.42054571e-17 * tc[2] + 1.99278943e-21 * tc[3];
    // species 6: OH
    species[6] = +1.05650448e-03 - 5.18165516e-07 * tc[1] +
                 9.15656022e-11 * tc[2] - 5.32783504e-15 * tc[3];
    // species 7: H2O
    species[7] = +2.17691804e-03 - 3.28145036e-07 * tc[1] -
                 2.91125961e-10 * tc[2] + 6.72803968e-14 * tc[3];
    // species 8: O2
    species[8] = +1.48308754e-03 - 1.51593334e-06 * tc[1] +
                 6.28411665e-10 * tc[2] - 8.66871176e-14 * tc[3];
    // species 9: HO2
    species[9] = +2.23982013e-03 - 1.26731630e-06 * tc[1] +
                 3.42739110e-10 * tc[2] - 4.31634140e-14 * tc[3];
    // species 10: CH
    species[10] = +9.70913681e-04 + 2.88891310e-07 * tc[1] -
                  3.92063547e-10 * tc[2] + 7.04317532e-14 * tc[3];
    // species 11: CO
    species[11] = +2.06252743e-03 - 1.99765154e-06 * tc[1] +
                  6.90159024e-10 * tc[2] - 8.14590864e-14 * tc[3];
    // species 12: HCO
    species[12] = +4.95695526e-03 - 4.96891226e-06 * tc[1] +
                  1.76748533e-09 * tc[2] - 2.13403484e-13 * tc[3];
    // species 13: CH2O
    species[13] = +9.20000082e-03 - 8.84517626e-06 * tc[1] +
                  3.01923636e-09 * tc[2] - 3.53542256e-13 * tc[3];
    // species 14: CH3
    species[14] = +5.79785200e-03 - 3.95116000e-06 * tc[1] +
                  9.21893700e-10 * tc[2] - 7.16696640e-14 * tc[3];
    // species 15: CO2
    species[15] = +4.41437026e-03 - 4.42962808e-06 * tc[1] +
                  1.57047056e-09 * tc[2] - 1.88833666e-13 * tc[3];
    // species 16: CH4
    species[16] = +1.00263099e-02 - 6.63322476e-06 * tc[1] +
                  1.60944941e-09 * tc[2] - 1.25878703e-13 * tc[3];
    // species 17: C2H3
    species[17] = +1.03302292e-02 - 9.36164698e-06 * tc[1] +
                  3.05289864e-09 * tc[2] - 3.45042816e-13 * tc[3];
    // species 18: C2H4
    species[18] = +1.46454151e-02 - 1.34215583e-05 * tc[1] +
                  4.41668769e-09 * tc[2] - 5.02824244e-13 * tc[3];
    // species 19: C2H5
    species[19] = +1.73972722e-02 - 1.59641334e-05 * tc[1] +
                  5.25653067e-09 * tc[2] - 5.98566304e-13 * tc[3];
    // species 20: C2H
    species[20] = +4.75221902e-03 - 3.67574154e-06 * tc[1] +
                  9.12570756e-10 * tc[2] - 7.08931080e-14 * tc[3];
    // species 21: HCCO
    species[21] = +4.08534010e-03 - 3.18690940e-06 * tc[1] +
                  8.58781560e-10 * tc[2] - 7.76313280e-14 * tc[3];
    // species 22: C2H2
    species[22] = +5.96166664e-03 - 4.74589704e-06 * tc[1] +
                  1.40223651e-09 * tc[2] - 1.44494085e-13 * tc[3];
    // species 23: C3H3
    species[23] = +9.34063166e-03 - 7.50110708e-06 * tc[1] +
                  2.07046895e-09 * tc[2] - 1.84329998e-13 * tc[3];
    // species 24: A-C3H5
    species[24] = +2.36401575e-02 - 2.55782900e-05 * tc[1] +
                  1.01051562e-08 * tc[2] - 1.38979780e-12 * tc[3];
    // species 25: N-C3H7
    species[25] = +1.60415400e-02 - 1.05631934e-05 * tc[1] +
                  2.28763209e-09 * tc[2] - 1.57413848e-13 * tc[3];
    // species 26: C2H6
    species[26] = +2.16852677e-02 - 2.00512134e-05 * tc[1] +
                  6.64236003e-09 * tc[2] - 7.60011560e-13 * tc[3];
    // species 27: P-C3H4
    species[27] = +1.85524496e-02 - 1.91005354e-05 * tc[1] +
                  7.19854110e-09 * tc[2] - 9.49941028e-13 * tc[3];
    // species 28: A-C3H4
    species[28] = +1.95080128e-02 - 2.08122732e-05 * tc[1] +
                  8.10495519e-09 * tc[2] - 1.10029732e-12 * tc[3];
    // species 29: A1
    species[29] = +4.64122440e-02 - 5.55307072e-05 * tc[1] +
                  2.36673161e-08 * tc[2] - 3.44146104e-12 * tc[3];
    // species 30: A1-
    species[30] = +4.04032009e-02 - 4.84501770e-05 * tc[1] +
                  2.06616996e-08 * tc[2] - 3.00384321e-12 * tc[3];
    // species 31: C5H5
    species[31] = +2.71834728e-02 - 2.66346418e-05 * tc[1] +
                  9.26940357e-09 * tc[2] - 1.11151949e-12 * tc[3];
    // species 32: C3H6
    species[32] = +2.89513070e-02 - 3.13203638e-05 * tc[1] +
                  1.23432960e-08 * tc[2] - 1.69230056e-12 * tc[3];
    // species 33: C4H8
    species[33] = +3.27451765e-02 - 2.90726474e-05 * tc[1] +
                  7.19232051e-09 * tc[2] + 0.00000000e+00 * tc[3];
    // species 34: C5H6
    species[34] = +4.09571826e-02 - 4.83177916e-05 * tc[1] +
                  2.03929044e-08 * tc[2] - 2.94549768e-12 * tc[3];
    // species 35: A2
    species[35] = +6.89143506e-02 - 8.28644352e-05 * tc[1] +
                  3.53742927e-08 * tc[2] - 5.14388244e-12 * tc[3];
    // species 36: C5H10
    species[36] = +4.12429986e-02 - 3.68780994e-05 * tc[1] +
                  9.18465723e-09 * tc[2] + 0.00000000e+00 * tc[3];
    // species 37: C5H11
    species[37] = +4.22834537e-02 - 3.71686200e-05 * tc[1] +
                  9.12374289e-09 * tc[2] + 0.00000000e+00 * tc[3];
    // species 38: A1C2H2
    species[38] = +4.72571459e-02 - 5.39729466e-05 * tc[1] +
                  2.20593533e-08 * tc[2] - 3.09960332e-12 * tc[3];
    // species 39: A1CH2
    species[39] = +4.80055340e-02 - 5.56886044e-05 * tc[1] +
                  2.31711407e-08 * tc[2] - 3.30861654e-12 * tc[3];
    // species 40: A1CHO
    species[40] = +5.26231551e-02 - 6.35289924e-05 * tc[1] +
                  2.71920921e-08 * tc[2] - 3.96122449e-12 * tc[3];
    // species 41: A1CH3
    species[41] = +5.85301912e-02 - 6.95190138e-05 * tc[1] +
                  2.94654298e-08 * tc[2] - 4.26723480e-12 * tc[3];
    // species 42: C7H15
    species[42] = +6.49345162e-02 - 6.02682050e-05 * tc[1] +
                  1.55225443e-08 * tc[2] + 0.00000000e+00 * tc[3];
    // species 43: N-C7H16
    species[43] = +6.53078671e-02 - 5.89655248e-05 * tc[1] +
                  1.48118018e-08 * tc[2] + 0.00000000e+00 * tc[3];
    // species 44: A1C2H*
    species[44] = +3.83812109e-02 - 4.37701462e-05 * tc[1] +
                  1.79148374e-08 * tc[2] - 2.52140587e-12 * tc[3];
    // species 45: A2-
    species[45] = +6.31264486e-02 - 7.61164762e-05 * tc[1] +
                  3.25362207e-08 * tc[2] - 4.73370048e-12 * tc[3];
    // species 46: A1C2H
    species[46] = +4.40872933e-02 - 5.04107716e-05 * tc[1] +
                  2.07082568e-08 * tc[2] - 2.92551563e-12 * tc[3];
  }
}

// compute an approx to the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian_precond(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int HP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 2304; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[47];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  amrex::Real invT2 = invT * invT;

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 47; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[47];
  gibbs(g_RT, tc);

  // compute the species enthalpy
  amrex::Real h_RT[47];
  speciesEnthalpy(h_RT, tc);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[47];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 6: H + O2 (+M) => HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (0.75 - 1) * sc[4] + (11.89 - 1) * sc[7] +
          (0.85 - 1) * sc[8] + (1.09 - 1) * sc[11] + (2.18 - 1) * sc[15];
  // forward
  phi_f = sc[5] * sc[8];
  k_f = 5120000 * exp(0.44 * tc[0]);
  dlnkfdT = 0.44 * invT;
  // pressure-fall-off
  k_0 = 6.33e+19 * exp(-1.4 * tc[0]);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -1.4 * invT;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 0.5 * exp(-T / 10000000000);
  Fcent3 = exp(-10000000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent2 / 10000000000 + Fcent3 * 10000000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q; // H
  wdot[8] -= q; // O2
  wdot[9] += q; // HO2
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 0.75 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[8];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 11.89 * dcdc_fac;
  dqdc[8] = 0.85 * dcdc_fac + k_f * sc[5];
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.09 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 2.18 * dcdc_fac;
  dqdc[16] = dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 8] -= dqdc[k];
    J[48 * k + 9] += dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT

  // reaction 29: H2O + S-CH2 (+M) => CH2O + H2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 482000000000 * exp(-1.16 * tc[0] - (576.102567679875) * invT);
  dlnkfdT = -1.16 * invT + (576.102567679875) * invT2;
  // pressure-fall-off
  k_0 = 1.88e+38 * exp(-6.36 * tc[0] - (2536.52902215524) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.36 * invT + (2536.52902215524) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.6027) * exp(-T / 208);
  Fcent2 = 0.6027 * exp(-T / 3922);
  Fcent3 = exp(-10180 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 208 - Fcent2 / 3922 + Fcent3 * 10180 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[4] += q;  // H2
  wdot[7] -= q;  // H2O
  wdot[13] += q; // CH2O
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac + k_f * sc[7];
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac + k_f * sc[1];
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 1] -= dqdc[k];
    J[48 * k + 4] += dqdc[k];
    J[48 * k + 7] -= dqdc[k];
    J[48 * k + 13] += dqdc[k];
  }
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2263] -= dqdT; // dwdot[H2O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 35: CH3 + OH (+M) => CH2O + H2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 2790000000000 * exp(-1.43 * tc[0] - (669.912218519191) * invT);
  dlnkfdT = -1.43 * invT + (669.912218519191) * invT2;
  // pressure-fall-off
  k_0 = 4e+36 * exp(-5.92 * tc[0] - (1580.37206762635) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.92 * invT + (1580.37206762635) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.412) * exp(-T / 195);
  Fcent2 = 0.412 * exp(-T / 5900);
  Fcent3 = exp(-6394 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 195 - Fcent2 / 5900 + Fcent3 * 6394 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[4] += q;  // H2
  wdot[6] -= q;  // OH
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac + k_f * sc[14];
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac + k_f * sc[6];
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 4] += dqdc[k];
    J[48 * k + 6] -= dqdc[k];
    J[48 * k + 13] += dqdc[k];
    J[48 * k + 14] -= dqdc[k];
  }
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 51: CO + O (+M) => CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 13600 * exp(-(1200.31264861068) * invT);
  dlnkfdT = (1200.31264861068) * invT2;
  // pressure-fall-off
  k_0 = 1.17e+24 * exp(-2.79 * tc[0] - (2109.56477771991) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.79 * invT + (2109.56477771991) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac + k_f * sc[11];
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac + k_f * sc[3];
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 3] -= dqdc[k];
    J[48 * k + 11] -= dqdc[k];
    J[48 * k + 15] += dqdc[k];
  }
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 75: C2H2 + H (+M) <=> C2H3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[22];
  k_f = 17100 * exp(1.27 * tc[0] - (1362.67550583257) * invT);
  dlnkfdT = 1.27 * invT + (1362.67550583257) * invT2;
  // pressure-fall-off
  k_0 = 6.34e+31 * exp(-4.66 * tc[0] - (1902.69743857425) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.66 * invT + (1902.69743857425) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.2122) * exp(-T / 1);
  Fcent2 = 0.2122 * exp(-T / -10210);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 1 - Fcent2 / -10210);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[5] - g_RT[17] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[22]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[17] += q; // C2H3
  wdot[22] -= q; // C2H2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[22];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac - k_r;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac + k_f * sc[5];
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 17] += dqdc[k];
    J[48 * k + 22] -= dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 83: C2H3 + H (+M) => C2H4 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[17];
  k_f = 6080000 * exp(0.27 * tc[0] - (140.719508425632) * invT);
  dlnkfdT = 0.27 * invT + (140.719508425632) * invT2;
  // pressure-fall-off
  k_0 = 1.4e+30 * exp(-3.86 * tc[0] - (1670.57365497185) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.57365497185) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 207.5);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 207.5 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[17] -= q; // C2H3
  wdot[18] += q; // C2H4
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[17];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac + k_f * sc[5];
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 17] -= dqdc[k];
    J[48 * k + 18] += dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 93: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[18];
  k_f = 1370 * exp(1.46 * tc[0] - (681.939096831924) * invT);
  dlnkfdT = 1.46 * invT + (681.939096831924) * invT2;
  // pressure-fall-off
  k_0 = 2.03e+39 * exp(-6.64 * tc[0] - (2903.35887502691) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.64 * invT + (2903.35887502691) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. + 0.569) * exp(-T / 299);
  Fcent2 = -0.569 * exp(-T / -9147);
  Fcent3 = exp(-152.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 299 - Fcent2 / -9147 + Fcent3 * 152.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[19];
  Kc = refCinv * exp(g_RT[5] + g_RT[18] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[18]) + (h_RT[19]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[18] -= q; // C2H4
  wdot[19] += q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[18];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac + k_f * sc[5];
  dqdc[19] = dcdc_fac - k_r;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 18] -= dqdc[k];
    J[48 * k + 19] += dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT

  // reaction 101: C2H4 + CH3 (+M) <=> N-C3H7 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[14] * sc[18];
  k_f = 2.55 * exp(1.6 * tc[0] - (2868.48092791999) * invT);
  dlnkfdT = 1.6 * invT + (2868.48092791999) * invT2;
  // pressure-fall-off
  k_0 = 3e+63 * exp(-14.6 * tc[0] - (9143.05430867243) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -14.6 * invT + (9143.05430867243) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.1894) * exp(-T / 277);
  Fcent2 = 0.1894 * exp(-T / 8748);
  Fcent3 = exp(-7891 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 277 - Fcent2 / 8748 + Fcent3 * 7891 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[14] + g_RT[18] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[18]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[18] -= q; // C2H4
  wdot[25] += q; // N-C3H7
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac + k_f * sc[18];
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac + k_f * sc[14];
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac - k_r;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 14] -= dqdc[k];
    J[48 * k + 18] -= dqdc[k];
    J[48 * k + 25] += dqdc[k];
  }
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT

  // reaction 102: C2H5 + H (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 521000000000 * exp(-0.99 * tc[0] - (794.99678513827) * invT);
  dlnkfdT = -0.99 * invT + (794.99678513827) * invT2;
  // pressure-fall-off
  k_0 = 1.99e+41 * exp(-7.08 * tc[0] - (3363.99837873789) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.08 * invT + (3363.99837873789) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.8422) * exp(-T / 125);
  Fcent2 = 0.8422 * exp(-T / 2219);
  Fcent3 = exp(-6882 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 125 - Fcent2 / 2219 + Fcent3 * 6882 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[26];
  Kc = refCinv * exp(g_RT[5] + g_RT[19] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[26]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[19] -= q; // C2H5
  wdot[26] += q; // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[19];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac + k_f * sc[5];
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac - k_r;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 19] -= dqdc[k];
    J[48 * k + 26] += dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT
  J[2282] += dqdT; // dwdot[C2H6]/dT

  // reaction 108: C2H6 (+M) <=> 2 CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[26];
  k_f = 1.88e+50 * exp(-9.72 * tc[0] - (54016.4141771433) * invT);
  dlnkfdT = -9.72 * invT + (54016.4141771433) * invT2;
  // pressure-fall-off
  k_0 = 3.72e+65 * exp(-13.14 * tc[0] - (51116.6633656102) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -13.14 * invT + (51116.6633656102) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.39) * exp(-T / 100);
  Fcent2 = 0.39 * exp(-T / 1900);
  Fcent3 = exp(-6000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 100 - Fcent2 / 1900 + Fcent3 * 6000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = (sc[14] * sc[14]);
  Kc = refC * exp(-2.000000 * g_RT[14] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26]) + (2.000000 * h_RT[14]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[14] += 2 * q; // CH3
  wdot[26] -= q;     // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac - k_r * 2.000000 * sc[14];
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac + k_f;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 14] += 2 * dqdc[k];
    J[48 * k + 26] -= dqdc[k];
  }
  J[2270] += 2 * dqdT; // dwdot[CH3]/dT
  J[2282] -= dqdT;     // dwdot[C2H6]/dT

  // reaction 113: HCCO (+M) => CH + CO (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[21];
  k_f = 2.255e+20 * exp(-1.44 * tc[0] - (37606.5438660847) * invT);
  dlnkfdT = -1.44 * invT + (37606.5438660847) * invT2;
  // pressure-fall-off
  k_0 = 1.213e+35 * exp(-5.18 * tc[0] - (38580.7461702494) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.18 * invT + (38580.7461702494) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5757) * exp(-T / 237);
  Fcent2 = 0.5757 * exp(-T / 1652);
  Fcent3 = exp(-5069 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 237 - Fcent2 / 1652 + Fcent3 * 5069 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[10] += q; // CH
  wdot[11] += q; // CO
  wdot[21] -= q; // HCCO
  // for convenience
  k_f *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac;
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac + k_f;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 10] += dqdc[k];
    J[48 * k + 11] += dqdc[k];
    J[48 * k + 21] -= dqdc[k];
  }
  J[2266] += dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT

  // reaction 149: C3H6 + H (+M) <=> N-C3H7 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[32];
  k_f = 306000000 * exp(-0.37 * tc[0] - (2028.9846930246) * invT);
  dlnkfdT = -0.37 * invT + (2028.9846930246) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.75820463262) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.75820463262) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48100 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48100 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[5] - g_RT[25] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[32]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[25] += q; // N-C3H7
  wdot[32] -= q; // C3H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[32];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 12 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.75 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac;
  dqdc[15] = 3.6 * dcdc_fac;
  dqdc[16] = 2 * dcdc_fac;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac - k_r;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac + k_f * sc[5];
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 25] += dqdc[k];
    J[48 * k + 32] -= dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 32: CH3 + H (+M) <=> CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (6 - 1) * sc[7] + (1.5 - 1) * sc[11] + sc[15] +
          (3 - 1) * sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[14];
  k_f = 69200000 * exp(0.18 * tc[0]);
  dlnkfdT = 0.18 * invT;
  // pressure-fall-off
  k_0 = 3.47e+38 * exp(-6.3 * tc[0] - (2553.36665179307) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.3 * invT + (2553.36665179307) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  // dlogFdlogPr is 0.0 and unused
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[16];
  Kc = refCinv * exp(g_RT[5] + g_RT[14] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[14]) + (h_RT[16]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = 0.0;
  dqdc[0] = dcdc_fac;
  dqdc[1] = dcdc_fac;
  dqdc[2] = dcdc_fac;
  dqdc[3] = dcdc_fac;
  dqdc[4] = 2 * dcdc_fac;
  dqdc[5] = dcdc_fac + k_f * sc[14];
  dqdc[6] = dcdc_fac;
  dqdc[7] = 6 * dcdc_fac;
  dqdc[8] = dcdc_fac;
  dqdc[9] = dcdc_fac;
  dqdc[10] = dcdc_fac;
  dqdc[11] = 1.5 * dcdc_fac;
  dqdc[12] = dcdc_fac;
  dqdc[13] = dcdc_fac;
  dqdc[14] = dcdc_fac + k_f * sc[5];
  dqdc[15] = 2 * dcdc_fac;
  dqdc[16] = 3 * dcdc_fac - k_r;
  dqdc[17] = dcdc_fac;
  dqdc[18] = dcdc_fac;
  dqdc[19] = dcdc_fac;
  dqdc[20] = dcdc_fac;
  dqdc[21] = dcdc_fac;
  dqdc[22] = dcdc_fac;
  dqdc[23] = dcdc_fac;
  dqdc[24] = dcdc_fac;
  dqdc[25] = dcdc_fac;
  dqdc[26] = 3 * dcdc_fac;
  dqdc[27] = dcdc_fac;
  dqdc[28] = dcdc_fac;
  dqdc[29] = dcdc_fac;
  dqdc[30] = dcdc_fac;
  dqdc[31] = dcdc_fac;
  dqdc[32] = dcdc_fac;
  dqdc[33] = dcdc_fac;
  dqdc[34] = dcdc_fac;
  dqdc[35] = dcdc_fac;
  dqdc[36] = dcdc_fac;
  dqdc[37] = dcdc_fac;
  dqdc[38] = dcdc_fac;
  dqdc[39] = dcdc_fac;
  dqdc[40] = dcdc_fac;
  dqdc[41] = dcdc_fac;
  dqdc[42] = dcdc_fac;
  dqdc[43] = dcdc_fac;
  dqdc[44] = dcdc_fac;
  dqdc[45] = dcdc_fac;
  dqdc[46] = dcdc_fac;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 14] -= dqdc[k];
    J[48 * k + 16] += dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 2: H + O + M => OH + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 9430000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // O
  wdot[5] -= q; // H
  wdot[6] += q; // OH
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor + k_f * sc[5];
  dqdc[4] = 2 * q_nocor;
  dqdc[5] = q_nocor + k_f * sc[3];
  dqdc[6] = q_nocor;
  dqdc[7] = 12 * q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = 1.75 * q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = 3.6 * q_nocor;
  dqdc[16] = 2 * q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = 3 * q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 3] -= dqdc[k];
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 6] += dqdc[k];
  }
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT

  // reaction 3: H + OH + M => H2O + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (6.3 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[6];
  k_f = 44000000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q; // H
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  // for convenience
  k_f *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = 2 * q_nocor;
  dqdc[5] = q_nocor + k_f * sc[6];
  dqdc[6] = q_nocor + k_f * sc[5];
  dqdc[7] = 6.3 * q_nocor;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = 1.75 * q_nocor;
  dqdc[12] = q_nocor;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = 3.6 * q_nocor;
  dqdc[16] = 2 * q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = 3 * q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] -= dqdc[k];
    J[48 * k + 6] -= dqdc[k];
    J[48 * k + 7] += dqdc[k];
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT

  // reaction 60: HCO + M <=> CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (0 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[12];
  k_f = 187000000000 * exp(-1 * tc[0] - (8554.92486267982) * invT);
  dlnkfdT = -1 * invT + (8554.92486267982) * invT2;
  // reverse
  phi_r = sc[5] * sc[11];
  Kc = refC * exp(-g_RT[5] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12]) + (h_RT[5] + h_RT[11]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  dqdc[0] = q_nocor;
  dqdc[1] = q_nocor;
  dqdc[2] = q_nocor;
  dqdc[3] = q_nocor;
  dqdc[4] = 2 * q_nocor;
  dqdc[5] = q_nocor - k_r * sc[11];
  dqdc[6] = q_nocor;
  dqdc[7] = 0.0;
  dqdc[8] = q_nocor;
  dqdc[9] = q_nocor;
  dqdc[10] = q_nocor;
  dqdc[11] = 1.75 * q_nocor - k_r * sc[5];
  dqdc[12] = q_nocor + k_f;
  dqdc[13] = q_nocor;
  dqdc[14] = q_nocor;
  dqdc[15] = 3.6 * q_nocor;
  dqdc[16] = 2 * q_nocor;
  dqdc[17] = q_nocor;
  dqdc[18] = q_nocor;
  dqdc[19] = q_nocor;
  dqdc[20] = q_nocor;
  dqdc[21] = q_nocor;
  dqdc[22] = q_nocor;
  dqdc[23] = q_nocor;
  dqdc[24] = q_nocor;
  dqdc[25] = q_nocor;
  dqdc[26] = 3 * q_nocor;
  dqdc[27] = q_nocor;
  dqdc[28] = q_nocor;
  dqdc[29] = q_nocor;
  dqdc[30] = q_nocor;
  dqdc[31] = q_nocor;
  dqdc[32] = q_nocor;
  dqdc[33] = q_nocor;
  dqdc[34] = q_nocor;
  dqdc[35] = q_nocor;
  dqdc[36] = q_nocor;
  dqdc[37] = q_nocor;
  dqdc[38] = q_nocor;
  dqdc[39] = q_nocor;
  dqdc[40] = q_nocor;
  dqdc[41] = q_nocor;
  dqdc[42] = q_nocor;
  dqdc[43] = q_nocor;
  dqdc[44] = q_nocor;
  dqdc[45] = q_nocor;
  dqdc[46] = q_nocor;
  for (int k = 0; k < 47; k++) {
    J[48 * k + 5] += dqdc[k];
    J[48 * k + 11] += dqdc[k];
    J[48 * k + 12] -= dqdc[k];
  }
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 61: HCO + H2O <=> CO + H + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[12];
  k_f = 2240000000000 * exp(-1 * tc[0] - (8554.92486267982) * invT);
  dlnkfdT = -1 * invT + (8554.92486267982) * invT2;
  // reverse
  phi_r = sc[5] * sc[7] * sc[11];
  Kc = refC * exp(-g_RT[5] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[7] + h_RT[12]) + (h_RT[5] + h_RT[7] + h_RT[11]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[H]
  dqdci = -k_r * sc[7] * sc[11];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[252] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[H2O]
  dqdci = +k_f * sc[12] - k_r * sc[5] * sc[11];
  J[341] += dqdci; // dwdot[H]/d[H2O]
  J[347] += dqdci; // dwdot[CO]/d[H2O]
  J[348] -= dqdci; // dwdot[HCO]/d[H2O]
  // d()/d[CO]
  dqdci = -k_r * sc[5] * sc[7];
  J[533] += dqdci; // dwdot[H]/d[CO]
  J[539] += dqdci; // dwdot[CO]/d[CO]
  J[540] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[HCO]
  dqdci = +k_f * sc[7];
  J[581] += dqdci; // dwdot[H]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 0: N2 + S-CH2 <=> N2 + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 15000000 * exp(-(301.879677816251) * invT);
  dlnkfdT = (301.879677816251) * invT2;
  // reverse
  phi_r = sc[0] * sc[2];
  Kc = exp(g_RT[0] - g_RT[0] + g_RT[1] - g_RT[2]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[0] + h_RT[2]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[N2]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[1] -= dqdci; // dwdot[S-CH2]/d[N2]
  J[2] += dqdci; // dwdot[T-CH2]/d[N2]
  // d()/d[S-CH2]
  dqdci = +k_f * sc[0];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[0];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 1: H2 + O <=> H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 0.0459 * exp(2.7 * tc[0] - (3149.91491260459) * invT);
  dlnkfdT = 2.7 * invT + (3149.91491260459) * invT2;
  // reverse
  phi_r = sc[5] * sc[6];
  Kc = exp(g_RT[3] + g_RT[4] - g_RT[5] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[4]) + (h_RT[5] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // O
  wdot[4] -= q; // H2
  wdot[5] += q; // H
  wdot[6] += q; // OH
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[148] -= dqdci; // dwdot[H2]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  // d()/d[H2]
  dqdci = +k_f * sc[3];
  J[195] -= dqdci; // dwdot[O]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[198] += dqdci; // dwdot[OH]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[6];
  J[243] -= dqdci; // dwdot[O]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] += dqdci; // dwdot[OH]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[5];
  J[291] -= dqdci; // dwdot[O]/d[OH]
  J[292] -= dqdci; // dwdot[H2]/d[OH]
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] += dqdci; // dwdot[OH]/d[OH]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT

  // reaction 4: H2 + OH <=> H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6];
  k_f = 173 * exp(1.51 * tc[0] - (1725.89729521042) * invT);
  dlnkfdT = 1.51 * invT + (1725.89729521042) * invT2;
  // reverse
  phi_r = sc[5] * sc[7];
  Kc = exp(g_RT[4] - g_RT[5] + g_RT[6] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[6]) + (h_RT[5] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q; // H2
  wdot[5] += q; // H
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  // d()/d[H2]
  dqdci = +k_f * sc[6];
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[198] -= dqdci; // dwdot[OH]/d[H2]
  J[199] += dqdci; // dwdot[H2O]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[7];
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] -= dqdci; // dwdot[OH]/d[H]
  J[247] += dqdci; // dwdot[H2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[4];
  J[292] -= dqdci; // dwdot[H2]/d[OH]
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[5];
  J[340] -= dqdci; // dwdot[H2]/d[H2O]
  J[341] += dqdci; // dwdot[H]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT

  // reaction 5: 2 OH <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[6] * sc[6]);
  k_f = 0.0397 * exp(2.4 * tc[0] - (-1061.9985158476) * invT);
  dlnkfdT = 2.4 * invT + (-1061.9985158476) * invT2;
  // reverse
  phi_r = sc[3] * sc[7];
  Kc = exp(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[6]) + (h_RT[3] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;     // O
  wdot[6] -= 2 * q; // OH
  wdot[7] += q;     // H2O
  // d()/d[O]
  dqdci = -k_r * sc[7];
  J[147] += dqdci;      // dwdot[O]/d[O]
  J[150] += -2 * dqdci; // dwdot[OH]/d[O]
  J[151] += dqdci;      // dwdot[H2O]/d[O]
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[6];
  J[291] += dqdci;      // dwdot[O]/d[OH]
  J[294] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[3];
  J[339] += dqdci;      // dwdot[O]/d[H2O]
  J[342] += -2 * dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci;      // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2259] += dqdT;      // dwdot[O]/dT
  J[2262] += -2 * dqdT; // dwdot[OH]/dT
  J[2263] += dqdT;      // dwdot[H2O]/dT

  // reaction 7: H + O2 <=> O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[8];
  k_f = 26400000000 * exp(-0.67 * tc[0] - (8575.37055581147) * invT);
  dlnkfdT = -0.67 * invT + (8575.37055581147) * invT2;
  // reverse
  phi_r = sc[3] * sc[6];
  Kc = exp(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[8]) + (h_RT[3] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q; // O
  wdot[5] -= q; // H
  wdot[6] += q; // OH
  wdot[8] -= q; // O2
  // d()/d[O]
  dqdci = -k_r * sc[6];
  J[147] += dqdci; // dwdot[O]/d[O]
  J[149] -= dqdci; // dwdot[H]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[152] -= dqdci; // dwdot[O2]/d[O]
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[243] += dqdci; // dwdot[O]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[246] += dqdci; // dwdot[OH]/d[H]
  J[248] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[3];
  J[291] += dqdci; // dwdot[O]/d[OH]
  J[293] -= dqdci; // dwdot[H]/d[OH]
  J[294] += dqdci; // dwdot[OH]/d[OH]
  J[296] -= dqdci; // dwdot[O2]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[5];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[389] -= dqdci; // dwdot[H]/d[O2]
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT

  // reaction 8: H + HO2 => H2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 3.649 * exp(2.07 * tc[0] - (-549.643435391863) * invT);
  dlnkfdT = 2.07 * invT + (-549.643435391863) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q; // H2
  wdot[5] -= q; // H
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[9];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[248] += dqdci; // dwdot[O2]/d[H]
  J[249] -= dqdci; // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[5];
  J[436] += dqdci; // dwdot[H2]/d[HO2]
  J[437] -= dqdci; // dwdot[H]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 9: H + HO2 => H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 3970000 * exp(-(337.965344921108) * invT);
  dlnkfdT = (337.965344921108) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q; // O
  wdot[5] -= q; // H
  wdot[7] += q; // H2O
  wdot[9] -= q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[9];
  J[243] += dqdci; // dwdot[O]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[247] += dqdci; // dwdot[H2O]/d[H]
  J[249] -= dqdci; // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[5];
  J[435] += dqdci; // dwdot[O]/d[HO2]
  J[437] -= dqdci; // dwdot[H]/d[HO2]
  J[439] += dqdci; // dwdot[H2O]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 10: H + HO2 => 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 74900000 * exp(-(319.925027452009) * invT);
  dlnkfdT = (319.925027452009) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;     // H
  wdot[6] += 2 * q; // OH
  wdot[9] -= q;     // HO2
  // d()/d[H]
  dqdci = +k_f * sc[9];
  J[245] -= dqdci;     // dwdot[H]/d[H]
  J[246] += 2 * dqdci; // dwdot[OH]/d[H]
  J[249] -= dqdci;     // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[5];
  J[437] -= dqdci;     // dwdot[H]/d[HO2]
  J[438] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci;     // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2261] -= dqdT;     // dwdot[H]/dT
  J[2262] += 2 * dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT;     // dwdot[HO2]/dT

  // reaction 11: HO2 + O => O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // O
  wdot[6] += q; // OH
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[152] += dqdci; // dwdot[O2]/d[O]
  J[153] -= dqdci; // dwdot[HO2]/d[O]
  // d()/d[HO2]
  dqdci = +k_f * sc[3];
  J[435] -= dqdci; // dwdot[O]/d[HO2]
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 12: HO2 + OH => H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 23800000 * exp(-(-251.366788902774) * invT);
  dlnkfdT = (-251.366788902774) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[296] += dqdci; // dwdot[O2]/d[OH]
  J[297] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[6];
  J[438] -= dqdci; // dwdot[OH]/d[HO2]
  J[439] += dqdci; // dwdot[H2O]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 13: HO2 + OH => H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 10000000000 * exp(-(8720.90081556219) * invT);
  dlnkfdT = (8720.90081556219) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[296] += dqdci; // dwdot[O2]/d[OH]
  J[297] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[6];
  J[438] -= dqdci; // dwdot[OH]/d[HO2]
  J[439] += dqdci; // dwdot[H2O]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 14: CH + O => CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 57000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  wdot[11] += q; // CO
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[154] -= dqdci; // dwdot[CH]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  // d()/d[CH]
  dqdci = +k_f * sc[3];
  J[483] -= dqdci; // dwdot[O]/d[CH]
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[491] += dqdci; // dwdot[CO]/d[CH]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 15: CH + OH => H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[10];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[10] -= q; // CH
  wdot[12] += q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[298] -= dqdci; // dwdot[CH]/d[OH]
  J[300] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[CH]
  dqdci = +k_f * sc[6];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[486] -= dqdci; // dwdot[OH]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[492] += dqdci; // dwdot[HCO]/d[CH]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT

  // reaction 16: CH + H2 <=> H + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[10];
  k_f = 108000000 * exp(-(1564.73209365314) * invT);
  dlnkfdT = (1564.73209365314) * invT2;
  // reverse
  phi_r = sc[2] * sc[5];
  Kc = exp(-g_RT[2] + g_RT[4] - g_RT[5] + g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[10]) + (h_RT[2] + h_RT[5]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  // d()/d[T-CH2]
  dqdci = -k_r * sc[5];
  J[98] += dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[100] -= dqdci; // dwdot[H2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[106] -= dqdci; // dwdot[CH]/d[T-CH2]
  // d()/d[H2]
  dqdci = +k_f * sc[10];
  J[194] += dqdci; // dwdot[T-CH2]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[202] -= dqdci; // dwdot[CH]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[2];
  J[242] += dqdci; // dwdot[T-CH2]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[250] -= dqdci; // dwdot[CH]/d[H]
  // d()/d[CH]
  dqdci = +k_f * sc[4];
  J[482] += dqdci; // dwdot[T-CH2]/d[CH]
  J[484] -= dqdci; // dwdot[H2]/d[CH]
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT

  // reaction 17: CH + H2O => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[10];
  k_f = 5710000 * exp(-(-380.059419015673) * invT);
  dlnkfdT = (-380.059419015673) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[7] -= q;  // H2O
  wdot[10] -= q; // CH
  wdot[13] += q; // CH2O
  // d()/d[H2O]
  dqdci = +k_f * sc[10];
  J[341] += dqdci; // dwdot[H]/d[H2O]
  J[343] -= dqdci; // dwdot[H2O]/d[H2O]
  J[346] -= dqdci; // dwdot[CH]/d[H2O]
  J[349] += dqdci; // dwdot[CH2O]/d[H2O]
  // d()/d[CH]
  dqdci = +k_f * sc[7];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[487] -= dqdci; // dwdot[H2O]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[493] += dqdci; // dwdot[CH2O]/d[CH]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2263] -= dqdT; // dwdot[H2O]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 18: CH + O2 => HCO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 67100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[10] -= q; // CH
  wdot[12] += q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[394] -= dqdci; // dwdot[CH]/d[O2]
  J[396] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[CH]
  dqdci = +k_f * sc[8];
  J[483] += dqdci; // dwdot[O]/d[CH]
  J[488] -= dqdci; // dwdot[O2]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[492] += dqdci; // dwdot[HCO]/d[CH]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT

  // reaction 19: O + T-CH2 => H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[3];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[12] += q; // HCO
  // d()/d[T-CH2]
  dqdci = +k_f * sc[3];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[99] -= dqdci;  // dwdot[O]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[108] += dqdci; // dwdot[HCO]/d[T-CH2]
  // d()/d[O]
  dqdci = +k_f * sc[2];
  J[146] -= dqdci; // dwdot[T-CH2]/d[O]
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT

  // reaction 20: OH + T-CH2 => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[13] += q; // CH2O
  // d()/d[T-CH2]
  dqdci = +k_f * sc[6];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[102] -= dqdci; // dwdot[OH]/d[T-CH2]
  J[109] += dqdci; // dwdot[CH2O]/d[T-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[290] -= dqdci; // dwdot[T-CH2]/d[OH]
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[301] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 21: OH + T-CH2 <=> CH + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 11.3 * exp(2 * tc[0] - (1509.40845341457) * invT);
  dlnkfdT = 2 * invT + (1509.40845341457) * invT2;
  // reverse
  phi_r = sc[7] * sc[10];
  Kc = exp(g_RT[2] + g_RT[6] - g_RT[7] - g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[6]) + (h_RT[7] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[10] += q; // CH
  // d()/d[T-CH2]
  dqdci = +k_f * sc[6];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[102] -= dqdci; // dwdot[OH]/d[T-CH2]
  J[103] += dqdci; // dwdot[H2O]/d[T-CH2]
  J[106] += dqdci; // dwdot[CH]/d[T-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[290] -= dqdci; // dwdot[T-CH2]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[298] += dqdci; // dwdot[CH]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[338] -= dqdci; // dwdot[T-CH2]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[346] += dqdci; // dwdot[CH]/d[H2O]
  // d()/d[CH]
  dqdci = -k_r * sc[7];
  J[482] -= dqdci; // dwdot[T-CH2]/d[CH]
  J[486] -= dqdci; // dwdot[OH]/d[CH]
  J[487] += dqdci; // dwdot[H2O]/d[CH]
  J[490] += dqdci; // dwdot[CH]/d[CH]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2266] += dqdT; // dwdot[CH]/dT

  // reaction 22: H2 + T-CH2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[4];
  k_f = 0.5 * exp(2 * tc[0] - (3638.21623643486) * invT);
  dlnkfdT = 2 * invT + (3638.21623643486) * invT2;
  // reverse
  phi_r = sc[5] * sc[14];
  Kc = exp(g_RT[2] + g_RT[4] - g_RT[5] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[4]) + (h_RT[5] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[14] += q; // CH3
  // d()/d[T-CH2]
  dqdci = +k_f * sc[4];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[100] -= dqdci; // dwdot[H2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[110] += dqdci; // dwdot[CH3]/d[T-CH2]
  // d()/d[H2]
  dqdci = +k_f * sc[2];
  J[194] -= dqdci; // dwdot[T-CH2]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[206] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[242] -= dqdci; // dwdot[T-CH2]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[5];
  J[674] -= dqdci; // dwdot[T-CH2]/d[CH3]
  J[676] -= dqdci; // dwdot[H2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT

  // reaction 23: O2 + T-CH2 => CO2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 5800000 * exp(-(755.308086706252) * invT);
  dlnkfdT = (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;     // T-CH2
  wdot[5] += 2 * q; // H
  wdot[8] -= q;     // O2
  wdot[15] += q;    // CO2
  // d()/d[T-CH2]
  dqdci = +k_f * sc[8];
  J[98] -= dqdci;      // dwdot[T-CH2]/d[T-CH2]
  J[101] += 2 * dqdci; // dwdot[H]/d[T-CH2]
  J[104] -= dqdci;     // dwdot[O2]/d[T-CH2]
  J[111] += dqdci;     // dwdot[CO2]/d[T-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[386] -= dqdci;     // dwdot[T-CH2]/d[O2]
  J[389] += 2 * dqdci; // dwdot[H]/d[O2]
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[399] += dqdci;     // dwdot[CO2]/d[O2]
  // d()/dT
  J[2258] -= dqdT;     // dwdot[T-CH2]/dT
  J[2261] += 2 * dqdT; // dwdot[H]/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2271] += dqdT;     // dwdot[CO2]/dT

  // reaction 24: O2 + T-CH2 => CH2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 2400000 * exp(-(755.308086706252) * invT);
  dlnkfdT = (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  // d()/d[T-CH2]
  dqdci = +k_f * sc[8];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[99] += dqdci;  // dwdot[O]/d[T-CH2]
  J[104] -= dqdci; // dwdot[O2]/d[T-CH2]
  J[109] += dqdci; // dwdot[CH2O]/d[T-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[386] -= dqdci; // dwdot[T-CH2]/d[O2]
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 25: O2 + T-CH2 => CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 5000000 * exp(-(755.308086706252) * invT);
  dlnkfdT = (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  // d()/d[T-CH2]
  dqdci = +k_f * sc[8];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[102] += dqdci; // dwdot[OH]/d[T-CH2]
  J[104] -= dqdci; // dwdot[O2]/d[T-CH2]
  J[107] += dqdci; // dwdot[CO]/d[T-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[386] -= dqdci; // dwdot[T-CH2]/d[O2]
  J[389] += dqdci; // dwdot[H]/d[O2]
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 26: H2 + S-CH2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[14];
  Kc = exp(g_RT[1] + g_RT[4] - g_RT[5] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[4]) + (h_RT[5] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[14] += q; // CH3
  // d()/d[S-CH2]
  dqdci = +k_f * sc[4];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[52] -= dqdci; // dwdot[H2]/d[S-CH2]
  J[53] += dqdci; // dwdot[H]/d[S-CH2]
  J[62] += dqdci; // dwdot[CH3]/d[S-CH2]
  // d()/d[H2]
  dqdci = +k_f * sc[1];
  J[193] -= dqdci; // dwdot[S-CH2]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[206] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[241] -= dqdci; // dwdot[S-CH2]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[5];
  J[673] -= dqdci; // dwdot[S-CH2]/d[CH3]
  J[676] -= dqdci; // dwdot[H2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT

  // reaction 27: O2 + S-CH2 => CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 28000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  // d()/d[S-CH2]
  dqdci = +k_f * sc[8];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[53] += dqdci; // dwdot[H]/d[S-CH2]
  J[54] += dqdci; // dwdot[OH]/d[S-CH2]
  J[56] -= dqdci; // dwdot[O2]/d[S-CH2]
  J[59] += dqdci; // dwdot[CO]/d[S-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[385] -= dqdci; // dwdot[S-CH2]/d[O2]
  J[389] += dqdci; // dwdot[H]/d[O2]
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 28: O2 + S-CH2 => CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 12000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[7] += q;  // H2O
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  // d()/d[S-CH2]
  dqdci = +k_f * sc[8];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[55] += dqdci; // dwdot[H2O]/d[S-CH2]
  J[56] -= dqdci; // dwdot[O2]/d[S-CH2]
  J[59] += dqdci; // dwdot[CO]/d[S-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[385] -= dqdci; // dwdot[S-CH2]/d[O2]
  J[391] += dqdci; // dwdot[H2O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 30: H2O + S-CH2 <=> H2O + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[7];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[7] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[7]) + (h_RT[2] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[7];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[7];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/d[H2O]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[337] -= dqdci; // dwdot[S-CH2]/d[H2O]
  J[338] += dqdci; // dwdot[T-CH2]/d[H2O]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 31: H2O + S-CH2 => CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 68200 * exp(0.25 * tc[0] - (-470.261006361169) * invT);
  dlnkfdT = 0.25 * invT + (-470.261006361169) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[4] += q;  // H2
  wdot[7] -= q;  // H2O
  wdot[13] += q; // CH2O
  // d()/d[S-CH2]
  dqdci = +k_f * sc[7];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[52] += dqdci; // dwdot[H2]/d[S-CH2]
  J[55] -= dqdci; // dwdot[H2O]/d[S-CH2]
  J[61] += dqdci; // dwdot[CH2O]/d[S-CH2]
  // d()/d[H2O]
  dqdci = +k_f * sc[1];
  J[337] -= dqdci; // dwdot[S-CH2]/d[H2O]
  J[340] += dqdci; // dwdot[H2]/d[H2O]
  J[343] -= dqdci; // dwdot[H2O]/d[H2O]
  J[349] += dqdci; // dwdot[CH2O]/d[H2O]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2263] -= dqdT; // dwdot[H2O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 33: CH3 + O => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 50600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[O]
  dqdci = +k_f * sc[14];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[157] += dqdci; // dwdot[CH2O]/d[O]
  J[158] -= dqdci; // dwdot[CH3]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[675] -= dqdci; // dwdot[O]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 34: CH3 + O => CO + H + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 33700000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[4] += q;  // H2
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[14] -= q; // CH3
  // d()/d[O]
  dqdci = +k_f * sc[14];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[148] += dqdci; // dwdot[H2]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[158] -= dqdci; // dwdot[CH3]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[675] -= dqdci; // dwdot[O]/d[CH3]
  J[676] += dqdci; // dwdot[H2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 36: CH3 + OH <=> H2O + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 56 * exp(1.6 * tc[0] - (2727.76141949435) * invT);
  dlnkfdT = 1.6 * invT + (2727.76141949435) * invT2;
  // reverse
  phi_r = sc[2] * sc[7];
  Kc = exp(-g_RT[2] + g_RT[6] - g_RT[7] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[14]) + (h_RT[2] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[14] -= q; // CH3
  // d()/d[T-CH2]
  dqdci = -k_r * sc[7];
  J[98] += dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[102] -= dqdci; // dwdot[OH]/d[T-CH2]
  J[103] += dqdci; // dwdot[H2O]/d[T-CH2]
  J[110] -= dqdci; // dwdot[CH3]/d[T-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[14];
  J[290] += dqdci; // dwdot[T-CH2]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[302] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[2];
  J[338] += dqdci; // dwdot[T-CH2]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[350] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[6];
  J[674] += dqdci; // dwdot[T-CH2]/d[CH3]
  J[678] -= dqdci; // dwdot[OH]/d[CH3]
  J[679] += dqdci; // dwdot[H2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 37: CH3 + OH <=> H2O + S-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 644000000000 * exp(-1.34 * tc[0] - (713.208980445029) * invT);
  dlnkfdT = -1.34 * invT + (713.208980445029) * invT2;
  // reverse
  phi_r = sc[1] * sc[7];
  Kc = exp(-g_RT[1] + g_RT[6] - g_RT[7] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[14]) + (h_RT[1] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // S-CH2
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[14] -= q; // CH3
  // d()/d[S-CH2]
  dqdci = -k_r * sc[7];
  J[49] += dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[54] -= dqdci; // dwdot[OH]/d[S-CH2]
  J[55] += dqdci; // dwdot[H2O]/d[S-CH2]
  J[62] -= dqdci; // dwdot[CH3]/d[S-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[14];
  J[289] += dqdci; // dwdot[S-CH2]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[302] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[1];
  J[337] += dqdci; // dwdot[S-CH2]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[350] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[6];
  J[673] += dqdci; // dwdot[S-CH2]/d[CH3]
  J[678] -= dqdci; // dwdot[OH]/d[CH3]
  J[679] += dqdci; // dwdot[H2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2257] += dqdT; // dwdot[S-CH2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 38: CH3 + O2 => CH2O + H + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 13800000 * exp(-(15338.2452603942) * invT);
  dlnkfdT = (15338.2452603942) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[5] += q;  // H
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[389] += dqdci; // dwdot[H]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[398] -= dqdci; // dwdot[CH3]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[675] += dqdci; // dwdot[O]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[680] -= dqdci; // dwdot[O2]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 39: CH3 + O2 => CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 587000 * exp(-(6964.93129240328) * invT);
  dlnkfdT = (6964.93129240328) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[398] -= dqdci; // dwdot[CH3]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[678] += dqdci; // dwdot[OH]/d[CH3]
  J[680] -= dqdci; // dwdot[O2]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 40: CH3 + HO2 => CH2O + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[437] += dqdci; // dwdot[H]/d[HO2]
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[445] += dqdci; // dwdot[CH2O]/d[HO2]
  J[446] -= dqdci; // dwdot[CH3]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[678] += dqdci; // dwdot[OH]/d[CH3]
  J[681] -= dqdci; // dwdot[HO2]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 41: CH3 + HO2 => CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 3610000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[9] -= q;  // HO2
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[446] -= dqdci; // dwdot[CH3]/d[HO2]
  J[448] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[680] += dqdci; // dwdot[O2]/d[CH3]
  J[681] -= dqdci; // dwdot[HO2]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 42: CH + CH3 => C2H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[14];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  wdot[14] -= q; // CH3
  wdot[17] += q; // C2H3
  // d()/d[CH]
  dqdci = +k_f * sc[14];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[494] -= dqdci; // dwdot[CH3]/d[CH]
  J[497] += dqdci; // dwdot[C2H3]/d[CH]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[682] -= dqdci; // dwdot[CH]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[689] += dqdci; // dwdot[C2H3]/d[CH3]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT

  // reaction 43: CH3 + T-CH2 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[5] += q;  // H
  wdot[14] -= q; // CH3
  wdot[18] += q; // C2H4
  // d()/d[T-CH2]
  dqdci = +k_f * sc[14];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[110] -= dqdci; // dwdot[CH3]/d[T-CH2]
  J[114] += dqdci; // dwdot[C2H4]/d[T-CH2]
  // d()/d[CH3]
  dqdci = +k_f * sc[2];
  J[674] -= dqdci; // dwdot[T-CH2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[690] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 44: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 6840000 * exp(0.1 * tc[0] - (5334.04633586345) * invT);
  dlnkfdT = 0.1 * invT + (5334.04633586345) * invT2;
  // reverse
  phi_r = sc[5] * sc[19];
  Kc = exp(-g_RT[5] + 2.000000 * g_RT[14] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[14]) + (h_RT[5] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;      // H
  wdot[14] -= 2 * q; // CH3
  wdot[19] += q;     // C2H5
  // d()/d[H]
  dqdci = -k_r * sc[19];
  J[245] += dqdci;      // dwdot[H]/d[H]
  J[254] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[259] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[14];
  J[677] += dqdci;      // dwdot[H]/d[CH3]
  J[686] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[691] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[5];
  J[917] += dqdci;      // dwdot[H]/d[C2H5]
  J[926] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[931] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2261] += dqdT;      // dwdot[H]/dT
  J[2270] += -2 * dqdT; // dwdot[CH3]/dT
  J[2275] += dqdT;      // dwdot[C2H5]/dT

  // reaction 45: 2 CH3 => CH4 + S-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 2632000 * exp(-0.06 * tc[0] - (6874.72970505778) * invT);
  dlnkfdT = -0.06 * invT + (6874.72970505778) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;      // S-CH2
  wdot[14] -= 2 * q; // CH3
  wdot[16] += q;     // CH4
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[14];
  J[673] += dqdci;      // dwdot[S-CH2]/d[CH3]
  J[686] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci;      // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2257] += dqdT;      // dwdot[S-CH2]/dT
  J[2270] += -2 * dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT;      // dwdot[CH4]/dT

  // reaction 46: CH4 + H <=> CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[16];
  k_f = 660 * exp(1.62 * tc[0] - (5455.52283898871) * invT);
  dlnkfdT = 1.62 * invT + (5455.52283898871) * invT2;
  // reverse
  phi_r = sc[4] * sc[14];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[16]) + (h_RT[4] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[16] -= q; // CH4
  // d()/d[H2]
  dqdci = -k_r * sc[14];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[206] += dqdci; // dwdot[CH3]/d[H2]
  J[208] -= dqdci; // dwdot[CH4]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[16];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[256] -= dqdci; // dwdot[CH4]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[4];
  J[676] += dqdci; // dwdot[H2]/d[CH3]
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[5];
  J[772] += dqdci; // dwdot[H2]/d[CH4]
  J[773] -= dqdci; // dwdot[H]/d[CH4]
  J[782] += dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT

  // reaction 47: CH4 + O <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 1020 * exp(1.5 * tc[0] - (4327.37649242108) * invT);
  dlnkfdT = 1.5 * invT + (4327.37649242108) * invT2;
  // reverse
  phi_r = sc[6] * sc[14];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[16]) + (h_RT[6] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[14] += q; // CH3
  wdot[16] -= q; // CH4
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[160] -= dqdci; // dwdot[CH4]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[291] -= dqdci; // dwdot[O]/d[OH]
  J[294] += dqdci; // dwdot[OH]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[304] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[6];
  J[675] -= dqdci; // dwdot[O]/d[CH3]
  J[678] += dqdci; // dwdot[OH]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[3];
  J[771] -= dqdci; // dwdot[O]/d[CH4]
  J[774] += dqdci; // dwdot[OH]/d[CH4]
  J[782] += dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT

  // reaction 48: CH4 + OH <=> CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[16];
  k_f = 100 * exp(1.6 * tc[0] - (1569.54284497824) * invT);
  dlnkfdT = 1.6 * invT + (1569.54284497824) * invT2;
  // reverse
  phi_r = sc[7] * sc[14];
  Kc = exp(g_RT[6] - g_RT[7] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[16]) + (h_RT[7] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[14] += q; // CH3
  wdot[16] -= q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[304] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[14];
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[350] += dqdci; // dwdot[CH3]/d[H2O]
  J[352] -= dqdci; // dwdot[CH4]/d[H2O]
  // d()/d[CH3]
  dqdci = -k_r * sc[7];
  J[678] -= dqdci; // dwdot[OH]/d[CH3]
  J[679] += dqdci; // dwdot[H2O]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[6];
  J[774] -= dqdci; // dwdot[OH]/d[CH4]
  J[775] += dqdci; // dwdot[H2O]/d[CH4]
  J[782] += dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT

  // reaction 49: CH + CH4 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[16];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  wdot[16] -= q; // CH4
  wdot[18] += q; // C2H4
  // d()/d[CH]
  dqdci = +k_f * sc[16];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[496] -= dqdci; // dwdot[CH4]/d[CH]
  J[498] += dqdci; // dwdot[C2H4]/d[CH]
  // d()/d[CH4]
  dqdci = +k_f * sc[10];
  J[773] += dqdci; // dwdot[H]/d[CH4]
  J[778] -= dqdci; // dwdot[CH]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  J[786] += dqdci; // dwdot[C2H4]/d[CH4]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 50: CH4 + T-CH2 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 2.46 * exp(2 * tc[0] - (4161.40053953871) * invT);
  dlnkfdT = 2 * invT + (4161.40053953871) * invT2;
  // reverse
  phi_r = (sc[14] * sc[14]);
  Kc = exp(g_RT[2] - 2.000000 * g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[16]) + (2.000000 * h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;      // T-CH2
  wdot[14] += 2 * q; // CH3
  wdot[16] -= q;     // CH4
  // d()/d[T-CH2]
  dqdci = +k_f * sc[16];
  J[98] -= dqdci;      // dwdot[T-CH2]/d[T-CH2]
  J[110] += 2 * dqdci; // dwdot[CH3]/d[T-CH2]
  J[112] -= dqdci;     // dwdot[CH4]/d[T-CH2]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[14];
  J[674] -= dqdci;     // dwdot[T-CH2]/d[CH3]
  J[686] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci;     // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[2];
  J[770] -= dqdci;     // dwdot[T-CH2]/d[CH4]
  J[782] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2258] -= dqdT;     // dwdot[T-CH2]/dT
  J[2270] += 2 * dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT;     // dwdot[CH4]/dT

  // reaction 52: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 800000 * exp(0.14 * tc[0] - (3699.55834799645) * invT);
  dlnkfdT = 0.14 * invT + (3699.55834799645) * invT2;
  // reverse
  phi_r = sc[5] * sc[15];
  Kc = exp(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[11]) + (h_RT[5] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[15];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] -= dqdci; // dwdot[OH]/d[H]
  J[251] -= dqdci; // dwdot[CO]/d[H]
  J[255] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] -= dqdci; // dwdot[CO]/d[OH]
  J[303] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[6];
  J[533] += dqdci; // dwdot[H]/d[CO]
  J[534] -= dqdci; // dwdot[OH]/d[CO]
  J[539] -= dqdci; // dwdot[CO]/d[CO]
  J[543] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[5];
  J[725] += dqdci; // dwdot[H]/d[CO2]
  J[726] -= dqdci; // dwdot[OH]/d[CO2]
  J[731] -= dqdci; // dwdot[CO]/d[CO2]
  J[735] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 53: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 87800 * exp(0.03 * tc[0] - (-8.41881481891296) * invT);
  dlnkfdT = 0.03 * invT + (-8.41881481891296) * invT2;
  // reverse
  phi_r = sc[5] * sc[15];
  Kc = exp(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[11]) + (h_RT[5] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[15];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] -= dqdci; // dwdot[OH]/d[H]
  J[251] -= dqdci; // dwdot[CO]/d[H]
  J[255] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] -= dqdci; // dwdot[CO]/d[OH]
  J[303] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[6];
  J[533] += dqdci; // dwdot[H]/d[CO]
  J[534] -= dqdci; // dwdot[OH]/d[CO]
  J[539] -= dqdci; // dwdot[CO]/d[CO]
  J[543] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[5];
  J[725] += dqdci; // dwdot[H]/d[CO2]
  J[726] -= dqdci; // dwdot[OH]/d[CO2]
  J[731] -= dqdci; // dwdot[CO]/d[CO2]
  J[735] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 54: CO + HO2 => CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 30100000 * exp(-(11573.741769509) * invT);
  dlnkfdT = (11573.741769509) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] -= dqdci; // dwdot[CO]/d[HO2]
  J[447] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO]
  dqdci = +k_f * sc[9];
  J[534] += dqdci; // dwdot[OH]/d[CO]
  J[537] -= dqdci; // dwdot[HO2]/d[CO]
  J[539] -= dqdci; // dwdot[CO]/d[CO]
  J[543] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 55: CO + S-CH2 <=> CO + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[11];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[11] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[11]) + (h_RT[2] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[11];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[11];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/d[CO]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[529] -= dqdci; // dwdot[S-CH2]/d[CO]
  J[530] += dqdci; // dwdot[T-CH2]/d[CO]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 56: H + HCO => CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[12];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[H]
  dqdci = +k_f * sc[12];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[252] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[5];
  J[580] += dqdci; // dwdot[H2]/d[HCO]
  J[581] -= dqdci; // dwdot[H]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 57: HCO + O => CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[156] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[579] -= dqdci; // dwdot[O]/d[HCO]
  J[582] += dqdci; // dwdot[OH]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 58: HCO + O => CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[12] -= q; // HCO
  wdot[15] += q; // CO2
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[156] -= dqdci; // dwdot[HCO]/d[O]
  J[159] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[579] -= dqdci; // dwdot[O]/d[HCO]
  J[581] += dqdci; // dwdot[H]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[591] += dqdci; // dwdot[CO2]/d[HCO]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 59: HCO + OH => CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[12];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[300] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[6];
  J[582] -= dqdci; // dwdot[OH]/d[HCO]
  J[583] += dqdci; // dwdot[H2O]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 62: HCO + O2 => CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[12];
  k_f = 12000 * exp(0.81 * tc[0] - (-365.627165040393) * invT);
  dlnkfdT = 0.81 * invT + (-365.627165040393) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[9] += q;  // HO2
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[393] += dqdci; // dwdot[HO2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[396] -= dqdci; // dwdot[HCO]/d[O2]
  // d()/d[HCO]
  dqdci = +k_f * sc[8];
  J[584] -= dqdci; // dwdot[O2]/d[HCO]
  J[585] += dqdci; // dwdot[HO2]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 63: CH3 + HCO => CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[14];
  k_f = 26500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // d()/d[HCO]
  dqdci = +k_f * sc[14];
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[590] -= dqdci; // dwdot[CH3]/d[HCO]
  J[592] += dqdci; // dwdot[CH4]/d[HCO]
  // d()/d[CH3]
  dqdci = +k_f * sc[12];
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[684] -= dqdci; // dwdot[HCO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 64: CH2O + H <=> H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[13];
  k_f = 57.4 * exp(1.9 * tc[0] - (1379.51816763706) * invT);
  dlnkfdT = 1.9 * invT + (1379.51816763706) * invT2;
  // reverse
  phi_r = sc[4] * sc[12];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[12] + g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[13]) + (h_RT[4] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  // d()/d[H2]
  dqdci = -k_r * sc[12];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[204] += dqdci; // dwdot[HCO]/d[H2]
  J[205] -= dqdci; // dwdot[CH2O]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[13];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[252] += dqdci; // dwdot[HCO]/d[H]
  J[253] -= dqdci; // dwdot[CH2O]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[4];
  J[580] += dqdci; // dwdot[H2]/d[HCO]
  J[581] -= dqdci; // dwdot[H]/d[HCO]
  J[588] += dqdci; // dwdot[HCO]/d[HCO]
  J[589] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[5];
  J[628] += dqdci; // dwdot[H2]/d[CH2O]
  J[629] -= dqdci; // dwdot[H]/d[CH2O]
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT

  // reaction 65: CH2O + O => HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 39000000 * exp(-(1781.22093544899) * invT);
  dlnkfdT = (1781.22093544899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  J[157] -= dqdci; // dwdot[CH2O]/d[O]
  // d()/d[CH2O]
  dqdci = +k_f * sc[3];
  J[627] -= dqdci; // dwdot[O]/d[CH2O]
  J[630] += dqdci; // dwdot[OH]/d[CH2O]
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT

  // reaction 66: CH2O + OH => H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.907656614761) * invT);
  dlnkfdT = 1.18 * invT + (-224.907656614761) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[13];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[300] += dqdci; // dwdot[HCO]/d[OH]
  J[301] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2O]
  dqdci = +k_f * sc[6];
  J[630] -= dqdci; // dwdot[OH]/d[CH2O]
  J[631] += dqdci; // dwdot[H2O]/d[CH2O]
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT

  // reaction 67: CH2O + CH3 => CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[14];
  k_f = 0.00332 * exp(2.81 * tc[0] - (2949.0610126153) * invT);
  dlnkfdT = 2.81 * invT + (2949.0610126153) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // d()/d[CH2O]
  dqdci = +k_f * sc[14];
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[638] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[640] += dqdci; // dwdot[CH4]/d[CH2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[684] += dqdci; // dwdot[HCO]/d[CH3]
  J[685] -= dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 68: CH + CO2 => CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[15];
  k_f = 190000000 * exp(-(7946.34972355557) * invT);
  dlnkfdT = (7946.34972355557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH
  wdot[11] += q; // CO
  wdot[12] += q; // HCO
  wdot[15] -= q; // CO2
  // d()/d[CH]
  dqdci = +k_f * sc[15];
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[491] += dqdci; // dwdot[CO]/d[CH]
  J[492] += dqdci; // dwdot[HCO]/d[CH]
  J[495] -= dqdci; // dwdot[CO2]/d[CH]
  // d()/d[CO2]
  dqdci = +k_f * sc[10];
  J[730] -= dqdci; // dwdot[CH]/d[CO2]
  J[731] += dqdci; // dwdot[CO]/d[CO2]
  J[732] += dqdci; // dwdot[HCO]/d[CO2]
  J[735] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2271] -= dqdT; // dwdot[CO2]/dT

  // reaction 69: CO2 + S-CH2 <=> CO2 + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 7000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[15];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[15] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[2] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[15];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[15];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/d[CO2]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[721] -= dqdci; // dwdot[S-CH2]/d[CO2]
  J[722] += dqdci; // dwdot[T-CH2]/d[CO2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 70: CO2 + S-CH2 => CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 14000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[11] += q; // CO
  wdot[13] += q; // CH2O
  wdot[15] -= q; // CO2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[15];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[59] += dqdci; // dwdot[CO]/d[S-CH2]
  J[61] += dqdci; // dwdot[CH2O]/d[S-CH2]
  J[63] -= dqdci; // dwdot[CO2]/d[S-CH2]
  // d()/d[CO2]
  dqdci = +k_f * sc[1];
  J[721] -= dqdci; // dwdot[S-CH2]/d[CO2]
  J[731] += dqdci; // dwdot[CO]/d[CO2]
  J[733] += dqdci; // dwdot[CH2O]/d[CO2]
  J[735] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2271] -= dqdT; // dwdot[CO2]/dT

  // reaction 71: C2H + O => CH + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[20];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[10] += q; // CH
  wdot[11] += q; // CO
  wdot[20] -= q; // C2H
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[154] += dqdci; // dwdot[CH]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[164] -= dqdci; // dwdot[C2H]/d[O]
  // d()/d[C2H]
  dqdci = +k_f * sc[3];
  J[963] -= dqdci; // dwdot[O]/d[C2H]
  J[970] += dqdci; // dwdot[CH]/d[C2H]
  J[971] += dqdci; // dwdot[CO]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2266] += dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT

  // reaction 72: C2H + OH => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[20];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[20] -= q; // C2H
  wdot[21] += q; // HCCO
  // d()/d[OH]
  dqdci = +k_f * sc[20];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[308] -= dqdci; // dwdot[C2H]/d[OH]
  J[309] += dqdci; // dwdot[HCCO]/d[OH]
  // d()/d[C2H]
  dqdci = +k_f * sc[6];
  J[965] += dqdci; // dwdot[H]/d[C2H]
  J[966] -= dqdci; // dwdot[OH]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  J[981] += dqdci; // dwdot[HCCO]/d[C2H]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT
  J[2277] += dqdT; // dwdot[HCCO]/dT

  // reaction 73: C2H + O2 => CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 10000000 * exp(-(-380.059419015673) * invT);
  dlnkfdT = (-380.059419015673) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  wdot[12] += q; // HCO
  wdot[20] -= q; // C2H
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[396] += dqdci; // dwdot[HCO]/d[O2]
  J[404] -= dqdci; // dwdot[C2H]/d[O2]
  // d()/d[C2H]
  dqdci = +k_f * sc[8];
  J[968] -= dqdci; // dwdot[O2]/d[C2H]
  J[971] += dqdci; // dwdot[CO]/d[C2H]
  J[972] += dqdci; // dwdot[HCO]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT

  // reaction 74: C2H + H2 <=> C2H2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[20];
  k_f = 3.31 * exp(2.26 * tc[0] - (453.423376723343) * invT);
  dlnkfdT = 2.26 * invT + (453.423376723343) * invT2;
  // reverse
  phi_r = sc[5] * sc[22];
  Kc = exp(g_RT[4] - g_RT[5] + g_RT[20] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[20]) + (h_RT[5] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[20] -= q; // C2H
  wdot[22] += q; // C2H2
  // d()/d[H2]
  dqdci = +k_f * sc[20];
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[212] -= dqdci; // dwdot[C2H]/d[H2]
  J[214] += dqdci; // dwdot[C2H2]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[22];
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[260] -= dqdci; // dwdot[C2H]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  // d()/d[C2H]
  dqdci = +k_f * sc[4];
  J[964] -= dqdci; // dwdot[H2]/d[C2H]
  J[965] += dqdci; // dwdot[H]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  J[982] += dqdci; // dwdot[C2H2]/d[C2H]
  // d()/d[C2H2]
  dqdci = -k_r * sc[5];
  J[1060] -= dqdci; // dwdot[H2]/d[C2H2]
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1076] -= dqdci; // dwdot[C2H]/d[C2H2]
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 76: C2H2 + O => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 8.1 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[21] += q; // HCCO
  wdot[22] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[165] += dqdci; // dwdot[HCCO]/d[O]
  J[166] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[1059] -= dqdci; // dwdot[O]/d[C2H2]
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1077] += dqdci; // dwdot[HCCO]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2277] += dqdT; // dwdot[HCCO]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 77: C2H2 + O => CO + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 12.5 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[22] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[146] += dqdci; // dwdot[T-CH2]/d[O]
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[166] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[1058] += dqdci; // dwdot[T-CH2]/d[C2H2]
  J[1059] -= dqdci; // dwdot[O]/d[C2H2]
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 78: C2H2 + O => C2H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 33240000000 * exp(-0.44 * tc[0] - (15447.6948852067) * invT);
  dlnkfdT = -0.44 * invT + (15447.6948852067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[20] += q; // C2H
  wdot[22] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[164] += dqdci; // dwdot[C2H]/d[O]
  J[166] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[1059] -= dqdci; // dwdot[O]/d[C2H2]
  J[1062] += dqdci; // dwdot[OH]/d[C2H2]
  J[1076] += dqdci; // dwdot[C2H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2276] += dqdT; // dwdot[C2H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 79: C2H2 + OH => C2H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[22];
  k_f = 2.63 * exp(2.14 * tc[0] - (8584.99205846165) * invT);
  dlnkfdT = 2.14 * invT + (8584.99205846165) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[20] += q; // C2H
  wdot[22] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[308] += dqdci; // dwdot[C2H]/d[OH]
  J[310] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H2]
  dqdci = +k_f * sc[6];
  J[1062] -= dqdci; // dwdot[OH]/d[C2H2]
  J[1063] += dqdci; // dwdot[H2O]/d[C2H2]
  J[1076] += dqdci; // dwdot[C2H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2276] += dqdT; // dwdot[C2H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 80: C2H2 + OH => CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[22];
  k_f = 7.53 * exp(1.55 * tc[0] - (1059.59314018505) * invT);
  dlnkfdT = 1.55 * invT + (1059.59314018505) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[22] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[310] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H2]
  dqdci = +k_f * sc[6];
  J[1062] -= dqdci; // dwdot[OH]/d[C2H2]
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 81: C2H2 + OH => CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[22];
  k_f = 1280 * exp(0.73 * tc[0] - (1297.73036294382) * invT);
  dlnkfdT = 0.73 * invT + (1297.73036294382) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[22] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[310] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H2]
  dqdci = +k_f * sc[6];
  J[1062] -= dqdci; // dwdot[OH]/d[C2H2]
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 82: C2H2 + S-CH2 <=> C3H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 190000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[23];
  Kc = exp(g_RT[1] - g_RT[5] + g_RT[22] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[22]) + (h_RT[5] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[5] += q;  // H
  wdot[22] -= q; // C2H2
  wdot[23] += q; // C3H3
  // d()/d[S-CH2]
  dqdci = +k_f * sc[22];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[53] += dqdci; // dwdot[H]/d[S-CH2]
  J[70] -= dqdci; // dwdot[C2H2]/d[S-CH2]
  J[71] += dqdci; // dwdot[C3H3]/d[S-CH2]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[241] -= dqdci; // dwdot[S-CH2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[262] -= dqdci; // dwdot[C2H2]/d[H]
  J[263] += dqdci; // dwdot[C3H3]/d[H]
  // d()/d[C2H2]
  dqdci = +k_f * sc[1];
  J[1057] -= dqdci; // dwdot[S-CH2]/d[C2H2]
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1079] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/d[C3H3]
  dqdci = -k_r * sc[5];
  J[1105] -= dqdci; // dwdot[S-CH2]/d[C3H3]
  J[1109] += dqdci; // dwdot[H]/d[C3H3]
  J[1126] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1127] += dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT

  // reaction 84: C2H3 + H => C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[17];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[H]
  dqdci = +k_f * sc[17];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[257] -= dqdci; // dwdot[C2H3]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[820] += dqdci; // dwdot[H2]/d[C2H3]
  J[821] -= dqdci; // dwdot[H]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 85: C2H3 + O => CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[17];
  k_f = 10300000 * exp(0.21 * tc[0] - (-215.286153964575) * invT);
  dlnkfdT = 0.21 * invT + (-215.286153964575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[17] -= q; // C2H3
  // d()/d[O]
  dqdci = +k_f * sc[17];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[161] -= dqdci; // dwdot[C2H3]/d[O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[3];
  J[819] -= dqdci; // dwdot[O]/d[C2H3]
  J[827] += dqdci; // dwdot[CO]/d[C2H3]
  J[830] += dqdci; // dwdot[CH3]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT

  // reaction 86: C2H3 + OH => C2H2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[17];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[17];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[305] -= dqdci; // dwdot[C2H3]/d[OH]
  J[310] += dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H3]
  dqdci = +k_f * sc[6];
  J[822] -= dqdci; // dwdot[OH]/d[C2H3]
  J[823] += dqdci; // dwdot[H2O]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 87: C2H3 + O2 => C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[17];
  k_f = 1.34 * exp(1.61 * tc[0] - (-193.637773001656) * invT);
  dlnkfdT = 1.61 * invT + (-193.637773001656) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[9] += q;  // HO2
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[O2]
  dqdci = +k_f * sc[17];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[393] += dqdci; // dwdot[HO2]/d[O2]
  J[401] -= dqdci; // dwdot[C2H3]/d[O2]
  J[406] += dqdci; // dwdot[C2H2]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[824] -= dqdci; // dwdot[O2]/d[C2H3]
  J[825] += dqdci; // dwdot[HO2]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 88: C2H3 + O2 => CH3 + CO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[17];
  k_f = 303000 * exp(0.29 * tc[0] - (6.0134391563664) * invT);
  dlnkfdT = 0.29 * invT + (6.0134391563664) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[17] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[17];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[398] += dqdci; // dwdot[CH3]/d[O2]
  J[401] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[819] += dqdci; // dwdot[O]/d[C2H3]
  J[824] -= dqdci; // dwdot[O2]/d[C2H3]
  J[827] += dqdci; // dwdot[CO]/d[C2H3]
  J[830] += dqdci; // dwdot[CH3]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT

  // reaction 89: C2H3 + O2 => CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[17];
  k_f = 45800000000 * exp(-1.39 * tc[0] - (511.15239262446) * invT);
  dlnkfdT = -1.39 * invT + (511.15239262446) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[12] += q; // HCO
  wdot[13] += q; // CH2O
  wdot[17] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[17];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[396] += dqdci; // dwdot[HCO]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[401] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[824] -= dqdci; // dwdot[O2]/d[C2H3]
  J[828] += dqdci; // dwdot[HCO]/d[C2H3]
  J[829] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT

  // reaction 90: C2H3 + HCO => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[17];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  wdot[17] -= q; // C2H3
  wdot[18] += q; // C2H4
  // d()/d[HCO]
  dqdci = +k_f * sc[17];
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[593] -= dqdci; // dwdot[C2H3]/d[HCO]
  J[594] += dqdci; // dwdot[C2H4]/d[HCO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[12];
  J[827] += dqdci; // dwdot[CO]/d[C2H3]
  J[828] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[834] += dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 91: C2H3 + CH3 => C2H2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[17];
  k_f = 9030000 * exp(-(-384.870170340766) * invT);
  dlnkfdT = (-384.870170340766) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[CH3]
  dqdci = +k_f * sc[17];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[689] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[694] += dqdci; // dwdot[C2H2]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[830] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[832] += dqdci; // dwdot[CH4]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 92: C2H3 + CH3 <=> A-C3H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[17];
  k_f = 1930000000000 * exp(-1.25 * tc[0] - (3859.5158295558) * invT);
  dlnkfdT = -1.25 * invT + (3859.5158295558) * invT2;
  // reverse
  phi_r = sc[5] * sc[24];
  Kc = exp(-g_RT[5] + g_RT[14] + g_RT[17] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[17]) + (h_RT[5] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[14] -= q; // CH3
  wdot[17] -= q; // C2H3
  wdot[24] += q; // A-C3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[254] -= dqdci; // dwdot[CH3]/d[H]
  J[257] -= dqdci; // dwdot[C2H3]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * sc[17];
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[689] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[696] += dqdci; // dwdot[A-C3H5]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[821] += dqdci; // dwdot[H]/d[C2H3]
  J[830] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[840] += dqdci; // dwdot[A-C3H5]/d[C2H3]
  // d()/d[A-C3H5]
  dqdci = -k_r * sc[5];
  J[1157] += dqdci; // dwdot[H]/d[A-C3H5]
  J[1166] -= dqdci; // dwdot[CH3]/d[A-C3H5]
  J[1169] -= dqdci; // dwdot[C2H3]/d[A-C3H5]
  J[1176] += dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT

  // reaction 94: C2H4 + H => C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[18];
  k_f = 1.33 * exp(2.53 * tc[0] - (6159.11031678355) * invT);
  dlnkfdT = 2.53 * invT + (6159.11031678355) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[17] += q; // C2H3
  wdot[18] -= q; // C2H4
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[257] += dqdci; // dwdot[C2H3]/d[H]
  J[258] -= dqdci; // dwdot[C2H4]/d[H]
  // d()/d[C2H4]
  dqdci = +k_f * sc[5];
  J[868] += dqdci; // dwdot[H2]/d[C2H4]
  J[869] -= dqdci; // dwdot[H]/d[C2H4]
  J[881] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 95: C2H4 + O => CH3 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 7660 * exp(0.88 * tc[0] - (573.697192017329) * invT);
  dlnkfdT = 0.88 * invT + (573.697192017329) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[18] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[162] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[867] -= dqdci; // dwdot[O]/d[C2H4]
  J[869] += dqdci; // dwdot[H]/d[C2H4]
  J[875] += dqdci; // dwdot[CO]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 96: C2H4 + O => CH2O + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 0.0715 * exp(2.47 * tc[0] - (467.855630698622) * invT);
  dlnkfdT = 2.47 * invT + (467.855630698622) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[3] -= q;  // O
  wdot[13] += q; // CH2O
  wdot[18] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[146] += dqdci; // dwdot[T-CH2]/d[O]
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[157] += dqdci; // dwdot[CH2O]/d[O]
  J[162] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[866] += dqdci; // dwdot[T-CH2]/d[C2H4]
  J[867] -= dqdci; // dwdot[O]/d[C2H4]
  J[877] += dqdci; // dwdot[CH2O]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 97: C2H4 + O => CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 389 * exp(1.36 * tc[0] - (446.207249735703) * invT);
  dlnkfdT = 1.36 * invT + (446.207249735703) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[12] += q; // HCO
  wdot[14] += q; // CH3
  wdot[18] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[162] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[867] -= dqdci; // dwdot[O]/d[C2H4]
  J[876] += dqdci; // dwdot[HCO]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 98: C2H4 + OH => C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[18];
  k_f = 1.31e-07 * exp(4.2 * tc[0] - (-432.977683591697) * invT);
  dlnkfdT = 4.2 * invT + (-432.977683591697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[17] += q; // C2H3
  wdot[18] -= q; // C2H4
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[305] += dqdci; // dwdot[C2H3]/d[OH]
  J[306] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[C2H4]
  dqdci = +k_f * sc[6];
  J[870] -= dqdci; // dwdot[OH]/d[C2H4]
  J[871] += dqdci; // dwdot[H2O]/d[C2H4]
  J[881] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 99: C2H4 + OH => CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[18];
  k_f = 3.75e+30 * exp(-7.8 * tc[0] - (3552.82540041446) * invT);
  dlnkfdT = -7.8 * invT + (3552.82540041446) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[13] += q; // CH2O
  wdot[14] += q; // CH3
  wdot[18] -= q; // C2H4
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[301] += dqdci; // dwdot[CH2O]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[306] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[C2H4]
  dqdci = +k_f * sc[6];
  J[870] -= dqdci; // dwdot[OH]/d[C2H4]
  J[877] += dqdci; // dwdot[CH2O]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 100: C2H4 + CH3 => C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[18];
  k_f = 0.227 * exp(2 * tc[0] - (4629.25617023733) * invT);
  dlnkfdT = 2 * invT + (4629.25617023733) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[17] += q; // C2H3
  wdot[18] -= q; // C2H4
  // d()/d[CH3]
  dqdci = +k_f * sc[18];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[689] += dqdci; // dwdot[C2H3]/d[CH3]
  J[690] -= dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[878] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[880] += dqdci; // dwdot[CH4]/d[C2H4]
  J[881] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 103: C2H5 + O => CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 31700000 * exp(0.03 * tc[0] - (-198.448524326749) * invT);
  dlnkfdT = 0.03 * invT + (-198.448524326749) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[13] += q; // CH2O
  wdot[14] += q; // CH3
  wdot[19] -= q; // C2H5
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[157] += dqdci; // dwdot[CH2O]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[163] -= dqdci; // dwdot[C2H5]/d[O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[3];
  J[915] -= dqdci; // dwdot[O]/d[C2H5]
  J[925] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[926] += dqdci; // dwdot[CH3]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT

  // reaction 104: C2H5 + O2 => C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 19.2 * exp(1.02 * tc[0] - (-1023.51250524685) * invT);
  dlnkfdT = 1.02 * invT + (-1023.51250524685) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[9] += q;  // HO2
  wdot[18] += q; // C2H4
  wdot[19] -= q; // C2H5
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[393] += dqdci; // dwdot[HO2]/d[O2]
  J[402] += dqdci; // dwdot[C2H4]/d[O2]
  J[403] -= dqdci; // dwdot[C2H5]/d[O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[8];
  J[920] -= dqdci; // dwdot[O2]/d[C2H5]
  J[921] += dqdci; // dwdot[HO2]/d[C2H5]
  J[930] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT

  // reaction 105: C2H5 + HCO => C2H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[19];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  wdot[19] -= q; // C2H5
  wdot[26] += q; // C2H6
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[595] -= dqdci; // dwdot[C2H5]/d[HCO]
  J[602] += dqdci; // dwdot[C2H6]/d[HCO]
  // d()/d[C2H5]
  dqdci = +k_f * sc[12];
  J[923] += dqdci; // dwdot[CO]/d[C2H5]
  J[924] -= dqdci; // dwdot[HCO]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[938] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT
  J[2282] += dqdT; // dwdot[C2H6]/dT

  // reaction 106: C2H5 + HO2 => C2H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 300000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[9] -= q;  // HO2
  wdot[19] -= q; // C2H5
  wdot[26] += q; // C2H6
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[451] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[458] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[9];
  J[920] += dqdci; // dwdot[O2]/d[C2H5]
  J[921] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[938] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT
  J[2282] += dqdT; // dwdot[C2H6]/dT

  // reaction 107: C2H5 + HO2 => CH2O + CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 31000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[13] += q; // CH2O
  wdot[14] += q; // CH3
  wdot[19] -= q; // C2H5
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[445] += dqdci; // dwdot[CH2O]/d[HO2]
  J[446] += dqdci; // dwdot[CH3]/d[HO2]
  J[451] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[9];
  J[918] += dqdci; // dwdot[OH]/d[C2H5]
  J[921] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[925] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[926] += dqdci; // dwdot[CH3]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT

  // reaction 109: C2H6 + H => C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[26];
  k_f = 0.17 * exp(2.7 * tc[0] - (2888.92662105163) * invT);
  dlnkfdT = 2.7 * invT + (2888.92662105163) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[259] += dqdci; // dwdot[C2H5]/d[H]
  J[266] -= dqdci; // dwdot[C2H6]/d[H]
  // d()/d[C2H6]
  dqdci = +k_f * sc[5];
  J[1252] += dqdci; // dwdot[H2]/d[C2H6]
  J[1253] -= dqdci; // dwdot[H]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 110: C2H6 + O => C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[26];
  k_f = 89.8 * exp(1.92 * tc[0] - (2863.67017659489) * invT);
  dlnkfdT = 1.92 * invT + (2863.67017659489) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[163] += dqdci; // dwdot[C2H5]/d[O]
  J[170] -= dqdci; // dwdot[C2H6]/d[O]
  // d()/d[C2H6]
  dqdci = +k_f * sc[3];
  J[1251] -= dqdci; // dwdot[O]/d[C2H6]
  J[1254] += dqdci; // dwdot[OH]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 111: C2H6 + OH => C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[26];
  k_f = 1.61 * exp(2.22 * tc[0] - (372.843292028033) * invT);
  dlnkfdT = 2.22 * invT + (372.843292028033) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[OH]
  dqdci = +k_f * sc[26];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[307] += dqdci; // dwdot[C2H5]/d[OH]
  J[314] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[C2H6]
  dqdci = +k_f * sc[6];
  J[1254] -= dqdci; // dwdot[OH]/d[C2H6]
  J[1255] += dqdci; // dwdot[H2O]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 112: C2H6 + CH3 => C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[26];
  k_f = 843000000 * exp(-(11199.6957896497) * invT);
  dlnkfdT = (11199.6957896497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[CH3]
  dqdci = +k_f * sc[26];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[691] += dqdci; // dwdot[C2H5]/d[CH3]
  J[698] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[C2H6]
  dqdci = +k_f * sc[14];
  J[1262] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[1264] += dqdci; // dwdot[CH4]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 114: H + HCCO => CO + S-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[21];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // S-CH2
  wdot[5] -= q;  // H
  wdot[11] += q; // CO
  wdot[21] -= q; // HCCO
  // d()/d[H]
  dqdci = +k_f * sc[21];
  J[241] += dqdci; // dwdot[S-CH2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[261] -= dqdci; // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = +k_f * sc[5];
  J[1009] += dqdci; // dwdot[S-CH2]/d[HCCO]
  J[1013] -= dqdci; // dwdot[H]/d[HCCO]
  J[1019] += dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2257] += dqdT; // dwdot[S-CH2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT

  // reaction 115: HCCO + O => 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[21];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // O
  wdot[5] += q;      // H
  wdot[11] += 2 * q; // CO
  wdot[21] -= q;     // HCCO
  // d()/d[O]
  dqdci = +k_f * sc[21];
  J[147] -= dqdci;     // dwdot[O]/d[O]
  J[149] += dqdci;     // dwdot[H]/d[O]
  J[155] += 2 * dqdci; // dwdot[CO]/d[O]
  J[165] -= dqdci;     // dwdot[HCCO]/d[O]
  // d()/d[HCCO]
  dqdci = +k_f * sc[3];
  J[1011] -= dqdci;     // dwdot[O]/d[HCCO]
  J[1013] += dqdci;     // dwdot[H]/d[HCCO]
  J[1019] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2259] -= dqdT;     // dwdot[O]/dT
  J[2261] += dqdT;     // dwdot[H]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 116: HCCO + O2 => 2 CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[21];
  k_f = 42000 * exp(-(429.369620097877) * invT);
  dlnkfdT = (429.369620097877) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;      // OH
  wdot[8] -= q;      // O2
  wdot[11] += 2 * q; // CO
  wdot[21] -= q;     // HCCO
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[390] += dqdci;     // dwdot[OH]/d[O2]
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[395] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[405] -= dqdci;     // dwdot[HCCO]/d[O2]
  // d()/d[HCCO]
  dqdci = +k_f * sc[8];
  J[1014] += dqdci;     // dwdot[OH]/d[HCCO]
  J[1016] -= dqdci;     // dwdot[O2]/d[HCCO]
  J[1019] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2262] += dqdT;     // dwdot[OH]/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 117: 2 HCCO => C2H2 + 2 CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[21] * sc[21]);
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += 2 * q; // CO
  wdot[21] -= 2 * q; // HCCO
  wdot[22] += q;     // C2H2
  // d()/d[HCCO]
  dqdci = +k_f * 2.000000 * sc[21];
  J[1019] += 2 * dqdci;  // dwdot[CO]/d[HCCO]
  J[1029] += -2 * dqdci; // dwdot[HCCO]/d[HCCO]
  J[1030] += dqdci;      // dwdot[C2H2]/d[HCCO]
  // d()/dT
  J[2267] += 2 * dqdT;  // dwdot[CO]/dT
  J[2277] += -2 * dqdT; // dwdot[HCCO]/dT
  J[2278] += dqdT;      // dwdot[C2H2]/dT

  // reaction 118: C2H2 + HCCO => C3H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[22];
  k_f = 100000 * exp(-(1509.40845341457) * invT);
  dlnkfdT = (1509.40845341457) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[21] -= q; // HCCO
  wdot[22] -= q; // C2H2
  wdot[23] += q; // C3H3
  // d()/d[HCCO]
  dqdci = +k_f * sc[22];
  J[1019] += dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
  J[1030] -= dqdci; // dwdot[C2H2]/d[HCCO]
  J[1031] += dqdci; // dwdot[C3H3]/d[HCCO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[21];
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1077] -= dqdci; // dwdot[HCCO]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1079] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT

  // reaction 119: CH3 + HCCO => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[21];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[14] -= q; // CH3
  wdot[18] += q; // C2H4
  wdot[21] -= q; // HCCO
  // d()/d[CH3]
  dqdci = +k_f * sc[21];
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[690] += dqdci; // dwdot[C2H4]/d[CH3]
  J[693] -= dqdci; // dwdot[HCCO]/d[CH3]
  // d()/d[HCCO]
  dqdci = +k_f * sc[14];
  J[1019] += dqdci; // dwdot[CO]/d[HCCO]
  J[1022] -= dqdci; // dwdot[CH3]/d[HCCO]
  J[1026] += dqdci; // dwdot[C2H4]/d[HCCO]
  J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT

  // reaction 120: HCCO + OH => 2 HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[21];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;      // OH
  wdot[12] += 2 * q; // HCO
  wdot[21] -= q;     // HCCO
  // d()/d[OH]
  dqdci = +k_f * sc[21];
  J[294] -= dqdci;     // dwdot[OH]/d[OH]
  J[300] += 2 * dqdci; // dwdot[HCO]/d[OH]
  J[309] -= dqdci;     // dwdot[HCCO]/d[OH]
  // d()/d[HCCO]
  dqdci = +k_f * sc[6];
  J[1014] -= dqdci;     // dwdot[OH]/d[HCCO]
  J[1020] += 2 * dqdci; // dwdot[HCO]/d[HCCO]
  J[1029] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2262] -= dqdT;     // dwdot[OH]/dT
  J[2268] += 2 * dqdT; // dwdot[HCO]/dT
  J[2277] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 121: C3H3 + H <=> P-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[23];
  k_f = 7.94e+23 * exp(-5.06 * tc[0] - (2446.32743480975) * invT);
  dlnkfdT = -5.06 * invT + (2446.32743480975) * invT2;
  // reverse
  phi_r = sc[27];
  Kc = refCinv * exp(g_RT[5] + g_RT[23] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[23]) + (h_RT[27]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[23] -= q; // C3H3
  wdot[27] += q; // P-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] -= dqdci; // dwdot[C3H3]/d[H]
  J[267] += dqdci; // dwdot[P-C3H4]/d[H]
  // d()/d[C3H3]
  dqdci = +k_f * sc[5];
  J[1109] -= dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1131] += dqdci; // dwdot[P-C3H4]/d[C3H3]
  // d()/d[P-C3H4]
  dqdci = -k_r;
  J[1301] -= dqdci; // dwdot[H]/d[P-C3H4]
  J[1319] -= dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] += dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT
  J[2283] += dqdT; // dwdot[P-C3H4]/dT

  // reaction 122: C3H3 + H <=> A-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[23];
  k_f = 3.16e+23 * exp(-5 * tc[0] - (2370.55306927287) * invT);
  dlnkfdT = -5 * invT + (2370.55306927287) * invT2;
  // reverse
  phi_r = sc[28];
  Kc = refCinv * exp(g_RT[5] + g_RT[23] - g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[23]) + (h_RT[28]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[23] -= q; // C3H3
  wdot[28] += q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] -= dqdci; // dwdot[C3H3]/d[H]
  J[268] += dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[C3H3]
  dqdci = +k_f * sc[5];
  J[1109] -= dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1132] += dqdci; // dwdot[A-C3H4]/d[C3H3]
  // d()/d[A-C3H4]
  dqdci = -k_r;
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1367] -= dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] += dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 123: C3H3 + OH => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[23];
  k_f = 1280 * exp(0.73 * tc[0] - (1297.73036294382) * invT);
  dlnkfdT = 0.73 * invT + (1297.73036294382) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[18] += q; // C2H4
  wdot[23] -= q; // C3H3
  // d()/d[OH]
  dqdci = +k_f * sc[23];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[306] += dqdci; // dwdot[C2H4]/d[OH]
  J[311] -= dqdci; // dwdot[C3H3]/d[OH]
  // d()/d[C3H3]
  dqdci = +k_f * sc[6];
  J[1110] -= dqdci; // dwdot[OH]/d[C3H3]
  J[1115] += dqdci; // dwdot[CO]/d[C3H3]
  J[1122] += dqdci; // dwdot[C2H4]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT

  // reaction 124: C3H3 + O => C2H2 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[23];
  k_f = 69500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[22] += q; // C2H2
  wdot[23] -= q; // C3H3
  // d()/d[O]
  dqdci = +k_f * sc[23];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[166] += dqdci; // dwdot[C2H2]/d[O]
  J[167] -= dqdci; // dwdot[C3H3]/d[O]
  // d()/d[C3H3]
  dqdci = +k_f * sc[3];
  J[1107] -= dqdci; // dwdot[O]/d[C3H3]
  J[1109] += dqdci; // dwdot[H]/d[C3H3]
  J[1115] += dqdci; // dwdot[CO]/d[C3H3]
  J[1126] += dqdci; // dwdot[C2H2]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT

  // reaction 125: C3H3 + O2 => CH3 + 2 CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[23];
  k_f = 0.17 * exp(1.7 * tc[0] - (755.308086706252) * invT);
  dlnkfdT = 1.7 * invT + (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;      // O2
  wdot[11] += 2 * q; // CO
  wdot[14] += q;     // CH3
  wdot[23] -= q;     // C3H3
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[395] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[398] += dqdci;     // dwdot[CH3]/d[O2]
  J[407] -= dqdci;     // dwdot[C3H3]/d[O2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[8];
  J[1112] -= dqdci;     // dwdot[O2]/d[C3H3]
  J[1115] += 2 * dqdci; // dwdot[CO]/d[C3H3]
  J[1118] += dqdci;     // dwdot[CH3]/d[C3H3]
  J[1127] -= dqdci;     // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2270] += dqdT;     // dwdot[CH3]/dT
  J[2279] -= dqdT;     // dwdot[C3H3]/dT

  // reaction 126: C3H3 + HO2 => C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[23];
  k_f = 800000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[23] -= q; // C3H3
  // d()/d[HO2]
  dqdci = +k_f * sc[23];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] += dqdci; // dwdot[CO]/d[HO2]
  J[449] += dqdci; // dwdot[C2H3]/d[HO2]
  J[455] -= dqdci; // dwdot[C3H3]/d[HO2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[9];
  J[1110] += dqdci; // dwdot[OH]/d[C3H3]
  J[1113] -= dqdci; // dwdot[HO2]/d[C3H3]
  J[1115] += dqdci; // dwdot[CO]/d[C3H3]
  J[1121] += dqdci; // dwdot[C2H3]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT

  // reaction 127: 2 C3H3 <=> A1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[23] * sc[23]);
  k_f = 1.87e+40 * exp(-9.84 * tc[0] - (8456.29942834876) * invT);
  dlnkfdT = -9.84 * invT + (8456.29942834876) * invT2;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(2.000000 * g_RT[23] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[23]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[23] -= 2 * q; // C3H3
  wdot[29] += q;     // A1
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[23];
  J[1127] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  J[1133] += dqdci;      // dwdot[A1]/d[C3H3]
  // d()/d[A1]
  dqdci = -k_r;
  J[1415] += -2 * dqdci; // dwdot[C3H3]/d[A1]
  J[1421] += dqdci;      // dwdot[A1]/d[A1]
  // d()/dT
  J[2279] += -2 * dqdT; // dwdot[C3H3]/dT
  J[2285] += dqdT;      // dwdot[A1]/dT

  // reaction 128: 2 C3H3 <=> A1- + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[23] * sc[23]);
  k_f = 5.77e+31 * exp(-7 * tc[0] - (15854.2134365104) * invT);
  dlnkfdT = -7 * invT + (15854.2134365104) * invT2;
  // reverse
  phi_r = sc[5] * sc[30];
  Kc = exp(-g_RT[5] + 2.000000 * g_RT[23] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[23]) + (h_RT[5] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;      // H
  wdot[23] -= 2 * q; // C3H3
  wdot[30] += q;     // A1-
  // d()/d[H]
  dqdci = -k_r * sc[30];
  J[245] += dqdci;      // dwdot[H]/d[H]
  J[263] += -2 * dqdci; // dwdot[C3H3]/d[H]
  J[270] += dqdci;      // dwdot[A1-]/d[H]
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[23];
  J[1109] += dqdci;      // dwdot[H]/d[C3H3]
  J[1127] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  J[1134] += dqdci;      // dwdot[A1-]/d[C3H3]
  // d()/d[A1-]
  dqdci = -k_r * sc[5];
  J[1445] += dqdci;      // dwdot[H]/d[A1-]
  J[1463] += -2 * dqdci; // dwdot[C3H3]/d[A1-]
  J[1470] += dqdci;      // dwdot[A1-]/d[A1-]
  // d()/dT
  J[2261] += dqdT;      // dwdot[H]/dT
  J[2279] += -2 * dqdT; // dwdot[C3H3]/dT
  J[2286] += dqdT;      // dwdot[A1-]/dT

  // reaction 129: C2H2 + C3H3 <=> C5H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[23];
  k_f = 235000 * exp(-(5029.76128238465) * invT);
  dlnkfdT = (5029.76128238465) * invT2;
  // reverse
  phi_r = sc[31];
  Kc = refCinv * exp(g_RT[22] + g_RT[23] - g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[23]) + (h_RT[31]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // C2H2
  wdot[23] -= q; // C3H3
  wdot[31] += q; // C5H5
  // d()/d[C2H2]
  dqdci = +k_f * sc[23];
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1079] -= dqdci; // dwdot[C3H3]/d[C2H2]
  J[1087] += dqdci; // dwdot[C5H5]/d[C2H2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[22];
  J[1126] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1135] += dqdci; // dwdot[C5H5]/d[C3H3]
  // d()/d[C5H5]
  dqdci = -k_r;
  J[1510] -= dqdci; // dwdot[C2H2]/d[C5H5]
  J[1511] -= dqdci; // dwdot[C3H3]/d[C5H5]
  J[1519] += dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 130: H + P-C3H4 <=> C2H2 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[27];
  k_f = 3460000 * exp(0.44 * tc[0] - (2749.40980045727) * invT);
  dlnkfdT = 0.44 * invT + (2749.40980045727) * invT2;
  // reverse
  phi_r = sc[14] * sc[22];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[27]) + (h_RT[14] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[22] += q; // C2H2
  wdot[27] -= q; // P-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  J[267] -= dqdci; // dwdot[P-C3H4]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[694] += dqdci; // dwdot[C2H2]/d[CH3]
  J[699] -= dqdci; // dwdot[P-C3H4]/d[CH3]
  // d()/d[C2H2]
  dqdci = -k_r * sc[14];
  J[1061] -= dqdci; // dwdot[H]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[1083] -= dqdci; // dwdot[P-C3H4]/d[C2H2]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[5];
  J[1301] -= dqdci; // dwdot[H]/d[P-C3H4]
  J[1310] += dqdci; // dwdot[CH3]/d[P-C3H4]
  J[1318] += dqdci; // dwdot[C2H2]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 131: H + P-C3H4 <=> C3H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[27];
  k_f = 0.085 * exp(2.7 * tc[0] - (2888.92662105163) * invT);
  dlnkfdT = 2.7 * invT + (2888.92662105163) * invT2;
  // reverse
  phi_r = sc[4] * sc[23];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[23] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[27]) + (h_RT[4] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[23] += q; // C3H3
  wdot[27] -= q; // P-C3H4
  // d()/d[H2]
  dqdci = -k_r * sc[23];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[215] += dqdci; // dwdot[C3H3]/d[H2]
  J[219] -= dqdci; // dwdot[P-C3H4]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] += dqdci; // dwdot[C3H3]/d[H]
  J[267] -= dqdci; // dwdot[P-C3H4]/d[H]
  // d()/d[C3H3]
  dqdci = -k_r * sc[4];
  J[1108] += dqdci; // dwdot[H2]/d[C3H3]
  J[1109] -= dqdci; // dwdot[H]/d[C3H3]
  J[1127] += dqdci; // dwdot[C3H3]/d[C3H3]
  J[1131] -= dqdci; // dwdot[P-C3H4]/d[C3H3]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[5];
  J[1300] += dqdci; // dwdot[H2]/d[P-C3H4]
  J[1301] -= dqdci; // dwdot[H]/d[P-C3H4]
  J[1319] += dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 132: OH + P-C3H4 => C3H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[27];
  k_f = 0.805 * exp(2.22 * tc[0] - (372.843292028033) * invT);
  dlnkfdT = 2.22 * invT + (372.843292028033) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[23] += q; // C3H3
  wdot[27] -= q; // P-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[311] += dqdci; // dwdot[C3H3]/d[OH]
  J[315] -= dqdci; // dwdot[P-C3H4]/d[OH]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[6];
  J[1302] -= dqdci; // dwdot[OH]/d[P-C3H4]
  J[1303] += dqdci; // dwdot[H2O]/d[P-C3H4]
  J[1319] += dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 133: CH3 + P-C3H4 => C3H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[27];
  k_f = 422000000 * exp(-(11199.6957896497) * invT);
  dlnkfdT = (11199.6957896497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[23] += q; // C3H3
  wdot[27] -= q; // P-C3H4
  // d()/d[CH3]
  dqdci = +k_f * sc[27];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[695] += dqdci; // dwdot[C3H3]/d[CH3]
  J[699] -= dqdci; // dwdot[P-C3H4]/d[CH3]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[14];
  J[1310] -= dqdci; // dwdot[CH3]/d[P-C3H4]
  J[1312] += dqdci; // dwdot[CH4]/d[P-C3H4]
  J[1319] += dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 134: O + P-C3H4 => CH3 + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 4.05 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[14] += q; // CH3
  wdot[21] += q; // HCCO
  wdot[27] -= q; // P-C3H4
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[165] += dqdci; // dwdot[HCCO]/d[O]
  J[171] -= dqdci; // dwdot[P-C3H4]/d[O]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[3];
  J[1299] -= dqdci; // dwdot[O]/d[P-C3H4]
  J[1310] += dqdci; // dwdot[CH3]/d[P-C3H4]
  J[1317] += dqdci; // dwdot[HCCO]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2277] += dqdT; // dwdot[HCCO]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 135: O + P-C3H4 => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 6.25 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[18] += q; // C2H4
  wdot[27] -= q; // P-C3H4
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[162] += dqdci; // dwdot[C2H4]/d[O]
  J[171] -= dqdci; // dwdot[P-C3H4]/d[O]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[3];
  J[1299] -= dqdci; // dwdot[O]/d[P-C3H4]
  J[1307] += dqdci; // dwdot[CO]/d[P-C3H4]
  J[1314] += dqdci; // dwdot[C2H4]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 136: OH + P-C3H4 => C2H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[27];
  k_f = 1280 * exp(0.73 * tc[0] - (1297.73036294382) * invT);
  dlnkfdT = 0.73 * invT + (1297.73036294382) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[19] += q; // C2H5
  wdot[27] -= q; // P-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[307] += dqdci; // dwdot[C2H5]/d[OH]
  J[315] -= dqdci; // dwdot[P-C3H4]/d[OH]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[6];
  J[1302] -= dqdci; // dwdot[OH]/d[P-C3H4]
  J[1307] += dqdci; // dwdot[CO]/d[P-C3H4]
  J[1315] += dqdci; // dwdot[C2H5]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 137: A-C3H4 + H <=> C2H2 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 89500000 * exp(-0.02 * tc[0] - (5661.1874903031) * invT);
  dlnkfdT = -0.02 * invT + (5661.1874903031) * invT2;
  // reverse
  phi_r = sc[14] * sc[22];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[28]) + (h_RT[14] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[22] += q; // C2H2
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[694] += dqdci; // dwdot[C2H2]/d[CH3]
  J[700] -= dqdci; // dwdot[A-C3H4]/d[CH3]
  // d()/d[C2H2]
  dqdci = -k_r * sc[14];
  J[1061] -= dqdci; // dwdot[H]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[1084] -= dqdci; // dwdot[A-C3H4]/d[C2H2]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1358] += dqdci; // dwdot[CH3]/d[A-C3H4]
  J[1366] += dqdci; // dwdot[C2H2]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 138: A-C3H4 <=> P-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 7.76e+39 * exp(-7.8 * tc[0] - (39475.5660453833) * invT);
  dlnkfdT = -7.8 * invT + (39475.5660453833) * invT2;
  // reverse
  phi_r = sc[27];
  Kc = exp(-g_RT[27] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[28]) + (h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[27] += q; // P-C3H4
  wdot[28] -= q; // A-C3H4
  // d()/d[P-C3H4]
  dqdci = -k_r;
  J[1323] += dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  J[1324] -= dqdci; // dwdot[A-C3H4]/d[P-C3H4]
  // d()/d[A-C3H4]
  dqdci = +k_f;
  J[1371] += dqdci; // dwdot[P-C3H4]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2283] += dqdT; // dwdot[P-C3H4]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 139: A-C3H4 + H <=> H + P-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 2470000000 * exp(-0.33 * tc[0] - (3238.91381211881) * invT);
  dlnkfdT = -0.33 * invT + (3238.91381211881) * invT2;
  // reverse
  phi_r = sc[5] * sc[27];
  Kc = exp(g_RT[5] - g_RT[5] - g_RT[27] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[28]) + (h_RT[5] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[27] += q; // P-C3H4
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28] - k_r * sc[27];
  J[267] += dqdci; // dwdot[P-C3H4]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[P-C3H4]
  dqdci = -k_r * sc[5];
  J[1323] += dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  J[1324] -= dqdci; // dwdot[A-C3H4]/d[P-C3H4]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1371] += dqdci; // dwdot[P-C3H4]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2283] += dqdT; // dwdot[P-C3H4]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 140: A-C3H4 + H => C3H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 1.33 * exp(2.53 * tc[0] - (6159.11031678355) * invT);
  dlnkfdT = 2.53 * invT + (6159.11031678355) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[23] += q; // C3H3
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] += dqdci; // dwdot[C3H3]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1348] += dqdci; // dwdot[H2]/d[A-C3H4]
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1367] += dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 141: A-C3H4 + OH => C3H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[28];
  k_f = 1.31e-07 * exp(4.2 * tc[0] - (-432.977683591697) * invT);
  dlnkfdT = 4.2 * invT + (-432.977683591697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[23] += q; // C3H3
  wdot[28] -= q; // A-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[28];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[311] += dqdci; // dwdot[C3H3]/d[OH]
  J[316] -= dqdci; // dwdot[A-C3H4]/d[OH]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[6];
  J[1350] -= dqdci; // dwdot[OH]/d[A-C3H4]
  J[1351] += dqdci; // dwdot[H2O]/d[A-C3H4]
  J[1367] += dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 142: A-C3H4 + CH3 => C3H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[28];
  k_f = 0.227 * exp(2 * tc[0] - (4629.25617023733) * invT);
  dlnkfdT = 2 * invT + (4629.25617023733) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[23] += q; // C3H3
  wdot[28] -= q; // A-C3H4
  // d()/d[CH3]
  dqdci = +k_f * sc[28];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[695] += dqdci; // dwdot[C3H3]/d[CH3]
  J[700] -= dqdci; // dwdot[A-C3H4]/d[CH3]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[14];
  J[1358] -= dqdci; // dwdot[CH3]/d[A-C3H4]
  J[1360] += dqdci; // dwdot[CH4]/d[A-C3H4]
  J[1367] += dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 143: A-C3H4 + H <=> A-C3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 2.01e+43 * exp(-10.77 * tc[0] - (9874.30360658656) * invT);
  dlnkfdT = -10.77 * invT + (9874.30360658656) * invT2;
  // reverse
  phi_r = sc[24];
  Kc = refCinv * exp(g_RT[5] - g_RT[24] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[28]) + (h_RT[24]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[24] += q; // A-C3H5
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[A-C3H5]
  dqdci = -k_r;
  J[1157] -= dqdci; // dwdot[H]/d[A-C3H5]
  J[1176] += dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] -= dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1368] += dqdci; // dwdot[A-C3H5]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 144: A-C3H5 + H => A-C3H4 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 0.00956 * exp(2.8 * tc[0] - (1656.14140099657) * invT);
  dlnkfdT = 2.8 * invT + (1656.14140099657) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[24] -= q; // A-C3H5
  wdot[28] += q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] -= dqdci; // dwdot[A-C3H5]/d[H]
  J[268] += dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[5];
  J[1156] += dqdci; // dwdot[H2]/d[A-C3H5]
  J[1157] -= dqdci; // dwdot[H]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] += dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 145: A-C3H5 + OH => A-C3H4 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[24];
  k_f = 6030000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[24] -= q; // A-C3H5
  wdot[28] += q; // A-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[24];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[312] -= dqdci; // dwdot[A-C3H5]/d[OH]
  J[316] += dqdci; // dwdot[A-C3H4]/d[OH]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[6];
  J[1158] -= dqdci; // dwdot[OH]/d[A-C3H5]
  J[1159] += dqdci; // dwdot[H2O]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] += dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 146: A-C3H5 + CH3 => A-C3H4 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[24];
  k_f = 486000 * exp(-0.32 * tc[0] - (-66.1478307200304) * invT);
  dlnkfdT = -0.32 * invT + (-66.1478307200304) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[24] -= q; // A-C3H5
  wdot[28] += q; // A-C3H4
  // d()/d[CH3]
  dqdci = +k_f * sc[24];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[696] -= dqdci; // dwdot[A-C3H5]/d[CH3]
  J[700] += dqdci; // dwdot[A-C3H4]/d[CH3]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[14];
  J[1166] -= dqdci; // dwdot[CH3]/d[A-C3H5]
  J[1168] += dqdci; // dwdot[CH4]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] += dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 147: A-C3H5 + O2 => C2H2 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[24];
  k_f = 971000000000000 * exp(-2.7 * tc[0] - (12570.7951424678) * invT);
  dlnkfdT = -2.7 * invT + (12570.7951424678) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  wdot[22] += q; // C2H2
  wdot[24] -= q; // A-C3H5
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[406] += dqdci; // dwdot[C2H2]/d[O2]
  J[408] -= dqdci; // dwdot[A-C3H5]/d[O2]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[8];
  J[1158] += dqdci; // dwdot[OH]/d[A-C3H5]
  J[1160] -= dqdci; // dwdot[O2]/d[A-C3H5]
  J[1165] += dqdci; // dwdot[CH2O]/d[A-C3H5]
  J[1174] += dqdci; // dwdot[C2H2]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT

  // reaction 148: A-C3H5 + C3H3 => A1 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23] * sc[24];
  k_f = 2.16e+33 * exp(-7.74 * tc[0] - (12003.1113896068) * invT);
  dlnkfdT = -7.74 * invT + (12003.1113896068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += 2 * q; // H
  wdot[23] -= q;    // C3H3
  wdot[24] -= q;    // A-C3H5
  wdot[29] += q;    // A1
  // d()/d[C3H3]
  dqdci = +k_f * sc[24];
  J[1109] += 2 * dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci;     // dwdot[C3H3]/d[C3H3]
  J[1128] -= dqdci;     // dwdot[A-C3H5]/d[C3H3]
  J[1133] += dqdci;     // dwdot[A1]/d[C3H3]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[23];
  J[1157] += 2 * dqdci; // dwdot[H]/d[A-C3H5]
  J[1175] -= dqdci;     // dwdot[C3H3]/d[A-C3H5]
  J[1176] -= dqdci;     // dwdot[A-C3H5]/d[A-C3H5]
  J[1181] += dqdci;     // dwdot[A1]/d[A-C3H5]
  // d()/dT
  J[2261] += 2 * dqdT; // dwdot[H]/dT
  J[2279] -= dqdT;     // dwdot[C3H3]/dT
  J[2280] -= dqdT;     // dwdot[A-C3H5]/dT
  J[2285] += dqdT;     // dwdot[A1]/dT

  // reaction 150: C3H6 <=> C2H3 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32];
  k_f = 4.04e+42 * exp(-7.67 * tc[0] - (56275.1122459411) * invT);
  dlnkfdT = -7.67 * invT + (56275.1122459411) * invT2;
  // reverse
  phi_r = sc[14] * sc[17];
  Kc = refC * exp(-g_RT[14] - g_RT[17] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[32]) + (h_RT[14] + h_RT[17]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] += q; // CH3
  wdot[17] += q; // C2H3
  wdot[32] -= q; // C3H6
  // d()/d[CH3]
  dqdci = -k_r * sc[17];
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[689] += dqdci; // dwdot[C2H3]/d[CH3]
  J[704] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H3]
  dqdci = -k_r * sc[14];
  J[830] += dqdci; // dwdot[CH3]/d[C2H3]
  J[833] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[848] -= dqdci; // dwdot[C3H6]/d[C2H3]
  // d()/d[C3H6]
  dqdci = +k_f;
  J[1550] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1553] += dqdci; // dwdot[C2H3]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 151: A-C3H5 + H <=> C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 5.93e+48 * exp(-11.76 * tc[0] - (11850.3700350351) * invT);
  dlnkfdT = -11.76 * invT + (11850.3700350351) * invT2;
  // reverse
  phi_r = sc[32];
  Kc = refCinv * exp(g_RT[5] + g_RT[24] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[24]) + (h_RT[32]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[24] -= q; // A-C3H5
  wdot[32] += q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] -= dqdci; // dwdot[A-C3H5]/d[H]
  J[272] += dqdci; // dwdot[C3H6]/d[H]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[5];
  J[1157] -= dqdci; // dwdot[H]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1184] += dqdci; // dwdot[C3H6]/d[A-C3H5]
  // d()/d[C3H6]
  dqdci = -k_r;
  J[1541] -= dqdci; // dwdot[H]/d[C3H6]
  J[1560] -= dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] += dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2288] += dqdT; // dwdot[C3H6]/dT

  // reaction 152: C3H6 + H <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[32];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5626.30954319617) * invT);
  dlnkfdT = -2.39 * invT + (5626.30954319617) * invT2;
  // reverse
  phi_r = sc[14] * sc[18];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[18] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[32]) + (h_RT[14] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[18] += q; // C2H4
  wdot[32] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[258] += dqdci; // dwdot[C2H4]/d[H]
  J[272] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[18];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[690] += dqdci; // dwdot[C2H4]/d[CH3]
  J[704] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[14];
  J[869] -= dqdci; // dwdot[H]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[896] -= dqdci; // dwdot[C3H6]/d[C2H4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[5];
  J[1541] -= dqdci; // dwdot[H]/d[C3H6]
  J[1550] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1554] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 153: C3H6 + O => 2 CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[32];
  k_f = 120 * exp(1.6 * tc[0] - (164.773265051097) * invT);
  dlnkfdT = 1.6 * invT + (164.773265051097) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // O
  wdot[11] += q;     // CO
  wdot[14] += 2 * q; // CH3
  wdot[32] -= q;     // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[32];
  J[147] -= dqdci;     // dwdot[O]/d[O]
  J[155] += dqdci;     // dwdot[CO]/d[O]
  J[158] += 2 * dqdci; // dwdot[CH3]/d[O]
  J[176] -= dqdci;     // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1539] -= dqdci;     // dwdot[O]/d[C3H6]
  J[1547] += dqdci;     // dwdot[CO]/d[C3H6]
  J[1550] += 2 * dqdci; // dwdot[CH3]/d[C3H6]
  J[1568] -= dqdci;     // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2259] -= dqdT;     // dwdot[O]/dT
  J[2267] += dqdT;     // dwdot[CO]/dT
  J[2270] += 2 * dqdT; // dwdot[CH3]/dT
  J[2288] -= dqdT;     // dwdot[C3H6]/dT

  // reaction 154: C3H6 + O => C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[32];
  k_f = 35 * exp(1.6 * tc[0] - (-489.504011661541) * invT);
  dlnkfdT = 1.6 * invT + (-489.504011661541) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[12] += q; // HCO
  wdot[19] += q; // C2H5
  wdot[32] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[32];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  J[163] += dqdci; // dwdot[C2H5]/d[O]
  J[176] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1539] -= dqdci; // dwdot[O]/d[C3H6]
  J[1548] += dqdci; // dwdot[HCO]/d[C3H6]
  J[1555] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 155: C3H6 + H => A-C3H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[32];
  k_f = 0.66 * exp(2.54 * tc[0] - (3400.07901367609) * invT);
  dlnkfdT = 2.54 * invT + (3400.07901367609) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  J[272] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[5];
  J[1540] += dqdci; // dwdot[H2]/d[C3H6]
  J[1541] -= dqdci; // dwdot[H]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 156: C3H6 + O => A-C3H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[32];
  k_f = 0.0965 * exp(2.68 * tc[0] - (1870.22486712987) * invT);
  dlnkfdT = 2.68 * invT + (1870.22486712987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[32];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[168] += dqdci; // dwdot[A-C3H5]/d[O]
  J[176] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1539] -= dqdci; // dwdot[O]/d[C3H6]
  J[1542] += dqdci; // dwdot[OH]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 157: C3H6 + OH => A-C3H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[32];
  k_f = 200 * exp(1.46 * tc[0] - (270.609794203146) * invT);
  dlnkfdT = 1.46 * invT + (270.609794203146) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[OH]
  dqdci = +k_f * sc[32];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[312] += dqdci; // dwdot[A-C3H5]/d[OH]
  J[320] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[C3H6]
  dqdci = +k_f * sc[6];
  J[1542] -= dqdci; // dwdot[OH]/d[C3H6]
  J[1543] += dqdci; // dwdot[H2O]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 158: C3H6 + CH3 => A-C3H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[32];
  k_f = 4.52e-07 * exp(3.65 * tc[0] - (3599.73022583411) * invT);
  dlnkfdT = 3.65 * invT + (3599.73022583411) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[32];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[696] += dqdci; // dwdot[A-C3H5]/d[CH3]
  J[704] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[1550] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[1552] += dqdci; // dwdot[CH4]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 159: C4H8 + H => C2H4 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[33];
  k_f = 7680000 * exp(0.11 * tc[0] - (744.483896224792) * invT);
  dlnkfdT = 0.11 * invT + (744.483896224792) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // H
  wdot[18] += q; // C2H4
  wdot[19] += q; // C2H5
  wdot[33] -= q; // C4H8
  // d()/d[H]
  dqdci = +k_f * sc[33];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[258] += dqdci; // dwdot[C2H4]/d[H]
  J[259] += dqdci; // dwdot[C2H5]/d[H]
  J[273] -= dqdci; // dwdot[C4H8]/d[H]
  // d()/d[C4H8]
  dqdci = +k_f * sc[5];
  J[1589] -= dqdci; // dwdot[H]/d[C4H8]
  J[1602] += dqdci; // dwdot[C2H4]/d[C4H8]
  J[1603] += dqdci; // dwdot[C2H5]/d[C4H8]
  J[1617] -= dqdci; // dwdot[C4H8]/d[C4H8]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2289] -= dqdT; // dwdot[C4H8]/dT

  // reaction 160: C4H8 => A-C3H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 5e+15 * exp(-(35727.9001841359) * invT);
  dlnkfdT = (35727.9001841359) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // CH3
  wdot[24] += q; // A-C3H5
  wdot[33] -= q; // C4H8
  // d()/d[C4H8]
  dqdci = +k_f;
  J[1598] += dqdci; // dwdot[CH3]/d[C4H8]
  J[1608] += dqdci; // dwdot[A-C3H5]/d[C4H8]
  J[1617] -= dqdci; // dwdot[C4H8]/d[C4H8]
  // d()/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2289] -= dqdT; // dwdot[C4H8]/dT

  // reaction 161: C5H5 + HO2 => C5H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[31];
  k_f = 2561000 * exp(0.06 * tc[0] - (1568.34015714696) * invT);
  dlnkfdT = 0.06 * invT + (1568.34015714696) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[9] -= q;  // HO2
  wdot[31] -= q; // C5H5
  wdot[34] += q; // C5H6
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[463] -= dqdci; // dwdot[C5H5]/d[HO2]
  J[466] += dqdci; // dwdot[C5H6]/d[HO2]
  // d()/d[C5H5]
  dqdci = +k_f * sc[9];
  J[1496] += dqdci; // dwdot[O2]/d[C5H5]
  J[1497] -= dqdci; // dwdot[HO2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  J[1522] += dqdci; // dwdot[C5H6]/d[C5H5]
  // d()/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT
  J[2290] += dqdT; // dwdot[C5H6]/dT

  // reaction 162: 2 C5H5 => A2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[31] * sc[31]);
  k_f = 6.39e+23 * exp(-4.03 * tc[0] - (17716.0144566547) * invT);
  dlnkfdT = -4.03 * invT + (17716.0144566547) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += 2 * q;  // H
  wdot[31] -= 2 * q; // C5H5
  wdot[35] += q;     // A2
  // d()/d[C5H5]
  dqdci = +k_f * 2.000000 * sc[31];
  J[1493] += 2 * dqdci;  // dwdot[H]/d[C5H5]
  J[1519] += -2 * dqdci; // dwdot[C5H5]/d[C5H5]
  J[1523] += dqdci;      // dwdot[A2]/d[C5H5]
  // d()/dT
  J[2261] += 2 * dqdT;  // dwdot[H]/dT
  J[2287] += -2 * dqdT; // dwdot[C5H5]/dT
  J[2291] += dqdT;      // dwdot[A2]/dT

  // reaction 163: C5H5 + O => C2H2 + C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[22] += q; // C2H2
  wdot[31] -= q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[31];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[161] += dqdci; // dwdot[C2H3]/d[O]
  J[166] += dqdci; // dwdot[C2H2]/d[O]
  J[175] -= dqdci; // dwdot[C5H5]/d[O]
  // d()/d[C5H5]
  dqdci = +k_f * sc[3];
  J[1491] -= dqdci; // dwdot[O]/d[C5H5]
  J[1499] += dqdci; // dwdot[CO]/d[C5H5]
  J[1505] += dqdci; // dwdot[C2H3]/d[C5H5]
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT

  // reaction 164: C5H5 + HO2 => C2H2 + C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[31];
  k_f = 6.776e+23 * exp(-4.7 * tc[0] - (5866.85214161749) * invT);
  dlnkfdT = -4.7 * invT + (5866.85214161749) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[22] += q; // C2H2
  wdot[31] -= q; // C5H5
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] += dqdci; // dwdot[CO]/d[HO2]
  J[449] += dqdci; // dwdot[C2H3]/d[HO2]
  J[454] += dqdci; // dwdot[C2H2]/d[HO2]
  J[463] -= dqdci; // dwdot[C5H5]/d[HO2]
  // d()/d[C5H5]
  dqdci = +k_f * sc[9];
  J[1494] += dqdci; // dwdot[OH]/d[C5H5]
  J[1497] -= dqdci; // dwdot[HO2]/d[C5H5]
  J[1499] += dqdci; // dwdot[CO]/d[C5H5]
  J[1505] += dqdci; // dwdot[C2H3]/d[C5H5]
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT

  // reaction 165: C5H5 + HO2 => 2 C2H2 + CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[31];
  k_f = 1.19e+27 * exp(-6.52 * tc[0] - (6743.63169928234) * invT);
  dlnkfdT = -6.52 * invT + (6743.63169928234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;      // H2O
  wdot[9] -= q;      // HO2
  wdot[11] += q;     // CO
  wdot[22] += 2 * q; // C2H2
  wdot[31] -= q;     // C5H5
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[439] += dqdci;     // dwdot[H2O]/d[HO2]
  J[441] -= dqdci;     // dwdot[HO2]/d[HO2]
  J[443] += dqdci;     // dwdot[CO]/d[HO2]
  J[454] += 2 * dqdci; // dwdot[C2H2]/d[HO2]
  J[463] -= dqdci;     // dwdot[C5H5]/d[HO2]
  // d()/d[C5H5]
  dqdci = +k_f * sc[9];
  J[1495] += dqdci;     // dwdot[H2O]/d[C5H5]
  J[1497] -= dqdci;     // dwdot[HO2]/d[C5H5]
  J[1499] += dqdci;     // dwdot[CO]/d[C5H5]
  J[1510] += 2 * dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci;     // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2263] += dqdT;     // dwdot[H2O]/dT
  J[2265] -= dqdT;     // dwdot[HO2]/dT
  J[2267] += dqdT;     // dwdot[CO]/dT
  J[2278] += 2 * dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT;     // dwdot[C5H5]/dT

  // reaction 166: C5H5 + OH => C2H2 + C2H3 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[31];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[22] += q; // C2H2
  wdot[31] -= q; // C5H5
  // d()/d[OH]
  dqdci = +k_f * sc[31];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[305] += dqdci; // dwdot[C2H3]/d[OH]
  J[310] += dqdci; // dwdot[C2H2]/d[OH]
  J[319] -= dqdci; // dwdot[C5H5]/d[OH]
  // d()/d[C5H5]
  dqdci = +k_f * sc[6];
  J[1493] += dqdci; // dwdot[H]/d[C5H5]
  J[1494] -= dqdci; // dwdot[OH]/d[C5H5]
  J[1499] += dqdci; // dwdot[CO]/d[C5H5]
  J[1505] += dqdci; // dwdot[C2H3]/d[C5H5]
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT

  // reaction 167: C5H6 <=> C5H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34];
  k_f = 1.73e+68 * exp(-15.16 * tc[0] - (58560.2744791936) * invT);
  dlnkfdT = -15.16 * invT + (58560.2744791936) * invT2;
  // reverse
  phi_r = sc[5] * sc[31];
  Kc = refC * exp(-g_RT[5] - g_RT[31] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[34]) + (h_RT[5] + h_RT[31]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[H]
  dqdci = -k_r * sc[31];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[271] += dqdci; // dwdot[C5H5]/d[H]
  J[274] -= dqdci; // dwdot[C5H6]/d[H]
  // d()/d[C5H5]
  dqdci = -k_r * sc[5];
  J[1493] += dqdci; // dwdot[H]/d[C5H5]
  J[1519] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1522] -= dqdci; // dwdot[C5H6]/d[C5H5]
  // d()/d[C5H6]
  dqdci = +k_f;
  J[1637] += dqdci; // dwdot[H]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 168: C5H6 + H => C5H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[34];
  k_f = 28000000 * exp(-(1136.56516138654) * invT);
  dlnkfdT = (1136.56516138654) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[271] += dqdci; // dwdot[C5H5]/d[H]
  J[274] -= dqdci; // dwdot[C5H6]/d[H]
  // d()/d[C5H6]
  dqdci = +k_f * sc[5];
  J[1636] += dqdci; // dwdot[H2]/d[C5H6]
  J[1637] -= dqdci; // dwdot[H]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 169: C5H6 + H => A-C3H5 + C2H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[34];
  k_f = 660000000 * exp(-(6212.03361352623) * invT);
  dlnkfdT = (6212.03361352623) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // H
  wdot[22] += q; // C2H2
  wdot[24] += q; // A-C3H5
  wdot[34] -= q; // C5H6
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  J[274] -= dqdci; // dwdot[C5H6]/d[H]
  // d()/d[C5H6]
  dqdci = +k_f * sc[5];
  J[1637] -= dqdci; // dwdot[H]/d[C5H6]
  J[1654] += dqdci; // dwdot[C2H2]/d[C5H6]
  J[1656] += dqdci; // dwdot[A-C3H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 170: C5H6 + O => C5H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[34];
  k_f = 0.0477 * exp(2.71 * tc[0] - (556.859562379503) * invT);
  dlnkfdT = 2.71 * invT + (556.859562379503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[O]
  dqdci = +k_f * sc[34];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[175] += dqdci; // dwdot[C5H5]/d[O]
  J[178] -= dqdci; // dwdot[C5H6]/d[O]
  // d()/d[C5H6]
  dqdci = +k_f * sc[3];
  J[1635] -= dqdci; // dwdot[O]/d[C5H6]
  J[1638] += dqdci; // dwdot[OH]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 171: C5H6 + OH => C5H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[34];
  k_f = 3.08 * exp(2 * tc[0]);
  dlnkfdT = 2 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[OH]
  dqdci = +k_f * sc[34];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[319] += dqdci; // dwdot[C5H5]/d[OH]
  J[322] -= dqdci; // dwdot[C5H6]/d[OH]
  // d()/d[C5H6]
  dqdci = +k_f * sc[6];
  J[1638] -= dqdci; // dwdot[OH]/d[C5H6]
  J[1639] += dqdci; // dwdot[H2O]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 172: C5H6 + CH3 => C5H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[34];
  k_f = 1.8e-07 * exp(4 * tc[0]);
  dlnkfdT = 4 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[CH3]
  dqdci = +k_f * sc[34];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[703] += dqdci; // dwdot[C5H5]/d[CH3]
  J[706] -= dqdci; // dwdot[C5H6]/d[CH3]
  // d()/d[C5H6]
  dqdci = +k_f * sc[14];
  J[1646] -= dqdci; // dwdot[CH3]/d[C5H6]
  J[1648] += dqdci; // dwdot[CH4]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 173: C5H10 + H => C5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[36];
  k_f = 7100000 * exp(0.12 * tc[0] - (734.862393574606) * invT);
  dlnkfdT = 0.12 * invT + (734.862393574606) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // H
  wdot[36] -= q; // C5H10
  wdot[37] += q; // C5H11
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[276] -= dqdci; // dwdot[C5H10]/d[H]
  J[277] += dqdci; // dwdot[C5H11]/d[H]
  // d()/d[C5H10]
  dqdci = +k_f * sc[5];
  J[1733] -= dqdci; // dwdot[H]/d[C5H10]
  J[1764] -= dqdci; // dwdot[C5H10]/d[C5H10]
  J[1765] += dqdci; // dwdot[C5H11]/d[C5H10]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2292] -= dqdT; // dwdot[C5H10]/dT
  J[2293] += dqdT; // dwdot[C5H11]/dT

  // reaction 174: C5H10 => A-C3H5 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[36];
  k_f = 9.17e+20 * exp(-1.63 * tc[0] - (37232.5029183921) * invT);
  dlnkfdT = -1.63 * invT + (37232.5029183921) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[24] += q; // A-C3H5
  wdot[36] -= q; // C5H10
  // d()/d[C5H10]
  dqdci = +k_f;
  J[1747] += dqdci; // dwdot[C2H5]/d[C5H10]
  J[1752] += dqdci; // dwdot[A-C3H5]/d[C5H10]
  J[1764] -= dqdci; // dwdot[C5H10]/d[C5H10]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2292] -= dqdT; // dwdot[C5H10]/dT

  // reaction 175: C5H11 => C2H4 + N-C3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 7.46e+21 * exp(-2.61 * tc[0] - (16116.4044158946) * invT);
  dlnkfdT = -2.61 * invT + (16116.4044158946) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[25] += q; // N-C3H7
  wdot[37] -= q; // C5H11
  // d()/d[C5H11]
  dqdci = +k_f;
  J[1794] += dqdci; // dwdot[C2H4]/d[C5H11]
  J[1801] += dqdci; // dwdot[N-C3H7]/d[C5H11]
  J[1813] -= dqdci; // dwdot[C5H11]/d[C5H11]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2293] -= dqdT; // dwdot[C5H11]/dT

  // reaction 176: C5H11 => C5H10 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 846000000000000 * exp(-0.47 * tc[0] - (18929.5566714094) * invT);
  dlnkfdT = -0.47 * invT + (18929.5566714094) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[36] += q; // C5H10
  wdot[37] -= q; // C5H11
  // d()/d[C5H11]
  dqdci = +k_f;
  J[1781] += dqdci; // dwdot[H]/d[C5H11]
  J[1812] += dqdci; // dwdot[C5H10]/d[C5H11]
  J[1813] -= dqdci; // dwdot[C5H11]/d[C5H11]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2292] += dqdT; // dwdot[C5H10]/dT
  J[2293] -= dqdT; // dwdot[C5H11]/dT

  // reaction 177: C5H11 => C2H5 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 3.15e-19 * exp(8.84 * tc[0] - (3575.67646920865) * invT);
  dlnkfdT = 8.84 * invT + (3575.67646920865) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[32] += q; // C3H6
  wdot[37] -= q; // C5H11
  // d()/d[C5H11]
  dqdci = +k_f;
  J[1795] += dqdci; // dwdot[C2H5]/d[C5H11]
  J[1808] += dqdci; // dwdot[C3H6]/d[C5H11]
  J[1813] -= dqdci; // dwdot[C5H11]/d[C5H11]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2288] += dqdT; // dwdot[C3H6]/dT
  J[2293] -= dqdT; // dwdot[C5H11]/dT

  // reaction 178: A1- + O2 => C5H5 + CO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 26000000 * exp(-(3080.15901839074) * invT);
  dlnkfdT = (3080.15901839074) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[31] += q; // C5H5
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[414] -= dqdci; // dwdot[A1-]/d[O2]
  J[415] += dqdci; // dwdot[C5H5]/d[O2]
  // d()/d[A1-]
  dqdci = +k_f * sc[8];
  J[1443] += dqdci; // dwdot[O]/d[A1-]
  J[1448] -= dqdci; // dwdot[O2]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1471] += dqdci; // dwdot[C5H5]/d[A1-]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 179: A1- + O2 => 2 C2H2 + 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 30000000 * exp(-(4518.60888976019) * invT);
  dlnkfdT = (4518.60888976019) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;      // H
  wdot[8] -= q;      // O2
  wdot[11] += 2 * q; // CO
  wdot[22] += 2 * q; // C2H2
  wdot[30] -= q;     // A1-
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[389] += dqdci;     // dwdot[H]/d[O2]
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[395] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[406] += 2 * dqdci; // dwdot[C2H2]/d[O2]
  J[414] -= dqdci;     // dwdot[A1-]/d[O2]
  // d()/d[A1-]
  dqdci = +k_f * sc[8];
  J[1445] += dqdci;     // dwdot[H]/d[A1-]
  J[1448] -= dqdci;     // dwdot[O2]/d[A1-]
  J[1451] += 2 * dqdci; // dwdot[CO]/d[A1-]
  J[1462] += 2 * dqdci; // dwdot[C2H2]/d[A1-]
  J[1470] -= dqdci;     // dwdot[A1-]/d[A1-]
  // d()/dT
  J[2261] += dqdT;     // dwdot[H]/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2278] += 2 * dqdT; // dwdot[C2H2]/dT
  J[2286] -= dqdT;     // dwdot[A1-]/dT

  // reaction 180: A1- + O => C5H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[30];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[31] += q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[30];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[174] -= dqdci; // dwdot[A1-]/d[O]
  J[175] += dqdci; // dwdot[C5H5]/d[O]
  // d()/d[A1-]
  dqdci = +k_f * sc[3];
  J[1443] -= dqdci; // dwdot[O]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1471] += dqdci; // dwdot[C5H5]/d[A1-]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 181: A1- + OH => C5H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[30];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[34] += q; // C5H6
  // d()/d[OH]
  dqdci = +k_f * sc[30];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[318] -= dqdci; // dwdot[A1-]/d[OH]
  J[322] += dqdci; // dwdot[C5H6]/d[OH]
  // d()/d[A1-]
  dqdci = +k_f * sc[6];
  J[1446] -= dqdci; // dwdot[OH]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1474] += dqdci; // dwdot[C5H6]/d[A1-]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2290] += dqdT; // dwdot[C5H6]/dT

  // reaction 182: A1- + HO2 => C5H5 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[30];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[31] += q; // C5H5
  // d()/d[HO2]
  dqdci = +k_f * sc[30];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] += dqdci; // dwdot[CO]/d[HO2]
  J[462] -= dqdci; // dwdot[A1-]/d[HO2]
  J[463] += dqdci; // dwdot[C5H5]/d[HO2]
  // d()/d[A1-]
  dqdci = +k_f * sc[9];
  J[1446] += dqdci; // dwdot[OH]/d[A1-]
  J[1449] -= dqdci; // dwdot[HO2]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1471] += dqdci; // dwdot[C5H5]/d[A1-]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 183: A1- + C2H2 <=> A1C2H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[30];
  k_f = 3.29 * exp(2.05 * tc[0] - (1591.19625810781) * invT);
  dlnkfdT = 2.05 * invT + (1591.19625810781) * invT2;
  // reverse
  phi_r = sc[38];
  Kc = refCinv * exp(g_RT[22] + g_RT[30] - g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[30]) + (h_RT[38]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // C2H2
  wdot[30] -= q; // A1-
  wdot[38] += q; // A1C2H2
  // d()/d[C2H2]
  dqdci = +k_f * sc[30];
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1086] -= dqdci; // dwdot[A1-]/d[C2H2]
  J[1094] += dqdci; // dwdot[A1C2H2]/d[C2H2]
  // d()/d[A1-]
  dqdci = +k_f * sc[22];
  J[1462] -= dqdci; // dwdot[C2H2]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1478] += dqdci; // dwdot[A1C2H2]/d[A1-]
  // d()/d[A1C2H2]
  dqdci = -k_r;
  J[1846] -= dqdci; // dwdot[C2H2]/d[A1C2H2]
  J[1854] -= dqdci; // dwdot[A1-]/d[A1C2H2]
  J[1862] += dqdci; // dwdot[A1C2H2]/d[A1C2H2]
  // d()/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2294] += dqdT; // dwdot[A1C2H2]/dT

  // reaction 184: A1 <=> A1- + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 1.29e+61 * exp(-12.48 * tc[0] - (74519.1217570248) * invT);
  dlnkfdT = -12.48 * invT + (74519.1217570248) * invT2;
  // reverse
  phi_r = sc[5] * sc[30];
  Kc = refC * exp(-g_RT[5] + g_RT[29] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[29]) + (h_RT[5] + h_RT[30]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[H]
  dqdci = -k_r * sc[30];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[269] -= dqdci; // dwdot[A1]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  // d()/d[A1]
  dqdci = +k_f;
  J[1397] += dqdci; // dwdot[H]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/d[A1-]
  dqdci = -k_r * sc[5];
  J[1445] += dqdci; // dwdot[H]/d[A1-]
  J[1469] -= dqdci; // dwdot[A1]/d[A1-]
  J[1470] += dqdci; // dwdot[A1-]/d[A1-]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 185: A1 + H => A1- + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 602 * exp(1.8 * tc[0] - (8228.98639607145) * invT);
  dlnkfdT = 1.8 * invT + (8228.98639607145) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[269] -= dqdci; // dwdot[A1]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  // d()/d[A1]
  dqdci = +k_f * sc[5];
  J[1396] += dqdci; // dwdot[H2]/d[A1]
  J[1397] -= dqdci; // dwdot[H]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 186: A1 + OH => A1- + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[29];
  k_f = 0.000403 * exp(3.33 * tc[0] - (732.451985745402) * invT);
  dlnkfdT = 3.33 * invT + (732.451985745402) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[317] -= dqdci; // dwdot[A1]/d[OH]
  J[318] += dqdci; // dwdot[A1-]/d[OH]
  // d()/d[A1]
  dqdci = +k_f * sc[6];
  J[1398] -= dqdci; // dwdot[OH]/d[A1]
  J[1399] += dqdci; // dwdot[H2O]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 187: A1 + CH3 => A1- + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[29];
  k_f = 2.752e-08 * exp(4.46 * tc[0] - (6862.70282674505) * invT);
  dlnkfdT = 4.46 * invT + (6862.70282674505) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[CH3]
  dqdci = +k_f * sc[29];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[701] -= dqdci; // dwdot[A1]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  // d()/d[A1]
  dqdci = +k_f * sc[14];
  J[1406] -= dqdci; // dwdot[CH3]/d[A1]
  J[1408] += dqdci; // dwdot[CH4]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 188: A1 + O => C5H5 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[29];
  k_f = 22200000 * exp(-(2280.35148192738) * invT);
  dlnkfdT = (2280.35148192738) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[29] -= q; // A1
  wdot[31] += q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[173] -= dqdci; // dwdot[A1]/d[O]
  J[175] += dqdci; // dwdot[C5H5]/d[O]
  // d()/d[A1]
  dqdci = +k_f * sc[3];
  J[1395] -= dqdci; // dwdot[O]/d[A1]
  J[1397] += dqdci; // dwdot[H]/d[A1]
  J[1403] += dqdci; // dwdot[CO]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1423] += dqdci; // dwdot[C5H5]/d[A1]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 189: A1 + OH => C5H6 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[29];
  k_f = 0.000132 * exp(3.25 * tc[0] - (2813.15225551476) * invT);
  dlnkfdT = 3.25 * invT + (2813.15225551476) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[29] -= q; // A1
  wdot[34] += q; // C5H6
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[317] -= dqdci; // dwdot[A1]/d[OH]
  J[322] += dqdci; // dwdot[C5H6]/d[OH]
  // d()/d[A1]
  dqdci = +k_f * sc[6];
  J[1397] += dqdci; // dwdot[H]/d[A1]
  J[1398] -= dqdci; // dwdot[OH]/d[A1]
  J[1403] += dqdci; // dwdot[CO]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1426] += dqdci; // dwdot[C5H6]/d[A1]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2290] += dqdT; // dwdot[C5H6]/dT

  // reaction 190: A1CH2 <=> C2H2 + C5H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39];
  k_f = 820000000000000 * exp(-(40597.7039849612) * invT);
  dlnkfdT = (40597.7039849612) * invT2;
  // reverse
  phi_r = sc[22] * sc[31];
  Kc = refC * exp(-g_RT[22] - g_RT[31] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[39]) + (h_RT[22] + h_RT[31]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] += q; // C2H2
  wdot[31] += q; // C5H5
  wdot[39] -= q; // A1CH2
  // d()/d[C2H2]
  dqdci = -k_r * sc[31];
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[1087] += dqdci; // dwdot[C5H5]/d[C2H2]
  J[1095] -= dqdci; // dwdot[A1CH2]/d[C2H2]
  // d()/d[C5H5]
  dqdci = -k_r * sc[22];
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1527] -= dqdci; // dwdot[A1CH2]/d[C5H5]
  // d()/d[A1CH2]
  dqdci = +k_f;
  J[1894] += dqdci; // dwdot[C2H2]/d[A1CH2]
  J[1903] += dqdci; // dwdot[C5H5]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  // d()/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT

  // reaction 191: A1CH2 + H <=> A1- + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[39];
  k_f = 5.83e+61 * exp(-14.15 * tc[0] - (34384.4676836037) * invT);
  dlnkfdT = -14.15 * invT + (34384.4676836037) * invT2;
  // reverse
  phi_r = sc[14] * sc[30];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[30] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[39]) + (h_RT[14] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[30] += q; // A1-
  wdot[39] -= q; // A1CH2
  // d()/d[H]
  dqdci = +k_f * sc[39];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  J[279] -= dqdci; // dwdot[A1CH2]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[30];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  J[711] -= dqdci; // dwdot[A1CH2]/d[CH3]
  // d()/d[A1-]
  dqdci = -k_r * sc[14];
  J[1445] -= dqdci; // dwdot[H]/d[A1-]
  J[1454] += dqdci; // dwdot[CH3]/d[A1-]
  J[1470] += dqdci; // dwdot[A1-]/d[A1-]
  J[1479] -= dqdci; // dwdot[A1CH2]/d[A1-]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[5];
  J[1877] -= dqdci; // dwdot[H]/d[A1CH2]
  J[1886] += dqdci; // dwdot[CH3]/d[A1CH2]
  J[1902] += dqdci; // dwdot[A1-]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT

  // reaction 192: A1CH2 + O => A1CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[39];
  k_f = 331000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[39] -= q; // A1CH2
  wdot[40] += q; // A1CHO
  // d()/d[O]
  dqdci = +k_f * sc[39];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[183] -= dqdci; // dwdot[A1CH2]/d[O]
  J[184] += dqdci; // dwdot[A1CHO]/d[O]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[3];
  J[1875] -= dqdci; // dwdot[O]/d[A1CH2]
  J[1877] += dqdci; // dwdot[H]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  J[1912] += dqdci; // dwdot[A1CHO]/d[A1CH2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT
  J[2296] += dqdT; // dwdot[A1CHO]/dT

  // reaction 193: A1CH2 + HO2 => A1CHO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[39];
  k_f = 10600000000 * exp(-0.94 * tc[0] - (1270.06854282453) * invT);
  dlnkfdT = -0.94 * invT + (1270.06854282453) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[39] -= q; // A1CH2
  wdot[40] += q; // A1CHO
  // d()/d[HO2]
  dqdci = +k_f * sc[39];
  J[437] += dqdci; // dwdot[H]/d[HO2]
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[471] -= dqdci; // dwdot[A1CH2]/d[HO2]
  J[472] += dqdci; // dwdot[A1CHO]/d[HO2]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[9];
  J[1877] += dqdci; // dwdot[H]/d[A1CH2]
  J[1878] += dqdci; // dwdot[OH]/d[A1CH2]
  J[1881] -= dqdci; // dwdot[HO2]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  J[1912] += dqdci; // dwdot[A1CHO]/d[A1CH2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT
  J[2296] += dqdT; // dwdot[A1CHO]/dT

  // reaction 194: A1CH2 + C3H3 => A2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23] * sc[39];
  k_f = 4.32e+33 * exp(-7.74 * tc[0] - (12003.1113896068) * invT);
  dlnkfdT = -7.74 * invT + (12003.1113896068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += 2 * q; // H
  wdot[23] -= q;    // C3H3
  wdot[35] += q;    // A2
  wdot[39] -= q;    // A1CH2
  // d()/d[C3H3]
  dqdci = +k_f * sc[39];
  J[1109] += 2 * dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci;     // dwdot[C3H3]/d[C3H3]
  J[1139] += dqdci;     // dwdot[A2]/d[C3H3]
  J[1143] -= dqdci;     // dwdot[A1CH2]/d[C3H3]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[23];
  J[1877] += 2 * dqdci; // dwdot[H]/d[A1CH2]
  J[1895] -= dqdci;     // dwdot[C3H3]/d[A1CH2]
  J[1907] += dqdci;     // dwdot[A2]/d[A1CH2]
  J[1911] -= dqdci;     // dwdot[A1CH2]/d[A1CH2]
  // d()/dT
  J[2261] += 2 * dqdT; // dwdot[H]/dT
  J[2279] -= dqdT;     // dwdot[C3H3]/dT
  J[2291] += dqdT;     // dwdot[A2]/dT
  J[2295] -= dqdT;     // dwdot[A1CH2]/dT

  // reaction 195: A1CH3 + H <=> A1 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[41];
  k_f = 2.31 * exp(2.17 * tc[0] - (2095.13252374463) * invT);
  dlnkfdT = 2.17 * invT + (2095.13252374463) * invT2;
  // reverse
  phi_r = sc[14] * sc[29];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[29] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[41]) + (h_RT[14] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[29] += q; // A1
  wdot[41] -= q; // A1CH3
  // d()/d[H]
  dqdci = +k_f * sc[41];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[269] += dqdci; // dwdot[A1]/d[H]
  J[281] -= dqdci; // dwdot[A1CH3]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[29];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[701] += dqdci; // dwdot[A1]/d[CH3]
  J[713] -= dqdci; // dwdot[A1CH3]/d[CH3]
  // d()/d[A1]
  dqdci = -k_r * sc[14];
  J[1397] -= dqdci; // dwdot[H]/d[A1]
  J[1406] += dqdci; // dwdot[CH3]/d[A1]
  J[1421] += dqdci; // dwdot[A1]/d[A1]
  J[1433] -= dqdci; // dwdot[A1CH3]/d[A1]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[5];
  J[1973] -= dqdci; // dwdot[H]/d[A1CH3]
  J[1982] += dqdci; // dwdot[CH3]/d[A1CH3]
  J[1997] += dqdci; // dwdot[A1]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2285] += dqdT; // dwdot[A1]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 196: A1CH3 <=> A1CH2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[41];
  k_f = 1.25e+18 * exp(-0.6 * tc[0] - (47698.5390022984) * invT);
  dlnkfdT = -0.6 * invT + (47698.5390022984) * invT2;
  // reverse
  phi_r = sc[5] * sc[39];
  Kc = refC * exp(-g_RT[5] - g_RT[39] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[41]) + (h_RT[5] + h_RT[39]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[H]
  dqdci = -k_r * sc[39];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[279] += dqdci; // dwdot[A1CH2]/d[H]
  J[281] -= dqdci; // dwdot[A1CH3]/d[H]
  // d()/d[A1CH2]
  dqdci = -k_r * sc[5];
  J[1877] += dqdci; // dwdot[H]/d[A1CH2]
  J[1911] += dqdci; // dwdot[A1CH2]/d[A1CH2]
  J[1913] -= dqdci; // dwdot[A1CH3]/d[A1CH2]
  // d()/d[A1CH3]
  dqdci = +k_f;
  J[1973] += dqdci; // dwdot[H]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 197: A1CH3 <=> A1- + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[41];
  k_f = 2.16e+29 * exp(-3.58 * tc[0] - (55436.818698877) * invT);
  dlnkfdT = -3.58 * invT + (55436.818698877) * invT2;
  // reverse
  phi_r = sc[14] * sc[30];
  Kc = refC * exp(-g_RT[14] - g_RT[30] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[41]) + (h_RT[14] + h_RT[30]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] += q; // CH3
  wdot[30] += q; // A1-
  wdot[41] -= q; // A1CH3
  // d()/d[CH3]
  dqdci = -k_r * sc[30];
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  J[713] -= dqdci; // dwdot[A1CH3]/d[CH3]
  // d()/d[A1-]
  dqdci = -k_r * sc[14];
  J[1454] += dqdci; // dwdot[CH3]/d[A1-]
  J[1470] += dqdci; // dwdot[A1-]/d[A1-]
  J[1481] -= dqdci; // dwdot[A1CH3]/d[A1-]
  // d()/d[A1CH3]
  dqdci = +k_f;
  J[1982] += dqdci; // dwdot[CH3]/d[A1CH3]
  J[1998] += dqdci; // dwdot[A1-]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 198: A1CH3 + H => A1CH2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[41];
  k_f = 6.47e-06 * exp(3.98 * tc[0] - (1703.04622641623) * invT);
  dlnkfdT = 3.98 * invT + (1703.04622641623) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[H]
  dqdci = +k_f * sc[41];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[279] += dqdci; // dwdot[A1CH2]/d[H]
  J[281] -= dqdci; // dwdot[A1CH3]/d[H]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[5];
  J[1972] += dqdci; // dwdot[H2]/d[A1CH3]
  J[1973] -= dqdci; // dwdot[H]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 199: A1CH3 + OH => A1CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[41];
  k_f = 16200000 * exp(-(1393.95042161234) * invT);
  dlnkfdT = (1393.95042161234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[OH]
  dqdci = +k_f * sc[41];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[327] += dqdci; // dwdot[A1CH2]/d[OH]
  J[329] -= dqdci; // dwdot[A1CH3]/d[OH]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[6];
  J[1974] -= dqdci; // dwdot[OH]/d[A1CH3]
  J[1975] += dqdci; // dwdot[H2O]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 200: A1CH3 + CH3 => A1CH2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[41];
  k_f = 422000000 * exp(-(11199.6957896497) * invT);
  dlnkfdT = (11199.6957896497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[CH3]
  dqdci = +k_f * sc[41];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[711] += dqdci; // dwdot[A1CH2]/d[CH3]
  J[713] -= dqdci; // dwdot[A1CH3]/d[CH3]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[14];
  J[1982] -= dqdci; // dwdot[CH3]/d[A1CH3]
  J[1984] += dqdci; // dwdot[CH4]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 201: C7H15 => C2H4 + C5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 1890000000000 * exp(0.02 * tc[0] - (13981.583193718) * invT);
  dlnkfdT = 0.02 * invT + (13981.583193718) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[37] += q; // C5H11
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2034] += dqdci; // dwdot[C2H4]/d[C7H15]
  J[2053] += dqdci; // dwdot[C5H11]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2293] += dqdT; // dwdot[C5H11]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 202: C7H15 => C2H4 + C2H5 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 7.73e+18 * exp(-1.75 * tc[0] - (16089.9452836066) * invT);
  dlnkfdT = -1.75 * invT + (16089.9452836066) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[19] += q; // C2H5
  wdot[32] += q; // C3H6
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2034] += dqdci; // dwdot[C2H4]/d[C7H15]
  J[2035] += dqdci; // dwdot[C2H5]/d[C7H15]
  J[2048] += dqdci; // dwdot[C3H6]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2288] += dqdT; // dwdot[C3H6]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 203: C7H15 => C4H8 + N-C3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 2.53e+18 * exp(-1.65 * tc[0] - (15943.2123360246) * invT);
  dlnkfdT = -1.65 * invT + (15943.2123360246) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] += q; // N-C3H7
  wdot[33] += q; // C4H8
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2041] += dqdci; // dwdot[N-C3H7]/d[C7H15]
  J[2049] += dqdci; // dwdot[C4H8]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2289] += dqdT; // dwdot[C4H8]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 204: C7H15 => C2H5 + C5H10
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 2.49e+16 * exp(-1.18 * tc[0] - (14853.5520000577) * invT);
  dlnkfdT = -1.18 * invT + (14853.5520000577) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[36] += q; // C5H10
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2035] += dqdci; // dwdot[C2H5]/d[C7H15]
  J[2052] += dqdci; // dwdot[C5H10]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2292] += dqdT; // dwdot[C5H10]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 205: N-C7H16 => C2H5 + C5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 8.1e+77 * exp(-17.62 * tc[0] - (60586.8537965557) * invT);
  dlnkfdT = -17.62 * invT + (60586.8537965557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[37] += q; // C5H11
  wdot[43] -= q; // N-C7H16
  // d()/d[N-C7H16]
  dqdci = +k_f;
  J[2083] += dqdci; // dwdot[C2H5]/d[N-C7H16]
  J[2101] += dqdci; // dwdot[C5H11]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2293] += dqdT; // dwdot[C5H11]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 206: N-C7H16 => C2H4 + C2H5 + N-C3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 1.42e+78 * exp(-17.71 * tc[0] - (60738.3974954627) * invT);
  dlnkfdT = -17.71 * invT + (60738.3974954627) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[19] += q; // C2H5
  wdot[25] += q; // N-C3H7
  wdot[43] -= q; // N-C7H16
  // d()/d[N-C7H16]
  dqdci = +k_f;
  J[2082] += dqdci; // dwdot[C2H4]/d[N-C7H16]
  J[2083] += dqdci; // dwdot[C2H5]/d[N-C7H16]
  J[2089] += dqdci; // dwdot[N-C3H7]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 207: H + N-C7H16 => C7H15 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[43];
  k_f = 1.75 * exp(2.6 * tc[0] - (2194.95561374032) * invT);
  dlnkfdT = 2.6 * invT + (2194.95561374032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[H]
  dqdci = +k_f * sc[43];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[282] += dqdci; // dwdot[C7H15]/d[H]
  J[283] -= dqdci; // dwdot[N-C7H16]/d[H]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[5];
  J[2068] += dqdci; // dwdot[H2]/d[N-C7H16]
  J[2069] -= dqdci; // dwdot[H]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 208: N-C7H16 + O => C7H15 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[43];
  k_f = 0.172 * exp(2.81 * tc[0] - (1137.76784921781) * invT);
  dlnkfdT = 2.81 * invT + (1137.76784921781) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[O]
  dqdci = +k_f * sc[43];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[186] += dqdci; // dwdot[C7H15]/d[O]
  J[187] -= dqdci; // dwdot[N-C7H16]/d[O]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[3];
  J[2067] -= dqdci; // dwdot[O]/d[N-C7H16]
  J[2070] += dqdci; // dwdot[OH]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 209: N-C7H16 + OH => C7H15 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[43];
  k_f = 740 * exp(1.5 * tc[0] - (129.895317944172) * invT);
  dlnkfdT = 1.5 * invT + (129.895317944172) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[OH]
  dqdci = +k_f * sc[43];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[330] += dqdci; // dwdot[C7H15]/d[OH]
  J[331] -= dqdci; // dwdot[N-C7H16]/d[OH]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[6];
  J[2070] -= dqdci; // dwdot[OH]/d[N-C7H16]
  J[2071] += dqdci; // dwdot[H2O]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 210: CH3 + N-C7H16 => C7H15 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[43];
  k_f = 0.0146 * exp(2.57 * tc[0] - (3489.08294535697) * invT);
  dlnkfdT = 2.57 * invT + (3489.08294535697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[CH3]
  dqdci = +k_f * sc[43];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[714] += dqdci; // dwdot[C7H15]/d[CH3]
  J[715] -= dqdci; // dwdot[N-C7H16]/d[CH3]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[14];
  J[2078] -= dqdci; // dwdot[CH3]/d[N-C7H16]
  J[2080] += dqdci; // dwdot[CH4]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 211: A1CHO => A1- + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[40];
  k_f = 2.61e+15 * exp(0.15 * tc[0] - (40533.9564977371) * invT);
  dlnkfdT = 0.15 * invT + (40533.9564977371) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[12] += q; // HCO
  wdot[30] += q; // A1-
  wdot[40] -= q; // A1CHO
  // d()/d[A1CHO]
  dqdci = +k_f;
  J[1932] += dqdci; // dwdot[HCO]/d[A1CHO]
  J[1950] += dqdci; // dwdot[A1-]/d[A1CHO]
  J[1960] -= dqdci; // dwdot[A1CHO]/d[A1CHO]
  // d()/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2296] -= dqdT; // dwdot[A1CHO]/dT

  // reaction 212: A1CHO + H => A1- + CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[40];
  k_f = 2050 * exp(1.16 * tc[0] - (1209.93415126087) * invT);
  dlnkfdT = 1.16 * invT + (1209.93415126087) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[11] += q; // CO
  wdot[30] += q; // A1-
  wdot[40] -= q; // A1CHO
  // d()/d[H]
  dqdci = +k_f * sc[40];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  J[280] -= dqdci; // dwdot[A1CHO]/d[H]
  // d()/d[A1CHO]
  dqdci = +k_f * sc[5];
  J[1924] += dqdci; // dwdot[H2]/d[A1CHO]
  J[1925] -= dqdci; // dwdot[H]/d[A1CHO]
  J[1931] += dqdci; // dwdot[CO]/d[A1CHO]
  J[1950] += dqdci; // dwdot[A1-]/d[A1CHO]
  J[1960] -= dqdci; // dwdot[A1CHO]/d[A1CHO]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2296] -= dqdT; // dwdot[A1CHO]/dT

  // reaction 213: A1CHO + CH3 => A1- + CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[40];
  k_f = 2.72 * exp(1.77 * tc[0] - (2979.12820839713) * invT);
  dlnkfdT = 1.77 * invT + (2979.12820839713) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[30] += q; // A1-
  wdot[40] -= q; // A1CHO
  // d()/d[CH3]
  dqdci = +k_f * sc[40];
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  J[712] -= dqdci; // dwdot[A1CHO]/d[CH3]
  // d()/d[A1CHO]
  dqdci = +k_f * sc[14];
  J[1931] += dqdci; // dwdot[CO]/d[A1CHO]
  J[1934] -= dqdci; // dwdot[CH3]/d[A1CHO]
  J[1936] += dqdci; // dwdot[CH4]/d[A1CHO]
  J[1950] += dqdci; // dwdot[A1-]/d[A1CHO]
  J[1960] -= dqdci; // dwdot[A1CHO]/d[A1CHO]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2296] -= dqdT; // dwdot[A1CHO]/dT

  // reaction 214: A1C2H* + C2H2 <=> A2-
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[44];
  k_f = 0.0134 * exp(2.5 * tc[0] - (645.858461893726) * invT);
  dlnkfdT = 2.5 * invT + (645.858461893726) * invT2;
  // reverse
  phi_r = sc[45];
  Kc = refCinv * exp(g_RT[22] + g_RT[44] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[44]) + (h_RT[45]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // C2H2
  wdot[44] -= q; // A1C2H*
  wdot[45] += q; // A2-
  // d()/d[C2H2]
  dqdci = +k_f * sc[44];
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1100] -= dqdci; // dwdot[A1C2H*]/d[C2H2]
  J[1101] += dqdci; // dwdot[A2-]/d[C2H2]
  // d()/d[A1C2H*]
  dqdci = +k_f * sc[22];
  J[2134] -= dqdci; // dwdot[C2H2]/d[A1C2H*]
  J[2156] -= dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2157] += dqdci; // dwdot[A2-]/d[A1C2H*]
  // d()/d[A2-]
  dqdci = -k_r;
  J[2182] -= dqdci; // dwdot[C2H2]/d[A2-]
  J[2204] -= dqdci; // dwdot[A1C2H*]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2300] -= dqdT; // dwdot[A1C2H*]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  // reaction 215: A1C2H* + C2H4 <=> A2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[44];
  k_f = 3.62e+22 * exp(-4.24 * tc[0] - (12009.1248287632) * invT);
  dlnkfdT = -4.24 * invT + (12009.1248287632) * invT2;
  // reverse
  phi_r = sc[5] * sc[35];
  Kc = exp(-g_RT[5] + g_RT[18] - g_RT[35] + g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[44]) + (h_RT[5] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[18] -= q; // C2H4
  wdot[35] += q; // A2
  wdot[44] -= q; // A1C2H*
  // d()/d[H]
  dqdci = -k_r * sc[35];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[258] -= dqdci; // dwdot[C2H4]/d[H]
  J[275] += dqdci; // dwdot[A2]/d[H]
  J[284] -= dqdci; // dwdot[A1C2H*]/d[H]
  // d()/d[C2H4]
  dqdci = +k_f * sc[44];
  J[869] += dqdci; // dwdot[H]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[899] += dqdci; // dwdot[A2]/d[C2H4]
  J[908] -= dqdci; // dwdot[A1C2H*]/d[C2H4]
  // d()/d[A2]
  dqdci = -k_r * sc[5];
  J[1685] += dqdci; // dwdot[H]/d[A2]
  J[1698] -= dqdci; // dwdot[C2H4]/d[A2]
  J[1715] += dqdci; // dwdot[A2]/d[A2]
  J[1724] -= dqdci; // dwdot[A1C2H*]/d[A2]
  // d()/d[A1C2H*]
  dqdci = +k_f * sc[18];
  J[2117] += dqdci; // dwdot[H]/d[A1C2H*]
  J[2130] -= dqdci; // dwdot[C2H4]/d[A1C2H*]
  J[2147] += dqdci; // dwdot[A2]/d[A1C2H*]
  J[2156] -= dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT
  J[2291] += dqdT; // dwdot[A2]/dT
  J[2300] -= dqdT; // dwdot[A1C2H*]/dT

  // reaction 216: A1C2H <=> A1C2H* + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[46];
  k_f = 2.1e+60 * exp(-12.4 * tc[0] - (74514.3110056997) * invT);
  dlnkfdT = -12.4 * invT + (74514.3110056997) * invT2;
  // reverse
  phi_r = sc[5] * sc[44];
  Kc = refC * exp(-g_RT[5] - g_RT[44] + g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[46]) + (h_RT[5] + h_RT[44]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[44] += q; // A1C2H*
  wdot[46] -= q; // A1C2H
  // d()/d[H]
  dqdci = -k_r * sc[44];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[284] += dqdci; // dwdot[A1C2H*]/d[H]
  J[286] -= dqdci; // dwdot[A1C2H]/d[H]
  // d()/d[A1C2H*]
  dqdci = -k_r * sc[5];
  J[2117] += dqdci; // dwdot[H]/d[A1C2H*]
  J[2156] += dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2158] -= dqdci; // dwdot[A1C2H]/d[A1C2H*]
  // d()/d[A1C2H]
  dqdci = +k_f;
  J[2213] += dqdci; // dwdot[H]/d[A1C2H]
  J[2252] += dqdci; // dwdot[A1C2H*]/d[A1C2H]
  J[2254] -= dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2300] += dqdT; // dwdot[A1C2H*]/dT
  J[2302] -= dqdT; // dwdot[A1C2H]/dT

  // reaction 217: A1C2H + H <=> A1C2H* + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[46];
  k_f = 132 * exp(1.88 * tc[0] - (8464.71824316767) * invT);
  dlnkfdT = 1.88 * invT + (8464.71824316767) * invT2;
  // reverse
  phi_r = sc[4] * sc[44];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[44] + g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[46]) + (h_RT[4] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[44] += q; // A1C2H*
  wdot[46] -= q; // A1C2H
  // d()/d[H2]
  dqdci = -k_r * sc[44];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[236] += dqdci; // dwdot[A1C2H*]/d[H2]
  J[238] -= dqdci; // dwdot[A1C2H]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[46];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[284] += dqdci; // dwdot[A1C2H*]/d[H]
  J[286] -= dqdci; // dwdot[A1C2H]/d[H]
  // d()/d[A1C2H*]
  dqdci = -k_r * sc[4];
  J[2116] += dqdci; // dwdot[H2]/d[A1C2H*]
  J[2117] -= dqdci; // dwdot[H]/d[A1C2H*]
  J[2156] += dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2158] -= dqdci; // dwdot[A1C2H]/d[A1C2H*]
  // d()/d[A1C2H]
  dqdci = +k_f * sc[5];
  J[2212] += dqdci; // dwdot[H2]/d[A1C2H]
  J[2213] -= dqdci; // dwdot[H]/d[A1C2H]
  J[2252] += dqdci; // dwdot[A1C2H*]/d[A1C2H]
  J[2254] -= dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2300] += dqdT; // dwdot[A1C2H*]/dT
  J[2302] -= dqdT; // dwdot[A1C2H]/dT

  // reaction 218: A1C2H + OH <=> A1C2H* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[46];
  k_f = 0.000134 * exp(3.33 * tc[0] - (732.451985745402) * invT);
  dlnkfdT = 3.33 * invT + (732.451985745402) * invT2;
  // reverse
  phi_r = sc[7] * sc[44];
  Kc = exp(g_RT[6] - g_RT[7] - g_RT[44] + g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[46]) + (h_RT[7] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[44] += q; // A1C2H*
  wdot[46] -= q; // A1C2H
  // d()/d[OH]
  dqdci = +k_f * sc[46];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[332] += dqdci; // dwdot[A1C2H*]/d[OH]
  J[334] -= dqdci; // dwdot[A1C2H]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[44];
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[380] += dqdci; // dwdot[A1C2H*]/d[H2O]
  J[382] -= dqdci; // dwdot[A1C2H]/d[H2O]
  // d()/d[A1C2H*]
  dqdci = -k_r * sc[7];
  J[2118] -= dqdci; // dwdot[OH]/d[A1C2H*]
  J[2119] += dqdci; // dwdot[H2O]/d[A1C2H*]
  J[2156] += dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2158] -= dqdci; // dwdot[A1C2H]/d[A1C2H*]
  // d()/d[A1C2H]
  dqdci = +k_f * sc[6];
  J[2214] -= dqdci; // dwdot[OH]/d[A1C2H]
  J[2215] += dqdci; // dwdot[H2O]/d[A1C2H]
  J[2252] += dqdci; // dwdot[A1C2H*]/d[A1C2H]
  J[2254] -= dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2300] += dqdT; // dwdot[A1C2H*]/dT
  J[2302] -= dqdT; // dwdot[A1C2H]/dT

  // reaction 219: A1C2H2 <=> A1C2H + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38];
  k_f = 1.34e+17 * exp(-0.86 * tc[0] - (20751.6740252883) * invT);
  dlnkfdT = -0.86 * invT + (20751.6740252883) * invT2;
  // reverse
  phi_r = sc[5] * sc[46];
  Kc = refC * exp(-g_RT[5] + g_RT[38] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[38]) + (h_RT[5] + h_RT[46]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[38] -= q; // A1C2H2
  wdot[46] += q; // A1C2H
  // d()/d[H]
  dqdci = -k_r * sc[46];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[278] -= dqdci; // dwdot[A1C2H2]/d[H]
  J[286] += dqdci; // dwdot[A1C2H]/d[H]
  // d()/d[A1C2H2]
  dqdci = +k_f;
  J[1829] += dqdci; // dwdot[H]/d[A1C2H2]
  J[1862] -= dqdci; // dwdot[A1C2H2]/d[A1C2H2]
  J[1870] += dqdci; // dwdot[A1C2H]/d[A1C2H2]
  // d()/d[A1C2H]
  dqdci = -k_r * sc[5];
  J[2213] += dqdci; // dwdot[H]/d[A1C2H]
  J[2246] -= dqdci; // dwdot[A1C2H2]/d[A1C2H]
  J[2254] += dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2294] -= dqdT; // dwdot[A1C2H2]/dT
  J[2302] += dqdT; // dwdot[A1C2H]/dT

  // reaction 220: A1C2H2 + C2H2 <=> A2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[38];
  k_f = 70910000 * exp(-0.26 * tc[0] - (3523.9608924639) * invT);
  dlnkfdT = -0.26 * invT + (3523.9608924639) * invT2;
  // reverse
  phi_r = sc[5] * sc[35];
  Kc = exp(-g_RT[5] + g_RT[22] - g_RT[35] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[38]) + (h_RT[5] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[22] -= q; // C2H2
  wdot[35] += q; // A2
  wdot[38] -= q; // A1C2H2
  // d()/d[H]
  dqdci = -k_r * sc[35];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[262] -= dqdci; // dwdot[C2H2]/d[H]
  J[275] += dqdci; // dwdot[A2]/d[H]
  J[278] -= dqdci; // dwdot[A1C2H2]/d[H]
  // d()/d[C2H2]
  dqdci = +k_f * sc[38];
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1091] += dqdci; // dwdot[A2]/d[C2H2]
  J[1094] -= dqdci; // dwdot[A1C2H2]/d[C2H2]
  // d()/d[A2]
  dqdci = -k_r * sc[5];
  J[1685] += dqdci; // dwdot[H]/d[A2]
  J[1702] -= dqdci; // dwdot[C2H2]/d[A2]
  J[1715] += dqdci; // dwdot[A2]/d[A2]
  J[1718] -= dqdci; // dwdot[A1C2H2]/d[A2]
  // d()/d[A1C2H2]
  dqdci = +k_f * sc[22];
  J[1829] += dqdci; // dwdot[H]/d[A1C2H2]
  J[1846] -= dqdci; // dwdot[C2H2]/d[A1C2H2]
  J[1859] += dqdci; // dwdot[A2]/d[A1C2H2]
  J[1862] -= dqdci; // dwdot[A1C2H2]/d[A1C2H2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2291] += dqdT; // dwdot[A2]/dT
  J[2294] -= dqdT; // dwdot[A1C2H2]/dT

  // reaction 221: A2 <=> A2- + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[35];
  k_f = 8.6e+60 * exp(-12.48 * tc[0] - (74514.3110056997) * invT);
  dlnkfdT = -12.48 * invT + (74514.3110056997) * invT2;
  // reverse
  phi_r = sc[5] * sc[45];
  Kc = refC * exp(-g_RT[5] + g_RT[35] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[35]) + (h_RT[5] + h_RT[45]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[35] -= q; // A2
  wdot[45] += q; // A2-
  // d()/d[H]
  dqdci = -k_r * sc[45];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[275] -= dqdci; // dwdot[A2]/d[H]
  J[285] += dqdci; // dwdot[A2-]/d[H]
  // d()/d[A2]
  dqdci = +k_f;
  J[1685] += dqdci; // dwdot[H]/d[A2]
  J[1715] -= dqdci; // dwdot[A2]/d[A2]
  J[1725] += dqdci; // dwdot[A2-]/d[A2]
  // d()/d[A2-]
  dqdci = -k_r * sc[5];
  J[2165] += dqdci; // dwdot[H]/d[A2-]
  J[2195] -= dqdci; // dwdot[A2]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2291] -= dqdT; // dwdot[A2]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  // reaction 222: A2 + H <=> A2- + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[35];
  k_f = 265 * exp(1.87 * tc[0] - (8603.03237593075) * invT);
  dlnkfdT = 1.87 * invT + (8603.03237593075) * invT2;
  // reverse
  phi_r = sc[4] * sc[45];
  Kc = exp(-g_RT[4] + g_RT[5] + g_RT[35] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[35]) + (h_RT[4] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[35] -= q; // A2
  wdot[45] += q; // A2-
  // d()/d[H2]
  dqdci = -k_r * sc[45];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[227] -= dqdci; // dwdot[A2]/d[H2]
  J[237] += dqdci; // dwdot[A2-]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[35];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[275] -= dqdci; // dwdot[A2]/d[H]
  J[285] += dqdci; // dwdot[A2-]/d[H]
  // d()/d[A2]
  dqdci = +k_f * sc[5];
  J[1684] += dqdci; // dwdot[H2]/d[A2]
  J[1685] -= dqdci; // dwdot[H]/d[A2]
  J[1715] -= dqdci; // dwdot[A2]/d[A2]
  J[1725] += dqdci; // dwdot[A2-]/d[A2]
  // d()/d[A2-]
  dqdci = -k_r * sc[4];
  J[2164] += dqdci; // dwdot[H2]/d[A2-]
  J[2165] -= dqdci; // dwdot[H]/d[A2-]
  J[2195] -= dqdci; // dwdot[A2]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2291] -= dqdT; // dwdot[A2]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  // reaction 223: A2 + OH <=> A2- + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[35];
  k_f = 0.000963 * exp(3.02 * tc[0] - (2200.96905289668) * invT);
  dlnkfdT = 3.02 * invT + (2200.96905289668) * invT2;
  // reverse
  phi_r = sc[7] * sc[45];
  Kc = exp(g_RT[6] - g_RT[7] + g_RT[35] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[35]) + (h_RT[7] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[35] -= q; // A2
  wdot[45] += q; // A2-
  // d()/d[OH]
  dqdci = +k_f * sc[35];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[323] -= dqdci; // dwdot[A2]/d[OH]
  J[333] += dqdci; // dwdot[A2-]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[45];
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[371] -= dqdci; // dwdot[A2]/d[H2O]
  J[381] += dqdci; // dwdot[A2-]/d[H2O]
  // d()/d[A2]
  dqdci = +k_f * sc[6];
  J[1686] -= dqdci; // dwdot[OH]/d[A2]
  J[1687] += dqdci; // dwdot[H2O]/d[A2]
  J[1715] -= dqdci; // dwdot[A2]/d[A2]
  J[1725] += dqdci; // dwdot[A2-]/d[A2]
  // d()/d[A2-]
  dqdci = -k_r * sc[7];
  J[2166] -= dqdci; // dwdot[OH]/d[A2-]
  J[2167] += dqdci; // dwdot[H2O]/d[A2-]
  J[2195] -= dqdci; // dwdot[A2]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2291] -= dqdT; // dwdot[A2]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  amrex::Real c_R[47], dcRdT[47], e_RT[47];
  amrex::Real* eh_RT;
  if (HP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 47; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[2256 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 47; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 47; ++m) {
      dehmixdc += eh_RT[m] * J[k * 48 + m];
    }
    J[k * 48 + 47] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[2303] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute an approx to the reaction Jacobian (for preconditioning)
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT_SIMPLIFIED(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real* Tp, const int* HP)
{
  amrex::Real c[47];

  for (int k = 0; k < 47; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian_precond(J, c, *Tp, *HP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 47; k++) {
    J[2256 + k] *= 1.e-6;
    J[k * 48 + 47] *= 1.e6;
  }
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
aJacobian(
  amrex::Real* J, const amrex::Real* sc, const amrex::Real T, const int consP)
{

#if defined(PELE_COMPILE_AJACOBIAN) || !defined(AMREX_USE_HIP)
  for (int i = 0; i < 2304; i++) {
    J[i] = 0.0;
  }

  amrex::Real wdot[47];
  for (auto& val : wdot) {
    val = 0.0;
  }

  const amrex::Real tc[5] = {
    log(T), T, T * T, T * T * T, T * T * T * T}; // temperature cache
  amrex::Real invT = 1.0 / tc[1];
  amrex::Real invT2 = invT * invT;

  // reference concentration: P_atm / (RT) in inverse mol/m^3
  amrex::Real refC = 101325 / 8.31446 / T;
  amrex::Real refCinv = 1.0 / refC;

  // compute the mixture concentration
  amrex::Real mixture = 0.0;
  for (int k = 0; k < 47; ++k) {
    mixture += sc[k];
  }

  // compute the Gibbs free energy
  amrex::Real g_RT[47];
  gibbs(g_RT, tc);

  // compute the species enthalpy
  amrex::Real h_RT[47];
  speciesEnthalpy(h_RT, tc);

  amrex::Real phi_f, k_f, k_r, phi_r, Kc, q, q_nocor, Corr, alpha;
  amrex::Real dlnkfdT, dlnk0dT, dlnKcdT, dkrdT, dqdT;
  amrex::Real dqdci, dcdc_fac, dqdc[47];
  amrex::Real Pr, fPr, F, k_0, logPr;
  amrex::Real logFcent, troe_c, troe_n, troePr_den, troePr, troe;
  amrex::Real Fcent1, Fcent2, Fcent3, Fcent;
  amrex::Real dlogFdc, dlogFdn, dlogFdcn_fac;
  amrex::Real dlogPrdT, dlogfPrdT, dlogFdT, dlogFcentdT, dlogFdlogPr, dlnCorrdT;
  const amrex::Real ln10 = log(10.0);
  const amrex::Real log10e = 1.0 / log(10.0);
  // reaction 6: H + O2 (+M) => HO2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + (0.75 - 1) * sc[4] + (11.89 - 1) * sc[7] +
          (0.85 - 1) * sc[8] + (1.09 - 1) * sc[11] + (2.18 - 1) * sc[15];
  // forward
  phi_f = sc[5] * sc[8];
  k_f = 5120000 * exp(0.44 * tc[0]);
  dlnkfdT = 0.44 * invT;
  // pressure-fall-off
  k_0 = 6.33e+19 * exp(-1.4 * tc[0]);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -1.4 * invT;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = 0.;
  Fcent2 = 0.5 * exp(-T / 10000000000);
  Fcent3 = exp(-10000000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent2 / 10000000000 + Fcent3 * 10000000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q; // H
  wdot[8] -= q; // O2
  wdot[9] += q; // HO2
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (0.75 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[200] -= dqdci; // dwdot[O2]/d[H2]
    J[201] += dqdci; // dwdot[HO2]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[8];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[248] -= dqdci; // dwdot[O2]/d[H]
    J[249] += dqdci; // dwdot[HO2]/d[H]
    // d()/d[H2O]
    dqdci = (11.89 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[344] -= dqdci; // dwdot[O2]/d[H2O]
    J[345] += dqdci; // dwdot[HO2]/d[H2O]
    // d()/d[O2]
    dqdci = (0.85 - 1) * dcdc_fac + k_f * sc[5];
    J[389] -= dqdci; // dwdot[H]/d[O2]
    J[392] -= dqdci; // dwdot[O2]/d[O2]
    J[393] += dqdci; // dwdot[HO2]/d[O2]
    // d()/d[CO]
    dqdci = (1.09 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[536] -= dqdci; // dwdot[O2]/d[CO]
    J[537] += dqdci; // dwdot[HO2]/d[CO]
    // d()/d[CO2]
    dqdci = (2.18 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[728] -= dqdci; // dwdot[O2]/d[CO2]
    J[729] += dqdci; // dwdot[HO2]/d[CO2]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 0.75 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[8];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 11.89 * dcdc_fac;
    dqdc[8] = 0.85 * dcdc_fac + k_f * sc[5];
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.09 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 2.18 * dcdc_fac;
    dqdc[16] = dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 8] -= dqdc[k];
      J[48 * k + 9] += dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT

  // reaction 29: H2O + S-CH2 (+M) => CH2O + H2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 482000000000 * exp(-1.16 * tc[0] - (576.102567679875) * invT);
  dlnkfdT = -1.16 * invT + (576.102567679875) * invT2;
  // pressure-fall-off
  k_0 = 1.88e+38 * exp(-6.36 * tc[0] - (2536.52902215524) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.36 * invT + (2536.52902215524) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.6027) * exp(-T / 208);
  Fcent2 = 0.6027 * exp(-T / 3922);
  Fcent3 = exp(-10180 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 208 - Fcent2 / 3922 + Fcent3 * 10180 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[4] += q;  // H2
  wdot[7] -= q;  // H2O
  wdot[13] += q; // CH2O
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[S-CH2]
    dqdci = +k_f * sc[7];
    J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
    J[52] += dqdci; // dwdot[H2]/d[S-CH2]
    J[55] -= dqdci; // dwdot[H2O]/d[S-CH2]
    J[61] += dqdci; // dwdot[CH2O]/d[S-CH2]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[193] -= dqdci; // dwdot[S-CH2]/d[H2]
    J[196] += dqdci; // dwdot[H2]/d[H2]
    J[199] -= dqdci; // dwdot[H2O]/d[H2]
    J[205] += dqdci; // dwdot[CH2O]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac + k_f * sc[1];
    J[337] -= dqdci; // dwdot[S-CH2]/d[H2O]
    J[340] += dqdci; // dwdot[H2]/d[H2O]
    J[343] -= dqdci; // dwdot[H2O]/d[H2O]
    J[349] += dqdci; // dwdot[CH2O]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[529] -= dqdci; // dwdot[S-CH2]/d[CO]
    J[532] += dqdci; // dwdot[H2]/d[CO]
    J[535] -= dqdci; // dwdot[H2O]/d[CO]
    J[541] += dqdci; // dwdot[CH2O]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[721] -= dqdci; // dwdot[S-CH2]/d[CO2]
    J[724] += dqdci; // dwdot[H2]/d[CO2]
    J[727] -= dqdci; // dwdot[H2O]/d[CO2]
    J[733] += dqdci; // dwdot[CH2O]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[769] -= dqdci; // dwdot[S-CH2]/d[CH4]
    J[772] += dqdci; // dwdot[H2]/d[CH4]
    J[775] -= dqdci; // dwdot[H2O]/d[CH4]
    J[781] += dqdci; // dwdot[CH2O]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1249] -= dqdci; // dwdot[S-CH2]/d[C2H6]
    J[1252] += dqdci; // dwdot[H2]/d[C2H6]
    J[1255] -= dqdci; // dwdot[H2O]/d[C2H6]
    J[1261] += dqdci; // dwdot[CH2O]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac + k_f * sc[7];
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac + k_f * sc[1];
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 1] -= dqdc[k];
      J[48 * k + 4] += dqdc[k];
      J[48 * k + 7] -= dqdc[k];
      J[48 * k + 13] += dqdc[k];
    }
  }
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2263] -= dqdT; // dwdot[H2O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 35: CH3 + OH (+M) => CH2O + H2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 2790000000000 * exp(-1.43 * tc[0] - (669.912218519191) * invT);
  dlnkfdT = -1.43 * invT + (669.912218519191) * invT2;
  // pressure-fall-off
  k_0 = 4e+36 * exp(-5.92 * tc[0] - (1580.37206762635) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.92 * invT + (1580.37206762635) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.412) * exp(-T / 195);
  Fcent2 = 0.412 * exp(-T / 5900);
  Fcent3 = exp(-6394 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 195 - Fcent2 / 5900 + Fcent3 * 6394 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[4] += q;  // H2
  wdot[6] -= q;  // OH
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[196] += dqdci; // dwdot[H2]/d[H2]
    J[198] -= dqdci; // dwdot[OH]/d[H2]
    J[205] += dqdci; // dwdot[CH2O]/d[H2]
    J[206] -= dqdci; // dwdot[CH3]/d[H2]
    // d()/d[OH]
    dqdci = +k_f * sc[14];
    J[292] += dqdci; // dwdot[H2]/d[OH]
    J[294] -= dqdci; // dwdot[OH]/d[OH]
    J[301] += dqdci; // dwdot[CH2O]/d[OH]
    J[302] -= dqdci; // dwdot[CH3]/d[OH]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[340] += dqdci; // dwdot[H2]/d[H2O]
    J[342] -= dqdci; // dwdot[OH]/d[H2O]
    J[349] += dqdci; // dwdot[CH2O]/d[H2O]
    J[350] -= dqdci; // dwdot[CH3]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[532] += dqdci; // dwdot[H2]/d[CO]
    J[534] -= dqdci; // dwdot[OH]/d[CO]
    J[541] += dqdci; // dwdot[CH2O]/d[CO]
    J[542] -= dqdci; // dwdot[CH3]/d[CO]
    // d()/d[CH3]
    dqdci = +k_f * sc[6];
    J[676] += dqdci; // dwdot[H2]/d[CH3]
    J[678] -= dqdci; // dwdot[OH]/d[CH3]
    J[685] += dqdci; // dwdot[CH2O]/d[CH3]
    J[686] -= dqdci; // dwdot[CH3]/d[CH3]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[724] += dqdci; // dwdot[H2]/d[CO2]
    J[726] -= dqdci; // dwdot[OH]/d[CO2]
    J[733] += dqdci; // dwdot[CH2O]/d[CO2]
    J[734] -= dqdci; // dwdot[CH3]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[772] += dqdci; // dwdot[H2]/d[CH4]
    J[774] -= dqdci; // dwdot[OH]/d[CH4]
    J[781] += dqdci; // dwdot[CH2O]/d[CH4]
    J[782] -= dqdci; // dwdot[CH3]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1252] += dqdci; // dwdot[H2]/d[C2H6]
    J[1254] -= dqdci; // dwdot[OH]/d[C2H6]
    J[1261] += dqdci; // dwdot[CH2O]/d[C2H6]
    J[1262] -= dqdci; // dwdot[CH3]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac + k_f * sc[14];
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac + k_f * sc[6];
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 4] += dqdc[k];
      J[48 * k + 6] -= dqdc[k];
      J[48 * k + 13] += dqdc[k];
      J[48 * k + 14] -= dqdc[k];
    }
  }
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 51: CO + O (+M) => CO2 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[3] * sc[11];
  k_f = 13600 * exp(-(1200.31264861068) * invT);
  dlnkfdT = (1200.31264861068) * invT2;
  // pressure-fall-off
  k_0 = 1.17e+24 * exp(-2.79 * tc[0] - (2109.56477771991) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -2.79 * invT + (2109.56477771991) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1);
  Fcent2 = 1 * exp(-T / 10000000);
  Fcent3 = exp(-10000000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent *
                (-Fcent1 / 1 - Fcent2 / 10000000 + Fcent3 * 10000000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * sc[11];
    J[147] -= dqdci; // dwdot[O]/d[O]
    J[155] -= dqdci; // dwdot[CO]/d[O]
    J[159] += dqdci; // dwdot[CO2]/d[O]
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[195] -= dqdci; // dwdot[O]/d[H2]
    J[203] -= dqdci; // dwdot[CO]/d[H2]
    J[207] += dqdci; // dwdot[CO2]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[339] -= dqdci; // dwdot[O]/d[H2O]
    J[347] -= dqdci; // dwdot[CO]/d[H2O]
    J[351] += dqdci; // dwdot[CO2]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac + k_f * sc[3];
    J[531] -= dqdci; // dwdot[O]/d[CO]
    J[539] -= dqdci; // dwdot[CO]/d[CO]
    J[543] += dqdci; // dwdot[CO2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[723] -= dqdci; // dwdot[O]/d[CO2]
    J[731] -= dqdci; // dwdot[CO]/d[CO2]
    J[735] += dqdci; // dwdot[CO2]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[771] -= dqdci; // dwdot[O]/d[CH4]
    J[779] -= dqdci; // dwdot[CO]/d[CH4]
    J[783] += dqdci; // dwdot[CO2]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1251] -= dqdci; // dwdot[O]/d[C2H6]
    J[1259] -= dqdci; // dwdot[CO]/d[C2H6]
    J[1263] += dqdci; // dwdot[CO2]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac + k_f * sc[11];
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac + k_f * sc[3];
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 3] -= dqdc[k];
      J[48 * k + 11] -= dqdc[k];
      J[48 * k + 15] += dqdc[k];
    }
  }
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 75: C2H2 + H (+M) <=> C2H3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[22];
  k_f = 17100 * exp(1.27 * tc[0] - (1362.67550583257) * invT);
  dlnkfdT = 1.27 * invT + (1362.67550583257) * invT2;
  // pressure-fall-off
  k_0 = 6.34e+31 * exp(-4.66 * tc[0] - (1902.69743857425) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -4.66 * invT + (1902.69743857425) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.2122) * exp(-T / 1);
  Fcent2 = 0.2122 * exp(-T / -10210);
  Fcent3 = 0.;
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT = log10e / Fcent * (-Fcent1 / 1 - Fcent2 / -10210);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[17];
  Kc = refCinv * exp(g_RT[5] - g_RT[17] + g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[22]) + (h_RT[17]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[17] += q; // C2H3
  wdot[22] -= q; // C2H2
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[209] += dqdci; // dwdot[C2H3]/d[H2]
    J[214] -= dqdci; // dwdot[C2H2]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[22];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[257] += dqdci; // dwdot[C2H3]/d[H]
    J[262] -= dqdci; // dwdot[C2H2]/d[H]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[353] += dqdci; // dwdot[C2H3]/d[H2O]
    J[358] -= dqdci; // dwdot[C2H2]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[545] += dqdci; // dwdot[C2H3]/d[CO]
    J[550] -= dqdci; // dwdot[C2H2]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[737] += dqdci; // dwdot[C2H3]/d[CO2]
    J[742] -= dqdci; // dwdot[C2H2]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[785] += dqdci; // dwdot[C2H3]/d[CH4]
    J[790] -= dqdci; // dwdot[C2H2]/d[CH4]
    // d()/d[C2H3]
    dqdci = -k_r;
    J[821] -= dqdci; // dwdot[H]/d[C2H3]
    J[833] += dqdci; // dwdot[C2H3]/d[C2H3]
    J[838] -= dqdci; // dwdot[C2H2]/d[C2H3]
    // d()/d[C2H2]
    dqdci = +k_f * sc[5];
    J[1061] -= dqdci; // dwdot[H]/d[C2H2]
    J[1073] += dqdci; // dwdot[C2H3]/d[C2H2]
    J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1265] += dqdci; // dwdot[C2H3]/d[C2H6]
    J[1270] -= dqdci; // dwdot[C2H2]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[22];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac - k_r;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac + k_f * sc[5];
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 17] += dqdc[k];
      J[48 * k + 22] -= dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 83: C2H3 + H (+M) => C2H4 (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[17];
  k_f = 6080000 * exp(0.27 * tc[0] - (140.719508425632) * invT);
  dlnkfdT = 0.27 * invT + (140.719508425632) * invT2;
  // pressure-fall-off
  k_0 = 1.4e+30 * exp(-3.86 * tc[0] - (1670.57365497185) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -3.86 * invT + (1670.57365497185) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.782) * exp(-T / 207.5);
  Fcent2 = 0.782 * exp(-T / 2663);
  Fcent3 = exp(-6095 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 207.5 - Fcent2 / 2663 + Fcent3 * 6095 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[17] -= q; // C2H3
  wdot[18] += q; // C2H4
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[209] -= dqdci; // dwdot[C2H3]/d[H2]
    J[210] += dqdci; // dwdot[C2H4]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[17];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[257] -= dqdci; // dwdot[C2H3]/d[H]
    J[258] += dqdci; // dwdot[C2H4]/d[H]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[353] -= dqdci; // dwdot[C2H3]/d[H2O]
    J[354] += dqdci; // dwdot[C2H4]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[545] -= dqdci; // dwdot[C2H3]/d[CO]
    J[546] += dqdci; // dwdot[C2H4]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[737] -= dqdci; // dwdot[C2H3]/d[CO2]
    J[738] += dqdci; // dwdot[C2H4]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[785] -= dqdci; // dwdot[C2H3]/d[CH4]
    J[786] += dqdci; // dwdot[C2H4]/d[CH4]
    // d()/d[C2H3]
    dqdci = +k_f * sc[5];
    J[821] -= dqdci; // dwdot[H]/d[C2H3]
    J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
    J[834] += dqdci; // dwdot[C2H4]/d[C2H3]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1265] -= dqdci; // dwdot[C2H3]/d[C2H6]
    J[1266] += dqdci; // dwdot[C2H4]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[17];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac + k_f * sc[5];
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 17] -= dqdc[k];
      J[48 * k + 18] += dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 93: C2H4 + H (+M) <=> C2H5 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[18];
  k_f = 1370 * exp(1.46 * tc[0] - (681.939096831924) * invT);
  dlnkfdT = 1.46 * invT + (681.939096831924) * invT2;
  // pressure-fall-off
  k_0 = 2.03e+39 * exp(-6.64 * tc[0] - (2903.35887502691) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.64 * invT + (2903.35887502691) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. + 0.569) * exp(-T / 299);
  Fcent2 = -0.569 * exp(-T / -9147);
  Fcent3 = exp(-152.4 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 299 - Fcent2 / -9147 + Fcent3 * 152.4 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[19];
  Kc = refCinv * exp(g_RT[5] + g_RT[18] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[18]) + (h_RT[19]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[18] -= q; // C2H4
  wdot[19] += q; // C2H5
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[210] -= dqdci; // dwdot[C2H4]/d[H2]
    J[211] += dqdci; // dwdot[C2H5]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[18];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[258] -= dqdci; // dwdot[C2H4]/d[H]
    J[259] += dqdci; // dwdot[C2H5]/d[H]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[354] -= dqdci; // dwdot[C2H4]/d[H2O]
    J[355] += dqdci; // dwdot[C2H5]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[546] -= dqdci; // dwdot[C2H4]/d[CO]
    J[547] += dqdci; // dwdot[C2H5]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[738] -= dqdci; // dwdot[C2H4]/d[CO2]
    J[739] += dqdci; // dwdot[C2H5]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[786] -= dqdci; // dwdot[C2H4]/d[CH4]
    J[787] += dqdci; // dwdot[C2H5]/d[CH4]
    // d()/d[C2H4]
    dqdci = +k_f * sc[5];
    J[869] -= dqdci; // dwdot[H]/d[C2H4]
    J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
    J[883] += dqdci; // dwdot[C2H5]/d[C2H4]
    // d()/d[C2H5]
    dqdci = -k_r;
    J[917] -= dqdci; // dwdot[H]/d[C2H5]
    J[930] -= dqdci; // dwdot[C2H4]/d[C2H5]
    J[931] += dqdci; // dwdot[C2H5]/d[C2H5]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1266] -= dqdci; // dwdot[C2H4]/d[C2H6]
    J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[18];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac + k_f * sc[5];
    dqdc[19] = dcdc_fac - k_r;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 18] -= dqdc[k];
      J[48 * k + 19] += dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT

  // reaction 101: C2H4 + CH3 (+M) <=> N-C3H7 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[14] * sc[18];
  k_f = 2.55 * exp(1.6 * tc[0] - (2868.48092791999) * invT);
  dlnkfdT = 1.6 * invT + (2868.48092791999) * invT2;
  // pressure-fall-off
  k_0 = 3e+63 * exp(-14.6 * tc[0] - (9143.05430867243) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -14.6 * invT + (9143.05430867243) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.1894) * exp(-T / 277);
  Fcent2 = 0.1894 * exp(-T / 8748);
  Fcent3 = exp(-7891 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 277 - Fcent2 / 8748 + Fcent3 * 7891 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[14] + g_RT[18] - g_RT[25]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[18]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[18] -= q; // C2H4
  wdot[25] += q; // N-C3H7
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[206] -= dqdci; // dwdot[CH3]/d[H2]
    J[210] -= dqdci; // dwdot[C2H4]/d[H2]
    J[217] += dqdci; // dwdot[N-C3H7]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[350] -= dqdci; // dwdot[CH3]/d[H2O]
    J[354] -= dqdci; // dwdot[C2H4]/d[H2O]
    J[361] += dqdci; // dwdot[N-C3H7]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[542] -= dqdci; // dwdot[CH3]/d[CO]
    J[546] -= dqdci; // dwdot[C2H4]/d[CO]
    J[553] += dqdci; // dwdot[N-C3H7]/d[CO]
    // d()/d[CH3]
    dqdci = +k_f * sc[18];
    J[686] -= dqdci; // dwdot[CH3]/d[CH3]
    J[690] -= dqdci; // dwdot[C2H4]/d[CH3]
    J[697] += dqdci; // dwdot[N-C3H7]/d[CH3]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[734] -= dqdci; // dwdot[CH3]/d[CO2]
    J[738] -= dqdci; // dwdot[C2H4]/d[CO2]
    J[745] += dqdci; // dwdot[N-C3H7]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[782] -= dqdci; // dwdot[CH3]/d[CH4]
    J[786] -= dqdci; // dwdot[C2H4]/d[CH4]
    J[793] += dqdci; // dwdot[N-C3H7]/d[CH4]
    // d()/d[C2H4]
    dqdci = +k_f * sc[14];
    J[878] -= dqdci; // dwdot[CH3]/d[C2H4]
    J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
    J[889] += dqdci; // dwdot[N-C3H7]/d[C2H4]
    // d()/d[N-C3H7]
    dqdci = -k_r;
    J[1214] -= dqdci; // dwdot[CH3]/d[N-C3H7]
    J[1218] -= dqdci; // dwdot[C2H4]/d[N-C3H7]
    J[1225] += dqdci; // dwdot[N-C3H7]/d[N-C3H7]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1262] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[1266] -= dqdci; // dwdot[C2H4]/d[C2H6]
    J[1273] += dqdci; // dwdot[N-C3H7]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac + k_f * sc[18];
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac + k_f * sc[14];
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac - k_r;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 14] -= dqdc[k];
      J[48 * k + 18] -= dqdc[k];
      J[48 * k + 25] += dqdc[k];
    }
  }
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT

  // reaction 102: C2H5 + H (+M) <=> C2H6 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[19];
  k_f = 521000000000 * exp(-0.99 * tc[0] - (794.99678513827) * invT);
  dlnkfdT = -0.99 * invT + (794.99678513827) * invT2;
  // pressure-fall-off
  k_0 = 1.99e+41 * exp(-7.08 * tc[0] - (3363.99837873789) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -7.08 * invT + (3363.99837873789) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.8422) * exp(-T / 125);
  Fcent2 = 0.8422 * exp(-T / 2219);
  Fcent3 = exp(-6882 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 125 - Fcent2 / 2219 + Fcent3 * 6882 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[26];
  Kc = refCinv * exp(g_RT[5] + g_RT[19] - g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[19]) + (h_RT[26]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[19] -= q; // C2H5
  wdot[26] += q; // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[211] -= dqdci; // dwdot[C2H5]/d[H2]
    J[218] += dqdci; // dwdot[C2H6]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[19];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[259] -= dqdci; // dwdot[C2H5]/d[H]
    J[266] += dqdci; // dwdot[C2H6]/d[H]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[355] -= dqdci; // dwdot[C2H5]/d[H2O]
    J[362] += dqdci; // dwdot[C2H6]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[547] -= dqdci; // dwdot[C2H5]/d[CO]
    J[554] += dqdci; // dwdot[C2H6]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[739] -= dqdci; // dwdot[C2H5]/d[CO2]
    J[746] += dqdci; // dwdot[C2H6]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[787] -= dqdci; // dwdot[C2H5]/d[CH4]
    J[794] += dqdci; // dwdot[C2H6]/d[CH4]
    // d()/d[C2H5]
    dqdci = +k_f * sc[5];
    J[917] -= dqdci; // dwdot[H]/d[C2H5]
    J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
    J[938] += dqdci; // dwdot[C2H6]/d[C2H5]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1267] -= dqdci; // dwdot[C2H5]/d[C2H6]
    J[1274] += dqdci; // dwdot[C2H6]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[19];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac + k_f * sc[5];
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac - k_r;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 19] -= dqdc[k];
      J[48 * k + 26] += dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT
  J[2282] += dqdT; // dwdot[C2H6]/dT

  // reaction 108: C2H6 (+M) <=> 2 CH3 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[26];
  k_f = 1.88e+50 * exp(-9.72 * tc[0] - (54016.4141771433) * invT);
  dlnkfdT = -9.72 * invT + (54016.4141771433) * invT2;
  // pressure-fall-off
  k_0 = 3.72e+65 * exp(-13.14 * tc[0] - (51116.6633656102) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -13.14 * invT + (51116.6633656102) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.39) * exp(-T / 100);
  Fcent2 = 0.39 * exp(-T / 1900);
  Fcent3 = exp(-6000 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 100 - Fcent2 / 1900 + Fcent3 * 6000 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = (sc[14] * sc[14]);
  Kc = refC * exp(-2.000000 * g_RT[14] + g_RT[26]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[26]) + (2.000000 * h_RT[14]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[14] += 2 * q; // CH3
  wdot[26] -= q;     // C2H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[206] += 2 * dqdci; // dwdot[CH3]/d[H2]
    J[218] -= dqdci;     // dwdot[C2H6]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[350] += 2 * dqdci; // dwdot[CH3]/d[H2O]
    J[362] -= dqdci;     // dwdot[C2H6]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[542] += 2 * dqdci; // dwdot[CH3]/d[CO]
    J[554] -= dqdci;     // dwdot[C2H6]/d[CO]
    // d()/d[CH3]
    dqdci = -k_r * 2.000000 * sc[14];
    J[686] += 2 * dqdci; // dwdot[CH3]/d[CH3]
    J[698] -= dqdci;     // dwdot[C2H6]/d[CH3]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[734] += 2 * dqdci; // dwdot[CH3]/d[CO2]
    J[746] -= dqdci;     // dwdot[C2H6]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[782] += 2 * dqdci; // dwdot[CH3]/d[CH4]
    J[794] -= dqdci;     // dwdot[C2H6]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac + k_f;
    J[1262] += 2 * dqdci; // dwdot[CH3]/d[C2H6]
    J[1274] -= dqdci;     // dwdot[C2H6]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac - k_r * 2.000000 * sc[14];
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac + k_f;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 14] += 2 * dqdc[k];
      J[48 * k + 26] -= dqdc[k];
    }
  }
  J[2270] += 2 * dqdT; // dwdot[CH3]/dT
  J[2282] -= dqdT;     // dwdot[C2H6]/dT

  // reaction 113: HCCO (+M) => CH + CO (+M)
  // a third-body and pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[21];
  k_f = 2.255e+20 * exp(-1.44 * tc[0] - (37606.5438660847) * invT);
  dlnkfdT = -1.44 * invT + (37606.5438660847) * invT2;
  // pressure-fall-off
  k_0 = 1.213e+35 * exp(-5.18 * tc[0] - (38580.7461702494) * invT);
  Pr = 1e-6 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -5.18 * invT + (38580.7461702494) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 0.5757) * exp(-T / 237);
  Fcent2 = 0.5757 * exp(-T / 1652);
  Fcent3 = exp(-5069 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 237 - Fcent2 / 1652 + Fcent3 * 5069 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // rate of progress
  q_nocor = k_f * phi_f;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * dlnkfdT * k_f * phi_f + dlnCorrdT * q;
  // update wdot
  wdot[10] += q; // CH
  wdot[11] += q; // CO
  wdot[21] -= q; // HCCO
  // for convenience
  k_f *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[202] += dqdci; // dwdot[CH]/d[H2]
    J[203] += dqdci; // dwdot[CO]/d[H2]
    J[213] -= dqdci; // dwdot[HCCO]/d[H2]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[346] += dqdci; // dwdot[CH]/d[H2O]
    J[347] += dqdci; // dwdot[CO]/d[H2O]
    J[357] -= dqdci; // dwdot[HCCO]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[538] += dqdci; // dwdot[CH]/d[CO]
    J[539] += dqdci; // dwdot[CO]/d[CO]
    J[549] -= dqdci; // dwdot[HCCO]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[730] += dqdci; // dwdot[CH]/d[CO2]
    J[731] += dqdci; // dwdot[CO]/d[CO2]
    J[741] -= dqdci; // dwdot[HCCO]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[778] += dqdci; // dwdot[CH]/d[CH4]
    J[779] += dqdci; // dwdot[CO]/d[CH4]
    J[789] -= dqdci; // dwdot[HCCO]/d[CH4]
    // d()/d[HCCO]
    dqdci = +k_f;
    J[1018] += dqdci; // dwdot[CH]/d[HCCO]
    J[1019] += dqdci; // dwdot[CO]/d[HCCO]
    J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1258] += dqdci; // dwdot[CH]/d[C2H6]
    J[1259] += dqdci; // dwdot[CO]/d[C2H6]
    J[1269] -= dqdci; // dwdot[HCCO]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac;
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac + k_f;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 10] += dqdc[k];
      J[48 * k + 11] += dqdc[k];
      J[48 * k + 21] -= dqdc[k];
    }
  }
  J[2266] += dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT

  // reaction 149: C3H6 + H (+M) <=> N-C3H7 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[32];
  k_f = 306000000 * exp(-0.37 * tc[0] - (2028.9846930246) * invT);
  dlnkfdT = -0.37 * invT + (2028.9846930246) * invT2;
  // pressure-fall-off
  k_0 = 6.26e+38 * exp(-6.66 * tc[0] - (3522.75820463262) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.66 * invT + (3522.75820463262) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Troe form
  logPr = log10(Pr);
  Fcent1 = (1. - 1) * exp(-T / 1000);
  Fcent2 = 1 * exp(-T / 1310);
  Fcent3 = exp(-48100 * invT);
  Fcent = Fcent1 + Fcent2 + Fcent3;
  logFcent = log10(Fcent);
  troe_c = -.4 - .67 * logFcent;
  troe_n = .75 - 1.27 * logFcent;
  troePr_den = 1.0 / (troe_n - .14 * (troe_c + logPr));
  troePr = (troe_c + logPr) * troePr_den;
  troe = 1.0 / (1.0 + troePr * troePr);
  F = exp(M_LN10 * logFcent * troe);
  dlogFcentdT =
    log10e / Fcent * (-Fcent1 / 1000 - Fcent2 / 1310 + Fcent3 * 48100 * invT2);
  dlogFdcn_fac = 2.0 * logFcent * troe * troe * troePr * troePr_den;
  dlogFdc = -troe_n * dlogFdcn_fac * troePr_den;
  dlogFdn = dlogFdcn_fac * troePr;
  dlogFdlogPr = dlogFdc;
  dlogFdT = dlogFcentdT * (troe - 0.67 * dlogFdc - 1.27 * dlogFdn) +
            dlogFdlogPr * dlogPrdT;
  // reverse
  phi_r = sc[25];
  Kc = refCinv * exp(g_RT[5] - g_RT[25] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[32]) + (h_RT[25]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[25] += q; // N-C3H7
  wdot[32] -= q; // C3H6
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[217] += dqdci; // dwdot[N-C3H7]/d[H2]
    J[224] -= dqdci; // dwdot[C3H6]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[32];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[265] += dqdci; // dwdot[N-C3H7]/d[H]
    J[272] -= dqdci; // dwdot[C3H6]/d[H]
    // d()/d[H2O]
    dqdci = (12 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[361] += dqdci; // dwdot[N-C3H7]/d[H2O]
    J[368] -= dqdci; // dwdot[C3H6]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[553] += dqdci; // dwdot[N-C3H7]/d[CO]
    J[560] -= dqdci; // dwdot[C3H6]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[745] += dqdci; // dwdot[N-C3H7]/d[CO2]
    J[752] -= dqdci; // dwdot[C3H6]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * dcdc_fac;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[793] += dqdci; // dwdot[N-C3H7]/d[CH4]
    J[800] -= dqdci; // dwdot[C3H6]/d[CH4]
    // d()/d[N-C3H7]
    dqdci = -k_r;
    J[1205] -= dqdci; // dwdot[H]/d[N-C3H7]
    J[1225] += dqdci; // dwdot[N-C3H7]/d[N-C3H7]
    J[1232] -= dqdci; // dwdot[C3H6]/d[N-C3H7]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1273] += dqdci; // dwdot[N-C3H7]/d[C2H6]
    J[1280] -= dqdci; // dwdot[C3H6]/d[C2H6]
    // d()/d[C3H6]
    dqdci = +k_f * sc[5];
    J[1541] -= dqdci; // dwdot[H]/d[C3H6]
    J[1561] += dqdci; // dwdot[N-C3H7]/d[C3H6]
    J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[32];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 12 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.75 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac;
    dqdc[15] = 3.6 * dcdc_fac;
    dqdc[16] = 2 * dcdc_fac;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac - k_r;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac + k_f * sc[5];
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 25] += dqdc[k];
      J[48 * k + 32] -= dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 32: CH3 + H (+M) <=> CH4 (+M)
  // a third-body and pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (6 - 1) * sc[7] + (1.5 - 1) * sc[11] + sc[15] +
          (3 - 1) * sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[14];
  k_f = 69200000 * exp(0.18 * tc[0]);
  dlnkfdT = 0.18 * invT;
  // pressure-fall-off
  k_0 = 3.47e+38 * exp(-6.3 * tc[0] - (2553.36665179307) * invT);
  Pr = 1e-12 * alpha / k_f * k_0;
  fPr = Pr / (1.0 + Pr);
  dlnk0dT = -6.3 * invT + (2553.36665179307) * invT2;
  dlogPrdT = log10e * (dlnk0dT - dlnkfdT);
  dlogfPrdT = dlogPrdT / (1.0 + Pr);
  // Lindemann form
  F = 1.0;
  dlogFdlogPr = 0.0;
  dlogFdT = 0.0;
  // reverse
  phi_r = sc[16];
  Kc = refCinv * exp(g_RT[5] + g_RT[14] - g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[14]) + (h_RT[16]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  Corr = fPr * F;
  q = Corr * q_nocor;
  dlnCorrdT = ln10 * (dlogfPrdT + dlogFdT);
  dqdT = Corr * (dlnkfdT * k_f * phi_f - dkrdT * phi_r) + dlnCorrdT * q;
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // for convenience
  k_f *= Corr;
  k_r *= Corr;
  dcdc_fac = q / alpha * (1.0 / (Pr + 1.0) + dlogFdlogPr);
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * dcdc_fac;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[206] -= dqdci; // dwdot[CH3]/d[H2]
    J[208] += dqdci; // dwdot[CH4]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[14];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[254] -= dqdci; // dwdot[CH3]/d[H]
    J[256] += dqdci; // dwdot[CH4]/d[H]
    // d()/d[H2O]
    dqdci = (6 - 1) * dcdc_fac;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[350] -= dqdci; // dwdot[CH3]/d[H2O]
    J[352] += dqdci; // dwdot[CH4]/d[H2O]
    // d()/d[CO]
    dqdci = (1.5 - 1) * dcdc_fac;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[542] -= dqdci; // dwdot[CH3]/d[CO]
    J[544] += dqdci; // dwdot[CH4]/d[CO]
    // d()/d[CH3]
    dqdci = +k_f * sc[5];
    J[677] -= dqdci; // dwdot[H]/d[CH3]
    J[686] -= dqdci; // dwdot[CH3]/d[CH3]
    J[688] += dqdci; // dwdot[CH4]/d[CH3]
    // d()/d[CO2]
    dqdci = (2 - 1) * dcdc_fac;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[734] -= dqdci; // dwdot[CH3]/d[CO2]
    J[736] += dqdci; // dwdot[CH4]/d[CO2]
    // d()/d[CH4]
    dqdci = (3 - 1) * dcdc_fac - k_r;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[782] -= dqdci; // dwdot[CH3]/d[CH4]
    J[784] += dqdci; // dwdot[CH4]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * dcdc_fac;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1262] -= dqdci; // dwdot[CH3]/d[C2H6]
    J[1264] += dqdci; // dwdot[CH4]/d[C2H6]
  } else {
    dqdc[0] = dcdc_fac;
    dqdc[1] = dcdc_fac;
    dqdc[2] = dcdc_fac;
    dqdc[3] = dcdc_fac;
    dqdc[4] = 2 * dcdc_fac;
    dqdc[5] = dcdc_fac + k_f * sc[14];
    dqdc[6] = dcdc_fac;
    dqdc[7] = 6 * dcdc_fac;
    dqdc[8] = dcdc_fac;
    dqdc[9] = dcdc_fac;
    dqdc[10] = dcdc_fac;
    dqdc[11] = 1.5 * dcdc_fac;
    dqdc[12] = dcdc_fac;
    dqdc[13] = dcdc_fac;
    dqdc[14] = dcdc_fac + k_f * sc[5];
    dqdc[15] = 2 * dcdc_fac;
    dqdc[16] = 3 * dcdc_fac - k_r;
    dqdc[17] = dcdc_fac;
    dqdc[18] = dcdc_fac;
    dqdc[19] = dcdc_fac;
    dqdc[20] = dcdc_fac;
    dqdc[21] = dcdc_fac;
    dqdc[22] = dcdc_fac;
    dqdc[23] = dcdc_fac;
    dqdc[24] = dcdc_fac;
    dqdc[25] = dcdc_fac;
    dqdc[26] = 3 * dcdc_fac;
    dqdc[27] = dcdc_fac;
    dqdc[28] = dcdc_fac;
    dqdc[29] = dcdc_fac;
    dqdc[30] = dcdc_fac;
    dqdc[31] = dcdc_fac;
    dqdc[32] = dcdc_fac;
    dqdc[33] = dcdc_fac;
    dqdc[34] = dcdc_fac;
    dqdc[35] = dcdc_fac;
    dqdc[36] = dcdc_fac;
    dqdc[37] = dcdc_fac;
    dqdc[38] = dcdc_fac;
    dqdc[39] = dcdc_fac;
    dqdc[40] = dcdc_fac;
    dqdc[41] = dcdc_fac;
    dqdc[42] = dcdc_fac;
    dqdc[43] = dcdc_fac;
    dqdc[44] = dcdc_fac;
    dqdc[45] = dcdc_fac;
    dqdc[46] = dcdc_fac;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 14] -= dqdc[k];
      J[48 * k + 16] += dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 2: H + O + M => OH + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (12 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[3] * sc[5];
  k_f = 9430000 * exp(-1 * tc[0]);
  dlnkfdT = -1 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // O
  wdot[5] -= q; // H
  wdot[6] += q; // OH
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[O]
    dqdci = +k_f * sc[5];
    J[147] -= dqdci; // dwdot[O]/d[O]
    J[149] -= dqdci; // dwdot[H]/d[O]
    J[150] += dqdci; // dwdot[OH]/d[O]
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[195] -= dqdci; // dwdot[O]/d[H2]
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[198] += dqdci; // dwdot[OH]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[3];
    J[243] -= dqdci; // dwdot[O]/d[H]
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[246] += dqdci; // dwdot[OH]/d[H]
    // d()/d[H2O]
    dqdci = (12 - 1) * q_nocor;
    J[339] -= dqdci; // dwdot[O]/d[H2O]
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[342] += dqdci; // dwdot[OH]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[531] -= dqdci; // dwdot[O]/d[CO]
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[534] += dqdci; // dwdot[OH]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[723] -= dqdci; // dwdot[O]/d[CO2]
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[726] += dqdci; // dwdot[OH]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * q_nocor;
    J[771] -= dqdci; // dwdot[O]/d[CH4]
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[774] += dqdci; // dwdot[OH]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * q_nocor;
    J[1251] -= dqdci; // dwdot[O]/d[C2H6]
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1254] += dqdci; // dwdot[OH]/d[C2H6]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor + k_f * sc[5];
    dqdc[4] = 2 * q_nocor;
    dqdc[5] = q_nocor + k_f * sc[3];
    dqdc[6] = q_nocor;
    dqdc[7] = 12 * q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = 1.75 * q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = 3.6 * q_nocor;
    dqdc[16] = 2 * q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = 3 * q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 3] -= dqdc[k];
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 6] += dqdc[k];
    }
  }
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT

  // reaction 3: H + OH + M => H2O + M
  // a third-body and non-pressure-fall-off reaction
  // Irreversible reaction in _ajac_reaction may not work
  // 3-body correction factor
  alpha = mixture + sc[4] + (6.3 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[5] * sc[6];
  k_f = 44000000000 * exp(-2 * tc[0]);
  dlnkfdT = -2 * invT;
  // rate of progress
  q_nocor = k_f * phi_f;
  q = alpha * q_nocor;
  dqdT = alpha * dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q; // H
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  // for convenience
  k_f *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[197] -= dqdci; // dwdot[H]/d[H2]
    J[198] -= dqdci; // dwdot[OH]/d[H2]
    J[199] += dqdci; // dwdot[H2O]/d[H2]
    // d()/d[H]
    dqdci = +k_f * sc[6];
    J[245] -= dqdci; // dwdot[H]/d[H]
    J[246] -= dqdci; // dwdot[OH]/d[H]
    J[247] += dqdci; // dwdot[H2O]/d[H]
    // d()/d[OH]
    dqdci = +k_f * sc[5];
    J[293] -= dqdci; // dwdot[H]/d[OH]
    J[294] -= dqdci; // dwdot[OH]/d[OH]
    J[295] += dqdci; // dwdot[H2O]/d[OH]
    // d()/d[H2O]
    dqdci = (6.3 - 1) * q_nocor;
    J[341] -= dqdci; // dwdot[H]/d[H2O]
    J[342] -= dqdci; // dwdot[OH]/d[H2O]
    J[343] += dqdci; // dwdot[H2O]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor;
    J[533] -= dqdci; // dwdot[H]/d[CO]
    J[534] -= dqdci; // dwdot[OH]/d[CO]
    J[535] += dqdci; // dwdot[H2O]/d[CO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[725] -= dqdci; // dwdot[H]/d[CO2]
    J[726] -= dqdci; // dwdot[OH]/d[CO2]
    J[727] += dqdci; // dwdot[H2O]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * q_nocor;
    J[773] -= dqdci; // dwdot[H]/d[CH4]
    J[774] -= dqdci; // dwdot[OH]/d[CH4]
    J[775] += dqdci; // dwdot[H2O]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * q_nocor;
    J[1253] -= dqdci; // dwdot[H]/d[C2H6]
    J[1254] -= dqdci; // dwdot[OH]/d[C2H6]
    J[1255] += dqdci; // dwdot[H2O]/d[C2H6]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = 2 * q_nocor;
    dqdc[5] = q_nocor + k_f * sc[6];
    dqdc[6] = q_nocor + k_f * sc[5];
    dqdc[7] = 6.3 * q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = 1.75 * q_nocor;
    dqdc[12] = q_nocor;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = 3.6 * q_nocor;
    dqdc[16] = 2 * q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = 3 * q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] -= dqdc[k];
      J[48 * k + 6] -= dqdc[k];
      J[48 * k + 7] += dqdc[k];
    }
  }
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT

  // reaction 60: HCO + M <=> CO + H + M
  // a third-body and non-pressure-fall-off reaction
  // 3-body correction factor
  alpha = mixture + sc[4] + (0 - 1) * sc[7] + (1.75 - 1) * sc[11] +
          (3.6 - 1) * sc[15] + sc[16] + (3 - 1) * sc[26];
  // forward
  phi_f = sc[12];
  k_f = 187000000000 * exp(-1 * tc[0] - (8554.92486267982) * invT);
  dlnkfdT = -1 * invT + (8554.92486267982) * invT2;
  // reverse
  phi_r = sc[5] * sc[11];
  Kc = refC * exp(-g_RT[5] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[12]) + (h_RT[5] + h_RT[11]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q_nocor = k_f * phi_f - k_r * phi_r;
  q = alpha * q_nocor;
  dqdT = alpha * (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // for convenience
  k_f *= alpha;
  k_r *= alpha;
  if (consP == 1) {
    // d()/d[H2]
    dqdci = (2 - 1) * q_nocor;
    J[197] += dqdci; // dwdot[H]/d[H2]
    J[203] += dqdci; // dwdot[CO]/d[H2]
    J[204] -= dqdci; // dwdot[HCO]/d[H2]
    // d()/d[H]
    dqdci = -k_r * sc[11];
    J[245] += dqdci; // dwdot[H]/d[H]
    J[251] += dqdci; // dwdot[CO]/d[H]
    J[252] -= dqdci; // dwdot[HCO]/d[H]
    // d()/d[H2O]
    dqdci = (0 - 1) * q_nocor;
    J[341] += dqdci; // dwdot[H]/d[H2O]
    J[347] += dqdci; // dwdot[CO]/d[H2O]
    J[348] -= dqdci; // dwdot[HCO]/d[H2O]
    // d()/d[CO]
    dqdci = (1.75 - 1) * q_nocor - k_r * sc[5];
    J[533] += dqdci; // dwdot[H]/d[CO]
    J[539] += dqdci; // dwdot[CO]/d[CO]
    J[540] -= dqdci; // dwdot[HCO]/d[CO]
    // d()/d[HCO]
    dqdci = +k_f;
    J[581] += dqdci; // dwdot[H]/d[HCO]
    J[587] += dqdci; // dwdot[CO]/d[HCO]
    J[588] -= dqdci; // dwdot[HCO]/d[HCO]
    // d()/d[CO2]
    dqdci = (3.6 - 1) * q_nocor;
    J[725] += dqdci; // dwdot[H]/d[CO2]
    J[731] += dqdci; // dwdot[CO]/d[CO2]
    J[732] -= dqdci; // dwdot[HCO]/d[CO2]
    // d()/d[CH4]
    dqdci = (2 - 1) * q_nocor;
    J[773] += dqdci; // dwdot[H]/d[CH4]
    J[779] += dqdci; // dwdot[CO]/d[CH4]
    J[780] -= dqdci; // dwdot[HCO]/d[CH4]
    // d()/d[C2H6]
    dqdci = (3 - 1) * q_nocor;
    J[1253] += dqdci; // dwdot[H]/d[C2H6]
    J[1259] += dqdci; // dwdot[CO]/d[C2H6]
    J[1260] -= dqdci; // dwdot[HCO]/d[C2H6]
  } else {
    dqdc[0] = q_nocor;
    dqdc[1] = q_nocor;
    dqdc[2] = q_nocor;
    dqdc[3] = q_nocor;
    dqdc[4] = 2 * q_nocor;
    dqdc[5] = q_nocor - k_r * sc[11];
    dqdc[6] = q_nocor;
    dqdc[8] = q_nocor;
    dqdc[9] = q_nocor;
    dqdc[10] = q_nocor;
    dqdc[11] = 1.75 * q_nocor - k_r * sc[5];
    dqdc[12] = q_nocor + k_f;
    dqdc[13] = q_nocor;
    dqdc[14] = q_nocor;
    dqdc[15] = 3.6 * q_nocor;
    dqdc[16] = 2 * q_nocor;
    dqdc[17] = q_nocor;
    dqdc[18] = q_nocor;
    dqdc[19] = q_nocor;
    dqdc[20] = q_nocor;
    dqdc[21] = q_nocor;
    dqdc[22] = q_nocor;
    dqdc[23] = q_nocor;
    dqdc[24] = q_nocor;
    dqdc[25] = q_nocor;
    dqdc[26] = 3 * q_nocor;
    dqdc[27] = q_nocor;
    dqdc[28] = q_nocor;
    dqdc[29] = q_nocor;
    dqdc[30] = q_nocor;
    dqdc[31] = q_nocor;
    dqdc[32] = q_nocor;
    dqdc[33] = q_nocor;
    dqdc[34] = q_nocor;
    dqdc[35] = q_nocor;
    dqdc[36] = q_nocor;
    dqdc[37] = q_nocor;
    dqdc[38] = q_nocor;
    dqdc[39] = q_nocor;
    dqdc[40] = q_nocor;
    dqdc[41] = q_nocor;
    dqdc[42] = q_nocor;
    dqdc[43] = q_nocor;
    dqdc[44] = q_nocor;
    dqdc[45] = q_nocor;
    dqdc[46] = q_nocor;
    for (int k = 0; k < 47; k++) {
      J[48 * k + 5] += dqdc[k];
      J[48 * k + 11] += dqdc[k];
      J[48 * k + 12] -= dqdc[k];
    }
  }
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 61: HCO + H2O <=> CO + H + H2O
  // a third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[12];
  k_f = 2240000000000 * exp(-1 * tc[0] - (8554.92486267982) * invT);
  dlnkfdT = -1 * invT + (8554.92486267982) * invT2;
  // reverse
  phi_r = sc[5] * sc[7] * sc[11];
  Kc = refC * exp(-g_RT[5] - g_RT[11] + g_RT[12]);
  k_r = k_f / Kc;
  dlnKcdT =
    invT * (-(h_RT[7] + h_RT[12]) + (h_RT[5] + h_RT[7] + h_RT[11]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[H]
  dqdci = -k_r * sc[7] * sc[11];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[252] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[H2O]
  dqdci = +k_f * sc[12] - k_r * sc[5] * sc[11];
  J[341] += dqdci; // dwdot[H]/d[H2O]
  J[347] += dqdci; // dwdot[CO]/d[H2O]
  J[348] -= dqdci; // dwdot[HCO]/d[H2O]
  // d()/d[CO]
  dqdci = -k_r * sc[5] * sc[7];
  J[533] += dqdci; // dwdot[H]/d[CO]
  J[539] += dqdci; // dwdot[CO]/d[CO]
  J[540] -= dqdci; // dwdot[HCO]/d[CO]
  // d()/d[HCO]
  dqdci = +k_f * sc[7];
  J[581] += dqdci; // dwdot[H]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 0: N2 + S-CH2 <=> N2 + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[0] * sc[1];
  k_f = 15000000 * exp(-(301.879677816251) * invT);
  dlnkfdT = (301.879677816251) * invT2;
  // reverse
  phi_r = sc[0] * sc[2];
  Kc = exp(g_RT[0] - g_RT[0] + g_RT[1] - g_RT[2]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[0] + h_RT[1]) + (h_RT[0] + h_RT[2]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[N2]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[1] -= dqdci; // dwdot[S-CH2]/d[N2]
  J[2] += dqdci; // dwdot[T-CH2]/d[N2]
  // d()/d[S-CH2]
  dqdci = +k_f * sc[0];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[0];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 1: H2 + O <=> H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[4];
  k_f = 0.0459 * exp(2.7 * tc[0] - (3149.91491260459) * invT);
  dlnkfdT = 2.7 * invT + (3149.91491260459) * invT2;
  // reverse
  phi_r = sc[5] * sc[6];
  Kc = exp(g_RT[3] + g_RT[4] - g_RT[5] - g_RT[6]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[4]) + (h_RT[5] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q; // O
  wdot[4] -= q; // H2
  wdot[5] += q; // H
  wdot[6] += q; // OH
  // d()/d[O]
  dqdci = +k_f * sc[4];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[148] -= dqdci; // dwdot[H2]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  // d()/d[H2]
  dqdci = +k_f * sc[3];
  J[195] -= dqdci; // dwdot[O]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[198] += dqdci; // dwdot[OH]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[6];
  J[243] -= dqdci; // dwdot[O]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] += dqdci; // dwdot[OH]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[5];
  J[291] -= dqdci; // dwdot[O]/d[OH]
  J[292] -= dqdci; // dwdot[H2]/d[OH]
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] += dqdci; // dwdot[OH]/d[OH]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT

  // reaction 4: H2 + OH <=> H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[6];
  k_f = 173 * exp(1.51 * tc[0] - (1725.89729521042) * invT);
  dlnkfdT = 1.51 * invT + (1725.89729521042) * invT2;
  // reverse
  phi_r = sc[5] * sc[7];
  Kc = exp(g_RT[4] - g_RT[5] + g_RT[6] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[6]) + (h_RT[5] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q; // H2
  wdot[5] += q; // H
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  // d()/d[H2]
  dqdci = +k_f * sc[6];
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[198] -= dqdci; // dwdot[OH]/d[H2]
  J[199] += dqdci; // dwdot[H2O]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[7];
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] -= dqdci; // dwdot[OH]/d[H]
  J[247] += dqdci; // dwdot[H2O]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[4];
  J[292] -= dqdci; // dwdot[H2]/d[OH]
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[5];
  J[340] -= dqdci; // dwdot[H2]/d[H2O]
  J[341] += dqdci; // dwdot[H]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT

  // reaction 5: 2 OH <=> H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[6] * sc[6]);
  k_f = 0.0397 * exp(2.4 * tc[0] - (-1061.9985158476) * invT);
  dlnkfdT = 2.4 * invT + (-1061.9985158476) * invT2;
  // reverse
  phi_r = sc[3] * sc[7];
  Kc = exp(-g_RT[3] + 2.000000 * g_RT[6] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[6]) + (h_RT[3] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q;     // O
  wdot[6] -= 2 * q; // OH
  wdot[7] += q;     // H2O
  // d()/d[O]
  dqdci = -k_r * sc[7];
  J[147] += dqdci;      // dwdot[O]/d[O]
  J[150] += -2 * dqdci; // dwdot[OH]/d[O]
  J[151] += dqdci;      // dwdot[H2O]/d[O]
  // d()/d[OH]
  dqdci = +k_f * 2.000000 * sc[6];
  J[291] += dqdci;      // dwdot[O]/d[OH]
  J[294] += -2 * dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci;      // dwdot[H2O]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[3];
  J[339] += dqdci;      // dwdot[O]/d[H2O]
  J[342] += -2 * dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci;      // dwdot[H2O]/d[H2O]
  // d()/dT
  J[2259] += dqdT;      // dwdot[O]/dT
  J[2262] += -2 * dqdT; // dwdot[OH]/dT
  J[2263] += dqdT;      // dwdot[H2O]/dT

  // reaction 7: H + O2 <=> O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[8];
  k_f = 26400000000 * exp(-0.67 * tc[0] - (8575.37055581147) * invT);
  dlnkfdT = -0.67 * invT + (8575.37055581147) * invT2;
  // reverse
  phi_r = sc[3] * sc[6];
  Kc = exp(-g_RT[3] + g_RT[5] - g_RT[6] + g_RT[8]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[8]) + (h_RT[3] + h_RT[6]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] += q; // O
  wdot[5] -= q; // H
  wdot[6] += q; // OH
  wdot[8] -= q; // O2
  // d()/d[O]
  dqdci = -k_r * sc[6];
  J[147] += dqdci; // dwdot[O]/d[O]
  J[149] -= dqdci; // dwdot[H]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[152] -= dqdci; // dwdot[O2]/d[O]
  // d()/d[H]
  dqdci = +k_f * sc[8];
  J[243] += dqdci; // dwdot[O]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[246] += dqdci; // dwdot[OH]/d[H]
  J[248] -= dqdci; // dwdot[O2]/d[H]
  // d()/d[OH]
  dqdci = -k_r * sc[3];
  J[291] += dqdci; // dwdot[O]/d[OH]
  J[293] -= dqdci; // dwdot[H]/d[OH]
  J[294] += dqdci; // dwdot[OH]/d[OH]
  J[296] -= dqdci; // dwdot[O2]/d[OH]
  // d()/d[O2]
  dqdci = +k_f * sc[5];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[389] -= dqdci; // dwdot[H]/d[O2]
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT

  // reaction 8: H + HO2 => H2 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 3.649 * exp(2.07 * tc[0] - (-549.643435391863) * invT);
  dlnkfdT = 2.07 * invT + (-549.643435391863) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q; // H2
  wdot[5] -= q; // H
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[9];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[248] += dqdci; // dwdot[O2]/d[H]
  J[249] -= dqdci; // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[5];
  J[436] += dqdci; // dwdot[H2]/d[HO2]
  J[437] -= dqdci; // dwdot[H]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 9: H + HO2 => H2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 3970000 * exp(-(337.965344921108) * invT);
  dlnkfdT = (337.965344921108) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q; // O
  wdot[5] -= q; // H
  wdot[7] += q; // H2O
  wdot[9] -= q; // HO2
  // d()/d[H]
  dqdci = +k_f * sc[9];
  J[243] += dqdci; // dwdot[O]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[247] += dqdci; // dwdot[H2O]/d[H]
  J[249] -= dqdci; // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[5];
  J[435] += dqdci; // dwdot[O]/d[HO2]
  J[437] -= dqdci; // dwdot[H]/d[HO2]
  J[439] += dqdci; // dwdot[H2O]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 10: H + HO2 => 2 OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[9];
  k_f = 74900000 * exp(-(319.925027452009) * invT);
  dlnkfdT = (319.925027452009) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;     // H
  wdot[6] += 2 * q; // OH
  wdot[9] -= q;     // HO2
  // d()/d[H]
  dqdci = +k_f * sc[9];
  J[245] -= dqdci;     // dwdot[H]/d[H]
  J[246] += 2 * dqdci; // dwdot[OH]/d[H]
  J[249] -= dqdci;     // dwdot[HO2]/d[H]
  // d()/d[HO2]
  dqdci = +k_f * sc[5];
  J[437] -= dqdci;     // dwdot[H]/d[HO2]
  J[438] += 2 * dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci;     // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2261] -= dqdT;     // dwdot[H]/dT
  J[2262] += 2 * dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT;     // dwdot[HO2]/dT

  // reaction 11: HO2 + O => O2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[9];
  k_f = 40000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q; // O
  wdot[6] += q; // OH
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[O]
  dqdci = +k_f * sc[9];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[152] += dqdci; // dwdot[O2]/d[O]
  J[153] -= dqdci; // dwdot[HO2]/d[O]
  // d()/d[HO2]
  dqdci = +k_f * sc[3];
  J[435] -= dqdci; // dwdot[O]/d[HO2]
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 12: HO2 + OH => H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 23800000 * exp(-(-251.366788902774) * invT);
  dlnkfdT = (-251.366788902774) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[296] += dqdci; // dwdot[O2]/d[OH]
  J[297] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[6];
  J[438] -= dqdci; // dwdot[OH]/d[HO2]
  J[439] += dqdci; // dwdot[H2O]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 13: HO2 + OH => H2O + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[9];
  k_f = 10000000000 * exp(-(8720.90081556219) * invT);
  dlnkfdT = (8720.90081556219) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q; // OH
  wdot[7] += q; // H2O
  wdot[8] += q; // O2
  wdot[9] -= q; // HO2
  // d()/d[OH]
  dqdci = +k_f * sc[9];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[296] += dqdci; // dwdot[O2]/d[OH]
  J[297] -= dqdci; // dwdot[HO2]/d[OH]
  // d()/d[HO2]
  dqdci = +k_f * sc[6];
  J[438] -= dqdci; // dwdot[OH]/d[HO2]
  J[439] += dqdci; // dwdot[H2O]/d[HO2]
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT

  // reaction 14: CH + O => CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[10];
  k_f = 57000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  wdot[11] += q; // CO
  // d()/d[O]
  dqdci = +k_f * sc[10];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[154] -= dqdci; // dwdot[CH]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  // d()/d[CH]
  dqdci = +k_f * sc[3];
  J[483] -= dqdci; // dwdot[O]/d[CH]
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[491] += dqdci; // dwdot[CO]/d[CH]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 15: CH + OH => H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[10];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[10] -= q; // CH
  wdot[12] += q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[10];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[298] -= dqdci; // dwdot[CH]/d[OH]
  J[300] += dqdci; // dwdot[HCO]/d[OH]
  // d()/d[CH]
  dqdci = +k_f * sc[6];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[486] -= dqdci; // dwdot[OH]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[492] += dqdci; // dwdot[HCO]/d[CH]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT

  // reaction 16: CH + H2 <=> H + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[10];
  k_f = 108000000 * exp(-(1564.73209365314) * invT);
  dlnkfdT = (1564.73209365314) * invT2;
  // reverse
  phi_r = sc[2] * sc[5];
  Kc = exp(-g_RT[2] + g_RT[4] - g_RT[5] + g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[10]) + (h_RT[2] + h_RT[5]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  // d()/d[T-CH2]
  dqdci = -k_r * sc[5];
  J[98] += dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[100] -= dqdci; // dwdot[H2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[106] -= dqdci; // dwdot[CH]/d[T-CH2]
  // d()/d[H2]
  dqdci = +k_f * sc[10];
  J[194] += dqdci; // dwdot[T-CH2]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[202] -= dqdci; // dwdot[CH]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[2];
  J[242] += dqdci; // dwdot[T-CH2]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[250] -= dqdci; // dwdot[CH]/d[H]
  // d()/d[CH]
  dqdci = +k_f * sc[4];
  J[482] += dqdci; // dwdot[T-CH2]/d[CH]
  J[484] -= dqdci; // dwdot[H2]/d[CH]
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT

  // reaction 17: CH + H2O => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[7] * sc[10];
  k_f = 5710000 * exp(-(-380.059419015673) * invT);
  dlnkfdT = (-380.059419015673) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[7] -= q;  // H2O
  wdot[10] -= q; // CH
  wdot[13] += q; // CH2O
  // d()/d[H2O]
  dqdci = +k_f * sc[10];
  J[341] += dqdci; // dwdot[H]/d[H2O]
  J[343] -= dqdci; // dwdot[H2O]/d[H2O]
  J[346] -= dqdci; // dwdot[CH]/d[H2O]
  J[349] += dqdci; // dwdot[CH2O]/d[H2O]
  // d()/d[CH]
  dqdci = +k_f * sc[7];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[487] -= dqdci; // dwdot[H2O]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[493] += dqdci; // dwdot[CH2O]/d[CH]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2263] -= dqdT; // dwdot[H2O]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 18: CH + O2 => HCO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[10];
  k_f = 67100000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[10] -= q; // CH
  wdot[12] += q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[10];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[394] -= dqdci; // dwdot[CH]/d[O2]
  J[396] += dqdci; // dwdot[HCO]/d[O2]
  // d()/d[CH]
  dqdci = +k_f * sc[8];
  J[483] += dqdci; // dwdot[O]/d[CH]
  J[488] -= dqdci; // dwdot[O2]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[492] += dqdci; // dwdot[HCO]/d[CH]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT

  // reaction 19: O + T-CH2 => H + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[3];
  k_f = 80000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[12] += q; // HCO
  // d()/d[T-CH2]
  dqdci = +k_f * sc[3];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[99] -= dqdci;  // dwdot[O]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[108] += dqdci; // dwdot[HCO]/d[T-CH2]
  // d()/d[O]
  dqdci = +k_f * sc[2];
  J[146] -= dqdci; // dwdot[T-CH2]/d[O]
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT

  // reaction 20: OH + T-CH2 => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[13] += q; // CH2O
  // d()/d[T-CH2]
  dqdci = +k_f * sc[6];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[102] -= dqdci; // dwdot[OH]/d[T-CH2]
  J[109] += dqdci; // dwdot[CH2O]/d[T-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[290] -= dqdci; // dwdot[T-CH2]/d[OH]
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[301] += dqdci; // dwdot[CH2O]/d[OH]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 21: OH + T-CH2 <=> CH + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[6];
  k_f = 11.3 * exp(2 * tc[0] - (1509.40845341457) * invT);
  dlnkfdT = 2 * invT + (1509.40845341457) * invT2;
  // reverse
  phi_r = sc[7] * sc[10];
  Kc = exp(g_RT[2] + g_RT[6] - g_RT[7] - g_RT[10]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[6]) + (h_RT[7] + h_RT[10]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[10] += q; // CH
  // d()/d[T-CH2]
  dqdci = +k_f * sc[6];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[102] -= dqdci; // dwdot[OH]/d[T-CH2]
  J[103] += dqdci; // dwdot[H2O]/d[T-CH2]
  J[106] += dqdci; // dwdot[CH]/d[T-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[2];
  J[290] -= dqdci; // dwdot[T-CH2]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[298] += dqdci; // dwdot[CH]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[10];
  J[338] -= dqdci; // dwdot[T-CH2]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[346] += dqdci; // dwdot[CH]/d[H2O]
  // d()/d[CH]
  dqdci = -k_r * sc[7];
  J[482] -= dqdci; // dwdot[T-CH2]/d[CH]
  J[486] -= dqdci; // dwdot[OH]/d[CH]
  J[487] += dqdci; // dwdot[H2O]/d[CH]
  J[490] += dqdci; // dwdot[CH]/d[CH]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2266] += dqdT; // dwdot[CH]/dT

  // reaction 22: H2 + T-CH2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[4];
  k_f = 0.5 * exp(2 * tc[0] - (3638.21623643486) * invT);
  dlnkfdT = 2 * invT + (3638.21623643486) * invT2;
  // reverse
  phi_r = sc[5] * sc[14];
  Kc = exp(g_RT[2] + g_RT[4] - g_RT[5] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[4]) + (h_RT[5] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[14] += q; // CH3
  // d()/d[T-CH2]
  dqdci = +k_f * sc[4];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[100] -= dqdci; // dwdot[H2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[110] += dqdci; // dwdot[CH3]/d[T-CH2]
  // d()/d[H2]
  dqdci = +k_f * sc[2];
  J[194] -= dqdci; // dwdot[T-CH2]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[206] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[242] -= dqdci; // dwdot[T-CH2]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[5];
  J[674] -= dqdci; // dwdot[T-CH2]/d[CH3]
  J[676] -= dqdci; // dwdot[H2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT

  // reaction 23: O2 + T-CH2 => CO2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 5800000 * exp(-(755.308086706252) * invT);
  dlnkfdT = (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;     // T-CH2
  wdot[5] += 2 * q; // H
  wdot[8] -= q;     // O2
  wdot[15] += q;    // CO2
  // d()/d[T-CH2]
  dqdci = +k_f * sc[8];
  J[98] -= dqdci;      // dwdot[T-CH2]/d[T-CH2]
  J[101] += 2 * dqdci; // dwdot[H]/d[T-CH2]
  J[104] -= dqdci;     // dwdot[O2]/d[T-CH2]
  J[111] += dqdci;     // dwdot[CO2]/d[T-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[386] -= dqdci;     // dwdot[T-CH2]/d[O2]
  J[389] += 2 * dqdci; // dwdot[H]/d[O2]
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[399] += dqdci;     // dwdot[CO2]/d[O2]
  // d()/dT
  J[2258] -= dqdT;     // dwdot[T-CH2]/dT
  J[2261] += 2 * dqdT; // dwdot[H]/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2271] += dqdT;     // dwdot[CO2]/dT

  // reaction 24: O2 + T-CH2 => CH2O + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 2400000 * exp(-(755.308086706252) * invT);
  dlnkfdT = (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  // d()/d[T-CH2]
  dqdci = +k_f * sc[8];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[99] += dqdci;  // dwdot[O]/d[T-CH2]
  J[104] -= dqdci; // dwdot[O2]/d[T-CH2]
  J[109] += dqdci; // dwdot[CH2O]/d[T-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[386] -= dqdci; // dwdot[T-CH2]/d[O2]
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 25: O2 + T-CH2 => CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[8];
  k_f = 5000000 * exp(-(755.308086706252) * invT);
  dlnkfdT = (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  // d()/d[T-CH2]
  dqdci = +k_f * sc[8];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[102] += dqdci; // dwdot[OH]/d[T-CH2]
  J[104] -= dqdci; // dwdot[O2]/d[T-CH2]
  J[107] += dqdci; // dwdot[CO]/d[T-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[2];
  J[386] -= dqdci; // dwdot[T-CH2]/d[O2]
  J[389] += dqdci; // dwdot[H]/d[O2]
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 26: H2 + S-CH2 <=> CH3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[4];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[14];
  Kc = exp(g_RT[1] + g_RT[4] - g_RT[5] - g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[4]) + (h_RT[5] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[14] += q; // CH3
  // d()/d[S-CH2]
  dqdci = +k_f * sc[4];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[52] -= dqdci; // dwdot[H2]/d[S-CH2]
  J[53] += dqdci; // dwdot[H]/d[S-CH2]
  J[62] += dqdci; // dwdot[CH3]/d[S-CH2]
  // d()/d[H2]
  dqdci = +k_f * sc[1];
  J[193] -= dqdci; // dwdot[S-CH2]/d[H2]
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[206] += dqdci; // dwdot[CH3]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[14];
  J[241] -= dqdci; // dwdot[S-CH2]/d[H]
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[5];
  J[673] -= dqdci; // dwdot[S-CH2]/d[CH3]
  J[676] -= dqdci; // dwdot[H2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT

  // reaction 27: O2 + S-CH2 => CO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 28000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  // d()/d[S-CH2]
  dqdci = +k_f * sc[8];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[53] += dqdci; // dwdot[H]/d[S-CH2]
  J[54] += dqdci; // dwdot[OH]/d[S-CH2]
  J[56] -= dqdci; // dwdot[O2]/d[S-CH2]
  J[59] += dqdci; // dwdot[CO]/d[S-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[385] -= dqdci; // dwdot[S-CH2]/d[O2]
  J[389] += dqdci; // dwdot[H]/d[O2]
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 28: O2 + S-CH2 => CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[8];
  k_f = 12000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[7] += q;  // H2O
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  // d()/d[S-CH2]
  dqdci = +k_f * sc[8];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[55] += dqdci; // dwdot[H2O]/d[S-CH2]
  J[56] -= dqdci; // dwdot[O2]/d[S-CH2]
  J[59] += dqdci; // dwdot[CO]/d[S-CH2]
  // d()/d[O2]
  dqdci = +k_f * sc[1];
  J[385] -= dqdci; // dwdot[S-CH2]/d[O2]
  J[391] += dqdci; // dwdot[H2O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT

  // reaction 30: H2O + S-CH2 <=> H2O + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[7];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[7] - g_RT[7]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[7]) + (h_RT[2] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[7];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[7];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/d[H2O]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[337] -= dqdci; // dwdot[S-CH2]/d[H2O]
  J[338] += dqdci; // dwdot[T-CH2]/d[H2O]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 31: H2O + S-CH2 => CH2O + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[7];
  k_f = 68200 * exp(0.25 * tc[0] - (-470.261006361169) * invT);
  dlnkfdT = 0.25 * invT + (-470.261006361169) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[4] += q;  // H2
  wdot[7] -= q;  // H2O
  wdot[13] += q; // CH2O
  // d()/d[S-CH2]
  dqdci = +k_f * sc[7];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[52] += dqdci; // dwdot[H2]/d[S-CH2]
  J[55] -= dqdci; // dwdot[H2O]/d[S-CH2]
  J[61] += dqdci; // dwdot[CH2O]/d[S-CH2]
  // d()/d[H2O]
  dqdci = +k_f * sc[1];
  J[337] -= dqdci; // dwdot[S-CH2]/d[H2O]
  J[340] += dqdci; // dwdot[H2]/d[H2O]
  J[343] -= dqdci; // dwdot[H2O]/d[H2O]
  J[349] += dqdci; // dwdot[CH2O]/d[H2O]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2263] -= dqdT; // dwdot[H2O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT

  // reaction 33: CH3 + O => CH2O + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 50600000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[O]
  dqdci = +k_f * sc[14];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[157] += dqdci; // dwdot[CH2O]/d[O]
  J[158] -= dqdci; // dwdot[CH3]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[675] -= dqdci; // dwdot[O]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 34: CH3 + O => CO + H + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[14];
  k_f = 33700000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[4] += q;  // H2
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[14] -= q; // CH3
  // d()/d[O]
  dqdci = +k_f * sc[14];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[148] += dqdci; // dwdot[H2]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[158] -= dqdci; // dwdot[CH3]/d[O]
  // d()/d[CH3]
  dqdci = +k_f * sc[3];
  J[675] -= dqdci; // dwdot[O]/d[CH3]
  J[676] += dqdci; // dwdot[H2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 36: CH3 + OH <=> H2O + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 56 * exp(1.6 * tc[0] - (2727.76141949435) * invT);
  dlnkfdT = 1.6 * invT + (2727.76141949435) * invT2;
  // reverse
  phi_r = sc[2] * sc[7];
  Kc = exp(-g_RT[2] + g_RT[6] - g_RT[7] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[14]) + (h_RT[2] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[14] -= q; // CH3
  // d()/d[T-CH2]
  dqdci = -k_r * sc[7];
  J[98] += dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[102] -= dqdci; // dwdot[OH]/d[T-CH2]
  J[103] += dqdci; // dwdot[H2O]/d[T-CH2]
  J[110] -= dqdci; // dwdot[CH3]/d[T-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[14];
  J[290] += dqdci; // dwdot[T-CH2]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[302] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[2];
  J[338] += dqdci; // dwdot[T-CH2]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[350] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[6];
  J[674] += dqdci; // dwdot[T-CH2]/d[CH3]
  J[678] -= dqdci; // dwdot[OH]/d[CH3]
  J[679] += dqdci; // dwdot[H2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 37: CH3 + OH <=> H2O + S-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[14];
  k_f = 644000000000 * exp(-1.34 * tc[0] - (713.208980445029) * invT);
  dlnkfdT = -1.34 * invT + (713.208980445029) * invT2;
  // reverse
  phi_r = sc[1] * sc[7];
  Kc = exp(-g_RT[1] + g_RT[6] - g_RT[7] + g_RT[14]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[14]) + (h_RT[1] + h_RT[7]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] += q;  // S-CH2
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[14] -= q; // CH3
  // d()/d[S-CH2]
  dqdci = -k_r * sc[7];
  J[49] += dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[54] -= dqdci; // dwdot[OH]/d[S-CH2]
  J[55] += dqdci; // dwdot[H2O]/d[S-CH2]
  J[62] -= dqdci; // dwdot[CH3]/d[S-CH2]
  // d()/d[OH]
  dqdci = +k_f * sc[14];
  J[289] += dqdci; // dwdot[S-CH2]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[302] -= dqdci; // dwdot[CH3]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[1];
  J[337] += dqdci; // dwdot[S-CH2]/d[H2O]
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[350] -= dqdci; // dwdot[CH3]/d[H2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[6];
  J[673] += dqdci; // dwdot[S-CH2]/d[CH3]
  J[678] -= dqdci; // dwdot[OH]/d[CH3]
  J[679] += dqdci; // dwdot[H2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2257] += dqdT; // dwdot[S-CH2]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 38: CH3 + O2 => CH2O + H + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 13800000 * exp(-(15338.2452603942) * invT);
  dlnkfdT = (15338.2452603942) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[5] += q;  // H
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[389] += dqdci; // dwdot[H]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[398] -= dqdci; // dwdot[CH3]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[675] += dqdci; // dwdot[O]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[680] -= dqdci; // dwdot[O2]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 39: CH3 + O2 => CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[14];
  k_f = 587000 * exp(-(6964.93129240328) * invT);
  dlnkfdT = (6964.93129240328) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[O2]
  dqdci = +k_f * sc[14];
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[398] -= dqdci; // dwdot[CH3]/d[O2]
  // d()/d[CH3]
  dqdci = +k_f * sc[8];
  J[678] += dqdci; // dwdot[OH]/d[CH3]
  J[680] -= dqdci; // dwdot[O2]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 40: CH3 + HO2 => CH2O + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[13] += q; // CH2O
  wdot[14] -= q; // CH3
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[437] += dqdci; // dwdot[H]/d[HO2]
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[445] += dqdci; // dwdot[CH2O]/d[HO2]
  J[446] -= dqdci; // dwdot[CH3]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[678] += dqdci; // dwdot[OH]/d[CH3]
  J[681] -= dqdci; // dwdot[HO2]/d[CH3]
  J[685] += dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT

  // reaction 41: CH3 + HO2 => CH4 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[14];
  k_f = 3610000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[9] -= q;  // HO2
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // d()/d[HO2]
  dqdci = +k_f * sc[14];
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[446] -= dqdci; // dwdot[CH3]/d[HO2]
  J[448] += dqdci; // dwdot[CH4]/d[HO2]
  // d()/d[CH3]
  dqdci = +k_f * sc[9];
  J[680] += dqdci; // dwdot[O2]/d[CH3]
  J[681] -= dqdci; // dwdot[HO2]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 42: CH + CH3 => C2H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[14];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  wdot[14] -= q; // CH3
  wdot[17] += q; // C2H3
  // d()/d[CH]
  dqdci = +k_f * sc[14];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[494] -= dqdci; // dwdot[CH3]/d[CH]
  J[497] += dqdci; // dwdot[C2H3]/d[CH]
  // d()/d[CH3]
  dqdci = +k_f * sc[10];
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[682] -= dqdci; // dwdot[CH]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[689] += dqdci; // dwdot[C2H3]/d[CH3]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT

  // reaction 43: CH3 + T-CH2 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[14];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] -= q;  // T-CH2
  wdot[5] += q;  // H
  wdot[14] -= q; // CH3
  wdot[18] += q; // C2H4
  // d()/d[T-CH2]
  dqdci = +k_f * sc[14];
  J[98] -= dqdci;  // dwdot[T-CH2]/d[T-CH2]
  J[101] += dqdci; // dwdot[H]/d[T-CH2]
  J[110] -= dqdci; // dwdot[CH3]/d[T-CH2]
  J[114] += dqdci; // dwdot[C2H4]/d[T-CH2]
  // d()/d[CH3]
  dqdci = +k_f * sc[2];
  J[674] -= dqdci; // dwdot[T-CH2]/d[CH3]
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[690] += dqdci; // dwdot[C2H4]/d[CH3]
  // d()/dT
  J[2258] -= dqdT; // dwdot[T-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 44: 2 CH3 <=> C2H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 6840000 * exp(0.1 * tc[0] - (5334.04633586345) * invT);
  dlnkfdT = 0.1 * invT + (5334.04633586345) * invT2;
  // reverse
  phi_r = sc[5] * sc[19];
  Kc = exp(-g_RT[5] + 2.000000 * g_RT[14] - g_RT[19]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[14]) + (h_RT[5] + h_RT[19]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;      // H
  wdot[14] -= 2 * q; // CH3
  wdot[19] += q;     // C2H5
  // d()/d[H]
  dqdci = -k_r * sc[19];
  J[245] += dqdci;      // dwdot[H]/d[H]
  J[254] += -2 * dqdci; // dwdot[CH3]/d[H]
  J[259] += dqdci;      // dwdot[C2H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[14];
  J[677] += dqdci;      // dwdot[H]/d[CH3]
  J[686] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[691] += dqdci;      // dwdot[C2H5]/d[CH3]
  // d()/d[C2H5]
  dqdci = -k_r * sc[5];
  J[917] += dqdci;      // dwdot[H]/d[C2H5]
  J[926] += -2 * dqdci; // dwdot[CH3]/d[C2H5]
  J[931] += dqdci;      // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2261] += dqdT;      // dwdot[H]/dT
  J[2270] += -2 * dqdT; // dwdot[CH3]/dT
  J[2275] += dqdT;      // dwdot[C2H5]/dT

  // reaction 45: 2 CH3 => CH4 + S-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[14] * sc[14]);
  k_f = 2632000 * exp(-0.06 * tc[0] - (6874.72970505778) * invT);
  dlnkfdT = -0.06 * invT + (6874.72970505778) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;      // S-CH2
  wdot[14] -= 2 * q; // CH3
  wdot[16] += q;     // CH4
  // d()/d[CH3]
  dqdci = +k_f * 2.000000 * sc[14];
  J[673] += dqdci;      // dwdot[S-CH2]/d[CH3]
  J[686] += -2 * dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci;      // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2257] += dqdT;      // dwdot[S-CH2]/dT
  J[2270] += -2 * dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT;      // dwdot[CH4]/dT

  // reaction 46: CH4 + H <=> CH3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[16];
  k_f = 660 * exp(1.62 * tc[0] - (5455.52283898871) * invT);
  dlnkfdT = 1.62 * invT + (5455.52283898871) * invT2;
  // reverse
  phi_r = sc[4] * sc[14];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[16]) + (h_RT[4] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[16] -= q; // CH4
  // d()/d[H2]
  dqdci = -k_r * sc[14];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[206] += dqdci; // dwdot[CH3]/d[H2]
  J[208] -= dqdci; // dwdot[CH4]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[16];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[256] -= dqdci; // dwdot[CH4]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[4];
  J[676] += dqdci; // dwdot[H2]/d[CH3]
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[5];
  J[772] += dqdci; // dwdot[H2]/d[CH4]
  J[773] -= dqdci; // dwdot[H]/d[CH4]
  J[782] += dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT

  // reaction 47: CH4 + O <=> CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[16];
  k_f = 1020 * exp(1.5 * tc[0] - (4327.37649242108) * invT);
  dlnkfdT = 1.5 * invT + (4327.37649242108) * invT2;
  // reverse
  phi_r = sc[6] * sc[14];
  Kc = exp(g_RT[3] - g_RT[6] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[3] + h_RT[16]) + (h_RT[6] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[14] += q; // CH3
  wdot[16] -= q; // CH4
  // d()/d[O]
  dqdci = +k_f * sc[16];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[160] -= dqdci; // dwdot[CH4]/d[O]
  // d()/d[OH]
  dqdci = -k_r * sc[14];
  J[291] -= dqdci; // dwdot[O]/d[OH]
  J[294] += dqdci; // dwdot[OH]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[304] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[CH3]
  dqdci = -k_r * sc[6];
  J[675] -= dqdci; // dwdot[O]/d[CH3]
  J[678] += dqdci; // dwdot[OH]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[3];
  J[771] -= dqdci; // dwdot[O]/d[CH4]
  J[774] += dqdci; // dwdot[OH]/d[CH4]
  J[782] += dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT

  // reaction 48: CH4 + OH <=> CH3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[16];
  k_f = 100 * exp(1.6 * tc[0] - (1569.54284497824) * invT);
  dlnkfdT = 1.6 * invT + (1569.54284497824) * invT2;
  // reverse
  phi_r = sc[7] * sc[14];
  Kc = exp(g_RT[6] - g_RT[7] - g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[16]) + (h_RT[7] + h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[14] += q; // CH3
  wdot[16] -= q; // CH4
  // d()/d[OH]
  dqdci = +k_f * sc[16];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[304] -= dqdci; // dwdot[CH4]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[14];
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[350] += dqdci; // dwdot[CH3]/d[H2O]
  J[352] -= dqdci; // dwdot[CH4]/d[H2O]
  // d()/d[CH3]
  dqdci = -k_r * sc[7];
  J[678] -= dqdci; // dwdot[OH]/d[CH3]
  J[679] += dqdci; // dwdot[H2O]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci; // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[6];
  J[774] -= dqdci; // dwdot[OH]/d[CH4]
  J[775] += dqdci; // dwdot[H2O]/d[CH4]
  J[782] += dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT

  // reaction 49: CH + CH4 => C2H4 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[16];
  k_f = 60000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[10] -= q; // CH
  wdot[16] -= q; // CH4
  wdot[18] += q; // C2H4
  // d()/d[CH]
  dqdci = +k_f * sc[16];
  J[485] += dqdci; // dwdot[H]/d[CH]
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[496] -= dqdci; // dwdot[CH4]/d[CH]
  J[498] += dqdci; // dwdot[C2H4]/d[CH]
  // d()/d[CH4]
  dqdci = +k_f * sc[10];
  J[773] += dqdci; // dwdot[H]/d[CH4]
  J[778] -= dqdci; // dwdot[CH]/d[CH4]
  J[784] -= dqdci; // dwdot[CH4]/d[CH4]
  J[786] += dqdci; // dwdot[C2H4]/d[CH4]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2272] -= dqdT; // dwdot[CH4]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 50: CH4 + T-CH2 <=> 2 CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[2] * sc[16];
  k_f = 2.46 * exp(2 * tc[0] - (4161.40053953871) * invT);
  dlnkfdT = 2 * invT + (4161.40053953871) * invT2;
  // reverse
  phi_r = (sc[14] * sc[14]);
  Kc = exp(g_RT[2] - 2.000000 * g_RT[14] + g_RT[16]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[2] + h_RT[16]) + (2.000000 * h_RT[14]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[2] -= q;      // T-CH2
  wdot[14] += 2 * q; // CH3
  wdot[16] -= q;     // CH4
  // d()/d[T-CH2]
  dqdci = +k_f * sc[16];
  J[98] -= dqdci;      // dwdot[T-CH2]/d[T-CH2]
  J[110] += 2 * dqdci; // dwdot[CH3]/d[T-CH2]
  J[112] -= dqdci;     // dwdot[CH4]/d[T-CH2]
  // d()/d[CH3]
  dqdci = -k_r * 2.000000 * sc[14];
  J[674] -= dqdci;     // dwdot[T-CH2]/d[CH3]
  J[686] += 2 * dqdci; // dwdot[CH3]/d[CH3]
  J[688] -= dqdci;     // dwdot[CH4]/d[CH3]
  // d()/d[CH4]
  dqdci = +k_f * sc[2];
  J[770] -= dqdci;     // dwdot[T-CH2]/d[CH4]
  J[782] += 2 * dqdci; // dwdot[CH3]/d[CH4]
  J[784] -= dqdci;     // dwdot[CH4]/d[CH4]
  // d()/dT
  J[2258] -= dqdT;     // dwdot[T-CH2]/dT
  J[2270] += 2 * dqdT; // dwdot[CH3]/dT
  J[2272] -= dqdT;     // dwdot[CH4]/dT

  // reaction 52: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 800000 * exp(0.14 * tc[0] - (3699.55834799645) * invT);
  dlnkfdT = 0.14 * invT + (3699.55834799645) * invT2;
  // reverse
  phi_r = sc[5] * sc[15];
  Kc = exp(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[11]) + (h_RT[5] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[15];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] -= dqdci; // dwdot[OH]/d[H]
  J[251] -= dqdci; // dwdot[CO]/d[H]
  J[255] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] -= dqdci; // dwdot[CO]/d[OH]
  J[303] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[6];
  J[533] += dqdci; // dwdot[H]/d[CO]
  J[534] -= dqdci; // dwdot[OH]/d[CO]
  J[539] -= dqdci; // dwdot[CO]/d[CO]
  J[543] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[5];
  J[725] += dqdci; // dwdot[H]/d[CO2]
  J[726] -= dqdci; // dwdot[OH]/d[CO2]
  J[731] -= dqdci; // dwdot[CO]/d[CO2]
  J[735] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 53: CO + OH <=> CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[11];
  k_f = 87800 * exp(0.03 * tc[0] - (-8.41881481891296) * invT);
  dlnkfdT = 0.03 * invT + (-8.41881481891296) * invT2;
  // reverse
  phi_r = sc[5] * sc[15];
  Kc = exp(-g_RT[5] + g_RT[6] + g_RT[11] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[11]) + (h_RT[5] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // d()/d[H]
  dqdci = -k_r * sc[15];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[246] -= dqdci; // dwdot[OH]/d[H]
  J[251] -= dqdci; // dwdot[CO]/d[H]
  J[255] += dqdci; // dwdot[CO2]/d[H]
  // d()/d[OH]
  dqdci = +k_f * sc[11];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] -= dqdci; // dwdot[CO]/d[OH]
  J[303] += dqdci; // dwdot[CO2]/d[OH]
  // d()/d[CO]
  dqdci = +k_f * sc[6];
  J[533] += dqdci; // dwdot[H]/d[CO]
  J[534] -= dqdci; // dwdot[OH]/d[CO]
  J[539] -= dqdci; // dwdot[CO]/d[CO]
  J[543] += dqdci; // dwdot[CO2]/d[CO]
  // d()/d[CO2]
  dqdci = -k_r * sc[5];
  J[725] += dqdci; // dwdot[H]/d[CO2]
  J[726] -= dqdci; // dwdot[OH]/d[CO2]
  J[731] -= dqdci; // dwdot[CO]/d[CO2]
  J[735] += dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 54: CO + HO2 => CO2 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[11];
  k_f = 30100000 * exp(-(11573.741769509) * invT);
  dlnkfdT = (11573.741769509) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] -= q; // CO
  wdot[15] += q; // CO2
  // d()/d[HO2]
  dqdci = +k_f * sc[11];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] -= dqdci; // dwdot[CO]/d[HO2]
  J[447] += dqdci; // dwdot[CO2]/d[HO2]
  // d()/d[CO]
  dqdci = +k_f * sc[9];
  J[534] += dqdci; // dwdot[OH]/d[CO]
  J[537] -= dqdci; // dwdot[HO2]/d[CO]
  J[539] -= dqdci; // dwdot[CO]/d[CO]
  J[543] += dqdci; // dwdot[CO2]/d[CO]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] -= dqdT; // dwdot[CO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 55: CO + S-CH2 <=> CO + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[11];
  k_f = 9000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[11];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[11] - g_RT[11]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[11]) + (h_RT[2] + h_RT[11]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[11];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[11];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/d[CO]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[529] -= dqdci; // dwdot[S-CH2]/d[CO]
  J[530] += dqdci; // dwdot[T-CH2]/d[CO]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 56: H + HCO => CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[12];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[H]
  dqdci = +k_f * sc[12];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[252] -= dqdci; // dwdot[HCO]/d[H]
  // d()/d[HCO]
  dqdci = +k_f * sc[5];
  J[580] += dqdci; // dwdot[H2]/d[HCO]
  J[581] -= dqdci; // dwdot[H]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 57: HCO + O => CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[156] -= dqdci; // dwdot[HCO]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[579] -= dqdci; // dwdot[O]/d[HCO]
  J[582] += dqdci; // dwdot[OH]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 58: HCO + O => CO2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[12];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[12] -= q; // HCO
  wdot[15] += q; // CO2
  // d()/d[O]
  dqdci = +k_f * sc[12];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[156] -= dqdci; // dwdot[HCO]/d[O]
  J[159] += dqdci; // dwdot[CO2]/d[O]
  // d()/d[HCO]
  dqdci = +k_f * sc[3];
  J[579] -= dqdci; // dwdot[O]/d[HCO]
  J[581] += dqdci; // dwdot[H]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[591] += dqdci; // dwdot[CO2]/d[HCO]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2271] += dqdT; // dwdot[CO2]/dT

  // reaction 59: HCO + OH => CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[12];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[OH]
  dqdci = +k_f * sc[12];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[300] -= dqdci; // dwdot[HCO]/d[OH]
  // d()/d[HCO]
  dqdci = +k_f * sc[6];
  J[582] -= dqdci; // dwdot[OH]/d[HCO]
  J[583] += dqdci; // dwdot[H2O]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 62: HCO + O2 => CO + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[12];
  k_f = 12000 * exp(0.81 * tc[0] - (-365.627165040393) * invT);
  dlnkfdT = 0.81 * invT + (-365.627165040393) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[9] += q;  // HO2
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  // d()/d[O2]
  dqdci = +k_f * sc[12];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[393] += dqdci; // dwdot[HO2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[396] -= dqdci; // dwdot[HCO]/d[O2]
  // d()/d[HCO]
  dqdci = +k_f * sc[8];
  J[584] -= dqdci; // dwdot[O2]/d[HCO]
  J[585] += dqdci; // dwdot[HO2]/d[HCO]
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT

  // reaction 63: CH3 + HCO => CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[14];
  k_f = 26500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // d()/d[HCO]
  dqdci = +k_f * sc[14];
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[590] -= dqdci; // dwdot[CH3]/d[HCO]
  J[592] += dqdci; // dwdot[CH4]/d[HCO]
  // d()/d[CH3]
  dqdci = +k_f * sc[12];
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[684] -= dqdci; // dwdot[HCO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 64: CH2O + H <=> H2 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[13];
  k_f = 57.4 * exp(1.9 * tc[0] - (1379.51816763706) * invT);
  dlnkfdT = 1.9 * invT + (1379.51816763706) * invT2;
  // reverse
  phi_r = sc[4] * sc[12];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[12] + g_RT[13]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[13]) + (h_RT[4] + h_RT[12]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  // d()/d[H2]
  dqdci = -k_r * sc[12];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[204] += dqdci; // dwdot[HCO]/d[H2]
  J[205] -= dqdci; // dwdot[CH2O]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[13];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[252] += dqdci; // dwdot[HCO]/d[H]
  J[253] -= dqdci; // dwdot[CH2O]/d[H]
  // d()/d[HCO]
  dqdci = -k_r * sc[4];
  J[580] += dqdci; // dwdot[H2]/d[HCO]
  J[581] -= dqdci; // dwdot[H]/d[HCO]
  J[588] += dqdci; // dwdot[HCO]/d[HCO]
  J[589] -= dqdci; // dwdot[CH2O]/d[HCO]
  // d()/d[CH2O]
  dqdci = +k_f * sc[5];
  J[628] += dqdci; // dwdot[H2]/d[CH2O]
  J[629] -= dqdci; // dwdot[H]/d[CH2O]
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT

  // reaction 65: CH2O + O => HCO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[13];
  k_f = 39000000 * exp(-(1781.22093544899) * invT);
  dlnkfdT = (1781.22093544899) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  // d()/d[O]
  dqdci = +k_f * sc[13];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  J[157] -= dqdci; // dwdot[CH2O]/d[O]
  // d()/d[CH2O]
  dqdci = +k_f * sc[3];
  J[627] -= dqdci; // dwdot[O]/d[CH2O]
  J[630] += dqdci; // dwdot[OH]/d[CH2O]
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT

  // reaction 66: CH2O + OH => H2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[13];
  k_f = 3430 * exp(1.18 * tc[0] - (-224.907656614761) * invT);
  dlnkfdT = 1.18 * invT + (-224.907656614761) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  // d()/d[OH]
  dqdci = +k_f * sc[13];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[300] += dqdci; // dwdot[HCO]/d[OH]
  J[301] -= dqdci; // dwdot[CH2O]/d[OH]
  // d()/d[CH2O]
  dqdci = +k_f * sc[6];
  J[630] -= dqdci; // dwdot[OH]/d[CH2O]
  J[631] += dqdci; // dwdot[H2O]/d[CH2O]
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT

  // reaction 67: CH2O + CH3 => CH4 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[13] * sc[14];
  k_f = 0.00332 * exp(2.81 * tc[0] - (2949.0610126153) * invT);
  dlnkfdT = 2.81 * invT + (2949.0610126153) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[12] += q; // HCO
  wdot[13] -= q; // CH2O
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  // d()/d[CH2O]
  dqdci = +k_f * sc[14];
  J[636] += dqdci; // dwdot[HCO]/d[CH2O]
  J[637] -= dqdci; // dwdot[CH2O]/d[CH2O]
  J[638] -= dqdci; // dwdot[CH3]/d[CH2O]
  J[640] += dqdci; // dwdot[CH4]/d[CH2O]
  // d()/d[CH3]
  dqdci = +k_f * sc[13];
  J[684] += dqdci; // dwdot[HCO]/d[CH3]
  J[685] -= dqdci; // dwdot[CH2O]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  // d()/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] -= dqdT; // dwdot[CH2O]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT

  // reaction 68: CH + CO2 => CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[10] * sc[15];
  k_f = 190000000 * exp(-(7946.34972355557) * invT);
  dlnkfdT = (7946.34972355557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[10] -= q; // CH
  wdot[11] += q; // CO
  wdot[12] += q; // HCO
  wdot[15] -= q; // CO2
  // d()/d[CH]
  dqdci = +k_f * sc[15];
  J[490] -= dqdci; // dwdot[CH]/d[CH]
  J[491] += dqdci; // dwdot[CO]/d[CH]
  J[492] += dqdci; // dwdot[HCO]/d[CH]
  J[495] -= dqdci; // dwdot[CO2]/d[CH]
  // d()/d[CO2]
  dqdci = +k_f * sc[10];
  J[730] -= dqdci; // dwdot[CH]/d[CO2]
  J[731] += dqdci; // dwdot[CO]/d[CO2]
  J[732] += dqdci; // dwdot[HCO]/d[CO2]
  J[735] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2266] -= dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2271] -= dqdT; // dwdot[CO2]/dT

  // reaction 69: CO2 + S-CH2 <=> CO2 + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 7000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[2] * sc[15];
  Kc = exp(g_RT[1] - g_RT[2] + g_RT[15] - g_RT[15]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[15]) + (h_RT[2] + h_RT[15]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q; // S-CH2
  wdot[2] += q; // T-CH2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[15];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[50] += dqdci; // dwdot[T-CH2]/d[S-CH2]
  // d()/d[T-CH2]
  dqdci = -k_r * sc[15];
  J[97] -= dqdci; // dwdot[S-CH2]/d[T-CH2]
  J[98] += dqdci; // dwdot[T-CH2]/d[T-CH2]
  // d()/d[CO2]
  dqdci = +k_f * sc[1] - k_r * sc[2];
  J[721] -= dqdci; // dwdot[S-CH2]/d[CO2]
  J[722] += dqdci; // dwdot[T-CH2]/d[CO2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT

  // reaction 70: CO2 + S-CH2 => CH2O + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[15];
  k_f = 14000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[11] += q; // CO
  wdot[13] += q; // CH2O
  wdot[15] -= q; // CO2
  // d()/d[S-CH2]
  dqdci = +k_f * sc[15];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[59] += dqdci; // dwdot[CO]/d[S-CH2]
  J[61] += dqdci; // dwdot[CH2O]/d[S-CH2]
  J[63] -= dqdci; // dwdot[CO2]/d[S-CH2]
  // d()/d[CO2]
  dqdci = +k_f * sc[1];
  J[721] -= dqdci; // dwdot[S-CH2]/d[CO2]
  J[731] += dqdci; // dwdot[CO]/d[CO2]
  J[733] += dqdci; // dwdot[CH2O]/d[CO2]
  J[735] -= dqdci; // dwdot[CO2]/d[CO2]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2271] -= dqdT; // dwdot[CO2]/dT

  // reaction 71: C2H + O => CH + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[20];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[10] += q; // CH
  wdot[11] += q; // CO
  wdot[20] -= q; // C2H
  // d()/d[O]
  dqdci = +k_f * sc[20];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[154] += dqdci; // dwdot[CH]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[164] -= dqdci; // dwdot[C2H]/d[O]
  // d()/d[C2H]
  dqdci = +k_f * sc[3];
  J[963] -= dqdci; // dwdot[O]/d[C2H]
  J[970] += dqdci; // dwdot[CH]/d[C2H]
  J[971] += dqdci; // dwdot[CO]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2266] += dqdT; // dwdot[CH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT

  // reaction 72: C2H + OH => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[20];
  k_f = 20000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[20] -= q; // C2H
  wdot[21] += q; // HCCO
  // d()/d[OH]
  dqdci = +k_f * sc[20];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[308] -= dqdci; // dwdot[C2H]/d[OH]
  J[309] += dqdci; // dwdot[HCCO]/d[OH]
  // d()/d[C2H]
  dqdci = +k_f * sc[6];
  J[965] += dqdci; // dwdot[H]/d[C2H]
  J[966] -= dqdci; // dwdot[OH]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  J[981] += dqdci; // dwdot[HCCO]/d[C2H]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT
  J[2277] += dqdT; // dwdot[HCCO]/dT

  // reaction 73: C2H + O2 => CO + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[20];
  k_f = 10000000 * exp(-(-380.059419015673) * invT);
  dlnkfdT = (-380.059419015673) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  wdot[12] += q; // HCO
  wdot[20] -= q; // C2H
  // d()/d[O2]
  dqdci = +k_f * sc[20];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[396] += dqdci; // dwdot[HCO]/d[O2]
  J[404] -= dqdci; // dwdot[C2H]/d[O2]
  // d()/d[C2H]
  dqdci = +k_f * sc[8];
  J[968] -= dqdci; // dwdot[O2]/d[C2H]
  J[971] += dqdci; // dwdot[CO]/d[C2H]
  J[972] += dqdci; // dwdot[HCO]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT

  // reaction 74: C2H + H2 <=> C2H2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[4] * sc[20];
  k_f = 3.31 * exp(2.26 * tc[0] - (453.423376723343) * invT);
  dlnkfdT = 2.26 * invT + (453.423376723343) * invT2;
  // reverse
  phi_r = sc[5] * sc[22];
  Kc = exp(g_RT[4] - g_RT[5] + g_RT[20] - g_RT[22]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[4] + h_RT[20]) + (h_RT[5] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] -= q;  // H2
  wdot[5] += q;  // H
  wdot[20] -= q; // C2H
  wdot[22] += q; // C2H2
  // d()/d[H2]
  dqdci = +k_f * sc[20];
  J[196] -= dqdci; // dwdot[H2]/d[H2]
  J[197] += dqdci; // dwdot[H]/d[H2]
  J[212] -= dqdci; // dwdot[C2H]/d[H2]
  J[214] += dqdci; // dwdot[C2H2]/d[H2]
  // d()/d[H]
  dqdci = -k_r * sc[22];
  J[244] -= dqdci; // dwdot[H2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[260] -= dqdci; // dwdot[C2H]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  // d()/d[C2H]
  dqdci = +k_f * sc[4];
  J[964] -= dqdci; // dwdot[H2]/d[C2H]
  J[965] += dqdci; // dwdot[H]/d[C2H]
  J[980] -= dqdci; // dwdot[C2H]/d[C2H]
  J[982] += dqdci; // dwdot[C2H2]/d[C2H]
  // d()/d[C2H2]
  dqdci = -k_r * sc[5];
  J[1060] -= dqdci; // dwdot[H2]/d[C2H2]
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1076] -= dqdci; // dwdot[C2H]/d[C2H2]
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2260] -= dqdT; // dwdot[H2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2276] -= dqdT; // dwdot[C2H]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 76: C2H2 + O => H + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 8.1 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[21] += q; // HCCO
  wdot[22] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[165] += dqdci; // dwdot[HCCO]/d[O]
  J[166] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[1059] -= dqdci; // dwdot[O]/d[C2H2]
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1077] += dqdci; // dwdot[HCCO]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2277] += dqdT; // dwdot[HCCO]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 77: C2H2 + O => CO + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 12.5 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[22] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[146] += dqdci; // dwdot[T-CH2]/d[O]
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[166] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[1058] += dqdci; // dwdot[T-CH2]/d[C2H2]
  J[1059] -= dqdci; // dwdot[O]/d[C2H2]
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 78: C2H2 + O => C2H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[22];
  k_f = 33240000000 * exp(-0.44 * tc[0] - (15447.6948852067) * invT);
  dlnkfdT = -0.44 * invT + (15447.6948852067) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[20] += q; // C2H
  wdot[22] -= q; // C2H2
  // d()/d[O]
  dqdci = +k_f * sc[22];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[164] += dqdci; // dwdot[C2H]/d[O]
  J[166] -= dqdci; // dwdot[C2H2]/d[O]
  // d()/d[C2H2]
  dqdci = +k_f * sc[3];
  J[1059] -= dqdci; // dwdot[O]/d[C2H2]
  J[1062] += dqdci; // dwdot[OH]/d[C2H2]
  J[1076] += dqdci; // dwdot[C2H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2276] += dqdT; // dwdot[C2H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 79: C2H2 + OH => C2H + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[22];
  k_f = 2.63 * exp(2.14 * tc[0] - (8584.99205846165) * invT);
  dlnkfdT = 2.14 * invT + (8584.99205846165) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[20] += q; // C2H
  wdot[22] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[308] += dqdci; // dwdot[C2H]/d[OH]
  J[310] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H2]
  dqdci = +k_f * sc[6];
  J[1062] -= dqdci; // dwdot[OH]/d[C2H2]
  J[1063] += dqdci; // dwdot[H2O]/d[C2H2]
  J[1076] += dqdci; // dwdot[C2H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2276] += dqdT; // dwdot[C2H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 80: C2H2 + OH => CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[22];
  k_f = 7.53 * exp(1.55 * tc[0] - (1059.59314018505) * invT);
  dlnkfdT = 1.55 * invT + (1059.59314018505) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[22] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[310] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H2]
  dqdci = +k_f * sc[6];
  J[1062] -= dqdci; // dwdot[OH]/d[C2H2]
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 81: C2H2 + OH => CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[22];
  k_f = 1280 * exp(0.73 * tc[0] - (1297.73036294382) * invT);
  dlnkfdT = 0.73 * invT + (1297.73036294382) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[22] -= q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[22];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[310] -= dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H2]
  dqdci = +k_f * sc[6];
  J[1062] -= dqdci; // dwdot[OH]/d[C2H2]
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT

  // reaction 82: C2H2 + S-CH2 <=> C3H3 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[1] * sc[22];
  k_f = 190000000;
  dlnkfdT = 0.0;
  // reverse
  phi_r = sc[5] * sc[23];
  Kc = exp(g_RT[1] - g_RT[5] + g_RT[22] - g_RT[23]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[1] + h_RT[22]) + (h_RT[5] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[1] -= q;  // S-CH2
  wdot[5] += q;  // H
  wdot[22] -= q; // C2H2
  wdot[23] += q; // C3H3
  // d()/d[S-CH2]
  dqdci = +k_f * sc[22];
  J[49] -= dqdci; // dwdot[S-CH2]/d[S-CH2]
  J[53] += dqdci; // dwdot[H]/d[S-CH2]
  J[70] -= dqdci; // dwdot[C2H2]/d[S-CH2]
  J[71] += dqdci; // dwdot[C3H3]/d[S-CH2]
  // d()/d[H]
  dqdci = -k_r * sc[23];
  J[241] -= dqdci; // dwdot[S-CH2]/d[H]
  J[245] += dqdci; // dwdot[H]/d[H]
  J[262] -= dqdci; // dwdot[C2H2]/d[H]
  J[263] += dqdci; // dwdot[C3H3]/d[H]
  // d()/d[C2H2]
  dqdci = +k_f * sc[1];
  J[1057] -= dqdci; // dwdot[S-CH2]/d[C2H2]
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1079] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/d[C3H3]
  dqdci = -k_r * sc[5];
  J[1105] -= dqdci; // dwdot[S-CH2]/d[C3H3]
  J[1109] += dqdci; // dwdot[H]/d[C3H3]
  J[1126] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1127] += dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2257] -= dqdT; // dwdot[S-CH2]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT

  // reaction 84: C2H3 + H => C2H2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[17];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[H]
  dqdci = +k_f * sc[17];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[257] -= dqdci; // dwdot[C2H3]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  // d()/d[C2H3]
  dqdci = +k_f * sc[5];
  J[820] += dqdci; // dwdot[H2]/d[C2H3]
  J[821] -= dqdci; // dwdot[H]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 85: C2H3 + O => CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[17];
  k_f = 10300000 * exp(0.21 * tc[0] - (-215.286153964575) * invT);
  dlnkfdT = 0.21 * invT + (-215.286153964575) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[17] -= q; // C2H3
  // d()/d[O]
  dqdci = +k_f * sc[17];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[161] -= dqdci; // dwdot[C2H3]/d[O]
  // d()/d[C2H3]
  dqdci = +k_f * sc[3];
  J[819] -= dqdci; // dwdot[O]/d[C2H3]
  J[827] += dqdci; // dwdot[CO]/d[C2H3]
  J[830] += dqdci; // dwdot[CH3]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT

  // reaction 86: C2H3 + OH => C2H2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[17];
  k_f = 5000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[OH]
  dqdci = +k_f * sc[17];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[305] -= dqdci; // dwdot[C2H3]/d[OH]
  J[310] += dqdci; // dwdot[C2H2]/d[OH]
  // d()/d[C2H3]
  dqdci = +k_f * sc[6];
  J[822] -= dqdci; // dwdot[OH]/d[C2H3]
  J[823] += dqdci; // dwdot[H2O]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 87: C2H3 + O2 => C2H2 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[17];
  k_f = 1.34 * exp(1.61 * tc[0] - (-193.637773001656) * invT);
  dlnkfdT = 1.61 * invT + (-193.637773001656) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[9] += q;  // HO2
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[O2]
  dqdci = +k_f * sc[17];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[393] += dqdci; // dwdot[HO2]/d[O2]
  J[401] -= dqdci; // dwdot[C2H3]/d[O2]
  J[406] += dqdci; // dwdot[C2H2]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[824] -= dqdci; // dwdot[O2]/d[C2H3]
  J[825] += dqdci; // dwdot[HO2]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 88: C2H3 + O2 => CH3 + CO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[17];
  k_f = 303000 * exp(0.29 * tc[0] - (6.0134391563664) * invT);
  dlnkfdT = 0.29 * invT + (6.0134391563664) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[17] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[17];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[398] += dqdci; // dwdot[CH3]/d[O2]
  J[401] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[819] += dqdci; // dwdot[O]/d[C2H3]
  J[824] -= dqdci; // dwdot[O2]/d[C2H3]
  J[827] += dqdci; // dwdot[CO]/d[C2H3]
  J[830] += dqdci; // dwdot[CH3]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT

  // reaction 89: C2H3 + O2 => CH2O + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[17];
  k_f = 45800000000 * exp(-1.39 * tc[0] - (511.15239262446) * invT);
  dlnkfdT = -1.39 * invT + (511.15239262446) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[12] += q; // HCO
  wdot[13] += q; // CH2O
  wdot[17] -= q; // C2H3
  // d()/d[O2]
  dqdci = +k_f * sc[17];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[396] += dqdci; // dwdot[HCO]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[401] -= dqdci; // dwdot[C2H3]/d[O2]
  // d()/d[C2H3]
  dqdci = +k_f * sc[8];
  J[824] -= dqdci; // dwdot[O2]/d[C2H3]
  J[828] += dqdci; // dwdot[HCO]/d[C2H3]
  J[829] += dqdci; // dwdot[CH2O]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT

  // reaction 90: C2H3 + HCO => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[17];
  k_f = 90000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  wdot[17] -= q; // C2H3
  wdot[18] += q; // C2H4
  // d()/d[HCO]
  dqdci = +k_f * sc[17];
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[593] -= dqdci; // dwdot[C2H3]/d[HCO]
  J[594] += dqdci; // dwdot[C2H4]/d[HCO]
  // d()/d[C2H3]
  dqdci = +k_f * sc[12];
  J[827] += dqdci; // dwdot[CO]/d[C2H3]
  J[828] -= dqdci; // dwdot[HCO]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[834] += dqdci; // dwdot[C2H4]/d[C2H3]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT

  // reaction 91: C2H3 + CH3 => C2H2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[17];
  k_f = 9030000 * exp(-(-384.870170340766) * invT);
  dlnkfdT = (-384.870170340766) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[17] -= q; // C2H3
  wdot[22] += q; // C2H2
  // d()/d[CH3]
  dqdci = +k_f * sc[17];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[689] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[694] += dqdci; // dwdot[C2H2]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[830] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[832] += dqdci; // dwdot[CH4]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[838] += dqdci; // dwdot[C2H2]/d[C2H3]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT

  // reaction 92: C2H3 + CH3 <=> A-C3H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[17];
  k_f = 1930000000000 * exp(-1.25 * tc[0] - (3859.5158295558) * invT);
  dlnkfdT = -1.25 * invT + (3859.5158295558) * invT2;
  // reverse
  phi_r = sc[5] * sc[24];
  Kc = exp(-g_RT[5] + g_RT[14] + g_RT[17] - g_RT[24]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[14] + h_RT[17]) + (h_RT[5] + h_RT[24]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[14] -= q; // CH3
  wdot[17] -= q; // C2H3
  wdot[24] += q; // A-C3H5
  // d()/d[H]
  dqdci = -k_r * sc[24];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[254] -= dqdci; // dwdot[CH3]/d[H]
  J[257] -= dqdci; // dwdot[C2H3]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  // d()/d[CH3]
  dqdci = +k_f * sc[17];
  J[677] += dqdci; // dwdot[H]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[689] -= dqdci; // dwdot[C2H3]/d[CH3]
  J[696] += dqdci; // dwdot[A-C3H5]/d[CH3]
  // d()/d[C2H3]
  dqdci = +k_f * sc[14];
  J[821] += dqdci; // dwdot[H]/d[C2H3]
  J[830] -= dqdci; // dwdot[CH3]/d[C2H3]
  J[833] -= dqdci; // dwdot[C2H3]/d[C2H3]
  J[840] += dqdci; // dwdot[A-C3H5]/d[C2H3]
  // d()/d[A-C3H5]
  dqdci = -k_r * sc[5];
  J[1157] += dqdci; // dwdot[H]/d[A-C3H5]
  J[1166] -= dqdci; // dwdot[CH3]/d[A-C3H5]
  J[1169] -= dqdci; // dwdot[C2H3]/d[A-C3H5]
  J[1176] += dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2273] -= dqdT; // dwdot[C2H3]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT

  // reaction 94: C2H4 + H => C2H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[18];
  k_f = 1.33 * exp(2.53 * tc[0] - (6159.11031678355) * invT);
  dlnkfdT = 2.53 * invT + (6159.11031678355) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[17] += q; // C2H3
  wdot[18] -= q; // C2H4
  // d()/d[H]
  dqdci = +k_f * sc[18];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[257] += dqdci; // dwdot[C2H3]/d[H]
  J[258] -= dqdci; // dwdot[C2H4]/d[H]
  // d()/d[C2H4]
  dqdci = +k_f * sc[5];
  J[868] += dqdci; // dwdot[H2]/d[C2H4]
  J[869] -= dqdci; // dwdot[H]/d[C2H4]
  J[881] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 95: C2H4 + O => CH3 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 7660 * exp(0.88 * tc[0] - (573.697192017329) * invT);
  dlnkfdT = 0.88 * invT + (573.697192017329) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[14] += q; // CH3
  wdot[18] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[162] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[867] -= dqdci; // dwdot[O]/d[C2H4]
  J[869] += dqdci; // dwdot[H]/d[C2H4]
  J[875] += dqdci; // dwdot[CO]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 96: C2H4 + O => CH2O + T-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 0.0715 * exp(2.47 * tc[0] - (467.855630698622) * invT);
  dlnkfdT = 2.47 * invT + (467.855630698622) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[2] += q;  // T-CH2
  wdot[3] -= q;  // O
  wdot[13] += q; // CH2O
  wdot[18] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[146] += dqdci; // dwdot[T-CH2]/d[O]
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[157] += dqdci; // dwdot[CH2O]/d[O]
  J[162] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[866] += dqdci; // dwdot[T-CH2]/d[C2H4]
  J[867] -= dqdci; // dwdot[O]/d[C2H4]
  J[877] += dqdci; // dwdot[CH2O]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2258] += dqdT; // dwdot[T-CH2]/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 97: C2H4 + O => CH3 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[18];
  k_f = 389 * exp(1.36 * tc[0] - (446.207249735703) * invT);
  dlnkfdT = 1.36 * invT + (446.207249735703) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[12] += q; // HCO
  wdot[14] += q; // CH3
  wdot[18] -= q; // C2H4
  // d()/d[O]
  dqdci = +k_f * sc[18];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[162] -= dqdci; // dwdot[C2H4]/d[O]
  // d()/d[C2H4]
  dqdci = +k_f * sc[3];
  J[867] -= dqdci; // dwdot[O]/d[C2H4]
  J[876] += dqdci; // dwdot[HCO]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 98: C2H4 + OH => C2H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[18];
  k_f = 1.31e-07 * exp(4.2 * tc[0] - (-432.977683591697) * invT);
  dlnkfdT = 4.2 * invT + (-432.977683591697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[17] += q; // C2H3
  wdot[18] -= q; // C2H4
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[305] += dqdci; // dwdot[C2H3]/d[OH]
  J[306] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[C2H4]
  dqdci = +k_f * sc[6];
  J[870] -= dqdci; // dwdot[OH]/d[C2H4]
  J[871] += dqdci; // dwdot[H2O]/d[C2H4]
  J[881] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 99: C2H4 + OH => CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[18];
  k_f = 3.75e+30 * exp(-7.8 * tc[0] - (3552.82540041446) * invT);
  dlnkfdT = -7.8 * invT + (3552.82540041446) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[13] += q; // CH2O
  wdot[14] += q; // CH3
  wdot[18] -= q; // C2H4
  // d()/d[OH]
  dqdci = +k_f * sc[18];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[301] += dqdci; // dwdot[CH2O]/d[OH]
  J[302] += dqdci; // dwdot[CH3]/d[OH]
  J[306] -= dqdci; // dwdot[C2H4]/d[OH]
  // d()/d[C2H4]
  dqdci = +k_f * sc[6];
  J[870] -= dqdci; // dwdot[OH]/d[C2H4]
  J[877] += dqdci; // dwdot[CH2O]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 100: C2H4 + CH3 => C2H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[18];
  k_f = 0.227 * exp(2 * tc[0] - (4629.25617023733) * invT);
  dlnkfdT = 2 * invT + (4629.25617023733) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[17] += q; // C2H3
  wdot[18] -= q; // C2H4
  // d()/d[CH3]
  dqdci = +k_f * sc[18];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[689] += dqdci; // dwdot[C2H3]/d[CH3]
  J[690] -= dqdci; // dwdot[C2H4]/d[CH3]
  // d()/d[C2H4]
  dqdci = +k_f * sc[14];
  J[878] -= dqdci; // dwdot[CH3]/d[C2H4]
  J[880] += dqdci; // dwdot[CH4]/d[C2H4]
  J[881] += dqdci; // dwdot[C2H3]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT

  // reaction 103: C2H5 + O => CH2O + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[19];
  k_f = 31700000 * exp(0.03 * tc[0] - (-198.448524326749) * invT);
  dlnkfdT = 0.03 * invT + (-198.448524326749) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[13] += q; // CH2O
  wdot[14] += q; // CH3
  wdot[19] -= q; // C2H5
  // d()/d[O]
  dqdci = +k_f * sc[19];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[157] += dqdci; // dwdot[CH2O]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[163] -= dqdci; // dwdot[C2H5]/d[O]
  // d()/d[C2H5]
  dqdci = +k_f * sc[3];
  J[915] -= dqdci; // dwdot[O]/d[C2H5]
  J[925] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[926] += dqdci; // dwdot[CH3]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT

  // reaction 104: C2H5 + O2 => C2H4 + HO2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[19];
  k_f = 19.2 * exp(1.02 * tc[0] - (-1023.51250524685) * invT);
  dlnkfdT = 1.02 * invT + (-1023.51250524685) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;  // O2
  wdot[9] += q;  // HO2
  wdot[18] += q; // C2H4
  wdot[19] -= q; // C2H5
  // d()/d[O2]
  dqdci = +k_f * sc[19];
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[393] += dqdci; // dwdot[HO2]/d[O2]
  J[402] += dqdci; // dwdot[C2H4]/d[O2]
  J[403] -= dqdci; // dwdot[C2H5]/d[O2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[8];
  J[920] -= dqdci; // dwdot[O2]/d[C2H5]
  J[921] += dqdci; // dwdot[HO2]/d[C2H5]
  J[930] += dqdci; // dwdot[C2H4]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2265] += dqdT; // dwdot[HO2]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT

  // reaction 105: C2H5 + HCO => C2H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[12] * sc[19];
  k_f = 120000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[12] -= q; // HCO
  wdot[19] -= q; // C2H5
  wdot[26] += q; // C2H6
  // d()/d[HCO]
  dqdci = +k_f * sc[19];
  J[587] += dqdci; // dwdot[CO]/d[HCO]
  J[588] -= dqdci; // dwdot[HCO]/d[HCO]
  J[595] -= dqdci; // dwdot[C2H5]/d[HCO]
  J[602] += dqdci; // dwdot[C2H6]/d[HCO]
  // d()/d[C2H5]
  dqdci = +k_f * sc[12];
  J[923] += dqdci; // dwdot[CO]/d[C2H5]
  J[924] -= dqdci; // dwdot[HCO]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[938] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2268] -= dqdT; // dwdot[HCO]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT
  J[2282] += dqdT; // dwdot[C2H6]/dT

  // reaction 106: C2H5 + HO2 => C2H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 300000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[9] -= q;  // HO2
  wdot[19] -= q; // C2H5
  wdot[26] += q; // C2H6
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[451] -= dqdci; // dwdot[C2H5]/d[HO2]
  J[458] += dqdci; // dwdot[C2H6]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[9];
  J[920] += dqdci; // dwdot[O2]/d[C2H5]
  J[921] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  J[938] += dqdci; // dwdot[C2H6]/d[C2H5]
  // d()/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT
  J[2282] += dqdT; // dwdot[C2H6]/dT

  // reaction 107: C2H5 + HO2 => CH2O + CH3 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[19];
  k_f = 31000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[13] += q; // CH2O
  wdot[14] += q; // CH3
  wdot[19] -= q; // C2H5
  // d()/d[HO2]
  dqdci = +k_f * sc[19];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[445] += dqdci; // dwdot[CH2O]/d[HO2]
  J[446] += dqdci; // dwdot[CH3]/d[HO2]
  J[451] -= dqdci; // dwdot[C2H5]/d[HO2]
  // d()/d[C2H5]
  dqdci = +k_f * sc[9];
  J[918] += dqdci; // dwdot[OH]/d[C2H5]
  J[921] -= dqdci; // dwdot[HO2]/d[C2H5]
  J[925] += dqdci; // dwdot[CH2O]/d[C2H5]
  J[926] += dqdci; // dwdot[CH3]/d[C2H5]
  J[931] -= dqdci; // dwdot[C2H5]/d[C2H5]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2275] -= dqdT; // dwdot[C2H5]/dT

  // reaction 109: C2H6 + H => C2H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[26];
  k_f = 0.17 * exp(2.7 * tc[0] - (2888.92662105163) * invT);
  dlnkfdT = 2.7 * invT + (2888.92662105163) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[H]
  dqdci = +k_f * sc[26];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[259] += dqdci; // dwdot[C2H5]/d[H]
  J[266] -= dqdci; // dwdot[C2H6]/d[H]
  // d()/d[C2H6]
  dqdci = +k_f * sc[5];
  J[1252] += dqdci; // dwdot[H2]/d[C2H6]
  J[1253] -= dqdci; // dwdot[H]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 110: C2H6 + O => C2H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[26];
  k_f = 89.8 * exp(1.92 * tc[0] - (2863.67017659489) * invT);
  dlnkfdT = 1.92 * invT + (2863.67017659489) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[O]
  dqdci = +k_f * sc[26];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[163] += dqdci; // dwdot[C2H5]/d[O]
  J[170] -= dqdci; // dwdot[C2H6]/d[O]
  // d()/d[C2H6]
  dqdci = +k_f * sc[3];
  J[1251] -= dqdci; // dwdot[O]/d[C2H6]
  J[1254] += dqdci; // dwdot[OH]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 111: C2H6 + OH => C2H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[26];
  k_f = 1.61 * exp(2.22 * tc[0] - (372.843292028033) * invT);
  dlnkfdT = 2.22 * invT + (372.843292028033) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[OH]
  dqdci = +k_f * sc[26];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[307] += dqdci; // dwdot[C2H5]/d[OH]
  J[314] -= dqdci; // dwdot[C2H6]/d[OH]
  // d()/d[C2H6]
  dqdci = +k_f * sc[6];
  J[1254] -= dqdci; // dwdot[OH]/d[C2H6]
  J[1255] += dqdci; // dwdot[H2O]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 112: C2H6 + CH3 => C2H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[26];
  k_f = 843000000 * exp(-(11199.6957896497) * invT);
  dlnkfdT = (11199.6957896497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[19] += q; // C2H5
  wdot[26] -= q; // C2H6
  // d()/d[CH3]
  dqdci = +k_f * sc[26];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[691] += dqdci; // dwdot[C2H5]/d[CH3]
  J[698] -= dqdci; // dwdot[C2H6]/d[CH3]
  // d()/d[C2H6]
  dqdci = +k_f * sc[14];
  J[1262] -= dqdci; // dwdot[CH3]/d[C2H6]
  J[1264] += dqdci; // dwdot[CH4]/d[C2H6]
  J[1267] += dqdci; // dwdot[C2H5]/d[C2H6]
  J[1274] -= dqdci; // dwdot[C2H6]/d[C2H6]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2282] -= dqdT; // dwdot[C2H6]/dT

  // reaction 114: H + HCCO => CO + S-CH2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[21];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[1] += q;  // S-CH2
  wdot[5] -= q;  // H
  wdot[11] += q; // CO
  wdot[21] -= q; // HCCO
  // d()/d[H]
  dqdci = +k_f * sc[21];
  J[241] += dqdci; // dwdot[S-CH2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[261] -= dqdci; // dwdot[HCCO]/d[H]
  // d()/d[HCCO]
  dqdci = +k_f * sc[5];
  J[1009] += dqdci; // dwdot[S-CH2]/d[HCCO]
  J[1013] -= dqdci; // dwdot[H]/d[HCCO]
  J[1019] += dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2257] += dqdT; // dwdot[S-CH2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT

  // reaction 115: HCCO + O => 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[21];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // O
  wdot[5] += q;      // H
  wdot[11] += 2 * q; // CO
  wdot[21] -= q;     // HCCO
  // d()/d[O]
  dqdci = +k_f * sc[21];
  J[147] -= dqdci;     // dwdot[O]/d[O]
  J[149] += dqdci;     // dwdot[H]/d[O]
  J[155] += 2 * dqdci; // dwdot[CO]/d[O]
  J[165] -= dqdci;     // dwdot[HCCO]/d[O]
  // d()/d[HCCO]
  dqdci = +k_f * sc[3];
  J[1011] -= dqdci;     // dwdot[O]/d[HCCO]
  J[1013] += dqdci;     // dwdot[H]/d[HCCO]
  J[1019] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2259] -= dqdT;     // dwdot[O]/dT
  J[2261] += dqdT;     // dwdot[H]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 116: HCCO + O2 => 2 CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[21];
  k_f = 42000 * exp(-(429.369620097877) * invT);
  dlnkfdT = (429.369620097877) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;      // OH
  wdot[8] -= q;      // O2
  wdot[11] += 2 * q; // CO
  wdot[21] -= q;     // HCCO
  // d()/d[O2]
  dqdci = +k_f * sc[21];
  J[390] += dqdci;     // dwdot[OH]/d[O2]
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[395] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[405] -= dqdci;     // dwdot[HCCO]/d[O2]
  // d()/d[HCCO]
  dqdci = +k_f * sc[8];
  J[1014] += dqdci;     // dwdot[OH]/d[HCCO]
  J[1016] -= dqdci;     // dwdot[O2]/d[HCCO]
  J[1019] += 2 * dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2262] += dqdT;     // dwdot[OH]/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 117: 2 HCCO => C2H2 + 2 CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[21] * sc[21]);
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += 2 * q; // CO
  wdot[21] -= 2 * q; // HCCO
  wdot[22] += q;     // C2H2
  // d()/d[HCCO]
  dqdci = +k_f * 2.000000 * sc[21];
  J[1019] += 2 * dqdci;  // dwdot[CO]/d[HCCO]
  J[1029] += -2 * dqdci; // dwdot[HCCO]/d[HCCO]
  J[1030] += dqdci;      // dwdot[C2H2]/d[HCCO]
  // d()/dT
  J[2267] += 2 * dqdT;  // dwdot[CO]/dT
  J[2277] += -2 * dqdT; // dwdot[HCCO]/dT
  J[2278] += dqdT;      // dwdot[C2H2]/dT

  // reaction 118: C2H2 + HCCO => C3H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[21] * sc[22];
  k_f = 100000 * exp(-(1509.40845341457) * invT);
  dlnkfdT = (1509.40845341457) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[21] -= q; // HCCO
  wdot[22] -= q; // C2H2
  wdot[23] += q; // C3H3
  // d()/d[HCCO]
  dqdci = +k_f * sc[22];
  J[1019] += dqdci; // dwdot[CO]/d[HCCO]
  J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
  J[1030] -= dqdci; // dwdot[C2H2]/d[HCCO]
  J[1031] += dqdci; // dwdot[C3H3]/d[HCCO]
  // d()/d[C2H2]
  dqdci = +k_f * sc[21];
  J[1067] += dqdci; // dwdot[CO]/d[C2H2]
  J[1077] -= dqdci; // dwdot[HCCO]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1079] += dqdci; // dwdot[C3H3]/d[C2H2]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT

  // reaction 119: CH3 + HCCO => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[21];
  k_f = 50000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[14] -= q; // CH3
  wdot[18] += q; // C2H4
  wdot[21] -= q; // HCCO
  // d()/d[CH3]
  dqdci = +k_f * sc[21];
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[690] += dqdci; // dwdot[C2H4]/d[CH3]
  J[693] -= dqdci; // dwdot[HCCO]/d[CH3]
  // d()/d[HCCO]
  dqdci = +k_f * sc[14];
  J[1019] += dqdci; // dwdot[CO]/d[HCCO]
  J[1022] -= dqdci; // dwdot[CH3]/d[HCCO]
  J[1026] += dqdci; // dwdot[C2H4]/d[HCCO]
  J[1029] -= dqdci; // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2277] -= dqdT; // dwdot[HCCO]/dT

  // reaction 120: HCCO + OH => 2 HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[21];
  k_f = 10000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;      // OH
  wdot[12] += 2 * q; // HCO
  wdot[21] -= q;     // HCCO
  // d()/d[OH]
  dqdci = +k_f * sc[21];
  J[294] -= dqdci;     // dwdot[OH]/d[OH]
  J[300] += 2 * dqdci; // dwdot[HCO]/d[OH]
  J[309] -= dqdci;     // dwdot[HCCO]/d[OH]
  // d()/d[HCCO]
  dqdci = +k_f * sc[6];
  J[1014] -= dqdci;     // dwdot[OH]/d[HCCO]
  J[1020] += 2 * dqdci; // dwdot[HCO]/d[HCCO]
  J[1029] -= dqdci;     // dwdot[HCCO]/d[HCCO]
  // d()/dT
  J[2262] -= dqdT;     // dwdot[OH]/dT
  J[2268] += 2 * dqdT; // dwdot[HCO]/dT
  J[2277] -= dqdT;     // dwdot[HCCO]/dT

  // reaction 121: C3H3 + H <=> P-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[23];
  k_f = 7.94e+23 * exp(-5.06 * tc[0] - (2446.32743480975) * invT);
  dlnkfdT = -5.06 * invT + (2446.32743480975) * invT2;
  // reverse
  phi_r = sc[27];
  Kc = refCinv * exp(g_RT[5] + g_RT[23] - g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[23]) + (h_RT[27]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[23] -= q; // C3H3
  wdot[27] += q; // P-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] -= dqdci; // dwdot[C3H3]/d[H]
  J[267] += dqdci; // dwdot[P-C3H4]/d[H]
  // d()/d[C3H3]
  dqdci = +k_f * sc[5];
  J[1109] -= dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1131] += dqdci; // dwdot[P-C3H4]/d[C3H3]
  // d()/d[P-C3H4]
  dqdci = -k_r;
  J[1301] -= dqdci; // dwdot[H]/d[P-C3H4]
  J[1319] -= dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] += dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT
  J[2283] += dqdT; // dwdot[P-C3H4]/dT

  // reaction 122: C3H3 + H <=> A-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[23];
  k_f = 3.16e+23 * exp(-5 * tc[0] - (2370.55306927287) * invT);
  dlnkfdT = -5 * invT + (2370.55306927287) * invT2;
  // reverse
  phi_r = sc[28];
  Kc = refCinv * exp(g_RT[5] + g_RT[23] - g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[23]) + (h_RT[28]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[23] -= q; // C3H3
  wdot[28] += q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[23];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] -= dqdci; // dwdot[C3H3]/d[H]
  J[268] += dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[C3H3]
  dqdci = +k_f * sc[5];
  J[1109] -= dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1132] += dqdci; // dwdot[A-C3H4]/d[C3H3]
  // d()/d[A-C3H4]
  dqdci = -k_r;
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1367] -= dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] += dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 123: C3H3 + OH => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[23];
  k_f = 1280 * exp(0.73 * tc[0] - (1297.73036294382) * invT);
  dlnkfdT = 0.73 * invT + (1297.73036294382) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[18] += q; // C2H4
  wdot[23] -= q; // C3H3
  // d()/d[OH]
  dqdci = +k_f * sc[23];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[306] += dqdci; // dwdot[C2H4]/d[OH]
  J[311] -= dqdci; // dwdot[C3H3]/d[OH]
  // d()/d[C3H3]
  dqdci = +k_f * sc[6];
  J[1110] -= dqdci; // dwdot[OH]/d[C3H3]
  J[1115] += dqdci; // dwdot[CO]/d[C3H3]
  J[1122] += dqdci; // dwdot[C2H4]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT

  // reaction 124: C3H3 + O => C2H2 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[23];
  k_f = 69500000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[22] += q; // C2H2
  wdot[23] -= q; // C3H3
  // d()/d[O]
  dqdci = +k_f * sc[23];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[166] += dqdci; // dwdot[C2H2]/d[O]
  J[167] -= dqdci; // dwdot[C3H3]/d[O]
  // d()/d[C3H3]
  dqdci = +k_f * sc[3];
  J[1107] -= dqdci; // dwdot[O]/d[C3H3]
  J[1109] += dqdci; // dwdot[H]/d[C3H3]
  J[1115] += dqdci; // dwdot[CO]/d[C3H3]
  J[1126] += dqdci; // dwdot[C2H2]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT

  // reaction 125: C3H3 + O2 => CH3 + 2 CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[23];
  k_f = 0.17 * exp(1.7 * tc[0] - (755.308086706252) * invT);
  dlnkfdT = 1.7 * invT + (755.308086706252) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] -= q;      // O2
  wdot[11] += 2 * q; // CO
  wdot[14] += q;     // CH3
  wdot[23] -= q;     // C3H3
  // d()/d[O2]
  dqdci = +k_f * sc[23];
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[395] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[398] += dqdci;     // dwdot[CH3]/d[O2]
  J[407] -= dqdci;     // dwdot[C3H3]/d[O2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[8];
  J[1112] -= dqdci;     // dwdot[O2]/d[C3H3]
  J[1115] += 2 * dqdci; // dwdot[CO]/d[C3H3]
  J[1118] += dqdci;     // dwdot[CH3]/d[C3H3]
  J[1127] -= dqdci;     // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2270] += dqdT;     // dwdot[CH3]/dT
  J[2279] -= dqdT;     // dwdot[C3H3]/dT

  // reaction 126: C3H3 + HO2 => C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[23];
  k_f = 800000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[23] -= q; // C3H3
  // d()/d[HO2]
  dqdci = +k_f * sc[23];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] += dqdci; // dwdot[CO]/d[HO2]
  J[449] += dqdci; // dwdot[C2H3]/d[HO2]
  J[455] -= dqdci; // dwdot[C3H3]/d[HO2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[9];
  J[1110] += dqdci; // dwdot[OH]/d[C3H3]
  J[1113] -= dqdci; // dwdot[HO2]/d[C3H3]
  J[1115] += dqdci; // dwdot[CO]/d[C3H3]
  J[1121] += dqdci; // dwdot[C2H3]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT

  // reaction 127: 2 C3H3 <=> A1
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[23] * sc[23]);
  k_f = 1.87e+40 * exp(-9.84 * tc[0] - (8456.29942834876) * invT);
  dlnkfdT = -9.84 * invT + (8456.29942834876) * invT2;
  // reverse
  phi_r = sc[29];
  Kc = refCinv * exp(2.000000 * g_RT[23] - g_RT[29]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[23]) + (h_RT[29]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[23] -= 2 * q; // C3H3
  wdot[29] += q;     // A1
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[23];
  J[1127] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  J[1133] += dqdci;      // dwdot[A1]/d[C3H3]
  // d()/d[A1]
  dqdci = -k_r;
  J[1415] += -2 * dqdci; // dwdot[C3H3]/d[A1]
  J[1421] += dqdci;      // dwdot[A1]/d[A1]
  // d()/dT
  J[2279] += -2 * dqdT; // dwdot[C3H3]/dT
  J[2285] += dqdT;      // dwdot[A1]/dT

  // reaction 128: 2 C3H3 <=> A1- + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[23] * sc[23]);
  k_f = 5.77e+31 * exp(-7 * tc[0] - (15854.2134365104) * invT);
  dlnkfdT = -7 * invT + (15854.2134365104) * invT2;
  // reverse
  phi_r = sc[5] * sc[30];
  Kc = exp(-g_RT[5] + 2.000000 * g_RT[23] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(2.000000 * h_RT[23]) + (h_RT[5] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;      // H
  wdot[23] -= 2 * q; // C3H3
  wdot[30] += q;     // A1-
  // d()/d[H]
  dqdci = -k_r * sc[30];
  J[245] += dqdci;      // dwdot[H]/d[H]
  J[263] += -2 * dqdci; // dwdot[C3H3]/d[H]
  J[270] += dqdci;      // dwdot[A1-]/d[H]
  // d()/d[C3H3]
  dqdci = +k_f * 2.000000 * sc[23];
  J[1109] += dqdci;      // dwdot[H]/d[C3H3]
  J[1127] += -2 * dqdci; // dwdot[C3H3]/d[C3H3]
  J[1134] += dqdci;      // dwdot[A1-]/d[C3H3]
  // d()/d[A1-]
  dqdci = -k_r * sc[5];
  J[1445] += dqdci;      // dwdot[H]/d[A1-]
  J[1463] += -2 * dqdci; // dwdot[C3H3]/d[A1-]
  J[1470] += dqdci;      // dwdot[A1-]/d[A1-]
  // d()/dT
  J[2261] += dqdT;      // dwdot[H]/dT
  J[2279] += -2 * dqdT; // dwdot[C3H3]/dT
  J[2286] += dqdT;      // dwdot[A1-]/dT

  // reaction 129: C2H2 + C3H3 <=> C5H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[23];
  k_f = 235000 * exp(-(5029.76128238465) * invT);
  dlnkfdT = (5029.76128238465) * invT2;
  // reverse
  phi_r = sc[31];
  Kc = refCinv * exp(g_RT[22] + g_RT[23] - g_RT[31]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[23]) + (h_RT[31]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // C2H2
  wdot[23] -= q; // C3H3
  wdot[31] += q; // C5H5
  // d()/d[C2H2]
  dqdci = +k_f * sc[23];
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1079] -= dqdci; // dwdot[C3H3]/d[C2H2]
  J[1087] += dqdci; // dwdot[C5H5]/d[C2H2]
  // d()/d[C3H3]
  dqdci = +k_f * sc[22];
  J[1126] -= dqdci; // dwdot[C2H2]/d[C3H3]
  J[1127] -= dqdci; // dwdot[C3H3]/d[C3H3]
  J[1135] += dqdci; // dwdot[C5H5]/d[C3H3]
  // d()/d[C5H5]
  dqdci = -k_r;
  J[1510] -= dqdci; // dwdot[C2H2]/d[C5H5]
  J[1511] -= dqdci; // dwdot[C3H3]/d[C5H5]
  J[1519] += dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2279] -= dqdT; // dwdot[C3H3]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 130: H + P-C3H4 <=> C2H2 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[27];
  k_f = 3460000 * exp(0.44 * tc[0] - (2749.40980045727) * invT);
  dlnkfdT = 0.44 * invT + (2749.40980045727) * invT2;
  // reverse
  phi_r = sc[14] * sc[22];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[27]) + (h_RT[14] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[22] += q; // C2H2
  wdot[27] -= q; // P-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  J[267] -= dqdci; // dwdot[P-C3H4]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[694] += dqdci; // dwdot[C2H2]/d[CH3]
  J[699] -= dqdci; // dwdot[P-C3H4]/d[CH3]
  // d()/d[C2H2]
  dqdci = -k_r * sc[14];
  J[1061] -= dqdci; // dwdot[H]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[1083] -= dqdci; // dwdot[P-C3H4]/d[C2H2]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[5];
  J[1301] -= dqdci; // dwdot[H]/d[P-C3H4]
  J[1310] += dqdci; // dwdot[CH3]/d[P-C3H4]
  J[1318] += dqdci; // dwdot[C2H2]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 131: H + P-C3H4 <=> C3H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[27];
  k_f = 0.085 * exp(2.7 * tc[0] - (2888.92662105163) * invT);
  dlnkfdT = 2.7 * invT + (2888.92662105163) * invT2;
  // reverse
  phi_r = sc[4] * sc[23];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[23] + g_RT[27]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[27]) + (h_RT[4] + h_RT[23]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[23] += q; // C3H3
  wdot[27] -= q; // P-C3H4
  // d()/d[H2]
  dqdci = -k_r * sc[23];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[215] += dqdci; // dwdot[C3H3]/d[H2]
  J[219] -= dqdci; // dwdot[P-C3H4]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[27];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] += dqdci; // dwdot[C3H3]/d[H]
  J[267] -= dqdci; // dwdot[P-C3H4]/d[H]
  // d()/d[C3H3]
  dqdci = -k_r * sc[4];
  J[1108] += dqdci; // dwdot[H2]/d[C3H3]
  J[1109] -= dqdci; // dwdot[H]/d[C3H3]
  J[1127] += dqdci; // dwdot[C3H3]/d[C3H3]
  J[1131] -= dqdci; // dwdot[P-C3H4]/d[C3H3]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[5];
  J[1300] += dqdci; // dwdot[H2]/d[P-C3H4]
  J[1301] -= dqdci; // dwdot[H]/d[P-C3H4]
  J[1319] += dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 132: OH + P-C3H4 => C3H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[27];
  k_f = 0.805 * exp(2.22 * tc[0] - (372.843292028033) * invT);
  dlnkfdT = 2.22 * invT + (372.843292028033) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[23] += q; // C3H3
  wdot[27] -= q; // P-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[311] += dqdci; // dwdot[C3H3]/d[OH]
  J[315] -= dqdci; // dwdot[P-C3H4]/d[OH]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[6];
  J[1302] -= dqdci; // dwdot[OH]/d[P-C3H4]
  J[1303] += dqdci; // dwdot[H2O]/d[P-C3H4]
  J[1319] += dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 133: CH3 + P-C3H4 => C3H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[27];
  k_f = 422000000 * exp(-(11199.6957896497) * invT);
  dlnkfdT = (11199.6957896497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[23] += q; // C3H3
  wdot[27] -= q; // P-C3H4
  // d()/d[CH3]
  dqdci = +k_f * sc[27];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[695] += dqdci; // dwdot[C3H3]/d[CH3]
  J[699] -= dqdci; // dwdot[P-C3H4]/d[CH3]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[14];
  J[1310] -= dqdci; // dwdot[CH3]/d[P-C3H4]
  J[1312] += dqdci; // dwdot[CH4]/d[P-C3H4]
  J[1319] += dqdci; // dwdot[C3H3]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 134: O + P-C3H4 => CH3 + HCCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 4.05 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[14] += q; // CH3
  wdot[21] += q; // HCCO
  wdot[27] -= q; // P-C3H4
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[158] += dqdci; // dwdot[CH3]/d[O]
  J[165] += dqdci; // dwdot[HCCO]/d[O]
  J[171] -= dqdci; // dwdot[P-C3H4]/d[O]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[3];
  J[1299] -= dqdci; // dwdot[O]/d[P-C3H4]
  J[1310] += dqdci; // dwdot[CH3]/d[P-C3H4]
  J[1317] += dqdci; // dwdot[HCCO]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2277] += dqdT; // dwdot[HCCO]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 135: O + P-C3H4 => C2H4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[27];
  k_f = 6.25 * exp(2 * tc[0] - (956.161986695548) * invT);
  dlnkfdT = 2 * invT + (956.161986695548) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[18] += q; // C2H4
  wdot[27] -= q; // P-C3H4
  // d()/d[O]
  dqdci = +k_f * sc[27];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[162] += dqdci; // dwdot[C2H4]/d[O]
  J[171] -= dqdci; // dwdot[P-C3H4]/d[O]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[3];
  J[1299] -= dqdci; // dwdot[O]/d[P-C3H4]
  J[1307] += dqdci; // dwdot[CO]/d[P-C3H4]
  J[1314] += dqdci; // dwdot[C2H4]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 136: OH + P-C3H4 => C2H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[27];
  k_f = 1280 * exp(0.73 * tc[0] - (1297.73036294382) * invT);
  dlnkfdT = 0.73 * invT + (1297.73036294382) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[19] += q; // C2H5
  wdot[27] -= q; // P-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[27];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[307] += dqdci; // dwdot[C2H5]/d[OH]
  J[315] -= dqdci; // dwdot[P-C3H4]/d[OH]
  // d()/d[P-C3H4]
  dqdci = +k_f * sc[6];
  J[1302] -= dqdci; // dwdot[OH]/d[P-C3H4]
  J[1307] += dqdci; // dwdot[CO]/d[P-C3H4]
  J[1315] += dqdci; // dwdot[C2H5]/d[P-C3H4]
  J[1323] -= dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2283] -= dqdT; // dwdot[P-C3H4]/dT

  // reaction 137: A-C3H4 + H <=> C2H2 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 89500000 * exp(-0.02 * tc[0] - (5661.1874903031) * invT);
  dlnkfdT = -0.02 * invT + (5661.1874903031) * invT2;
  // reverse
  phi_r = sc[14] * sc[22];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[22] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[28]) + (h_RT[14] + h_RT[22]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[22] += q; // C2H2
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[22];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[694] += dqdci; // dwdot[C2H2]/d[CH3]
  J[700] -= dqdci; // dwdot[A-C3H4]/d[CH3]
  // d()/d[C2H2]
  dqdci = -k_r * sc[14];
  J[1061] -= dqdci; // dwdot[H]/d[C2H2]
  J[1070] += dqdci; // dwdot[CH3]/d[C2H2]
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[1084] -= dqdci; // dwdot[A-C3H4]/d[C2H2]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1358] += dqdci; // dwdot[CH3]/d[A-C3H4]
  J[1366] += dqdci; // dwdot[C2H2]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 138: A-C3H4 <=> P-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[28];
  k_f = 7.76e+39 * exp(-7.8 * tc[0] - (39475.5660453833) * invT);
  dlnkfdT = -7.8 * invT + (39475.5660453833) * invT2;
  // reverse
  phi_r = sc[27];
  Kc = exp(-g_RT[27] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[28]) + (h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[27] += q; // P-C3H4
  wdot[28] -= q; // A-C3H4
  // d()/d[P-C3H4]
  dqdci = -k_r;
  J[1323] += dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  J[1324] -= dqdci; // dwdot[A-C3H4]/d[P-C3H4]
  // d()/d[A-C3H4]
  dqdci = +k_f;
  J[1371] += dqdci; // dwdot[P-C3H4]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2283] += dqdT; // dwdot[P-C3H4]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 139: A-C3H4 + H <=> H + P-C3H4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 2470000000 * exp(-0.33 * tc[0] - (3238.91381211881) * invT);
  dlnkfdT = -0.33 * invT + (3238.91381211881) * invT2;
  // reverse
  phi_r = sc[5] * sc[27];
  Kc = exp(g_RT[5] - g_RT[5] - g_RT[27] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[28]) + (h_RT[5] + h_RT[27]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[27] += q; // P-C3H4
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28] - k_r * sc[27];
  J[267] += dqdci; // dwdot[P-C3H4]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[P-C3H4]
  dqdci = -k_r * sc[5];
  J[1323] += dqdci; // dwdot[P-C3H4]/d[P-C3H4]
  J[1324] -= dqdci; // dwdot[A-C3H4]/d[P-C3H4]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1371] += dqdci; // dwdot[P-C3H4]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2283] += dqdT; // dwdot[P-C3H4]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 140: A-C3H4 + H => C3H3 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 1.33 * exp(2.53 * tc[0] - (6159.11031678355) * invT);
  dlnkfdT = 2.53 * invT + (6159.11031678355) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[23] += q; // C3H3
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[263] += dqdci; // dwdot[C3H3]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1348] += dqdci; // dwdot[H2]/d[A-C3H4]
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1367] += dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 141: A-C3H4 + OH => C3H3 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[28];
  k_f = 1.31e-07 * exp(4.2 * tc[0] - (-432.977683591697) * invT);
  dlnkfdT = 4.2 * invT + (-432.977683591697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[23] += q; // C3H3
  wdot[28] -= q; // A-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[28];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[311] += dqdci; // dwdot[C3H3]/d[OH]
  J[316] -= dqdci; // dwdot[A-C3H4]/d[OH]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[6];
  J[1350] -= dqdci; // dwdot[OH]/d[A-C3H4]
  J[1351] += dqdci; // dwdot[H2O]/d[A-C3H4]
  J[1367] += dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 142: A-C3H4 + CH3 => C3H3 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[28];
  k_f = 0.227 * exp(2 * tc[0] - (4629.25617023733) * invT);
  dlnkfdT = 2 * invT + (4629.25617023733) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[23] += q; // C3H3
  wdot[28] -= q; // A-C3H4
  // d()/d[CH3]
  dqdci = +k_f * sc[28];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[695] += dqdci; // dwdot[C3H3]/d[CH3]
  J[700] -= dqdci; // dwdot[A-C3H4]/d[CH3]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[14];
  J[1358] -= dqdci; // dwdot[CH3]/d[A-C3H4]
  J[1360] += dqdci; // dwdot[CH4]/d[A-C3H4]
  J[1367] += dqdci; // dwdot[C3H3]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2279] += dqdT; // dwdot[C3H3]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 143: A-C3H4 + H <=> A-C3H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[28];
  k_f = 2.01e+43 * exp(-10.77 * tc[0] - (9874.30360658656) * invT);
  dlnkfdT = -10.77 * invT + (9874.30360658656) * invT2;
  // reverse
  phi_r = sc[24];
  Kc = refCinv * exp(g_RT[5] - g_RT[24] + g_RT[28]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[28]) + (h_RT[24]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[24] += q; // A-C3H5
  wdot[28] -= q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[28];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  J[268] -= dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[A-C3H5]
  dqdci = -k_r;
  J[1157] -= dqdci; // dwdot[H]/d[A-C3H5]
  J[1176] += dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] -= dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/d[A-C3H4]
  dqdci = +k_f * sc[5];
  J[1349] -= dqdci; // dwdot[H]/d[A-C3H4]
  J[1368] += dqdci; // dwdot[A-C3H5]/d[A-C3H4]
  J[1372] -= dqdci; // dwdot[A-C3H4]/d[A-C3H4]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2284] -= dqdT; // dwdot[A-C3H4]/dT

  // reaction 144: A-C3H5 + H => A-C3H4 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 0.00956 * exp(2.8 * tc[0] - (1656.14140099657) * invT);
  dlnkfdT = 2.8 * invT + (1656.14140099657) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[24] -= q; // A-C3H5
  wdot[28] += q; // A-C3H4
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] -= dqdci; // dwdot[A-C3H5]/d[H]
  J[268] += dqdci; // dwdot[A-C3H4]/d[H]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[5];
  J[1156] += dqdci; // dwdot[H2]/d[A-C3H5]
  J[1157] -= dqdci; // dwdot[H]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] += dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 145: A-C3H5 + OH => A-C3H4 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[24];
  k_f = 6030000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[24] -= q; // A-C3H5
  wdot[28] += q; // A-C3H4
  // d()/d[OH]
  dqdci = +k_f * sc[24];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[312] -= dqdci; // dwdot[A-C3H5]/d[OH]
  J[316] += dqdci; // dwdot[A-C3H4]/d[OH]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[6];
  J[1158] -= dqdci; // dwdot[OH]/d[A-C3H5]
  J[1159] += dqdci; // dwdot[H2O]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] += dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 146: A-C3H5 + CH3 => A-C3H4 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[24];
  k_f = 486000 * exp(-0.32 * tc[0] - (-66.1478307200304) * invT);
  dlnkfdT = -0.32 * invT + (-66.1478307200304) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[24] -= q; // A-C3H5
  wdot[28] += q; // A-C3H4
  // d()/d[CH3]
  dqdci = +k_f * sc[24];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[696] -= dqdci; // dwdot[A-C3H5]/d[CH3]
  J[700] += dqdci; // dwdot[A-C3H4]/d[CH3]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[14];
  J[1166] -= dqdci; // dwdot[CH3]/d[A-C3H5]
  J[1168] += dqdci; // dwdot[CH4]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1180] += dqdci; // dwdot[A-C3H4]/d[A-C3H5]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2284] += dqdT; // dwdot[A-C3H4]/dT

  // reaction 147: A-C3H5 + O2 => C2H2 + CH2O + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[24];
  k_f = 971000000000000 * exp(-2.7 * tc[0] - (12570.7951424678) * invT);
  dlnkfdT = -2.7 * invT + (12570.7951424678) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[8] -= q;  // O2
  wdot[13] += q; // CH2O
  wdot[22] += q; // C2H2
  wdot[24] -= q; // A-C3H5
  // d()/d[O2]
  dqdci = +k_f * sc[24];
  J[390] += dqdci; // dwdot[OH]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[397] += dqdci; // dwdot[CH2O]/d[O2]
  J[406] += dqdci; // dwdot[C2H2]/d[O2]
  J[408] -= dqdci; // dwdot[A-C3H5]/d[O2]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[8];
  J[1158] += dqdci; // dwdot[OH]/d[A-C3H5]
  J[1160] -= dqdci; // dwdot[O2]/d[A-C3H5]
  J[1165] += dqdci; // dwdot[CH2O]/d[A-C3H5]
  J[1174] += dqdci; // dwdot[C2H2]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2269] += dqdT; // dwdot[CH2O]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT

  // reaction 148: A-C3H5 + C3H3 => A1 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23] * sc[24];
  k_f = 2.16e+33 * exp(-7.74 * tc[0] - (12003.1113896068) * invT);
  dlnkfdT = -7.74 * invT + (12003.1113896068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += 2 * q; // H
  wdot[23] -= q;    // C3H3
  wdot[24] -= q;    // A-C3H5
  wdot[29] += q;    // A1
  // d()/d[C3H3]
  dqdci = +k_f * sc[24];
  J[1109] += 2 * dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci;     // dwdot[C3H3]/d[C3H3]
  J[1128] -= dqdci;     // dwdot[A-C3H5]/d[C3H3]
  J[1133] += dqdci;     // dwdot[A1]/d[C3H3]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[23];
  J[1157] += 2 * dqdci; // dwdot[H]/d[A-C3H5]
  J[1175] -= dqdci;     // dwdot[C3H3]/d[A-C3H5]
  J[1176] -= dqdci;     // dwdot[A-C3H5]/d[A-C3H5]
  J[1181] += dqdci;     // dwdot[A1]/d[A-C3H5]
  // d()/dT
  J[2261] += 2 * dqdT; // dwdot[H]/dT
  J[2279] -= dqdT;     // dwdot[C3H3]/dT
  J[2280] -= dqdT;     // dwdot[A-C3H5]/dT
  J[2285] += dqdT;     // dwdot[A1]/dT

  // reaction 150: C3H6 <=> C2H3 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[32];
  k_f = 4.04e+42 * exp(-7.67 * tc[0] - (56275.1122459411) * invT);
  dlnkfdT = -7.67 * invT + (56275.1122459411) * invT2;
  // reverse
  phi_r = sc[14] * sc[17];
  Kc = refC * exp(-g_RT[14] - g_RT[17] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[32]) + (h_RT[14] + h_RT[17]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] += q; // CH3
  wdot[17] += q; // C2H3
  wdot[32] -= q; // C3H6
  // d()/d[CH3]
  dqdci = -k_r * sc[17];
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[689] += dqdci; // dwdot[C2H3]/d[CH3]
  J[704] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H3]
  dqdci = -k_r * sc[14];
  J[830] += dqdci; // dwdot[CH3]/d[C2H3]
  J[833] += dqdci; // dwdot[C2H3]/d[C2H3]
  J[848] -= dqdci; // dwdot[C3H6]/d[C2H3]
  // d()/d[C3H6]
  dqdci = +k_f;
  J[1550] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1553] += dqdci; // dwdot[C2H3]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 151: A-C3H5 + H <=> C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[24];
  k_f = 5.93e+48 * exp(-11.76 * tc[0] - (11850.3700350351) * invT);
  dlnkfdT = -11.76 * invT + (11850.3700350351) * invT2;
  // reverse
  phi_r = sc[32];
  Kc = refCinv * exp(g_RT[5] + g_RT[24] - g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[24]) + (h_RT[32]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[24] -= q; // A-C3H5
  wdot[32] += q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[24];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] -= dqdci; // dwdot[A-C3H5]/d[H]
  J[272] += dqdci; // dwdot[C3H6]/d[H]
  // d()/d[A-C3H5]
  dqdci = +k_f * sc[5];
  J[1157] -= dqdci; // dwdot[H]/d[A-C3H5]
  J[1176] -= dqdci; // dwdot[A-C3H5]/d[A-C3H5]
  J[1184] += dqdci; // dwdot[C3H6]/d[A-C3H5]
  // d()/d[C3H6]
  dqdci = -k_r;
  J[1541] -= dqdci; // dwdot[H]/d[C3H6]
  J[1560] -= dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] += dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] -= dqdT; // dwdot[A-C3H5]/dT
  J[2288] += dqdT; // dwdot[C3H6]/dT

  // reaction 152: C3H6 + H <=> C2H4 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[32];
  k_f = 8e+15 * exp(-2.39 * tc[0] - (5626.30954319617) * invT);
  dlnkfdT = -2.39 * invT + (5626.30954319617) * invT2;
  // reverse
  phi_r = sc[14] * sc[18];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[18] + g_RT[32]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[32]) + (h_RT[14] + h_RT[18]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[18] += q; // C2H4
  wdot[32] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[258] += dqdci; // dwdot[C2H4]/d[H]
  J[272] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[18];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[690] += dqdci; // dwdot[C2H4]/d[CH3]
  J[704] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C2H4]
  dqdci = -k_r * sc[14];
  J[869] -= dqdci; // dwdot[H]/d[C2H4]
  J[878] += dqdci; // dwdot[CH3]/d[C2H4]
  J[882] += dqdci; // dwdot[C2H4]/d[C2H4]
  J[896] -= dqdci; // dwdot[C3H6]/d[C2H4]
  // d()/d[C3H6]
  dqdci = +k_f * sc[5];
  J[1541] -= dqdci; // dwdot[H]/d[C3H6]
  J[1550] += dqdci; // dwdot[CH3]/d[C3H6]
  J[1554] += dqdci; // dwdot[C2H4]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 153: C3H6 + O => 2 CH3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[32];
  k_f = 120 * exp(1.6 * tc[0] - (164.773265051097) * invT);
  dlnkfdT = 1.6 * invT + (164.773265051097) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;      // O
  wdot[11] += q;     // CO
  wdot[14] += 2 * q; // CH3
  wdot[32] -= q;     // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[32];
  J[147] -= dqdci;     // dwdot[O]/d[O]
  J[155] += dqdci;     // dwdot[CO]/d[O]
  J[158] += 2 * dqdci; // dwdot[CH3]/d[O]
  J[176] -= dqdci;     // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1539] -= dqdci;     // dwdot[O]/d[C3H6]
  J[1547] += dqdci;     // dwdot[CO]/d[C3H6]
  J[1550] += 2 * dqdci; // dwdot[CH3]/d[C3H6]
  J[1568] -= dqdci;     // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2259] -= dqdT;     // dwdot[O]/dT
  J[2267] += dqdT;     // dwdot[CO]/dT
  J[2270] += 2 * dqdT; // dwdot[CH3]/dT
  J[2288] -= dqdT;     // dwdot[C3H6]/dT

  // reaction 154: C3H6 + O => C2H5 + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[32];
  k_f = 35 * exp(1.6 * tc[0] - (-489.504011661541) * invT);
  dlnkfdT = 1.6 * invT + (-489.504011661541) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[12] += q; // HCO
  wdot[19] += q; // C2H5
  wdot[32] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[32];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[156] += dqdci; // dwdot[HCO]/d[O]
  J[163] += dqdci; // dwdot[C2H5]/d[O]
  J[176] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1539] -= dqdci; // dwdot[O]/d[C3H6]
  J[1548] += dqdci; // dwdot[HCO]/d[C3H6]
  J[1555] += dqdci; // dwdot[C2H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 155: C3H6 + H => A-C3H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[32];
  k_f = 0.66 * exp(2.54 * tc[0] - (3400.07901367609) * invT);
  dlnkfdT = 2.54 * invT + (3400.07901367609) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[H]
  dqdci = +k_f * sc[32];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  J[272] -= dqdci; // dwdot[C3H6]/d[H]
  // d()/d[C3H6]
  dqdci = +k_f * sc[5];
  J[1540] += dqdci; // dwdot[H2]/d[C3H6]
  J[1541] -= dqdci; // dwdot[H]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 156: C3H6 + O => A-C3H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[32];
  k_f = 0.0965 * exp(2.68 * tc[0] - (1870.22486712987) * invT);
  dlnkfdT = 2.68 * invT + (1870.22486712987) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[O]
  dqdci = +k_f * sc[32];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[168] += dqdci; // dwdot[A-C3H5]/d[O]
  J[176] -= dqdci; // dwdot[C3H6]/d[O]
  // d()/d[C3H6]
  dqdci = +k_f * sc[3];
  J[1539] -= dqdci; // dwdot[O]/d[C3H6]
  J[1542] += dqdci; // dwdot[OH]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 157: C3H6 + OH => A-C3H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[32];
  k_f = 200 * exp(1.46 * tc[0] - (270.609794203146) * invT);
  dlnkfdT = 1.46 * invT + (270.609794203146) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[OH]
  dqdci = +k_f * sc[32];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[312] += dqdci; // dwdot[A-C3H5]/d[OH]
  J[320] -= dqdci; // dwdot[C3H6]/d[OH]
  // d()/d[C3H6]
  dqdci = +k_f * sc[6];
  J[1542] -= dqdci; // dwdot[OH]/d[C3H6]
  J[1543] += dqdci; // dwdot[H2O]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 158: C3H6 + CH3 => A-C3H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[32];
  k_f = 4.52e-07 * exp(3.65 * tc[0] - (3599.73022583411) * invT);
  dlnkfdT = 3.65 * invT + (3599.73022583411) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[24] += q; // A-C3H5
  wdot[32] -= q; // C3H6
  // d()/d[CH3]
  dqdci = +k_f * sc[32];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[696] += dqdci; // dwdot[A-C3H5]/d[CH3]
  J[704] -= dqdci; // dwdot[C3H6]/d[CH3]
  // d()/d[C3H6]
  dqdci = +k_f * sc[14];
  J[1550] -= dqdci; // dwdot[CH3]/d[C3H6]
  J[1552] += dqdci; // dwdot[CH4]/d[C3H6]
  J[1560] += dqdci; // dwdot[A-C3H5]/d[C3H6]
  J[1568] -= dqdci; // dwdot[C3H6]/d[C3H6]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2288] -= dqdT; // dwdot[C3H6]/dT

  // reaction 159: C4H8 + H => C2H4 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[33];
  k_f = 7680000 * exp(0.11 * tc[0] - (744.483896224792) * invT);
  dlnkfdT = 0.11 * invT + (744.483896224792) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // H
  wdot[18] += q; // C2H4
  wdot[19] += q; // C2H5
  wdot[33] -= q; // C4H8
  // d()/d[H]
  dqdci = +k_f * sc[33];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[258] += dqdci; // dwdot[C2H4]/d[H]
  J[259] += dqdci; // dwdot[C2H5]/d[H]
  J[273] -= dqdci; // dwdot[C4H8]/d[H]
  // d()/d[C4H8]
  dqdci = +k_f * sc[5];
  J[1589] -= dqdci; // dwdot[H]/d[C4H8]
  J[1602] += dqdci; // dwdot[C2H4]/d[C4H8]
  J[1603] += dqdci; // dwdot[C2H5]/d[C4H8]
  J[1617] -= dqdci; // dwdot[C4H8]/d[C4H8]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2289] -= dqdT; // dwdot[C4H8]/dT

  // reaction 160: C4H8 => A-C3H5 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[33];
  k_f = 5e+15 * exp(-(35727.9001841359) * invT);
  dlnkfdT = (35727.9001841359) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] += q; // CH3
  wdot[24] += q; // A-C3H5
  wdot[33] -= q; // C4H8
  // d()/d[C4H8]
  dqdci = +k_f;
  J[1598] += dqdci; // dwdot[CH3]/d[C4H8]
  J[1608] += dqdci; // dwdot[A-C3H5]/d[C4H8]
  J[1617] -= dqdci; // dwdot[C4H8]/d[C4H8]
  // d()/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2289] -= dqdT; // dwdot[C4H8]/dT

  // reaction 161: C5H5 + HO2 => C5H6 + O2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[31];
  k_f = 2561000 * exp(0.06 * tc[0] - (1568.34015714696) * invT);
  dlnkfdT = 0.06 * invT + (1568.34015714696) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[8] += q;  // O2
  wdot[9] -= q;  // HO2
  wdot[31] -= q; // C5H5
  wdot[34] += q; // C5H6
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[440] += dqdci; // dwdot[O2]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[463] -= dqdci; // dwdot[C5H5]/d[HO2]
  J[466] += dqdci; // dwdot[C5H6]/d[HO2]
  // d()/d[C5H5]
  dqdci = +k_f * sc[9];
  J[1496] += dqdci; // dwdot[O2]/d[C5H5]
  J[1497] -= dqdci; // dwdot[HO2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  J[1522] += dqdci; // dwdot[C5H6]/d[C5H5]
  // d()/dT
  J[2264] += dqdT; // dwdot[O2]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT
  J[2290] += dqdT; // dwdot[C5H6]/dT

  // reaction 162: 2 C5H5 => A2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = (sc[31] * sc[31]);
  k_f = 6.39e+23 * exp(-4.03 * tc[0] - (17716.0144566547) * invT);
  dlnkfdT = -4.03 * invT + (17716.0144566547) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += 2 * q;  // H
  wdot[31] -= 2 * q; // C5H5
  wdot[35] += q;     // A2
  // d()/d[C5H5]
  dqdci = +k_f * 2.000000 * sc[31];
  J[1493] += 2 * dqdci;  // dwdot[H]/d[C5H5]
  J[1519] += -2 * dqdci; // dwdot[C5H5]/d[C5H5]
  J[1523] += dqdci;      // dwdot[A2]/d[C5H5]
  // d()/dT
  J[2261] += 2 * dqdT;  // dwdot[H]/dT
  J[2287] += -2 * dqdT; // dwdot[C5H5]/dT
  J[2291] += dqdT;      // dwdot[A2]/dT

  // reaction 163: C5H5 + O => C2H2 + C2H3 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[31];
  k_f = 70000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[22] += q; // C2H2
  wdot[31] -= q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[31];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[161] += dqdci; // dwdot[C2H3]/d[O]
  J[166] += dqdci; // dwdot[C2H2]/d[O]
  J[175] -= dqdci; // dwdot[C5H5]/d[O]
  // d()/d[C5H5]
  dqdci = +k_f * sc[3];
  J[1491] -= dqdci; // dwdot[O]/d[C5H5]
  J[1499] += dqdci; // dwdot[CO]/d[C5H5]
  J[1505] += dqdci; // dwdot[C2H3]/d[C5H5]
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT

  // reaction 164: C5H5 + HO2 => C2H2 + C2H3 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[31];
  k_f = 6.776e+23 * exp(-4.7 * tc[0] - (5866.85214161749) * invT);
  dlnkfdT = -4.7 * invT + (5866.85214161749) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[22] += q; // C2H2
  wdot[31] -= q; // C5H5
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] += dqdci; // dwdot[CO]/d[HO2]
  J[449] += dqdci; // dwdot[C2H3]/d[HO2]
  J[454] += dqdci; // dwdot[C2H2]/d[HO2]
  J[463] -= dqdci; // dwdot[C5H5]/d[HO2]
  // d()/d[C5H5]
  dqdci = +k_f * sc[9];
  J[1494] += dqdci; // dwdot[OH]/d[C5H5]
  J[1497] -= dqdci; // dwdot[HO2]/d[C5H5]
  J[1499] += dqdci; // dwdot[CO]/d[C5H5]
  J[1505] += dqdci; // dwdot[C2H3]/d[C5H5]
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT

  // reaction 165: C5H5 + HO2 => 2 C2H2 + CO + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[31];
  k_f = 1.19e+27 * exp(-6.52 * tc[0] - (6743.63169928234) * invT);
  dlnkfdT = -6.52 * invT + (6743.63169928234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[7] += q;      // H2O
  wdot[9] -= q;      // HO2
  wdot[11] += q;     // CO
  wdot[22] += 2 * q; // C2H2
  wdot[31] -= q;     // C5H5
  // d()/d[HO2]
  dqdci = +k_f * sc[31];
  J[439] += dqdci;     // dwdot[H2O]/d[HO2]
  J[441] -= dqdci;     // dwdot[HO2]/d[HO2]
  J[443] += dqdci;     // dwdot[CO]/d[HO2]
  J[454] += 2 * dqdci; // dwdot[C2H2]/d[HO2]
  J[463] -= dqdci;     // dwdot[C5H5]/d[HO2]
  // d()/d[C5H5]
  dqdci = +k_f * sc[9];
  J[1495] += dqdci;     // dwdot[H2O]/d[C5H5]
  J[1497] -= dqdci;     // dwdot[HO2]/d[C5H5]
  J[1499] += dqdci;     // dwdot[CO]/d[C5H5]
  J[1510] += 2 * dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci;     // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2263] += dqdT;     // dwdot[H2O]/dT
  J[2265] -= dqdT;     // dwdot[HO2]/dT
  J[2267] += dqdT;     // dwdot[CO]/dT
  J[2278] += 2 * dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT;     // dwdot[C5H5]/dT

  // reaction 166: C5H5 + OH => C2H2 + C2H3 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[31];
  k_f = 30200000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[17] += q; // C2H3
  wdot[22] += q; // C2H2
  wdot[31] -= q; // C5H5
  // d()/d[OH]
  dqdci = +k_f * sc[31];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[305] += dqdci; // dwdot[C2H3]/d[OH]
  J[310] += dqdci; // dwdot[C2H2]/d[OH]
  J[319] -= dqdci; // dwdot[C5H5]/d[OH]
  // d()/d[C5H5]
  dqdci = +k_f * sc[6];
  J[1493] += dqdci; // dwdot[H]/d[C5H5]
  J[1494] -= dqdci; // dwdot[OH]/d[C5H5]
  J[1499] += dqdci; // dwdot[CO]/d[C5H5]
  J[1505] += dqdci; // dwdot[C2H3]/d[C5H5]
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] -= dqdci; // dwdot[C5H5]/d[C5H5]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2273] += dqdT; // dwdot[C2H3]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] -= dqdT; // dwdot[C5H5]/dT

  // reaction 167: C5H6 <=> C5H5 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[34];
  k_f = 1.73e+68 * exp(-15.16 * tc[0] - (58560.2744791936) * invT);
  dlnkfdT = -15.16 * invT + (58560.2744791936) * invT2;
  // reverse
  phi_r = sc[5] * sc[31];
  Kc = refC * exp(-g_RT[5] - g_RT[31] + g_RT[34]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[34]) + (h_RT[5] + h_RT[31]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[H]
  dqdci = -k_r * sc[31];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[271] += dqdci; // dwdot[C5H5]/d[H]
  J[274] -= dqdci; // dwdot[C5H6]/d[H]
  // d()/d[C5H5]
  dqdci = -k_r * sc[5];
  J[1493] += dqdci; // dwdot[H]/d[C5H5]
  J[1519] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1522] -= dqdci; // dwdot[C5H6]/d[C5H5]
  // d()/d[C5H6]
  dqdci = +k_f;
  J[1637] += dqdci; // dwdot[H]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 168: C5H6 + H => C5H5 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[34];
  k_f = 28000000 * exp(-(1136.56516138654) * invT);
  dlnkfdT = (1136.56516138654) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[271] += dqdci; // dwdot[C5H5]/d[H]
  J[274] -= dqdci; // dwdot[C5H6]/d[H]
  // d()/d[C5H6]
  dqdci = +k_f * sc[5];
  J[1636] += dqdci; // dwdot[H2]/d[C5H6]
  J[1637] -= dqdci; // dwdot[H]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 169: C5H6 + H => A-C3H5 + C2H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[34];
  k_f = 660000000 * exp(-(6212.03361352623) * invT);
  dlnkfdT = (6212.03361352623) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // H
  wdot[22] += q; // C2H2
  wdot[24] += q; // A-C3H5
  wdot[34] -= q; // C5H6
  // d()/d[H]
  dqdci = +k_f * sc[34];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[262] += dqdci; // dwdot[C2H2]/d[H]
  J[264] += dqdci; // dwdot[A-C3H5]/d[H]
  J[274] -= dqdci; // dwdot[C5H6]/d[H]
  // d()/d[C5H6]
  dqdci = +k_f * sc[5];
  J[1637] -= dqdci; // dwdot[H]/d[C5H6]
  J[1654] += dqdci; // dwdot[C2H2]/d[C5H6]
  J[1656] += dqdci; // dwdot[A-C3H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 170: C5H6 + O => C5H5 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[34];
  k_f = 0.0477 * exp(2.71 * tc[0] - (556.859562379503) * invT);
  dlnkfdT = 2.71 * invT + (556.859562379503) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[O]
  dqdci = +k_f * sc[34];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[175] += dqdci; // dwdot[C5H5]/d[O]
  J[178] -= dqdci; // dwdot[C5H6]/d[O]
  // d()/d[C5H6]
  dqdci = +k_f * sc[3];
  J[1635] -= dqdci; // dwdot[O]/d[C5H6]
  J[1638] += dqdci; // dwdot[OH]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 171: C5H6 + OH => C5H5 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[34];
  k_f = 3.08 * exp(2 * tc[0]);
  dlnkfdT = 2 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[OH]
  dqdci = +k_f * sc[34];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[319] += dqdci; // dwdot[C5H5]/d[OH]
  J[322] -= dqdci; // dwdot[C5H6]/d[OH]
  // d()/d[C5H6]
  dqdci = +k_f * sc[6];
  J[1638] -= dqdci; // dwdot[OH]/d[C5H6]
  J[1639] += dqdci; // dwdot[H2O]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 172: C5H6 + CH3 => C5H5 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[34];
  k_f = 1.8e-07 * exp(4 * tc[0]);
  dlnkfdT = 4 * invT;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[31] += q; // C5H5
  wdot[34] -= q; // C5H6
  // d()/d[CH3]
  dqdci = +k_f * sc[34];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[703] += dqdci; // dwdot[C5H5]/d[CH3]
  J[706] -= dqdci; // dwdot[C5H6]/d[CH3]
  // d()/d[C5H6]
  dqdci = +k_f * sc[14];
  J[1646] -= dqdci; // dwdot[CH3]/d[C5H6]
  J[1648] += dqdci; // dwdot[CH4]/d[C5H6]
  J[1663] += dqdci; // dwdot[C5H5]/d[C5H6]
  J[1666] -= dqdci; // dwdot[C5H6]/d[C5H6]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2290] -= dqdT; // dwdot[C5H6]/dT

  // reaction 173: C5H10 + H => C5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[36];
  k_f = 7100000 * exp(0.12 * tc[0] - (734.862393574606) * invT);
  dlnkfdT = 0.12 * invT + (734.862393574606) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] -= q;  // H
  wdot[36] -= q; // C5H10
  wdot[37] += q; // C5H11
  // d()/d[H]
  dqdci = +k_f * sc[36];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[276] -= dqdci; // dwdot[C5H10]/d[H]
  J[277] += dqdci; // dwdot[C5H11]/d[H]
  // d()/d[C5H10]
  dqdci = +k_f * sc[5];
  J[1733] -= dqdci; // dwdot[H]/d[C5H10]
  J[1764] -= dqdci; // dwdot[C5H10]/d[C5H10]
  J[1765] += dqdci; // dwdot[C5H11]/d[C5H10]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2292] -= dqdT; // dwdot[C5H10]/dT
  J[2293] += dqdT; // dwdot[C5H11]/dT

  // reaction 174: C5H10 => A-C3H5 + C2H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[36];
  k_f = 9.17e+20 * exp(-1.63 * tc[0] - (37232.5029183921) * invT);
  dlnkfdT = -1.63 * invT + (37232.5029183921) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[24] += q; // A-C3H5
  wdot[36] -= q; // C5H10
  // d()/d[C5H10]
  dqdci = +k_f;
  J[1747] += dqdci; // dwdot[C2H5]/d[C5H10]
  J[1752] += dqdci; // dwdot[A-C3H5]/d[C5H10]
  J[1764] -= dqdci; // dwdot[C5H10]/d[C5H10]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2280] += dqdT; // dwdot[A-C3H5]/dT
  J[2292] -= dqdT; // dwdot[C5H10]/dT

  // reaction 175: C5H11 => C2H4 + N-C3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 7.46e+21 * exp(-2.61 * tc[0] - (16116.4044158946) * invT);
  dlnkfdT = -2.61 * invT + (16116.4044158946) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[25] += q; // N-C3H7
  wdot[37] -= q; // C5H11
  // d()/d[C5H11]
  dqdci = +k_f;
  J[1794] += dqdci; // dwdot[C2H4]/d[C5H11]
  J[1801] += dqdci; // dwdot[N-C3H7]/d[C5H11]
  J[1813] -= dqdci; // dwdot[C5H11]/d[C5H11]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2293] -= dqdT; // dwdot[C5H11]/dT

  // reaction 176: C5H11 => C5H10 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 846000000000000 * exp(-0.47 * tc[0] - (18929.5566714094) * invT);
  dlnkfdT = -0.47 * invT + (18929.5566714094) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[36] += q; // C5H10
  wdot[37] -= q; // C5H11
  // d()/d[C5H11]
  dqdci = +k_f;
  J[1781] += dqdci; // dwdot[H]/d[C5H11]
  J[1812] += dqdci; // dwdot[C5H10]/d[C5H11]
  J[1813] -= dqdci; // dwdot[C5H11]/d[C5H11]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2292] += dqdT; // dwdot[C5H10]/dT
  J[2293] -= dqdT; // dwdot[C5H11]/dT

  // reaction 177: C5H11 => C2H5 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[37];
  k_f = 3.15e-19 * exp(8.84 * tc[0] - (3575.67646920865) * invT);
  dlnkfdT = 8.84 * invT + (3575.67646920865) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[32] += q; // C3H6
  wdot[37] -= q; // C5H11
  // d()/d[C5H11]
  dqdci = +k_f;
  J[1795] += dqdci; // dwdot[C2H5]/d[C5H11]
  J[1808] += dqdci; // dwdot[C3H6]/d[C5H11]
  J[1813] -= dqdci; // dwdot[C5H11]/d[C5H11]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2288] += dqdT; // dwdot[C3H6]/dT
  J[2293] -= dqdT; // dwdot[C5H11]/dT

  // reaction 178: A1- + O2 => C5H5 + CO + O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 26000000 * exp(-(3080.15901839074) * invT);
  dlnkfdT = (3080.15901839074) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] += q;  // O
  wdot[8] -= q;  // O2
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[31] += q; // C5H5
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[387] += dqdci; // dwdot[O]/d[O2]
  J[392] -= dqdci; // dwdot[O2]/d[O2]
  J[395] += dqdci; // dwdot[CO]/d[O2]
  J[414] -= dqdci; // dwdot[A1-]/d[O2]
  J[415] += dqdci; // dwdot[C5H5]/d[O2]
  // d()/d[A1-]
  dqdci = +k_f * sc[8];
  J[1443] += dqdci; // dwdot[O]/d[A1-]
  J[1448] -= dqdci; // dwdot[O2]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1471] += dqdci; // dwdot[C5H5]/d[A1-]
  // d()/dT
  J[2259] += dqdT; // dwdot[O]/dT
  J[2264] -= dqdT; // dwdot[O2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 179: A1- + O2 => 2 C2H2 + 2 CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[8] * sc[30];
  k_f = 30000000 * exp(-(4518.60888976019) * invT);
  dlnkfdT = (4518.60888976019) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;      // H
  wdot[8] -= q;      // O2
  wdot[11] += 2 * q; // CO
  wdot[22] += 2 * q; // C2H2
  wdot[30] -= q;     // A1-
  // d()/d[O2]
  dqdci = +k_f * sc[30];
  J[389] += dqdci;     // dwdot[H]/d[O2]
  J[392] -= dqdci;     // dwdot[O2]/d[O2]
  J[395] += 2 * dqdci; // dwdot[CO]/d[O2]
  J[406] += 2 * dqdci; // dwdot[C2H2]/d[O2]
  J[414] -= dqdci;     // dwdot[A1-]/d[O2]
  // d()/d[A1-]
  dqdci = +k_f * sc[8];
  J[1445] += dqdci;     // dwdot[H]/d[A1-]
  J[1448] -= dqdci;     // dwdot[O2]/d[A1-]
  J[1451] += 2 * dqdci; // dwdot[CO]/d[A1-]
  J[1462] += 2 * dqdci; // dwdot[C2H2]/d[A1-]
  J[1470] -= dqdci;     // dwdot[A1-]/d[A1-]
  // d()/dT
  J[2261] += dqdT;     // dwdot[H]/dT
  J[2264] -= dqdT;     // dwdot[O2]/dT
  J[2267] += 2 * dqdT; // dwdot[CO]/dT
  J[2278] += 2 * dqdT; // dwdot[C2H2]/dT
  J[2286] -= dqdT;     // dwdot[A1-]/dT

  // reaction 180: A1- + O => C5H5 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[30];
  k_f = 100000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[31] += q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[30];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[174] -= dqdci; // dwdot[A1-]/d[O]
  J[175] += dqdci; // dwdot[C5H5]/d[O]
  // d()/d[A1-]
  dqdci = +k_f * sc[3];
  J[1443] -= dqdci; // dwdot[O]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1471] += dqdci; // dwdot[C5H5]/d[A1-]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 181: A1- + OH => C5H6 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[30];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[34] += q; // C5H6
  // d()/d[OH]
  dqdci = +k_f * sc[30];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[318] -= dqdci; // dwdot[A1-]/d[OH]
  J[322] += dqdci; // dwdot[C5H6]/d[OH]
  // d()/d[A1-]
  dqdci = +k_f * sc[6];
  J[1446] -= dqdci; // dwdot[OH]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1474] += dqdci; // dwdot[C5H6]/d[A1-]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2290] += dqdT; // dwdot[C5H6]/dT

  // reaction 182: A1- + HO2 => C5H5 + CO + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[30];
  k_f = 30000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[11] += q; // CO
  wdot[30] -= q; // A1-
  wdot[31] += q; // C5H5
  // d()/d[HO2]
  dqdci = +k_f * sc[30];
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[443] += dqdci; // dwdot[CO]/d[HO2]
  J[462] -= dqdci; // dwdot[A1-]/d[HO2]
  J[463] += dqdci; // dwdot[C5H5]/d[HO2]
  // d()/d[A1-]
  dqdci = +k_f * sc[9];
  J[1446] += dqdci; // dwdot[OH]/d[A1-]
  J[1449] -= dqdci; // dwdot[HO2]/d[A1-]
  J[1451] += dqdci; // dwdot[CO]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1471] += dqdci; // dwdot[C5H5]/d[A1-]
  // d()/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 183: A1- + C2H2 <=> A1C2H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[30];
  k_f = 3.29 * exp(2.05 * tc[0] - (1591.19625810781) * invT);
  dlnkfdT = 2.05 * invT + (1591.19625810781) * invT2;
  // reverse
  phi_r = sc[38];
  Kc = refCinv * exp(g_RT[22] + g_RT[30] - g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[30]) + (h_RT[38]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // C2H2
  wdot[30] -= q; // A1-
  wdot[38] += q; // A1C2H2
  // d()/d[C2H2]
  dqdci = +k_f * sc[30];
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1086] -= dqdci; // dwdot[A1-]/d[C2H2]
  J[1094] += dqdci; // dwdot[A1C2H2]/d[C2H2]
  // d()/d[A1-]
  dqdci = +k_f * sc[22];
  J[1462] -= dqdci; // dwdot[C2H2]/d[A1-]
  J[1470] -= dqdci; // dwdot[A1-]/d[A1-]
  J[1478] += dqdci; // dwdot[A1C2H2]/d[A1-]
  // d()/d[A1C2H2]
  dqdci = -k_r;
  J[1846] -= dqdci; // dwdot[C2H2]/d[A1C2H2]
  J[1854] -= dqdci; // dwdot[A1-]/d[A1C2H2]
  J[1862] += dqdci; // dwdot[A1C2H2]/d[A1C2H2]
  // d()/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2286] -= dqdT; // dwdot[A1-]/dT
  J[2294] += dqdT; // dwdot[A1C2H2]/dT

  // reaction 184: A1 <=> A1- + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[29];
  k_f = 1.29e+61 * exp(-12.48 * tc[0] - (74519.1217570248) * invT);
  dlnkfdT = -12.48 * invT + (74519.1217570248) * invT2;
  // reverse
  phi_r = sc[5] * sc[30];
  Kc = refC * exp(-g_RT[5] + g_RT[29] - g_RT[30]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[29]) + (h_RT[5] + h_RT[30]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[H]
  dqdci = -k_r * sc[30];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[269] -= dqdci; // dwdot[A1]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  // d()/d[A1]
  dqdci = +k_f;
  J[1397] += dqdci; // dwdot[H]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/d[A1-]
  dqdci = -k_r * sc[5];
  J[1445] += dqdci; // dwdot[H]/d[A1-]
  J[1469] -= dqdci; // dwdot[A1]/d[A1-]
  J[1470] += dqdci; // dwdot[A1-]/d[A1-]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 185: A1 + H => A1- + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[29];
  k_f = 602 * exp(1.8 * tc[0] - (8228.98639607145) * invT);
  dlnkfdT = 1.8 * invT + (8228.98639607145) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[H]
  dqdci = +k_f * sc[29];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[269] -= dqdci; // dwdot[A1]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  // d()/d[A1]
  dqdci = +k_f * sc[5];
  J[1396] += dqdci; // dwdot[H2]/d[A1]
  J[1397] -= dqdci; // dwdot[H]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 186: A1 + OH => A1- + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[29];
  k_f = 0.000403 * exp(3.33 * tc[0] - (732.451985745402) * invT);
  dlnkfdT = 3.33 * invT + (732.451985745402) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[317] -= dqdci; // dwdot[A1]/d[OH]
  J[318] += dqdci; // dwdot[A1-]/d[OH]
  // d()/d[A1]
  dqdci = +k_f * sc[6];
  J[1398] -= dqdci; // dwdot[OH]/d[A1]
  J[1399] += dqdci; // dwdot[H2O]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 187: A1 + CH3 => A1- + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[29];
  k_f = 2.752e-08 * exp(4.46 * tc[0] - (6862.70282674505) * invT);
  dlnkfdT = 4.46 * invT + (6862.70282674505) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[29] -= q; // A1
  wdot[30] += q; // A1-
  // d()/d[CH3]
  dqdci = +k_f * sc[29];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[701] -= dqdci; // dwdot[A1]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  // d()/d[A1]
  dqdci = +k_f * sc[14];
  J[1406] -= dqdci; // dwdot[CH3]/d[A1]
  J[1408] += dqdci; // dwdot[CH4]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1422] += dqdci; // dwdot[A1-]/d[A1]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT

  // reaction 188: A1 + O => C5H5 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[29];
  k_f = 22200000 * exp(-(2280.35148192738) * invT);
  dlnkfdT = (2280.35148192738) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[11] += q; // CO
  wdot[29] -= q; // A1
  wdot[31] += q; // C5H5
  // d()/d[O]
  dqdci = +k_f * sc[29];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[155] += dqdci; // dwdot[CO]/d[O]
  J[173] -= dqdci; // dwdot[A1]/d[O]
  J[175] += dqdci; // dwdot[C5H5]/d[O]
  // d()/d[A1]
  dqdci = +k_f * sc[3];
  J[1395] -= dqdci; // dwdot[O]/d[A1]
  J[1397] += dqdci; // dwdot[H]/d[A1]
  J[1403] += dqdci; // dwdot[CO]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1423] += dqdci; // dwdot[C5H5]/d[A1]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT

  // reaction 189: A1 + OH => C5H6 + CO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[29];
  k_f = 0.000132 * exp(3.25 * tc[0] - (2813.15225551476) * invT);
  dlnkfdT = 3.25 * invT + (2813.15225551476) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] -= q;  // OH
  wdot[11] += q; // CO
  wdot[29] -= q; // A1
  wdot[34] += q; // C5H6
  // d()/d[OH]
  dqdci = +k_f * sc[29];
  J[293] += dqdci; // dwdot[H]/d[OH]
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[299] += dqdci; // dwdot[CO]/d[OH]
  J[317] -= dqdci; // dwdot[A1]/d[OH]
  J[322] += dqdci; // dwdot[C5H6]/d[OH]
  // d()/d[A1]
  dqdci = +k_f * sc[6];
  J[1397] += dqdci; // dwdot[H]/d[A1]
  J[1398] -= dqdci; // dwdot[OH]/d[A1]
  J[1403] += dqdci; // dwdot[CO]/d[A1]
  J[1421] -= dqdci; // dwdot[A1]/d[A1]
  J[1426] += dqdci; // dwdot[C5H6]/d[A1]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2285] -= dqdT; // dwdot[A1]/dT
  J[2290] += dqdT; // dwdot[C5H6]/dT

  // reaction 190: A1CH2 <=> C2H2 + C5H5
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[39];
  k_f = 820000000000000 * exp(-(40597.7039849612) * invT);
  dlnkfdT = (40597.7039849612) * invT2;
  // reverse
  phi_r = sc[22] * sc[31];
  Kc = refC * exp(-g_RT[22] - g_RT[31] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[39]) + (h_RT[22] + h_RT[31]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] += q; // C2H2
  wdot[31] += q; // C5H5
  wdot[39] -= q; // A1CH2
  // d()/d[C2H2]
  dqdci = -k_r * sc[31];
  J[1078] += dqdci; // dwdot[C2H2]/d[C2H2]
  J[1087] += dqdci; // dwdot[C5H5]/d[C2H2]
  J[1095] -= dqdci; // dwdot[A1CH2]/d[C2H2]
  // d()/d[C5H5]
  dqdci = -k_r * sc[22];
  J[1510] += dqdci; // dwdot[C2H2]/d[C5H5]
  J[1519] += dqdci; // dwdot[C5H5]/d[C5H5]
  J[1527] -= dqdci; // dwdot[A1CH2]/d[C5H5]
  // d()/d[A1CH2]
  dqdci = +k_f;
  J[1894] += dqdci; // dwdot[C2H2]/d[A1CH2]
  J[1903] += dqdci; // dwdot[C5H5]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  // d()/dT
  J[2278] += dqdT; // dwdot[C2H2]/dT
  J[2287] += dqdT; // dwdot[C5H5]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT

  // reaction 191: A1CH2 + H <=> A1- + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[39];
  k_f = 5.83e+61 * exp(-14.15 * tc[0] - (34384.4676836037) * invT);
  dlnkfdT = -14.15 * invT + (34384.4676836037) * invT2;
  // reverse
  phi_r = sc[14] * sc[30];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[30] + g_RT[39]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[39]) + (h_RT[14] + h_RT[30]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[30] += q; // A1-
  wdot[39] -= q; // A1CH2
  // d()/d[H]
  dqdci = +k_f * sc[39];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  J[279] -= dqdci; // dwdot[A1CH2]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[30];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  J[711] -= dqdci; // dwdot[A1CH2]/d[CH3]
  // d()/d[A1-]
  dqdci = -k_r * sc[14];
  J[1445] -= dqdci; // dwdot[H]/d[A1-]
  J[1454] += dqdci; // dwdot[CH3]/d[A1-]
  J[1470] += dqdci; // dwdot[A1-]/d[A1-]
  J[1479] -= dqdci; // dwdot[A1CH2]/d[A1-]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[5];
  J[1877] -= dqdci; // dwdot[H]/d[A1CH2]
  J[1886] += dqdci; // dwdot[CH3]/d[A1CH2]
  J[1902] += dqdci; // dwdot[A1-]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT

  // reaction 192: A1CH2 + O => A1CHO + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[39];
  k_f = 331000000;
  dlnkfdT = 0.0;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[5] += q;  // H
  wdot[39] -= q; // A1CH2
  wdot[40] += q; // A1CHO
  // d()/d[O]
  dqdci = +k_f * sc[39];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[149] += dqdci; // dwdot[H]/d[O]
  J[183] -= dqdci; // dwdot[A1CH2]/d[O]
  J[184] += dqdci; // dwdot[A1CHO]/d[O]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[3];
  J[1875] -= dqdci; // dwdot[O]/d[A1CH2]
  J[1877] += dqdci; // dwdot[H]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  J[1912] += dqdci; // dwdot[A1CHO]/d[A1CH2]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT
  J[2296] += dqdT; // dwdot[A1CHO]/dT

  // reaction 193: A1CH2 + HO2 => A1CHO + H + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[9] * sc[39];
  k_f = 10600000000 * exp(-0.94 * tc[0] - (1270.06854282453) * invT);
  dlnkfdT = -0.94 * invT + (1270.06854282453) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += q;  // H
  wdot[6] += q;  // OH
  wdot[9] -= q;  // HO2
  wdot[39] -= q; // A1CH2
  wdot[40] += q; // A1CHO
  // d()/d[HO2]
  dqdci = +k_f * sc[39];
  J[437] += dqdci; // dwdot[H]/d[HO2]
  J[438] += dqdci; // dwdot[OH]/d[HO2]
  J[441] -= dqdci; // dwdot[HO2]/d[HO2]
  J[471] -= dqdci; // dwdot[A1CH2]/d[HO2]
  J[472] += dqdci; // dwdot[A1CHO]/d[HO2]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[9];
  J[1877] += dqdci; // dwdot[H]/d[A1CH2]
  J[1878] += dqdci; // dwdot[OH]/d[A1CH2]
  J[1881] -= dqdci; // dwdot[HO2]/d[A1CH2]
  J[1911] -= dqdci; // dwdot[A1CH2]/d[A1CH2]
  J[1912] += dqdci; // dwdot[A1CHO]/d[A1CH2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2265] -= dqdT; // dwdot[HO2]/dT
  J[2295] -= dqdT; // dwdot[A1CH2]/dT
  J[2296] += dqdT; // dwdot[A1CHO]/dT

  // reaction 194: A1CH2 + C3H3 => A2 + 2 H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[23] * sc[39];
  k_f = 4.32e+33 * exp(-7.74 * tc[0] - (12003.1113896068) * invT);
  dlnkfdT = -7.74 * invT + (12003.1113896068) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[5] += 2 * q; // H
  wdot[23] -= q;    // C3H3
  wdot[35] += q;    // A2
  wdot[39] -= q;    // A1CH2
  // d()/d[C3H3]
  dqdci = +k_f * sc[39];
  J[1109] += 2 * dqdci; // dwdot[H]/d[C3H3]
  J[1127] -= dqdci;     // dwdot[C3H3]/d[C3H3]
  J[1139] += dqdci;     // dwdot[A2]/d[C3H3]
  J[1143] -= dqdci;     // dwdot[A1CH2]/d[C3H3]
  // d()/d[A1CH2]
  dqdci = +k_f * sc[23];
  J[1877] += 2 * dqdci; // dwdot[H]/d[A1CH2]
  J[1895] -= dqdci;     // dwdot[C3H3]/d[A1CH2]
  J[1907] += dqdci;     // dwdot[A2]/d[A1CH2]
  J[1911] -= dqdci;     // dwdot[A1CH2]/d[A1CH2]
  // d()/dT
  J[2261] += 2 * dqdT; // dwdot[H]/dT
  J[2279] -= dqdT;     // dwdot[C3H3]/dT
  J[2291] += dqdT;     // dwdot[A2]/dT
  J[2295] -= dqdT;     // dwdot[A1CH2]/dT

  // reaction 195: A1CH3 + H <=> A1 + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[41];
  k_f = 2.31 * exp(2.17 * tc[0] - (2095.13252374463) * invT);
  dlnkfdT = 2.17 * invT + (2095.13252374463) * invT2;
  // reverse
  phi_r = sc[14] * sc[29];
  Kc = exp(g_RT[5] - g_RT[14] - g_RT[29] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[41]) + (h_RT[14] + h_RT[29]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] -= q;  // H
  wdot[14] += q; // CH3
  wdot[29] += q; // A1
  wdot[41] -= q; // A1CH3
  // d()/d[H]
  dqdci = +k_f * sc[41];
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[254] += dqdci; // dwdot[CH3]/d[H]
  J[269] += dqdci; // dwdot[A1]/d[H]
  J[281] -= dqdci; // dwdot[A1CH3]/d[H]
  // d()/d[CH3]
  dqdci = -k_r * sc[29];
  J[677] -= dqdci; // dwdot[H]/d[CH3]
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[701] += dqdci; // dwdot[A1]/d[CH3]
  J[713] -= dqdci; // dwdot[A1CH3]/d[CH3]
  // d()/d[A1]
  dqdci = -k_r * sc[14];
  J[1397] -= dqdci; // dwdot[H]/d[A1]
  J[1406] += dqdci; // dwdot[CH3]/d[A1]
  J[1421] += dqdci; // dwdot[A1]/d[A1]
  J[1433] -= dqdci; // dwdot[A1CH3]/d[A1]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[5];
  J[1973] -= dqdci; // dwdot[H]/d[A1CH3]
  J[1982] += dqdci; // dwdot[CH3]/d[A1CH3]
  J[1997] += dqdci; // dwdot[A1]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2285] += dqdT; // dwdot[A1]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 196: A1CH3 <=> A1CH2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[41];
  k_f = 1.25e+18 * exp(-0.6 * tc[0] - (47698.5390022984) * invT);
  dlnkfdT = -0.6 * invT + (47698.5390022984) * invT2;
  // reverse
  phi_r = sc[5] * sc[39];
  Kc = refC * exp(-g_RT[5] - g_RT[39] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[41]) + (h_RT[5] + h_RT[39]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[H]
  dqdci = -k_r * sc[39];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[279] += dqdci; // dwdot[A1CH2]/d[H]
  J[281] -= dqdci; // dwdot[A1CH3]/d[H]
  // d()/d[A1CH2]
  dqdci = -k_r * sc[5];
  J[1877] += dqdci; // dwdot[H]/d[A1CH2]
  J[1911] += dqdci; // dwdot[A1CH2]/d[A1CH2]
  J[1913] -= dqdci; // dwdot[A1CH3]/d[A1CH2]
  // d()/d[A1CH3]
  dqdci = +k_f;
  J[1973] += dqdci; // dwdot[H]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 197: A1CH3 <=> A1- + CH3
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[41];
  k_f = 2.16e+29 * exp(-3.58 * tc[0] - (55436.818698877) * invT);
  dlnkfdT = -3.58 * invT + (55436.818698877) * invT2;
  // reverse
  phi_r = sc[14] * sc[30];
  Kc = refC * exp(-g_RT[14] - g_RT[30] + g_RT[41]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[41]) + (h_RT[14] + h_RT[30]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[14] += q; // CH3
  wdot[30] += q; // A1-
  wdot[41] -= q; // A1CH3
  // d()/d[CH3]
  dqdci = -k_r * sc[30];
  J[686] += dqdci; // dwdot[CH3]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  J[713] -= dqdci; // dwdot[A1CH3]/d[CH3]
  // d()/d[A1-]
  dqdci = -k_r * sc[14];
  J[1454] += dqdci; // dwdot[CH3]/d[A1-]
  J[1470] += dqdci; // dwdot[A1-]/d[A1-]
  J[1481] -= dqdci; // dwdot[A1CH3]/d[A1-]
  // d()/d[A1CH3]
  dqdci = +k_f;
  J[1982] += dqdci; // dwdot[CH3]/d[A1CH3]
  J[1998] += dqdci; // dwdot[A1-]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2270] += dqdT; // dwdot[CH3]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 198: A1CH3 + H => A1CH2 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[41];
  k_f = 6.47e-06 * exp(3.98 * tc[0] - (1703.04622641623) * invT);
  dlnkfdT = 3.98 * invT + (1703.04622641623) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[H]
  dqdci = +k_f * sc[41];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[279] += dqdci; // dwdot[A1CH2]/d[H]
  J[281] -= dqdci; // dwdot[A1CH3]/d[H]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[5];
  J[1972] += dqdci; // dwdot[H2]/d[A1CH3]
  J[1973] -= dqdci; // dwdot[H]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 199: A1CH3 + OH => A1CH2 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[41];
  k_f = 16200000 * exp(-(1393.95042161234) * invT);
  dlnkfdT = (1393.95042161234) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[OH]
  dqdci = +k_f * sc[41];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[327] += dqdci; // dwdot[A1CH2]/d[OH]
  J[329] -= dqdci; // dwdot[A1CH3]/d[OH]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[6];
  J[1974] -= dqdci; // dwdot[OH]/d[A1CH3]
  J[1975] += dqdci; // dwdot[H2O]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 200: A1CH3 + CH3 => A1CH2 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[41];
  k_f = 422000000 * exp(-(11199.6957896497) * invT);
  dlnkfdT = (11199.6957896497) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[39] += q; // A1CH2
  wdot[41] -= q; // A1CH3
  // d()/d[CH3]
  dqdci = +k_f * sc[41];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[711] += dqdci; // dwdot[A1CH2]/d[CH3]
  J[713] -= dqdci; // dwdot[A1CH3]/d[CH3]
  // d()/d[A1CH3]
  dqdci = +k_f * sc[14];
  J[1982] -= dqdci; // dwdot[CH3]/d[A1CH3]
  J[1984] += dqdci; // dwdot[CH4]/d[A1CH3]
  J[2007] += dqdci; // dwdot[A1CH2]/d[A1CH3]
  J[2009] -= dqdci; // dwdot[A1CH3]/d[A1CH3]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2295] += dqdT; // dwdot[A1CH2]/dT
  J[2297] -= dqdT; // dwdot[A1CH3]/dT

  // reaction 201: C7H15 => C2H4 + C5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 1890000000000 * exp(0.02 * tc[0] - (13981.583193718) * invT);
  dlnkfdT = 0.02 * invT + (13981.583193718) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[37] += q; // C5H11
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2034] += dqdci; // dwdot[C2H4]/d[C7H15]
  J[2053] += dqdci; // dwdot[C5H11]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2293] += dqdT; // dwdot[C5H11]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 202: C7H15 => C2H4 + C2H5 + C3H6
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 7.73e+18 * exp(-1.75 * tc[0] - (16089.9452836066) * invT);
  dlnkfdT = -1.75 * invT + (16089.9452836066) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[19] += q; // C2H5
  wdot[32] += q; // C3H6
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2034] += dqdci; // dwdot[C2H4]/d[C7H15]
  J[2035] += dqdci; // dwdot[C2H5]/d[C7H15]
  J[2048] += dqdci; // dwdot[C3H6]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2288] += dqdT; // dwdot[C3H6]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 203: C7H15 => C4H8 + N-C3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 2.53e+18 * exp(-1.65 * tc[0] - (15943.2123360246) * invT);
  dlnkfdT = -1.65 * invT + (15943.2123360246) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[25] += q; // N-C3H7
  wdot[33] += q; // C4H8
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2041] += dqdci; // dwdot[N-C3H7]/d[C7H15]
  J[2049] += dqdci; // dwdot[C4H8]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2289] += dqdT; // dwdot[C4H8]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 204: C7H15 => C2H5 + C5H10
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[42];
  k_f = 2.49e+16 * exp(-1.18 * tc[0] - (14853.5520000577) * invT);
  dlnkfdT = -1.18 * invT + (14853.5520000577) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[36] += q; // C5H10
  wdot[42] -= q; // C7H15
  // d()/d[C7H15]
  dqdci = +k_f;
  J[2035] += dqdci; // dwdot[C2H5]/d[C7H15]
  J[2052] += dqdci; // dwdot[C5H10]/d[C7H15]
  J[2058] -= dqdci; // dwdot[C7H15]/d[C7H15]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2292] += dqdT; // dwdot[C5H10]/dT
  J[2298] -= dqdT; // dwdot[C7H15]/dT

  // reaction 205: N-C7H16 => C2H5 + C5H11
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 8.1e+77 * exp(-17.62 * tc[0] - (60586.8537965557) * invT);
  dlnkfdT = -17.62 * invT + (60586.8537965557) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[19] += q; // C2H5
  wdot[37] += q; // C5H11
  wdot[43] -= q; // N-C7H16
  // d()/d[N-C7H16]
  dqdci = +k_f;
  J[2083] += dqdci; // dwdot[C2H5]/d[N-C7H16]
  J[2101] += dqdci; // dwdot[C5H11]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2293] += dqdT; // dwdot[C5H11]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 206: N-C7H16 => C2H4 + C2H5 + N-C3H7
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[43];
  k_f = 1.42e+78 * exp(-17.71 * tc[0] - (60738.3974954627) * invT);
  dlnkfdT = -17.71 * invT + (60738.3974954627) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[18] += q; // C2H4
  wdot[19] += q; // C2H5
  wdot[25] += q; // N-C3H7
  wdot[43] -= q; // N-C7H16
  // d()/d[N-C7H16]
  dqdci = +k_f;
  J[2082] += dqdci; // dwdot[C2H4]/d[N-C7H16]
  J[2083] += dqdci; // dwdot[C2H5]/d[N-C7H16]
  J[2089] += dqdci; // dwdot[N-C3H7]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2274] += dqdT; // dwdot[C2H4]/dT
  J[2275] += dqdT; // dwdot[C2H5]/dT
  J[2281] += dqdT; // dwdot[N-C3H7]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 207: H + N-C7H16 => C7H15 + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[43];
  k_f = 1.75 * exp(2.6 * tc[0] - (2194.95561374032) * invT);
  dlnkfdT = 2.6 * invT + (2194.95561374032) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[H]
  dqdci = +k_f * sc[43];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[282] += dqdci; // dwdot[C7H15]/d[H]
  J[283] -= dqdci; // dwdot[N-C7H16]/d[H]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[5];
  J[2068] += dqdci; // dwdot[H2]/d[N-C7H16]
  J[2069] -= dqdci; // dwdot[H]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 208: N-C7H16 + O => C7H15 + OH
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[3] * sc[43];
  k_f = 0.172 * exp(2.81 * tc[0] - (1137.76784921781) * invT);
  dlnkfdT = 2.81 * invT + (1137.76784921781) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[3] -= q;  // O
  wdot[6] += q;  // OH
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[O]
  dqdci = +k_f * sc[43];
  J[147] -= dqdci; // dwdot[O]/d[O]
  J[150] += dqdci; // dwdot[OH]/d[O]
  J[186] += dqdci; // dwdot[C7H15]/d[O]
  J[187] -= dqdci; // dwdot[N-C7H16]/d[O]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[3];
  J[2067] -= dqdci; // dwdot[O]/d[N-C7H16]
  J[2070] += dqdci; // dwdot[OH]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2259] -= dqdT; // dwdot[O]/dT
  J[2262] += dqdT; // dwdot[OH]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 209: N-C7H16 + OH => C7H15 + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[43];
  k_f = 740 * exp(1.5 * tc[0] - (129.895317944172) * invT);
  dlnkfdT = 1.5 * invT + (129.895317944172) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[OH]
  dqdci = +k_f * sc[43];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[330] += dqdci; // dwdot[C7H15]/d[OH]
  J[331] -= dqdci; // dwdot[N-C7H16]/d[OH]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[6];
  J[2070] -= dqdci; // dwdot[OH]/d[N-C7H16]
  J[2071] += dqdci; // dwdot[H2O]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 210: CH3 + N-C7H16 => C7H15 + CH4
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[43];
  k_f = 0.0146 * exp(2.57 * tc[0] - (3489.08294535697) * invT);
  dlnkfdT = 2.57 * invT + (3489.08294535697) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[42] += q; // C7H15
  wdot[43] -= q; // N-C7H16
  // d()/d[CH3]
  dqdci = +k_f * sc[43];
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[714] += dqdci; // dwdot[C7H15]/d[CH3]
  J[715] -= dqdci; // dwdot[N-C7H16]/d[CH3]
  // d()/d[N-C7H16]
  dqdci = +k_f * sc[14];
  J[2078] -= dqdci; // dwdot[CH3]/d[N-C7H16]
  J[2080] += dqdci; // dwdot[CH4]/d[N-C7H16]
  J[2106] += dqdci; // dwdot[C7H15]/d[N-C7H16]
  J[2107] -= dqdci; // dwdot[N-C7H16]/d[N-C7H16]
  // d()/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2298] += dqdT; // dwdot[C7H15]/dT
  J[2299] -= dqdT; // dwdot[N-C7H16]/dT

  // reaction 211: A1CHO => A1- + HCO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[40];
  k_f = 2.61e+15 * exp(0.15 * tc[0] - (40533.9564977371) * invT);
  dlnkfdT = 0.15 * invT + (40533.9564977371) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[12] += q; // HCO
  wdot[30] += q; // A1-
  wdot[40] -= q; // A1CHO
  // d()/d[A1CHO]
  dqdci = +k_f;
  J[1932] += dqdci; // dwdot[HCO]/d[A1CHO]
  J[1950] += dqdci; // dwdot[A1-]/d[A1CHO]
  J[1960] -= dqdci; // dwdot[A1CHO]/d[A1CHO]
  // d()/dT
  J[2268] += dqdT; // dwdot[HCO]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2296] -= dqdT; // dwdot[A1CHO]/dT

  // reaction 212: A1CHO + H => A1- + CO + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[40];
  k_f = 2050 * exp(1.16 * tc[0] - (1209.93415126087) * invT);
  dlnkfdT = 1.16 * invT + (1209.93415126087) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[11] += q; // CO
  wdot[30] += q; // A1-
  wdot[40] -= q; // A1CHO
  // d()/d[H]
  dqdci = +k_f * sc[40];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[251] += dqdci; // dwdot[CO]/d[H]
  J[270] += dqdci; // dwdot[A1-]/d[H]
  J[280] -= dqdci; // dwdot[A1CHO]/d[H]
  // d()/d[A1CHO]
  dqdci = +k_f * sc[5];
  J[1924] += dqdci; // dwdot[H2]/d[A1CHO]
  J[1925] -= dqdci; // dwdot[H]/d[A1CHO]
  J[1931] += dqdci; // dwdot[CO]/d[A1CHO]
  J[1950] += dqdci; // dwdot[A1-]/d[A1CHO]
  J[1960] -= dqdci; // dwdot[A1CHO]/d[A1CHO]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2296] -= dqdT; // dwdot[A1CHO]/dT

  // reaction 213: A1CHO + CH3 => A1- + CH4 + CO
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[14] * sc[40];
  k_f = 2.72 * exp(1.77 * tc[0] - (2979.12820839713) * invT);
  dlnkfdT = 1.77 * invT + (2979.12820839713) * invT2;
  // rate of progress
  q = k_f * phi_f;
  dqdT = dlnkfdT * k_f * phi_f;
  // update wdot
  wdot[11] += q; // CO
  wdot[14] -= q; // CH3
  wdot[16] += q; // CH4
  wdot[30] += q; // A1-
  wdot[40] -= q; // A1CHO
  // d()/d[CH3]
  dqdci = +k_f * sc[40];
  J[683] += dqdci; // dwdot[CO]/d[CH3]
  J[686] -= dqdci; // dwdot[CH3]/d[CH3]
  J[688] += dqdci; // dwdot[CH4]/d[CH3]
  J[702] += dqdci; // dwdot[A1-]/d[CH3]
  J[712] -= dqdci; // dwdot[A1CHO]/d[CH3]
  // d()/d[A1CHO]
  dqdci = +k_f * sc[14];
  J[1931] += dqdci; // dwdot[CO]/d[A1CHO]
  J[1934] -= dqdci; // dwdot[CH3]/d[A1CHO]
  J[1936] += dqdci; // dwdot[CH4]/d[A1CHO]
  J[1950] += dqdci; // dwdot[A1-]/d[A1CHO]
  J[1960] -= dqdci; // dwdot[A1CHO]/d[A1CHO]
  // d()/dT
  J[2267] += dqdT; // dwdot[CO]/dT
  J[2270] -= dqdT; // dwdot[CH3]/dT
  J[2272] += dqdT; // dwdot[CH4]/dT
  J[2286] += dqdT; // dwdot[A1-]/dT
  J[2296] -= dqdT; // dwdot[A1CHO]/dT

  // reaction 214: A1C2H* + C2H2 <=> A2-
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[44];
  k_f = 0.0134 * exp(2.5 * tc[0] - (645.858461893726) * invT);
  dlnkfdT = 2.5 * invT + (645.858461893726) * invT2;
  // reverse
  phi_r = sc[45];
  Kc = refCinv * exp(g_RT[22] + g_RT[44] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[44]) + (h_RT[45]) + 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[22] -= q; // C2H2
  wdot[44] -= q; // A1C2H*
  wdot[45] += q; // A2-
  // d()/d[C2H2]
  dqdci = +k_f * sc[44];
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1100] -= dqdci; // dwdot[A1C2H*]/d[C2H2]
  J[1101] += dqdci; // dwdot[A2-]/d[C2H2]
  // d()/d[A1C2H*]
  dqdci = +k_f * sc[22];
  J[2134] -= dqdci; // dwdot[C2H2]/d[A1C2H*]
  J[2156] -= dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2157] += dqdci; // dwdot[A2-]/d[A1C2H*]
  // d()/d[A2-]
  dqdci = -k_r;
  J[2182] -= dqdci; // dwdot[C2H2]/d[A2-]
  J[2204] -= dqdci; // dwdot[A1C2H*]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2300] -= dqdT; // dwdot[A1C2H*]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  // reaction 215: A1C2H* + C2H4 <=> A2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[18] * sc[44];
  k_f = 3.62e+22 * exp(-4.24 * tc[0] - (12009.1248287632) * invT);
  dlnkfdT = -4.24 * invT + (12009.1248287632) * invT2;
  // reverse
  phi_r = sc[5] * sc[35];
  Kc = exp(-g_RT[5] + g_RT[18] - g_RT[35] + g_RT[44]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[18] + h_RT[44]) + (h_RT[5] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[18] -= q; // C2H4
  wdot[35] += q; // A2
  wdot[44] -= q; // A1C2H*
  // d()/d[H]
  dqdci = -k_r * sc[35];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[258] -= dqdci; // dwdot[C2H4]/d[H]
  J[275] += dqdci; // dwdot[A2]/d[H]
  J[284] -= dqdci; // dwdot[A1C2H*]/d[H]
  // d()/d[C2H4]
  dqdci = +k_f * sc[44];
  J[869] += dqdci; // dwdot[H]/d[C2H4]
  J[882] -= dqdci; // dwdot[C2H4]/d[C2H4]
  J[899] += dqdci; // dwdot[A2]/d[C2H4]
  J[908] -= dqdci; // dwdot[A1C2H*]/d[C2H4]
  // d()/d[A2]
  dqdci = -k_r * sc[5];
  J[1685] += dqdci; // dwdot[H]/d[A2]
  J[1698] -= dqdci; // dwdot[C2H4]/d[A2]
  J[1715] += dqdci; // dwdot[A2]/d[A2]
  J[1724] -= dqdci; // dwdot[A1C2H*]/d[A2]
  // d()/d[A1C2H*]
  dqdci = +k_f * sc[18];
  J[2117] += dqdci; // dwdot[H]/d[A1C2H*]
  J[2130] -= dqdci; // dwdot[C2H4]/d[A1C2H*]
  J[2147] += dqdci; // dwdot[A2]/d[A1C2H*]
  J[2156] -= dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2274] -= dqdT; // dwdot[C2H4]/dT
  J[2291] += dqdT; // dwdot[A2]/dT
  J[2300] -= dqdT; // dwdot[A1C2H*]/dT

  // reaction 216: A1C2H <=> A1C2H* + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[46];
  k_f = 2.1e+60 * exp(-12.4 * tc[0] - (74514.3110056997) * invT);
  dlnkfdT = -12.4 * invT + (74514.3110056997) * invT2;
  // reverse
  phi_r = sc[5] * sc[44];
  Kc = refC * exp(-g_RT[5] - g_RT[44] + g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[46]) + (h_RT[5] + h_RT[44]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[44] += q; // A1C2H*
  wdot[46] -= q; // A1C2H
  // d()/d[H]
  dqdci = -k_r * sc[44];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[284] += dqdci; // dwdot[A1C2H*]/d[H]
  J[286] -= dqdci; // dwdot[A1C2H]/d[H]
  // d()/d[A1C2H*]
  dqdci = -k_r * sc[5];
  J[2117] += dqdci; // dwdot[H]/d[A1C2H*]
  J[2156] += dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2158] -= dqdci; // dwdot[A1C2H]/d[A1C2H*]
  // d()/d[A1C2H]
  dqdci = +k_f;
  J[2213] += dqdci; // dwdot[H]/d[A1C2H]
  J[2252] += dqdci; // dwdot[A1C2H*]/d[A1C2H]
  J[2254] -= dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2300] += dqdT; // dwdot[A1C2H*]/dT
  J[2302] -= dqdT; // dwdot[A1C2H]/dT

  // reaction 217: A1C2H + H <=> A1C2H* + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[46];
  k_f = 132 * exp(1.88 * tc[0] - (8464.71824316767) * invT);
  dlnkfdT = 1.88 * invT + (8464.71824316767) * invT2;
  // reverse
  phi_r = sc[4] * sc[44];
  Kc = exp(-g_RT[4] + g_RT[5] - g_RT[44] + g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[46]) + (h_RT[4] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[44] += q; // A1C2H*
  wdot[46] -= q; // A1C2H
  // d()/d[H2]
  dqdci = -k_r * sc[44];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[236] += dqdci; // dwdot[A1C2H*]/d[H2]
  J[238] -= dqdci; // dwdot[A1C2H]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[46];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[284] += dqdci; // dwdot[A1C2H*]/d[H]
  J[286] -= dqdci; // dwdot[A1C2H]/d[H]
  // d()/d[A1C2H*]
  dqdci = -k_r * sc[4];
  J[2116] += dqdci; // dwdot[H2]/d[A1C2H*]
  J[2117] -= dqdci; // dwdot[H]/d[A1C2H*]
  J[2156] += dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2158] -= dqdci; // dwdot[A1C2H]/d[A1C2H*]
  // d()/d[A1C2H]
  dqdci = +k_f * sc[5];
  J[2212] += dqdci; // dwdot[H2]/d[A1C2H]
  J[2213] -= dqdci; // dwdot[H]/d[A1C2H]
  J[2252] += dqdci; // dwdot[A1C2H*]/d[A1C2H]
  J[2254] -= dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2300] += dqdT; // dwdot[A1C2H*]/dT
  J[2302] -= dqdT; // dwdot[A1C2H]/dT

  // reaction 218: A1C2H + OH <=> A1C2H* + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[46];
  k_f = 0.000134 * exp(3.33 * tc[0] - (732.451985745402) * invT);
  dlnkfdT = 3.33 * invT + (732.451985745402) * invT2;
  // reverse
  phi_r = sc[7] * sc[44];
  Kc = exp(g_RT[6] - g_RT[7] - g_RT[44] + g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[46]) + (h_RT[7] + h_RT[44]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[44] += q; // A1C2H*
  wdot[46] -= q; // A1C2H
  // d()/d[OH]
  dqdci = +k_f * sc[46];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[332] += dqdci; // dwdot[A1C2H*]/d[OH]
  J[334] -= dqdci; // dwdot[A1C2H]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[44];
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[380] += dqdci; // dwdot[A1C2H*]/d[H2O]
  J[382] -= dqdci; // dwdot[A1C2H]/d[H2O]
  // d()/d[A1C2H*]
  dqdci = -k_r * sc[7];
  J[2118] -= dqdci; // dwdot[OH]/d[A1C2H*]
  J[2119] += dqdci; // dwdot[H2O]/d[A1C2H*]
  J[2156] += dqdci; // dwdot[A1C2H*]/d[A1C2H*]
  J[2158] -= dqdci; // dwdot[A1C2H]/d[A1C2H*]
  // d()/d[A1C2H]
  dqdci = +k_f * sc[6];
  J[2214] -= dqdci; // dwdot[OH]/d[A1C2H]
  J[2215] += dqdci; // dwdot[H2O]/d[A1C2H]
  J[2252] += dqdci; // dwdot[A1C2H*]/d[A1C2H]
  J[2254] -= dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2300] += dqdT; // dwdot[A1C2H*]/dT
  J[2302] -= dqdT; // dwdot[A1C2H]/dT

  // reaction 219: A1C2H2 <=> A1C2H + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[38];
  k_f = 1.34e+17 * exp(-0.86 * tc[0] - (20751.6740252883) * invT);
  dlnkfdT = -0.86 * invT + (20751.6740252883) * invT2;
  // reverse
  phi_r = sc[5] * sc[46];
  Kc = refC * exp(-g_RT[5] + g_RT[38] - g_RT[46]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[38]) + (h_RT[5] + h_RT[46]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[38] -= q; // A1C2H2
  wdot[46] += q; // A1C2H
  // d()/d[H]
  dqdci = -k_r * sc[46];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[278] -= dqdci; // dwdot[A1C2H2]/d[H]
  J[286] += dqdci; // dwdot[A1C2H]/d[H]
  // d()/d[A1C2H2]
  dqdci = +k_f;
  J[1829] += dqdci; // dwdot[H]/d[A1C2H2]
  J[1862] -= dqdci; // dwdot[A1C2H2]/d[A1C2H2]
  J[1870] += dqdci; // dwdot[A1C2H]/d[A1C2H2]
  // d()/d[A1C2H]
  dqdci = -k_r * sc[5];
  J[2213] += dqdci; // dwdot[H]/d[A1C2H]
  J[2246] -= dqdci; // dwdot[A1C2H2]/d[A1C2H]
  J[2254] += dqdci; // dwdot[A1C2H]/d[A1C2H]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2294] -= dqdT; // dwdot[A1C2H2]/dT
  J[2302] += dqdT; // dwdot[A1C2H]/dT

  // reaction 220: A1C2H2 + C2H2 <=> A2 + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[22] * sc[38];
  k_f = 70910000 * exp(-0.26 * tc[0] - (3523.9608924639) * invT);
  dlnkfdT = -0.26 * invT + (3523.9608924639) * invT2;
  // reverse
  phi_r = sc[5] * sc[35];
  Kc = exp(-g_RT[5] + g_RT[22] - g_RT[35] + g_RT[38]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[22] + h_RT[38]) + (h_RT[5] + h_RT[35]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[22] -= q; // C2H2
  wdot[35] += q; // A2
  wdot[38] -= q; // A1C2H2
  // d()/d[H]
  dqdci = -k_r * sc[35];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[262] -= dqdci; // dwdot[C2H2]/d[H]
  J[275] += dqdci; // dwdot[A2]/d[H]
  J[278] -= dqdci; // dwdot[A1C2H2]/d[H]
  // d()/d[C2H2]
  dqdci = +k_f * sc[38];
  J[1061] += dqdci; // dwdot[H]/d[C2H2]
  J[1078] -= dqdci; // dwdot[C2H2]/d[C2H2]
  J[1091] += dqdci; // dwdot[A2]/d[C2H2]
  J[1094] -= dqdci; // dwdot[A1C2H2]/d[C2H2]
  // d()/d[A2]
  dqdci = -k_r * sc[5];
  J[1685] += dqdci; // dwdot[H]/d[A2]
  J[1702] -= dqdci; // dwdot[C2H2]/d[A2]
  J[1715] += dqdci; // dwdot[A2]/d[A2]
  J[1718] -= dqdci; // dwdot[A1C2H2]/d[A2]
  // d()/d[A1C2H2]
  dqdci = +k_f * sc[22];
  J[1829] += dqdci; // dwdot[H]/d[A1C2H2]
  J[1846] -= dqdci; // dwdot[C2H2]/d[A1C2H2]
  J[1859] += dqdci; // dwdot[A2]/d[A1C2H2]
  J[1862] -= dqdci; // dwdot[A1C2H2]/d[A1C2H2]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2278] -= dqdT; // dwdot[C2H2]/dT
  J[2291] += dqdT; // dwdot[A2]/dT
  J[2294] -= dqdT; // dwdot[A1C2H2]/dT

  // reaction 221: A2 <=> A2- + H
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[35];
  k_f = 8.6e+60 * exp(-12.48 * tc[0] - (74514.3110056997) * invT);
  dlnkfdT = -12.48 * invT + (74514.3110056997) * invT2;
  // reverse
  phi_r = sc[5] * sc[45];
  Kc = refC * exp(-g_RT[5] + g_RT[35] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[35]) + (h_RT[5] + h_RT[45]) - 1.000000);
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[5] += q;  // H
  wdot[35] -= q; // A2
  wdot[45] += q; // A2-
  // d()/d[H]
  dqdci = -k_r * sc[45];
  J[245] += dqdci; // dwdot[H]/d[H]
  J[275] -= dqdci; // dwdot[A2]/d[H]
  J[285] += dqdci; // dwdot[A2-]/d[H]
  // d()/d[A2]
  dqdci = +k_f;
  J[1685] += dqdci; // dwdot[H]/d[A2]
  J[1715] -= dqdci; // dwdot[A2]/d[A2]
  J[1725] += dqdci; // dwdot[A2-]/d[A2]
  // d()/d[A2-]
  dqdci = -k_r * sc[5];
  J[2165] += dqdci; // dwdot[H]/d[A2-]
  J[2195] -= dqdci; // dwdot[A2]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2261] += dqdT; // dwdot[H]/dT
  J[2291] -= dqdT; // dwdot[A2]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  // reaction 222: A2 + H <=> A2- + H2
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[5] * sc[35];
  k_f = 265 * exp(1.87 * tc[0] - (8603.03237593075) * invT);
  dlnkfdT = 1.87 * invT + (8603.03237593075) * invT2;
  // reverse
  phi_r = sc[4] * sc[45];
  Kc = exp(-g_RT[4] + g_RT[5] + g_RT[35] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[5] + h_RT[35]) + (h_RT[4] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[4] += q;  // H2
  wdot[5] -= q;  // H
  wdot[35] -= q; // A2
  wdot[45] += q; // A2-
  // d()/d[H2]
  dqdci = -k_r * sc[45];
  J[196] += dqdci; // dwdot[H2]/d[H2]
  J[197] -= dqdci; // dwdot[H]/d[H2]
  J[227] -= dqdci; // dwdot[A2]/d[H2]
  J[237] += dqdci; // dwdot[A2-]/d[H2]
  // d()/d[H]
  dqdci = +k_f * sc[35];
  J[244] += dqdci; // dwdot[H2]/d[H]
  J[245] -= dqdci; // dwdot[H]/d[H]
  J[275] -= dqdci; // dwdot[A2]/d[H]
  J[285] += dqdci; // dwdot[A2-]/d[H]
  // d()/d[A2]
  dqdci = +k_f * sc[5];
  J[1684] += dqdci; // dwdot[H2]/d[A2]
  J[1685] -= dqdci; // dwdot[H]/d[A2]
  J[1715] -= dqdci; // dwdot[A2]/d[A2]
  J[1725] += dqdci; // dwdot[A2-]/d[A2]
  // d()/d[A2-]
  dqdci = -k_r * sc[4];
  J[2164] += dqdci; // dwdot[H2]/d[A2-]
  J[2165] -= dqdci; // dwdot[H]/d[A2-]
  J[2195] -= dqdci; // dwdot[A2]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2260] += dqdT; // dwdot[H2]/dT
  J[2261] -= dqdT; // dwdot[H]/dT
  J[2291] -= dqdT; // dwdot[A2]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  // reaction 223: A2 + OH <=> A2- + H2O
  // a non-third-body and non-pressure-fall-off reaction
  // forward
  phi_f = sc[6] * sc[35];
  k_f = 0.000963 * exp(3.02 * tc[0] - (2200.96905289668) * invT);
  dlnkfdT = 3.02 * invT + (2200.96905289668) * invT2;
  // reverse
  phi_r = sc[7] * sc[45];
  Kc = exp(g_RT[6] - g_RT[7] + g_RT[35] - g_RT[45]);
  k_r = k_f / Kc;
  dlnKcdT = invT * (-(h_RT[6] + h_RT[35]) + (h_RT[7] + h_RT[45]));
  dkrdT = (dlnkfdT - dlnKcdT) * k_r;
  // rate of progress
  q = k_f * phi_f - k_r * phi_r;
  dqdT = (dlnkfdT * k_f * phi_f - dkrdT * phi_r);
  // update wdot
  wdot[6] -= q;  // OH
  wdot[7] += q;  // H2O
  wdot[35] -= q; // A2
  wdot[45] += q; // A2-
  // d()/d[OH]
  dqdci = +k_f * sc[35];
  J[294] -= dqdci; // dwdot[OH]/d[OH]
  J[295] += dqdci; // dwdot[H2O]/d[OH]
  J[323] -= dqdci; // dwdot[A2]/d[OH]
  J[333] += dqdci; // dwdot[A2-]/d[OH]
  // d()/d[H2O]
  dqdci = -k_r * sc[45];
  J[342] -= dqdci; // dwdot[OH]/d[H2O]
  J[343] += dqdci; // dwdot[H2O]/d[H2O]
  J[371] -= dqdci; // dwdot[A2]/d[H2O]
  J[381] += dqdci; // dwdot[A2-]/d[H2O]
  // d()/d[A2]
  dqdci = +k_f * sc[6];
  J[1686] -= dqdci; // dwdot[OH]/d[A2]
  J[1687] += dqdci; // dwdot[H2O]/d[A2]
  J[1715] -= dqdci; // dwdot[A2]/d[A2]
  J[1725] += dqdci; // dwdot[A2-]/d[A2]
  // d()/d[A2-]
  dqdci = -k_r * sc[7];
  J[2166] -= dqdci; // dwdot[OH]/d[A2-]
  J[2167] += dqdci; // dwdot[H2O]/d[A2-]
  J[2195] -= dqdci; // dwdot[A2]/d[A2-]
  J[2205] += dqdci; // dwdot[A2-]/d[A2-]
  // d()/dT
  J[2262] -= dqdT; // dwdot[OH]/dT
  J[2263] += dqdT; // dwdot[H2O]/dT
  J[2291] -= dqdT; // dwdot[A2]/dT
  J[2301] += dqdT; // dwdot[A2-]/dT

  amrex::Real c_R[47], dcRdT[47], e_RT[47];
  amrex::Real* eh_RT;
  if (consP == 1) {
    cp_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    eh_RT = &h_RT[0];
  } else {
    cv_R(c_R, tc);
    dcvpRdT(dcRdT, tc);
    speciesInternalEnergy(e_RT, tc);
    eh_RT = &e_RT[0];
  }

  amrex::Real cmix = 0.0, ehmix = 0.0, dcmixdT = 0.0, dehmixdT = 0.0;
  for (int k = 0; k < 47; ++k) {
    cmix += c_R[k] * sc[k];
    dcmixdT += dcRdT[k] * sc[k];
    ehmix += eh_RT[k] * wdot[k];
    dehmixdT += invT * (c_R[k] - eh_RT[k]) * wdot[k] + eh_RT[k] * J[2256 + k];
  }

  amrex::Real cmixinv = 1.0 / cmix;
  amrex::Real tmp1 = ehmix * cmixinv;
  amrex::Real tmp3 = cmixinv * T;
  amrex::Real tmp2 = tmp1 * tmp3;
  amrex::Real dehmixdc;
  // dTdot/d[X]
  for (int k = 0; k < 47; ++k) {
    dehmixdc = 0.0;
    for (int m = 0; m < 47; ++m) {
      dehmixdc += eh_RT[m] * J[k * 48 + m];
    }
    J[k * 48 + 47] = tmp2 * c_R[k] - tmp3 * dehmixdc;
  }
  // dTdot/dT
  J[2303] = -tmp1 + tmp2 * dcmixdT - tmp3 * dehmixdT;
#else
  amrex::Abort();
#endif
}

// compute the reaction Jacobian
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
DWDOT(
  amrex::Real* J,
  const amrex::Real* sc,
  const amrex::Real* Tp,
  const int* consP)
{
  amrex::Real c[47];

  for (int k = 0; k < 47; k++) {
    c[k] = 1.e6 * sc[k];
  }

  aJacobian(J, c, *Tp, *consP);

  // dwdot[k]/dT
  // dTdot/d[X]
  for (int k = 0; k < 47; k++) {
    J[2256 + k] *= 1.e-6;
    J[k * 48 + 47] *= 1.e6;
  }
}

// Transport function declarations

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENIMC(int* LENIMC)
{
  *LENIMC = 190;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetLENRMC(int* LENRMC)
{
  *LENRMC = 43616;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNO(int* NO)
{
  *NO = 4;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKK(int* KK)
{
  *KK = 47;
}

AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLITE(int* NLITE)
{
  *NLITE = 2;
}

// Patm in ergs/cm3
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPATM(amrex::Real* PATM)
{
  *PATM = 0.1013250000000000E+07;
}

// the molecular weights in g/mol
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetWT(amrex::Real* WT)
{
  WT[0] = 2.80140000E+01;
  WT[1] = 1.40270000E+01;
  WT[2] = 1.40270000E+01;
  WT[3] = 1.59990000E+01;
  WT[4] = 2.01600000E+00;
  WT[5] = 1.00800000E+00;
  WT[6] = 1.70070000E+01;
  WT[7] = 1.80150000E+01;
  WT[8] = 3.19980000E+01;
  WT[9] = 3.30060000E+01;
  WT[10] = 1.30190000E+01;
  WT[11] = 2.80100000E+01;
  WT[12] = 2.90180000E+01;
  WT[13] = 3.00260000E+01;
  WT[14] = 1.50350000E+01;
  WT[15] = 4.40090000E+01;
  WT[16] = 1.60430000E+01;
  WT[17] = 2.70460000E+01;
  WT[18] = 2.80540000E+01;
  WT[19] = 2.90620000E+01;
  WT[20] = 2.50300000E+01;
  WT[21] = 4.10290000E+01;
  WT[22] = 2.60380000E+01;
  WT[23] = 3.90570000E+01;
  WT[24] = 4.10730000E+01;
  WT[25] = 4.30890000E+01;
  WT[26] = 3.00700000E+01;
  WT[27] = 4.00650000E+01;
  WT[28] = 4.00650000E+01;
  WT[29] = 7.81140000E+01;
  WT[30] = 7.71060000E+01;
  WT[31] = 6.50950000E+01;
  WT[32] = 4.20810000E+01;
  WT[33] = 5.61080000E+01;
  WT[34] = 6.61030000E+01;
  WT[35] = 1.28174000E+02;
  WT[36] = 7.01350000E+01;
  WT[37] = 7.11430000E+01;
  WT[38] = 1.03144000E+02;
  WT[39] = 9.11330000E+01;
  WT[40] = 1.06124000E+02;
  WT[41] = 9.21410000E+01;
  WT[42] = 9.91970000E+01;
  WT[43] = 1.00205000E+02;
  WT[44] = 1.01128000E+02;
  WT[45] = 1.27166000E+02;
  WT[46] = 1.02136000E+02;
}

// the lennard-jones potential well depth eps/kb in K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetEPS(amrex::Real* EPS)
{
  EPS[0] = 9.75300000E+01;
  EPS[1] = 1.44000000E+02;
  EPS[2] = 1.44000000E+02;
  EPS[3] = 8.00000000E+01;
  EPS[4] = 3.80000000E+01;
  EPS[5] = 1.45000000E+02;
  EPS[6] = 8.00000000E+01;
  EPS[7] = 5.72400000E+02;
  EPS[8] = 1.07400000E+02;
  EPS[9] = 1.07400000E+02;
  EPS[10] = 8.00000000E+01;
  EPS[11] = 9.81000000E+01;
  EPS[12] = 4.98000000E+02;
  EPS[13] = 4.98000000E+02;
  EPS[14] = 1.44000000E+02;
  EPS[15] = 2.44000000E+02;
  EPS[16] = 1.41400000E+02;
  EPS[17] = 2.09000000E+02;
  EPS[18] = 2.80800000E+02;
  EPS[19] = 2.52300000E+02;
  EPS[20] = 2.09000000E+02;
  EPS[21] = 1.50000000E+02;
  EPS[22] = 2.09000000E+02;
  EPS[23] = 2.52000000E+02;
  EPS[24] = 2.66800000E+02;
  EPS[25] = 2.66800000E+02;
  EPS[26] = 2.52300000E+02;
  EPS[27] = 2.52000000E+02;
  EPS[28] = 2.52000000E+02;
  EPS[29] = 4.64800000E+02;
  EPS[30] = 4.64800000E+02;
  EPS[31] = 4.00000000E+02;
  EPS[32] = 2.66800000E+02;
  EPS[33] = 3.45700000E+02;
  EPS[34] = 4.00000000E+02;
  EPS[35] = 6.30400000E+02;
  EPS[36] = 3.86200000E+02;
  EPS[37] = 4.40735000E+02;
  EPS[38] = 5.46200000E+02;
  EPS[39] = 4.95300000E+02;
  EPS[40] = 4.95300000E+02;
  EPS[41] = 4.95300000E+02;
  EPS[42] = 4.59600000E+02;
  EPS[43] = 4.59600000E+02;
  EPS[44] = 5.35600000E+02;
  EPS[45] = 6.30400000E+02;
  EPS[46] = 5.35600000E+02;
}

// the lennard-jones collision diameter in Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetSIG(amrex::Real* SIG)
{
  SIG[0] = 3.62100000E+00;
  SIG[1] = 3.80000000E+00;
  SIG[2] = 3.80000000E+00;
  SIG[3] = 2.75000000E+00;
  SIG[4] = 2.92000000E+00;
  SIG[5] = 2.05000000E+00;
  SIG[6] = 2.75000000E+00;
  SIG[7] = 2.60500000E+00;
  SIG[8] = 3.45800000E+00;
  SIG[9] = 3.45800000E+00;
  SIG[10] = 2.75000000E+00;
  SIG[11] = 3.65000000E+00;
  SIG[12] = 3.59000000E+00;
  SIG[13] = 3.59000000E+00;
  SIG[14] = 3.80000000E+00;
  SIG[15] = 3.76300000E+00;
  SIG[16] = 3.74600000E+00;
  SIG[17] = 4.10000000E+00;
  SIG[18] = 3.97100000E+00;
  SIG[19] = 4.30200000E+00;
  SIG[20] = 4.10000000E+00;
  SIG[21] = 2.50000000E+00;
  SIG[22] = 4.10000000E+00;
  SIG[23] = 4.76000000E+00;
  SIG[24] = 4.98200000E+00;
  SIG[25] = 4.98200000E+00;
  SIG[26] = 4.30200000E+00;
  SIG[27] = 4.76000000E+00;
  SIG[28] = 4.76000000E+00;
  SIG[29] = 5.29000000E+00;
  SIG[30] = 5.29000000E+00;
  SIG[31] = 5.20000000E+00;
  SIG[32] = 4.98200000E+00;
  SIG[33] = 5.08800000E+00;
  SIG[34] = 5.20000000E+00;
  SIG[35] = 6.18000000E+00;
  SIG[36] = 5.48900000E+00;
  SIG[37] = 5.04100000E+00;
  SIG[38] = 6.00000000E+00;
  SIG[39] = 5.68000000E+00;
  SIG[40] = 5.68000000E+00;
  SIG[41] = 5.68000000E+00;
  SIG[42] = 6.25300000E+00;
  SIG[43] = 6.25300000E+00;
  SIG[44] = 5.72000000E+00;
  SIG[45] = 6.18000000E+00;
  SIG[46] = 5.72000000E+00;
}

// the dipole moment in Debye
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetDIP(amrex::Real* DIP)
{
  DIP[0] = 0.00000000E+00;
  DIP[1] = 0.00000000E+00;
  DIP[2] = 0.00000000E+00;
  DIP[3] = 0.00000000E+00;
  DIP[4] = 0.00000000E+00;
  DIP[5] = 0.00000000E+00;
  DIP[6] = 0.00000000E+00;
  DIP[7] = 1.84400000E+00;
  DIP[8] = 0.00000000E+00;
  DIP[9] = 0.00000000E+00;
  DIP[10] = 0.00000000E+00;
  DIP[11] = 0.00000000E+00;
  DIP[12] = 0.00000000E+00;
  DIP[13] = 0.00000000E+00;
  DIP[14] = 0.00000000E+00;
  DIP[15] = 0.00000000E+00;
  DIP[16] = 0.00000000E+00;
  DIP[17] = 0.00000000E+00;
  DIP[18] = 0.00000000E+00;
  DIP[19] = 0.00000000E+00;
  DIP[20] = 0.00000000E+00;
  DIP[21] = 0.00000000E+00;
  DIP[22] = 0.00000000E+00;
  DIP[23] = 0.00000000E+00;
  DIP[24] = 0.00000000E+00;
  DIP[25] = 0.00000000E+00;
  DIP[26] = 0.00000000E+00;
  DIP[27] = 0.00000000E+00;
  DIP[28] = 0.00000000E+00;
  DIP[29] = 0.00000000E+00;
  DIP[30] = 0.00000000E+00;
  DIP[31] = 0.00000000E+00;
  DIP[32] = 0.00000000E+00;
  DIP[33] = 3.00000000E-01;
  DIP[34] = 0.00000000E+00;
  DIP[35] = 0.00000000E+00;
  DIP[36] = 4.00000000E-01;
  DIP[37] = 0.00000000E+00;
  DIP[38] = 1.30000000E-01;
  DIP[39] = 4.30000000E-01;
  DIP[40] = 4.30000000E-01;
  DIP[41] = 4.30000000E-01;
  DIP[42] = 0.00000000E+00;
  DIP[43] = 0.00000000E+00;
  DIP[44] = 7.70000000E-01;
  DIP[45] = 0.00000000E+00;
  DIP[46] = 7.70000000E-01;
}

// the polarizability in cubic Angstroms
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetPOL(amrex::Real* POL)
{
  POL[0] = 1.76000000E+00;
  POL[1] = 0.00000000E+00;
  POL[2] = 0.00000000E+00;
  POL[3] = 0.00000000E+00;
  POL[4] = 7.90000000E-01;
  POL[5] = 0.00000000E+00;
  POL[6] = 0.00000000E+00;
  POL[7] = 0.00000000E+00;
  POL[8] = 1.60000000E+00;
  POL[9] = 0.00000000E+00;
  POL[10] = 0.00000000E+00;
  POL[11] = 1.95000000E+00;
  POL[12] = 0.00000000E+00;
  POL[13] = 0.00000000E+00;
  POL[14] = 0.00000000E+00;
  POL[15] = 2.65000000E+00;
  POL[16] = 2.60000000E+00;
  POL[17] = 0.00000000E+00;
  POL[18] = 0.00000000E+00;
  POL[19] = 0.00000000E+00;
  POL[20] = 0.00000000E+00;
  POL[21] = 0.00000000E+00;
  POL[22] = 0.00000000E+00;
  POL[23] = 0.00000000E+00;
  POL[24] = 0.00000000E+00;
  POL[25] = 0.00000000E+00;
  POL[26] = 0.00000000E+00;
  POL[27] = 0.00000000E+00;
  POL[28] = 0.00000000E+00;
  POL[29] = 1.03200000E+01;
  POL[30] = 1.03200000E+01;
  POL[31] = 0.00000000E+00;
  POL[32] = 0.00000000E+00;
  POL[33] = 0.00000000E+00;
  POL[34] = 0.00000000E+00;
  POL[35] = 1.65000000E+01;
  POL[36] = 0.00000000E+00;
  POL[37] = 0.00000000E+00;
  POL[38] = 1.50000000E+01;
  POL[39] = 1.23000000E+01;
  POL[40] = 1.23000000E+01;
  POL[41] = 1.23000000E+01;
  POL[42] = 0.00000000E+00;
  POL[43] = 0.00000000E+00;
  POL[44] = 1.20000000E+01;
  POL[45] = 1.65000000E+01;
  POL[46] = 1.20000000E+01;
}

// the rotational relaxation collision number at 298 K
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetZROT(amrex::Real* ZROT)
{
  ZROT[0] = 4.00000000E+00;
  ZROT[1] = 0.00000000E+00;
  ZROT[2] = 0.00000000E+00;
  ZROT[3] = 0.00000000E+00;
  ZROT[4] = 2.80000000E+02;
  ZROT[5] = 0.00000000E+00;
  ZROT[6] = 0.00000000E+00;
  ZROT[7] = 4.00000000E+00;
  ZROT[8] = 3.80000000E+00;
  ZROT[9] = 1.00000000E+00;
  ZROT[10] = 0.00000000E+00;
  ZROT[11] = 1.80000000E+00;
  ZROT[12] = 0.00000000E+00;
  ZROT[13] = 2.00000000E+00;
  ZROT[14] = 0.00000000E+00;
  ZROT[15] = 2.10000000E+00;
  ZROT[16] = 1.30000000E+01;
  ZROT[17] = 1.00000000E+00;
  ZROT[18] = 1.50000000E+00;
  ZROT[19] = 1.50000000E+00;
  ZROT[20] = 2.50000000E+00;
  ZROT[21] = 1.00000000E+00;
  ZROT[22] = 2.50000000E+00;
  ZROT[23] = 1.00000000E+00;
  ZROT[24] = 1.00000000E+00;
  ZROT[25] = 1.00000000E+00;
  ZROT[26] = 1.50000000E+00;
  ZROT[27] = 1.00000000E+00;
  ZROT[28] = 1.00000000E+00;
  ZROT[29] = 1.00000000E+00;
  ZROT[30] = 1.00000000E+00;
  ZROT[31] = 1.00000000E+00;
  ZROT[32] = 1.00000000E+00;
  ZROT[33] = 1.00000000E+00;
  ZROT[34] = 0.00000000E+00;
  ZROT[35] = 1.00000000E+00;
  ZROT[36] = 1.00000000E+00;
  ZROT[37] = 0.00000000E+00;
  ZROT[38] = 1.00000000E+00;
  ZROT[39] = 1.00000000E+00;
  ZROT[40] = 1.00000000E+00;
  ZROT[41] = 1.00000000E+00;
  ZROT[42] = 1.00000000E+00;
  ZROT[43] = 1.00000000E+00;
  ZROT[44] = 1.00000000E+00;
  ZROT[45] = 1.00000000E+00;
  ZROT[46] = 1.00000000E+00;
}

// 0: monoatomic, 1: linear, 2: nonlinear
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetNLIN(int* NLIN)
{
  NLIN[0] = 1;
  NLIN[1] = 1;
  NLIN[2] = 1;
  NLIN[3] = 0;
  NLIN[4] = 1;
  NLIN[5] = 0;
  NLIN[6] = 1;
  NLIN[7] = 2;
  NLIN[8] = 1;
  NLIN[9] = 2;
  NLIN[10] = 1;
  NLIN[11] = 1;
  NLIN[12] = 2;
  NLIN[13] = 2;
  NLIN[14] = 1;
  NLIN[15] = 1;
  NLIN[16] = 2;
  NLIN[17] = 2;
  NLIN[18] = 2;
  NLIN[19] = 2;
  NLIN[20] = 1;
  NLIN[21] = 2;
  NLIN[22] = 1;
  NLIN[23] = 2;
  NLIN[24] = 2;
  NLIN[25] = 2;
  NLIN[26] = 2;
  NLIN[27] = 2;
  NLIN[28] = 2;
  NLIN[29] = 2;
  NLIN[30] = 2;
  NLIN[31] = 2;
  NLIN[32] = 2;
  NLIN[33] = 2;
  NLIN[34] = 2;
  NLIN[35] = 2;
  NLIN[36] = 2;
  NLIN[37] = 2;
  NLIN[38] = 2;
  NLIN[39] = 2;
  NLIN[40] = 2;
  NLIN[41] = 2;
  NLIN[42] = 2;
  NLIN[43] = 2;
  NLIN[44] = 2;
  NLIN[45] = 2;
  NLIN[46] = 2;
}

// Poly fits for the viscosities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFETA(amrex::Real* COFETA)
{
  COFETA[0] = -1.65695492E+01;
  COFETA[1] = 2.39056562E+00;
  COFETA[2] = -2.34558144E-01;
  COFETA[3] = 1.05024037E-02;
  COFETA[4] = -2.02663506E+01;
  COFETA[5] = 3.63241793E+00;
  COFETA[6] = -3.95581049E-01;
  COFETA[7] = 1.74725495E-02;
  COFETA[8] = -2.02663506E+01;
  COFETA[9] = 3.63241793E+00;
  COFETA[10] = -3.95581049E-01;
  COFETA[11] = 1.74725495E-02;
  COFETA[12] = -1.50926370E+01;
  COFETA[13] = 1.92606504E+00;
  COFETA[14] = -1.73487476E-01;
  COFETA[15] = 7.82572931E-03;
  COFETA[16] = -1.38347555E+01;
  COFETA[17] = 1.00106621E+00;
  COFETA[18] = -4.98105694E-02;
  COFETA[19] = 2.31450475E-03;
  COFETA[20] = -2.04078253E+01;
  COFETA[21] = 3.65436395E+00;
  COFETA[22] = -3.98339635E-01;
  COFETA[23] = 1.75883009E-02;
  COFETA[24] = -1.50620876E+01;
  COFETA[25] = 1.92606504E+00;
  COFETA[26] = -1.73487476E-01;
  COFETA[27] = 7.82572931E-03;
  COFETA[28] = -1.05420930E+01;
  COFETA[29] = -1.37777266E+00;
  COFETA[30] = 4.20502561E-01;
  COFETA[31] = -2.40627344E-02;
  COFETA[32] = -1.71618439E+01;
  COFETA[33] = 2.68036374E+00;
  COFETA[34] = -2.72570227E-01;
  COFETA[35] = 1.21650964E-02;
  COFETA[36] = -1.71463359E+01;
  COFETA[37] = 2.68036374E+00;
  COFETA[38] = -2.72570227E-01;
  COFETA[39] = 1.21650964E-02;
  COFETA[40] = -1.51956952E+01;
  COFETA[41] = 1.92606504E+00;
  COFETA[42] = -1.73487476E-01;
  COFETA[43] = 7.82572931E-03;
  COFETA[44] = -1.66188439E+01;
  COFETA[45] = 2.40307799E+00;
  COFETA[46] = -2.36167638E-01;
  COFETA[47] = 1.05714061E-02;
  COFETA[48] = -1.98501400E+01;
  COFETA[49] = 2.69480162E+00;
  COFETA[50] = -1.65880845E-01;
  COFETA[51] = 3.14504769E-03;
  COFETA[52] = -1.98330663E+01;
  COFETA[53] = 2.69480162E+00;
  COFETA[54] = -1.65880845E-01;
  COFETA[55] = 3.14504769E-03;
  COFETA[56] = -2.02316522E+01;
  COFETA[57] = 3.63241793E+00;
  COFETA[58] = -3.95581049E-01;
  COFETA[59] = 1.74725495E-02;
  COFETA[60] = -2.40015087E+01;
  COFETA[61] = 5.14359547E+00;
  COFETA[62] = -5.74269731E-01;
  COFETA[63] = 2.44937679E-02;
  COFETA[64] = -2.00094678E+01;
  COFETA[65] = 3.57220167E+00;
  COFETA[66] = -3.87936446E-01;
  COFETA[67] = 1.71483254E-02;
  COFETA[68] = -2.33476586E+01;
  COFETA[69] = 4.80350223E+00;
  COFETA[70] = -5.38341336E-01;
  COFETA[71] = 2.32747213E-02;
  COFETA[72] = -2.50655480E+01;
  COFETA[73] = 5.33982977E+00;
  COFETA[74] = -5.89982992E-01;
  COFETA[75] = 2.47780650E-02;
  COFETA[76] = -2.46581444E+01;
  COFETA[77] = 5.19497183E+00;
  COFETA[78] = -5.78827339E-01;
  COFETA[79] = 2.46050921E-02;
  COFETA[80] = -2.33863906E+01;
  COFETA[81] = 4.80350223E+00;
  COFETA[82] = -5.38341336E-01;
  COFETA[83] = 2.32747213E-02;
  COFETA[84] = -1.92183918E+01;
  COFETA[85] = 3.75164499E+00;
  COFETA[86] = -4.10390993E-01;
  COFETA[87] = 1.80861665E-02;
  COFETA[88] = -2.33666497E+01;
  COFETA[89] = 4.80350223E+00;
  COFETA[90] = -5.38341336E-01;
  COFETA[91] = 2.32747213E-02;
  COFETA[92] = -2.47022558E+01;
  COFETA[93] = 5.19146996E+00;
  COFETA[94] = -5.78430696E-01;
  COFETA[95] = 2.45902122E-02;
  COFETA[96] = -2.51527894E+01;
  COFETA[97] = 5.30723075E+00;
  COFETA[98] = -5.89742369E-01;
  COFETA[99] = 2.49294033E-02;
  COFETA[100] = -2.51288310E+01;
  COFETA[101] = 5.30723075E+00;
  COFETA[102] = -5.89742369E-01;
  COFETA[103] = 2.49294033E-02;
  COFETA[104] = -2.46410962E+01;
  COFETA[105] = 5.19497183E+00;
  COFETA[106] = -5.78827339E-01;
  COFETA[107] = 2.46050921E-02;
  COFETA[108] = -2.46895153E+01;
  COFETA[109] = 5.19146996E+00;
  COFETA[110] = -5.78430696E-01;
  COFETA[111] = 2.45902122E-02;
  COFETA[112] = -2.46895153E+01;
  COFETA[113] = 5.19146996E+00;
  COFETA[114] = -5.78430696E-01;
  COFETA[115] = 2.45902122E-02;
  COFETA[116] = -2.15748779E+01;
  COFETA[117] = 3.36866449E+00;
  COFETA[118] = -2.66238062E-01;
  COFETA[119] = 8.00671416E-03;
  COFETA[120] = -2.15813720E+01;
  COFETA[121] = 3.36866449E+00;
  COFETA[122] = -2.66238062E-01;
  COFETA[123] = 8.00671416E-03;
  COFETA[124] = -2.38161266E+01;
  COFETA[125] = 4.43522335E+00;
  COFETA[126] = -4.29695214E-01;
  COFETA[127] = 1.60919951E-02;
  COFETA[128] = -2.51406667E+01;
  COFETA[129] = 5.30723075E+00;
  COFETA[130] = -5.89742369E-01;
  COFETA[131] = 2.49294033E-02;
  COFETA[132] = -2.49619938E+01;
  COFETA[133] = 5.04644268E+00;
  COFETA[134] = -5.29535741E-01;
  COFETA[135] = 2.12476532E-02;
  COFETA[136] = -2.38084435E+01;
  COFETA[137] = 4.43522335E+00;
  COFETA[138] = -4.29695214E-01;
  COFETA[139] = 1.60919951E-02;
  COFETA[140] = -1.40928198E+01;
  COFETA[141] = -7.25026319E-02;
  COFETA[142] = 2.37630437E-01;
  COFETA[143] = -1.60600189E-02;
  COFETA[144] = -2.42040045E+01;
  COFETA[145] = 4.60377391E+00;
  COFETA[146] = -4.56799057E-01;
  COFETA[147] = 1.74771832E-02;
  COFETA[148] = -2.23900820E+01;
  COFETA[149] = 3.78460980E+00;
  COFETA[150] = -3.29370574E-01;
  COFETA[151] = 1.11069352E-02;
  COFETA[152] = -1.81331215E+01;
  COFETA[153] = 1.72216058E+00;
  COFETA[154] = -2.23735008E-02;
  COFETA[155] = -3.75123114E-03;
  COFETA[156] = -2.02962635E+01;
  COFETA[157] = 2.74306417E+00;
  COFETA[158] = -1.73194602E-01;
  COFETA[159] = 3.50387389E-03;
  COFETA[160] = -2.02201194E+01;
  COFETA[161] = 2.74306417E+00;
  COFETA[162] = -1.73194602E-01;
  COFETA[163] = 3.50387389E-03;
  COFETA[164] = -2.02907635E+01;
  COFETA[165] = 2.74306417E+00;
  COFETA[166] = -1.73194602E-01;
  COFETA[167] = 3.50387389E-03;
  COFETA[168] = -2.19891752E+01;
  COFETA[169] = 3.46341268E+00;
  COFETA[170] = -2.80516687E-01;
  COFETA[171] = 8.70427548E-03;
  COFETA[172] = -2.19841200E+01;
  COFETA[173] = 3.46341268E+00;
  COFETA[174] = -2.80516687E-01;
  COFETA[175] = 8.70427548E-03;
  COFETA[176] = -1.84885304E+01;
  COFETA[177] = 1.92757545E+00;
  COFETA[178] = -5.28989512E-02;
  COFETA[179] = -2.27633427E-03;
  COFETA[180] = -1.40967675E+01;
  COFETA[181] = -7.25026319E-02;
  COFETA[182] = 2.37630437E-01;
  COFETA[183] = -1.60600189E-02;
  COFETA[184] = -1.84835713E+01;
  COFETA[185] = 1.92757545E+00;
  COFETA[186] = -5.28989512E-02;
  COFETA[187] = -2.27633427E-03;
}

// Poly fits for the conductivities, dim NO*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFLAM(amrex::Real* COFLAM)
{
  COFLAM[0] = 1.29305954E+01;
  COFLAM[1] = -3.52816965E+00;
  COFLAM[2] = 6.45498434E-01;
  COFLAM[3] = -3.19375023E-02;
  COFLAM[4] = 1.89383237E+01;
  COFLAM[5] = -6.51017886E+00;
  COFLAM[6] = 1.13292023E+00;
  COFLAM[7] = -5.69603041E-02;
  COFLAM[8] = 1.29177889E+01;
  COFLAM[9] = -3.73745368E+00;
  COFLAM[10] = 7.15830762E-01;
  COFLAM[11] = -3.63846782E-02;
  COFLAM[12] = 1.69268564E+00;
  COFLAM[13] = 1.92606504E+00;
  COFLAM[14] = -1.73487476E-01;
  COFLAM[15] = 7.82572931E-03;
  COFLAM[16] = 9.24082480E+00;
  COFLAM[17] = -4.69567526E-01;
  COFLAM[18] = 1.15980102E-01;
  COFLAM[19] = -2.61033156E-03;
  COFLAM[20] = -8.57944636E-01;
  COFLAM[21] = 3.65436395E+00;
  COFLAM[22] = -3.98339635E-01;
  COFLAM[23] = 1.75883009E-02;
  COFLAM[24] = 1.50119775E+01;
  COFLAM[25] = -3.63267617E+00;
  COFLAM[26] = 5.92838774E-01;
  COFLAM[27] = -2.62920291E-02;
  COFLAM[28] = 2.33729836E+01;
  COFLAM[29] = -8.96536178E+00;
  COFLAM[30] = 1.52828630E+00;
  COFLAM[31] = -7.58551616E-02;
  COFLAM[32] = -1.93717634E+00;
  COFLAM[33] = 2.89110257E+00;
  COFLAM[34] = -2.71096988E-01;
  COFLAM[35] = 1.15344939E-02;
  COFLAM[36] = -1.12959874E+00;
  COFLAM[37] = 2.34014328E+00;
  COFLAM[38] = -1.63245076E-01;
  COFLAM[39] = 5.80319843E-03;
  COFLAM[40] = 2.08093784E+01;
  COFLAM[41] = -6.24179833E+00;
  COFLAM[42] = 9.82386955E-01;
  COFLAM[43] = -4.50360445E-02;
  COFLAM[44] = 1.18777275E+01;
  COFLAM[45] = -3.15463597E+00;
  COFLAM[46] = 6.01972754E-01;
  COFLAM[47] = -3.03211015E-02;
  COFLAM[48] = 6.30244184E+00;
  COFLAM[49] = -2.22810729E+00;
  COFLAM[50] = 6.37340380E-01;
  COFLAM[51] = -3.81055943E-02;
  COFLAM[52] = 5.39305623E+00;
  COFLAM[53] = -2.39312259E+00;
  COFLAM[54] = 7.39585006E-01;
  COFLAM[55] = -4.58435469E-02;
  COFLAM[56] = 1.32973930E+01;
  COFLAM[57] = -4.31770435E+00;
  COFLAM[58] = 8.57562657E-01;
  COFLAM[59] = -4.51644079E-02;
  COFLAM[60] = -1.13649201E+01;
  COFLAM[61] = 5.88177354E+00;
  COFLAM[62] = -5.68651792E-01;
  COFLAM[63] = 2.03561484E-02;
  COFLAM[64] = 1.07413906E+01;
  COFLAM[65] = -3.75495113E+00;
  COFLAM[66] = 8.44677954E-01;
  COFLAM[67] = -4.65824172E-02;
  COFLAM[68] = -9.10383958E+00;
  COFLAM[69] = 4.54798776E+00;
  COFLAM[70] = -3.18114363E-01;
  COFLAM[71] = 6.59577260E-03;
  COFLAM[72] = -1.46152767E+01;
  COFLAM[73] = 6.36251222E+00;
  COFLAM[74] = -5.03831917E-01;
  COFLAM[75] = 1.26120967E-02;
  COFLAM[76] = -8.95009242E+00;
  COFLAM[77] = 4.02514973E+00;
  COFLAM[78] = -1.84063835E-01;
  COFLAM[79] = -1.94055121E-03;
  COFLAM[80] = 1.33513486E+01;
  COFLAM[81] = -4.32125836E+00;
  COFLAM[82] = 8.36087087E-01;
  COFLAM[83] = -4.37692829E-02;
  COFLAM[84] = -5.96382011E+00;
  COFLAM[85] = 4.39355990E+00;
  COFLAM[86] = -3.97598235E-01;
  COFLAM[87] = 1.39749618E-02;
  COFLAM[88] = -7.70164041E+00;
  COFLAM[89] = 4.56884430E+00;
  COFLAM[90] = -4.04747578E-01;
  COFLAM[91] = 1.40841066E-02;
  COFLAM[92] = -9.88661039E+00;
  COFLAM[93] = 5.06298130E+00;
  COFLAM[94] = -4.26006616E-01;
  COFLAM[95] = 1.29826840E-02;
  COFLAM[96] = -2.07930579E+01;
  COFLAM[97] = 9.11435902E+00;
  COFLAM[98] = -9.20137158E-01;
  COFLAM[99] = 3.31054534E-02;
  COFLAM[100] = -1.92915884E+01;
  COFLAM[101] = 8.40108739E+00;
  COFLAM[102] = -8.06294760E-01;
  COFLAM[103] = 2.74431305E-02;
  COFLAM[104] = -1.09902158E+01;
  COFLAM[105] = 4.70647555E+00;
  COFLAM[106] = -2.52272322E-01;
  COFLAM[107] = 1.75186734E-04;
  COFLAM[108] = -1.03464650E+01;
  COFLAM[109] = 4.84988931E+00;
  COFLAM[110] = -3.41960008E-01;
  COFLAM[111] = 6.99461322E-03;
  COFLAM[112] = -1.52723851E+01;
  COFLAM[113] = 6.90565108E+00;
  COFLAM[114] = -6.26093128E-01;
  COFLAM[115] = 2.00161224E-02;
  COFLAM[116] = -3.54707833E+01;
  COFLAM[117] = 1.45920260E+01;
  COFLAM[118] = -1.60773847E+00;
  COFLAM[119] = 6.19393379E-02;
  COFLAM[120] = -3.41006630E+01;
  COFLAM[121] = 1.41098334E+01;
  COFLAM[122] = -1.55451566E+00;
  COFLAM[123] = 5.99844691E-02;
  COFLAM[124] = -1.09574022E+01;
  COFLAM[125] = 4.55430312E+00;
  COFLAM[126] = -2.40663030E-01;
  COFLAM[127] = -6.66097403E-05;
  COFLAM[128] = -1.68253871E+01;
  COFLAM[129] = 7.24461078E+00;
  COFLAM[130] = -6.31940693E-01;
  COFLAM[131] = 1.87192934E-02;
  COFLAM[132] = -3.67339043E+01;
  COFLAM[133] = 1.59744078E+01;
  COFLAM[134] = -1.90662272E+00;
  COFLAM[135] = 8.08219459E-02;
  COFLAM[136] = -3.55833188E+01;
  COFLAM[137] = 1.47945674E+01;
  COFLAM[138] = -1.65153824E+00;
  COFLAM[139] = 6.45535789E-02;
  COFLAM[140] = -3.07148700E+01;
  COFLAM[141] = 1.23787251E+01;
  COFLAM[142] = -1.28651331E+00;
  COFLAM[143] = 4.67010915E-02;
  COFLAM[144] = -3.73508036E+01;
  COFLAM[145] = 1.61634376E+01;
  COFLAM[146] = -1.92857803E+00;
  COFLAM[147] = 8.17158160E-02;
  COFLAM[148] = -3.36360096E+01;
  COFLAM[149] = 1.45542528E+01;
  COFLAM[150] = -1.68908730E+00;
  COFLAM[151] = 7.00248265E-02;
  COFLAM[152] = -2.65202617E+01;
  COFLAM[153] = 1.08944124E+01;
  COFLAM[154] = -1.11019950E+00;
  COFLAM[155] = 3.96441792E-02;
  COFLAM[156] = -3.00638095E+01;
  COFLAM[157] = 1.24164745E+01;
  COFLAM[158] = -1.31994742E+00;
  COFLAM[159] = 4.92636092E-02;
  COFLAM[160] = -2.84533494E+01;
  COFLAM[161] = 1.16983536E+01;
  COFLAM[162] = -1.21665377E+00;
  COFLAM[163] = 4.42817181E-02;
  COFLAM[164] = -2.98898392E+01;
  COFLAM[165] = 1.21515071E+01;
  COFLAM[166] = -1.25828290E+00;
  COFLAM[167] = 4.54542847E-02;
  COFLAM[168] = -3.91754500E+01;
  COFLAM[169] = 1.68723512E+01;
  COFLAM[170] = -2.03082338E+00;
  COFLAM[171] = 8.68544118E-02;
  COFLAM[172] = -3.66476228E+01;
  COFLAM[173] = 1.57235353E+01;
  COFLAM[174] = -1.85507606E+00;
  COFLAM[175] = 7.79590519E-02;
  COFLAM[176] = -2.52008499E+01;
  COFLAM[177] = 1.04925728E+01;
  COFLAM[178] = -1.07274303E+00;
  COFLAM[179] = 3.86254768E-02;
  COFLAM[180] = -2.99566246E+01;
  COFLAM[181] = 1.21178493E+01;
  COFLAM[182] = -1.25883769E+00;
  COFLAM[183] = 4.57331995E-02;
  COFLAM[184] = -2.61857396E+01;
  COFLAM[185] = 1.08241942E+01;
  COFLAM[186] = -1.10682764E+00;
  COFLAM[187] = 3.97639399E-02;
}

// Poly fits for the diffusion coefficients, dim NO*KK*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFD(amrex::Real* COFD)
{
  COFD[0] = -1.49828551E+01;
  COFD[1] = 3.25781069E+00;
  COFD[2] = -2.12199367E-01;
  COFD[3] = 9.36657283E-03;
  COFD[4] = -1.59404910E+01;
  COFD[5] = 3.66853818E+00;
  COFD[6] = -2.64346221E-01;
  COFD[7] = 1.15784613E-02;
  COFD[8] = -1.59404910E+01;
  COFD[9] = 3.66853818E+00;
  COFD[10] = -2.64346221E-01;
  COFD[11] = 1.15784613E-02;
  COFD[12] = -1.40756909E+01;
  COFD[13] = 3.07549274E+00;
  COFD[14] = -1.88889344E-01;
  COFD[15] = 8.37152866E-03;
  COFD[16] = -1.16906458E+01;
  COFD[17] = 2.47469981E+00;
  COFD[18] = -1.10436257E-01;
  COFD[19] = 4.95273813E-03;
  COFD[20] = -1.42894603E+01;
  COFD[21] = 3.67490723E+00;
  COFD[22] = -2.65114792E-01;
  COFD[23] = 1.16092671E-02;
  COFD[24] = -1.40949183E+01;
  COFD[25] = 3.07549274E+00;
  COFD[26] = -1.88889344E-01;
  COFD[27] = 8.37152866E-03;
  COFD[28] = -2.10643264E+01;
  COFD[29] = 5.53614864E+00;
  COFD[30] = -4.86046753E-01;
  COFD[31] = 2.03659193E-02;
  COFD[32] = -1.52414498E+01;
  COFD[33] = 3.35922578E+00;
  COFD[34] = -2.25181399E-01;
  COFD[35] = 9.92132878E-03;
  COFD[36] = -1.52486292E+01;
  COFD[37] = 3.35922578E+00;
  COFD[38] = -2.25181399E-01;
  COFD[39] = 9.92132878E-03;
  COFD[40] = -1.40076869E+01;
  COFD[41] = 3.07549274E+00;
  COFD[42] = -1.88889344E-01;
  COFD[43] = 8.37152866E-03;
  COFD[44] = -1.50031706E+01;
  COFD[45] = 3.26223357E+00;
  COFD[46] = -2.12746642E-01;
  COFD[47] = 9.38912883E-03;
  COFD[48] = -2.04750606E+01;
  COFD[49] = 5.23112374E+00;
  COFD[50] = -4.54967682E-01;
  COFD[51] = 1.93570423E-02;
  COFD[52] = -2.04833743E+01;
  COFD[53] = 5.23112374E+00;
  COFD[54] = -4.54967682E-01;
  COFD[55] = 1.93570423E-02;
  COFD[56] = -1.59633426E+01;
  COFD[57] = 3.66853818E+00;
  COFD[58] = -2.64346221E-01;
  COFD[59] = 1.15784613E-02;
  COFD[60] = -1.81432499E+01;
  COFD[61] = 4.37565431E+00;
  COFD[62] = -3.53906025E-01;
  COFD[63] = 1.53760786E-02;
  COFD[64] = -1.59327344E+01;
  COFD[65] = 3.65620899E+00;
  COFD[66] = -2.62933804E-01;
  COFD[67] = 1.15253223E-02;
  COFD[68] = -1.76099599E+01;
  COFD[69] = 4.19171952E+00;
  COFD[70] = -3.31354810E-01;
  COFD[71] = 1.44520623E-02;
  COFD[72] = -1.85864196E+01;
  COFD[73] = 4.54915847E+00;
  COFD[74] = -3.75000738E-01;
  COFD[75] = 1.62324821E-02;
  COFD[76] = -1.83166409E+01;
  COFD[77] = 4.42045763E+00;
  COFD[78] = -3.59451578E-01;
  COFD[79] = 1.56056164E-02;
  COFD[80] = -1.75898787E+01;
  COFD[81] = 4.19171952E+00;
  COFD[82] = -3.31354810E-01;
  COFD[83] = 1.44520623E-02;
  COFD[84] = -1.59884349E+01;
  COFD[85] = 3.72220402E+00;
  COFD[86] = -2.71150591E-01;
  COFD[87] = 1.18665265E-02;
  COFD[88] = -1.76002073E+01;
  COFD[89] = 4.19171952E+00;
  COFD[90] = -3.31354810E-01;
  COFD[91] = 1.44520623E-02;
  COFD[92] = -1.84917329E+01;
  COFD[93] = 4.41886064E+00;
  COFD[94] = -3.59254256E-01;
  COFD[95] = 1.55974661E-02;
  COFD[96] = -1.87434421E+01;
  COFD[97] = 4.48550694E+00;
  COFD[98] = -3.67277454E-01;
  COFD[99] = 1.59194755E-02;
  COFD[100] = -1.87530190E+01;
  COFD[101] = 4.48550694E+00;
  COFD[102] = -3.67277454E-01;
  COFD[103] = 1.59194755E-02;
  COFD[104] = -1.83249359E+01;
  COFD[105] = 4.42045763E+00;
  COFD[106] = -3.59451578E-01;
  COFD[107] = 1.56056164E-02;
  COFD[108] = -1.84970149E+01;
  COFD[109] = 4.41886064E+00;
  COFD[110] = -3.59254256E-01;
  COFD[111] = 1.55974661E-02;
  COFD[112] = -1.84970149E+01;
  COFD[113] = 4.41886064E+00;
  COFD[114] = -3.59254256E-01;
  COFD[115] = 1.55974661E-02;
  COFD[116] = -2.08547718E+01;
  COFD[117] = 5.15581320E+00;
  COFD[118] = -4.46543388E-01;
  COFD[119] = 1.90458118E-02;
  COFD[120] = -2.08530494E+01;
  COFD[121] = 5.15581320E+00;
  COFD[122] = -4.46543388E-01;
  COFD[123] = 1.90458118E-02;
  COFD[124] = -2.03344979E+01;
  COFD[125] = 4.99860239E+00;
  COFD[126] = -4.28838375E-01;
  COFD[127] = 1.83863470E-02;
  COFD[128] = -1.87483223E+01;
  COFD[129] = 4.48550694E+00;
  COFD[130] = -3.67277454E-01;
  COFD[131] = 1.59194755E-02;
  COFD[132] = -1.97444557E+01;
  COFD[133] = 4.80962620E+00;
  COFD[134] = -4.06326592E-01;
  COFD[135] = 1.74909207E-02;
  COFD[136] = -2.03367971E+01;
  COFD[137] = 4.99860239E+00;
  COFD[138] = -4.28838375E-01;
  COFD[139] = 1.83863470E-02;
  COFD[140] = -2.19467845E+01;
  COFD[141] = 5.41691945E+00;
  COFD[142] = -4.73388270E-01;
  COFD[143] = 1.99279280E-02;
  COFD[144] = -2.02840316E+01;
  COFD[145] = 4.95484018E+00;
  COFD[146] = -4.23654881E-01;
  COFD[147] = 1.81813866E-02;
  COFD[148] = -2.06548360E+01;
  COFD[149] = 5.11678107E+00;
  COFD[150] = -4.42706538E-01;
  COFD[151] = 1.89296424E-02;
  COFD[152] = -2.16195492E+01;
  COFD[153] = 5.35046632E+00;
  COFD[154] = -4.68831631E-01;
  COFD[155] = 1.98945272E-02;
  COFD[156] = -2.11724466E+01;
  COFD[157] = 5.22581725E+00;
  COFD[158] = -4.54351700E-01;
  COFD[159] = 1.93332012E-02;
  COFD[160] = -2.11893352E+01;
  COFD[161] = 5.22581725E+00;
  COFD[162] = -4.54351700E-01;
  COFD[163] = 1.93332012E-02;
  COFD[164] = -2.11737344E+01;
  COFD[165] = 5.22581725E+00;
  COFD[166] = -4.54351700E-01;
  COFD[167] = 1.93332012E-02;
  COFD[168] = -2.10674576E+01;
  COFD[169] = 5.15027524E+00;
  COFD[170] = -4.46126111E-01;
  COFD[171] = 1.90401391E-02;
  COFD[172] = -2.10685665E+01;
  COFD[173] = 5.15027524E+00;
  COFD[174] = -4.46126111E-01;
  COFD[175] = 1.90401391E-02;
  COFD[176] = -2.15158962E+01;
  COFD[177] = 5.33752141E+00;
  COFD[178] = -4.67533000E-01;
  COFD[179] = 1.98534748E-02;
  COFD[180] = -2.19460742E+01;
  COFD[181] = 5.41691945E+00;
  COFD[182] = -4.73388270E-01;
  COFD[183] = 1.99279280E-02;
  COFD[184] = -2.15169677E+01;
  COFD[185] = 5.33752141E+00;
  COFD[186] = -4.67533000E-01;
  COFD[187] = 1.98534748E-02;
  COFD[188] = -1.59404910E+01;
  COFD[189] = 3.66853818E+00;
  COFD[190] = -2.64346221E-01;
  COFD[191] = 1.15784613E-02;
  COFD[192] = -1.73027539E+01;
  COFD[193] = 4.21416723E+00;
  COFD[194] = -3.34163932E-01;
  COFD[195] = 1.45697432E-02;
  COFD[196] = -1.73027539E+01;
  COFD[197] = 4.21416723E+00;
  COFD[198] = -3.34163932E-01;
  COFD[199] = 1.45697432E-02;
  COFD[200] = -1.50584188E+01;
  COFD[201] = 3.47945612E+00;
  COFD[202] = -2.40703722E-01;
  COFD[203] = 1.05907441E-02;
  COFD[204] = -1.25099100E+01;
  COFD[205] = 2.77873601E+00;
  COFD[206] = -1.50637360E-01;
  COFD[207] = 6.72684281E-03;
  COFD[208] = -1.57972520E+01;
  COFD[209] = 4.22225052E+00;
  COFD[210] = -3.35156428E-01;
  COFD[211] = 1.46104855E-02;
  COFD[212] = -1.50724583E+01;
  COFD[213] = 3.47945612E+00;
  COFD[214] = -2.40703722E-01;
  COFD[215] = 1.05907441E-02;
  COFD[216] = -2.12639169E+01;
  COFD[217] = 5.61184117E+00;
  COFD[218] = -4.90532156E-01;
  COFD[219] = 2.03507922E-02;
  COFD[220] = -1.63254645E+01;
  COFD[221] = 3.82388595E+00;
  COFD[222] = -2.84480724E-01;
  COFD[223] = 1.24506311E-02;
  COFD[224] = -1.63301401E+01;
  COFD[225] = 3.82388595E+00;
  COFD[226] = -2.84480724E-01;
  COFD[227] = 1.24506311E-02;
  COFD[228] = -1.50076229E+01;
  COFD[229] = 3.47945612E+00;
  COFD[230] = -2.40703722E-01;
  COFD[231] = 1.05907441E-02;
  COFD[232] = -1.59634493E+01;
  COFD[233] = 3.67388294E+00;
  COFD[234] = -2.64990709E-01;
  COFD[235] = 1.16042706E-02;
  COFD[236] = -2.14160667E+01;
  COFD[237] = 5.56531152E+00;
  COFD[238] = -4.88789821E-01;
  COFD[239] = 2.04437116E-02;
  COFD[240] = -2.14215667E+01;
  COFD[241] = 5.56531152E+00;
  COFD[242] = -4.88789821E-01;
  COFD[243] = 2.04437116E-02;
  COFD[244] = -1.73198022E+01;
  COFD[245] = 4.21416723E+00;
  COFD[246] = -3.34163932E-01;
  COFD[247] = 1.45697432E-02;
  COFD[248] = -1.93015519E+01;
  COFD[249] = 4.85015581E+00;
  COFD[250] = -4.10945109E-01;
  COFD[251] = 1.76651398E-02;
  COFD[252] = -1.72556722E+01;
  COFD[253] = 4.19029808E+00;
  COFD[254] = -3.31177076E-01;
  COFD[255] = 1.44446234E-02;
  COFD[256] = -1.88306727E+01;
  COFD[257] = 4.68393046E+00;
  COFD[258] = -3.91610863E-01;
  COFD[259] = 1.69174645E-02;
  COFD[260] = -1.98418097E+01;
  COFD[261] = 5.04367502E+00;
  COFD[262] = -4.34153325E-01;
  COFD[263] = 1.85956055E-02;
  COFD[264] = -1.95263296E+01;
  COFD[265] = 4.90255048E+00;
  COFD[266] = -4.17368501E-01;
  COFD[267] = 1.79287358E-02;
  COFD[268] = -1.88171051E+01;
  COFD[269] = 4.68393046E+00;
  COFD[270] = -3.91610863E-01;
  COFD[271] = 1.69174645E-02;
  COFD[272] = -1.72572011E+01;
  COFD[273] = 4.26063341E+00;
  COFD[274] = -3.39848064E-01;
  COFD[275] = 1.48021313E-02;
  COFD[276] = -1.88241056E+01;
  COFD[277] = 4.68393046E+00;
  COFD[278] = -3.91610863E-01;
  COFD[279] = 1.69174645E-02;
  COFD[280] = -1.96744039E+01;
  COFD[281] = 4.90059208E+00;
  COFD[282] = -4.17126126E-01;
  COFD[283] = 1.79186848E-02;
  COFD[284] = -1.99547139E+01;
  COFD[285] = 4.97875278E+00;
  COFD[286] = -4.26485475E-01;
  COFD[287] = 1.82931933E-02;
  COFD[288] = -1.99607050E+01;
  COFD[289] = 4.97875278E+00;
  COFD[290] = -4.26485475E-01;
  COFD[291] = 1.82931933E-02;
  COFD[292] = -1.95318159E+01;
  COFD[293] = 4.90255048E+00;
  COFD[294] = -4.17368501E-01;
  COFD[295] = 1.79287358E-02;
  COFD[296] = -1.96777391E+01;
  COFD[297] = 4.90059208E+00;
  COFD[298] = -4.17126126E-01;
  COFD[299] = 1.79186848E-02;
  COFD[300] = -1.96777391E+01;
  COFD[301] = 4.90059208E+00;
  COFD[302] = -4.17126126E-01;
  COFD[303] = 1.79186848E-02;
  COFD[304] = -2.17471152E+01;
  COFD[305] = 5.50642944E+00;
  COFD[306] = -4.83016239E-01;
  COFD[307] = 2.02671529E-02;
  COFD[308] = -2.17461211E+01;
  COFD[309] = 5.50642944E+00;
  COFD[310] = -4.83016239E-01;
  COFD[311] = 2.02671529E-02;
  COFD[312] = -2.13163151E+01;
  COFD[313] = 5.38948949E+00;
  COFD[314] = -4.71682699E-01;
  COFD[315] = 1.99285168E-02;
  COFD[316] = -1.99577723E+01;
  COFD[317] = 4.97875278E+00;
  COFD[318] = -4.26485475E-01;
  COFD[319] = 1.82931933E-02;
  COFD[320] = -2.08699022E+01;
  COFD[321] = 5.26420155E+00;
  COFD[322] = -4.58839834E-01;
  COFD[323] = 1.95083084E-02;
  COFD[324] = -2.13176686E+01;
  COFD[325] = 5.38948949E+00;
  COFD[326] = -4.71682699E-01;
  COFD[327] = 1.99285168E-02;
  COFD[328] = -2.24065536E+01;
  COFD[329] = 5.58316712E+00;
  COFD[330] = -4.82794221E-01;
  COFD[331] = 1.98538380E-02;
  COFD[332] = -2.13171664E+01;
  COFD[333] = 5.37197338E+00;
  COFD[334] = -4.70392872E-01;
  COFD[335] = 1.99122802E-02;
  COFD[336] = -2.14920432E+01;
  COFD[337] = 5.44385051E+00;
  COFD[338] = -4.76121506E-01;
  COFD[339] = 2.00164081E-02;
  COFD[340] = -2.22853559E+01;
  COFD[341] = 5.60551426E+00;
  COFD[342] = -4.91233909E-01;
  COFD[343] = 2.04408254E-02;
  COFD[344] = -2.20271744E+01;
  COFD[345] = 5.56193702E+00;
  COFD[346] = -4.88512557E-01;
  COFD[347] = 2.04380728E-02;
  COFD[348] = -2.20366853E+01;
  COFD[349] = 5.56193702E+00;
  COFD[350] = -4.88512557E-01;
  COFD[351] = 2.04380728E-02;
  COFD[352] = -2.20279045E+01;
  COFD[353] = 5.56193702E+00;
  COFD[354] = -4.88512557E-01;
  COFD[355] = 2.04380728E-02;
  COFD[356] = -2.19248232E+01;
  COFD[357] = 5.49350509E+00;
  COFD[358] = -4.81613405E-01;
  COFD[359] = 2.02171734E-02;
  COFD[360] = -2.19254467E+01;
  COFD[361] = 5.49350509E+00;
  COFD[362] = -4.81613405E-01;
  COFD[363] = 2.02171734E-02;
  COFD[364] = -2.22016620E+01;
  COFD[365] = 5.60207576E+00;
  COFD[366] = -4.91440062E-01;
  COFD[367] = 2.04756122E-02;
  COFD[368] = -2.24061628E+01;
  COFD[369] = 5.58316712E+00;
  COFD[370] = -4.82794221E-01;
  COFD[371] = 1.98538380E-02;
  COFD[372] = -2.22022634E+01;
  COFD[373] = 5.60207576E+00;
  COFD[374] = -4.91440062E-01;
  COFD[375] = 2.04756122E-02;
  COFD[376] = -1.59404910E+01;
  COFD[377] = 3.66853818E+00;
  COFD[378] = -2.64346221E-01;
  COFD[379] = 1.15784613E-02;
  COFD[380] = -1.73027539E+01;
  COFD[381] = 4.21416723E+00;
  COFD[382] = -3.34163932E-01;
  COFD[383] = 1.45697432E-02;
  COFD[384] = -1.73027539E+01;
  COFD[385] = 4.21416723E+00;
  COFD[386] = -3.34163932E-01;
  COFD[387] = 1.45697432E-02;
  COFD[388] = -1.50584188E+01;
  COFD[389] = 3.47945612E+00;
  COFD[390] = -2.40703722E-01;
  COFD[391] = 1.05907441E-02;
  COFD[392] = -1.25099100E+01;
  COFD[393] = 2.77873601E+00;
  COFD[394] = -1.50637360E-01;
  COFD[395] = 6.72684281E-03;
  COFD[396] = -1.57972520E+01;
  COFD[397] = 4.22225052E+00;
  COFD[398] = -3.35156428E-01;
  COFD[399] = 1.46104855E-02;
  COFD[400] = -1.50724583E+01;
  COFD[401] = 3.47945612E+00;
  COFD[402] = -2.40703722E-01;
  COFD[403] = 1.05907441E-02;
  COFD[404] = -2.12639169E+01;
  COFD[405] = 5.61184117E+00;
  COFD[406] = -4.90532156E-01;
  COFD[407] = 2.03507922E-02;
  COFD[408] = -1.63254645E+01;
  COFD[409] = 3.82388595E+00;
  COFD[410] = -2.84480724E-01;
  COFD[411] = 1.24506311E-02;
  COFD[412] = -1.63301401E+01;
  COFD[413] = 3.82388595E+00;
  COFD[414] = -2.84480724E-01;
  COFD[415] = 1.24506311E-02;
  COFD[416] = -1.50076229E+01;
  COFD[417] = 3.47945612E+00;
  COFD[418] = -2.40703722E-01;
  COFD[419] = 1.05907441E-02;
  COFD[420] = -1.59634493E+01;
  COFD[421] = 3.67388294E+00;
  COFD[422] = -2.64990709E-01;
  COFD[423] = 1.16042706E-02;
  COFD[424] = -2.14160667E+01;
  COFD[425] = 5.56531152E+00;
  COFD[426] = -4.88789821E-01;
  COFD[427] = 2.04437116E-02;
  COFD[428] = -2.14215667E+01;
  COFD[429] = 5.56531152E+00;
  COFD[430] = -4.88789821E-01;
  COFD[431] = 2.04437116E-02;
  COFD[432] = -1.73198022E+01;
  COFD[433] = 4.21416723E+00;
  COFD[434] = -3.34163932E-01;
  COFD[435] = 1.45697432E-02;
  COFD[436] = -1.93015519E+01;
  COFD[437] = 4.85015581E+00;
  COFD[438] = -4.10945109E-01;
  COFD[439] = 1.76651398E-02;
  COFD[440] = -1.72556722E+01;
  COFD[441] = 4.19029808E+00;
  COFD[442] = -3.31177076E-01;
  COFD[443] = 1.44446234E-02;
  COFD[444] = -1.88306727E+01;
  COFD[445] = 4.68393046E+00;
  COFD[446] = -3.91610863E-01;
  COFD[447] = 1.69174645E-02;
  COFD[448] = -1.98418097E+01;
  COFD[449] = 5.04367502E+00;
  COFD[450] = -4.34153325E-01;
  COFD[451] = 1.85956055E-02;
  COFD[452] = -1.95263296E+01;
  COFD[453] = 4.90255048E+00;
  COFD[454] = -4.17368501E-01;
  COFD[455] = 1.79287358E-02;
  COFD[456] = -1.88171051E+01;
  COFD[457] = 4.68393046E+00;
  COFD[458] = -3.91610863E-01;
  COFD[459] = 1.69174645E-02;
  COFD[460] = -1.72572011E+01;
  COFD[461] = 4.26063341E+00;
  COFD[462] = -3.39848064E-01;
  COFD[463] = 1.48021313E-02;
  COFD[464] = -1.88241056E+01;
  COFD[465] = 4.68393046E+00;
  COFD[466] = -3.91610863E-01;
  COFD[467] = 1.69174645E-02;
  COFD[468] = -1.96744039E+01;
  COFD[469] = 4.90059208E+00;
  COFD[470] = -4.17126126E-01;
  COFD[471] = 1.79186848E-02;
  COFD[472] = -1.99547139E+01;
  COFD[473] = 4.97875278E+00;
  COFD[474] = -4.26485475E-01;
  COFD[475] = 1.82931933E-02;
  COFD[476] = -1.99607050E+01;
  COFD[477] = 4.97875278E+00;
  COFD[478] = -4.26485475E-01;
  COFD[479] = 1.82931933E-02;
  COFD[480] = -1.95318159E+01;
  COFD[481] = 4.90255048E+00;
  COFD[482] = -4.17368501E-01;
  COFD[483] = 1.79287358E-02;
  COFD[484] = -1.96777391E+01;
  COFD[485] = 4.90059208E+00;
  COFD[486] = -4.17126126E-01;
  COFD[487] = 1.79186848E-02;
  COFD[488] = -1.96777391E+01;
  COFD[489] = 4.90059208E+00;
  COFD[490] = -4.17126126E-01;
  COFD[491] = 1.79186848E-02;
  COFD[492] = -2.17471152E+01;
  COFD[493] = 5.50642944E+00;
  COFD[494] = -4.83016239E-01;
  COFD[495] = 2.02671529E-02;
  COFD[496] = -2.17461211E+01;
  COFD[497] = 5.50642944E+00;
  COFD[498] = -4.83016239E-01;
  COFD[499] = 2.02671529E-02;
  COFD[500] = -2.13163151E+01;
  COFD[501] = 5.38948949E+00;
  COFD[502] = -4.71682699E-01;
  COFD[503] = 1.99285168E-02;
  COFD[504] = -1.99577723E+01;
  COFD[505] = 4.97875278E+00;
  COFD[506] = -4.26485475E-01;
  COFD[507] = 1.82931933E-02;
  COFD[508] = -2.08699022E+01;
  COFD[509] = 5.26420155E+00;
  COFD[510] = -4.58839834E-01;
  COFD[511] = 1.95083084E-02;
  COFD[512] = -2.13176686E+01;
  COFD[513] = 5.38948949E+00;
  COFD[514] = -4.71682699E-01;
  COFD[515] = 1.99285168E-02;
  COFD[516] = -2.24065536E+01;
  COFD[517] = 5.58316712E+00;
  COFD[518] = -4.82794221E-01;
  COFD[519] = 1.98538380E-02;
  COFD[520] = -2.13171664E+01;
  COFD[521] = 5.37197338E+00;
  COFD[522] = -4.70392872E-01;
  COFD[523] = 1.99122802E-02;
  COFD[524] = -2.14920432E+01;
  COFD[525] = 5.44385051E+00;
  COFD[526] = -4.76121506E-01;
  COFD[527] = 2.00164081E-02;
  COFD[528] = -2.22853559E+01;
  COFD[529] = 5.60551426E+00;
  COFD[530] = -4.91233909E-01;
  COFD[531] = 2.04408254E-02;
  COFD[532] = -2.20271744E+01;
  COFD[533] = 5.56193702E+00;
  COFD[534] = -4.88512557E-01;
  COFD[535] = 2.04380728E-02;
  COFD[536] = -2.20366853E+01;
  COFD[537] = 5.56193702E+00;
  COFD[538] = -4.88512557E-01;
  COFD[539] = 2.04380728E-02;
  COFD[540] = -2.20279045E+01;
  COFD[541] = 5.56193702E+00;
  COFD[542] = -4.88512557E-01;
  COFD[543] = 2.04380728E-02;
  COFD[544] = -2.19248232E+01;
  COFD[545] = 5.49350509E+00;
  COFD[546] = -4.81613405E-01;
  COFD[547] = 2.02171734E-02;
  COFD[548] = -2.19254467E+01;
  COFD[549] = 5.49350509E+00;
  COFD[550] = -4.81613405E-01;
  COFD[551] = 2.02171734E-02;
  COFD[552] = -2.22016620E+01;
  COFD[553] = 5.60207576E+00;
  COFD[554] = -4.91440062E-01;
  COFD[555] = 2.04756122E-02;
  COFD[556] = -2.24061628E+01;
  COFD[557] = 5.58316712E+00;
  COFD[558] = -4.82794221E-01;
  COFD[559] = 1.98538380E-02;
  COFD[560] = -2.22022634E+01;
  COFD[561] = 5.60207576E+00;
  COFD[562] = -4.91440062E-01;
  COFD[563] = 2.04756122E-02;
  COFD[564] = -1.40756909E+01;
  COFD[565] = 3.07549274E+00;
  COFD[566] = -1.88889344E-01;
  COFD[567] = 8.37152866E-03;
  COFD[568] = -1.50584188E+01;
  COFD[569] = 3.47945612E+00;
  COFD[570] = -2.40703722E-01;
  COFD[571] = 1.05907441E-02;
  COFD[572] = -1.50584188E+01;
  COFD[573] = 3.47945612E+00;
  COFD[574] = -2.40703722E-01;
  COFD[575] = 1.05907441E-02;
  COFD[576] = -1.32093517E+01;
  COFD[577] = 2.90778936E+00;
  COFD[578] = -1.67388544E-01;
  COFD[579] = 7.45220609E-03;
  COFD[580] = -1.09595844E+01;
  COFD[581] = 2.30836460E+00;
  COFD[582] = -8.76339315E-02;
  COFD[583] = 3.90878445E-03;
  COFD[584] = -1.34230419E+01;
  COFD[585] = 3.48624238E+00;
  COFD[586] = -2.41554467E-01;
  COFD[587] = 1.06263545E-02;
  COFD[588] = -1.32243932E+01;
  COFD[589] = 2.90778936E+00;
  COFD[590] = -1.67388544E-01;
  COFD[591] = 7.45220609E-03;
  COFD[592] = -1.94093476E+01;
  COFD[593] = 5.16013126E+00;
  COFD[594] = -4.46824543E-01;
  COFD[595] = 1.90464887E-02;
  COFD[596] = -1.43139120E+01;
  COFD[597] = 3.17651319E+00;
  COFD[598] = -2.02028974E-01;
  COFD[599] = 8.94232502E-03;
  COFD[600] = -1.43190281E+01;
  COFD[601] = 3.17651319E+00;
  COFD[602] = -2.02028974E-01;
  COFD[603] = 8.94232502E-03;
  COFD[604] = -1.31551721E+01;
  COFD[605] = 2.90778936E+00;
  COFD[606] = -1.67388544E-01;
  COFD[607] = 7.45220609E-03;
  COFD[608] = -1.40998907E+01;
  COFD[609] = 3.08120012E+00;
  COFD[610] = -1.89629903E-01;
  COFD[611] = 8.40361952E-03;
  COFD[612] = -1.94313018E+01;
  COFD[613] = 5.02567894E+00;
  COFD[614] = -4.32045169E-01;
  COFD[615] = 1.85132214E-02;
  COFD[616] = -1.94373032E+01;
  COFD[617] = 5.02567894E+00;
  COFD[618] = -4.32045169E-01;
  COFD[619] = 1.85132214E-02;
  COFD[620] = -1.50766073E+01;
  COFD[621] = 3.47945612E+00;
  COFD[622] = -2.40703722E-01;
  COFD[623] = 1.05907441E-02;
  COFD[624] = -1.70534750E+01;
  COFD[625] = 4.14240922E+00;
  COFD[626] = -3.25239774E-01;
  COFD[627] = 1.41980687E-02;
  COFD[628] = -1.50270285E+01;
  COFD[629] = 3.46140064E+00;
  COFD[630] = -2.38440092E-01;
  COFD[631] = 1.04960087E-02;
  COFD[632] = -1.65559708E+01;
  COFD[633] = 3.95035840E+00;
  COFD[634] = -3.00959418E-01;
  COFD[635] = 1.31692593E-02;
  COFD[636] = -1.74792034E+01;
  COFD[637] = 4.29676909E+00;
  COFD[638] = -3.44085306E-01;
  COFD[639] = 1.49671135E-02;
  COFD[640] = -1.72496558E+01;
  COFD[641] = 4.17889917E+00;
  COFD[642] = -3.29752510E-01;
  COFD[643] = 1.43850275E-02;
  COFD[644] = -1.65412223E+01;
  COFD[645] = 3.95035840E+00;
  COFD[646] = -3.00959418E-01;
  COFD[647] = 1.31692593E-02;
  COFD[648] = -1.49500258E+01;
  COFD[649] = 3.52327209E+00;
  COFD[650] = -2.46286208E-01;
  COFD[651] = 1.08285963E-02;
  COFD[652] = -1.65488277E+01;
  COFD[653] = 3.95035840E+00;
  COFD[654] = -3.00959418E-01;
  COFD[655] = 1.31692593E-02;
  COFD[656] = -1.74195359E+01;
  COFD[657] = 4.17761385E+00;
  COFD[658] = -3.29594803E-01;
  COFD[659] = 1.43785522E-02;
  COFD[660] = -1.76774947E+01;
  COFD[661] = 4.24719726E+00;
  COFD[662] = -3.38206061E-01;
  COFD[663] = 1.47350654E-02;
  COFD[664] = -1.76840960E+01;
  COFD[665] = 4.24719726E+00;
  COFD[666] = -3.38206061E-01;
  COFD[667] = 1.47350654E-02;
  COFD[668] = -1.72556425E+01;
  COFD[669] = 4.17889917E+00;
  COFD[670] = -3.29752510E-01;
  COFD[671] = 1.43850275E-02;
  COFD[672] = -1.74232048E+01;
  COFD[673] = 4.17761385E+00;
  COFD[674] = -3.29594803E-01;
  COFD[675] = 1.43785522E-02;
  COFD[676] = -1.74232048E+01;
  COFD[677] = 4.17761385E+00;
  COFD[678] = -3.29594803E-01;
  COFD[679] = 1.43785522E-02;
  COFD[680] = -1.97761002E+01;
  COFD[681] = 4.93652913E+00;
  COFD[682] = -4.21485300E-01;
  COFD[683] = 1.80955487E-02;
  COFD[684] = -1.97749903E+01;
  COFD[685] = 4.93652913E+00;
  COFD[686] = -4.21485300E-01;
  COFD[687] = 1.80955487E-02;
  COFD[688] = -1.91992545E+01;
  COFD[689] = 4.74919572E+00;
  COFD[690] = -3.99211884E-01;
  COFD[691] = 1.72117130E-02;
  COFD[692] = -1.76808635E+01;
  COFD[693] = 4.24719726E+00;
  COFD[694] = -3.38206061E-01;
  COFD[695] = 1.47350654E-02;
  COFD[696] = -1.86278365E+01;
  COFD[697] = 4.56231943E+00;
  COFD[698] = -3.76598126E-01;
  COFD[699] = 1.62971663E-02;
  COFD[700] = -1.92007610E+01;
  COFD[701] = 4.74919572E+00;
  COFD[702] = -3.99211884E-01;
  COFD[703] = 1.72117130E-02;
  COFD[704] = -2.10543836E+01;
  COFD[705] = 5.28406281E+00;
  COFD[706] = -4.61218665E-01;
  COFD[707] = 1.96036779E-02;
  COFD[708] = -1.91632977E+01;
  COFD[709] = 4.70966098E+00;
  COFD[710] = -3.94551217E-01;
  COFD[711] = 1.70286289E-02;
  COFD[712] = -1.94778352E+01;
  COFD[713] = 4.85518471E+00;
  COFD[714] = -4.11551624E-01;
  COFD[715] = 1.76895651E-02;
  COFD[716] = -2.05384074E+01;
  COFD[717] = 5.13291934E+00;
  COFD[718] = -4.44486744E-01;
  COFD[719] = 1.89941829E-02;
  COFD[720] = -2.01210977E+01;
  COFD[721] = 5.01930029E+00;
  COFD[722] = -4.31305027E-01;
  COFD[723] = 1.84846322E-02;
  COFD[724] = -2.01317583E+01;
  COFD[725] = 5.01930029E+00;
  COFD[726] = -4.31305027E-01;
  COFD[727] = 1.84846322E-02;
  COFD[728] = -2.01219152E+01;
  COFD[729] = 5.01930029E+00;
  COFD[730] = -4.31305027E-01;
  COFD[731] = 1.84846322E-02;
  COFD[732] = -1.99785079E+01;
  COFD[733] = 4.92184026E+00;
  COFD[734] = -4.19745472E-01;
  COFD[735] = 1.80268154E-02;
  COFD[736] = -1.99792069E+01;
  COFD[737] = 4.92184026E+00;
  COFD[738] = -4.19745472E-01;
  COFD[739] = 1.80268154E-02;
  COFD[740] = -2.04116775E+01;
  COFD[741] = 5.11312010E+00;
  COFD[742] = -4.42283881E-01;
  COFD[743] = 1.89133999E-02;
  COFD[744] = -2.10539440E+01;
  COFD[745] = 5.28406281E+00;
  COFD[746] = -4.61218665E-01;
  COFD[747] = 1.96036779E-02;
  COFD[748] = -2.04123520E+01;
  COFD[749] = 5.11312010E+00;
  COFD[750] = -4.42283881E-01;
  COFD[751] = 1.89133999E-02;
  COFD[752] = -1.16906458E+01;
  COFD[753] = 2.47469981E+00;
  COFD[754] = -1.10436257E-01;
  COFD[755] = 4.95273813E-03;
  COFD[756] = -1.25099100E+01;
  COFD[757] = 2.77873601E+00;
  COFD[758] = -1.50637360E-01;
  COFD[759] = 6.72684281E-03;
  COFD[760] = -1.25099100E+01;
  COFD[761] = 2.77873601E+00;
  COFD[762] = -1.50637360E-01;
  COFD[763] = 6.72684281E-03;
  COFD[764] = -1.09595844E+01;
  COFD[765] = 2.30836460E+00;
  COFD[766] = -8.76339315E-02;
  COFD[767] = 3.90878445E-03;
  COFD[768] = -1.03270769E+01;
  COFD[769] = 2.19285409E+00;
  COFD[770] = -7.54492786E-02;
  COFD[771] = 3.51398213E-03;
  COFD[772] = -1.14366544E+01;
  COFD[773] = 2.78323501E+00;
  COFD[774] = -1.51214064E-01;
  COFD[775] = 6.75150012E-03;
  COFD[776] = -1.09629118E+01;
  COFD[777] = 2.30836460E+00;
  COFD[778] = -8.76339315E-02;
  COFD[779] = 3.90878445E-03;
  COFD[780] = -1.71983144E+01;
  COFD[781] = 4.63881440E+00;
  COFD[782] = -3.86139677E-01;
  COFD[783] = 1.66955099E-02;
  COFD[784] = -1.18989101E+01;
  COFD[785] = 2.57507000E+00;
  COFD[786] = -1.24033737E-01;
  COFD[787] = 5.56694959E-03;
  COFD[788] = -1.18998160E+01;
  COFD[789] = 2.57507000E+00;
  COFD[790] = -1.24033737E-01;
  COFD[791] = 5.56694959E-03;
  COFD[792] = -1.09469382E+01;
  COFD[793] = 2.30836460E+00;
  COFD[794] = -8.76339315E-02;
  COFD[795] = 3.90878445E-03;
  COFD[796] = -1.17159884E+01;
  COFD[797] = 2.48123210E+00;
  COFD[798] = -1.11322604E-01;
  COFD[799] = 4.99282389E-03;
  COFD[800] = -1.60517517E+01;
  COFD[801] = 4.11188603E+00;
  COFD[802] = -3.21540884E-01;
  COFD[803] = 1.40482564E-02;
  COFD[804] = -1.60528433E+01;
  COFD[805] = 4.11188603E+00;
  COFD[806] = -3.21540884E-01;
  COFD[807] = 1.40482564E-02;
  COFD[808] = -1.25141403E+01;
  COFD[809] = 2.77873601E+00;
  COFD[810] = -1.50637360E-01;
  COFD[811] = 6.72684281E-03;
  COFD[812] = -1.37794466E+01;
  COFD[813] = 3.23973858E+00;
  COFD[814] = -2.09989036E-01;
  COFD[815] = 9.27667906E-03;
  COFD[816] = -1.24693714E+01;
  COFD[817] = 2.76686648E+00;
  COFD[818] = -1.49120141E-01;
  COFD[819] = 6.66220432E-03;
  COFD[820] = -1.34723365E+01;
  COFD[821] = 3.09379603E+00;
  COFD[822] = -1.91268635E-01;
  COFD[823] = 8.47480224E-03;
  COFD[824] = -1.42229344E+01;
  COFD[825] = 3.38669384E+00;
  COFD[826] = -2.28784122E-01;
  COFD[827] = 1.00790953E-02;
  COFD[828] = -1.39914049E+01;
  COFD[829] = 3.26384506E+00;
  COFD[830] = -2.12947087E-01;
  COFD[831] = 9.39743888E-03;
  COFD[832] = -1.34695507E+01;
  COFD[833] = 3.09379603E+00;
  COFD[834] = -1.91268635E-01;
  COFD[835] = 8.47480224E-03;
  COFD[836] = -1.22004476E+01;
  COFD[837] = 2.80725489E+00;
  COFD[838] = -1.54291406E-01;
  COFD[839] = 6.88290911E-03;
  COFD[840] = -1.34709956E+01;
  COFD[841] = 3.09379603E+00;
  COFD[842] = -1.91268635E-01;
  COFD[843] = 8.47480224E-03;
  COFD[844] = -1.41201583E+01;
  COFD[845] = 3.26291213E+00;
  COFD[846] = -2.12831025E-01;
  COFD[847] = 9.39262629E-03;
  COFD[848] = -1.43129867E+01;
  COFD[849] = 3.31177824E+00;
  COFD[850] = -2.18945280E-01;
  COFD[851] = 9.64764419E-03;
  COFD[852] = -1.43140824E+01;
  COFD[853] = 3.31177824E+00;
  COFD[854] = -2.18945280E-01;
  COFD[855] = 9.64764419E-03;
  COFD[856] = -1.39924933E+01;
  COFD[857] = 3.26384506E+00;
  COFD[858] = -2.12947087E-01;
  COFD[859] = 9.39743888E-03;
  COFD[860] = -1.41207761E+01;
  COFD[861] = 3.26291213E+00;
  COFD[862] = -2.12831025E-01;
  COFD[863] = 9.39262629E-03;
  COFD[864] = -1.41207761E+01;
  COFD[865] = 3.26291213E+00;
  COFD[866] = -2.12831025E-01;
  COFD[867] = 9.39262629E-03;
  COFD[868] = -1.63065305E+01;
  COFD[869] = 4.02718684E+00;
  COFD[870] = -3.10842073E-01;
  COFD[871] = 1.35952684E-02;
  COFD[872] = -1.63063661E+01;
  COFD[873] = 4.02718684E+00;
  COFD[874] = -3.10842073E-01;
  COFD[875] = 1.35952684E-02;
  COFD[876] = -1.56669853E+01;
  COFD[877] = 3.79329365E+00;
  COFD[878] = -2.80475006E-01;
  COFD[879] = 1.22752392E-02;
  COFD[880] = -1.43135474E+01;
  COFD[881] = 3.31177824E+00;
  COFD[882] = -2.18945280E-01;
  COFD[883] = 9.64764419E-03;
  COFD[884] = -1.51762239E+01;
  COFD[885] = 3.62387858E+00;
  COFD[886] = -2.59147649E-01;
  COFD[887] = 1.13785675E-02;
  COFD[888] = -1.56672144E+01;
  COFD[889] = 3.79329365E+00;
  COFD[890] = -2.80475006E-01;
  COFD[891] = 1.22752392E-02;
  COFD[892] = -1.75094407E+01;
  COFD[893] = 4.38503692E+00;
  COFD[894] = -3.55082200E-01;
  COFD[895] = 1.54254372E-02;
  COFD[896] = -1.55782124E+01;
  COFD[897] = 3.73153794E+00;
  COFD[898] = -2.72372598E-01;
  COFD[899] = 1.19199668E-02;
  COFD[900] = -1.60461530E+01;
  COFD[901] = 3.95298868E+00;
  COFD[902] = -3.01302078E-01;
  COFD[903] = 1.31842095E-02;
  COFD[904] = -1.69934826E+01;
  COFD[905] = 4.21540659E+00;
  COFD[906] = -3.34315855E-01;
  COFD[907] = 1.45759682E-02;
  COFD[908] = -1.66209539E+01;
  COFD[909] = 4.10820924E+00;
  COFD[910] = -3.21095223E-01;
  COFD[911] = 1.40301968E-02;
  COFD[912] = -1.66224848E+01;
  COFD[913] = 4.10820924E+00;
  COFD[914] = -3.21095223E-01;
  COFD[915] = 1.40301968E-02;
  COFD[916] = -1.66210723E+01;
  COFD[917] = 4.10820924E+00;
  COFD[918] = -3.21095223E-01;
  COFD[919] = 1.40301968E-02;
  COFD[920] = -1.64898688E+01;
  COFD[921] = 4.01175649E+00;
  COFD[922] = -3.08860971E-01;
  COFD[923] = 1.35100076E-02;
  COFD[924] = -1.64899690E+01;
  COFD[925] = 4.01175649E+00;
  COFD[926] = -3.08860971E-01;
  COFD[927] = 1.35100076E-02;
  COFD[928] = -1.68779241E+01;
  COFD[929] = 4.19641658E+00;
  COFD[930] = -3.31942486E-01;
  COFD[931] = 1.44766740E-02;
  COFD[932] = -1.75093793E+01;
  COFD[933] = 4.38503692E+00;
  COFD[934] = -3.55082200E-01;
  COFD[935] = 1.54254372E-02;
  COFD[936] = -1.68780205E+01;
  COFD[937] = 4.19641658E+00;
  COFD[938] = -3.31942486E-01;
  COFD[939] = 1.44766740E-02;
  COFD[940] = -1.42894603E+01;
  COFD[941] = 3.67490723E+00;
  COFD[942] = -2.65114792E-01;
  COFD[943] = 1.16092671E-02;
  COFD[944] = -1.57972520E+01;
  COFD[945] = 4.22225052E+00;
  COFD[946] = -3.35156428E-01;
  COFD[947] = 1.46104855E-02;
  COFD[948] = -1.57972520E+01;
  COFD[949] = 4.22225052E+00;
  COFD[950] = -3.35156428E-01;
  COFD[951] = 1.46104855E-02;
  COFD[952] = -1.34230419E+01;
  COFD[953] = 3.48624238E+00;
  COFD[954] = -2.41554467E-01;
  COFD[955] = 1.06263545E-02;
  COFD[956] = -1.14366544E+01;
  COFD[957] = 2.78323501E+00;
  COFD[958] = -1.51214064E-01;
  COFD[959] = 6.75150012E-03;
  COFD[960] = -1.47968875E+01;
  COFD[961] = 4.23027636E+00;
  COFD[962] = -3.36139991E-01;
  COFD[963] = 1.46507621E-02;
  COFD[964] = -1.34248014E+01;
  COFD[965] = 3.48624238E+00;
  COFD[966] = -2.41554467E-01;
  COFD[967] = 1.06263545E-02;
  COFD[968] = -1.95739720E+01;
  COFD[969] = 5.61113230E+00;
  COFD[970] = -4.90190187E-01;
  COFD[971] = 2.03260675E-02;
  COFD[972] = -1.46550238E+01;
  COFD[973] = 3.83606243E+00;
  COFD[974] = -2.86076532E-01;
  COFD[975] = 1.25205829E-02;
  COFD[976] = -1.46554904E+01;
  COFD[977] = 3.83606243E+00;
  COFD[978] = -2.86076532E-01;
  COFD[979] = 1.25205829E-02;
  COFD[980] = -1.34163042E+01;
  COFD[981] = 3.48624238E+00;
  COFD[982] = -2.41554467E-01;
  COFD[983] = 1.06263545E-02;
  COFD[984] = -1.43151328E+01;
  COFD[985] = 3.68038508E+00;
  COFD[986] = -2.65779346E-01;
  COFD[987] = 1.16360771E-02;
  COFD[988] = -1.97544605E+01;
  COFD[989] = 5.56931926E+00;
  COFD[990] = -4.89105511E-01;
  COFD[991] = 2.04493129E-02;
  COFD[992] = -1.97550243E+01;
  COFD[993] = 5.56931926E+00;
  COFD[994] = -4.89105511E-01;
  COFD[995] = 2.04493129E-02;
  COFD[996] = -1.57995045E+01;
  COFD[997] = 4.22225052E+00;
  COFD[998] = -3.35156428E-01;
  COFD[999] = 1.46104855E-02;
  COFD[1000] = -1.76147183E+01;
  COFD[1001] = 4.86049500E+00;
  COFD[1002] = -4.12200578E-01;
  COFD[1003] = 1.77160971E-02;
  COFD[1004] = -1.57199190E+01;
  COFD[1005] = 4.19936335E+00;
  COFD[1006] = -3.32311009E-01;
  COFD[1007] = 1.44921003E-02;
  COFD[1008] = -1.72239329E+01;
  COFD[1009] = 4.69060745E+00;
  COFD[1010] = -3.92369888E-01;
  COFD[1011] = 1.69459661E-02;
  COFD[1012] = -1.82252070E+01;
  COFD[1013] = 5.05237312E+00;
  COFD[1014] = -4.35182396E-01;
  COFD[1015] = 1.86363074E-02;
  COFD[1016] = -1.79339484E+01;
  COFD[1017] = 4.91373893E+00;
  COFD[1018] = -4.18747629E-01;
  COFD[1019] = 1.79856610E-02;
  COFD[1020] = -1.72224880E+01;
  COFD[1021] = 4.69060745E+00;
  COFD[1022] = -3.92369888E-01;
  COFD[1023] = 1.69459661E-02;
  COFD[1024] = -1.54460977E+01;
  COFD[1025] = 4.26819983E+00;
  COFD[1026] = -3.40766379E-01;
  COFD[1027] = 1.48393361E-02;
  COFD[1028] = -1.72232379E+01;
  COFD[1029] = 4.69060745E+00;
  COFD[1030] = -3.92369888E-01;
  COFD[1031] = 1.69459661E-02;
  COFD[1032] = -1.80721940E+01;
  COFD[1033] = 4.91182086E+00;
  COFD[1034] = -4.18511339E-01;
  COFD[1035] = 1.79759141E-02;
  COFD[1036] = -1.83539845E+01;
  COFD[1037] = 4.98756925E+00;
  COFD[1038] = -4.27526072E-01;
  COFD[1039] = 1.83341755E-02;
  COFD[1040] = -1.83545451E+01;
  COFD[1041] = 4.98756925E+00;
  COFD[1042] = -4.27526072E-01;
  COFD[1043] = 1.83341755E-02;
  COFD[1044] = -1.79345106E+01;
  COFD[1045] = 4.91373893E+00;
  COFD[1046] = -4.18747629E-01;
  COFD[1047] = 1.79856610E-02;
  COFD[1048] = -1.80725106E+01;
  COFD[1049] = 4.91182086E+00;
  COFD[1050] = -4.18511339E-01;
  COFD[1051] = 1.79759141E-02;
  COFD[1052] = -1.80725106E+01;
  COFD[1053] = 4.91182086E+00;
  COFD[1054] = -4.18511339E-01;
  COFD[1055] = 1.79759141E-02;
  COFD[1056] = -2.01030325E+01;
  COFD[1057] = 5.51409582E+00;
  COFD[1058] = -4.83844807E-01;
  COFD[1059] = 2.02965712E-02;
  COFD[1060] = -2.01029492E+01;
  COFD[1061] = 5.51409582E+00;
  COFD[1062] = -4.83844807E-01;
  COFD[1063] = 2.02965712E-02;
  COFD[1064] = -1.96712605E+01;
  COFD[1065] = 5.39317138E+00;
  COFD[1066] = -4.71974590E-01;
  COFD[1067] = 1.99337334E-02;
  COFD[1068] = -1.83542714E+01;
  COFD[1069] = 4.98756925E+00;
  COFD[1070] = -4.27526072E-01;
  COFD[1071] = 1.83341755E-02;
  COFD[1072] = -1.92471097E+01;
  COFD[1073] = 5.27454331E+00;
  COFD[1074] = -4.60071133E-01;
  COFD[1075] = 1.95573229E-02;
  COFD[1076] = -1.96713768E+01;
  COFD[1077] = 5.39317138E+00;
  COFD[1078] = -4.71974590E-01;
  COFD[1079] = 1.99337334E-02;
  COFD[1080] = -2.07600666E+01;
  COFD[1081] = 5.58361212E+00;
  COFD[1082] = -4.82575879E-01;
  COFD[1083] = 1.98332857E-02;
  COFD[1084] = -1.96804361E+01;
  COFD[1085] = 5.37526595E+00;
  COFD[1086] = -4.70621144E-01;
  COFD[1087] = 1.99141073E-02;
  COFD[1088] = -1.98424875E+01;
  COFD[1089] = 5.45215174E+00;
  COFD[1090] = -4.77051991E-01;
  COFD[1091] = 2.00510347E-02;
  COFD[1092] = -2.06454734E+01;
  COFD[1093] = 5.60786210E+00;
  COFD[1094] = -4.91331606E-01;
  COFD[1095] = 2.04370162E-02;
  COFD[1096] = -2.03845195E+01;
  COFD[1097] = 5.56619223E+00;
  COFD[1098] = -4.88860312E-01;
  COFD[1099] = 2.04450332E-02;
  COFD[1100] = -2.03852928E+01;
  COFD[1101] = 5.56619223E+00;
  COFD[1102] = -4.88860312E-01;
  COFD[1103] = 2.04450332E-02;
  COFD[1104] = -2.03845794E+01;
  COFD[1105] = 5.56619223E+00;
  COFD[1106] = -4.88860312E-01;
  COFD[1107] = 2.04450332E-02;
  COFD[1108] = -2.03113865E+01;
  COFD[1109] = 5.50136606E+00;
  COFD[1110] = -4.82461887E-01;
  COFD[1111] = 2.02471523E-02;
  COFD[1112] = -2.03114371E+01;
  COFD[1113] = 5.50136606E+00;
  COFD[1114] = -4.82461887E-01;
  COFD[1115] = 2.02471523E-02;
  COFD[1116] = -2.05465835E+01;
  COFD[1117] = 5.60286061E+00;
  COFD[1118] = -4.91304371E-01;
  COFD[1119] = 2.04602837E-02;
  COFD[1120] = -2.07600357E+01;
  COFD[1121] = 5.58361212E+00;
  COFD[1122] = -4.82575879E-01;
  COFD[1123] = 1.98332857E-02;
  COFD[1124] = -2.05466322E+01;
  COFD[1125] = 5.60286061E+00;
  COFD[1126] = -4.91304371E-01;
  COFD[1127] = 2.04602837E-02;
  COFD[1128] = -1.40949183E+01;
  COFD[1129] = 3.07549274E+00;
  COFD[1130] = -1.88889344E-01;
  COFD[1131] = 8.37152866E-03;
  COFD[1132] = -1.50724583E+01;
  COFD[1133] = 3.47945612E+00;
  COFD[1134] = -2.40703722E-01;
  COFD[1135] = 1.05907441E-02;
  COFD[1136] = -1.50724583E+01;
  COFD[1137] = 3.47945612E+00;
  COFD[1138] = -2.40703722E-01;
  COFD[1139] = 1.05907441E-02;
  COFD[1140] = -1.32243932E+01;
  COFD[1141] = 2.90778936E+00;
  COFD[1142] = -1.67388544E-01;
  COFD[1143] = 7.45220609E-03;
  COFD[1144] = -1.09629118E+01;
  COFD[1145] = 2.30836460E+00;
  COFD[1146] = -8.76339315E-02;
  COFD[1147] = 3.90878445E-03;
  COFD[1148] = -1.34248014E+01;
  COFD[1149] = 3.48624238E+00;
  COFD[1150] = -2.41554467E-01;
  COFD[1151] = 1.06263545E-02;
  COFD[1152] = -1.32399011E+01;
  COFD[1153] = 2.90778936E+00;
  COFD[1154] = -1.67388544E-01;
  COFD[1155] = 7.45220609E-03;
  COFD[1156] = -1.94252948E+01;
  COFD[1157] = 5.16013126E+00;
  COFD[1158] = -4.46824543E-01;
  COFD[1159] = 1.90464887E-02;
  COFD[1160] = -1.43340695E+01;
  COFD[1161] = 3.17651319E+00;
  COFD[1162] = -2.02028974E-01;
  COFD[1163] = 8.94232502E-03;
  COFD[1164] = -1.43393972E+01;
  COFD[1165] = 3.17651319E+00;
  COFD[1166] = -2.02028974E-01;
  COFD[1167] = 8.94232502E-03;
  COFD[1168] = -1.31686478E+01;
  COFD[1169] = 2.90778936E+00;
  COFD[1170] = -1.67388544E-01;
  COFD[1171] = 7.45220609E-03;
  COFD[1172] = -1.41191170E+01;
  COFD[1173] = 3.08120012E+00;
  COFD[1174] = -1.89629903E-01;
  COFD[1175] = 8.40361952E-03;
  COFD[1176] = -1.94507789E+01;
  COFD[1177] = 5.02567894E+00;
  COFD[1178] = -4.32045169E-01;
  COFD[1179] = 1.85132214E-02;
  COFD[1180] = -1.94570202E+01;
  COFD[1181] = 5.02567894E+00;
  COFD[1182] = -4.32045169E-01;
  COFD[1183] = 1.85132214E-02;
  COFD[1184] = -1.50911746E+01;
  COFD[1185] = 3.47945612E+00;
  COFD[1186] = -2.40703722E-01;
  COFD[1187] = 1.05907441E-02;
  COFD[1188] = -1.70756953E+01;
  COFD[1189] = 4.14240922E+00;
  COFD[1190] = -3.25239774E-01;
  COFD[1191] = 1.41980687E-02;
  COFD[1192] = -1.50420909E+01;
  COFD[1193] = 3.46140064E+00;
  COFD[1194] = -2.38440092E-01;
  COFD[1195] = 1.04960087E-02;
  COFD[1196] = -1.65749465E+01;
  COFD[1197] = 3.95035840E+00;
  COFD[1198] = -3.00959418E-01;
  COFD[1199] = 1.31692593E-02;
  COFD[1200] = -1.74984410E+01;
  COFD[1201] = 4.29676909E+00;
  COFD[1202] = -3.44085306E-01;
  COFD[1203] = 1.49671135E-02;
  COFD[1204] = -1.72691436E+01;
  COFD[1205] = 4.17889917E+00;
  COFD[1206] = -3.29752510E-01;
  COFD[1207] = 1.43850275E-02;
  COFD[1208] = -1.65596362E+01;
  COFD[1209] = 3.95035840E+00;
  COFD[1210] = -3.00959418E-01;
  COFD[1211] = 1.31692593E-02;
  COFD[1212] = -1.49718147E+01;
  COFD[1213] = 3.52327209E+00;
  COFD[1214] = -2.46286208E-01;
  COFD[1215] = 1.08285963E-02;
  COFD[1216] = -1.65675292E+01;
  COFD[1217] = 3.95035840E+00;
  COFD[1218] = -3.00959418E-01;
  COFD[1219] = 1.31692593E-02;
  COFD[1220] = -1.74410137E+01;
  COFD[1221] = 4.17761385E+00;
  COFD[1222] = -3.29594803E-01;
  COFD[1223] = 1.43785522E-02;
  COFD[1224] = -1.76992903E+01;
  COFD[1225] = 4.24719726E+00;
  COFD[1226] = -3.38206061E-01;
  COFD[1227] = 1.47350654E-02;
  COFD[1228] = -1.77061877E+01;
  COFD[1229] = 4.24719726E+00;
  COFD[1230] = -3.38206061E-01;
  COFD[1231] = 1.47350654E-02;
  COFD[1232] = -1.72753698E+01;
  COFD[1233] = 4.17889917E+00;
  COFD[1234] = -3.29752510E-01;
  COFD[1235] = 1.43850275E-02;
  COFD[1236] = -1.74448444E+01;
  COFD[1237] = 4.17761385E+00;
  COFD[1238] = -3.29594803E-01;
  COFD[1239] = 1.43785522E-02;
  COFD[1240] = -1.74448444E+01;
  COFD[1241] = 4.17761385E+00;
  COFD[1242] = -3.29594803E-01;
  COFD[1243] = 1.43785522E-02;
  COFD[1244] = -1.98013229E+01;
  COFD[1245] = 4.93652913E+00;
  COFD[1246] = -4.21485300E-01;
  COFD[1247] = 1.80955487E-02;
  COFD[1248] = -1.98001556E+01;
  COFD[1249] = 4.93652913E+00;
  COFD[1250] = -4.21485300E-01;
  COFD[1251] = 1.80955487E-02;
  COFD[1252] = -1.92236272E+01;
  COFD[1253] = 4.74919572E+00;
  COFD[1254] = -3.99211884E-01;
  COFD[1255] = 1.72117130E-02;
  COFD[1256] = -1.77028097E+01;
  COFD[1257] = 4.24719726E+00;
  COFD[1258] = -3.38206061E-01;
  COFD[1259] = 1.47350654E-02;
  COFD[1260] = -1.86514447E+01;
  COFD[1261] = 4.56231943E+00;
  COFD[1262] = -3.76598126E-01;
  COFD[1263] = 1.62971663E-02;
  COFD[1264] = -1.92252091E+01;
  COFD[1265] = 4.74919572E+00;
  COFD[1266] = -3.99211884E-01;
  COFD[1267] = 1.72117130E-02;
  COFD[1268] = -2.10814494E+01;
  COFD[1269] = 5.28406281E+00;
  COFD[1270] = -4.61218665E-01;
  COFD[1271] = 1.96036779E-02;
  COFD[1272] = -1.91880298E+01;
  COFD[1273] = 4.70966098E+00;
  COFD[1274] = -3.94551217E-01;
  COFD[1275] = 1.70286289E-02;
  COFD[1276] = -1.95026341E+01;
  COFD[1277] = 4.85518471E+00;
  COFD[1278] = -4.11551624E-01;
  COFD[1279] = 1.76895651E-02;
  COFD[1280] = -2.05647444E+01;
  COFD[1281] = 5.13291934E+00;
  COFD[1282] = -4.44486744E-01;
  COFD[1283] = 1.89941829E-02;
  COFD[1284] = -2.01469646E+01;
  COFD[1285] = 5.01930029E+00;
  COFD[1286] = -4.31305027E-01;
  COFD[1287] = 1.84846322E-02;
  COFD[1288] = -2.01581976E+01;
  COFD[1289] = 5.01930029E+00;
  COFD[1290] = -4.31305027E-01;
  COFD[1291] = 1.84846322E-02;
  COFD[1292] = -2.01478256E+01;
  COFD[1293] = 5.01930029E+00;
  COFD[1294] = -4.31305027E-01;
  COFD[1295] = 1.84846322E-02;
  COFD[1296] = -2.00047011E+01;
  COFD[1297] = 4.92184026E+00;
  COFD[1298] = -4.19745472E-01;
  COFD[1299] = 1.80268154E-02;
  COFD[1300] = -2.00054378E+01;
  COFD[1301] = 4.92184026E+00;
  COFD[1302] = -4.19745472E-01;
  COFD[1303] = 1.80268154E-02;
  COFD[1304] = -2.04379423E+01;
  COFD[1305] = 5.11312010E+00;
  COFD[1306] = -4.42283881E-01;
  COFD[1307] = 1.89133999E-02;
  COFD[1308] = -2.10809853E+01;
  COFD[1309] = 5.28406281E+00;
  COFD[1310] = -4.61218665E-01;
  COFD[1311] = 1.96036779E-02;
  COFD[1312] = -2.04386532E+01;
  COFD[1313] = 5.11312010E+00;
  COFD[1314] = -4.42283881E-01;
  COFD[1315] = 1.89133999E-02;
  COFD[1316] = -2.10643264E+01;
  COFD[1317] = 5.53614864E+00;
  COFD[1318] = -4.86046753E-01;
  COFD[1319] = 2.03659193E-02;
  COFD[1320] = -2.12639169E+01;
  COFD[1321] = 5.61184117E+00;
  COFD[1322] = -4.90532156E-01;
  COFD[1323] = 2.03507922E-02;
  COFD[1324] = -2.12639169E+01;
  COFD[1325] = 5.61184117E+00;
  COFD[1326] = -4.90532156E-01;
  COFD[1327] = 2.03507922E-02;
  COFD[1328] = -1.94093476E+01;
  COFD[1329] = 5.16013126E+00;
  COFD[1330] = -4.46824543E-01;
  COFD[1331] = 1.90464887E-02;
  COFD[1332] = -1.71983144E+01;
  COFD[1333] = 4.63881440E+00;
  COFD[1334] = -3.86139677E-01;
  COFD[1335] = 1.66955099E-02;
  COFD[1336] = -1.95739720E+01;
  COFD[1337] = 5.61113230E+00;
  COFD[1338] = -4.90190187E-01;
  COFD[1339] = 2.03260675E-02;
  COFD[1340] = -1.94252948E+01;
  COFD[1341] = 5.16013126E+00;
  COFD[1342] = -4.46824543E-01;
  COFD[1343] = 1.90464887E-02;
  COFD[1344] = -1.19157788E+01;
  COFD[1345] = 9.28952533E-01;
  COFD[1346] = 2.42107483E-01;
  COFD[1347] = -1.59824150E-02;
  COFD[1348] = -2.12652444E+01;
  COFD[1349] = 5.59961822E+00;
  COFD[1350] = -4.91624856E-01;
  COFD[1351] = 2.05035546E-02;
  COFD[1352] = -2.06463656E+01;
  COFD[1353] = 5.41688482E+00;
  COFD[1354] = -4.73387188E-01;
  COFD[1355] = 1.99280175E-02;
  COFD[1356] = -1.93521338E+01;
  COFD[1357] = 5.16013126E+00;
  COFD[1358] = -4.46824543E-01;
  COFD[1359] = 1.90464887E-02;
  COFD[1360] = -2.11388255E+01;
  COFD[1361] = 5.55529689E+00;
  COFD[1362] = -4.87942530E-01;
  COFD[1363] = 2.04249057E-02;
  COFD[1364] = -1.77498465E+01;
  COFD[1365] = 3.57475686E+00;
  COFD[1366] = -1.56396297E-01;
  COFD[1367] = 3.12157721E-03;
  COFD[1368] = -1.77563175E+01;
  COFD[1369] = 3.57475686E+00;
  COFD[1370] = -1.56396297E-01;
  COFD[1371] = 3.12157721E-03;
  COFD[1372] = -2.12831283E+01;
  COFD[1373] = 5.61184117E+00;
  COFD[1374] = -4.90532156E-01;
  COFD[1375] = 2.03507922E-02;
  COFD[1376] = -2.07653629E+01;
  COFD[1377] = 5.01091988E+00;
  COFD[1378] = -3.77985581E-01;
  COFD[1379] = 1.40968617E-02;
  COFD[1380] = -2.14087360E+01;
  COFD[1381] = 5.57281993E+00;
  COFD[1382] = -4.76690860E-01;
  COFD[1383] = 1.94000702E-02;
  COFD[1384] = -2.15172712E+01;
  COFD[1385] = 5.46737673E+00;
  COFD[1386] = -4.55696085E-01;
  COFD[1387] = 1.81982625E-02;
  COFD[1388] = -2.08812277E+01;
  COFD[1389] = 5.08859217E+00;
  COFD[1390] = -3.90525428E-01;
  COFD[1391] = 1.47376395E-02;
  COFD[1392] = -2.12597258E+01;
  COFD[1393] = 5.24930667E+00;
  COFD[1394] = -4.17435088E-01;
  COFD[1395] = 1.61434424E-02;
  COFD[1396] = -2.15014247E+01;
  COFD[1397] = 5.46737673E+00;
  COFD[1398] = -4.55696085E-01;
  COFD[1399] = 1.81982625E-02;
  COFD[1400] = -2.10440599E+01;
  COFD[1401] = 5.59806282E+00;
  COFD[1402] = -4.87109535E-01;
  COFD[1403] = 2.01370226E-02;
  COFD[1404] = -2.15095920E+01;
  COFD[1405] = 5.46737673E+00;
  COFD[1406] = -4.55696085E-01;
  COFD[1407] = 1.81982625E-02;
  COFD[1408] = -2.14414768E+01;
  COFD[1409] = 5.25056135E+00;
  COFD[1410] = -4.17658192E-01;
  COFD[1411] = 1.61554773E-02;
  COFD[1412] = -2.13847376E+01;
  COFD[1413] = 5.17440955E+00;
  COFD[1414] = -4.04678430E-01;
  COFD[1415] = 1.54706350E-02;
  COFD[1416] = -2.13919213E+01;
  COFD[1417] = 5.17440955E+00;
  COFD[1418] = -4.04678430E-01;
  COFD[1419] = 1.54706350E-02;
  COFD[1420] = -2.12661812E+01;
  COFD[1421] = 5.24930667E+00;
  COFD[1422] = -4.17435088E-01;
  COFD[1423] = 1.61434424E-02;
  COFD[1424] = -2.14454635E+01;
  COFD[1425] = 5.25056135E+00;
  COFD[1426] = -4.17658192E-01;
  COFD[1427] = 1.61554773E-02;
  COFD[1428] = -2.14454635E+01;
  COFD[1429] = 5.25056135E+00;
  COFD[1430] = -4.17658192E-01;
  COFD[1431] = 1.61554773E-02;
  COFD[1432] = -1.74926523E+01;
  COFD[1433] = 3.15361828E+00;
  COFD[1434] = -9.38467311E-02;
  COFD[1435] = 1.12003378E-04;
  COFD[1436] = -1.74914289E+01;
  COFD[1437] = 3.15361828E+00;
  COFD[1438] = -9.38467311E-02;
  COFD[1439] = 1.12003378E-04;
  COFD[1440] = -1.97506903E+01;
  COFD[1441] = 4.26375568E+00;
  COFD[1442] = -2.60883263E-01;
  COFD[1443] = 8.23169934E-03;
  COFD[1444] = -2.13884026E+01;
  COFD[1445] = 5.17440955E+00;
  COFD[1446] = -4.04678430E-01;
  COFD[1447] = 1.54706350E-02;
  COFD[1448] = -2.03016649E+01;
  COFD[1449] = 4.57892805E+00;
  COFD[1450] = -3.10998994E-01;
  COFD[1451] = 1.07645466E-02;
  COFD[1452] = -1.97523457E+01;
  COFD[1453] = 4.26375568E+00;
  COFD[1454] = -2.60883263E-01;
  COFD[1455] = 8.23169934E-03;
  COFD[1456] = -1.51960800E+01;
  COFD[1457] = 1.97841280E+00;
  COFD[1458] = 7.85094165E-02;
  COFD[1459] = -8.10071182E-03;
  COFD[1460] = -1.98762733E+01;
  COFD[1461] = 4.29984423E+00;
  COFD[1462] = -2.67672368E-01;
  COFD[1463] = 8.61066086E-03;
  COFD[1464] = -1.90375599E+01;
  COFD[1465] = 3.93604965E+00;
  COFD[1466] = -2.11360409E-01;
  COFD[1467] = 5.81247394E-03;
  COFD[1468] = -1.78076580E+01;
  COFD[1469] = 3.21999709E+00;
  COFD[1470] = -1.03955914E-01;
  COFD[1471] = 6.06304161E-04;
  COFD[1472] = -1.83862875E+01;
  COFD[1473] = 3.54020950E+00;
  COFD[1474] = -1.52304836E-01;
  COFD[1475] = 2.96268874E-03;
  COFD[1476] = -1.83980831E+01;
  COFD[1477] = 3.54020950E+00;
  COFD[1478] = -1.52304836E-01;
  COFD[1479] = 2.96268874E-03;
  COFD[1480] = -1.83871911E+01;
  COFD[1481] = 3.54020950E+00;
  COFD[1482] = -1.52304836E-01;
  COFD[1483] = 2.96268874E-03;
  COFD[1484] = -1.91326722E+01;
  COFD[1485] = 3.82263611E+00;
  COFD[1486] = -1.93983472E-01;
  COFD[1487] = 4.95789388E-03;
  COFD[1488] = -1.91334458E+01;
  COFD[1489] = 3.82263611E+00;
  COFD[1490] = -1.93983472E-01;
  COFD[1491] = 4.95789388E-03;
  COFD[1492] = -1.76622769E+01;
  COFD[1493] = 3.19751878E+00;
  COFD[1494] = -1.01992197E-01;
  COFD[1495] = 5.63017356E-04;
  COFD[1496] = -1.51955918E+01;
  COFD[1497] = 1.97841280E+00;
  COFD[1498] = 7.85094165E-02;
  COFD[1499] = -8.10071182E-03;
  COFD[1500] = -1.76630236E+01;
  COFD[1501] = 3.19751878E+00;
  COFD[1502] = -1.01992197E-01;
  COFD[1503] = 5.63017356E-04;
  COFD[1504] = -1.52414498E+01;
  COFD[1505] = 3.35922578E+00;
  COFD[1506] = -2.25181399E-01;
  COFD[1507] = 9.92132878E-03;
  COFD[1508] = -1.63254645E+01;
  COFD[1509] = 3.82388595E+00;
  COFD[1510] = -2.84480724E-01;
  COFD[1511] = 1.24506311E-02;
  COFD[1512] = -1.63254645E+01;
  COFD[1513] = 3.82388595E+00;
  COFD[1514] = -2.84480724E-01;
  COFD[1515] = 1.24506311E-02;
  COFD[1516] = -1.43139120E+01;
  COFD[1517] = 3.17651319E+00;
  COFD[1518] = -2.02028974E-01;
  COFD[1519] = 8.94232502E-03;
  COFD[1520] = -1.18989101E+01;
  COFD[1521] = 2.57507000E+00;
  COFD[1522] = -1.24033737E-01;
  COFD[1523] = 5.56694959E-03;
  COFD[1524] = -1.46550238E+01;
  COFD[1525] = 3.83606243E+00;
  COFD[1526] = -2.86076532E-01;
  COFD[1527] = 1.25205829E-02;
  COFD[1528] = -1.43340695E+01;
  COFD[1529] = 3.17651319E+00;
  COFD[1530] = -2.02028974E-01;
  COFD[1531] = 8.94232502E-03;
  COFD[1532] = -2.12652444E+01;
  COFD[1533] = 5.59961822E+00;
  COFD[1534] = -4.91624856E-01;
  COFD[1535] = 2.05035546E-02;
  COFD[1536] = -1.55511233E+01;
  COFD[1537] = 3.48070094E+00;
  COFD[1538] = -2.40859499E-01;
  COFD[1539] = 1.05972514E-02;
  COFD[1540] = -1.55588172E+01;
  COFD[1541] = 3.48070094E+00;
  COFD[1542] = -2.40859499E-01;
  COFD[1543] = 1.05972514E-02;
  COFD[1544] = -1.42429030E+01;
  COFD[1545] = 3.17651319E+00;
  COFD[1546] = -2.02028974E-01;
  COFD[1547] = 8.94232502E-03;
  COFD[1548] = -1.52721010E+01;
  COFD[1549] = 3.36790500E+00;
  COFD[1550] = -2.26321740E-01;
  COFD[1551] = 9.97135055E-03;
  COFD[1552] = -2.08204356E+01;
  COFD[1553] = 5.35267674E+00;
  COFD[1554] = -4.69010505E-01;
  COFD[1555] = 1.98979152E-02;
  COFD[1556] = -2.08293167E+01;
  COFD[1557] = 5.35267674E+00;
  COFD[1558] = -4.69010505E-01;
  COFD[1559] = 1.98979152E-02;
  COFD[1560] = -1.63493305E+01;
  COFD[1561] = 3.82388595E+00;
  COFD[1562] = -2.84480724E-01;
  COFD[1563] = 1.24506311E-02;
  COFD[1564] = -1.84688303E+01;
  COFD[1565] = 4.49330851E+00;
  COFD[1566] = -3.68208715E-01;
  COFD[1567] = 1.59565402E-02;
  COFD[1568] = -1.62724429E+01;
  COFD[1569] = 3.79163564E+00;
  COFD[1570] = -2.80257365E-01;
  COFD[1571] = 1.22656902E-02;
  COFD[1572] = -1.78938681E+01;
  COFD[1573] = 4.29613154E+00;
  COFD[1574] = -3.44012526E-01;
  COFD[1575] = 1.49643715E-02;
  COFD[1576] = -1.89544717E+01;
  COFD[1577] = 4.68595732E+00;
  COFD[1578] = -3.91842840E-01;
  COFD[1579] = 1.69262542E-02;
  COFD[1580] = -1.86335873E+01;
  COFD[1581] = 4.53572533E+00;
  COFD[1582] = -3.73386925E-01;
  COFD[1583] = 1.61678881E-02;
  COFD[1584] = -1.78725064E+01;
  COFD[1585] = 4.29613154E+00;
  COFD[1586] = -3.44012526E-01;
  COFD[1587] = 1.49643715E-02;
  COFD[1588] = -1.64169341E+01;
  COFD[1589] = 3.89309916E+00;
  COFD[1590] = -2.93528188E-01;
  COFD[1591] = 1.28463177E-02;
  COFD[1592] = -1.78834868E+01;
  COFD[1593] = 4.29613154E+00;
  COFD[1594] = -3.44012526E-01;
  COFD[1595] = 1.49643715E-02;
  COFD[1596] = -1.88161286E+01;
  COFD[1597] = 4.53427279E+00;
  COFD[1598] = -3.73213513E-01;
  COFD[1599] = 1.61609973E-02;
  COFD[1600] = -1.91121670E+01;
  COFD[1601] = 4.61801405E+00;
  COFD[1602] = -3.83535652E-01;
  COFD[1603] = 1.65862513E-02;
  COFD[1604] = -1.91225175E+01;
  COFD[1605] = 4.61801405E+00;
  COFD[1606] = -3.83535652E-01;
  COFD[1607] = 1.65862513E-02;
  COFD[1608] = -1.86424488E+01;
  COFD[1609] = 4.53572533E+00;
  COFD[1610] = -3.73386925E-01;
  COFD[1611] = 1.61678881E-02;
  COFD[1612] = -1.88218258E+01;
  COFD[1613] = 4.53427279E+00;
  COFD[1614] = -3.73213513E-01;
  COFD[1615] = 1.61609973E-02;
  COFD[1616] = -1.88218258E+01;
  COFD[1617] = 4.53427279E+00;
  COFD[1618] = -3.73213513E-01;
  COFD[1619] = 1.61609973E-02;
  COFD[1620] = -2.12021525E+01;
  COFD[1621] = 5.26829491E+00;
  COFD[1622] = -4.59325230E-01;
  COFD[1623] = 1.95275380E-02;
  COFD[1624] = -2.12002567E+01;
  COFD[1625] = 5.26829491E+00;
  COFD[1626] = -4.59325230E-01;
  COFD[1627] = 1.95275380E-02;
  COFD[1628] = -2.06845303E+01;
  COFD[1629] = 5.11611668E+00;
  COFD[1630] = -4.42629845E-01;
  COFD[1631] = 1.89266956E-02;
  COFD[1632] = -1.91174394E+01;
  COFD[1633] = 4.61801405E+00;
  COFD[1634] = -3.83535652E-01;
  COFD[1635] = 1.65862513E-02;
  COFD[1636] = -2.01104770E+01;
  COFD[1637] = 4.93587605E+00;
  COFD[1638] = -4.21407938E-01;
  COFD[1639] = 1.80924887E-02;
  COFD[1640] = -2.06870494E+01;
  COFD[1641] = 5.11611668E+00;
  COFD[1642] = -4.42629845E-01;
  COFD[1643] = 1.89266956E-02;
  COFD[1644] = -2.22871848E+01;
  COFD[1645] = 5.51906049E+00;
  COFD[1646] = -4.84378475E-01;
  COFD[1647] = 2.03153818E-02;
  COFD[1648] = -2.06463061E+01;
  COFD[1649] = 5.07657482E+00;
  COFD[1650] = -4.38028805E-01;
  COFD[1651] = 1.87481371E-02;
  COFD[1652] = -2.09258444E+01;
  COFD[1653] = 5.19811866E+00;
  COFD[1654] = -4.51121211E-01;
  COFD[1655] = 1.92074617E-02;
  COFD[1656] = -2.18249281E+01;
  COFD[1657] = 5.39808348E+00;
  COFD[1658] = -4.72285057E-01;
  COFD[1659] = 1.99339987E-02;
  COFD[1660] = -2.15521831E+01;
  COFD[1661] = 5.35030481E+00;
  COFD[1662] = -4.68818560E-01;
  COFD[1663] = 1.98942796E-02;
  COFD[1664] = -2.15708829E+01;
  COFD[1665] = 5.35030481E+00;
  COFD[1666] = -4.68818560E-01;
  COFD[1667] = 1.98942796E-02;
  COFD[1668] = -2.15536066E+01;
  COFD[1669] = 5.35030481E+00;
  COFD[1670] = -4.68818560E-01;
  COFD[1671] = 1.98942796E-02;
  COFD[1672] = -2.13955911E+01;
  COFD[1673] = 5.25183817E+00;
  COFD[1674] = -4.57376333E-01;
  COFD[1675] = 1.94504429E-02;
  COFD[1676] = -2.13968193E+01;
  COFD[1677] = 5.25183817E+00;
  COFD[1678] = -4.57376333E-01;
  COFD[1679] = 1.94504429E-02;
  COFD[1680] = -2.17333356E+01;
  COFD[1681] = 5.39086886E+00;
  COFD[1682] = -4.71799032E-01;
  COFD[1683] = 1.99310503E-02;
  COFD[1684] = -2.22863937E+01;
  COFD[1685] = 5.51906049E+00;
  COFD[1686] = -4.84378475E-01;
  COFD[1687] = 2.03153818E-02;
  COFD[1688] = -2.17345230E+01;
  COFD[1689] = 5.39086886E+00;
  COFD[1690] = -4.71799032E-01;
  COFD[1691] = 1.99310503E-02;
  COFD[1692] = -1.52486292E+01;
  COFD[1693] = 3.35922578E+00;
  COFD[1694] = -2.25181399E-01;
  COFD[1695] = 9.92132878E-03;
  COFD[1696] = -1.63301401E+01;
  COFD[1697] = 3.82388595E+00;
  COFD[1698] = -2.84480724E-01;
  COFD[1699] = 1.24506311E-02;
  COFD[1700] = -1.63301401E+01;
  COFD[1701] = 3.82388595E+00;
  COFD[1702] = -2.84480724E-01;
  COFD[1703] = 1.24506311E-02;
  COFD[1704] = -1.43190281E+01;
  COFD[1705] = 3.17651319E+00;
  COFD[1706] = -2.02028974E-01;
  COFD[1707] = 8.94232502E-03;
  COFD[1708] = -1.18998160E+01;
  COFD[1709] = 2.57507000E+00;
  COFD[1710] = -1.24033737E-01;
  COFD[1711] = 5.56694959E-03;
  COFD[1712] = -1.46554904E+01;
  COFD[1713] = 3.83606243E+00;
  COFD[1714] = -2.86076532E-01;
  COFD[1715] = 1.25205829E-02;
  COFD[1716] = -1.43393972E+01;
  COFD[1717] = 3.17651319E+00;
  COFD[1718] = -2.02028974E-01;
  COFD[1719] = 8.94232502E-03;
  COFD[1720] = -2.06463656E+01;
  COFD[1721] = 5.41688482E+00;
  COFD[1722] = -4.73387188E-01;
  COFD[1723] = 1.99280175E-02;
  COFD[1724] = -1.55588172E+01;
  COFD[1725] = 3.48070094E+00;
  COFD[1726] = -2.40859499E-01;
  COFD[1727] = 1.05972514E-02;
  COFD[1728] = -1.55666313E+01;
  COFD[1729] = 3.48070094E+00;
  COFD[1730] = -2.40859499E-01;
  COFD[1731] = 1.05972514E-02;
  COFD[1732] = -1.42473387E+01;
  COFD[1733] = 3.17651319E+00;
  COFD[1734] = -2.02028974E-01;
  COFD[1735] = 8.94232502E-03;
  COFD[1736] = -1.52792799E+01;
  COFD[1737] = 3.36790500E+00;
  COFD[1738] = -2.26321740E-01;
  COFD[1739] = 9.97135055E-03;
  COFD[1740] = -2.08277510E+01;
  COFD[1741] = 5.35267674E+00;
  COFD[1742] = -4.69010505E-01;
  COFD[1743] = 1.98979152E-02;
  COFD[1744] = -2.08367641E+01;
  COFD[1745] = 5.35267674E+00;
  COFD[1746] = -4.69010505E-01;
  COFD[1747] = 1.98979152E-02;
  COFD[1748] = -1.63542358E+01;
  COFD[1749] = 3.82388595E+00;
  COFD[1750] = -2.84480724E-01;
  COFD[1751] = 1.24506311E-02;
  COFD[1752] = -1.84777509E+01;
  COFD[1753] = 4.49330851E+00;
  COFD[1754] = -3.68208715E-01;
  COFD[1755] = 1.59565402E-02;
  COFD[1756] = -1.62775683E+01;
  COFD[1757] = 3.79163564E+00;
  COFD[1758] = -2.80257365E-01;
  COFD[1759] = 1.22656902E-02;
  COFD[1760] = -1.79009121E+01;
  COFD[1761] = 4.29613154E+00;
  COFD[1762] = -3.44012526E-01;
  COFD[1763] = 1.49643715E-02;
  COFD[1764] = -1.89616566E+01;
  COFD[1765] = 4.68595732E+00;
  COFD[1766] = -3.91842840E-01;
  COFD[1767] = 1.69262542E-02;
  COFD[1768] = -1.86409085E+01;
  COFD[1769] = 4.53572533E+00;
  COFD[1770] = -3.73386925E-01;
  COFD[1771] = 1.61678881E-02;
  COFD[1772] = -1.78792538E+01;
  COFD[1773] = 4.29613154E+00;
  COFD[1774] = -3.44012526E-01;
  COFD[1775] = 1.49643715E-02;
  COFD[1776] = -1.64255877E+01;
  COFD[1777] = 3.89309916E+00;
  COFD[1778] = -2.93528188E-01;
  COFD[1779] = 1.28463177E-02;
  COFD[1780] = -1.78903850E+01;
  COFD[1781] = 4.29613154E+00;
  COFD[1782] = -3.44012526E-01;
  COFD[1783] = 1.49643715E-02;
  COFD[1784] = -1.88245933E+01;
  COFD[1785] = 4.53427279E+00;
  COFD[1786] = -3.73213513E-01;
  COFD[1787] = 1.61609973E-02;
  COFD[1788] = -1.91208247E+01;
  COFD[1789] = 4.61801405E+00;
  COFD[1790] = -3.83535652E-01;
  COFD[1791] = 1.65862513E-02;
  COFD[1792] = -1.91313579E+01;
  COFD[1793] = 4.61801405E+00;
  COFD[1794] = -3.83535652E-01;
  COFD[1795] = 1.65862513E-02;
  COFD[1796] = -1.86499019E+01;
  COFD[1797] = 4.53572533E+00;
  COFD[1798] = -3.73386925E-01;
  COFD[1799] = 1.61678881E-02;
  COFD[1800] = -1.88303884E+01;
  COFD[1801] = 4.53427279E+00;
  COFD[1802] = -3.73213513E-01;
  COFD[1803] = 1.61609973E-02;
  COFD[1804] = -1.88303884E+01;
  COFD[1805] = 4.53427279E+00;
  COFD[1806] = -3.73213513E-01;
  COFD[1807] = 1.61609973E-02;
  COFD[1808] = -2.12131042E+01;
  COFD[1809] = 5.26829491E+00;
  COFD[1810] = -4.59325230E-01;
  COFD[1811] = 1.95275380E-02;
  COFD[1812] = -2.12111664E+01;
  COFD[1813] = 5.26829491E+00;
  COFD[1814] = -4.59325230E-01;
  COFD[1815] = 1.95275380E-02;
  COFD[1816] = -2.06948742E+01;
  COFD[1817] = 5.11611668E+00;
  COFD[1818] = -4.42629845E-01;
  COFD[1819] = 1.89266956E-02;
  COFD[1820] = -1.91261897E+01;
  COFD[1821] = 4.61801405E+00;
  COFD[1822] = -3.83535652E-01;
  COFD[1823] = 1.65862513E-02;
  COFD[1824] = -2.01165408E+01;
  COFD[1825] = 4.93460038E+00;
  COFD[1826] = -4.21256825E-01;
  COFD[1827] = 1.80865117E-02;
  COFD[1828] = -2.06974460E+01;
  COFD[1829] = 5.11611668E+00;
  COFD[1830] = -4.42629845E-01;
  COFD[1831] = 1.89266956E-02;
  COFD[1832] = -2.22995560E+01;
  COFD[1833] = 5.51906049E+00;
  COFD[1834] = -4.84378475E-01;
  COFD[1835] = 2.03153818E-02;
  COFD[1836] = -2.06522432E+01;
  COFD[1837] = 5.07501764E+00;
  COFD[1838] = -4.37846596E-01;
  COFD[1839] = 1.87410133E-02;
  COFD[1840] = -2.09364896E+01;
  COFD[1841] = 5.19811866E+00;
  COFD[1842] = -4.51121211E-01;
  COFD[1843] = 1.92074617E-02;
  COFD[1844] = -2.18365493E+01;
  COFD[1845] = 5.39804398E+00;
  COFD[1846] = -4.72282510E-01;
  COFD[1847] = 1.99339924E-02;
  COFD[1848] = -2.15609204E+01;
  COFD[1849] = 5.34961360E+00;
  COFD[1850] = -4.68762622E-01;
  COFD[1851] = 1.98932200E-02;
  COFD[1852] = -2.15800611E+01;
  COFD[1853] = 5.34961360E+00;
  COFD[1854] = -4.68762622E-01;
  COFD[1855] = 1.98932200E-02;
  COFD[1856] = -2.15623768E+01;
  COFD[1857] = 5.34961360E+00;
  COFD[1858] = -4.68762622E-01;
  COFD[1859] = 1.98932200E-02;
  COFD[1860] = -2.14072722E+01;
  COFD[1861] = 5.25183817E+00;
  COFD[1862] = -4.57376333E-01;
  COFD[1863] = 1.94504429E-02;
  COFD[1864] = -2.14085295E+01;
  COFD[1865] = 5.25183817E+00;
  COFD[1866] = -4.57376333E-01;
  COFD[1867] = 1.94504429E-02;
  COFD[1868] = -2.17368272E+01;
  COFD[1869] = 5.38871351E+00;
  COFD[1870] = -4.71617136E-01;
  COFD[1871] = 1.99270815E-02;
  COFD[1872] = -2.22987451E+01;
  COFD[1873] = 5.51906049E+00;
  COFD[1874] = -4.84378475E-01;
  COFD[1875] = 2.03153818E-02;
  COFD[1876] = -2.17380429E+01;
  COFD[1877] = 5.38871351E+00;
  COFD[1878] = -4.71617136E-01;
  COFD[1879] = 1.99270815E-02;
  COFD[1880] = -1.40076869E+01;
  COFD[1881] = 3.07549274E+00;
  COFD[1882] = -1.88889344E-01;
  COFD[1883] = 8.37152866E-03;
  COFD[1884] = -1.50076229E+01;
  COFD[1885] = 3.47945612E+00;
  COFD[1886] = -2.40703722E-01;
  COFD[1887] = 1.05907441E-02;
  COFD[1888] = -1.50076229E+01;
  COFD[1889] = 3.47945612E+00;
  COFD[1890] = -2.40703722E-01;
  COFD[1891] = 1.05907441E-02;
  COFD[1892] = -1.31551721E+01;
  COFD[1893] = 2.90778936E+00;
  COFD[1894] = -1.67388544E-01;
  COFD[1895] = 7.45220609E-03;
  COFD[1896] = -1.09469382E+01;
  COFD[1897] = 2.30836460E+00;
  COFD[1898] = -8.76339315E-02;
  COFD[1899] = 3.90878445E-03;
  COFD[1900] = -1.34163042E+01;
  COFD[1901] = 3.48624238E+00;
  COFD[1902] = -2.41554467E-01;
  COFD[1903] = 1.06263545E-02;
  COFD[1904] = -1.31686478E+01;
  COFD[1905] = 2.90778936E+00;
  COFD[1906] = -1.67388544E-01;
  COFD[1907] = 7.45220609E-03;
  COFD[1908] = -1.93521338E+01;
  COFD[1909] = 5.16013126E+00;
  COFD[1910] = -4.46824543E-01;
  COFD[1911] = 1.90464887E-02;
  COFD[1912] = -1.42429030E+01;
  COFD[1913] = 3.17651319E+00;
  COFD[1914] = -2.02028974E-01;
  COFD[1915] = 8.94232502E-03;
  COFD[1916] = -1.42473387E+01;
  COFD[1917] = 3.17651319E+00;
  COFD[1918] = -2.02028974E-01;
  COFD[1919] = 8.94232502E-03;
  COFD[1920] = -1.31062935E+01;
  COFD[1921] = 2.90778936E+00;
  COFD[1922] = -1.67388544E-01;
  COFD[1923] = 7.45220609E-03;
  COFD[1924] = -1.40318900E+01;
  COFD[1925] = 3.08120012E+00;
  COFD[1926] = -1.89629903E-01;
  COFD[1927] = 8.40361952E-03;
  COFD[1928] = -1.93624886E+01;
  COFD[1929] = 5.02567894E+00;
  COFD[1930] = -4.32045169E-01;
  COFD[1931] = 1.85132214E-02;
  COFD[1932] = -1.93677143E+01;
  COFD[1933] = 5.02567894E+00;
  COFD[1934] = -4.32045169E-01;
  COFD[1935] = 1.85132214E-02;
  COFD[1936] = -1.50240252E+01;
  COFD[1937] = 3.47945612E+00;
  COFD[1938] = -2.40703722E-01;
  COFD[1939] = 1.05907441E-02;
  COFD[1940] = -1.69758845E+01;
  COFD[1941] = 4.14240922E+00;
  COFD[1942] = -3.25239774E-01;
  COFD[1943] = 1.41980687E-02;
  COFD[1944] = -1.49727784E+01;
  COFD[1945] = 3.46140064E+00;
  COFD[1946] = -2.38440092E-01;
  COFD[1947] = 1.04960087E-02;
  COFD[1948] = -1.64887841E+01;
  COFD[1949] = 3.95035840E+00;
  COFD[1950] = -3.00959418E-01;
  COFD[1951] = 1.31692593E-02;
  COFD[1952] = -1.74111665E+01;
  COFD[1953] = 4.29676909E+00;
  COFD[1954] = -3.44085306E-01;
  COFD[1955] = 1.49671135E-02;
  COFD[1956] = -1.71808080E+01;
  COFD[1957] = 4.17889917E+00;
  COFD[1958] = -3.29752510E-01;
  COFD[1959] = 1.43850275E-02;
  COFD[1960] = -1.64758663E+01;
  COFD[1961] = 3.95035840E+00;
  COFD[1962] = -3.00959418E-01;
  COFD[1963] = 1.31692593E-02;
  COFD[1964] = -1.48738025E+01;
  COFD[1965] = 3.52327209E+00;
  COFD[1966] = -2.46286208E-01;
  COFD[1967] = 1.08285963E-02;
  COFD[1968] = -1.64825336E+01;
  COFD[1969] = 3.95035840E+00;
  COFD[1970] = -3.00959418E-01;
  COFD[1971] = 1.31692593E-02;
  COFD[1972] = -1.73443010E+01;
  COFD[1973] = 4.17761385E+00;
  COFD[1974] = -3.29594803E-01;
  COFD[1975] = 1.43785522E-02;
  COFD[1976] = -1.76012502E+01;
  COFD[1977] = 4.24719726E+00;
  COFD[1978] = -3.38206061E-01;
  COFD[1979] = 1.47350654E-02;
  COFD[1980] = -1.76069125E+01;
  COFD[1981] = 4.24719726E+00;
  COFD[1982] = -3.38206061E-01;
  COFD[1983] = 1.47350654E-02;
  COFD[1984] = -1.71860206E+01;
  COFD[1985] = 4.17889917E+00;
  COFD[1986] = -3.29752510E-01;
  COFD[1987] = 1.43850275E-02;
  COFD[1988] = -1.73474558E+01;
  COFD[1989] = 4.17761385E+00;
  COFD[1990] = -3.29594803E-01;
  COFD[1991] = 1.43785522E-02;
  COFD[1992] = -1.73474558E+01;
  COFD[1993] = 4.17761385E+00;
  COFD[1994] = -3.29594803E-01;
  COFD[1995] = 1.43785522E-02;
  COFD[1996] = -1.96891302E+01;
  COFD[1997] = 4.93652913E+00;
  COFD[1998] = -4.21485300E-01;
  COFD[1999] = 1.80955487E-02;
  COFD[2000] = -1.96881973E+01;
  COFD[2001] = 4.93652913E+00;
  COFD[2002] = -4.21485300E-01;
  COFD[2003] = 1.80955487E-02;
  COFD[2004] = -1.91149162E+01;
  COFD[2005] = 4.74919572E+00;
  COFD[2006] = -3.99211884E-01;
  COFD[2007] = 1.72117130E-02;
  COFD[2008] = -1.76041412E+01;
  COFD[2009] = 4.24719726E+00;
  COFD[2010] = -3.38206061E-01;
  COFD[2011] = 1.47350654E-02;
  COFD[2012] = -1.85458812E+01;
  COFD[2013] = 4.56231943E+00;
  COFD[2014] = -3.76598126E-01;
  COFD[2015] = 1.62971663E-02;
  COFD[2016] = -1.91161885E+01;
  COFD[2017] = 4.74919572E+00;
  COFD[2018] = -3.99211884E-01;
  COFD[2019] = 1.72117130E-02;
  COFD[2020] = -2.09617685E+01;
  COFD[2021] = 5.28406281E+00;
  COFD[2022] = -4.61218665E-01;
  COFD[2023] = 1.96036779E-02;
  COFD[2024] = -1.90778445E+01;
  COFD[2025] = 4.70966098E+00;
  COFD[2026] = -3.94551217E-01;
  COFD[2027] = 1.70286289E-02;
  COFD[2028] = -1.93921747E+01;
  COFD[2029] = 4.85518471E+00;
  COFD[2030] = -4.11551624E-01;
  COFD[2031] = 1.76895651E-02;
  COFD[2032] = -2.04480143E+01;
  COFD[2033] = 5.13291934E+00;
  COFD[2034] = -4.44486744E-01;
  COFD[2035] = 1.89941829E-02;
  COFD[2036] = -2.00321446E+01;
  COFD[2037] = 5.01930029E+00;
  COFD[2038] = -4.31305027E-01;
  COFD[2039] = 1.84846322E-02;
  COFD[2040] = -2.00410522E+01;
  COFD[2041] = 5.01930029E+00;
  COFD[2042] = -4.31305027E-01;
  COFD[2043] = 1.84846322E-02;
  COFD[2044] = -2.00328288E+01;
  COFD[2045] = 5.01930029E+00;
  COFD[2046] = -4.31305027E-01;
  COFD[2047] = 1.84846322E-02;
  COFD[2048] = -1.98885544E+01;
  COFD[2049] = 4.92184026E+00;
  COFD[2050] = -4.19745472E-01;
  COFD[2051] = 1.80268154E-02;
  COFD[2052] = -1.98891383E+01;
  COFD[2053] = 4.92184026E+00;
  COFD[2054] = -4.19745472E-01;
  COFD[2055] = 1.80268154E-02;
  COFD[2056] = -2.03215052E+01;
  COFD[2057] = 5.11312010E+00;
  COFD[2058] = -4.42283881E-01;
  COFD[2059] = 1.89133999E-02;
  COFD[2060] = -2.09614032E+01;
  COFD[2061] = 5.28406281E+00;
  COFD[2062] = -4.61218665E-01;
  COFD[2063] = 1.96036779E-02;
  COFD[2064] = -2.03220683E+01;
  COFD[2065] = 5.11312010E+00;
  COFD[2066] = -4.42283881E-01;
  COFD[2067] = 1.89133999E-02;
  COFD[2068] = -1.50031706E+01;
  COFD[2069] = 3.26223357E+00;
  COFD[2070] = -2.12746642E-01;
  COFD[2071] = 9.38912883E-03;
  COFD[2072] = -1.59634493E+01;
  COFD[2073] = 3.67388294E+00;
  COFD[2074] = -2.64990709E-01;
  COFD[2075] = 1.16042706E-02;
  COFD[2076] = -1.59634493E+01;
  COFD[2077] = 3.67388294E+00;
  COFD[2078] = -2.64990709E-01;
  COFD[2079] = 1.16042706E-02;
  COFD[2080] = -1.40998907E+01;
  COFD[2081] = 3.08120012E+00;
  COFD[2082] = -1.89629903E-01;
  COFD[2083] = 8.40361952E-03;
  COFD[2084] = -1.17159884E+01;
  COFD[2085] = 2.48123210E+00;
  COFD[2086] = -1.11322604E-01;
  COFD[2087] = 4.99282389E-03;
  COFD[2088] = -1.43151328E+01;
  COFD[2089] = 3.68038508E+00;
  COFD[2090] = -2.65779346E-01;
  COFD[2091] = 1.16360771E-02;
  COFD[2092] = -1.41191170E+01;
  COFD[2093] = 3.08120012E+00;
  COFD[2094] = -1.89629903E-01;
  COFD[2095] = 8.40361952E-03;
  COFD[2096] = -2.11388255E+01;
  COFD[2097] = 5.55529689E+00;
  COFD[2098] = -4.87942530E-01;
  COFD[2099] = 2.04249057E-02;
  COFD[2100] = -1.52721010E+01;
  COFD[2101] = 3.36790500E+00;
  COFD[2102] = -2.26321740E-01;
  COFD[2103] = 9.97135055E-03;
  COFD[2104] = -1.52792799E+01;
  COFD[2105] = 3.36790500E+00;
  COFD[2106] = -2.26321740E-01;
  COFD[2107] = 9.97135055E-03;
  COFD[2108] = -1.40318900E+01;
  COFD[2109] = 3.08120012E+00;
  COFD[2110] = -1.89629903E-01;
  COFD[2111] = 8.40361952E-03;
  COFD[2112] = -1.50233391E+01;
  COFD[2113] = 3.26660767E+00;
  COFD[2114] = -2.13287177E-01;
  COFD[2115] = 9.41137857E-03;
  COFD[2116] = -2.05045498E+01;
  COFD[2117] = 5.23843909E+00;
  COFD[2118] = -4.55815614E-01;
  COFD[2119] = 1.93898040E-02;
  COFD[2120] = -2.05128629E+01;
  COFD[2121] = 5.23843909E+00;
  COFD[2122] = -4.55815614E-01;
  COFD[2123] = 1.93898040E-02;
  COFD[2124] = -1.59862997E+01;
  COFD[2125] = 3.67388294E+00;
  COFD[2126] = -2.64990709E-01;
  COFD[2127] = 1.16042706E-02;
  COFD[2128] = -1.81735675E+01;
  COFD[2129] = 4.38391495E+00;
  COFD[2130] = -3.54941287E-01;
  COFD[2131] = 1.54195107E-02;
  COFD[2132] = -1.59525075E+01;
  COFD[2133] = 3.66023858E+00;
  COFD[2134] = -2.63401043E-01;
  COFD[2135] = 1.15432000E-02;
  COFD[2136] = -1.76383102E+01;
  COFD[2137] = 4.19935698E+00;
  COFD[2138] = -3.32310212E-01;
  COFD[2139] = 1.44920670E-02;
  COFD[2140] = -1.86157710E+01;
  COFD[2141] = 4.55689508E+00;
  COFD[2142] = -3.75937921E-01;
  COFD[2143] = 1.62703488E-02;
  COFD[2144] = -1.83455387E+01;
  COFD[2145] = 4.42828044E+00;
  COFD[2146] = -3.60417833E-01;
  COFD[2147] = 1.56455103E-02;
  COFD[2148] = -1.76182305E+01;
  COFD[2149] = 4.19935698E+00;
  COFD[2150] = -3.32310212E-01;
  COFD[2151] = 1.44920670E-02;
  COFD[2152] = -1.60261598E+01;
  COFD[2153] = 3.73312045E+00;
  COFD[2154] = -2.72579779E-01;
  COFD[2155] = 1.19290272E-02;
  COFD[2156] = -1.76285583E+01;
  COFD[2157] = 4.19935698E+00;
  COFD[2158] = -3.32310212E-01;
  COFD[2159] = 1.44920670E-02;
  COFD[2160] = -1.85202239E+01;
  COFD[2161] = 4.42668307E+00;
  COFD[2162] = -3.60220573E-01;
  COFD[2163] = 1.56373683E-02;
  COFD[2164] = -1.87684982E+01;
  COFD[2165] = 4.49191492E+00;
  COFD[2166] = -3.68041771E-01;
  COFD[2167] = 1.59498676E-02;
  COFD[2168] = -1.87780743E+01;
  COFD[2169] = 4.49191492E+00;
  COFD[2170] = -3.68041771E-01;
  COFD[2171] = 1.59498676E-02;
  COFD[2172] = -1.83538331E+01;
  COFD[2173] = 4.42828044E+00;
  COFD[2174] = -3.60417833E-01;
  COFD[2175] = 1.56455103E-02;
  COFD[2176] = -1.85255055E+01;
  COFD[2177] = 4.42668307E+00;
  COFD[2178] = -3.60220573E-01;
  COFD[2179] = 1.56373683E-02;
  COFD[2180] = -1.85255055E+01;
  COFD[2181] = 4.42668307E+00;
  COFD[2182] = -3.60220573E-01;
  COFD[2183] = 1.56373683E-02;
  COFD[2184] = -2.08713378E+01;
  COFD[2185] = 5.15826153E+00;
  COFD[2186] = -4.46699782E-01;
  COFD[2187] = 1.90459433E-02;
  COFD[2188] = -2.08696156E+01;
  COFD[2189] = 5.15826153E+00;
  COFD[2190] = -4.46699782E-01;
  COFD[2191] = 1.90459433E-02;
  COFD[2192] = -2.03634628E+01;
  COFD[2193] = 5.00646405E+00;
  COFD[2194] = -4.29778163E-01;
  COFD[2195] = 1.84239285E-02;
  COFD[2196] = -1.87733780E+01;
  COFD[2197] = 4.49191492E+00;
  COFD[2198] = -3.68041771E-01;
  COFD[2199] = 1.59498676E-02;
  COFD[2200] = -1.97700036E+01;
  COFD[2201] = 4.81610679E+00;
  COFD[2202] = -4.07083368E-01;
  COFD[2203] = 1.75203357E-02;
  COFD[2204] = -2.03657619E+01;
  COFD[2205] = 5.00646405E+00;
  COFD[2206] = -4.29778163E-01;
  COFD[2207] = 1.84239285E-02;
  COFD[2208] = -2.19612971E+01;
  COFD[2209] = 5.41868079E+00;
  COFD[2210] = -4.73445943E-01;
  COFD[2211] = 1.99235961E-02;
  COFD[2212] = -2.03122830E+01;
  COFD[2213] = 4.96244824E+00;
  COFD[2214] = -4.24554495E-01;
  COFD[2215] = 1.82168885E-02;
  COFD[2216] = -2.06812002E+01;
  COFD[2217] = 5.12346096E+00;
  COFD[2218] = -4.43477411E-01;
  COFD[2219] = 1.89592529E-02;
  COFD[2220] = -2.16378359E+01;
  COFD[2221] = 5.35375212E+00;
  COFD[2222] = -4.69097535E-01;
  COFD[2223] = 1.98995645E-02;
  COFD[2224] = -2.12005574E+01;
  COFD[2225] = 5.23328794E+00;
  COFD[2226] = -4.55218686E-01;
  COFD[2227] = 1.93667472E-02;
  COFD[2228] = -2.12174441E+01;
  COFD[2229] = 5.23328794E+00;
  COFD[2230] = -4.55218686E-01;
  COFD[2231] = 1.93667472E-02;
  COFD[2232] = -2.12018450E+01;
  COFD[2233] = 5.23328794E+00;
  COFD[2234] = -4.55218686E-01;
  COFD[2235] = 1.93667472E-02;
  COFD[2236] = -2.10843943E+01;
  COFD[2237] = 5.15315713E+00;
  COFD[2238] = -4.46344043E-01;
  COFD[2239] = 1.90431546E-02;
  COFD[2240] = -2.10855030E+01;
  COFD[2241] = 5.15315713E+00;
  COFD[2242] = -4.46344043E-01;
  COFD[2243] = 1.90431546E-02;
  COFD[2244] = -2.15402530E+01;
  COFD[2245] = 5.34327104E+00;
  COFD[2246] = -4.68144718E-01;
  COFD[2247] = 1.98746594E-02;
  COFD[2248] = -2.19605868E+01;
  COFD[2249] = 5.41868079E+00;
  COFD[2250] = -4.73445943E-01;
  COFD[2251] = 1.99235961E-02;
  COFD[2252] = -2.15413245E+01;
  COFD[2253] = 5.34327104E+00;
  COFD[2254] = -4.68144718E-01;
  COFD[2255] = 1.98746594E-02;
  COFD[2256] = -2.04750606E+01;
  COFD[2257] = 5.23112374E+00;
  COFD[2258] = -4.54967682E-01;
  COFD[2259] = 1.93570423E-02;
  COFD[2260] = -2.14160667E+01;
  COFD[2261] = 5.56531152E+00;
  COFD[2262] = -4.88789821E-01;
  COFD[2263] = 2.04437116E-02;
  COFD[2264] = -2.14160667E+01;
  COFD[2265] = 5.56531152E+00;
  COFD[2266] = -4.88789821E-01;
  COFD[2267] = 2.04437116E-02;
  COFD[2268] = -1.94313018E+01;
  COFD[2269] = 5.02567894E+00;
  COFD[2270] = -4.32045169E-01;
  COFD[2271] = 1.85132214E-02;
  COFD[2272] = -1.60517517E+01;
  COFD[2273] = 4.11188603E+00;
  COFD[2274] = -3.21540884E-01;
  COFD[2275] = 1.40482564E-02;
  COFD[2276] = -1.97544605E+01;
  COFD[2277] = 5.56931926E+00;
  COFD[2278] = -4.89105511E-01;
  COFD[2279] = 2.04493129E-02;
  COFD[2280] = -1.94507789E+01;
  COFD[2281] = 5.02567894E+00;
  COFD[2282] = -4.32045169E-01;
  COFD[2283] = 1.85132214E-02;
  COFD[2284] = -1.77498465E+01;
  COFD[2285] = 3.57475686E+00;
  COFD[2286] = -1.56396297E-01;
  COFD[2287] = 3.12157721E-03;
  COFD[2288] = -2.08204356E+01;
  COFD[2289] = 5.35267674E+00;
  COFD[2290] = -4.69010505E-01;
  COFD[2291] = 1.98979152E-02;
  COFD[2292] = -2.08277510E+01;
  COFD[2293] = 5.35267674E+00;
  COFD[2294] = -4.69010505E-01;
  COFD[2295] = 1.98979152E-02;
  COFD[2296] = -1.93624886E+01;
  COFD[2297] = 5.02567894E+00;
  COFD[2298] = -4.32045169E-01;
  COFD[2299] = 1.85132214E-02;
  COFD[2300] = -2.05045498E+01;
  COFD[2301] = 5.23843909E+00;
  COFD[2302] = -4.55815614E-01;
  COFD[2303] = 1.93898040E-02;
  COFD[2304] = -1.90328637E+01;
  COFD[2305] = 3.99221757E+00;
  COFD[2306] = -2.19854880E-01;
  COFD[2307] = 6.22736279E-03;
  COFD[2308] = -1.90413276E+01;
  COFD[2309] = 3.99221757E+00;
  COFD[2310] = -2.19854880E-01;
  COFD[2311] = 6.22736279E-03;
  COFD[2312] = -2.14391914E+01;
  COFD[2313] = 5.56531152E+00;
  COFD[2314] = -4.88789821E-01;
  COFD[2315] = 2.04437116E-02;
  COFD[2316] = -2.19215472E+01;
  COFD[2317] = 5.45216133E+00;
  COFD[2318] = -4.52916925E-01;
  COFD[2319] = 1.80456400E-02;
  COFD[2320] = -2.14022312E+01;
  COFD[2321] = 5.55346617E+00;
  COFD[2322] = -4.87783156E-01;
  COFD[2323] = 2.04210886E-02;
  COFD[2324] = -2.20055495E+01;
  COFD[2325] = 5.55935694E+00;
  COFD[2326] = -4.74154740E-01;
  COFD[2327] = 1.92584304E-02;
  COFD[2328] = -2.16296327E+01;
  COFD[2329] = 5.29019717E+00;
  COFD[2330] = -4.24502606E-01;
  COFD[2331] = 1.65197343E-02;
  COFD[2332] = -2.19229146E+01;
  COFD[2333] = 5.41841631E+00;
  COFD[2334] = -4.46818971E-01;
  COFD[2335] = 1.77127652E-02;
  COFD[2336] = -2.19851281E+01;
  COFD[2337] = 5.55935694E+00;
  COFD[2338] = -4.74154740E-01;
  COFD[2339] = 1.92584304E-02;
  COFD[2340] = -2.14204113E+01;
  COFD[2341] = 5.59268435E+00;
  COFD[2342] = -4.91232974E-01;
  COFD[2343] = 2.05064746E-02;
  COFD[2344] = -2.19956299E+01;
  COFD[2345] = 5.55935694E+00;
  COFD[2346] = -4.74154740E-01;
  COFD[2347] = 1.92584304E-02;
  COFD[2348] = -2.21057596E+01;
  COFD[2349] = 5.41958743E+00;
  COFD[2350] = -4.47031040E-01;
  COFD[2351] = 1.77243470E-02;
  COFD[2352] = -2.20848512E+01;
  COFD[2353] = 5.36053938E+00;
  COFD[2354] = -4.36434519E-01;
  COFD[2355] = 1.71484255E-02;
  COFD[2356] = -2.20946312E+01;
  COFD[2357] = 5.36053938E+00;
  COFD[2358] = -4.36434519E-01;
  COFD[2359] = 1.71484255E-02;
  COFD[2360] = -2.19313596E+01;
  COFD[2361] = 5.41841631E+00;
  COFD[2362] = -4.46818971E-01;
  COFD[2363] = 1.77127652E-02;
  COFD[2364] = -2.21111508E+01;
  COFD[2365] = 5.41958743E+00;
  COFD[2366] = -4.47031040E-01;
  COFD[2367] = 1.77243470E-02;
  COFD[2368] = -2.21111508E+01;
  COFD[2369] = 5.41958743E+00;
  COFD[2370] = -4.47031040E-01;
  COFD[2371] = 1.77243470E-02;
  COFD[2372] = -2.01426008E+01;
  COFD[2373] = 4.23025405E+00;
  COFD[2374] = -2.55784321E-01;
  COFD[2375] = 7.98147639E-03;
  COFD[2376] = -2.01408334E+01;
  COFD[2377] = 4.23025405E+00;
  COFD[2378] = -2.55784321E-01;
  COFD[2379] = 7.98147639E-03;
  COFD[2380] = -2.08804765E+01;
  COFD[2381] = 4.62431107E+00;
  COFD[2382] = -3.16767061E-01;
  COFD[2383] = 1.10078524E-02;
  COFD[2384] = -2.20898344E+01;
  COFD[2385] = 5.36053938E+00;
  COFD[2386] = -4.36434519E-01;
  COFD[2387] = 1.71484255E-02;
  COFD[2388] = -2.14469888E+01;
  COFD[2389] = 4.94662277E+00;
  COFD[2390] = -3.67818431E-01;
  COFD[2391] = 1.35837544E-02;
  COFD[2392] = -2.08828329E+01;
  COFD[2393] = 4.62431107E+00;
  COFD[2394] = -3.16767061E-01;
  COFD[2395] = 1.10078524E-02;
  COFD[2396] = -1.82793938E+01;
  COFD[2397] = 3.21736474E+00;
  COFD[2398] = -1.03272422E-01;
  COFD[2399] = 5.63117513E-04;
  COFD[2400] = -2.11071930E+01;
  COFD[2401] = 4.70311989E+00;
  COFD[2402] = -3.29240106E-01;
  COFD[2403] = 1.16366808E-02;
  COFD[2404] = -2.03849816E+01;
  COFD[2405] = 4.38396848E+00;
  COFD[2406] = -2.79298901E-01;
  COFD[2407] = 9.13915001E-03;
  COFD[2408] = -1.93060389E+01;
  COFD[2409] = 3.73166281E+00;
  COFD[2410] = -1.80044165E-01;
  COFD[2411] = 4.27250298E-03;
  COFD[2412] = -1.97923614E+01;
  COFD[2413] = 4.01137806E+00;
  COFD[2414] = -2.22734310E-01;
  COFD[2415] = 6.36741567E-03;
  COFD[2416] = -1.98097172E+01;
  COFD[2417] = 4.01137806E+00;
  COFD[2418] = -2.22734310E-01;
  COFD[2419] = 6.36741567E-03;
  COFD[2420] = -1.97936842E+01;
  COFD[2421] = 4.01137806E+00;
  COFD[2422] = -2.22734310E-01;
  COFD[2423] = 6.36741567E-03;
  COFD[2424] = -2.04488873E+01;
  COFD[2425] = 4.26473557E+00;
  COFD[2426] = -2.61033037E-01;
  COFD[2427] = 8.23906412E-03;
  COFD[2428] = -2.04500269E+01;
  COFD[2429] = 4.26473557E+00;
  COFD[2430] = -2.61033037E-01;
  COFD[2431] = 8.23906412E-03;
  COFD[2432] = -1.93533937E+01;
  COFD[2433] = 3.78551156E+00;
  COFD[2434] = -1.88278443E-01;
  COFD[2435] = 4.67669958E-03;
  COFD[2436] = -1.82786627E+01;
  COFD[2437] = 3.21736474E+00;
  COFD[2438] = -1.03272422E-01;
  COFD[2439] = 5.63117513E-04;
  COFD[2440] = -1.93544952E+01;
  COFD[2441] = 3.78551156E+00;
  COFD[2442] = -1.88278443E-01;
  COFD[2443] = 4.67669958E-03;
  COFD[2444] = -2.04833743E+01;
  COFD[2445] = 5.23112374E+00;
  COFD[2446] = -4.54967682E-01;
  COFD[2447] = 1.93570423E-02;
  COFD[2448] = -2.14215667E+01;
  COFD[2449] = 5.56531152E+00;
  COFD[2450] = -4.88789821E-01;
  COFD[2451] = 2.04437116E-02;
  COFD[2452] = -2.14215667E+01;
  COFD[2453] = 5.56531152E+00;
  COFD[2454] = -4.88789821E-01;
  COFD[2455] = 2.04437116E-02;
  COFD[2456] = -1.94373032E+01;
  COFD[2457] = 5.02567894E+00;
  COFD[2458] = -4.32045169E-01;
  COFD[2459] = 1.85132214E-02;
  COFD[2460] = -1.60528433E+01;
  COFD[2461] = 4.11188603E+00;
  COFD[2462] = -3.21540884E-01;
  COFD[2463] = 1.40482564E-02;
  COFD[2464] = -1.97550243E+01;
  COFD[2465] = 5.56931926E+00;
  COFD[2466] = -4.89105511E-01;
  COFD[2467] = 2.04493129E-02;
  COFD[2468] = -1.94570202E+01;
  COFD[2469] = 5.02567894E+00;
  COFD[2470] = -4.32045169E-01;
  COFD[2471] = 1.85132214E-02;
  COFD[2472] = -1.77563175E+01;
  COFD[2473] = 3.57475686E+00;
  COFD[2474] = -1.56396297E-01;
  COFD[2475] = 3.12157721E-03;
  COFD[2476] = -2.08293167E+01;
  COFD[2477] = 5.35267674E+00;
  COFD[2478] = -4.69010505E-01;
  COFD[2479] = 1.98979152E-02;
  COFD[2480] = -2.08367641E+01;
  COFD[2481] = 5.35267674E+00;
  COFD[2482] = -4.69010505E-01;
  COFD[2483] = 1.98979152E-02;
  COFD[2484] = -1.93677143E+01;
  COFD[2485] = 5.02567894E+00;
  COFD[2486] = -4.32045169E-01;
  COFD[2487] = 1.85132214E-02;
  COFD[2488] = -2.05128629E+01;
  COFD[2489] = 5.23843909E+00;
  COFD[2490] = -4.55815614E-01;
  COFD[2491] = 1.93898040E-02;
  COFD[2492] = -1.90413276E+01;
  COFD[2493] = 3.99221757E+00;
  COFD[2494] = -2.19854880E-01;
  COFD[2495] = 6.22736279E-03;
  COFD[2496] = -1.90499374E+01;
  COFD[2497] = 3.99221757E+00;
  COFD[2498] = -2.19854880E-01;
  COFD[2499] = 6.22736279E-03;
  COFD[2500] = -2.14449532E+01;
  COFD[2501] = 5.56531152E+00;
  COFD[2502] = -4.88789821E-01;
  COFD[2503] = 2.04437116E-02;
  COFD[2504] = -2.19317665E+01;
  COFD[2505] = 5.45216133E+00;
  COFD[2506] = -4.52916925E-01;
  COFD[2507] = 1.80456400E-02;
  COFD[2508] = -2.14082433E+01;
  COFD[2509] = 5.55346617E+00;
  COFD[2510] = -4.87783156E-01;
  COFD[2511] = 2.04210886E-02;
  COFD[2512] = -2.20137133E+01;
  COFD[2513] = 5.55935694E+00;
  COFD[2514] = -4.74154740E-01;
  COFD[2515] = 1.92584304E-02;
  COFD[2516] = -2.16379525E+01;
  COFD[2517] = 5.29019717E+00;
  COFD[2518] = -4.24502606E-01;
  COFD[2519] = 1.65197343E-02;
  COFD[2520] = -2.19313850E+01;
  COFD[2521] = 5.41841631E+00;
  COFD[2522] = -4.46818971E-01;
  COFD[2523] = 1.77127652E-02;
  COFD[2524] = -2.19929626E+01;
  COFD[2525] = 5.55935694E+00;
  COFD[2526] = -4.74154740E-01;
  COFD[2527] = 1.92584304E-02;
  COFD[2528] = -2.14303411E+01;
  COFD[2529] = 5.59268435E+00;
  COFD[2530] = -4.91232974E-01;
  COFD[2531] = 2.05064746E-02;
  COFD[2532] = -2.20036321E+01;
  COFD[2533] = 5.55935694E+00;
  COFD[2534] = -4.74154740E-01;
  COFD[2535] = 1.92584304E-02;
  COFD[2536] = -2.21154840E+01;
  COFD[2537] = 5.41958743E+00;
  COFD[2538] = -4.47031040E-01;
  COFD[2539] = 1.77243470E-02;
  COFD[2540] = -2.20947854E+01;
  COFD[2541] = 5.36053938E+00;
  COFD[2542] = -4.36434519E-01;
  COFD[2543] = 1.71484255E-02;
  COFD[2544] = -2.21047637E+01;
  COFD[2545] = 5.36053938E+00;
  COFD[2546] = -4.36434519E-01;
  COFD[2547] = 1.71484255E-02;
  COFD[2548] = -2.19399756E+01;
  COFD[2549] = 5.41841631E+00;
  COFD[2550] = -4.46818971E-01;
  COFD[2551] = 1.77127652E-02;
  COFD[2552] = -2.21209816E+01;
  COFD[2553] = 5.41958743E+00;
  COFD[2554] = -4.47031040E-01;
  COFD[2555] = 1.77243470E-02;
  COFD[2556] = -2.21209816E+01;
  COFD[2557] = 5.41958743E+00;
  COFD[2558] = -4.47031040E-01;
  COFD[2559] = 1.77243470E-02;
  COFD[2560] = -2.01549920E+01;
  COFD[2561] = 4.23025405E+00;
  COFD[2562] = -2.55784321E-01;
  COFD[2563] = 7.98147639E-03;
  COFD[2564] = -2.01531804E+01;
  COFD[2565] = 4.23025405E+00;
  COFD[2566] = -2.55784321E-01;
  COFD[2567] = 7.98147639E-03;
  COFD[2568] = -2.08922233E+01;
  COFD[2569] = 4.62431107E+00;
  COFD[2570] = -3.16767061E-01;
  COFD[2571] = 1.10078524E-02;
  COFD[2572] = -2.20998692E+01;
  COFD[2573] = 5.36053938E+00;
  COFD[2574] = -4.36434519E-01;
  COFD[2575] = 1.71484255E-02;
  COFD[2576] = -2.14581766E+01;
  COFD[2577] = 4.94662277E+00;
  COFD[2578] = -3.67818431E-01;
  COFD[2579] = 1.35837544E-02;
  COFD[2580] = -2.08946359E+01;
  COFD[2581] = 4.62431107E+00;
  COFD[2582] = -3.16767061E-01;
  COFD[2583] = 1.10078524E-02;
  COFD[2584] = -1.82932715E+01;
  COFD[2585] = 3.21736474E+00;
  COFD[2586] = -1.03272422E-01;
  COFD[2587] = 5.63117513E-04;
  COFD[2588] = -2.11192092E+01;
  COFD[2589] = 4.70311989E+00;
  COFD[2590] = -3.29240106E-01;
  COFD[2591] = 1.16366808E-02;
  COFD[2592] = -2.03970485E+01;
  COFD[2593] = 4.38396848E+00;
  COFD[2594] = -2.79298901E-01;
  COFD[2595] = 9.13915001E-03;
  COFD[2596] = -1.93193135E+01;
  COFD[2597] = 3.73166281E+00;
  COFD[2598] = -1.80044165E-01;
  COFD[2599] = 4.27250298E-03;
  COFD[2600] = -1.98052579E+01;
  COFD[2601] = 4.01137806E+00;
  COFD[2602] = -2.22734310E-01;
  COFD[2603] = 6.36741567E-03;
  COFD[2604] = -1.98230753E+01;
  COFD[2605] = 4.01137806E+00;
  COFD[2606] = -2.22734310E-01;
  COFD[2607] = 6.36741567E-03;
  COFD[2608] = -1.98066153E+01;
  COFD[2609] = 4.01137806E+00;
  COFD[2610] = -2.22734310E-01;
  COFD[2611] = 6.36741567E-03;
  COFD[2612] = -2.04620454E+01;
  COFD[2613] = 4.26473557E+00;
  COFD[2614] = -2.61033037E-01;
  COFD[2615] = 8.23906412E-03;
  COFD[2616] = -2.04632155E+01;
  COFD[2617] = 4.26473557E+00;
  COFD[2618] = -2.61033037E-01;
  COFD[2619] = 8.23906412E-03;
  COFD[2620] = -1.93666097E+01;
  COFD[2621] = 3.78551156E+00;
  COFD[2622] = -1.88278443E-01;
  COFD[2623] = 4.67669958E-03;
  COFD[2624] = -1.82925198E+01;
  COFD[2625] = 3.21736474E+00;
  COFD[2626] = -1.03272422E-01;
  COFD[2627] = 5.63117513E-04;
  COFD[2628] = -1.93677407E+01;
  COFD[2629] = 3.78551156E+00;
  COFD[2630] = -1.88278443E-01;
  COFD[2631] = 4.67669958E-03;
  COFD[2632] = -1.59633426E+01;
  COFD[2633] = 3.66853818E+00;
  COFD[2634] = -2.64346221E-01;
  COFD[2635] = 1.15784613E-02;
  COFD[2636] = -1.73198022E+01;
  COFD[2637] = 4.21416723E+00;
  COFD[2638] = -3.34163932E-01;
  COFD[2639] = 1.45697432E-02;
  COFD[2640] = -1.73198022E+01;
  COFD[2641] = 4.21416723E+00;
  COFD[2642] = -3.34163932E-01;
  COFD[2643] = 1.45697432E-02;
  COFD[2644] = -1.50766073E+01;
  COFD[2645] = 3.47945612E+00;
  COFD[2646] = -2.40703722E-01;
  COFD[2647] = 1.05907441E-02;
  COFD[2648] = -1.25141403E+01;
  COFD[2649] = 2.77873601E+00;
  COFD[2650] = -1.50637360E-01;
  COFD[2651] = 6.72684281E-03;
  COFD[2652] = -1.57995045E+01;
  COFD[2653] = 4.22225052E+00;
  COFD[2654] = -3.35156428E-01;
  COFD[2655] = 1.46104855E-02;
  COFD[2656] = -1.50911746E+01;
  COFD[2657] = 3.47945612E+00;
  COFD[2658] = -2.40703722E-01;
  COFD[2659] = 1.05907441E-02;
  COFD[2660] = -2.12831283E+01;
  COFD[2661] = 5.61184117E+00;
  COFD[2662] = -4.90532156E-01;
  COFD[2663] = 2.03507922E-02;
  COFD[2664] = -1.63493305E+01;
  COFD[2665] = 3.82388595E+00;
  COFD[2666] = -2.84480724E-01;
  COFD[2667] = 1.24506311E-02;
  COFD[2668] = -1.63542358E+01;
  COFD[2669] = 3.82388595E+00;
  COFD[2670] = -2.84480724E-01;
  COFD[2671] = 1.24506311E-02;
  COFD[2672] = -1.50240252E+01;
  COFD[2673] = 3.47945612E+00;
  COFD[2674] = -2.40703722E-01;
  COFD[2675] = 1.05907441E-02;
  COFD[2676] = -1.59862997E+01;
  COFD[2677] = 3.67388294E+00;
  COFD[2678] = -2.64990709E-01;
  COFD[2679] = 1.16042706E-02;
  COFD[2680] = -2.14391914E+01;
  COFD[2681] = 5.56531152E+00;
  COFD[2682] = -4.88789821E-01;
  COFD[2683] = 2.04437116E-02;
  COFD[2684] = -2.14449532E+01;
  COFD[2685] = 5.56531152E+00;
  COFD[2686] = -4.88789821E-01;
  COFD[2687] = 2.04437116E-02;
  COFD[2688] = -1.73374523E+01;
  COFD[2689] = 4.21416723E+00;
  COFD[2690] = -3.34163932E-01;
  COFD[2691] = 1.45697432E-02;
  COFD[2692] = -1.93276406E+01;
  COFD[2693] = 4.85015581E+00;
  COFD[2694] = -4.10945109E-01;
  COFD[2695] = 1.76651398E-02;
  COFD[2696] = -1.72738845E+01;
  COFD[2697] = 4.19029808E+00;
  COFD[2698] = -3.31177076E-01;
  COFD[2699] = 1.44446234E-02;
  COFD[2700] = -1.88532484E+01;
  COFD[2701] = 4.68393046E+00;
  COFD[2702] = -3.91610863E-01;
  COFD[2703] = 1.69174645E-02;
  COFD[2704] = -1.98646724E+01;
  COFD[2705] = 5.04367502E+00;
  COFD[2706] = -4.34153325E-01;
  COFD[2707] = 1.85956055E-02;
  COFD[2708] = -1.95494660E+01;
  COFD[2709] = 4.90255048E+00;
  COFD[2710] = -4.17368501E-01;
  COFD[2711] = 1.79287358E-02;
  COFD[2712] = -1.88390630E+01;
  COFD[2713] = 4.68393046E+00;
  COFD[2714] = -3.91610863E-01;
  COFD[2715] = 1.69174645E-02;
  COFD[2716] = -1.72828280E+01;
  COFD[2717] = 4.26063341E+00;
  COFD[2718] = -3.39848064E-01;
  COFD[2719] = 1.48021313E-02;
  COFD[2720] = -1.88463801E+01;
  COFD[2721] = 4.68393046E+00;
  COFD[2722] = -3.91610863E-01;
  COFD[2723] = 1.69174645E-02;
  COFD[2724] = -1.96996970E+01;
  COFD[2725] = 4.90059208E+00;
  COFD[2726] = -4.17126126E-01;
  COFD[2727] = 1.79186848E-02;
  COFD[2728] = -1.99803480E+01;
  COFD[2729] = 4.97875278E+00;
  COFD[2730] = -4.26485475E-01;
  COFD[2731] = 1.82931933E-02;
  COFD[2732] = -1.99866562E+01;
  COFD[2733] = 4.97875278E+00;
  COFD[2734] = -4.26485475E-01;
  COFD[2735] = 1.82931933E-02;
  COFD[2736] = -1.95552136E+01;
  COFD[2737] = 4.90255048E+00;
  COFD[2738] = -4.17368501E-01;
  COFD[2739] = 1.79287358E-02;
  COFD[2740] = -1.97032058E+01;
  COFD[2741] = 4.90059208E+00;
  COFD[2742] = -4.17126126E-01;
  COFD[2743] = 1.79186848E-02;
  COFD[2744] = -1.97032058E+01;
  COFD[2745] = 4.90059208E+00;
  COFD[2746] = -4.17126126E-01;
  COFD[2747] = 1.79186848E-02;
  COFD[2748] = -2.17763734E+01;
  COFD[2749] = 5.50642944E+00;
  COFD[2750] = -4.83016239E-01;
  COFD[2751] = 2.02671529E-02;
  COFD[2752] = -2.17753195E+01;
  COFD[2753] = 5.50642944E+00;
  COFD[2754] = -4.83016239E-01;
  COFD[2755] = 2.02671529E-02;
  COFD[2756] = -2.13446838E+01;
  COFD[2757] = 5.38948949E+00;
  COFD[2758] = -4.71682699E-01;
  COFD[2759] = 1.99285168E-02;
  COFD[2760] = -1.99835677E+01;
  COFD[2761] = 4.97875278E+00;
  COFD[2762] = -4.26485475E-01;
  COFD[2763] = 1.82931933E-02;
  COFD[2764] = -2.08974656E+01;
  COFD[2765] = 5.26420155E+00;
  COFD[2766] = -4.58839834E-01;
  COFD[2767] = 1.95083084E-02;
  COFD[2768] = -2.13461164E+01;
  COFD[2769] = 5.38948949E+00;
  COFD[2770] = -4.71682699E-01;
  COFD[2771] = 1.99285168E-02;
  COFD[2772] = -2.24377202E+01;
  COFD[2773] = 5.58316712E+00;
  COFD[2774] = -4.82794221E-01;
  COFD[2775] = 1.98538380E-02;
  COFD[2776] = -2.13459120E+01;
  COFD[2777] = 5.37197338E+00;
  COFD[2778] = -4.70392872E-01;
  COFD[2779] = 1.99122802E-02;
  COFD[2780] = -2.15208587E+01;
  COFD[2781] = 5.44385051E+00;
  COFD[2782] = -4.76121506E-01;
  COFD[2783] = 2.00164081E-02;
  COFD[2784] = -2.23157713E+01;
  COFD[2785] = 5.60551426E+00;
  COFD[2786] = -4.91233909E-01;
  COFD[2787] = 2.04408254E-02;
  COFD[2788] = -2.20571029E+01;
  COFD[2789] = 5.56193702E+00;
  COFD[2790] = -4.88512557E-01;
  COFD[2791] = 2.04380728E-02;
  COFD[2792] = -2.20672065E+01;
  COFD[2793] = 5.56193702E+00;
  COFD[2794] = -4.88512557E-01;
  COFD[2795] = 2.04380728E-02;
  COFD[2796] = -2.20578781E+01;
  COFD[2797] = 5.56193702E+00;
  COFD[2798] = -4.88512557E-01;
  COFD[2799] = 2.04380728E-02;
  COFD[2800] = -2.19550900E+01;
  COFD[2801] = 5.49350509E+00;
  COFD[2802] = -4.81613405E-01;
  COFD[2803] = 2.02171734E-02;
  COFD[2804] = -2.19557524E+01;
  COFD[2805] = 5.49350509E+00;
  COFD[2806] = -4.81613405E-01;
  COFD[2807] = 2.02171734E-02;
  COFD[2808] = -2.22320027E+01;
  COFD[2809] = 5.60207576E+00;
  COFD[2810] = -4.91440062E-01;
  COFD[2811] = 2.04756122E-02;
  COFD[2812] = -2.24373043E+01;
  COFD[2813] = 5.58316712E+00;
  COFD[2814] = -4.82794221E-01;
  COFD[2815] = 1.98538380E-02;
  COFD[2816] = -2.22326418E+01;
  COFD[2817] = 5.60207576E+00;
  COFD[2818] = -4.91440062E-01;
  COFD[2819] = 2.04756122E-02;
  COFD[2820] = -1.81432499E+01;
  COFD[2821] = 4.37565431E+00;
  COFD[2822] = -3.53906025E-01;
  COFD[2823] = 1.53760786E-02;
  COFD[2824] = -1.93015519E+01;
  COFD[2825] = 4.85015581E+00;
  COFD[2826] = -4.10945109E-01;
  COFD[2827] = 1.76651398E-02;
  COFD[2828] = -1.93015519E+01;
  COFD[2829] = 4.85015581E+00;
  COFD[2830] = -4.10945109E-01;
  COFD[2831] = 1.76651398E-02;
  COFD[2832] = -1.70534750E+01;
  COFD[2833] = 4.14240922E+00;
  COFD[2834] = -3.25239774E-01;
  COFD[2835] = 1.41980687E-02;
  COFD[2836] = -1.37794466E+01;
  COFD[2837] = 3.23973858E+00;
  COFD[2838] = -2.09989036E-01;
  COFD[2839] = 9.27667906E-03;
  COFD[2840] = -1.76147183E+01;
  COFD[2841] = 4.86049500E+00;
  COFD[2842] = -4.12200578E-01;
  COFD[2843] = 1.77160971E-02;
  COFD[2844] = -1.70756953E+01;
  COFD[2845] = 4.14240922E+00;
  COFD[2846] = -3.25239774E-01;
  COFD[2847] = 1.41980687E-02;
  COFD[2848] = -2.07653629E+01;
  COFD[2849] = 5.01091988E+00;
  COFD[2850] = -3.77985581E-01;
  COFD[2851] = 1.40968617E-02;
  COFD[2852] = -1.84688303E+01;
  COFD[2853] = 4.49330851E+00;
  COFD[2854] = -3.68208715E-01;
  COFD[2855] = 1.59565402E-02;
  COFD[2856] = -1.84777509E+01;
  COFD[2857] = 4.49330851E+00;
  COFD[2858] = -3.68208715E-01;
  COFD[2859] = 1.59565402E-02;
  COFD[2860] = -1.69758845E+01;
  COFD[2861] = 4.14240922E+00;
  COFD[2862] = -3.25239774E-01;
  COFD[2863] = 1.41980687E-02;
  COFD[2864] = -1.81735675E+01;
  COFD[2865] = 4.38391495E+00;
  COFD[2866] = -3.54941287E-01;
  COFD[2867] = 1.54195107E-02;
  COFD[2868] = -2.19215472E+01;
  COFD[2869] = 5.45216133E+00;
  COFD[2870] = -4.52916925E-01;
  COFD[2871] = 1.80456400E-02;
  COFD[2872] = -2.19317665E+01;
  COFD[2873] = 5.45216133E+00;
  COFD[2874] = -4.52916925E-01;
  COFD[2875] = 1.80456400E-02;
  COFD[2876] = -1.93276406E+01;
  COFD[2877] = 4.85015581E+00;
  COFD[2878] = -4.10945109E-01;
  COFD[2879] = 1.76651398E-02;
  COFD[2880] = -2.13425604E+01;
  COFD[2881] = 5.40460130E+00;
  COFD[2882] = -4.72718910E-01;
  COFD[2883] = 1.99362717E-02;
  COFD[2884] = -1.92867532E+01;
  COFD[2885] = 4.83375900E+00;
  COFD[2886] = -4.09146560E-01;
  COFD[2887] = 1.76006599E-02;
  COFD[2888] = -2.09309702E+01;
  COFD[2889] = 5.30153901E+00;
  COFD[2890] = -4.63335119E-01;
  COFD[2891] = 1.96897053E-02;
  COFD[2892] = -2.16802565E+01;
  COFD[2893] = 5.52918296E+00;
  COFD[2894] = -4.85360709E-01;
  COFD[2895] = 2.03448006E-02;
  COFD[2896] = -2.14224440E+01;
  COFD[2897] = 5.41729961E+00;
  COFD[2898] = -4.73400281E-01;
  COFD[2899] = 1.99269567E-02;
  COFD[2900] = -2.09066295E+01;
  COFD[2901] = 5.30153901E+00;
  COFD[2902] = -4.63335119E-01;
  COFD[2903] = 1.96897053E-02;
  COFD[2904] = -1.94485902E+01;
  COFD[2905] = 4.91446566E+00;
  COFD[2906] = -4.18837152E-01;
  COFD[2907] = 1.79893537E-02;
  COFD[2908] = -2.09191230E+01;
  COFD[2909] = 5.30153901E+00;
  COFD[2910] = -4.63335119E-01;
  COFD[2911] = 1.96897053E-02;
  COFD[2912] = -2.16148486E+01;
  COFD[2913] = 5.41694410E+00;
  COFD[2914] = -4.73389041E-01;
  COFD[2915] = 1.99278645E-02;
  COFD[2916] = -2.18590684E+01;
  COFD[2917] = 5.47368915E+00;
  COFD[2918] = -4.79424291E-01;
  COFD[2919] = 2.01372920E-02;
  COFD[2920] = -2.18713176E+01;
  COFD[2921] = 5.47368915E+00;
  COFD[2922] = -4.79424291E-01;
  COFD[2923] = 2.01372920E-02;
  COFD[2924] = -2.14326420E+01;
  COFD[2925] = 5.41729961E+00;
  COFD[2926] = -4.73400281E-01;
  COFD[2927] = 1.99269567E-02;
  COFD[2928] = -2.16215581E+01;
  COFD[2929] = 5.41694410E+00;
  COFD[2930] = -4.73389041E-01;
  COFD[2931] = 1.99278645E-02;
  COFD[2932] = -2.16215581E+01;
  COFD[2933] = 5.41694410E+00;
  COFD[2934] = -4.73389041E-01;
  COFD[2935] = 1.99278645E-02;
  COFD[2936] = -2.26266113E+01;
  COFD[2937] = 5.50195433E+00;
  COFD[2938] = -4.62690815E-01;
  COFD[2939] = 1.86010137E-02;
  COFD[2940] = -2.26242613E+01;
  COFD[2941] = 5.50195433E+00;
  COFD[2942] = -4.62690815E-01;
  COFD[2943] = 1.86010137E-02;
  COFD[2944] = -2.26279689E+01;
  COFD[2945] = 5.58503543E+00;
  COFD[2946] = -4.80244152E-01;
  COFD[2947] = 1.96323422E-02;
  COFD[2948] = -2.18653022E+01;
  COFD[2949] = 5.47368915E+00;
  COFD[2950] = -4.79424291E-01;
  COFD[2951] = 2.01372920E-02;
  COFD[2952] = -2.24870015E+01;
  COFD[2953] = 5.60571852E+00;
  COFD[2954] = -4.88813595E-01;
  COFD[2955] = 2.02394376E-02;
  COFD[2956] = -2.26310539E+01;
  COFD[2957] = 5.58503543E+00;
  COFD[2958] = -4.80244152E-01;
  COFD[2959] = 1.96323422E-02;
  COFD[2960] = -2.23878763E+01;
  COFD[2961] = 5.16350806E+00;
  COFD[2962] = -4.02853220E-01;
  COFD[2963] = 1.53752462E-02;
  COFD[2964] = -2.26749928E+01;
  COFD[2965] = 5.58486459E+00;
  COFD[2966] = -4.81517134E-01;
  COFD[2967] = 1.97388064E-02;
  COFD[2968] = -2.25786592E+01;
  COFD[2969] = 5.53409384E+00;
  COFD[2970] = -4.69342499E-01;
  COFD[2971] = 1.89886374E-02;
  COFD[2972] = -2.26364478E+01;
  COFD[2973] = 5.35655148E+00;
  COFD[2974] = -4.35749979E-01;
  COFD[2975] = 1.71121304E-02;
  COFD[2976] = -2.26923929E+01;
  COFD[2977] = 5.45651759E+00;
  COFD[2978] = -4.53709578E-01;
  COFD[2979] = 1.80890894E-02;
  COFD[2980] = -2.27159393E+01;
  COFD[2981] = 5.45651759E+00;
  COFD[2982] = -4.53709578E-01;
  COFD[2983] = 1.80890894E-02;
  COFD[2984] = -2.26941773E+01;
  COFD[2985] = 5.45651759E+00;
  COFD[2986] = -4.53709578E-01;
  COFD[2987] = 1.80890894E-02;
  COFD[2988] = -2.28655682E+01;
  COFD[2989] = 5.50522401E+00;
  COFD[2990] = -4.63604304E-01;
  COFD[2991] = 1.86600785E-02;
  COFD[2992] = -2.28671163E+01;
  COFD[2993] = 5.50522401E+00;
  COFD[2994] = -4.63604304E-01;
  COFD[2995] = 1.86600785E-02;
  COFD[2996] = -2.26107099E+01;
  COFD[2997] = 5.37828363E+00;
  COFD[2998] = -4.39471072E-01;
  COFD[2999] = 1.73093139E-02;
  COFD[3000] = -2.23868643E+01;
  COFD[3001] = 5.16350806E+00;
  COFD[3002] = -4.02853220E-01;
  COFD[3003] = 1.53752462E-02;
  COFD[3004] = -2.26122084E+01;
  COFD[3005] = 5.37828363E+00;
  COFD[3006] = -4.39471072E-01;
  COFD[3007] = 1.73093139E-02;
  COFD[3008] = -1.59327344E+01;
  COFD[3009] = 3.65620899E+00;
  COFD[3010] = -2.62933804E-01;
  COFD[3011] = 1.15253223E-02;
  COFD[3012] = -1.72556722E+01;
  COFD[3013] = 4.19029808E+00;
  COFD[3014] = -3.31177076E-01;
  COFD[3015] = 1.44446234E-02;
  COFD[3016] = -1.72556722E+01;
  COFD[3017] = 4.19029808E+00;
  COFD[3018] = -3.31177076E-01;
  COFD[3019] = 1.44446234E-02;
  COFD[3020] = -1.50270285E+01;
  COFD[3021] = 3.46140064E+00;
  COFD[3022] = -2.38440092E-01;
  COFD[3023] = 1.04960087E-02;
  COFD[3024] = -1.24693714E+01;
  COFD[3025] = 2.76686648E+00;
  COFD[3026] = -1.49120141E-01;
  COFD[3027] = 6.66220432E-03;
  COFD[3028] = -1.57199190E+01;
  COFD[3029] = 4.19936335E+00;
  COFD[3030] = -3.32311009E-01;
  COFD[3031] = 1.44921003E-02;
  COFD[3032] = -1.50420909E+01;
  COFD[3033] = 3.46140064E+00;
  COFD[3034] = -2.38440092E-01;
  COFD[3035] = 1.04960087E-02;
  COFD[3036] = -2.14087360E+01;
  COFD[3037] = 5.57281993E+00;
  COFD[3038] = -4.76690860E-01;
  COFD[3039] = 1.94000702E-02;
  COFD[3040] = -1.62724429E+01;
  COFD[3041] = 3.79163564E+00;
  COFD[3042] = -2.80257365E-01;
  COFD[3043] = 1.22656902E-02;
  COFD[3044] = -1.62775683E+01;
  COFD[3045] = 3.79163564E+00;
  COFD[3046] = -2.80257365E-01;
  COFD[3047] = 1.22656902E-02;
  COFD[3048] = -1.49727784E+01;
  COFD[3049] = 3.46140064E+00;
  COFD[3050] = -2.38440092E-01;
  COFD[3051] = 1.04960087E-02;
  COFD[3052] = -1.59525075E+01;
  COFD[3053] = 3.66023858E+00;
  COFD[3054] = -2.63401043E-01;
  COFD[3055] = 1.15432000E-02;
  COFD[3056] = -2.14022312E+01;
  COFD[3057] = 5.55346617E+00;
  COFD[3058] = -4.87783156E-01;
  COFD[3059] = 2.04210886E-02;
  COFD[3060] = -2.14082433E+01;
  COFD[3061] = 5.55346617E+00;
  COFD[3062] = -4.87783156E-01;
  COFD[3063] = 2.04210886E-02;
  COFD[3064] = -1.72738845E+01;
  COFD[3065] = 4.19029808E+00;
  COFD[3066] = -3.31177076E-01;
  COFD[3067] = 1.44446234E-02;
  COFD[3068] = -1.92867532E+01;
  COFD[3069] = 4.83375900E+00;
  COFD[3070] = -4.09146560E-01;
  COFD[3071] = 1.76006599E-02;
  COFD[3072] = -1.72167712E+01;
  COFD[3073] = 4.16886779E+00;
  COFD[3074] = -3.28518156E-01;
  COFD[3075] = 1.43341626E-02;
  COFD[3076] = -1.87968842E+01;
  COFD[3077] = 4.66162351E+00;
  COFD[3078] = -3.88920477E-01;
  COFD[3079] = 1.68089648E-02;
  COFD[3080] = -1.98075051E+01;
  COFD[3081] = 5.02169524E+00;
  COFD[3082] = -4.31582804E-01;
  COFD[3083] = 1.84953568E-02;
  COFD[3084] = -1.94763687E+01;
  COFD[3085] = 4.87333294E+00;
  COFD[3086] = -4.13769241E-01;
  COFD[3087] = 1.77802244E-02;
  COFD[3088] = -1.87821106E+01;
  COFD[3089] = 4.66162351E+00;
  COFD[3090] = -3.88920477E-01;
  COFD[3091] = 1.68089648E-02;
  COFD[3092] = -1.72316133E+01;
  COFD[3093] = 4.24011069E+00;
  COFD[3094] = -3.37339810E-01;
  COFD[3095] = 1.46996679E-02;
  COFD[3096] = -1.87897289E+01;
  COFD[3097] = 4.66162351E+00;
  COFD[3098] = -3.88920477E-01;
  COFD[3099] = 1.68089648E-02;
  COFD[3100] = -1.96296599E+01;
  COFD[3101] = 4.87149639E+00;
  COFD[3102] = -4.13544849E-01;
  COFD[3103] = 1.77710516E-02;
  COFD[3104] = -1.99235836E+01;
  COFD[3105] = 4.95514826E+00;
  COFD[3106] = -4.23691395E-01;
  COFD[3107] = 1.81828318E-02;
  COFD[3108] = -1.99301980E+01;
  COFD[3109] = 4.95514826E+00;
  COFD[3110] = -4.23691395E-01;
  COFD[3111] = 1.81828318E-02;
  COFD[3112] = -1.94823661E+01;
  COFD[3113] = 4.87333294E+00;
  COFD[3114] = -4.13769241E-01;
  COFD[3115] = 1.77802244E-02;
  COFD[3116] = -1.96333360E+01;
  COFD[3117] = 4.87149639E+00;
  COFD[3118] = -4.13544849E-01;
  COFD[3119] = 1.77710516E-02;
  COFD[3120] = -1.96333360E+01;
  COFD[3121] = 4.87149639E+00;
  COFD[3122] = -4.13544849E-01;
  COFD[3123] = 1.77710516E-02;
  COFD[3124] = -2.17262573E+01;
  COFD[3125] = 5.48539572E+00;
  COFD[3126] = -4.80731929E-01;
  COFD[3127] = 2.01857298E-02;
  COFD[3128] = -2.17251449E+01;
  COFD[3129] = 5.48539572E+00;
  COFD[3130] = -4.80731929E-01;
  COFD[3131] = 2.01857298E-02;
  COFD[3132] = -2.13224068E+01;
  COFD[3133] = 5.38005505E+00;
  COFD[3134] = -4.70960934E-01;
  COFD[3135] = 1.99174610E-02;
  COFD[3136] = -1.99269591E+01;
  COFD[3137] = 4.95514826E+00;
  COFD[3138] = -4.23691395E-01;
  COFD[3139] = 1.81828318E-02;
  COFD[3140] = -2.08422358E+01;
  COFD[3141] = 5.24054443E+00;
  COFD[3142] = -4.56059385E-01;
  COFD[3143] = 1.93992107E-02;
  COFD[3144] = -2.13239166E+01;
  COFD[3145] = 5.38005505E+00;
  COFD[3146] = -4.70960934E-01;
  COFD[3147] = 1.99174610E-02;
  COFD[3148] = -2.24418715E+01;
  COFD[3149] = 5.58455232E+00;
  COFD[3150] = -4.83725835E-01;
  COFD[3151] = 1.99244840E-02;
  COFD[3152] = -2.13282916E+01;
  COFD[3153] = 5.36375915E+00;
  COFD[3154] = -4.69808196E-01;
  COFD[3155] = 1.99064589E-02;
  COFD[3156] = -2.14671206E+01;
  COFD[3157] = 5.42109069E+00;
  COFD[3158] = -4.73533096E-01;
  COFD[3159] = 1.99183547E-02;
  COFD[3160] = -2.23101362E+01;
  COFD[3161] = 5.60228541E+00;
  COFD[3162] = -4.91417422E-01;
  COFD[3163] = 2.04726557E-02;
  COFD[3164] = -2.20306513E+01;
  COFD[3165] = 5.54982225E+00;
  COFD[3166] = -4.87416516E-01;
  COFD[3167] = 2.04093655E-02;
  COFD[3168] = -2.20413371E+01;
  COFD[3169] = 5.54982225E+00;
  COFD[3170] = -4.87416516E-01;
  COFD[3171] = 2.04093655E-02;
  COFD[3172] = -2.20314707E+01;
  COFD[3173] = 5.54982225E+00;
  COFD[3174] = -4.87416516E-01;
  COFD[3175] = 2.04093655E-02;
  COFD[3176] = -2.19053842E+01;
  COFD[3177] = 5.47162499E+00;
  COFD[3178] = -4.79195552E-01;
  COFD[3179] = 2.01289088E-02;
  COFD[3180] = -2.19060849E+01;
  COFD[3181] = 5.47162499E+00;
  COFD[3182] = -4.79195552E-01;
  COFD[3183] = 2.01289088E-02;
  COFD[3184] = -2.22319042E+01;
  COFD[3185] = 5.59979579E+00;
  COFD[3186] = -4.91615330E-01;
  COFD[3187] = 2.05018544E-02;
  COFD[3188] = -2.24414308E+01;
  COFD[3189] = 5.58455232E+00;
  COFD[3190] = -4.83725835E-01;
  COFD[3191] = 1.99244840E-02;
  COFD[3192] = -2.22325803E+01;
  COFD[3193] = 5.59979579E+00;
  COFD[3194] = -4.91615330E-01;
  COFD[3195] = 2.05018544E-02;
  COFD[3196] = -1.76099599E+01;
  COFD[3197] = 4.19171952E+00;
  COFD[3198] = -3.31354810E-01;
  COFD[3199] = 1.44520623E-02;
  COFD[3200] = -1.88306727E+01;
  COFD[3201] = 4.68393046E+00;
  COFD[3202] = -3.91610863E-01;
  COFD[3203] = 1.69174645E-02;
  COFD[3204] = -1.88306727E+01;
  COFD[3205] = 4.68393046E+00;
  COFD[3206] = -3.91610863E-01;
  COFD[3207] = 1.69174645E-02;
  COFD[3208] = -1.65559708E+01;
  COFD[3209] = 3.95035840E+00;
  COFD[3210] = -3.00959418E-01;
  COFD[3211] = 1.31692593E-02;
  COFD[3212] = -1.34723365E+01;
  COFD[3213] = 3.09379603E+00;
  COFD[3214] = -1.91268635E-01;
  COFD[3215] = 8.47480224E-03;
  COFD[3216] = -1.72239329E+01;
  COFD[3217] = 4.69060745E+00;
  COFD[3218] = -3.92369888E-01;
  COFD[3219] = 1.69459661E-02;
  COFD[3220] = -1.65749465E+01;
  COFD[3221] = 3.95035840E+00;
  COFD[3222] = -3.00959418E-01;
  COFD[3223] = 1.31692593E-02;
  COFD[3224] = -2.15172712E+01;
  COFD[3225] = 5.46737673E+00;
  COFD[3226] = -4.55696085E-01;
  COFD[3227] = 1.81982625E-02;
  COFD[3228] = -1.78938681E+01;
  COFD[3229] = 4.29613154E+00;
  COFD[3230] = -3.44012526E-01;
  COFD[3231] = 1.49643715E-02;
  COFD[3232] = -1.79009121E+01;
  COFD[3233] = 4.29613154E+00;
  COFD[3234] = -3.44012526E-01;
  COFD[3235] = 1.49643715E-02;
  COFD[3236] = -1.64887841E+01;
  COFD[3237] = 3.95035840E+00;
  COFD[3238] = -3.00959418E-01;
  COFD[3239] = 1.31692593E-02;
  COFD[3240] = -1.76383102E+01;
  COFD[3241] = 4.19935698E+00;
  COFD[3242] = -3.32310212E-01;
  COFD[3243] = 1.44920670E-02;
  COFD[3244] = -2.20055495E+01;
  COFD[3245] = 5.55935694E+00;
  COFD[3246] = -4.74154740E-01;
  COFD[3247] = 1.92584304E-02;
  COFD[3248] = -2.20137133E+01;
  COFD[3249] = 5.55935694E+00;
  COFD[3250] = -4.74154740E-01;
  COFD[3251] = 1.92584304E-02;
  COFD[3252] = -1.88532484E+01;
  COFD[3253] = 4.68393046E+00;
  COFD[3254] = -3.91610863E-01;
  COFD[3255] = 1.69174645E-02;
  COFD[3256] = -2.09309702E+01;
  COFD[3257] = 5.30153901E+00;
  COFD[3258] = -4.63335119E-01;
  COFD[3259] = 1.96897053E-02;
  COFD[3260] = -1.87968842E+01;
  COFD[3261] = 4.66162351E+00;
  COFD[3262] = -3.88920477E-01;
  COFD[3263] = 1.68089648E-02;
  COFD[3264] = -2.03956828E+01;
  COFD[3265] = 5.13263469E+00;
  COFD[3266] = -4.44457285E-01;
  COFD[3267] = 1.89932102E-02;
  COFD[3268] = -2.12218938E+01;
  COFD[3269] = 5.39823225E+00;
  COFD[3270] = -4.72294645E-01;
  COFD[3271] = 1.99340225E-02;
  COFD[3272] = -2.10963496E+01;
  COFD[3273] = 5.34286099E+00;
  COFD[3274] = -4.68100992E-01;
  COFD[3275] = 1.98731399E-02;
  COFD[3276] = -2.03759419E+01;
  COFD[3277] = 5.13263469E+00;
  COFD[3278] = -4.44457285E-01;
  COFD[3279] = 1.89932102E-02;
  COFD[3280] = -1.88761346E+01;
  COFD[3281] = 4.72476764E+00;
  COFD[3282] = -3.96306836E-01;
  COFD[3283] = 1.70964541E-02;
  COFD[3284] = -2.03860971E+01;
  COFD[3285] = 5.13263469E+00;
  COFD[3286] = -4.44457285E-01;
  COFD[3287] = 1.89932102E-02;
  COFD[3288] = -2.12647792E+01;
  COFD[3289] = 5.34173603E+00;
  COFD[3290] = -4.67980991E-01;
  COFD[3291] = 1.98689682E-02;
  COFD[3292] = -2.14438531E+01;
  COFD[3293] = 5.37331605E+00;
  COFD[3294] = -4.70491203E-01;
  COFD[3295] = 1.99134666E-02;
  COFD[3296] = -2.14532286E+01;
  COFD[3297] = 5.37331605E+00;
  COFD[3298] = -4.70491203E-01;
  COFD[3299] = 1.99134666E-02;
  COFD[3300] = -2.11044949E+01;
  COFD[3301] = 5.34286099E+00;
  COFD[3302] = -4.68100992E-01;
  COFD[3303] = 1.98731399E-02;
  COFD[3304] = -2.12699528E+01;
  COFD[3305] = 5.34173603E+00;
  COFD[3306] = -4.67980991E-01;
  COFD[3307] = 1.98689682E-02;
  COFD[3308] = -2.12699528E+01;
  COFD[3309] = 5.34173603E+00;
  COFD[3310] = -4.67980991E-01;
  COFD[3311] = 1.98689682E-02;
  COFD[3312] = -2.25832423E+01;
  COFD[3313] = 5.58516153E+00;
  COFD[3314] = -4.80440252E-01;
  COFD[3315] = 1.96479586E-02;
  COFD[3316] = -2.25815640E+01;
  COFD[3317] = 5.58516153E+00;
  COFD[3318] = -4.80440252E-01;
  COFD[3319] = 1.96479586E-02;
  COFD[3320] = -2.24575898E+01;
  COFD[3321] = 5.60901522E+00;
  COFD[3322] = -4.89632587E-01;
  COFD[3323] = 2.02906018E-02;
  COFD[3324] = -2.14486311E+01;
  COFD[3325] = 5.37331605E+00;
  COFD[3326] = -4.70491203E-01;
  COFD[3327] = 1.99134666E-02;
  COFD[3328] = -2.21968872E+01;
  COFD[3329] = 5.56964344E+00;
  COFD[3330] = -4.89130645E-01;
  COFD[3331] = 2.04497328E-02;
  COFD[3332] = -2.24598329E+01;
  COFD[3333] = 5.60901522E+00;
  COFD[3334] = -4.89632587E-01;
  COFD[3335] = 2.02906018E-02;
  COFD[3336] = -2.26031516E+01;
  COFD[3337] = 5.37189964E+00;
  COFD[3338] = -4.38371109E-01;
  COFD[3339] = 1.72507977E-02;
  COFD[3340] = -2.25079234E+01;
  COFD[3341] = 5.61234946E+00;
  COFD[3342] = -4.91326412E-01;
  COFD[3343] = 2.04139363E-02;
  COFD[3344] = -2.24661470E+01;
  COFD[3345] = 5.58420073E+00;
  COFD[3346] = -4.82356716E-01;
  COFD[3347] = 1.98120306E-02;
  COFD[3348] = -2.27119301E+01;
  COFD[3349] = 5.50057825E+00;
  COFD[3350] = -4.62242535E-01;
  COFD[3351] = 1.85709667E-02;
  COFD[3352] = -2.26915962E+01;
  COFD[3353] = 5.56399361E+00;
  COFD[3354] = -4.75020089E-01;
  COFD[3355] = 1.93065281E-02;
  COFD[3356] = -2.27080273E+01;
  COFD[3357] = 5.56399361E+00;
  COFD[3358] = -4.75020089E-01;
  COFD[3359] = 1.93065281E-02;
  COFD[3360] = -2.26928496E+01;
  COFD[3361] = 5.56399361E+00;
  COFD[3362] = -4.75020089E-01;
  COFD[3363] = 1.93065281E-02;
  COFD[3364] = -2.27965342E+01;
  COFD[3365] = 5.58520405E+00;
  COFD[3366] = -4.80873447E-01;
  COFD[3367] = 1.96836519E-02;
  COFD[3368] = -2.27976129E+01;
  COFD[3369] = 5.58520405E+00;
  COFD[3370] = -4.80873447E-01;
  COFD[3371] = 1.96836519E-02;
  COFD[3372] = -2.26476618E+01;
  COFD[3373] = 5.50595231E+00;
  COFD[3374] = -4.63781372E-01;
  COFD[3375] = 1.86710651E-02;
  COFD[3376] = -2.26024615E+01;
  COFD[3377] = 5.37189964E+00;
  COFD[3378] = -4.38371109E-01;
  COFD[3379] = 1.72507977E-02;
  COFD[3380] = -2.26487042E+01;
  COFD[3381] = 5.50595231E+00;
  COFD[3382] = -4.63781372E-01;
  COFD[3383] = 1.86710651E-02;
  COFD[3384] = -1.85864196E+01;
  COFD[3385] = 4.54915847E+00;
  COFD[3386] = -3.75000738E-01;
  COFD[3387] = 1.62324821E-02;
  COFD[3388] = -1.98418097E+01;
  COFD[3389] = 5.04367502E+00;
  COFD[3390] = -4.34153325E-01;
  COFD[3391] = 1.85956055E-02;
  COFD[3392] = -1.98418097E+01;
  COFD[3393] = 5.04367502E+00;
  COFD[3394] = -4.34153325E-01;
  COFD[3395] = 1.85956055E-02;
  COFD[3396] = -1.74792034E+01;
  COFD[3397] = 4.29676909E+00;
  COFD[3398] = -3.44085306E-01;
  COFD[3399] = 1.49671135E-02;
  COFD[3400] = -1.42229344E+01;
  COFD[3401] = 3.38669384E+00;
  COFD[3402] = -2.28784122E-01;
  COFD[3403] = 1.00790953E-02;
  COFD[3404] = -1.82252070E+01;
  COFD[3405] = 5.05237312E+00;
  COFD[3406] = -4.35182396E-01;
  COFD[3407] = 1.86363074E-02;
  COFD[3408] = -1.74984410E+01;
  COFD[3409] = 4.29676909E+00;
  COFD[3410] = -3.44085306E-01;
  COFD[3411] = 1.49671135E-02;
  COFD[3412] = -2.08812277E+01;
  COFD[3413] = 5.08859217E+00;
  COFD[3414] = -3.90525428E-01;
  COFD[3415] = 1.47376395E-02;
  COFD[3416] = -1.89544717E+01;
  COFD[3417] = 4.68595732E+00;
  COFD[3418] = -3.91842840E-01;
  COFD[3419] = 1.69262542E-02;
  COFD[3420] = -1.89616566E+01;
  COFD[3421] = 4.68595732E+00;
  COFD[3422] = -3.91842840E-01;
  COFD[3423] = 1.69262542E-02;
  COFD[3424] = -1.74111665E+01;
  COFD[3425] = 4.29676909E+00;
  COFD[3426] = -3.44085306E-01;
  COFD[3427] = 1.49671135E-02;
  COFD[3428] = -1.86157710E+01;
  COFD[3429] = 4.55689508E+00;
  COFD[3430] = -3.75937921E-01;
  COFD[3431] = 1.62703488E-02;
  COFD[3432] = -2.16296327E+01;
  COFD[3433] = 5.29019717E+00;
  COFD[3434] = -4.24502606E-01;
  COFD[3435] = 1.65197343E-02;
  COFD[3436] = -2.16379525E+01;
  COFD[3437] = 5.29019717E+00;
  COFD[3438] = -4.24502606E-01;
  COFD[3439] = 1.65197343E-02;
  COFD[3440] = -1.98646724E+01;
  COFD[3441] = 5.04367502E+00;
  COFD[3442] = -4.34153325E-01;
  COFD[3443] = 1.85956055E-02;
  COFD[3444] = -2.16802565E+01;
  COFD[3445] = 5.52918296E+00;
  COFD[3446] = -4.85360709E-01;
  COFD[3447] = 2.03448006E-02;
  COFD[3448] = -1.98075051E+01;
  COFD[3449] = 5.02169524E+00;
  COFD[3450] = -4.31582804E-01;
  COFD[3451] = 1.84953568E-02;
  COFD[3452] = -2.12218938E+01;
  COFD[3453] = 5.39823225E+00;
  COFD[3454] = -4.72294645E-01;
  COFD[3455] = 1.99340225E-02;
  COFD[3456] = -2.19327379E+01;
  COFD[3457] = 5.60638188E+00;
  COFD[3458] = -4.91272522E-01;
  COFD[3459] = 2.04396264E-02;
  COFD[3460] = -2.18190524E+01;
  COFD[3461] = 5.55753905E+00;
  COFD[3462] = -4.88136714E-01;
  COFD[3463] = 2.04294957E-02;
  COFD[3464] = -2.12017989E+01;
  COFD[3465] = 5.39823225E+00;
  COFD[3466] = -4.72294645E-01;
  COFD[3467] = 1.99340225E-02;
  COFD[3468] = -1.99081518E+01;
  COFD[3469] = 5.09311649E+00;
  COFD[3470] = -4.39965178E-01;
  COFD[3471] = 1.88238537E-02;
  COFD[3472] = -2.12121345E+01;
  COFD[3473] = 5.39823225E+00;
  COFD[3474] = -4.72294645E-01;
  COFD[3475] = 1.99340225E-02;
  COFD[3476] = -2.19910933E+01;
  COFD[3477] = 5.55674298E+00;
  COFD[3478] = -4.88067739E-01;
  COFD[3479] = 2.04278640E-02;
  COFD[3480] = -2.21885121E+01;
  COFD[3481] = 5.59472344E+00;
  COFD[3482] = -4.91421518E-01;
  COFD[3483] = 2.05117088E-02;
  COFD[3484] = -2.21980972E+01;
  COFD[3485] = 5.59472344E+00;
  COFD[3486] = -4.91421518E-01;
  COFD[3487] = 2.05117088E-02;
  COFD[3488] = -2.18273535E+01;
  COFD[3489] = 5.55753905E+00;
  COFD[3490] = -4.88136714E-01;
  COFD[3491] = 2.04294957E-02;
  COFD[3492] = -2.19963797E+01;
  COFD[3493] = 5.55674298E+00;
  COFD[3494] = -4.88067739E-01;
  COFD[3495] = 2.04278640E-02;
  COFD[3496] = -2.19963797E+01;
  COFD[3497] = 5.55674298E+00;
  COFD[3498] = -4.88067739E-01;
  COFD[3499] = 2.04278640E-02;
  COFD[3500] = -2.23733884E+01;
  COFD[3501] = 5.38363480E+00;
  COFD[3502] = -4.40406530E-01;
  COFD[3503] = 1.73594979E-02;
  COFD[3504] = -2.23716642E+01;
  COFD[3505] = 5.38363480E+00;
  COFD[3506] = -4.40406530E-01;
  COFD[3507] = 1.73594979E-02;
  COFD[3508] = -2.24687014E+01;
  COFD[3509] = 5.50462612E+00;
  COFD[3510] = -4.63455030E-01;
  COFD[3511] = 1.86507367E-02;
  COFD[3512] = -2.21933965E+01;
  COFD[3513] = 5.59472344E+00;
  COFD[3514] = -4.91421518E-01;
  COFD[3515] = 2.05117088E-02;
  COFD[3516] = -2.24750542E+01;
  COFD[3517] = 5.58517115E+00;
  COFD[3518] = -4.80469231E-01;
  COFD[3519] = 1.96503120E-02;
  COFD[3520] = -2.24710030E+01;
  COFD[3521] = 5.50462612E+00;
  COFD[3522] = -4.63455030E-01;
  COFD[3523] = 1.86507367E-02;
  COFD[3524] = -2.17293603E+01;
  COFD[3525] = 4.88252869E+00;
  COFD[3526] = -3.57706506E-01;
  COFD[3527] = 1.30744059E-02;
  COFD[3528] = -2.25623446E+01;
  COFD[3529] = 5.52760491E+00;
  COFD[3530] = -4.68101221E-01;
  COFD[3531] = 1.89188529E-02;
  COFD[3532] = -2.23720789E+01;
  COFD[3533] = 5.43334969E+00;
  COFD[3534] = -4.49523852E-01;
  COFD[3535] = 1.78605185E-02;
  COFD[3536] = -2.22029098E+01;
  COFD[3537] = 5.16779283E+00;
  COFD[3538] = -4.03572478E-01;
  COFD[3539] = 1.54128789E-02;
  COFD[3540] = -2.23376731E+01;
  COFD[3541] = 5.29923580E+00;
  COFD[3542] = -4.25997743E-01;
  COFD[3543] = 1.65974476E-02;
  COFD[3544] = -2.23545804E+01;
  COFD[3545] = 5.29923580E+00;
  COFD[3546] = -4.25997743E-01;
  COFD[3547] = 1.65974476E-02;
  COFD[3548] = -2.23389622E+01;
  COFD[3549] = 5.29923580E+00;
  COFD[3550] = -4.25997743E-01;
  COFD[3551] = 1.65974476E-02;
  COFD[3552] = -2.26171730E+01;
  COFD[3553] = 5.39548142E+00;
  COFD[3554] = -4.42524166E-01;
  COFD[3555] = 1.74743365E-02;
  COFD[3556] = -2.26182831E+01;
  COFD[3557] = 5.39548142E+00;
  COFD[3558] = -4.42524166E-01;
  COFD[3559] = 1.74743365E-02;
  COFD[3560] = -2.22000351E+01;
  COFD[3561] = 5.19999151E+00;
  COFD[3562] = -4.08912144E-01;
  COFD[3563] = 1.56905571E-02;
  COFD[3564] = -2.17286491E+01;
  COFD[3565] = 4.88252869E+00;
  COFD[3566] = -3.57706506E-01;
  COFD[3567] = 1.30744059E-02;
  COFD[3568] = -2.22011078E+01;
  COFD[3569] = 5.19999151E+00;
  COFD[3570] = -4.08912144E-01;
  COFD[3571] = 1.56905571E-02;
  COFD[3572] = -1.83166409E+01;
  COFD[3573] = 4.42045763E+00;
  COFD[3574] = -3.59451578E-01;
  COFD[3575] = 1.56056164E-02;
  COFD[3576] = -1.95263296E+01;
  COFD[3577] = 4.90255048E+00;
  COFD[3578] = -4.17368501E-01;
  COFD[3579] = 1.79287358E-02;
  COFD[3580] = -1.95263296E+01;
  COFD[3581] = 4.90255048E+00;
  COFD[3582] = -4.17368501E-01;
  COFD[3583] = 1.79287358E-02;
  COFD[3584] = -1.72496558E+01;
  COFD[3585] = 4.17889917E+00;
  COFD[3586] = -3.29752510E-01;
  COFD[3587] = 1.43850275E-02;
  COFD[3588] = -1.39914049E+01;
  COFD[3589] = 3.26384506E+00;
  COFD[3590] = -2.12947087E-01;
  COFD[3591] = 9.39743888E-03;
  COFD[3592] = -1.79339484E+01;
  COFD[3593] = 4.91373893E+00;
  COFD[3594] = -4.18747629E-01;
  COFD[3595] = 1.79856610E-02;
  COFD[3596] = -1.72691436E+01;
  COFD[3597] = 4.17889917E+00;
  COFD[3598] = -3.29752510E-01;
  COFD[3599] = 1.43850275E-02;
  COFD[3600] = -2.12597258E+01;
  COFD[3601] = 5.24930667E+00;
  COFD[3602] = -4.17435088E-01;
  COFD[3603] = 1.61434424E-02;
  COFD[3604] = -1.86335873E+01;
  COFD[3605] = 4.53572533E+00;
  COFD[3606] = -3.73386925E-01;
  COFD[3607] = 1.61678881E-02;
  COFD[3608] = -1.86409085E+01;
  COFD[3609] = 4.53572533E+00;
  COFD[3610] = -3.73386925E-01;
  COFD[3611] = 1.61678881E-02;
  COFD[3612] = -1.71808080E+01;
  COFD[3613] = 4.17889917E+00;
  COFD[3614] = -3.29752510E-01;
  COFD[3615] = 1.43850275E-02;
  COFD[3616] = -1.83455387E+01;
  COFD[3617] = 4.42828044E+00;
  COFD[3618] = -3.60417833E-01;
  COFD[3619] = 1.56455103E-02;
  COFD[3620] = -2.19229146E+01;
  COFD[3621] = 5.41841631E+00;
  COFD[3622] = -4.46818971E-01;
  COFD[3623] = 1.77127652E-02;
  COFD[3624] = -2.19313850E+01;
  COFD[3625] = 5.41841631E+00;
  COFD[3626] = -4.46818971E-01;
  COFD[3627] = 1.77127652E-02;
  COFD[3628] = -1.95494660E+01;
  COFD[3629] = 4.90255048E+00;
  COFD[3630] = -4.17368501E-01;
  COFD[3631] = 1.79287358E-02;
  COFD[3632] = -2.14224440E+01;
  COFD[3633] = 5.41729961E+00;
  COFD[3634] = -4.73400281E-01;
  COFD[3635] = 1.99269567E-02;
  COFD[3636] = -1.94763687E+01;
  COFD[3637] = 4.87333294E+00;
  COFD[3638] = -4.13769241E-01;
  COFD[3639] = 1.77802244E-02;
  COFD[3640] = -2.10963496E+01;
  COFD[3641] = 5.34286099E+00;
  COFD[3642] = -4.68100992E-01;
  COFD[3643] = 1.98731399E-02;
  COFD[3644] = -2.18190524E+01;
  COFD[3645] = 5.55753905E+00;
  COFD[3646] = -4.88136714E-01;
  COFD[3647] = 2.04294957E-02;
  COFD[3648] = -2.15575647E+01;
  COFD[3649] = 5.44803850E+00;
  COFD[3650] = -4.76610560E-01;
  COFD[3651] = 2.00355294E-02;
  COFD[3652] = -2.10759137E+01;
  COFD[3653] = 5.34286099E+00;
  COFD[3654] = -4.68100992E-01;
  COFD[3655] = 1.98731399E-02;
  COFD[3656] = -1.96309007E+01;
  COFD[3657] = 4.95923807E+00;
  COFD[3658] = -4.24176182E-01;
  COFD[3659] = 1.82020215E-02;
  COFD[3660] = -2.10864229E+01;
  COFD[3661] = 5.34286099E+00;
  COFD[3662] = -4.68100992E-01;
  COFD[3663] = 1.98731399E-02;
  COFD[3664] = -2.17250700E+01;
  COFD[3665] = 5.44645703E+00;
  COFD[3666] = -4.76428229E-01;
  COFD[3667] = 2.00285047E-02;
  COFD[3668] = -2.19883773E+01;
  COFD[3669] = 5.51276597E+00;
  COFD[3670] = -4.83701824E-01;
  COFD[3671] = 2.02915297E-02;
  COFD[3672] = -2.19981661E+01;
  COFD[3673] = 5.51276597E+00;
  COFD[3674] = -4.83701824E-01;
  COFD[3675] = 2.02915297E-02;
  COFD[3676] = -2.15660162E+01;
  COFD[3677] = 5.44803850E+00;
  COFD[3678] = -4.76610560E-01;
  COFD[3679] = 2.00355294E-02;
  COFD[3680] = -2.17304659E+01;
  COFD[3681] = 5.44645703E+00;
  COFD[3682] = -4.76428229E-01;
  COFD[3683] = 2.00285047E-02;
  COFD[3684] = -2.17304659E+01;
  COFD[3685] = 5.44645703E+00;
  COFD[3686] = -4.76428229E-01;
  COFD[3687] = 2.00285047E-02;
  COFD[3688] = -2.25968936E+01;
  COFD[3689] = 5.48733210E+00;
  COFD[3690] = -4.59335784E-01;
  COFD[3691] = 1.83981530E-02;
  COFD[3692] = -2.25951243E+01;
  COFD[3693] = 5.48733210E+00;
  COFD[3694] = -4.59335784E-01;
  COFD[3695] = 1.83981530E-02;
  COFD[3696] = -2.26309491E+01;
  COFD[3697] = 5.58066442E+00;
  COFD[3698] = -4.78358496E-01;
  COFD[3699] = 1.94983439E-02;
  COFD[3700] = -2.19933650E+01;
  COFD[3701] = 5.51276597E+00;
  COFD[3702] = -4.83701824E-01;
  COFD[3703] = 2.02915297E-02;
  COFD[3704] = -2.24735925E+01;
  COFD[3705] = 5.59125763E+00;
  COFD[3706] = -4.85543279E-01;
  COFD[3707] = 2.00415309E-02;
  COFD[3708] = -2.26333080E+01;
  COFD[3709] = 5.58066442E+00;
  COFD[3710] = -4.78358496E-01;
  COFD[3711] = 1.94983439E-02;
  COFD[3712] = -2.22360373E+01;
  COFD[3713] = 5.10895195E+00;
  COFD[3714] = -3.93822647E-01;
  COFD[3715] = 1.49066324E-02;
  COFD[3716] = -2.26807218E+01;
  COFD[3717] = 5.58509275E+00;
  COFD[3718] = -4.80315312E-01;
  COFD[3719] = 1.96379504E-02;
  COFD[3720] = -2.25317928E+01;
  COFD[3721] = 5.50894837E+00;
  COFD[3722] = -4.64480433E-01;
  COFD[3723] = 1.87138301E-02;
  COFD[3724] = -2.25212836E+01;
  COFD[3725] = 5.31381434E+00;
  COFD[3726] = -4.28421269E-01;
  COFD[3727] = 1.67237240E-02;
  COFD[3728] = -2.26083501E+01;
  COFD[3729] = 5.42359285E+00;
  COFD[3730] = -4.47762010E-01;
  COFD[3731] = 1.77644050E-02;
  COFD[3732] = -2.26257261E+01;
  COFD[3733] = 5.42359285E+00;
  COFD[3734] = -4.47762010E-01;
  COFD[3735] = 1.77644050E-02;
  COFD[3736] = -2.26096744E+01;
  COFD[3737] = 5.42359285E+00;
  COFD[3738] = -4.47762010E-01;
  COFD[3739] = 1.77644050E-02;
  COFD[3740] = -2.28265392E+01;
  COFD[3741] = 5.49552429E+00;
  COFD[3742] = -4.60932565E-01;
  COFD[3743] = 1.84885333E-02;
  COFD[3744] = -2.28276802E+01;
  COFD[3745] = 5.49552429E+00;
  COFD[3746] = -4.60932565E-01;
  COFD[3747] = 1.84885333E-02;
  COFD[3748] = -2.25041898E+01;
  COFD[3749] = 5.33883161E+00;
  COFD[3750] = -4.32711075E-01;
  COFD[3751] = 1.69510393E-02;
  COFD[3752] = -2.22353053E+01;
  COFD[3753] = 5.10895195E+00;
  COFD[3754] = -3.93822647E-01;
  COFD[3755] = 1.49066324E-02;
  COFD[3756] = -2.25052925E+01;
  COFD[3757] = 5.33883161E+00;
  COFD[3758] = -4.32711075E-01;
  COFD[3759] = 1.69510393E-02;
  COFD[3760] = -1.75898787E+01;
  COFD[3761] = 4.19171952E+00;
  COFD[3762] = -3.31354810E-01;
  COFD[3763] = 1.44520623E-02;
  COFD[3764] = -1.88171051E+01;
  COFD[3765] = 4.68393046E+00;
  COFD[3766] = -3.91610863E-01;
  COFD[3767] = 1.69174645E-02;
  COFD[3768] = -1.88171051E+01;
  COFD[3769] = 4.68393046E+00;
  COFD[3770] = -3.91610863E-01;
  COFD[3771] = 1.69174645E-02;
  COFD[3772] = -1.65412223E+01;
  COFD[3773] = 3.95035840E+00;
  COFD[3774] = -3.00959418E-01;
  COFD[3775] = 1.31692593E-02;
  COFD[3776] = -1.34695507E+01;
  COFD[3777] = 3.09379603E+00;
  COFD[3778] = -1.91268635E-01;
  COFD[3779] = 8.47480224E-03;
  COFD[3780] = -1.72224880E+01;
  COFD[3781] = 4.69060745E+00;
  COFD[3782] = -3.92369888E-01;
  COFD[3783] = 1.69459661E-02;
  COFD[3784] = -1.65596362E+01;
  COFD[3785] = 3.95035840E+00;
  COFD[3786] = -3.00959418E-01;
  COFD[3787] = 1.31692593E-02;
  COFD[3788] = -2.15014247E+01;
  COFD[3789] = 5.46737673E+00;
  COFD[3790] = -4.55696085E-01;
  COFD[3791] = 1.81982625E-02;
  COFD[3792] = -1.78725064E+01;
  COFD[3793] = 4.29613154E+00;
  COFD[3794] = -3.44012526E-01;
  COFD[3795] = 1.49643715E-02;
  COFD[3796] = -1.78792538E+01;
  COFD[3797] = 4.29613154E+00;
  COFD[3798] = -3.44012526E-01;
  COFD[3799] = 1.49643715E-02;
  COFD[3800] = -1.64758663E+01;
  COFD[3801] = 3.95035840E+00;
  COFD[3802] = -3.00959418E-01;
  COFD[3803] = 1.31692593E-02;
  COFD[3804] = -1.76182305E+01;
  COFD[3805] = 4.19935698E+00;
  COFD[3806] = -3.32310212E-01;
  COFD[3807] = 1.44920670E-02;
  COFD[3808] = -2.19851281E+01;
  COFD[3809] = 5.55935694E+00;
  COFD[3810] = -4.74154740E-01;
  COFD[3811] = 1.92584304E-02;
  COFD[3812] = -2.19929626E+01;
  COFD[3813] = 5.55935694E+00;
  COFD[3814] = -4.74154740E-01;
  COFD[3815] = 1.92584304E-02;
  COFD[3816] = -1.88390630E+01;
  COFD[3817] = 4.68393046E+00;
  COFD[3818] = -3.91610863E-01;
  COFD[3819] = 1.69174645E-02;
  COFD[3820] = -2.09066295E+01;
  COFD[3821] = 5.30153901E+00;
  COFD[3822] = -4.63335119E-01;
  COFD[3823] = 1.96897053E-02;
  COFD[3824] = -1.87821106E+01;
  COFD[3825] = 4.66162351E+00;
  COFD[3826] = -3.88920477E-01;
  COFD[3827] = 1.68089648E-02;
  COFD[3828] = -2.03759419E+01;
  COFD[3829] = 5.13263469E+00;
  COFD[3830] = -4.44457285E-01;
  COFD[3831] = 1.89932102E-02;
  COFD[3832] = -2.12017989E+01;
  COFD[3833] = 5.39823225E+00;
  COFD[3834] = -4.72294645E-01;
  COFD[3835] = 1.99340225E-02;
  COFD[3836] = -2.10759137E+01;
  COFD[3837] = 5.34286099E+00;
  COFD[3838] = -4.68100992E-01;
  COFD[3839] = 1.98731399E-02;
  COFD[3840] = -2.03569508E+01;
  COFD[3841] = 5.13263469E+00;
  COFD[3842] = -4.44457285E-01;
  COFD[3843] = 1.89932102E-02;
  COFD[3844] = -1.88524334E+01;
  COFD[3845] = 4.72476764E+00;
  COFD[3846] = -3.96306836E-01;
  COFD[3847] = 1.70964541E-02;
  COFD[3848] = -2.03667239E+01;
  COFD[3849] = 5.13263469E+00;
  COFD[3850] = -4.44457285E-01;
  COFD[3851] = 1.89932102E-02;
  COFD[3852] = -2.12415335E+01;
  COFD[3853] = 5.34173603E+00;
  COFD[3854] = -4.67980991E-01;
  COFD[3855] = 1.98689682E-02;
  COFD[3856] = -2.14201421E+01;
  COFD[3857] = 5.37331605E+00;
  COFD[3858] = -4.70491203E-01;
  COFD[3859] = 1.99134666E-02;
  COFD[3860] = -2.14290794E+01;
  COFD[3861] = 5.37331605E+00;
  COFD[3862] = -4.70491203E-01;
  COFD[3863] = 1.99134666E-02;
  COFD[3864] = -2.10837302E+01;
  COFD[3865] = 5.34286099E+00;
  COFD[3866] = -4.68100992E-01;
  COFD[3867] = 1.98731399E-02;
  COFD[3868] = -2.12464709E+01;
  COFD[3869] = 5.34173603E+00;
  COFD[3870] = -4.67980991E-01;
  COFD[3871] = 1.98689682E-02;
  COFD[3872] = -2.12464709E+01;
  COFD[3873] = 5.34173603E+00;
  COFD[3874] = -4.67980991E-01;
  COFD[3875] = 1.98689682E-02;
  COFD[3876] = -2.25541888E+01;
  COFD[3877] = 5.58516153E+00;
  COFD[3878] = -4.80440252E-01;
  COFD[3879] = 1.96479586E-02;
  COFD[3880] = -2.25526051E+01;
  COFD[3881] = 5.58516153E+00;
  COFD[3882] = -4.80440252E-01;
  COFD[3883] = 1.96479586E-02;
  COFD[3884] = -2.24299190E+01;
  COFD[3885] = 5.60901522E+00;
  COFD[3886] = -4.89632587E-01;
  COFD[3887] = 2.02906018E-02;
  COFD[3888] = -2.14246978E+01;
  COFD[3889] = 5.37331605E+00;
  COFD[3890] = -4.70491203E-01;
  COFD[3891] = 1.99134666E-02;
  COFD[3892] = -2.21704267E+01;
  COFD[3893] = 5.56964344E+00;
  COFD[3894] = -4.89130645E-01;
  COFD[3895] = 2.04497328E-02;
  COFD[3896] = -2.24320410E+01;
  COFD[3897] = 5.60901522E+00;
  COFD[3898] = -4.89632587E-01;
  COFD[3899] = 2.02906018E-02;
  COFD[3900] = -2.25709562E+01;
  COFD[3901] = 5.37189964E+00;
  COFD[3902] = -4.38371109E-01;
  COFD[3903] = 1.72507977E-02;
  COFD[3904] = -2.24796729E+01;
  COFD[3905] = 5.61234946E+00;
  COFD[3906] = -4.91326412E-01;
  COFD[3907] = 2.04139363E-02;
  COFD[3908] = -2.24377877E+01;
  COFD[3909] = 5.58420073E+00;
  COFD[3910] = -4.82356716E-01;
  COFD[3911] = 1.98120306E-02;
  COFD[3912] = -2.26810012E+01;
  COFD[3913] = 5.50057825E+00;
  COFD[3914] = -4.62242535E-01;
  COFD[3915] = 1.85709667E-02;
  COFD[3916] = -2.26614672E+01;
  COFD[3917] = 5.56399361E+00;
  COFD[3918] = -4.75020089E-01;
  COFD[3919] = 1.93065281E-02;
  COFD[3920] = -2.26769224E+01;
  COFD[3921] = 5.56399361E+00;
  COFD[3922] = -4.75020089E-01;
  COFD[3923] = 1.93065281E-02;
  COFD[3924] = -2.26626472E+01;
  COFD[3925] = 5.56399361E+00;
  COFD[3926] = -4.75020089E-01;
  COFD[3927] = 1.93065281E-02;
  COFD[3928] = -2.27658512E+01;
  COFD[3929] = 5.58520405E+00;
  COFD[3930] = -4.80873447E-01;
  COFD[3931] = 1.96836519E-02;
  COFD[3932] = -2.27668657E+01;
  COFD[3933] = 5.58520405E+00;
  COFD[3934] = -4.80873447E-01;
  COFD[3935] = 1.96836519E-02;
  COFD[3936] = -2.26168567E+01;
  COFD[3937] = 5.50595231E+00;
  COFD[3938] = -4.63781372E-01;
  COFD[3939] = 1.86710651E-02;
  COFD[3940] = -2.25703091E+01;
  COFD[3941] = 5.37189964E+00;
  COFD[3942] = -4.38371109E-01;
  COFD[3943] = 1.72507977E-02;
  COFD[3944] = -2.26178366E+01;
  COFD[3945] = 5.50595231E+00;
  COFD[3946] = -4.63781372E-01;
  COFD[3947] = 1.86710651E-02;
  COFD[3948] = -1.59884349E+01;
  COFD[3949] = 3.72220402E+00;
  COFD[3950] = -2.71150591E-01;
  COFD[3951] = 1.18665265E-02;
  COFD[3952] = -1.72572011E+01;
  COFD[3953] = 4.26063341E+00;
  COFD[3954] = -3.39848064E-01;
  COFD[3955] = 1.48021313E-02;
  COFD[3956] = -1.72572011E+01;
  COFD[3957] = 4.26063341E+00;
  COFD[3958] = -3.39848064E-01;
  COFD[3959] = 1.48021313E-02;
  COFD[3960] = -1.49500258E+01;
  COFD[3961] = 3.52327209E+00;
  COFD[3962] = -2.46286208E-01;
  COFD[3963] = 1.08285963E-02;
  COFD[3964] = -1.22004476E+01;
  COFD[3965] = 2.80725489E+00;
  COFD[3966] = -1.54291406E-01;
  COFD[3967] = 6.88290911E-03;
  COFD[3968] = -1.54460977E+01;
  COFD[3969] = 4.26819983E+00;
  COFD[3970] = -3.40766379E-01;
  COFD[3971] = 1.48393361E-02;
  COFD[3972] = -1.49718147E+01;
  COFD[3973] = 3.52327209E+00;
  COFD[3974] = -2.46286208E-01;
  COFD[3975] = 1.08285963E-02;
  COFD[3976] = -2.10440599E+01;
  COFD[3977] = 5.59806282E+00;
  COFD[3978] = -4.87109535E-01;
  COFD[3979] = 2.01370226E-02;
  COFD[3980] = -1.64169341E+01;
  COFD[3981] = 3.89309916E+00;
  COFD[3982] = -2.93528188E-01;
  COFD[3983] = 1.28463177E-02;
  COFD[3984] = -1.64255877E+01;
  COFD[3985] = 3.89309916E+00;
  COFD[3986] = -2.93528188E-01;
  COFD[3987] = 1.28463177E-02;
  COFD[3988] = -1.48738025E+01;
  COFD[3989] = 3.52327209E+00;
  COFD[3990] = -2.46286208E-01;
  COFD[3991] = 1.08285963E-02;
  COFD[3992] = -1.60261598E+01;
  COFD[3993] = 3.73312045E+00;
  COFD[3994] = -2.72579779E-01;
  COFD[3995] = 1.19290272E-02;
  COFD[3996] = -2.14204113E+01;
  COFD[3997] = 5.59268435E+00;
  COFD[3998] = -4.91232974E-01;
  COFD[3999] = 2.05064746E-02;
  COFD[4000] = -2.14303411E+01;
  COFD[4001] = 5.59268435E+00;
  COFD[4002] = -4.91232974E-01;
  COFD[4003] = 2.05064746E-02;
  COFD[4004] = -1.72828280E+01;
  COFD[4005] = 4.26063341E+00;
  COFD[4006] = -3.39848064E-01;
  COFD[4007] = 1.48021313E-02;
  COFD[4008] = -1.94485902E+01;
  COFD[4009] = 4.91446566E+00;
  COFD[4010] = -4.18837152E-01;
  COFD[4011] = 1.79893537E-02;
  COFD[4012] = -1.72316133E+01;
  COFD[4013] = 4.24011069E+00;
  COFD[4014] = -3.37339810E-01;
  COFD[4015] = 1.46996679E-02;
  COFD[4016] = -1.88761346E+01;
  COFD[4017] = 4.72476764E+00;
  COFD[4018] = -3.96306836E-01;
  COFD[4019] = 1.70964541E-02;
  COFD[4020] = -1.99081518E+01;
  COFD[4021] = 5.09311649E+00;
  COFD[4022] = -4.39965178E-01;
  COFD[4023] = 1.88238537E-02;
  COFD[4024] = -1.96309007E+01;
  COFD[4025] = 4.95923807E+00;
  COFD[4026] = -4.24176182E-01;
  COFD[4027] = 1.82020215E-02;
  COFD[4028] = -1.88524334E+01;
  COFD[4029] = 4.72476764E+00;
  COFD[4030] = -3.96306836E-01;
  COFD[4031] = 1.70964541E-02;
  COFD[4032] = -1.72414795E+01;
  COFD[4033] = 4.29808578E+00;
  COFD[4034] = -3.44235570E-01;
  COFD[4035] = 1.49727727E-02;
  COFD[4036] = -1.88646025E+01;
  COFD[4037] = 4.72476764E+00;
  COFD[4038] = -3.96306836E-01;
  COFD[4039] = 1.70964541E-02;
  COFD[4040] = -1.98379390E+01;
  COFD[4041] = 4.95769834E+00;
  COFD[4042] = -4.23993658E-01;
  COFD[4043] = 1.81947960E-02;
  COFD[4044] = -2.01223105E+01;
  COFD[4045] = 5.03101171E+00;
  COFD[4046] = -4.32665019E-01;
  COFD[4047] = 1.85372086E-02;
  COFD[4048] = -2.01341398E+01;
  COFD[4049] = 5.03101171E+00;
  COFD[4050] = -4.32665019E-01;
  COFD[4051] = 1.85372086E-02;
  COFD[4052] = -1.96408096E+01;
  COFD[4053] = 4.95923807E+00;
  COFD[4054] = -4.24176182E-01;
  COFD[4055] = 1.82020215E-02;
  COFD[4056] = -1.98444255E+01;
  COFD[4057] = 4.95769834E+00;
  COFD[4058] = -4.23993658E-01;
  COFD[4059] = 1.81947960E-02;
  COFD[4060] = -1.98444255E+01;
  COFD[4061] = 4.95769834E+00;
  COFD[4062] = -4.23993658E-01;
  COFD[4063] = 1.81947960E-02;
  COFD[4064] = -2.19713745E+01;
  COFD[4065] = 5.54455172E+00;
  COFD[4066] = -4.86886991E-01;
  COFD[4067] = 2.03924829E-02;
  COFD[4068] = -2.19691286E+01;
  COFD[4069] = 5.54455172E+00;
  COFD[4070] = -4.86886991E-01;
  COFD[4071] = 2.03924829E-02;
  COFD[4072] = -2.14701152E+01;
  COFD[4073] = 5.40830928E+00;
  COFD[4074] = -4.72988519E-01;
  COFD[4075] = 1.99395140E-02;
  COFD[4076] = -2.01283319E+01;
  COFD[4077] = 5.03101171E+00;
  COFD[4078] = -4.32665019E-01;
  COFD[4079] = 1.85372086E-02;
  COFD[4080] = -2.11008574E+01;
  COFD[4081] = 5.32505336E+00;
  COFD[4082] = -4.66130047E-01;
  COFD[4083] = 1.98010949E-02;
  COFD[4084] = -2.14730716E+01;
  COFD[4085] = 5.40830928E+00;
  COFD[4086] = -4.72988519E-01;
  COFD[4087] = 1.99395140E-02;
  COFD[4088] = -2.26193014E+01;
  COFD[4089] = 5.58499587E+00;
  COFD[4090] = -4.81446176E-01;
  COFD[4091] = 1.97322465E-02;
  COFD[4092] = -2.14935935E+01;
  COFD[4093] = 5.39257286E+00;
  COFD[4094] = -4.71929831E-01;
  COFD[4095] = 1.99331101E-02;
  COFD[4096] = -2.17210076E+01;
  COFD[4097] = 5.49225467E+00;
  COFD[4098] = -4.81478120E-01;
  COFD[4099] = 2.02123784E-02;
  COFD[4100] = -2.24824171E+01;
  COFD[4101] = 5.61201870E+00;
  COFD[4102] = -4.90765913E-01;
  COFD[4103] = 2.03692426E-02;
  COFD[4104] = -2.22516246E+01;
  COFD[4105] = 5.58876571E+00;
  COFD[4106] = -4.90865374E-01;
  COFD[4107] = 2.04959778E-02;
  COFD[4108] = -2.22740465E+01;
  COFD[4109] = 5.58876571E+00;
  COFD[4110] = -4.90865374E-01;
  COFD[4111] = 2.04959778E-02;
  COFD[4112] = -2.22533256E+01;
  COFD[4113] = 5.58876571E+00;
  COFD[4114] = -4.90865374E-01;
  COFD[4115] = 2.04959778E-02;
  COFD[4116] = -2.22093818E+01;
  COFD[4117] = 5.53457356E+00;
  COFD[4118] = -4.85892223E-01;
  COFD[4119] = 2.03611937E-02;
  COFD[4120] = -2.22108556E+01;
  COFD[4121] = 5.53457356E+00;
  COFD[4122] = -4.85892223E-01;
  COFD[4123] = 2.03611937E-02;
  COFD[4124] = -2.23963088E+01;
  COFD[4125] = 5.61198329E+00;
  COFD[4126] = -4.91433699E-01;
  COFD[4127] = 2.04246565E-02;
  COFD[4128] = -2.26183413E+01;
  COFD[4129] = 5.58499587E+00;
  COFD[4130] = -4.81446176E-01;
  COFD[4131] = 1.97322465E-02;
  COFD[4132] = -2.23977350E+01;
  COFD[4133] = 5.61198329E+00;
  COFD[4134] = -4.91433699E-01;
  COFD[4135] = 2.04246565E-02;
  COFD[4136] = -1.76002073E+01;
  COFD[4137] = 4.19171952E+00;
  COFD[4138] = -3.31354810E-01;
  COFD[4139] = 1.44520623E-02;
  COFD[4140] = -1.88241056E+01;
  COFD[4141] = 4.68393046E+00;
  COFD[4142] = -3.91610863E-01;
  COFD[4143] = 1.69174645E-02;
  COFD[4144] = -1.88241056E+01;
  COFD[4145] = 4.68393046E+00;
  COFD[4146] = -3.91610863E-01;
  COFD[4147] = 1.69174645E-02;
  COFD[4148] = -1.65488277E+01;
  COFD[4149] = 3.95035840E+00;
  COFD[4150] = -3.00959418E-01;
  COFD[4151] = 1.31692593E-02;
  COFD[4152] = -1.34709956E+01;
  COFD[4153] = 3.09379603E+00;
  COFD[4154] = -1.91268635E-01;
  COFD[4155] = 8.47480224E-03;
  COFD[4156] = -1.72232379E+01;
  COFD[4157] = 4.69060745E+00;
  COFD[4158] = -3.92369888E-01;
  COFD[4159] = 1.69459661E-02;
  COFD[4160] = -1.65675292E+01;
  COFD[4161] = 3.95035840E+00;
  COFD[4162] = -3.00959418E-01;
  COFD[4163] = 1.31692593E-02;
  COFD[4164] = -2.15095920E+01;
  COFD[4165] = 5.46737673E+00;
  COFD[4166] = -4.55696085E-01;
  COFD[4167] = 1.81982625E-02;
  COFD[4168] = -1.78834868E+01;
  COFD[4169] = 4.29613154E+00;
  COFD[4170] = -3.44012526E-01;
  COFD[4171] = 1.49643715E-02;
  COFD[4172] = -1.78903850E+01;
  COFD[4173] = 4.29613154E+00;
  COFD[4174] = -3.44012526E-01;
  COFD[4175] = 1.49643715E-02;
  COFD[4176] = -1.64825336E+01;
  COFD[4177] = 3.95035840E+00;
  COFD[4178] = -3.00959418E-01;
  COFD[4179] = 1.31692593E-02;
  COFD[4180] = -1.76285583E+01;
  COFD[4181] = 4.19935698E+00;
  COFD[4182] = -3.32310212E-01;
  COFD[4183] = 1.44920670E-02;
  COFD[4184] = -2.19956299E+01;
  COFD[4185] = 5.55935694E+00;
  COFD[4186] = -4.74154740E-01;
  COFD[4187] = 1.92584304E-02;
  COFD[4188] = -2.20036321E+01;
  COFD[4189] = 5.55935694E+00;
  COFD[4190] = -4.74154740E-01;
  COFD[4191] = 1.92584304E-02;
  COFD[4192] = -1.88463801E+01;
  COFD[4193] = 4.68393046E+00;
  COFD[4194] = -3.91610863E-01;
  COFD[4195] = 1.69174645E-02;
  COFD[4196] = -2.09191230E+01;
  COFD[4197] = 5.30153901E+00;
  COFD[4198] = -4.63335119E-01;
  COFD[4199] = 1.96897053E-02;
  COFD[4200] = -1.87897289E+01;
  COFD[4201] = 4.66162351E+00;
  COFD[4202] = -3.88920477E-01;
  COFD[4203] = 1.68089648E-02;
  COFD[4204] = -2.03860971E+01;
  COFD[4205] = 5.13263469E+00;
  COFD[4206] = -4.44457285E-01;
  COFD[4207] = 1.89932102E-02;
  COFD[4208] = -2.12121345E+01;
  COFD[4209] = 5.39823225E+00;
  COFD[4210] = -4.72294645E-01;
  COFD[4211] = 1.99340225E-02;
  COFD[4212] = -2.10864229E+01;
  COFD[4213] = 5.34286099E+00;
  COFD[4214] = -4.68100992E-01;
  COFD[4215] = 1.98731399E-02;
  COFD[4216] = -2.03667239E+01;
  COFD[4217] = 5.13263469E+00;
  COFD[4218] = -4.44457285E-01;
  COFD[4219] = 1.89932102E-02;
  COFD[4220] = -1.88646025E+01;
  COFD[4221] = 4.72476764E+00;
  COFD[4222] = -3.96306836E-01;
  COFD[4223] = 1.70964541E-02;
  COFD[4224] = -2.03766918E+01;
  COFD[4225] = 5.13263469E+00;
  COFD[4226] = -4.44457285E-01;
  COFD[4227] = 1.89932102E-02;
  COFD[4228] = -2.12534714E+01;
  COFD[4229] = 5.34173603E+00;
  COFD[4230] = -4.67980991E-01;
  COFD[4231] = 1.98689682E-02;
  COFD[4232] = -2.14323161E+01;
  COFD[4233] = 5.37331605E+00;
  COFD[4234] = -4.70491203E-01;
  COFD[4235] = 1.99134666E-02;
  COFD[4236] = -2.14414758E+01;
  COFD[4237] = 5.37331605E+00;
  COFD[4238] = -4.70491203E-01;
  COFD[4239] = 1.99134666E-02;
  COFD[4240] = -2.10944068E+01;
  COFD[4241] = 5.34286099E+00;
  COFD[4242] = -4.68100992E-01;
  COFD[4243] = 1.98731399E-02;
  COFD[4244] = -2.12585287E+01;
  COFD[4245] = 5.34173603E+00;
  COFD[4246] = -4.67980991E-01;
  COFD[4247] = 1.98689682E-02;
  COFD[4248] = -2.12585287E+01;
  COFD[4249] = 5.34173603E+00;
  COFD[4250] = -4.67980991E-01;
  COFD[4251] = 1.98689682E-02;
  COFD[4252] = -2.25690671E+01;
  COFD[4253] = 5.58516153E+00;
  COFD[4254] = -4.80440252E-01;
  COFD[4255] = 1.96479586E-02;
  COFD[4256] = -2.25674356E+01;
  COFD[4257] = 5.58516153E+00;
  COFD[4258] = -4.80440252E-01;
  COFD[4259] = 1.96479586E-02;
  COFD[4260] = -2.24440988E+01;
  COFD[4261] = 5.60901522E+00;
  COFD[4262] = -4.89632587E-01;
  COFD[4263] = 2.02906018E-02;
  COFD[4264] = -2.14369847E+01;
  COFD[4265] = 5.37331605E+00;
  COFD[4266] = -4.70491203E-01;
  COFD[4267] = 1.99134666E-02;
  COFD[4268] = -2.21839942E+01;
  COFD[4269] = 5.56964344E+00;
  COFD[4270] = -4.89130645E-01;
  COFD[4271] = 2.04497328E-02;
  COFD[4272] = -2.24462820E+01;
  COFD[4273] = 5.60901522E+00;
  COFD[4274] = -4.89632587E-01;
  COFD[4275] = 2.02906018E-02;
  COFD[4276] = -2.25874182E+01;
  COFD[4277] = 5.37189964E+00;
  COFD[4278] = -4.38371109E-01;
  COFD[4279] = 1.72507977E-02;
  COFD[4280] = -2.24941457E+01;
  COFD[4281] = 5.61234946E+00;
  COFD[4282] = -4.91326412E-01;
  COFD[4283] = 2.04139363E-02;
  COFD[4284] = -2.24523154E+01;
  COFD[4285] = 5.58420073E+00;
  COFD[4286] = -4.82356716E-01;
  COFD[4287] = 1.98120306E-02;
  COFD[4288] = -2.26968254E+01;
  COFD[4289] = 5.50057825E+00;
  COFD[4290] = -4.62242535E-01;
  COFD[4291] = 1.85709667E-02;
  COFD[4292] = -2.26768881E+01;
  COFD[4293] = 5.56399361E+00;
  COFD[4294] = -4.75020089E-01;
  COFD[4295] = 1.93065281E-02;
  COFD[4296] = -2.26928352E+01;
  COFD[4297] = 5.56399361E+00;
  COFD[4298] = -4.75020089E-01;
  COFD[4299] = 1.93065281E-02;
  COFD[4300] = -2.26781051E+01;
  COFD[4301] = 5.56399361E+00;
  COFD[4302] = -4.75020089E-01;
  COFD[4303] = 1.93065281E-02;
  COFD[4304] = -2.27815515E+01;
  COFD[4305] = 5.58520405E+00;
  COFD[4306] = -4.80873447E-01;
  COFD[4307] = 1.96836519E-02;
  COFD[4308] = -2.27825983E+01;
  COFD[4309] = 5.58520405E+00;
  COFD[4310] = -4.80873447E-01;
  COFD[4311] = 1.96836519E-02;
  COFD[4312] = -2.26326185E+01;
  COFD[4313] = 5.50595231E+00;
  COFD[4314] = -4.63781372E-01;
  COFD[4315] = 1.86710651E-02;
  COFD[4316] = -2.25867494E+01;
  COFD[4317] = 5.37189964E+00;
  COFD[4318] = -4.38371109E-01;
  COFD[4319] = 1.72507977E-02;
  COFD[4320] = -2.26336299E+01;
  COFD[4321] = 5.50595231E+00;
  COFD[4322] = -4.63781372E-01;
  COFD[4323] = 1.86710651E-02;
  COFD[4324] = -1.84917329E+01;
  COFD[4325] = 4.41886064E+00;
  COFD[4326] = -3.59254256E-01;
  COFD[4327] = 1.55974661E-02;
  COFD[4328] = -1.96744039E+01;
  COFD[4329] = 4.90059208E+00;
  COFD[4330] = -4.17126126E-01;
  COFD[4331] = 1.79186848E-02;
  COFD[4332] = -1.96744039E+01;
  COFD[4333] = 4.90059208E+00;
  COFD[4334] = -4.17126126E-01;
  COFD[4335] = 1.79186848E-02;
  COFD[4336] = -1.74195359E+01;
  COFD[4337] = 4.17761385E+00;
  COFD[4338] = -3.29594803E-01;
  COFD[4339] = 1.43785522E-02;
  COFD[4340] = -1.41201583E+01;
  COFD[4341] = 3.26291213E+00;
  COFD[4342] = -2.12831025E-01;
  COFD[4343] = 9.39262629E-03;
  COFD[4344] = -1.80721940E+01;
  COFD[4345] = 4.91182086E+00;
  COFD[4346] = -4.18511339E-01;
  COFD[4347] = 1.79759141E-02;
  COFD[4348] = -1.74410137E+01;
  COFD[4349] = 4.17761385E+00;
  COFD[4350] = -3.29594803E-01;
  COFD[4351] = 1.43785522E-02;
  COFD[4352] = -2.14414768E+01;
  COFD[4353] = 5.25056135E+00;
  COFD[4354] = -4.17658192E-01;
  COFD[4355] = 1.61554773E-02;
  COFD[4356] = -1.88161286E+01;
  COFD[4357] = 4.53427279E+00;
  COFD[4358] = -3.73213513E-01;
  COFD[4359] = 1.61609973E-02;
  COFD[4360] = -1.88245933E+01;
  COFD[4361] = 4.53427279E+00;
  COFD[4362] = -3.73213513E-01;
  COFD[4363] = 1.61609973E-02;
  COFD[4364] = -1.73443010E+01;
  COFD[4365] = 4.17761385E+00;
  COFD[4366] = -3.29594803E-01;
  COFD[4367] = 1.43785522E-02;
  COFD[4368] = -1.85202239E+01;
  COFD[4369] = 4.42668307E+00;
  COFD[4370] = -3.60220573E-01;
  COFD[4371] = 1.56373683E-02;
  COFD[4372] = -2.21057596E+01;
  COFD[4373] = 5.41958743E+00;
  COFD[4374] = -4.47031040E-01;
  COFD[4375] = 1.77243470E-02;
  COFD[4376] = -2.21154840E+01;
  COFD[4377] = 5.41958743E+00;
  COFD[4378] = -4.47031040E-01;
  COFD[4379] = 1.77243470E-02;
  COFD[4380] = -1.96996970E+01;
  COFD[4381] = 4.90059208E+00;
  COFD[4382] = -4.17126126E-01;
  COFD[4383] = 1.79186848E-02;
  COFD[4384] = -2.16148486E+01;
  COFD[4385] = 5.41694410E+00;
  COFD[4386] = -4.73389041E-01;
  COFD[4387] = 1.99278645E-02;
  COFD[4388] = -1.96296599E+01;
  COFD[4389] = 4.87149639E+00;
  COFD[4390] = -4.13544849E-01;
  COFD[4391] = 1.77710516E-02;
  COFD[4392] = -2.12647792E+01;
  COFD[4393] = 5.34173603E+00;
  COFD[4394] = -4.67980991E-01;
  COFD[4395] = 1.98689682E-02;
  COFD[4396] = -2.19910933E+01;
  COFD[4397] = 5.55674298E+00;
  COFD[4398] = -4.88067739E-01;
  COFD[4399] = 2.04278640E-02;
  COFD[4400] = -2.17250700E+01;
  COFD[4401] = 5.44645703E+00;
  COFD[4402] = -4.76428229E-01;
  COFD[4403] = 2.00285047E-02;
  COFD[4404] = -2.12415335E+01;
  COFD[4405] = 5.34173603E+00;
  COFD[4406] = -4.67980991E-01;
  COFD[4407] = 1.98689682E-02;
  COFD[4408] = -1.98379390E+01;
  COFD[4409] = 4.95769834E+00;
  COFD[4410] = -4.23993658E-01;
  COFD[4411] = 1.81947960E-02;
  COFD[4412] = -2.12534714E+01;
  COFD[4413] = 5.34173603E+00;
  COFD[4414] = -4.67980991E-01;
  COFD[4415] = 1.98689682E-02;
  COFD[4416] = -2.18979472E+01;
  COFD[4417] = 5.44470367E+00;
  COFD[4418] = -4.76221201E-01;
  COFD[4419] = 2.00203068E-02;
  COFD[4420] = -2.21618006E+01;
  COFD[4421] = 5.51146842E+00;
  COFD[4422] = -4.83562214E-01;
  COFD[4423] = 2.02866024E-02;
  COFD[4424] = -2.21733350E+01;
  COFD[4425] = 5.51146842E+00;
  COFD[4426] = -4.83562214E-01;
  COFD[4427] = 2.02866024E-02;
  COFD[4428] = -2.17347736E+01;
  COFD[4429] = 5.44645703E+00;
  COFD[4430] = -4.76428229E-01;
  COFD[4431] = 2.00285047E-02;
  COFD[4432] = -2.19042768E+01;
  COFD[4433] = 5.44470367E+00;
  COFD[4434] = -4.76221201E-01;
  COFD[4435] = 2.00203068E-02;
  COFD[4436] = -2.19042768E+01;
  COFD[4437] = 5.44470367E+00;
  COFD[4438] = -4.76221201E-01;
  COFD[4439] = 2.00203068E-02;
  COFD[4440] = -2.27943751E+01;
  COFD[4441] = 5.48824400E+00;
  COFD[4442] = -4.59513209E-01;
  COFD[4443] = 1.84082047E-02;
  COFD[4444] = -2.27922010E+01;
  COFD[4445] = 5.48824400E+00;
  COFD[4446] = -4.59513209E-01;
  COFD[4447] = 1.84082047E-02;
  COFD[4448] = -2.28221723E+01;
  COFD[4449] = 5.58100780E+00;
  COFD[4450] = -4.78452463E-01;
  COFD[4451] = 1.95043836E-02;
  COFD[4452] = -2.21676727E+01;
  COFD[4453] = 5.51146842E+00;
  COFD[4454] = -4.83562214E-01;
  COFD[4455] = 2.02866024E-02;
  COFD[4456] = -2.26612301E+01;
  COFD[4457] = 5.59174979E+00;
  COFD[4458] = -4.85658671E-01;
  COFD[4459] = 2.00486161E-02;
  COFD[4460] = -2.28250397E+01;
  COFD[4461] = 5.58100780E+00;
  COFD[4462] = -4.78452463E-01;
  COFD[4463] = 1.95043836E-02;
  COFD[4464] = -2.24428097E+01;
  COFD[4465] = 5.11126858E+00;
  COFD[4466] = -3.94197754E-01;
  COFD[4467] = 1.49258559E-02;
  COFD[4468] = -2.28709497E+01;
  COFD[4469] = 5.58512527E+00;
  COFD[4470] = -4.80365122E-01;
  COFD[4471] = 1.96419146E-02;
  COFD[4472] = -2.27282087E+01;
  COFD[4473] = 5.50962966E+00;
  COFD[4474] = -4.64625480E-01;
  COFD[4475] = 1.87223918E-02;
  COFD[4476] = -2.27224828E+01;
  COFD[4477] = 5.31550795E+00;
  COFD[4478] = -4.28706397E-01;
  COFD[4479] = 1.67386771E-02;
  COFD[4480] = -2.28074407E+01;
  COFD[4481] = 5.42471690E+00;
  COFD[4482] = -4.47967221E-01;
  COFD[4483] = 1.77756550E-02;
  COFD[4484] = -2.28290916E+01;
  COFD[4485] = 5.42471690E+00;
  COFD[4486] = -4.47967221E-01;
  COFD[4487] = 1.77756550E-02;
  COFD[4488] = -2.28090843E+01;
  COFD[4489] = 5.42471690E+00;
  COFD[4490] = -4.47967221E-01;
  COFD[4491] = 1.77756550E-02;
  COFD[4492] = -2.30221686E+01;
  COFD[4493] = 5.49616184E+00;
  COFD[4494] = -4.61067688E-01;
  COFD[4495] = 1.84964487E-02;
  COFD[4496] = -2.30235915E+01;
  COFD[4497] = 5.49616184E+00;
  COFD[4498] = -4.61067688E-01;
  COFD[4499] = 1.84964487E-02;
  COFD[4500] = -2.27068437E+01;
  COFD[4501] = 5.34036599E+00;
  COFD[4502] = -4.32974135E-01;
  COFD[4503] = 1.69649822E-02;
  COFD[4504] = -2.24418849E+01;
  COFD[4505] = 5.11126858E+00;
  COFD[4506] = -3.94197754E-01;
  COFD[4507] = 1.49258559E-02;
  COFD[4508] = -2.27082205E+01;
  COFD[4509] = 5.34036599E+00;
  COFD[4510] = -4.32974135E-01;
  COFD[4511] = 1.69649822E-02;
  COFD[4512] = -1.87434421E+01;
  COFD[4513] = 4.48550694E+00;
  COFD[4514] = -3.67277454E-01;
  COFD[4515] = 1.59194755E-02;
  COFD[4516] = -1.99547139E+01;
  COFD[4517] = 4.97875278E+00;
  COFD[4518] = -4.26485475E-01;
  COFD[4519] = 1.82931933E-02;
  COFD[4520] = -1.99547139E+01;
  COFD[4521] = 4.97875278E+00;
  COFD[4522] = -4.26485475E-01;
  COFD[4523] = 1.82931933E-02;
  COFD[4524] = -1.76774947E+01;
  COFD[4525] = 4.24719726E+00;
  COFD[4526] = -3.38206061E-01;
  COFD[4527] = 1.47350654E-02;
  COFD[4528] = -1.43129867E+01;
  COFD[4529] = 3.31177824E+00;
  COFD[4530] = -2.18945280E-01;
  COFD[4531] = 9.64764419E-03;
  COFD[4532] = -1.83539845E+01;
  COFD[4533] = 4.98756925E+00;
  COFD[4534] = -4.27526072E-01;
  COFD[4535] = 1.83341755E-02;
  COFD[4536] = -1.76992903E+01;
  COFD[4537] = 4.24719726E+00;
  COFD[4538] = -3.38206061E-01;
  COFD[4539] = 1.47350654E-02;
  COFD[4540] = -2.13847376E+01;
  COFD[4541] = 5.17440955E+00;
  COFD[4542] = -4.04678430E-01;
  COFD[4543] = 1.54706350E-02;
  COFD[4544] = -1.91121670E+01;
  COFD[4545] = 4.61801405E+00;
  COFD[4546] = -3.83535652E-01;
  COFD[4547] = 1.65862513E-02;
  COFD[4548] = -1.91208247E+01;
  COFD[4549] = 4.61801405E+00;
  COFD[4550] = -3.83535652E-01;
  COFD[4551] = 1.65862513E-02;
  COFD[4552] = -1.76012502E+01;
  COFD[4553] = 4.24719726E+00;
  COFD[4554] = -3.38206061E-01;
  COFD[4555] = 1.47350654E-02;
  COFD[4556] = -1.87684982E+01;
  COFD[4557] = 4.49191492E+00;
  COFD[4558] = -3.68041771E-01;
  COFD[4559] = 1.59498676E-02;
  COFD[4560] = -2.20848512E+01;
  COFD[4561] = 5.36053938E+00;
  COFD[4562] = -4.36434519E-01;
  COFD[4563] = 1.71484255E-02;
  COFD[4564] = -2.20947854E+01;
  COFD[4565] = 5.36053938E+00;
  COFD[4566] = -4.36434519E-01;
  COFD[4567] = 1.71484255E-02;
  COFD[4568] = -1.99803480E+01;
  COFD[4569] = 4.97875278E+00;
  COFD[4570] = -4.26485475E-01;
  COFD[4571] = 1.82931933E-02;
  COFD[4572] = -2.18590684E+01;
  COFD[4573] = 5.47368915E+00;
  COFD[4574] = -4.79424291E-01;
  COFD[4575] = 2.01372920E-02;
  COFD[4576] = -1.99235836E+01;
  COFD[4577] = 4.95514826E+00;
  COFD[4578] = -4.23691395E-01;
  COFD[4579] = 1.81828318E-02;
  COFD[4580] = -2.14438531E+01;
  COFD[4581] = 5.37331605E+00;
  COFD[4582] = -4.70491203E-01;
  COFD[4583] = 1.99134666E-02;
  COFD[4584] = -2.21885121E+01;
  COFD[4585] = 5.59472344E+00;
  COFD[4586] = -4.91421518E-01;
  COFD[4587] = 2.05117088E-02;
  COFD[4588] = -2.19883773E+01;
  COFD[4589] = 5.51276597E+00;
  COFD[4590] = -4.83701824E-01;
  COFD[4591] = 2.02915297E-02;
  COFD[4592] = -2.14201421E+01;
  COFD[4593] = 5.37331605E+00;
  COFD[4594] = -4.70491203E-01;
  COFD[4595] = 1.99134666E-02;
  COFD[4596] = -2.01223105E+01;
  COFD[4597] = 5.03101171E+00;
  COFD[4598] = -4.32665019E-01;
  COFD[4599] = 1.85372086E-02;
  COFD[4600] = -2.14323161E+01;
  COFD[4601] = 5.37331605E+00;
  COFD[4602] = -4.70491203E-01;
  COFD[4603] = 1.99134666E-02;
  COFD[4604] = -2.21618006E+01;
  COFD[4605] = 5.51146842E+00;
  COFD[4606] = -4.83562214E-01;
  COFD[4607] = 2.02866024E-02;
  COFD[4608] = -2.23842793E+01;
  COFD[4609] = 5.56066804E+00;
  COFD[4610] = -4.88405706E-01;
  COFD[4611] = 2.04357330E-02;
  COFD[4612] = -2.23961150E+01;
  COFD[4613] = 5.56066804E+00;
  COFD[4614] = -4.88405706E-01;
  COFD[4615] = 2.04357330E-02;
  COFD[4616] = -2.19982906E+01;
  COFD[4617] = 5.51276597E+00;
  COFD[4618] = -4.83701824E-01;
  COFD[4619] = 2.02915297E-02;
  COFD[4620] = -2.21682905E+01;
  COFD[4621] = 5.51146842E+00;
  COFD[4622] = -4.83562214E-01;
  COFD[4623] = 2.02866024E-02;
  COFD[4624] = -2.21682905E+01;
  COFD[4625] = 5.51146842E+00;
  COFD[4626] = -4.83562214E-01;
  COFD[4627] = 2.02866024E-02;
  COFD[4628] = -2.27764486E+01;
  COFD[4629] = 5.43128350E+00;
  COFD[4630] = -4.49151750E-01;
  COFD[4631] = 1.78402439E-02;
  COFD[4632] = -2.27742011E+01;
  COFD[4633] = 5.43128350E+00;
  COFD[4634] = -4.49151750E-01;
  COFD[4635] = 1.78402439E-02;
  COFD[4636] = -2.28381990E+01;
  COFD[4637] = 5.54010119E+00;
  COFD[4638] = -4.70485703E-01;
  COFD[4639] = 1.90527349E-02;
  COFD[4640] = -2.23903039E+01;
  COFD[4641] = 5.56066804E+00;
  COFD[4642] = -4.88405706E-01;
  COFD[4643] = 2.04357330E-02;
  COFD[4644] = -2.27565225E+01;
  COFD[4645] = 5.58430281E+00;
  COFD[4646] = -4.82320492E-01;
  COFD[4647] = 1.98084938E-02;
  COFD[4648] = -2.28411574E+01;
  COFD[4649] = 5.54010119E+00;
  COFD[4650] = -4.70485703E-01;
  COFD[4651] = 1.90527349E-02;
  COFD[4652] = -2.22995295E+01;
  COFD[4653] = 5.00145214E+00;
  COFD[4654] = -3.76474258E-01;
  COFD[4655] = 1.40201948E-02;
  COFD[4656] = -2.29414814E+01;
  COFD[4657] = 5.56795431E+00;
  COFD[4658] = -4.75760453E-01;
  COFD[4659] = 1.93477277E-02;
  COFD[4660] = -2.27855592E+01;
  COFD[4661] = 5.48514378E+00;
  COFD[4662] = -4.58915491E-01;
  COFD[4663] = 1.83744841E-02;
  COFD[4664] = -2.26584089E+01;
  COFD[4665] = 5.23950074E+00;
  COFD[4666] = -4.15701072E-01;
  COFD[4667] = 1.60501523E-02;
  COFD[4668] = -2.27880734E+01;
  COFD[4669] = 5.36784270E+00;
  COFD[4670] = -4.37680260E-01;
  COFD[4671] = 1.72142944E-02;
  COFD[4672] = -2.28105122E+01;
  COFD[4673] = 5.36784270E+00;
  COFD[4674] = -4.37680260E-01;
  COFD[4675] = 1.72142944E-02;
  COFD[4676] = -2.27897756E+01;
  COFD[4677] = 5.36784270E+00;
  COFD[4678] = -4.37680260E-01;
  COFD[4679] = 1.72142944E-02;
  COFD[4680] = -2.30100565E+01;
  COFD[4681] = 5.44285423E+00;
  COFD[4682] = -4.51235128E-01;
  COFD[4683] = 1.79537737E-02;
  COFD[4684] = -2.30115315E+01;
  COFD[4685] = 5.44285423E+00;
  COFD[4686] = -4.51235128E-01;
  COFD[4687] = 1.79537737E-02;
  COFD[4688] = -2.26367406E+01;
  COFD[4689] = 5.26148618E+00;
  COFD[4690] = -4.19570725E-01;
  COFD[4691] = 1.62579061E-02;
  COFD[4692] = -2.22985686E+01;
  COFD[4693] = 5.00145214E+00;
  COFD[4694] = -3.76474258E-01;
  COFD[4695] = 1.40201948E-02;
  COFD[4696] = -2.26381680E+01;
  COFD[4697] = 5.26148618E+00;
  COFD[4698] = -4.19570725E-01;
  COFD[4699] = 1.62579061E-02;
  COFD[4700] = -1.87530190E+01;
  COFD[4701] = 4.48550694E+00;
  COFD[4702] = -3.67277454E-01;
  COFD[4703] = 1.59194755E-02;
  COFD[4704] = -1.99607050E+01;
  COFD[4705] = 4.97875278E+00;
  COFD[4706] = -4.26485475E-01;
  COFD[4707] = 1.82931933E-02;
  COFD[4708] = -1.99607050E+01;
  COFD[4709] = 4.97875278E+00;
  COFD[4710] = -4.26485475E-01;
  COFD[4711] = 1.82931933E-02;
  COFD[4712] = -1.76840960E+01;
  COFD[4713] = 4.24719726E+00;
  COFD[4714] = -3.38206061E-01;
  COFD[4715] = 1.47350654E-02;
  COFD[4716] = -1.43140824E+01;
  COFD[4717] = 3.31177824E+00;
  COFD[4718] = -2.18945280E-01;
  COFD[4719] = 9.64764419E-03;
  COFD[4720] = -1.83545451E+01;
  COFD[4721] = 4.98756925E+00;
  COFD[4722] = -4.27526072E-01;
  COFD[4723] = 1.83341755E-02;
  COFD[4724] = -1.77061877E+01;
  COFD[4725] = 4.24719726E+00;
  COFD[4726] = -3.38206061E-01;
  COFD[4727] = 1.47350654E-02;
  COFD[4728] = -2.13919213E+01;
  COFD[4729] = 5.17440955E+00;
  COFD[4730] = -4.04678430E-01;
  COFD[4731] = 1.54706350E-02;
  COFD[4732] = -1.91225175E+01;
  COFD[4733] = 4.61801405E+00;
  COFD[4734] = -3.83535652E-01;
  COFD[4735] = 1.65862513E-02;
  COFD[4736] = -1.91313579E+01;
  COFD[4737] = 4.61801405E+00;
  COFD[4738] = -3.83535652E-01;
  COFD[4739] = 1.65862513E-02;
  COFD[4740] = -1.76069125E+01;
  COFD[4741] = 4.24719726E+00;
  COFD[4742] = -3.38206061E-01;
  COFD[4743] = 1.47350654E-02;
  COFD[4744] = -1.87780743E+01;
  COFD[4745] = 4.49191492E+00;
  COFD[4746] = -3.68041771E-01;
  COFD[4747] = 1.59498676E-02;
  COFD[4748] = -2.20946312E+01;
  COFD[4749] = 5.36053938E+00;
  COFD[4750] = -4.36434519E-01;
  COFD[4751] = 1.71484255E-02;
  COFD[4752] = -2.21047637E+01;
  COFD[4753] = 5.36053938E+00;
  COFD[4754] = -4.36434519E-01;
  COFD[4755] = 1.71484255E-02;
  COFD[4756] = -1.99866562E+01;
  COFD[4757] = 4.97875278E+00;
  COFD[4758] = -4.26485475E-01;
  COFD[4759] = 1.82931933E-02;
  COFD[4760] = -2.18713176E+01;
  COFD[4761] = 5.47368915E+00;
  COFD[4762] = -4.79424291E-01;
  COFD[4763] = 2.01372920E-02;
  COFD[4764] = -1.99301980E+01;
  COFD[4765] = 4.95514826E+00;
  COFD[4766] = -4.23691395E-01;
  COFD[4767] = 1.81828318E-02;
  COFD[4768] = -2.14532286E+01;
  COFD[4769] = 5.37331605E+00;
  COFD[4770] = -4.70491203E-01;
  COFD[4771] = 1.99134666E-02;
  COFD[4772] = -2.21980972E+01;
  COFD[4773] = 5.59472344E+00;
  COFD[4774] = -4.91421518E-01;
  COFD[4775] = 2.05117088E-02;
  COFD[4776] = -2.19981661E+01;
  COFD[4777] = 5.51276597E+00;
  COFD[4778] = -4.83701824E-01;
  COFD[4779] = 2.02915297E-02;
  COFD[4780] = -2.14290794E+01;
  COFD[4781] = 5.37331605E+00;
  COFD[4782] = -4.70491203E-01;
  COFD[4783] = 1.99134666E-02;
  COFD[4784] = -2.01341398E+01;
  COFD[4785] = 5.03101171E+00;
  COFD[4786] = -4.32665019E-01;
  COFD[4787] = 1.85372086E-02;
  COFD[4788] = -2.14414758E+01;
  COFD[4789] = 5.37331605E+00;
  COFD[4790] = -4.70491203E-01;
  COFD[4791] = 1.99134666E-02;
  COFD[4792] = -2.21733350E+01;
  COFD[4793] = 5.51146842E+00;
  COFD[4794] = -4.83562214E-01;
  COFD[4795] = 2.02866024E-02;
  COFD[4796] = -2.23961150E+01;
  COFD[4797] = 5.56066804E+00;
  COFD[4798] = -4.88405706E-01;
  COFD[4799] = 2.04357330E-02;
  COFD[4800] = -2.24082377E+01;
  COFD[4801] = 5.56066804E+00;
  COFD[4802] = -4.88405706E-01;
  COFD[4803] = 2.04357330E-02;
  COFD[4804] = -2.20082773E+01;
  COFD[4805] = 5.51276597E+00;
  COFD[4806] = -4.83701824E-01;
  COFD[4807] = 2.02915297E-02;
  COFD[4808] = -2.21799775E+01;
  COFD[4809] = 5.51146842E+00;
  COFD[4810] = -4.83562214E-01;
  COFD[4811] = 2.02866024E-02;
  COFD[4812] = -2.21799775E+01;
  COFD[4813] = 5.51146842E+00;
  COFD[4814] = -4.83562214E-01;
  COFD[4815] = 2.02866024E-02;
  COFD[4816] = -2.27920204E+01;
  COFD[4817] = 5.43128350E+00;
  COFD[4818] = -4.49151750E-01;
  COFD[4819] = 1.78402439E-02;
  COFD[4820] = -2.27897020E+01;
  COFD[4821] = 5.43128350E+00;
  COFD[4822] = -4.49151750E-01;
  COFD[4823] = 1.78402439E-02;
  COFD[4824] = -2.28527520E+01;
  COFD[4825] = 5.54010119E+00;
  COFD[4826] = -4.70485703E-01;
  COFD[4827] = 1.90527349E-02;
  COFD[4828] = -2.24022848E+01;
  COFD[4829] = 5.56066804E+00;
  COFD[4830] = -4.88405706E-01;
  COFD[4831] = 2.04357330E-02;
  COFD[4832] = -2.27702146E+01;
  COFD[4833] = 5.58430281E+00;
  COFD[4834] = -4.82320492E-01;
  COFD[4835] = 1.98084938E-02;
  COFD[4836] = -2.28557980E+01;
  COFD[4837] = 5.54010119E+00;
  COFD[4838] = -4.70485703E-01;
  COFD[4839] = 1.90527349E-02;
  COFD[4840] = -2.23175673E+01;
  COFD[4841] = 5.00145214E+00;
  COFD[4842] = -3.76474258E-01;
  COFD[4843] = 1.40201948E-02;
  COFD[4844] = -2.29564569E+01;
  COFD[4845] = 5.56795431E+00;
  COFD[4846] = -4.75760453E-01;
  COFD[4847] = 1.93477277E-02;
  COFD[4848] = -2.28006146E+01;
  COFD[4849] = 5.48514378E+00;
  COFD[4850] = -4.58915491E-01;
  COFD[4851] = 1.83744841E-02;
  COFD[4852] = -2.26754262E+01;
  COFD[4853] = 5.23950074E+00;
  COFD[4854] = -4.15701072E-01;
  COFD[4855] = 1.60501523E-02;
  COFD[4856] = -2.28044648E+01;
  COFD[4857] = 5.36784270E+00;
  COFD[4858] = -4.37680260E-01;
  COFD[4859] = 1.72142944E-02;
  COFD[4860] = -2.28276691E+01;
  COFD[4861] = 5.36784270E+00;
  COFD[4862] = -4.37680260E-01;
  COFD[4863] = 1.72142944E-02;
  COFD[4864] = -2.28062239E+01;
  COFD[4865] = 5.36784270E+00;
  COFD[4866] = -4.37680260E-01;
  COFD[4867] = 1.72142944E-02;
  COFD[4868] = -2.30268799E+01;
  COFD[4869] = 5.44285423E+00;
  COFD[4870] = -4.51235128E-01;
  COFD[4871] = 1.79537737E-02;
  COFD[4872] = -2.30284054E+01;
  COFD[4873] = 5.44285423E+00;
  COFD[4874] = -4.51235128E-01;
  COFD[4875] = 1.79537737E-02;
  COFD[4876] = -2.26536602E+01;
  COFD[4877] = 5.26148618E+00;
  COFD[4878] = -4.19570725E-01;
  COFD[4879] = 1.62579061E-02;
  COFD[4880] = -2.23165711E+01;
  COFD[4881] = 5.00145214E+00;
  COFD[4882] = -3.76474258E-01;
  COFD[4883] = 1.40201948E-02;
  COFD[4884] = -2.26551368E+01;
  COFD[4885] = 5.26148618E+00;
  COFD[4886] = -4.19570725E-01;
  COFD[4887] = 1.62579061E-02;
  COFD[4888] = -1.83249359E+01;
  COFD[4889] = 4.42045763E+00;
  COFD[4890] = -3.59451578E-01;
  COFD[4891] = 1.56056164E-02;
  COFD[4892] = -1.95318159E+01;
  COFD[4893] = 4.90255048E+00;
  COFD[4894] = -4.17368501E-01;
  COFD[4895] = 1.79287358E-02;
  COFD[4896] = -1.95318159E+01;
  COFD[4897] = 4.90255048E+00;
  COFD[4898] = -4.17368501E-01;
  COFD[4899] = 1.79287358E-02;
  COFD[4900] = -1.72556425E+01;
  COFD[4901] = 4.17889917E+00;
  COFD[4902] = -3.29752510E-01;
  COFD[4903] = 1.43850275E-02;
  COFD[4904] = -1.39924933E+01;
  COFD[4905] = 3.26384506E+00;
  COFD[4906] = -2.12947087E-01;
  COFD[4907] = 9.39743888E-03;
  COFD[4908] = -1.79345106E+01;
  COFD[4909] = 4.91373893E+00;
  COFD[4910] = -4.18747629E-01;
  COFD[4911] = 1.79856610E-02;
  COFD[4912] = -1.72753698E+01;
  COFD[4913] = 4.17889917E+00;
  COFD[4914] = -3.29752510E-01;
  COFD[4915] = 1.43850275E-02;
  COFD[4916] = -2.12661812E+01;
  COFD[4917] = 5.24930667E+00;
  COFD[4918] = -4.17435088E-01;
  COFD[4919] = 1.61434424E-02;
  COFD[4920] = -1.86424488E+01;
  COFD[4921] = 4.53572533E+00;
  COFD[4922] = -3.73386925E-01;
  COFD[4923] = 1.61678881E-02;
  COFD[4924] = -1.86499019E+01;
  COFD[4925] = 4.53572533E+00;
  COFD[4926] = -3.73386925E-01;
  COFD[4927] = 1.61678881E-02;
  COFD[4928] = -1.71860206E+01;
  COFD[4929] = 4.17889917E+00;
  COFD[4930] = -3.29752510E-01;
  COFD[4931] = 1.43850275E-02;
  COFD[4932] = -1.83538331E+01;
  COFD[4933] = 4.42828044E+00;
  COFD[4934] = -3.60417833E-01;
  COFD[4935] = 1.56455103E-02;
  COFD[4936] = -2.19313596E+01;
  COFD[4937] = 5.41841631E+00;
  COFD[4938] = -4.46818971E-01;
  COFD[4939] = 1.77127652E-02;
  COFD[4940] = -2.19399756E+01;
  COFD[4941] = 5.41841631E+00;
  COFD[4942] = -4.46818971E-01;
  COFD[4943] = 1.77127652E-02;
  COFD[4944] = -1.95552136E+01;
  COFD[4945] = 4.90255048E+00;
  COFD[4946] = -4.17368501E-01;
  COFD[4947] = 1.79287358E-02;
  COFD[4948] = -2.14326420E+01;
  COFD[4949] = 5.41729961E+00;
  COFD[4950] = -4.73400281E-01;
  COFD[4951] = 1.99269567E-02;
  COFD[4952] = -1.94823661E+01;
  COFD[4953] = 4.87333294E+00;
  COFD[4954] = -4.13769241E-01;
  COFD[4955] = 1.77802244E-02;
  COFD[4956] = -2.11044949E+01;
  COFD[4957] = 5.34286099E+00;
  COFD[4958] = -4.68100992E-01;
  COFD[4959] = 1.98731399E-02;
  COFD[4960] = -2.18273535E+01;
  COFD[4961] = 5.55753905E+00;
  COFD[4962] = -4.88136714E-01;
  COFD[4963] = 2.04294957E-02;
  COFD[4964] = -2.15660162E+01;
  COFD[4965] = 5.44803850E+00;
  COFD[4966] = -4.76610560E-01;
  COFD[4967] = 2.00355294E-02;
  COFD[4968] = -2.10837302E+01;
  COFD[4969] = 5.34286099E+00;
  COFD[4970] = -4.68100992E-01;
  COFD[4971] = 1.98731399E-02;
  COFD[4972] = -1.96408096E+01;
  COFD[4973] = 4.95923807E+00;
  COFD[4974] = -4.24176182E-01;
  COFD[4975] = 1.82020215E-02;
  COFD[4976] = -2.10944068E+01;
  COFD[4977] = 5.34286099E+00;
  COFD[4978] = -4.68100992E-01;
  COFD[4979] = 1.98731399E-02;
  COFD[4980] = -2.17347736E+01;
  COFD[4981] = 5.44645703E+00;
  COFD[4982] = -4.76428229E-01;
  COFD[4983] = 2.00285047E-02;
  COFD[4984] = -2.19982906E+01;
  COFD[4985] = 5.51276597E+00;
  COFD[4986] = -4.83701824E-01;
  COFD[4987] = 2.02915297E-02;
  COFD[4988] = -2.20082773E+01;
  COFD[4989] = 5.51276597E+00;
  COFD[4990] = -4.83701824E-01;
  COFD[4991] = 2.02915297E-02;
  COFD[4992] = -2.15746130E+01;
  COFD[4993] = 5.44803850E+00;
  COFD[4994] = -4.76610560E-01;
  COFD[4995] = 2.00355294E-02;
  COFD[4996] = -2.17402758E+01;
  COFD[4997] = 5.44645703E+00;
  COFD[4998] = -4.76428229E-01;
  COFD[4999] = 2.00285047E-02;
  COFD[5000] = -2.17402758E+01;
  COFD[5001] = 5.44645703E+00;
  COFD[5002] = -4.76428229E-01;
  COFD[5003] = 2.00285047E-02;
  COFD[5004] = -2.26092613E+01;
  COFD[5005] = 5.48733210E+00;
  COFD[5006] = -4.59335784E-01;
  COFD[5007] = 1.83981530E-02;
  COFD[5008] = -2.26074477E+01;
  COFD[5009] = 5.48733210E+00;
  COFD[5010] = -4.59335784E-01;
  COFD[5011] = 1.83981530E-02;
  COFD[5012] = -2.26426731E+01;
  COFD[5013] = 5.58066442E+00;
  COFD[5014] = -4.78358496E-01;
  COFD[5015] = 1.94983439E-02;
  COFD[5016] = -2.20033786E+01;
  COFD[5017] = 5.51276597E+00;
  COFD[5018] = -4.83701824E-01;
  COFD[5019] = 2.02915297E-02;
  COFD[5020] = -2.24847579E+01;
  COFD[5021] = 5.59125763E+00;
  COFD[5022] = -4.85543279E-01;
  COFD[5023] = 2.00415309E-02;
  COFD[5024] = -2.26450880E+01;
  COFD[5025] = 5.58066442E+00;
  COFD[5026] = -4.78358496E-01;
  COFD[5027] = 1.94983439E-02;
  COFD[5028] = -2.22498904E+01;
  COFD[5029] = 5.10895195E+00;
  COFD[5030] = -3.93822647E-01;
  COFD[5031] = 1.49066324E-02;
  COFD[5032] = -2.26927149E+01;
  COFD[5033] = 5.58509275E+00;
  COFD[5034] = -4.80315312E-01;
  COFD[5035] = 1.96379504E-02;
  COFD[5036] = -2.25438365E+01;
  COFD[5037] = 5.50894837E+00;
  COFD[5038] = -4.64480433E-01;
  COFD[5039] = 1.87138301E-02;
  COFD[5040] = -2.25345341E+01;
  COFD[5041] = 5.31381434E+00;
  COFD[5042] = -4.28421269E-01;
  COFD[5043] = 1.67237240E-02;
  COFD[5044] = -2.26212226E+01;
  COFD[5045] = 5.42359285E+00;
  COFD[5046] = -4.47762010E-01;
  COFD[5047] = 1.77644050E-02;
  COFD[5048] = -2.26390600E+01;
  COFD[5049] = 5.42359285E+00;
  COFD[5050] = -4.47762010E-01;
  COFD[5051] = 1.77644050E-02;
  COFD[5052] = -2.26225815E+01;
  COFD[5053] = 5.42359285E+00;
  COFD[5054] = -4.47762010E-01;
  COFD[5055] = 1.77644050E-02;
  COFD[5056] = -2.28396733E+01;
  COFD[5057] = 5.49552429E+00;
  COFD[5058] = -4.60932565E-01;
  COFD[5059] = 1.84885333E-02;
  COFD[5060] = -2.28408447E+01;
  COFD[5061] = 5.49552429E+00;
  COFD[5062] = -4.60932565E-01;
  COFD[5063] = 1.84885333E-02;
  COFD[5064] = -2.25173817E+01;
  COFD[5065] = 5.33883161E+00;
  COFD[5066] = -4.32711075E-01;
  COFD[5067] = 1.69510393E-02;
  COFD[5068] = -2.22491379E+01;
  COFD[5069] = 5.10895195E+00;
  COFD[5070] = -3.93822647E-01;
  COFD[5071] = 1.49066324E-02;
  COFD[5072] = -2.25185140E+01;
  COFD[5073] = 5.33883161E+00;
  COFD[5074] = -4.32711075E-01;
  COFD[5075] = 1.69510393E-02;
  COFD[5076] = -1.84970149E+01;
  COFD[5077] = 4.41886064E+00;
  COFD[5078] = -3.59254256E-01;
  COFD[5079] = 1.55974661E-02;
  COFD[5080] = -1.96777391E+01;
  COFD[5081] = 4.90059208E+00;
  COFD[5082] = -4.17126126E-01;
  COFD[5083] = 1.79186848E-02;
  COFD[5084] = -1.96777391E+01;
  COFD[5085] = 4.90059208E+00;
  COFD[5086] = -4.17126126E-01;
  COFD[5087] = 1.79186848E-02;
  COFD[5088] = -1.74232048E+01;
  COFD[5089] = 4.17761385E+00;
  COFD[5090] = -3.29594803E-01;
  COFD[5091] = 1.43785522E-02;
  COFD[5092] = -1.41207761E+01;
  COFD[5093] = 3.26291213E+00;
  COFD[5094] = -2.12831025E-01;
  COFD[5095] = 9.39262629E-03;
  COFD[5096] = -1.80725106E+01;
  COFD[5097] = 4.91182086E+00;
  COFD[5098] = -4.18511339E-01;
  COFD[5099] = 1.79759141E-02;
  COFD[5100] = -1.74448444E+01;
  COFD[5101] = 4.17761385E+00;
  COFD[5102] = -3.29594803E-01;
  COFD[5103] = 1.43785522E-02;
  COFD[5104] = -2.14454635E+01;
  COFD[5105] = 5.25056135E+00;
  COFD[5106] = -4.17658192E-01;
  COFD[5107] = 1.61554773E-02;
  COFD[5108] = -1.88218258E+01;
  COFD[5109] = 4.53427279E+00;
  COFD[5110] = -3.73213513E-01;
  COFD[5111] = 1.61609973E-02;
  COFD[5112] = -1.88303884E+01;
  COFD[5113] = 4.53427279E+00;
  COFD[5114] = -3.73213513E-01;
  COFD[5115] = 1.61609973E-02;
  COFD[5116] = -1.73474558E+01;
  COFD[5117] = 4.17761385E+00;
  COFD[5118] = -3.29594803E-01;
  COFD[5119] = 1.43785522E-02;
  COFD[5120] = -1.85255055E+01;
  COFD[5121] = 4.42668307E+00;
  COFD[5122] = -3.60220573E-01;
  COFD[5123] = 1.56373683E-02;
  COFD[5124] = -2.21111508E+01;
  COFD[5125] = 5.41958743E+00;
  COFD[5126] = -4.47031040E-01;
  COFD[5127] = 1.77243470E-02;
  COFD[5128] = -2.21209816E+01;
  COFD[5129] = 5.41958743E+00;
  COFD[5130] = -4.47031040E-01;
  COFD[5131] = 1.77243470E-02;
  COFD[5132] = -1.97032058E+01;
  COFD[5133] = 4.90059208E+00;
  COFD[5134] = -4.17126126E-01;
  COFD[5135] = 1.79186848E-02;
  COFD[5136] = -2.16215581E+01;
  COFD[5137] = 5.41694410E+00;
  COFD[5138] = -4.73389041E-01;
  COFD[5139] = 1.99278645E-02;
  COFD[5140] = -1.96333360E+01;
  COFD[5141] = 4.87149639E+00;
  COFD[5142] = -4.13544849E-01;
  COFD[5143] = 1.77710516E-02;
  COFD[5144] = -2.12699528E+01;
  COFD[5145] = 5.34173603E+00;
  COFD[5146] = -4.67980991E-01;
  COFD[5147] = 1.98689682E-02;
  COFD[5148] = -2.19963797E+01;
  COFD[5149] = 5.55674298E+00;
  COFD[5150] = -4.88067739E-01;
  COFD[5151] = 2.04278640E-02;
  COFD[5152] = -2.17304659E+01;
  COFD[5153] = 5.44645703E+00;
  COFD[5154] = -4.76428229E-01;
  COFD[5155] = 2.00285047E-02;
  COFD[5156] = -2.12464709E+01;
  COFD[5157] = 5.34173603E+00;
  COFD[5158] = -4.67980991E-01;
  COFD[5159] = 1.98689682E-02;
  COFD[5160] = -1.98444255E+01;
  COFD[5161] = 4.95769834E+00;
  COFD[5162] = -4.23993658E-01;
  COFD[5163] = 1.81947960E-02;
  COFD[5164] = -2.12585287E+01;
  COFD[5165] = 5.34173603E+00;
  COFD[5166] = -4.67980991E-01;
  COFD[5167] = 1.98689682E-02;
  COFD[5168] = -2.19042768E+01;
  COFD[5169] = 5.44470367E+00;
  COFD[5170] = -4.76221201E-01;
  COFD[5171] = 2.00203068E-02;
  COFD[5172] = -2.21682905E+01;
  COFD[5173] = 5.51146842E+00;
  COFD[5174] = -4.83562214E-01;
  COFD[5175] = 2.02866024E-02;
  COFD[5176] = -2.21799775E+01;
  COFD[5177] = 5.51146842E+00;
  COFD[5178] = -4.83562214E-01;
  COFD[5179] = 2.02866024E-02;
  COFD[5180] = -2.17402758E+01;
  COFD[5181] = 5.44645703E+00;
  COFD[5182] = -4.76428229E-01;
  COFD[5183] = 2.00285047E-02;
  COFD[5184] = -2.19106877E+01;
  COFD[5185] = 5.44470367E+00;
  COFD[5186] = -4.76221201E-01;
  COFD[5187] = 2.00203068E-02;
  COFD[5188] = -2.19106877E+01;
  COFD[5189] = 5.44470367E+00;
  COFD[5190] = -4.76221201E-01;
  COFD[5191] = 2.00203068E-02;
  COFD[5192] = -2.28028326E+01;
  COFD[5193] = 5.48824400E+00;
  COFD[5194] = -4.59513209E-01;
  COFD[5195] = 1.84082047E-02;
  COFD[5196] = -2.28006215E+01;
  COFD[5197] = 5.48824400E+00;
  COFD[5198] = -4.59513209E-01;
  COFD[5199] = 1.84082047E-02;
  COFD[5200] = -2.28300970E+01;
  COFD[5201] = 5.58100780E+00;
  COFD[5202] = -4.78452463E-01;
  COFD[5203] = 1.95043836E-02;
  COFD[5204] = -2.21742398E+01;
  COFD[5205] = 5.51146842E+00;
  COFD[5206] = -4.83562214E-01;
  COFD[5207] = 2.02866024E-02;
  COFD[5208] = -2.26687024E+01;
  COFD[5209] = 5.59174979E+00;
  COFD[5210] = -4.85658671E-01;
  COFD[5211] = 2.00486161E-02;
  COFD[5212] = -2.28330103E+01;
  COFD[5213] = 5.58100780E+00;
  COFD[5214] = -4.78452463E-01;
  COFD[5215] = 1.95043836E-02;
  COFD[5216] = -2.24525454E+01;
  COFD[5217] = 5.11126858E+00;
  COFD[5218] = -3.94197754E-01;
  COFD[5219] = 1.49258559E-02;
  COFD[5220] = -2.28790957E+01;
  COFD[5221] = 5.58512527E+00;
  COFD[5222] = -4.80365122E-01;
  COFD[5223] = 1.96419146E-02;
  COFD[5224] = -2.27363965E+01;
  COFD[5225] = 5.50962966E+00;
  COFD[5226] = -4.64625480E-01;
  COFD[5227] = 1.87223918E-02;
  COFD[5228] = -2.27316915E+01;
  COFD[5229] = 5.31550795E+00;
  COFD[5230] = -4.28706397E-01;
  COFD[5231] = 1.67386771E-02;
  COFD[5232] = -2.28163248E+01;
  COFD[5233] = 5.42471690E+00;
  COFD[5234] = -4.47967221E-01;
  COFD[5235] = 1.77756550E-02;
  COFD[5236] = -2.28383726E+01;
  COFD[5237] = 5.42471690E+00;
  COFD[5238] = -4.47967221E-01;
  COFD[5239] = 1.77756550E-02;
  COFD[5240] = -2.28179980E+01;
  COFD[5241] = 5.42471690E+00;
  COFD[5242] = -4.47967221E-01;
  COFD[5243] = 1.77756550E-02;
  COFD[5244] = -2.30312769E+01;
  COFD[5245] = 5.49616184E+00;
  COFD[5246] = -4.61067688E-01;
  COFD[5247] = 1.84964487E-02;
  COFD[5248] = -2.30327260E+01;
  COFD[5249] = 5.49616184E+00;
  COFD[5250] = -4.61067688E-01;
  COFD[5251] = 1.84964487E-02;
  COFD[5252] = -2.27160019E+01;
  COFD[5253] = 5.34036599E+00;
  COFD[5254] = -4.32974135E-01;
  COFD[5255] = 1.69649822E-02;
  COFD[5256] = -2.24516025E+01;
  COFD[5257] = 5.11126858E+00;
  COFD[5258] = -3.94197754E-01;
  COFD[5259] = 1.49258559E-02;
  COFD[5260] = -2.27174041E+01;
  COFD[5261] = 5.34036599E+00;
  COFD[5262] = -4.32974135E-01;
  COFD[5263] = 1.69649822E-02;
  COFD[5264] = -1.84970149E+01;
  COFD[5265] = 4.41886064E+00;
  COFD[5266] = -3.59254256E-01;
  COFD[5267] = 1.55974661E-02;
  COFD[5268] = -1.96777391E+01;
  COFD[5269] = 4.90059208E+00;
  COFD[5270] = -4.17126126E-01;
  COFD[5271] = 1.79186848E-02;
  COFD[5272] = -1.96777391E+01;
  COFD[5273] = 4.90059208E+00;
  COFD[5274] = -4.17126126E-01;
  COFD[5275] = 1.79186848E-02;
  COFD[5276] = -1.74232048E+01;
  COFD[5277] = 4.17761385E+00;
  COFD[5278] = -3.29594803E-01;
  COFD[5279] = 1.43785522E-02;
  COFD[5280] = -1.41207761E+01;
  COFD[5281] = 3.26291213E+00;
  COFD[5282] = -2.12831025E-01;
  COFD[5283] = 9.39262629E-03;
  COFD[5284] = -1.80725106E+01;
  COFD[5285] = 4.91182086E+00;
  COFD[5286] = -4.18511339E-01;
  COFD[5287] = 1.79759141E-02;
  COFD[5288] = -1.74448444E+01;
  COFD[5289] = 4.17761385E+00;
  COFD[5290] = -3.29594803E-01;
  COFD[5291] = 1.43785522E-02;
  COFD[5292] = -2.14454635E+01;
  COFD[5293] = 5.25056135E+00;
  COFD[5294] = -4.17658192E-01;
  COFD[5295] = 1.61554773E-02;
  COFD[5296] = -1.88218258E+01;
  COFD[5297] = 4.53427279E+00;
  COFD[5298] = -3.73213513E-01;
  COFD[5299] = 1.61609973E-02;
  COFD[5300] = -1.88303884E+01;
  COFD[5301] = 4.53427279E+00;
  COFD[5302] = -3.73213513E-01;
  COFD[5303] = 1.61609973E-02;
  COFD[5304] = -1.73474558E+01;
  COFD[5305] = 4.17761385E+00;
  COFD[5306] = -3.29594803E-01;
  COFD[5307] = 1.43785522E-02;
  COFD[5308] = -1.85255055E+01;
  COFD[5309] = 4.42668307E+00;
  COFD[5310] = -3.60220573E-01;
  COFD[5311] = 1.56373683E-02;
  COFD[5312] = -2.21111508E+01;
  COFD[5313] = 5.41958743E+00;
  COFD[5314] = -4.47031040E-01;
  COFD[5315] = 1.77243470E-02;
  COFD[5316] = -2.21209816E+01;
  COFD[5317] = 5.41958743E+00;
  COFD[5318] = -4.47031040E-01;
  COFD[5319] = 1.77243470E-02;
  COFD[5320] = -1.97032058E+01;
  COFD[5321] = 4.90059208E+00;
  COFD[5322] = -4.17126126E-01;
  COFD[5323] = 1.79186848E-02;
  COFD[5324] = -2.16215581E+01;
  COFD[5325] = 5.41694410E+00;
  COFD[5326] = -4.73389041E-01;
  COFD[5327] = 1.99278645E-02;
  COFD[5328] = -1.96333360E+01;
  COFD[5329] = 4.87149639E+00;
  COFD[5330] = -4.13544849E-01;
  COFD[5331] = 1.77710516E-02;
  COFD[5332] = -2.12699528E+01;
  COFD[5333] = 5.34173603E+00;
  COFD[5334] = -4.67980991E-01;
  COFD[5335] = 1.98689682E-02;
  COFD[5336] = -2.19963797E+01;
  COFD[5337] = 5.55674298E+00;
  COFD[5338] = -4.88067739E-01;
  COFD[5339] = 2.04278640E-02;
  COFD[5340] = -2.17304659E+01;
  COFD[5341] = 5.44645703E+00;
  COFD[5342] = -4.76428229E-01;
  COFD[5343] = 2.00285047E-02;
  COFD[5344] = -2.12464709E+01;
  COFD[5345] = 5.34173603E+00;
  COFD[5346] = -4.67980991E-01;
  COFD[5347] = 1.98689682E-02;
  COFD[5348] = -1.98444255E+01;
  COFD[5349] = 4.95769834E+00;
  COFD[5350] = -4.23993658E-01;
  COFD[5351] = 1.81947960E-02;
  COFD[5352] = -2.12585287E+01;
  COFD[5353] = 5.34173603E+00;
  COFD[5354] = -4.67980991E-01;
  COFD[5355] = 1.98689682E-02;
  COFD[5356] = -2.19042768E+01;
  COFD[5357] = 5.44470367E+00;
  COFD[5358] = -4.76221201E-01;
  COFD[5359] = 2.00203068E-02;
  COFD[5360] = -2.21682905E+01;
  COFD[5361] = 5.51146842E+00;
  COFD[5362] = -4.83562214E-01;
  COFD[5363] = 2.02866024E-02;
  COFD[5364] = -2.21799775E+01;
  COFD[5365] = 5.51146842E+00;
  COFD[5366] = -4.83562214E-01;
  COFD[5367] = 2.02866024E-02;
  COFD[5368] = -2.17402758E+01;
  COFD[5369] = 5.44645703E+00;
  COFD[5370] = -4.76428229E-01;
  COFD[5371] = 2.00285047E-02;
  COFD[5372] = -2.19106877E+01;
  COFD[5373] = 5.44470367E+00;
  COFD[5374] = -4.76221201E-01;
  COFD[5375] = 2.00203068E-02;
  COFD[5376] = -2.19106877E+01;
  COFD[5377] = 5.44470367E+00;
  COFD[5378] = -4.76221201E-01;
  COFD[5379] = 2.00203068E-02;
  COFD[5380] = -2.28028326E+01;
  COFD[5381] = 5.48824400E+00;
  COFD[5382] = -4.59513209E-01;
  COFD[5383] = 1.84082047E-02;
  COFD[5384] = -2.28006215E+01;
  COFD[5385] = 5.48824400E+00;
  COFD[5386] = -4.59513209E-01;
  COFD[5387] = 1.84082047E-02;
  COFD[5388] = -2.28300970E+01;
  COFD[5389] = 5.58100780E+00;
  COFD[5390] = -4.78452463E-01;
  COFD[5391] = 1.95043836E-02;
  COFD[5392] = -2.21742398E+01;
  COFD[5393] = 5.51146842E+00;
  COFD[5394] = -4.83562214E-01;
  COFD[5395] = 2.02866024E-02;
  COFD[5396] = -2.26687024E+01;
  COFD[5397] = 5.59174979E+00;
  COFD[5398] = -4.85658671E-01;
  COFD[5399] = 2.00486161E-02;
  COFD[5400] = -2.28330103E+01;
  COFD[5401] = 5.58100780E+00;
  COFD[5402] = -4.78452463E-01;
  COFD[5403] = 1.95043836E-02;
  COFD[5404] = -2.24525454E+01;
  COFD[5405] = 5.11126858E+00;
  COFD[5406] = -3.94197754E-01;
  COFD[5407] = 1.49258559E-02;
  COFD[5408] = -2.28790957E+01;
  COFD[5409] = 5.58512527E+00;
  COFD[5410] = -4.80365122E-01;
  COFD[5411] = 1.96419146E-02;
  COFD[5412] = -2.27363965E+01;
  COFD[5413] = 5.50962966E+00;
  COFD[5414] = -4.64625480E-01;
  COFD[5415] = 1.87223918E-02;
  COFD[5416] = -2.27316915E+01;
  COFD[5417] = 5.31550795E+00;
  COFD[5418] = -4.28706397E-01;
  COFD[5419] = 1.67386771E-02;
  COFD[5420] = -2.28163248E+01;
  COFD[5421] = 5.42471690E+00;
  COFD[5422] = -4.47967221E-01;
  COFD[5423] = 1.77756550E-02;
  COFD[5424] = -2.28383726E+01;
  COFD[5425] = 5.42471690E+00;
  COFD[5426] = -4.47967221E-01;
  COFD[5427] = 1.77756550E-02;
  COFD[5428] = -2.28179980E+01;
  COFD[5429] = 5.42471690E+00;
  COFD[5430] = -4.47967221E-01;
  COFD[5431] = 1.77756550E-02;
  COFD[5432] = -2.30312769E+01;
  COFD[5433] = 5.49616184E+00;
  COFD[5434] = -4.61067688E-01;
  COFD[5435] = 1.84964487E-02;
  COFD[5436] = -2.30327260E+01;
  COFD[5437] = 5.49616184E+00;
  COFD[5438] = -4.61067688E-01;
  COFD[5439] = 1.84964487E-02;
  COFD[5440] = -2.27160019E+01;
  COFD[5441] = 5.34036599E+00;
  COFD[5442] = -4.32974135E-01;
  COFD[5443] = 1.69649822E-02;
  COFD[5444] = -2.24516025E+01;
  COFD[5445] = 5.11126858E+00;
  COFD[5446] = -3.94197754E-01;
  COFD[5447] = 1.49258559E-02;
  COFD[5448] = -2.27174041E+01;
  COFD[5449] = 5.34036599E+00;
  COFD[5450] = -4.32974135E-01;
  COFD[5451] = 1.69649822E-02;
  COFD[5452] = -2.08547718E+01;
  COFD[5453] = 5.15581320E+00;
  COFD[5454] = -4.46543388E-01;
  COFD[5455] = 1.90458118E-02;
  COFD[5456] = -2.17471152E+01;
  COFD[5457] = 5.50642944E+00;
  COFD[5458] = -4.83016239E-01;
  COFD[5459] = 2.02671529E-02;
  COFD[5460] = -2.17471152E+01;
  COFD[5461] = 5.50642944E+00;
  COFD[5462] = -4.83016239E-01;
  COFD[5463] = 2.02671529E-02;
  COFD[5464] = -1.97761002E+01;
  COFD[5465] = 4.93652913E+00;
  COFD[5466] = -4.21485300E-01;
  COFD[5467] = 1.80955487E-02;
  COFD[5468] = -1.63065305E+01;
  COFD[5469] = 4.02718684E+00;
  COFD[5470] = -3.10842073E-01;
  COFD[5471] = 1.35952684E-02;
  COFD[5472] = -2.01030325E+01;
  COFD[5473] = 5.51409582E+00;
  COFD[5474] = -4.83844807E-01;
  COFD[5475] = 2.02965712E-02;
  COFD[5476] = -1.98013229E+01;
  COFD[5477] = 4.93652913E+00;
  COFD[5478] = -4.21485300E-01;
  COFD[5479] = 1.80955487E-02;
  COFD[5480] = -1.74926523E+01;
  COFD[5481] = 3.15361828E+00;
  COFD[5482] = -9.38467311E-02;
  COFD[5483] = 1.12003378E-04;
  COFD[5484] = -2.12021525E+01;
  COFD[5485] = 5.26829491E+00;
  COFD[5486] = -4.59325230E-01;
  COFD[5487] = 1.95275380E-02;
  COFD[5488] = -2.12131042E+01;
  COFD[5489] = 5.26829491E+00;
  COFD[5490] = -4.59325230E-01;
  COFD[5491] = 1.95275380E-02;
  COFD[5492] = -1.96891302E+01;
  COFD[5493] = 4.93652913E+00;
  COFD[5494] = -4.21485300E-01;
  COFD[5495] = 1.80955487E-02;
  COFD[5496] = -2.08713378E+01;
  COFD[5497] = 5.15826153E+00;
  COFD[5498] = -4.46699782E-01;
  COFD[5499] = 1.90459433E-02;
  COFD[5500] = -2.01426008E+01;
  COFD[5501] = 4.23025405E+00;
  COFD[5502] = -2.55784321E-01;
  COFD[5503] = 7.98147639E-03;
  COFD[5504] = -2.01549920E+01;
  COFD[5505] = 4.23025405E+00;
  COFD[5506] = -2.55784321E-01;
  COFD[5507] = 7.98147639E-03;
  COFD[5508] = -2.17763734E+01;
  COFD[5509] = 5.50642944E+00;
  COFD[5510] = -4.83016239E-01;
  COFD[5511] = 2.02671529E-02;
  COFD[5512] = -2.26266113E+01;
  COFD[5513] = 5.50195433E+00;
  COFD[5514] = -4.62690815E-01;
  COFD[5515] = 1.86010137E-02;
  COFD[5516] = -2.17262573E+01;
  COFD[5517] = 5.48539572E+00;
  COFD[5518] = -4.80731929E-01;
  COFD[5519] = 2.01857298E-02;
  COFD[5520] = -2.25832423E+01;
  COFD[5521] = 5.58516153E+00;
  COFD[5522] = -4.80440252E-01;
  COFD[5523] = 1.96479586E-02;
  COFD[5524] = -2.23733884E+01;
  COFD[5525] = 5.38363480E+00;
  COFD[5526] = -4.40406530E-01;
  COFD[5527] = 1.73594979E-02;
  COFD[5528] = -2.25968936E+01;
  COFD[5529] = 5.48733210E+00;
  COFD[5530] = -4.59335784E-01;
  COFD[5531] = 1.83981530E-02;
  COFD[5532] = -2.25541888E+01;
  COFD[5533] = 5.58516153E+00;
  COFD[5534] = -4.80440252E-01;
  COFD[5535] = 1.96479586E-02;
  COFD[5536] = -2.19713745E+01;
  COFD[5537] = 5.54455172E+00;
  COFD[5538] = -4.86886991E-01;
  COFD[5539] = 2.03924829E-02;
  COFD[5540] = -2.25690671E+01;
  COFD[5541] = 5.58516153E+00;
  COFD[5542] = -4.80440252E-01;
  COFD[5543] = 1.96479586E-02;
  COFD[5544] = -2.27943751E+01;
  COFD[5545] = 5.48824400E+00;
  COFD[5546] = -4.59513209E-01;
  COFD[5547] = 1.84082047E-02;
  COFD[5548] = -2.27764486E+01;
  COFD[5549] = 5.43128350E+00;
  COFD[5550] = -4.49151750E-01;
  COFD[5551] = 1.78402439E-02;
  COFD[5552] = -2.27920204E+01;
  COFD[5553] = 5.43128350E+00;
  COFD[5554] = -4.49151750E-01;
  COFD[5555] = 1.78402439E-02;
  COFD[5556] = -2.26092613E+01;
  COFD[5557] = 5.48733210E+00;
  COFD[5558] = -4.59335784E-01;
  COFD[5559] = 1.83981530E-02;
  COFD[5560] = -2.28028326E+01;
  COFD[5561] = 5.48824400E+00;
  COFD[5562] = -4.59513209E-01;
  COFD[5563] = 1.84082047E-02;
  COFD[5564] = -2.28028326E+01;
  COFD[5565] = 5.48824400E+00;
  COFD[5566] = -4.59513209E-01;
  COFD[5567] = 1.84082047E-02;
  COFD[5568] = -2.12039731E+01;
  COFD[5569] = 4.42962851E+00;
  COFD[5570] = -2.86319550E-01;
  COFD[5571] = 9.48633214E-03;
  COFD[5572] = -2.12007155E+01;
  COFD[5573] = 4.42962851E+00;
  COFD[5574] = -2.86319550E-01;
  COFD[5575] = 9.48633214E-03;
  COFD[5576] = -2.18038182E+01;
  COFD[5577] = 4.77394082E+00;
  COFD[5578] = -3.40515557E-01;
  COFD[5579] = 1.22069084E-02;
  COFD[5580] = -2.27843604E+01;
  COFD[5581] = 5.43128350E+00;
  COFD[5582] = -4.49151750E-01;
  COFD[5583] = 1.78402439E-02;
  COFD[5584] = -2.23372414E+01;
  COFD[5585] = 5.08752431E+00;
  COFD[5586] = -3.90352499E-01;
  COFD[5587] = 1.47287803E-02;
  COFD[5588] = -2.18079943E+01;
  COFD[5589] = 4.77394082E+00;
  COFD[5590] = -3.40515557E-01;
  COFD[5591] = 1.22069084E-02;
  COFD[5592] = -1.94917630E+01;
  COFD[5593] = 3.46782579E+00;
  COFD[5594] = -1.40466854E-01;
  COFD[5595] = 2.35226276E-03;
  COFD[5596] = -2.20193291E+01;
  COFD[5597] = 4.84785746E+00;
  COFD[5598] = -3.52235849E-01;
  COFD[5599] = 1.27987972E-02;
  COFD[5600] = -2.14018301E+01;
  COFD[5601] = 4.56581284E+00;
  COFD[5602] = -3.07475292E-01;
  COFD[5603] = 1.05390469E-02;
  COFD[5604] = -2.03436475E+01;
  COFD[5605] = 3.91745986E+00;
  COFD[5606] = -2.08522596E-01;
  COFD[5607] = 5.67308030E-03;
  COFD[5608] = -2.09387662E+01;
  COFD[5609] = 4.24466286E+00;
  COFD[5610] = -2.57969163E-01;
  COFD[5611] = 8.08847969E-03;
  COFD[5612] = -2.09724758E+01;
  COFD[5613] = 4.24466286E+00;
  COFD[5614] = -2.57969163E-01;
  COFD[5615] = 8.08847969E-03;
  COFD[5616] = -2.09412972E+01;
  COFD[5617] = 4.24466286E+00;
  COFD[5618] = -2.57969163E-01;
  COFD[5619] = 8.08847969E-03;
  COFD[5620] = -2.14953227E+01;
  COFD[5621] = 4.46010097E+00;
  COFD[5622] = -2.91026334E-01;
  COFD[5623] = 9.71970079E-03;
  COFD[5624] = -2.14975434E+01;
  COFD[5625] = 4.46010097E+00;
  COFD[5626] = -2.91026334E-01;
  COFD[5627] = 9.71970079E-03;
  COFD[5628] = -2.03898345E+01;
  COFD[5629] = 3.96664171E+00;
  COFD[5630] = -2.16019029E-01;
  COFD[5631] = 6.04101691E-03;
  COFD[5632] = -1.94902645E+01;
  COFD[5633] = 3.46782579E+00;
  COFD[5634] = -1.40466854E-01;
  COFD[5635] = 2.35226276E-03;
  COFD[5636] = -2.03919896E+01;
  COFD[5637] = 3.96664171E+00;
  COFD[5638] = -2.16019029E-01;
  COFD[5639] = 6.04101691E-03;
  COFD[5640] = -2.08530494E+01;
  COFD[5641] = 5.15581320E+00;
  COFD[5642] = -4.46543388E-01;
  COFD[5643] = 1.90458118E-02;
  COFD[5644] = -2.17461211E+01;
  COFD[5645] = 5.50642944E+00;
  COFD[5646] = -4.83016239E-01;
  COFD[5647] = 2.02671529E-02;
  COFD[5648] = -2.17461211E+01;
  COFD[5649] = 5.50642944E+00;
  COFD[5650] = -4.83016239E-01;
  COFD[5651] = 2.02671529E-02;
  COFD[5652] = -1.97749903E+01;
  COFD[5653] = 4.93652913E+00;
  COFD[5654] = -4.21485300E-01;
  COFD[5655] = 1.80955487E-02;
  COFD[5656] = -1.63063661E+01;
  COFD[5657] = 4.02718684E+00;
  COFD[5658] = -3.10842073E-01;
  COFD[5659] = 1.35952684E-02;
  COFD[5660] = -2.01029492E+01;
  COFD[5661] = 5.51409582E+00;
  COFD[5662] = -4.83844807E-01;
  COFD[5663] = 2.02965712E-02;
  COFD[5664] = -1.98001556E+01;
  COFD[5665] = 4.93652913E+00;
  COFD[5666] = -4.21485300E-01;
  COFD[5667] = 1.80955487E-02;
  COFD[5668] = -1.74914289E+01;
  COFD[5669] = 3.15361828E+00;
  COFD[5670] = -9.38467311E-02;
  COFD[5671] = 1.12003378E-04;
  COFD[5672] = -2.12002567E+01;
  COFD[5673] = 5.26829491E+00;
  COFD[5674] = -4.59325230E-01;
  COFD[5675] = 1.95275380E-02;
  COFD[5676] = -2.12111664E+01;
  COFD[5677] = 5.26829491E+00;
  COFD[5678] = -4.59325230E-01;
  COFD[5679] = 1.95275380E-02;
  COFD[5680] = -1.96881973E+01;
  COFD[5681] = 4.93652913E+00;
  COFD[5682] = -4.21485300E-01;
  COFD[5683] = 1.80955487E-02;
  COFD[5684] = -2.08696156E+01;
  COFD[5685] = 5.15826153E+00;
  COFD[5686] = -4.46699782E-01;
  COFD[5687] = 1.90459433E-02;
  COFD[5688] = -2.01408334E+01;
  COFD[5689] = 4.23025405E+00;
  COFD[5690] = -2.55784321E-01;
  COFD[5691] = 7.98147639E-03;
  COFD[5692] = -2.01531804E+01;
  COFD[5693] = 4.23025405E+00;
  COFD[5694] = -2.55784321E-01;
  COFD[5695] = 7.98147639E-03;
  COFD[5696] = -2.17753195E+01;
  COFD[5697] = 5.50642944E+00;
  COFD[5698] = -4.83016239E-01;
  COFD[5699] = 2.02671529E-02;
  COFD[5700] = -2.26242613E+01;
  COFD[5701] = 5.50195433E+00;
  COFD[5702] = -4.62690815E-01;
  COFD[5703] = 1.86010137E-02;
  COFD[5704] = -2.17251449E+01;
  COFD[5705] = 5.48539572E+00;
  COFD[5706] = -4.80731929E-01;
  COFD[5707] = 2.01857298E-02;
  COFD[5708] = -2.25815640E+01;
  COFD[5709] = 5.58516153E+00;
  COFD[5710] = -4.80440252E-01;
  COFD[5711] = 1.96479586E-02;
  COFD[5712] = -2.23716642E+01;
  COFD[5713] = 5.38363480E+00;
  COFD[5714] = -4.40406530E-01;
  COFD[5715] = 1.73594979E-02;
  COFD[5716] = -2.25951243E+01;
  COFD[5717] = 5.48733210E+00;
  COFD[5718] = -4.59335784E-01;
  COFD[5719] = 1.83981530E-02;
  COFD[5720] = -2.25526051E+01;
  COFD[5721] = 5.58516153E+00;
  COFD[5722] = -4.80440252E-01;
  COFD[5723] = 1.96479586E-02;
  COFD[5724] = -2.19691286E+01;
  COFD[5725] = 5.54455172E+00;
  COFD[5726] = -4.86886991E-01;
  COFD[5727] = 2.03924829E-02;
  COFD[5728] = -2.25674356E+01;
  COFD[5729] = 5.58516153E+00;
  COFD[5730] = -4.80440252E-01;
  COFD[5731] = 1.96479586E-02;
  COFD[5732] = -2.27922010E+01;
  COFD[5733] = 5.48824400E+00;
  COFD[5734] = -4.59513209E-01;
  COFD[5735] = 1.84082047E-02;
  COFD[5736] = -2.27742011E+01;
  COFD[5737] = 5.43128350E+00;
  COFD[5738] = -4.49151750E-01;
  COFD[5739] = 1.78402439E-02;
  COFD[5740] = -2.27897020E+01;
  COFD[5741] = 5.43128350E+00;
  COFD[5742] = -4.49151750E-01;
  COFD[5743] = 1.78402439E-02;
  COFD[5744] = -2.26074477E+01;
  COFD[5745] = 5.48733210E+00;
  COFD[5746] = -4.59335784E-01;
  COFD[5747] = 1.83981530E-02;
  COFD[5748] = -2.28006215E+01;
  COFD[5749] = 5.48824400E+00;
  COFD[5750] = -4.59513209E-01;
  COFD[5751] = 1.84082047E-02;
  COFD[5752] = -2.28006215E+01;
  COFD[5753] = 5.48824400E+00;
  COFD[5754] = -4.59513209E-01;
  COFD[5755] = 1.84082047E-02;
  COFD[5756] = -2.12007155E+01;
  COFD[5757] = 4.42962851E+00;
  COFD[5758] = -2.86319550E-01;
  COFD[5759] = 9.48633214E-03;
  COFD[5760] = -2.11974790E+01;
  COFD[5761] = 4.42962851E+00;
  COFD[5762] = -2.86319550E-01;
  COFD[5763] = 9.48633214E-03;
  COFD[5764] = -2.18008558E+01;
  COFD[5765] = 4.77394082E+00;
  COFD[5766] = -3.40515557E-01;
  COFD[5767] = 1.22069084E-02;
  COFD[5768] = -2.27820771E+01;
  COFD[5769] = 5.43128350E+00;
  COFD[5770] = -4.49151750E-01;
  COFD[5771] = 1.78402439E-02;
  COFD[5772] = -2.23345164E+01;
  COFD[5773] = 5.08752431E+00;
  COFD[5774] = -3.90352499E-01;
  COFD[5775] = 1.47287803E-02;
  COFD[5776] = -2.18050073E+01;
  COFD[5777] = 4.77394082E+00;
  COFD[5778] = -3.40515557E-01;
  COFD[5779] = 1.22069084E-02;
  COFD[5780] = -1.94877181E+01;
  COFD[5781] = 3.46782579E+00;
  COFD[5782] = -1.40466854E-01;
  COFD[5783] = 2.35226276E-03;
  COFD[5784] = -2.20162462E+01;
  COFD[5785] = 4.84785746E+00;
  COFD[5786] = -3.52235849E-01;
  COFD[5787] = 1.27987972E-02;
  COFD[5788] = -2.13987242E+01;
  COFD[5789] = 4.56581284E+00;
  COFD[5790] = -3.07475292E-01;
  COFD[5791] = 1.05390469E-02;
  COFD[5792] = -2.03399417E+01;
  COFD[5793] = 3.91745986E+00;
  COFD[5794] = -2.08522596E-01;
  COFD[5795] = 5.67308030E-03;
  COFD[5796] = -2.09352589E+01;
  COFD[5797] = 4.24466286E+00;
  COFD[5798] = -2.57969163E-01;
  COFD[5799] = 8.08847969E-03;
  COFD[5800] = -2.09687248E+01;
  COFD[5801] = 4.24466286E+00;
  COFD[5802] = -2.57969163E-01;
  COFD[5803] = 8.08847969E-03;
  COFD[5804] = -2.09377722E+01;
  COFD[5805] = 4.24466286E+00;
  COFD[5806] = -2.57969163E-01;
  COFD[5807] = 8.08847969E-03;
  COFD[5808] = -2.14916791E+01;
  COFD[5809] = 4.46010097E+00;
  COFD[5810] = -2.91026334E-01;
  COFD[5811] = 9.71970079E-03;
  COFD[5812] = -2.14938837E+01;
  COFD[5813] = 4.46010097E+00;
  COFD[5814] = -2.91026334E-01;
  COFD[5815] = 9.71970079E-03;
  COFD[5816] = -2.03861602E+01;
  COFD[5817] = 3.96664171E+00;
  COFD[5818] = -2.16019029E-01;
  COFD[5819] = 6.04101691E-03;
  COFD[5820] = -1.94862316E+01;
  COFD[5821] = 3.46782579E+00;
  COFD[5822] = -1.40466854E-01;
  COFD[5823] = 2.35226276E-03;
  COFD[5824] = -2.03882995E+01;
  COFD[5825] = 3.96664171E+00;
  COFD[5826] = -2.16019029E-01;
  COFD[5827] = 6.04101691E-03;
  COFD[5828] = -2.03344979E+01;
  COFD[5829] = 4.99860239E+00;
  COFD[5830] = -4.28838375E-01;
  COFD[5831] = 1.83863470E-02;
  COFD[5832] = -2.13163151E+01;
  COFD[5833] = 5.38948949E+00;
  COFD[5834] = -4.71682699E-01;
  COFD[5835] = 1.99285168E-02;
  COFD[5836] = -2.13163151E+01;
  COFD[5837] = 5.38948949E+00;
  COFD[5838] = -4.71682699E-01;
  COFD[5839] = 1.99285168E-02;
  COFD[5840] = -1.91992545E+01;
  COFD[5841] = 4.74919572E+00;
  COFD[5842] = -3.99211884E-01;
  COFD[5843] = 1.72117130E-02;
  COFD[5844] = -1.56669853E+01;
  COFD[5845] = 3.79329365E+00;
  COFD[5846] = -2.80475006E-01;
  COFD[5847] = 1.22752392E-02;
  COFD[5848] = -1.96712605E+01;
  COFD[5849] = 5.39317138E+00;
  COFD[5850] = -4.71974590E-01;
  COFD[5851] = 1.99337334E-02;
  COFD[5852] = -1.92236272E+01;
  COFD[5853] = 4.74919572E+00;
  COFD[5854] = -3.99211884E-01;
  COFD[5855] = 1.72117130E-02;
  COFD[5856] = -1.97506903E+01;
  COFD[5857] = 4.26375568E+00;
  COFD[5858] = -2.60883263E-01;
  COFD[5859] = 8.23169934E-03;
  COFD[5860] = -2.06845303E+01;
  COFD[5861] = 5.11611668E+00;
  COFD[5862] = -4.42629845E-01;
  COFD[5863] = 1.89266956E-02;
  COFD[5864] = -2.06948742E+01;
  COFD[5865] = 5.11611668E+00;
  COFD[5866] = -4.42629845E-01;
  COFD[5867] = 1.89266956E-02;
  COFD[5868] = -1.91149162E+01;
  COFD[5869] = 4.74919572E+00;
  COFD[5870] = -3.99211884E-01;
  COFD[5871] = 1.72117130E-02;
  COFD[5872] = -2.03634628E+01;
  COFD[5873] = 5.00646405E+00;
  COFD[5874] = -4.29778163E-01;
  COFD[5875] = 1.84239285E-02;
  COFD[5876] = -2.08804765E+01;
  COFD[5877] = 4.62431107E+00;
  COFD[5878] = -3.16767061E-01;
  COFD[5879] = 1.10078524E-02;
  COFD[5880] = -2.08922233E+01;
  COFD[5881] = 4.62431107E+00;
  COFD[5882] = -3.16767061E-01;
  COFD[5883] = 1.10078524E-02;
  COFD[5884] = -2.13446838E+01;
  COFD[5885] = 5.38948949E+00;
  COFD[5886] = -4.71682699E-01;
  COFD[5887] = 1.99285168E-02;
  COFD[5888] = -2.26279689E+01;
  COFD[5889] = 5.58503543E+00;
  COFD[5890] = -4.80244152E-01;
  COFD[5891] = 1.96323422E-02;
  COFD[5892] = -2.13224068E+01;
  COFD[5893] = 5.38005505E+00;
  COFD[5894] = -4.70960934E-01;
  COFD[5895] = 1.99174610E-02;
  COFD[5896] = -2.24575898E+01;
  COFD[5897] = 5.60901522E+00;
  COFD[5898] = -4.89632587E-01;
  COFD[5899] = 2.02906018E-02;
  COFD[5900] = -2.24687014E+01;
  COFD[5901] = 5.50462612E+00;
  COFD[5902] = -4.63455030E-01;
  COFD[5903] = 1.86507367E-02;
  COFD[5904] = -2.26309491E+01;
  COFD[5905] = 5.58066442E+00;
  COFD[5906] = -4.78358496E-01;
  COFD[5907] = 1.94983439E-02;
  COFD[5908] = -2.24299190E+01;
  COFD[5909] = 5.60901522E+00;
  COFD[5910] = -4.89632587E-01;
  COFD[5911] = 2.02906018E-02;
  COFD[5912] = -2.14701152E+01;
  COFD[5913] = 5.40830928E+00;
  COFD[5914] = -4.72988519E-01;
  COFD[5915] = 1.99395140E-02;
  COFD[5916] = -2.24440988E+01;
  COFD[5917] = 5.60901522E+00;
  COFD[5918] = -4.89632587E-01;
  COFD[5919] = 2.02906018E-02;
  COFD[5920] = -2.28221723E+01;
  COFD[5921] = 5.58100780E+00;
  COFD[5922] = -4.78452463E-01;
  COFD[5923] = 1.95043836E-02;
  COFD[5924] = -2.28381990E+01;
  COFD[5925] = 5.54010119E+00;
  COFD[5926] = -4.70485703E-01;
  COFD[5927] = 1.90527349E-02;
  COFD[5928] = -2.28527520E+01;
  COFD[5929] = 5.54010119E+00;
  COFD[5930] = -4.70485703E-01;
  COFD[5931] = 1.90527349E-02;
  COFD[5932] = -2.26426731E+01;
  COFD[5933] = 5.58066442E+00;
  COFD[5934] = -4.78358496E-01;
  COFD[5935] = 1.94983439E-02;
  COFD[5936] = -2.28300970E+01;
  COFD[5937] = 5.58100780E+00;
  COFD[5938] = -4.78452463E-01;
  COFD[5939] = 1.95043836E-02;
  COFD[5940] = -2.28300970E+01;
  COFD[5941] = 5.58100780E+00;
  COFD[5942] = -4.78452463E-01;
  COFD[5943] = 1.95043836E-02;
  COFD[5944] = -2.18038182E+01;
  COFD[5945] = 4.77394082E+00;
  COFD[5946] = -3.40515557E-01;
  COFD[5947] = 1.22069084E-02;
  COFD[5948] = -2.18008558E+01;
  COFD[5949] = 4.77394082E+00;
  COFD[5950] = -3.40515557E-01;
  COFD[5951] = 1.22069084E-02;
  COFD[5952] = -2.23579270E+01;
  COFD[5953] = 5.09740001E+00;
  COFD[5954] = -3.91951330E-01;
  COFD[5955] = 1.48106977E-02;
  COFD[5956] = -2.28455969E+01;
  COFD[5957] = 5.54010119E+00;
  COFD[5958] = -4.70485703E-01;
  COFD[5959] = 1.90527349E-02;
  COFD[5960] = -2.26523561E+01;
  COFD[5961] = 5.30882790E+00;
  COFD[5962] = -4.27583632E-01;
  COFD[5963] = 1.66798412E-02;
  COFD[5964] = -2.23617539E+01;
  COFD[5965] = 5.09740001E+00;
  COFD[5966] = -3.91951330E-01;
  COFD[5967] = 1.48106977E-02;
  COFD[5968] = -2.03854614E+01;
  COFD[5969] = 3.93738709E+00;
  COFD[5970] = -2.11564714E-01;
  COFD[5971] = 5.82251403E-03;
  COFD[5972] = -2.25371545E+01;
  COFD[5973] = 5.15728857E+00;
  COFD[5974] = -4.01806783E-01;
  COFD[5975] = 1.53204421E-02;
  COFD[5976] = -2.19592469E+01;
  COFD[5977] = 4.89153228E+00;
  COFD[5978] = -3.59130678E-01;
  COFD[5979] = 1.31462184E-02;
  COFD[5980] = -2.12623748E+01;
  COFD[5981] = 4.39682936E+00;
  COFD[5982] = -2.81277011E-01;
  COFD[5983] = 9.23692902E-03;
  COFD[5984] = -2.16480978E+01;
  COFD[5985] = 4.63605764E+00;
  COFD[5986] = -3.18638225E-01;
  COFD[5987] = 1.11025963E-02;
  COFD[5988] = -2.16784285E+01;
  COFD[5989] = 4.63605764E+00;
  COFD[5990] = -3.18638225E-01;
  COFD[5991] = 1.11025963E-02;
  COFD[5992] = -2.16503821E+01;
  COFD[5993] = 4.63605764E+00;
  COFD[5994] = -3.18638225E-01;
  COFD[5995] = 1.11025963E-02;
  COFD[5996] = -2.20710209E+01;
  COFD[5997] = 4.79594018E+00;
  COFD[5998] = -3.44052659E-01;
  COFD[5999] = 1.23869631E-02;
  COFD[6000] = -2.20730177E+01;
  COFD[6001] = 4.79594018E+00;
  COFD[6002] = -3.44052659E-01;
  COFD[6003] = 1.23869631E-02;
  COFD[6004] = -2.13209374E+01;
  COFD[6005] = 4.45290995E+00;
  COFD[6006] = -2.89908411E-01;
  COFD[6007] = 9.66407483E-03;
  COFD[6008] = -2.03841283E+01;
  COFD[6009] = 3.93738709E+00;
  COFD[6010] = -2.11564714E-01;
  COFD[6011] = 5.82251403E-03;
  COFD[6012] = -2.13228736E+01;
  COFD[6013] = 4.45290995E+00;
  COFD[6014] = -2.89908411E-01;
  COFD[6015] = 9.66407483E-03;
  COFD[6016] = -1.87483223E+01;
  COFD[6017] = 4.48550694E+00;
  COFD[6018] = -3.67277454E-01;
  COFD[6019] = 1.59194755E-02;
  COFD[6020] = -1.99577723E+01;
  COFD[6021] = 4.97875278E+00;
  COFD[6022] = -4.26485475E-01;
  COFD[6023] = 1.82931933E-02;
  COFD[6024] = -1.99577723E+01;
  COFD[6025] = 4.97875278E+00;
  COFD[6026] = -4.26485475E-01;
  COFD[6027] = 1.82931933E-02;
  COFD[6028] = -1.76808635E+01;
  COFD[6029] = 4.24719726E+00;
  COFD[6030] = -3.38206061E-01;
  COFD[6031] = 1.47350654E-02;
  COFD[6032] = -1.43135474E+01;
  COFD[6033] = 3.31177824E+00;
  COFD[6034] = -2.18945280E-01;
  COFD[6035] = 9.64764419E-03;
  COFD[6036] = -1.83542714E+01;
  COFD[6037] = 4.98756925E+00;
  COFD[6038] = -4.27526072E-01;
  COFD[6039] = 1.83341755E-02;
  COFD[6040] = -1.77028097E+01;
  COFD[6041] = 4.24719726E+00;
  COFD[6042] = -3.38206061E-01;
  COFD[6043] = 1.47350654E-02;
  COFD[6044] = -2.13884026E+01;
  COFD[6045] = 5.17440955E+00;
  COFD[6046] = -4.04678430E-01;
  COFD[6047] = 1.54706350E-02;
  COFD[6048] = -1.91174394E+01;
  COFD[6049] = 4.61801405E+00;
  COFD[6050] = -3.83535652E-01;
  COFD[6051] = 1.65862513E-02;
  COFD[6052] = -1.91261897E+01;
  COFD[6053] = 4.61801405E+00;
  COFD[6054] = -3.83535652E-01;
  COFD[6055] = 1.65862513E-02;
  COFD[6056] = -1.76041412E+01;
  COFD[6057] = 4.24719726E+00;
  COFD[6058] = -3.38206061E-01;
  COFD[6059] = 1.47350654E-02;
  COFD[6060] = -1.87733780E+01;
  COFD[6061] = 4.49191492E+00;
  COFD[6062] = -3.68041771E-01;
  COFD[6063] = 1.59498676E-02;
  COFD[6064] = -2.20898344E+01;
  COFD[6065] = 5.36053938E+00;
  COFD[6066] = -4.36434519E-01;
  COFD[6067] = 1.71484255E-02;
  COFD[6068] = -2.20998692E+01;
  COFD[6069] = 5.36053938E+00;
  COFD[6070] = -4.36434519E-01;
  COFD[6071] = 1.71484255E-02;
  COFD[6072] = -1.99835677E+01;
  COFD[6073] = 4.97875278E+00;
  COFD[6074] = -4.26485475E-01;
  COFD[6075] = 1.82931933E-02;
  COFD[6076] = -2.18653022E+01;
  COFD[6077] = 5.47368915E+00;
  COFD[6078] = -4.79424291E-01;
  COFD[6079] = 2.01372920E-02;
  COFD[6080] = -1.99269591E+01;
  COFD[6081] = 4.95514826E+00;
  COFD[6082] = -4.23691395E-01;
  COFD[6083] = 1.81828318E-02;
  COFD[6084] = -2.14486311E+01;
  COFD[6085] = 5.37331605E+00;
  COFD[6086] = -4.70491203E-01;
  COFD[6087] = 1.99134666E-02;
  COFD[6088] = -2.21933965E+01;
  COFD[6089] = 5.59472344E+00;
  COFD[6090] = -4.91421518E-01;
  COFD[6091] = 2.05117088E-02;
  COFD[6092] = -2.19933650E+01;
  COFD[6093] = 5.51276597E+00;
  COFD[6094] = -4.83701824E-01;
  COFD[6095] = 2.02915297E-02;
  COFD[6096] = -2.14246978E+01;
  COFD[6097] = 5.37331605E+00;
  COFD[6098] = -4.70491203E-01;
  COFD[6099] = 1.99134666E-02;
  COFD[6100] = -2.01283319E+01;
  COFD[6101] = 5.03101171E+00;
  COFD[6102] = -4.32665019E-01;
  COFD[6103] = 1.85372086E-02;
  COFD[6104] = -2.14369847E+01;
  COFD[6105] = 5.37331605E+00;
  COFD[6106] = -4.70491203E-01;
  COFD[6107] = 1.99134666E-02;
  COFD[6108] = -2.21676727E+01;
  COFD[6109] = 5.51146842E+00;
  COFD[6110] = -4.83562214E-01;
  COFD[6111] = 2.02866024E-02;
  COFD[6112] = -2.23903039E+01;
  COFD[6113] = 5.56066804E+00;
  COFD[6114] = -4.88405706E-01;
  COFD[6115] = 2.04357330E-02;
  COFD[6116] = -2.24022848E+01;
  COFD[6117] = 5.56066804E+00;
  COFD[6118] = -4.88405706E-01;
  COFD[6119] = 2.04357330E-02;
  COFD[6120] = -2.20033786E+01;
  COFD[6121] = 5.51276597E+00;
  COFD[6122] = -4.83701824E-01;
  COFD[6123] = 2.02915297E-02;
  COFD[6124] = -2.21742398E+01;
  COFD[6125] = 5.51146842E+00;
  COFD[6126] = -4.83562214E-01;
  COFD[6127] = 2.02866024E-02;
  COFD[6128] = -2.21742398E+01;
  COFD[6129] = 5.51146842E+00;
  COFD[6130] = -4.83562214E-01;
  COFD[6131] = 2.02866024E-02;
  COFD[6132] = -2.27843604E+01;
  COFD[6133] = 5.43128350E+00;
  COFD[6134] = -4.49151750E-01;
  COFD[6135] = 1.78402439E-02;
  COFD[6136] = -2.27820771E+01;
  COFD[6137] = 5.43128350E+00;
  COFD[6138] = -4.49151750E-01;
  COFD[6139] = 1.78402439E-02;
  COFD[6140] = -2.28455969E+01;
  COFD[6141] = 5.54010119E+00;
  COFD[6142] = -4.70485703E-01;
  COFD[6143] = 1.90527349E-02;
  COFD[6144] = -2.23964020E+01;
  COFD[6145] = 5.56066804E+00;
  COFD[6146] = -4.88405706E-01;
  COFD[6147] = 2.04357330E-02;
  COFD[6148] = -2.27634857E+01;
  COFD[6149] = 5.58430281E+00;
  COFD[6150] = -4.82320492E-01;
  COFD[6151] = 1.98084938E-02;
  COFD[6152] = -2.28485995E+01;
  COFD[6153] = 5.54010119E+00;
  COFD[6154] = -4.70485703E-01;
  COFD[6155] = 1.90527349E-02;
  COFD[6156] = -2.23086831E+01;
  COFD[6157] = 5.00145214E+00;
  COFD[6158] = -3.76474258E-01;
  COFD[6159] = 1.40201948E-02;
  COFD[6160] = -2.29490924E+01;
  COFD[6161] = 5.56795431E+00;
  COFD[6162] = -4.75760453E-01;
  COFD[6163] = 1.93477277E-02;
  COFD[6164] = -2.27932106E+01;
  COFD[6165] = 5.48514378E+00;
  COFD[6166] = -4.58915491E-01;
  COFD[6167] = 1.83744841E-02;
  COFD[6168] = -2.26670490E+01;
  COFD[6169] = 5.23950074E+00;
  COFD[6170] = -4.15701072E-01;
  COFD[6171] = 1.60501523E-02;
  COFD[6172] = -2.27963983E+01;
  COFD[6173] = 5.36784270E+00;
  COFD[6174] = -4.37680260E-01;
  COFD[6175] = 1.72142944E-02;
  COFD[6176] = -2.28192226E+01;
  COFD[6177] = 5.36784270E+00;
  COFD[6178] = -4.37680260E-01;
  COFD[6179] = 1.72142944E-02;
  COFD[6180] = -2.27981291E+01;
  COFD[6181] = 5.36784270E+00;
  COFD[6182] = -4.37680260E-01;
  COFD[6183] = 1.72142944E-02;
  COFD[6184] = -2.30185990E+01;
  COFD[6185] = 5.44285423E+00;
  COFD[6186] = -4.51235128E-01;
  COFD[6187] = 1.79537737E-02;
  COFD[6188] = -2.30200994E+01;
  COFD[6189] = 5.44285423E+00;
  COFD[6190] = -4.51235128E-01;
  COFD[6191] = 1.79537737E-02;
  COFD[6192] = -2.26453315E+01;
  COFD[6193] = 5.26148618E+00;
  COFD[6194] = -4.19570725E-01;
  COFD[6195] = 1.62579061E-02;
  COFD[6196] = -2.23077045E+01;
  COFD[6197] = 5.00145214E+00;
  COFD[6198] = -3.76474258E-01;
  COFD[6199] = 1.40201948E-02;
  COFD[6200] = -2.26467836E+01;
  COFD[6201] = 5.26148618E+00;
  COFD[6202] = -4.19570725E-01;
  COFD[6203] = 1.62579061E-02;
  COFD[6204] = -1.97444557E+01;
  COFD[6205] = 4.80962620E+00;
  COFD[6206] = -4.06326592E-01;
  COFD[6207] = 1.74909207E-02;
  COFD[6208] = -2.08699022E+01;
  COFD[6209] = 5.26420155E+00;
  COFD[6210] = -4.58839834E-01;
  COFD[6211] = 1.95083084E-02;
  COFD[6212] = -2.08699022E+01;
  COFD[6213] = 5.26420155E+00;
  COFD[6214] = -4.58839834E-01;
  COFD[6215] = 1.95083084E-02;
  COFD[6216] = -1.86278365E+01;
  COFD[6217] = 4.56231943E+00;
  COFD[6218] = -3.76598126E-01;
  COFD[6219] = 1.62971663E-02;
  COFD[6220] = -1.51762239E+01;
  COFD[6221] = 3.62387858E+00;
  COFD[6222] = -2.59147649E-01;
  COFD[6223] = 1.13785675E-02;
  COFD[6224] = -1.92471097E+01;
  COFD[6225] = 5.27454331E+00;
  COFD[6226] = -4.60071133E-01;
  COFD[6227] = 1.95573229E-02;
  COFD[6228] = -1.86514447E+01;
  COFD[6229] = 4.56231943E+00;
  COFD[6230] = -3.76598126E-01;
  COFD[6231] = 1.62971663E-02;
  COFD[6232] = -2.03016649E+01;
  COFD[6233] = 4.57892805E+00;
  COFD[6234] = -3.10998994E-01;
  COFD[6235] = 1.07645466E-02;
  COFD[6236] = -2.01104770E+01;
  COFD[6237] = 4.93587605E+00;
  COFD[6238] = -4.21407938E-01;
  COFD[6239] = 1.80924887E-02;
  COFD[6240] = -2.01165408E+01;
  COFD[6241] = 4.93460038E+00;
  COFD[6242] = -4.21256825E-01;
  COFD[6243] = 1.80865117E-02;
  COFD[6244] = -1.85458812E+01;
  COFD[6245] = 4.56231943E+00;
  COFD[6246] = -3.76598126E-01;
  COFD[6247] = 1.62971663E-02;
  COFD[6248] = -1.97700036E+01;
  COFD[6249] = 4.81610679E+00;
  COFD[6250] = -4.07083368E-01;
  COFD[6251] = 1.75203357E-02;
  COFD[6252] = -2.14469888E+01;
  COFD[6253] = 4.94662277E+00;
  COFD[6254] = -3.67818431E-01;
  COFD[6255] = 1.35837544E-02;
  COFD[6256] = -2.14581766E+01;
  COFD[6257] = 4.94662277E+00;
  COFD[6258] = -3.67818431E-01;
  COFD[6259] = 1.35837544E-02;
  COFD[6260] = -2.08974656E+01;
  COFD[6261] = 5.26420155E+00;
  COFD[6262] = -4.58839834E-01;
  COFD[6263] = 1.95083084E-02;
  COFD[6264] = -2.24870015E+01;
  COFD[6265] = 5.60571852E+00;
  COFD[6266] = -4.88813595E-01;
  COFD[6267] = 2.02394376E-02;
  COFD[6268] = -2.08422358E+01;
  COFD[6269] = 5.24054443E+00;
  COFD[6270] = -4.56059385E-01;
  COFD[6271] = 1.93992107E-02;
  COFD[6272] = -2.21968872E+01;
  COFD[6273] = 5.56964344E+00;
  COFD[6274] = -4.89130645E-01;
  COFD[6275] = 2.04497328E-02;
  COFD[6276] = -2.24750542E+01;
  COFD[6277] = 5.58517115E+00;
  COFD[6278] = -4.80469231E-01;
  COFD[6279] = 1.96503120E-02;
  COFD[6280] = -2.24735925E+01;
  COFD[6281] = 5.59125763E+00;
  COFD[6282] = -4.85543279E-01;
  COFD[6283] = 2.00415309E-02;
  COFD[6284] = -2.21704267E+01;
  COFD[6285] = 5.56964344E+00;
  COFD[6286] = -4.89130645E-01;
  COFD[6287] = 2.04497328E-02;
  COFD[6288] = -2.11008574E+01;
  COFD[6289] = 5.32505336E+00;
  COFD[6290] = -4.66130047E-01;
  COFD[6291] = 1.98010949E-02;
  COFD[6292] = -2.21839942E+01;
  COFD[6293] = 5.56964344E+00;
  COFD[6294] = -4.89130645E-01;
  COFD[6295] = 2.04497328E-02;
  COFD[6296] = -2.26612301E+01;
  COFD[6297] = 5.59174979E+00;
  COFD[6298] = -4.85658671E-01;
  COFD[6299] = 2.00486161E-02;
  COFD[6300] = -2.27565225E+01;
  COFD[6301] = 5.58430281E+00;
  COFD[6302] = -4.82320492E-01;
  COFD[6303] = 1.98084938E-02;
  COFD[6304] = -2.27702146E+01;
  COFD[6305] = 5.58430281E+00;
  COFD[6306] = -4.82320492E-01;
  COFD[6307] = 1.98084938E-02;
  COFD[6308] = -2.24847579E+01;
  COFD[6309] = 5.59125763E+00;
  COFD[6310] = -4.85543279E-01;
  COFD[6311] = 2.00415309E-02;
  COFD[6312] = -2.26687024E+01;
  COFD[6313] = 5.59174979E+00;
  COFD[6314] = -4.85658671E-01;
  COFD[6315] = 2.00486161E-02;
  COFD[6316] = -2.26687024E+01;
  COFD[6317] = 5.59174979E+00;
  COFD[6318] = -4.85658671E-01;
  COFD[6319] = 2.00486161E-02;
  COFD[6320] = -2.23372414E+01;
  COFD[6321] = 5.08752431E+00;
  COFD[6322] = -3.90352499E-01;
  COFD[6323] = 1.47287803E-02;
  COFD[6324] = -2.23345164E+01;
  COFD[6325] = 5.08752431E+00;
  COFD[6326] = -3.90352499E-01;
  COFD[6327] = 1.47287803E-02;
  COFD[6328] = -2.26523561E+01;
  COFD[6329] = 5.30882790E+00;
  COFD[6330] = -4.27583632E-01;
  COFD[6331] = 1.66798412E-02;
  COFD[6332] = -2.27634857E+01;
  COFD[6333] = 5.58430281E+00;
  COFD[6334] = -4.82320492E-01;
  COFD[6335] = 1.98084938E-02;
  COFD[6336] = -2.28186617E+01;
  COFD[6337] = 5.46393244E+00;
  COFD[6338] = -4.55281992E-01;
  COFD[6339] = 1.81816016E-02;
  COFD[6340] = -2.26558982E+01;
  COFD[6341] = 5.30882790E+00;
  COFD[6342] = -4.27583632E-01;
  COFD[6343] = 1.66798412E-02;
  COFD[6344] = -2.12739341E+01;
  COFD[6345] = 4.40206167E+00;
  COFD[6346] = -2.82080836E-01;
  COFD[6347] = 9.27666397E-03;
  COFD[6348] = -2.27852418E+01;
  COFD[6349] = 5.34910833E+00;
  COFD[6350] = -4.34670495E-01;
  COFD[6351] = 1.70607865E-02;
  COFD[6352] = -2.24284014E+01;
  COFD[6353] = 5.17819498E+00;
  COFD[6354] = -4.05307035E-01;
  COFD[6355] = 1.55033545E-02;
  COFD[6356] = -2.18663481E+01;
  COFD[6357] = 4.74224227E+00;
  COFD[6358] = -3.35479019E-01;
  COFD[6359] = 1.19526885E-02;
  COFD[6360] = -2.21898890E+01;
  COFD[6361] = 4.95483060E+00;
  COFD[6362] = -3.69235112E-01;
  COFD[6363] = 1.36591532E-02;
  COFD[6364] = -2.22175548E+01;
  COFD[6365] = 4.95483060E+00;
  COFD[6366] = -3.69235112E-01;
  COFD[6367] = 1.36591532E-02;
  COFD[6368] = -2.21919778E+01;
  COFD[6369] = 4.95483060E+00;
  COFD[6370] = -3.69235112E-01;
  COFD[6371] = 1.36591532E-02;
  COFD[6372] = -2.26042714E+01;
  COFD[6373] = 5.11098789E+00;
  COFD[6374] = -3.94152299E-01;
  COFD[6375] = 1.49235263E-02;
  COFD[6376] = -2.26060919E+01;
  COFD[6377] = 5.11098789E+00;
  COFD[6378] = -3.94152299E-01;
  COFD[6379] = 1.49235263E-02;
  COFD[6380] = -2.18643476E+01;
  COFD[6381] = 4.77317111E+00;
  COFD[6382] = -3.40643783E-01;
  COFD[6383] = 1.22214470E-02;
  COFD[6384] = -2.12727289E+01;
  COFD[6385] = 4.40206167E+00;
  COFD[6386] = -2.82080836E-01;
  COFD[6387] = 9.27666397E-03;
  COFD[6388] = -2.18661116E+01;
  COFD[6389] = 4.77317111E+00;
  COFD[6390] = -3.40643783E-01;
  COFD[6391] = 1.22214470E-02;
  COFD[6392] = -2.03367971E+01;
  COFD[6393] = 4.99860239E+00;
  COFD[6394] = -4.28838375E-01;
  COFD[6395] = 1.83863470E-02;
  COFD[6396] = -2.13176686E+01;
  COFD[6397] = 5.38948949E+00;
  COFD[6398] = -4.71682699E-01;
  COFD[6399] = 1.99285168E-02;
  COFD[6400] = -2.13176686E+01;
  COFD[6401] = 5.38948949E+00;
  COFD[6402] = -4.71682699E-01;
  COFD[6403] = 1.99285168E-02;
  COFD[6404] = -1.92007610E+01;
  COFD[6405] = 4.74919572E+00;
  COFD[6406] = -3.99211884E-01;
  COFD[6407] = 1.72117130E-02;
  COFD[6408] = -1.56672144E+01;
  COFD[6409] = 3.79329365E+00;
  COFD[6410] = -2.80475006E-01;
  COFD[6411] = 1.22752392E-02;
  COFD[6412] = -1.96713768E+01;
  COFD[6413] = 5.39317138E+00;
  COFD[6414] = -4.71974590E-01;
  COFD[6415] = 1.99337334E-02;
  COFD[6416] = -1.92252091E+01;
  COFD[6417] = 4.74919572E+00;
  COFD[6418] = -3.99211884E-01;
  COFD[6419] = 1.72117130E-02;
  COFD[6420] = -1.97523457E+01;
  COFD[6421] = 4.26375568E+00;
  COFD[6422] = -2.60883263E-01;
  COFD[6423] = 8.23169934E-03;
  COFD[6424] = -2.06870494E+01;
  COFD[6425] = 5.11611668E+00;
  COFD[6426] = -4.42629845E-01;
  COFD[6427] = 1.89266956E-02;
  COFD[6428] = -2.06974460E+01;
  COFD[6429] = 5.11611668E+00;
  COFD[6430] = -4.42629845E-01;
  COFD[6431] = 1.89266956E-02;
  COFD[6432] = -1.91161885E+01;
  COFD[6433] = 4.74919572E+00;
  COFD[6434] = -3.99211884E-01;
  COFD[6435] = 1.72117130E-02;
  COFD[6436] = -2.03657619E+01;
  COFD[6437] = 5.00646405E+00;
  COFD[6438] = -4.29778163E-01;
  COFD[6439] = 1.84239285E-02;
  COFD[6440] = -2.08828329E+01;
  COFD[6441] = 4.62431107E+00;
  COFD[6442] = -3.16767061E-01;
  COFD[6443] = 1.10078524E-02;
  COFD[6444] = -2.08946359E+01;
  COFD[6445] = 4.62431107E+00;
  COFD[6446] = -3.16767061E-01;
  COFD[6447] = 1.10078524E-02;
  COFD[6448] = -2.13461164E+01;
  COFD[6449] = 5.38948949E+00;
  COFD[6450] = -4.71682699E-01;
  COFD[6451] = 1.99285168E-02;
  COFD[6452] = -2.26310539E+01;
  COFD[6453] = 5.58503543E+00;
  COFD[6454] = -4.80244152E-01;
  COFD[6455] = 1.96323422E-02;
  COFD[6456] = -2.13239166E+01;
  COFD[6457] = 5.38005505E+00;
  COFD[6458] = -4.70960934E-01;
  COFD[6459] = 1.99174610E-02;
  COFD[6460] = -2.24598329E+01;
  COFD[6461] = 5.60901522E+00;
  COFD[6462] = -4.89632587E-01;
  COFD[6463] = 2.02906018E-02;
  COFD[6464] = -2.24710030E+01;
  COFD[6465] = 5.50462612E+00;
  COFD[6466] = -4.63455030E-01;
  COFD[6467] = 1.86507367E-02;
  COFD[6468] = -2.26333080E+01;
  COFD[6469] = 5.58066442E+00;
  COFD[6470] = -4.78358496E-01;
  COFD[6471] = 1.94983439E-02;
  COFD[6472] = -2.24320410E+01;
  COFD[6473] = 5.60901522E+00;
  COFD[6474] = -4.89632587E-01;
  COFD[6475] = 2.02906018E-02;
  COFD[6476] = -2.14730716E+01;
  COFD[6477] = 5.40830928E+00;
  COFD[6478] = -4.72988519E-01;
  COFD[6479] = 1.99395140E-02;
  COFD[6480] = -2.24462820E+01;
  COFD[6481] = 5.60901522E+00;
  COFD[6482] = -4.89632587E-01;
  COFD[6483] = 2.02906018E-02;
  COFD[6484] = -2.28250397E+01;
  COFD[6485] = 5.58100780E+00;
  COFD[6486] = -4.78452463E-01;
  COFD[6487] = 1.95043836E-02;
  COFD[6488] = -2.28411574E+01;
  COFD[6489] = 5.54010119E+00;
  COFD[6490] = -4.70485703E-01;
  COFD[6491] = 1.90527349E-02;
  COFD[6492] = -2.28557980E+01;
  COFD[6493] = 5.54010119E+00;
  COFD[6494] = -4.70485703E-01;
  COFD[6495] = 1.90527349E-02;
  COFD[6496] = -2.26450880E+01;
  COFD[6497] = 5.58066442E+00;
  COFD[6498] = -4.78358496E-01;
  COFD[6499] = 1.94983439E-02;
  COFD[6500] = -2.28330103E+01;
  COFD[6501] = 5.58100780E+00;
  COFD[6502] = -4.78452463E-01;
  COFD[6503] = 1.95043836E-02;
  COFD[6504] = -2.28330103E+01;
  COFD[6505] = 5.58100780E+00;
  COFD[6506] = -4.78452463E-01;
  COFD[6507] = 1.95043836E-02;
  COFD[6508] = -2.18079943E+01;
  COFD[6509] = 4.77394082E+00;
  COFD[6510] = -3.40515557E-01;
  COFD[6511] = 1.22069084E-02;
  COFD[6512] = -2.18050073E+01;
  COFD[6513] = 4.77394082E+00;
  COFD[6514] = -3.40515557E-01;
  COFD[6515] = 1.22069084E-02;
  COFD[6516] = -2.23617539E+01;
  COFD[6517] = 5.09740001E+00;
  COFD[6518] = -3.91951330E-01;
  COFD[6519] = 1.48106977E-02;
  COFD[6520] = -2.28485995E+01;
  COFD[6521] = 5.54010119E+00;
  COFD[6522] = -4.70485703E-01;
  COFD[6523] = 1.90527349E-02;
  COFD[6524] = -2.26558982E+01;
  COFD[6525] = 5.30882790E+00;
  COFD[6526] = -4.27583632E-01;
  COFD[6527] = 1.66798412E-02;
  COFD[6528] = -2.23656102E+01;
  COFD[6529] = 5.09740001E+00;
  COFD[6530] = -3.91951330E-01;
  COFD[6531] = 1.48106977E-02;
  COFD[6532] = -2.03905436E+01;
  COFD[6533] = 3.93738709E+00;
  COFD[6534] = -2.11564714E-01;
  COFD[6535] = 5.82251403E-03;
  COFD[6536] = -2.25411245E+01;
  COFD[6537] = 5.15728857E+00;
  COFD[6538] = -4.01806783E-01;
  COFD[6539] = 1.53204421E-02;
  COFD[6540] = -2.19632444E+01;
  COFD[6541] = 4.89153228E+00;
  COFD[6542] = -3.59130678E-01;
  COFD[6543] = 1.31462184E-02;
  COFD[6544] = -2.12670711E+01;
  COFD[6545] = 4.39682936E+00;
  COFD[6546] = -2.81277011E-01;
  COFD[6547] = 9.23692902E-03;
  COFD[6548] = -2.16525653E+01;
  COFD[6549] = 4.63605764E+00;
  COFD[6550] = -3.18638225E-01;
  COFD[6551] = 1.11025963E-02;
  COFD[6552] = -2.16831767E+01;
  COFD[6553] = 4.63605764E+00;
  COFD[6554] = -3.18638225E-01;
  COFD[6555] = 1.11025963E-02;
  COFD[6556] = -2.16548702E+01;
  COFD[6557] = 4.63605764E+00;
  COFD[6558] = -3.18638225E-01;
  COFD[6559] = 1.11025963E-02;
  COFD[6560] = -2.20756458E+01;
  COFD[6561] = 4.79594018E+00;
  COFD[6562] = -3.44052659E-01;
  COFD[6563] = 1.23869631E-02;
  COFD[6564] = -2.20776612E+01;
  COFD[6565] = 4.79594018E+00;
  COFD[6566] = -3.44052659E-01;
  COFD[6567] = 1.23869631E-02;
  COFD[6568] = -2.13255977E+01;
  COFD[6569] = 4.45290995E+00;
  COFD[6570] = -2.89908411E-01;
  COFD[6571] = 9.66407483E-03;
  COFD[6572] = -2.03891969E+01;
  COFD[6573] = 3.93738709E+00;
  COFD[6574] = -2.11564714E-01;
  COFD[6575] = 5.82251403E-03;
  COFD[6576] = -2.13275520E+01;
  COFD[6577] = 4.45290995E+00;
  COFD[6578] = -2.89908411E-01;
  COFD[6579] = 9.66407483E-03;
  COFD[6580] = -2.19467845E+01;
  COFD[6581] = 5.41691945E+00;
  COFD[6582] = -4.73388270E-01;
  COFD[6583] = 1.99279280E-02;
  COFD[6584] = -2.24065536E+01;
  COFD[6585] = 5.58316712E+00;
  COFD[6586] = -4.82794221E-01;
  COFD[6587] = 1.98538380E-02;
  COFD[6588] = -2.24065536E+01;
  COFD[6589] = 5.58316712E+00;
  COFD[6590] = -4.82794221E-01;
  COFD[6591] = 1.98538380E-02;
  COFD[6592] = -2.10543836E+01;
  COFD[6593] = 5.28406281E+00;
  COFD[6594] = -4.61218665E-01;
  COFD[6595] = 1.96036779E-02;
  COFD[6596] = -1.75094407E+01;
  COFD[6597] = 4.38503692E+00;
  COFD[6598] = -3.55082200E-01;
  COFD[6599] = 1.54254372E-02;
  COFD[6600] = -2.07600666E+01;
  COFD[6601] = 5.58361212E+00;
  COFD[6602] = -4.82575879E-01;
  COFD[6603] = 1.98332857E-02;
  COFD[6604] = -2.10814494E+01;
  COFD[6605] = 5.28406281E+00;
  COFD[6606] = -4.61218665E-01;
  COFD[6607] = 1.96036779E-02;
  COFD[6608] = -1.51960800E+01;
  COFD[6609] = 1.97841280E+00;
  COFD[6610] = 7.85094165E-02;
  COFD[6611] = -8.10071182E-03;
  COFD[6612] = -2.22871848E+01;
  COFD[6613] = 5.51906049E+00;
  COFD[6614] = -4.84378475E-01;
  COFD[6615] = 2.03153818E-02;
  COFD[6616] = -2.22995560E+01;
  COFD[6617] = 5.51906049E+00;
  COFD[6618] = -4.84378475E-01;
  COFD[6619] = 2.03153818E-02;
  COFD[6620] = -2.09617685E+01;
  COFD[6621] = 5.28406281E+00;
  COFD[6622] = -4.61218665E-01;
  COFD[6623] = 1.96036779E-02;
  COFD[6624] = -2.19612971E+01;
  COFD[6625] = 5.41868079E+00;
  COFD[6626] = -4.73445943E-01;
  COFD[6627] = 1.99235961E-02;
  COFD[6628] = -1.82793938E+01;
  COFD[6629] = 3.21736474E+00;
  COFD[6630] = -1.03272422E-01;
  COFD[6631] = 5.63117513E-04;
  COFD[6632] = -1.82932715E+01;
  COFD[6633] = 3.21736474E+00;
  COFD[6634] = -1.03272422E-01;
  COFD[6635] = 5.63117513E-04;
  COFD[6636] = -2.24377202E+01;
  COFD[6637] = 5.58316712E+00;
  COFD[6638] = -4.82794221E-01;
  COFD[6639] = 1.98538380E-02;
  COFD[6640] = -2.23878763E+01;
  COFD[6641] = 5.16350806E+00;
  COFD[6642] = -4.02853220E-01;
  COFD[6643] = 1.53752462E-02;
  COFD[6644] = -2.24418715E+01;
  COFD[6645] = 5.58455232E+00;
  COFD[6646] = -4.83725835E-01;
  COFD[6647] = 1.99244840E-02;
  COFD[6648] = -2.26031516E+01;
  COFD[6649] = 5.37189964E+00;
  COFD[6650] = -4.38371109E-01;
  COFD[6651] = 1.72507977E-02;
  COFD[6652] = -2.17293603E+01;
  COFD[6653] = 4.88252869E+00;
  COFD[6654] = -3.57706506E-01;
  COFD[6655] = 1.30744059E-02;
  COFD[6656] = -2.22360373E+01;
  COFD[6657] = 5.10895195E+00;
  COFD[6658] = -3.93822647E-01;
  COFD[6659] = 1.49066324E-02;
  COFD[6660] = -2.25709562E+01;
  COFD[6661] = 5.37189964E+00;
  COFD[6662] = -4.38371109E-01;
  COFD[6663] = 1.72507977E-02;
  COFD[6664] = -2.26193014E+01;
  COFD[6665] = 5.58499587E+00;
  COFD[6666] = -4.81446176E-01;
  COFD[6667] = 1.97322465E-02;
  COFD[6668] = -2.25874182E+01;
  COFD[6669] = 5.37189964E+00;
  COFD[6670] = -4.38371109E-01;
  COFD[6671] = 1.72507977E-02;
  COFD[6672] = -2.24428097E+01;
  COFD[6673] = 5.11126858E+00;
  COFD[6674] = -3.94197754E-01;
  COFD[6675] = 1.49258559E-02;
  COFD[6676] = -2.22995295E+01;
  COFD[6677] = 5.00145214E+00;
  COFD[6678] = -3.76474258E-01;
  COFD[6679] = 1.40201948E-02;
  COFD[6680] = -2.23175673E+01;
  COFD[6681] = 5.00145214E+00;
  COFD[6682] = -3.76474258E-01;
  COFD[6683] = 1.40201948E-02;
  COFD[6684] = -2.22498904E+01;
  COFD[6685] = 5.10895195E+00;
  COFD[6686] = -3.93822647E-01;
  COFD[6687] = 1.49066324E-02;
  COFD[6688] = -2.24525454E+01;
  COFD[6689] = 5.11126858E+00;
  COFD[6690] = -3.94197754E-01;
  COFD[6691] = 1.49258559E-02;
  COFD[6692] = -2.24525454E+01;
  COFD[6693] = 5.11126858E+00;
  COFD[6694] = -3.94197754E-01;
  COFD[6695] = 1.49258559E-02;
  COFD[6696] = -1.94917630E+01;
  COFD[6697] = 3.46782579E+00;
  COFD[6698] = -1.40466854E-01;
  COFD[6699] = 2.35226276E-03;
  COFD[6700] = -1.94877181E+01;
  COFD[6701] = 3.46782579E+00;
  COFD[6702] = -1.40466854E-01;
  COFD[6703] = 2.35226276E-03;
  COFD[6704] = -2.03854614E+01;
  COFD[6705] = 3.93738709E+00;
  COFD[6706] = -2.11564714E-01;
  COFD[6707] = 5.82251403E-03;
  COFD[6708] = -2.23086831E+01;
  COFD[6709] = 5.00145214E+00;
  COFD[6710] = -3.76474258E-01;
  COFD[6711] = 1.40201948E-02;
  COFD[6712] = -2.12739341E+01;
  COFD[6713] = 4.40206167E+00;
  COFD[6714] = -2.82080836E-01;
  COFD[6715] = 9.27666397E-03;
  COFD[6716] = -2.03905436E+01;
  COFD[6717] = 3.93738709E+00;
  COFD[6718] = -2.11564714E-01;
  COFD[6719] = 5.82251403E-03;
  COFD[6720] = -1.71441857E+01;
  COFD[6721] = 2.24264041E+00;
  COFD[6722] = 4.01129596E-02;
  COFD[6723] = -6.28731339E-03;
  COFD[6724] = -2.07022724E+01;
  COFD[6725] = 4.05358575E+00;
  COFD[6726] = -2.29089538E-01;
  COFD[6727] = 6.67706929E-03;
  COFD[6728] = -1.98399333E+01;
  COFD[6729] = 3.66741345E+00;
  COFD[6730] = -1.70294153E-01;
  COFD[6731] = 3.79604426E-03;
  COFD[6732] = -1.82955314E+01;
  COFD[6733] = 2.81782887E+00;
  COFD[6734] = -4.45806084E-02;
  COFD[6735] = -2.24026517E-03;
  COFD[6736] = -1.91071436E+01;
  COFD[6737] = 3.23347145E+00;
  COFD[6738] = -1.05661046E-01;
  COFD[6739] = 6.77853205E-04;
  COFD[6740] = -1.91502271E+01;
  COFD[6741] = 3.23347145E+00;
  COFD[6742] = -1.05661046E-01;
  COFD[6743] = 6.77853205E-04;
  COFD[6744] = -1.91103508E+01;
  COFD[6745] = 3.23347145E+00;
  COFD[6746] = -1.05661046E-01;
  COFD[6747] = 6.77853205E-04;
  COFD[6748] = -1.98144876E+01;
  COFD[6749] = 3.51050013E+00;
  COFD[6750] = -1.46814800E-01;
  COFD[6751] = 2.65826831E-03;
  COFD[6752] = -1.98173310E+01;
  COFD[6753] = 3.51050013E+00;
  COFD[6754] = -1.46814800E-01;
  COFD[6755] = 2.65826831E-03;
  COFD[6756] = -1.84218513E+01;
  COFD[6757] = 2.89954031E+00;
  COFD[6758] = -5.65611695E-02;
  COFD[6759] = -1.66809604E-03;
  COFD[6760] = -1.71422079E+01;
  COFD[6761] = 2.24264041E+00;
  COFD[6762] = 4.01129596E-02;
  COFD[6763] = -6.28731339E-03;
  COFD[6764] = -1.84246173E+01;
  COFD[6765] = 2.89954031E+00;
  COFD[6766] = -5.65611695E-02;
  COFD[6767] = -1.66809604E-03;
  COFD[6768] = -2.02840316E+01;
  COFD[6769] = 4.95484018E+00;
  COFD[6770] = -4.23654881E-01;
  COFD[6771] = 1.81813866E-02;
  COFD[6772] = -2.13171664E+01;
  COFD[6773] = 5.37197338E+00;
  COFD[6774] = -4.70392872E-01;
  COFD[6775] = 1.99122802E-02;
  COFD[6776] = -2.13171664E+01;
  COFD[6777] = 5.37197338E+00;
  COFD[6778] = -4.70392872E-01;
  COFD[6779] = 1.99122802E-02;
  COFD[6780] = -1.91632977E+01;
  COFD[6781] = 4.70966098E+00;
  COFD[6782] = -3.94551217E-01;
  COFD[6783] = 1.70286289E-02;
  COFD[6784] = -1.55782124E+01;
  COFD[6785] = 3.73153794E+00;
  COFD[6786] = -2.72372598E-01;
  COFD[6787] = 1.19199668E-02;
  COFD[6788] = -1.96804361E+01;
  COFD[6789] = 5.37526595E+00;
  COFD[6790] = -4.70621144E-01;
  COFD[6791] = 1.99141073E-02;
  COFD[6792] = -1.91880298E+01;
  COFD[6793] = 4.70966098E+00;
  COFD[6794] = -3.94551217E-01;
  COFD[6795] = 1.70286289E-02;
  COFD[6796] = -1.98762733E+01;
  COFD[6797] = 4.29984423E+00;
  COFD[6798] = -2.67672368E-01;
  COFD[6799] = 8.61066086E-03;
  COFD[6800] = -2.06463061E+01;
  COFD[6801] = 5.07657482E+00;
  COFD[6802] = -4.38028805E-01;
  COFD[6803] = 1.87481371E-02;
  COFD[6804] = -2.06522432E+01;
  COFD[6805] = 5.07501764E+00;
  COFD[6806] = -4.37846596E-01;
  COFD[6807] = 1.87410133E-02;
  COFD[6808] = -1.90778445E+01;
  COFD[6809] = 4.70966098E+00;
  COFD[6810] = -3.94551217E-01;
  COFD[6811] = 1.70286289E-02;
  COFD[6812] = -2.03122830E+01;
  COFD[6813] = 4.96244824E+00;
  COFD[6814] = -4.24554495E-01;
  COFD[6815] = 1.82168885E-02;
  COFD[6816] = -2.11071930E+01;
  COFD[6817] = 4.70311989E+00;
  COFD[6818] = -3.29240106E-01;
  COFD[6819] = 1.16366808E-02;
  COFD[6820] = -2.11192092E+01;
  COFD[6821] = 4.70311989E+00;
  COFD[6822] = -3.29240106E-01;
  COFD[6823] = 1.16366808E-02;
  COFD[6824] = -2.13459120E+01;
  COFD[6825] = 5.37197338E+00;
  COFD[6826] = -4.70392872E-01;
  COFD[6827] = 1.99122802E-02;
  COFD[6828] = -2.26749928E+01;
  COFD[6829] = 5.58486459E+00;
  COFD[6830] = -4.81517134E-01;
  COFD[6831] = 1.97388064E-02;
  COFD[6832] = -2.13282916E+01;
  COFD[6833] = 5.36375915E+00;
  COFD[6834] = -4.69808196E-01;
  COFD[6835] = 1.99064589E-02;
  COFD[6836] = -2.25079234E+01;
  COFD[6837] = 5.61234946E+00;
  COFD[6838] = -4.91326412E-01;
  COFD[6839] = 2.04139363E-02;
  COFD[6840] = -2.25623446E+01;
  COFD[6841] = 5.52760491E+00;
  COFD[6842] = -4.68101221E-01;
  COFD[6843] = 1.89188529E-02;
  COFD[6844] = -2.26807218E+01;
  COFD[6845] = 5.58509275E+00;
  COFD[6846] = -4.80315312E-01;
  COFD[6847] = 1.96379504E-02;
  COFD[6848] = -2.24796729E+01;
  COFD[6849] = 5.61234946E+00;
  COFD[6850] = -4.91326412E-01;
  COFD[6851] = 2.04139363E-02;
  COFD[6852] = -2.14935935E+01;
  COFD[6853] = 5.39257286E+00;
  COFD[6854] = -4.71929831E-01;
  COFD[6855] = 1.99331101E-02;
  COFD[6856] = -2.24941457E+01;
  COFD[6857] = 5.61234946E+00;
  COFD[6858] = -4.91326412E-01;
  COFD[6859] = 2.04139363E-02;
  COFD[6860] = -2.28709497E+01;
  COFD[6861] = 5.58512527E+00;
  COFD[6862] = -4.80365122E-01;
  COFD[6863] = 1.96419146E-02;
  COFD[6864] = -2.29414814E+01;
  COFD[6865] = 5.56795431E+00;
  COFD[6866] = -4.75760453E-01;
  COFD[6867] = 1.93477277E-02;
  COFD[6868] = -2.29564569E+01;
  COFD[6869] = 5.56795431E+00;
  COFD[6870] = -4.75760453E-01;
  COFD[6871] = 1.93477277E-02;
  COFD[6872] = -2.26927149E+01;
  COFD[6873] = 5.58509275E+00;
  COFD[6874] = -4.80315312E-01;
  COFD[6875] = 1.96379504E-02;
  COFD[6876] = -2.28790957E+01;
  COFD[6877] = 5.58512527E+00;
  COFD[6878] = -4.80365122E-01;
  COFD[6879] = 1.96419146E-02;
  COFD[6880] = -2.28790957E+01;
  COFD[6881] = 5.58512527E+00;
  COFD[6882] = -4.80365122E-01;
  COFD[6883] = 1.96419146E-02;
  COFD[6884] = -2.20193291E+01;
  COFD[6885] = 4.84785746E+00;
  COFD[6886] = -3.52235849E-01;
  COFD[6887] = 1.27987972E-02;
  COFD[6888] = -2.20162462E+01;
  COFD[6889] = 4.84785746E+00;
  COFD[6890] = -3.52235849E-01;
  COFD[6891] = 1.27987972E-02;
  COFD[6892] = -2.25371545E+01;
  COFD[6893] = 5.15728857E+00;
  COFD[6894] = -4.01806783E-01;
  COFD[6895] = 1.53204421E-02;
  COFD[6896] = -2.29490924E+01;
  COFD[6897] = 5.56795431E+00;
  COFD[6898] = -4.75760453E-01;
  COFD[6899] = 1.93477277E-02;
  COFD[6900] = -2.27852418E+01;
  COFD[6901] = 5.34910833E+00;
  COFD[6902] = -4.34670495E-01;
  COFD[6903] = 1.70607865E-02;
  COFD[6904] = -2.25411245E+01;
  COFD[6905] = 5.15728857E+00;
  COFD[6906] = -4.01806783E-01;
  COFD[6907] = 1.53204421E-02;
  COFD[6908] = -2.07022724E+01;
  COFD[6909] = 4.05358575E+00;
  COFD[6910] = -2.29089538E-01;
  COFD[6911] = 6.67706929E-03;
  COFD[6912] = -2.26855808E+01;
  COFD[6913] = 5.20461425E+00;
  COFD[6914] = -4.09923837E-01;
  COFD[6915] = 1.57504726E-02;
  COFD[6916] = -2.21931052E+01;
  COFD[6917] = 4.97373439E+00;
  COFD[6918] = -3.72089281E-01;
  COFD[6919] = 1.37987774E-02;
  COFD[6920] = -2.15225965E+01;
  COFD[6921] = 4.49068040E+00;
  COFD[6922] = -2.95818778E-01;
  COFD[6923] = 9.95955991E-03;
  COFD[6924] = -2.18597213E+01;
  COFD[6925] = 4.70975376E+00;
  COFD[6926] = -3.30443435E-01;
  COFD[6927] = 1.17023656E-02;
  COFD[6928] = -2.18914220E+01;
  COFD[6929] = 4.70975376E+00;
  COFD[6930] = -3.30443435E-01;
  COFD[6931] = 1.17023656E-02;
  COFD[6932] = -2.18621059E+01;
  COFD[6933] = 4.70975376E+00;
  COFD[6934] = -3.30443435E-01;
  COFD[6935] = 1.17023656E-02;
  COFD[6936] = -2.22981911E+01;
  COFD[6937] = 4.87626494E+00;
  COFD[6938] = -3.56718447E-01;
  COFD[6939] = 1.30246317E-02;
  COFD[6940] = -2.23002787E+01;
  COFD[6941] = 4.87626494E+00;
  COFD[6942] = -3.56718447E-01;
  COFD[6943] = 1.30246317E-02;
  COFD[6944] = -2.15500301E+01;
  COFD[6945] = 4.53381655E+00;
  COFD[6946] = -3.02724309E-01;
  COFD[6947] = 1.03102268E-02;
  COFD[6948] = -2.07008726E+01;
  COFD[6949] = 4.05358575E+00;
  COFD[6950] = -2.29089538E-01;
  COFD[6951] = 6.67706929E-03;
  COFD[6952] = -2.15520550E+01;
  COFD[6953] = 4.53381655E+00;
  COFD[6954] = -3.02724309E-01;
  COFD[6955] = 1.03102268E-02;
  COFD[6956] = -2.06548360E+01;
  COFD[6957] = 5.11678107E+00;
  COFD[6958] = -4.42706538E-01;
  COFD[6959] = 1.89296424E-02;
  COFD[6960] = -2.14920432E+01;
  COFD[6961] = 5.44385051E+00;
  COFD[6962] = -4.76121506E-01;
  COFD[6963] = 2.00164081E-02;
  COFD[6964] = -2.14920432E+01;
  COFD[6965] = 5.44385051E+00;
  COFD[6966] = -4.76121506E-01;
  COFD[6967] = 2.00164081E-02;
  COFD[6968] = -1.94778352E+01;
  COFD[6969] = 4.85518471E+00;
  COFD[6970] = -4.11551624E-01;
  COFD[6971] = 1.76895651E-02;
  COFD[6972] = -1.60461530E+01;
  COFD[6973] = 3.95298868E+00;
  COFD[6974] = -3.01302078E-01;
  COFD[6975] = 1.31842095E-02;
  COFD[6976] = -1.98424875E+01;
  COFD[6977] = 5.45215174E+00;
  COFD[6978] = -4.77051991E-01;
  COFD[6979] = 2.00510347E-02;
  COFD[6980] = -1.95026341E+01;
  COFD[6981] = 4.85518471E+00;
  COFD[6982] = -4.11551624E-01;
  COFD[6983] = 1.76895651E-02;
  COFD[6984] = -1.90375599E+01;
  COFD[6985] = 3.93604965E+00;
  COFD[6986] = -2.11360409E-01;
  COFD[6987] = 5.81247394E-03;
  COFD[6988] = -2.09258444E+01;
  COFD[6989] = 5.19811866E+00;
  COFD[6990] = -4.51121211E-01;
  COFD[6991] = 1.92074617E-02;
  COFD[6992] = -2.09364896E+01;
  COFD[6993] = 5.19811866E+00;
  COFD[6994] = -4.51121211E-01;
  COFD[6995] = 1.92074617E-02;
  COFD[6996] = -1.93921747E+01;
  COFD[6997] = 4.85518471E+00;
  COFD[6998] = -4.11551624E-01;
  COFD[6999] = 1.76895651E-02;
  COFD[7000] = -2.06812002E+01;
  COFD[7001] = 5.12346096E+00;
  COFD[7002] = -4.43477411E-01;
  COFD[7003] = 1.89592529E-02;
  COFD[7004] = -2.03849816E+01;
  COFD[7005] = 4.38396848E+00;
  COFD[7006] = -2.79298901E-01;
  COFD[7007] = 9.13915001E-03;
  COFD[7008] = -2.03970485E+01;
  COFD[7009] = 4.38396848E+00;
  COFD[7010] = -2.79298901E-01;
  COFD[7011] = 9.13915001E-03;
  COFD[7012] = -2.15208587E+01;
  COFD[7013] = 5.44385051E+00;
  COFD[7014] = -4.76121506E-01;
  COFD[7015] = 2.00164081E-02;
  COFD[7016] = -2.25786592E+01;
  COFD[7017] = 5.53409384E+00;
  COFD[7018] = -4.69342499E-01;
  COFD[7019] = 1.89886374E-02;
  COFD[7020] = -2.14671206E+01;
  COFD[7021] = 5.42109069E+00;
  COFD[7022] = -4.73533096E-01;
  COFD[7023] = 1.99183547E-02;
  COFD[7024] = -2.24661470E+01;
  COFD[7025] = 5.58420073E+00;
  COFD[7026] = -4.82356716E-01;
  COFD[7027] = 1.98120306E-02;
  COFD[7028] = -2.23720789E+01;
  COFD[7029] = 5.43334969E+00;
  COFD[7030] = -4.49523852E-01;
  COFD[7031] = 1.78605185E-02;
  COFD[7032] = -2.25317928E+01;
  COFD[7033] = 5.50894837E+00;
  COFD[7034] = -4.64480433E-01;
  COFD[7035] = 1.87138301E-02;
  COFD[7036] = -2.24377877E+01;
  COFD[7037] = 5.58420073E+00;
  COFD[7038] = -4.82356716E-01;
  COFD[7039] = 1.98120306E-02;
  COFD[7040] = -2.17210076E+01;
  COFD[7041] = 5.49225467E+00;
  COFD[7042] = -4.81478120E-01;
  COFD[7043] = 2.02123784E-02;
  COFD[7044] = -2.24523154E+01;
  COFD[7045] = 5.58420073E+00;
  COFD[7046] = -4.82356716E-01;
  COFD[7047] = 1.98120306E-02;
  COFD[7048] = -2.27282087E+01;
  COFD[7049] = 5.50962966E+00;
  COFD[7050] = -4.64625480E-01;
  COFD[7051] = 1.87223918E-02;
  COFD[7052] = -2.27855592E+01;
  COFD[7053] = 5.48514378E+00;
  COFD[7054] = -4.58915491E-01;
  COFD[7055] = 1.83744841E-02;
  COFD[7056] = -2.28006146E+01;
  COFD[7057] = 5.48514378E+00;
  COFD[7058] = -4.58915491E-01;
  COFD[7059] = 1.83744841E-02;
  COFD[7060] = -2.25438365E+01;
  COFD[7061] = 5.50894837E+00;
  COFD[7062] = -4.64480433E-01;
  COFD[7063] = 1.87138301E-02;
  COFD[7064] = -2.27363965E+01;
  COFD[7065] = 5.50962966E+00;
  COFD[7066] = -4.64625480E-01;
  COFD[7067] = 1.87223918E-02;
  COFD[7068] = -2.27363965E+01;
  COFD[7069] = 5.50962966E+00;
  COFD[7070] = -4.64625480E-01;
  COFD[7071] = 1.87223918E-02;
  COFD[7072] = -2.14018301E+01;
  COFD[7073] = 4.56581284E+00;
  COFD[7074] = -3.07475292E-01;
  COFD[7075] = 1.05390469E-02;
  COFD[7076] = -2.13987242E+01;
  COFD[7077] = 4.56581284E+00;
  COFD[7078] = -3.07475292E-01;
  COFD[7079] = 1.05390469E-02;
  COFD[7080] = -2.19592469E+01;
  COFD[7081] = 4.89153228E+00;
  COFD[7082] = -3.59130678E-01;
  COFD[7083] = 1.31462184E-02;
  COFD[7084] = -2.27932106E+01;
  COFD[7085] = 5.48514378E+00;
  COFD[7086] = -4.58915491E-01;
  COFD[7087] = 1.83744841E-02;
  COFD[7088] = -2.24284014E+01;
  COFD[7089] = 5.17819498E+00;
  COFD[7090] = -4.05307035E-01;
  COFD[7091] = 1.55033545E-02;
  COFD[7092] = -2.19632444E+01;
  COFD[7093] = 4.89153228E+00;
  COFD[7094] = -3.59130678E-01;
  COFD[7095] = 1.31462184E-02;
  COFD[7096] = -1.98399333E+01;
  COFD[7097] = 3.66741345E+00;
  COFD[7098] = -1.70294153E-01;
  COFD[7099] = 3.79604426E-03;
  COFD[7100] = -2.21931052E+01;
  COFD[7101] = 4.97373439E+00;
  COFD[7102] = -3.72089281E-01;
  COFD[7103] = 1.37987774E-02;
  COFD[7104] = -2.15488333E+01;
  COFD[7105] = 4.68075977E+00;
  COFD[7106] = -3.25704931E-01;
  COFD[7107] = 1.14585845E-02;
  COFD[7108] = -2.06475074E+01;
  COFD[7109] = 4.09796894E+00;
  COFD[7110] = -2.35777764E-01;
  COFD[7111] = 7.00343235E-03;
  COFD[7112] = -2.11804777E+01;
  COFD[7113] = 4.39928190E+00;
  COFD[7114] = -2.81653808E-01;
  COFD[7115] = 9.25555221E-03;
  COFD[7116] = -2.12124425E+01;
  COFD[7117] = 4.39928190E+00;
  COFD[7118] = -2.81653808E-01;
  COFD[7119] = 9.25555221E-03;
  COFD[7120] = -2.11828815E+01;
  COFD[7121] = 4.39928190E+00;
  COFD[7122] = -2.81653808E-01;
  COFD[7123] = 9.25555221E-03;
  COFD[7124] = -2.16820587E+01;
  COFD[7125] = 4.59101412E+00;
  COFD[7126] = -3.11439033E-01;
  COFD[7127] = 1.07377082E-02;
  COFD[7128] = -2.16841638E+01;
  COFD[7129] = 4.59101412E+00;
  COFD[7130] = -3.11439033E-01;
  COFD[7131] = 1.07377082E-02;
  COFD[7132] = -2.07265150E+01;
  COFD[7133] = 4.16273738E+00;
  COFD[7134] = -2.45570259E-01;
  COFD[7135] = 7.48180552E-03;
  COFD[7136] = -1.98385206E+01;
  COFD[7137] = 3.66741345E+00;
  COFD[7138] = -1.70294153E-01;
  COFD[7139] = 3.79604426E-03;
  COFD[7140] = -2.07285570E+01;
  COFD[7141] = 4.16273738E+00;
  COFD[7142] = -2.45570259E-01;
  COFD[7143] = 7.48180552E-03;
  COFD[7144] = -2.16195492E+01;
  COFD[7145] = 5.35046632E+00;
  COFD[7146] = -4.68831631E-01;
  COFD[7147] = 1.98945272E-02;
  COFD[7148] = -2.22853559E+01;
  COFD[7149] = 5.60551426E+00;
  COFD[7150] = -4.91233909E-01;
  COFD[7151] = 2.04408254E-02;
  COFD[7152] = -2.22853559E+01;
  COFD[7153] = 5.60551426E+00;
  COFD[7154] = -4.91233909E-01;
  COFD[7155] = 2.04408254E-02;
  COFD[7156] = -2.05384074E+01;
  COFD[7157] = 5.13291934E+00;
  COFD[7158] = -4.44486744E-01;
  COFD[7159] = 1.89941829E-02;
  COFD[7160] = -1.69934826E+01;
  COFD[7161] = 4.21540659E+00;
  COFD[7162] = -3.34315855E-01;
  COFD[7163] = 1.45759682E-02;
  COFD[7164] = -2.06454734E+01;
  COFD[7165] = 5.60786210E+00;
  COFD[7166] = -4.91331606E-01;
  COFD[7167] = 2.04370162E-02;
  COFD[7168] = -2.05647444E+01;
  COFD[7169] = 5.13291934E+00;
  COFD[7170] = -4.44486744E-01;
  COFD[7171] = 1.89941829E-02;
  COFD[7172] = -1.78076580E+01;
  COFD[7173] = 3.21999709E+00;
  COFD[7174] = -1.03955914E-01;
  COFD[7175] = 6.06304161E-04;
  COFD[7176] = -2.18249281E+01;
  COFD[7177] = 5.39808348E+00;
  COFD[7178] = -4.72285057E-01;
  COFD[7179] = 1.99339987E-02;
  COFD[7180] = -2.18365493E+01;
  COFD[7181] = 5.39804398E+00;
  COFD[7182] = -4.72282510E-01;
  COFD[7183] = 1.99339924E-02;
  COFD[7184] = -2.04480143E+01;
  COFD[7185] = 5.13291934E+00;
  COFD[7186] = -4.44486744E-01;
  COFD[7187] = 1.89941829E-02;
  COFD[7188] = -2.16378359E+01;
  COFD[7189] = 5.35375212E+00;
  COFD[7190] = -4.69097535E-01;
  COFD[7191] = 1.98995645E-02;
  COFD[7192] = -1.93060389E+01;
  COFD[7193] = 3.73166281E+00;
  COFD[7194] = -1.80044165E-01;
  COFD[7195] = 4.27250298E-03;
  COFD[7196] = -1.93193135E+01;
  COFD[7197] = 3.73166281E+00;
  COFD[7198] = -1.80044165E-01;
  COFD[7199] = 4.27250298E-03;
  COFD[7200] = -2.23157713E+01;
  COFD[7201] = 5.60551426E+00;
  COFD[7202] = -4.91233909E-01;
  COFD[7203] = 2.04408254E-02;
  COFD[7204] = -2.26364478E+01;
  COFD[7205] = 5.35655148E+00;
  COFD[7206] = -4.35749979E-01;
  COFD[7207] = 1.71121304E-02;
  COFD[7208] = -2.23101362E+01;
  COFD[7209] = 5.60228541E+00;
  COFD[7210] = -4.91417422E-01;
  COFD[7211] = 2.04726557E-02;
  COFD[7212] = -2.27119301E+01;
  COFD[7213] = 5.50057825E+00;
  COFD[7214] = -4.62242535E-01;
  COFD[7215] = 1.85709667E-02;
  COFD[7216] = -2.22029098E+01;
  COFD[7217] = 5.16779283E+00;
  COFD[7218] = -4.03572478E-01;
  COFD[7219] = 1.54128789E-02;
  COFD[7220] = -2.25212836E+01;
  COFD[7221] = 5.31381434E+00;
  COFD[7222] = -4.28421269E-01;
  COFD[7223] = 1.67237240E-02;
  COFD[7224] = -2.26810012E+01;
  COFD[7225] = 5.50057825E+00;
  COFD[7226] = -4.62242535E-01;
  COFD[7227] = 1.85709667E-02;
  COFD[7228] = -2.24824171E+01;
  COFD[7229] = 5.61201870E+00;
  COFD[7230] = -4.90765913E-01;
  COFD[7231] = 2.03692426E-02;
  COFD[7232] = -2.26968254E+01;
  COFD[7233] = 5.50057825E+00;
  COFD[7234] = -4.62242535E-01;
  COFD[7235] = 1.85709667E-02;
  COFD[7236] = -2.27224828E+01;
  COFD[7237] = 5.31550795E+00;
  COFD[7238] = -4.28706397E-01;
  COFD[7239] = 1.67386771E-02;
  COFD[7240] = -2.26584089E+01;
  COFD[7241] = 5.23950074E+00;
  COFD[7242] = -4.15701072E-01;
  COFD[7243] = 1.60501523E-02;
  COFD[7244] = -2.26754262E+01;
  COFD[7245] = 5.23950074E+00;
  COFD[7246] = -4.15701072E-01;
  COFD[7247] = 1.60501523E-02;
  COFD[7248] = -2.25345341E+01;
  COFD[7249] = 5.31381434E+00;
  COFD[7250] = -4.28421269E-01;
  COFD[7251] = 1.67237240E-02;
  COFD[7252] = -2.27316915E+01;
  COFD[7253] = 5.31550795E+00;
  COFD[7254] = -4.28706397E-01;
  COFD[7255] = 1.67386771E-02;
  COFD[7256] = -2.27316915E+01;
  COFD[7257] = 5.31550795E+00;
  COFD[7258] = -4.28706397E-01;
  COFD[7259] = 1.67386771E-02;
  COFD[7260] = -2.03436475E+01;
  COFD[7261] = 3.91745986E+00;
  COFD[7262] = -2.08522596E-01;
  COFD[7263] = 5.67308030E-03;
  COFD[7264] = -2.03399417E+01;
  COFD[7265] = 3.91745986E+00;
  COFD[7266] = -2.08522596E-01;
  COFD[7267] = 5.67308030E-03;
  COFD[7268] = -2.12623748E+01;
  COFD[7269] = 4.39682936E+00;
  COFD[7270] = -2.81277011E-01;
  COFD[7271] = 9.23692902E-03;
  COFD[7272] = -2.26670490E+01;
  COFD[7273] = 5.23950074E+00;
  COFD[7274] = -4.15701072E-01;
  COFD[7275] = 1.60501523E-02;
  COFD[7276] = -2.18663481E+01;
  COFD[7277] = 4.74224227E+00;
  COFD[7278] = -3.35479019E-01;
  COFD[7279] = 1.19526885E-02;
  COFD[7280] = -2.12670711E+01;
  COFD[7281] = 4.39682936E+00;
  COFD[7282] = -2.81277011E-01;
  COFD[7283] = 9.23692902E-03;
  COFD[7284] = -1.82955314E+01;
  COFD[7285] = 2.81782887E+00;
  COFD[7286] = -4.45806084E-02;
  COFD[7287] = -2.24026517E-03;
  COFD[7288] = -2.15225965E+01;
  COFD[7289] = 4.49068040E+00;
  COFD[7290] = -2.95818778E-01;
  COFD[7291] = 9.95955991E-03;
  COFD[7292] = -2.06475074E+01;
  COFD[7293] = 4.09796894E+00;
  COFD[7294] = -2.35777764E-01;
  COFD[7295] = 7.00343235E-03;
  COFD[7296] = -1.94761254E+01;
  COFD[7297] = 3.40358779E+00;
  COFD[7298] = -1.30923443E-01;
  COFD[7299] = 1.89326479E-03;
  COFD[7300] = -2.01090382E+01;
  COFD[7301] = 3.74633126E+00;
  COFD[7302] = -1.82313159E-01;
  COFD[7303] = 4.38484791E-03;
  COFD[7304] = -2.01480169E+01;
  COFD[7305] = 3.74633126E+00;
  COFD[7306] = -1.82313159E-01;
  COFD[7307] = 4.38484791E-03;
  COFD[7308] = -2.01119507E+01;
  COFD[7309] = 3.74633126E+00;
  COFD[7310] = -1.82313159E-01;
  COFD[7311] = 4.38484791E-03;
  COFD[7312] = -2.06395044E+01;
  COFD[7313] = 3.95070639E+00;
  COFD[7314] = -2.13597271E-01;
  COFD[7315] = 5.92237399E-03;
  COFD[7316] = -2.06420749E+01;
  COFD[7317] = 3.95070639E+00;
  COFD[7318] = -2.13597271E-01;
  COFD[7319] = 5.92237399E-03;
  COFD[7320] = -1.95673377E+01;
  COFD[7321] = 3.47169223E+00;
  COFD[7322] = -1.41092730E-01;
  COFD[7323] = 2.38419177E-03;
  COFD[7324] = -1.82937673E+01;
  COFD[7325] = 2.81782887E+00;
  COFD[7326] = -4.45806084E-02;
  COFD[7327] = -2.24026517E-03;
  COFD[7328] = -1.95698355E+01;
  COFD[7329] = 3.47169223E+00;
  COFD[7330] = -1.41092730E-01;
  COFD[7331] = 2.38419177E-03;
  COFD[7332] = -2.11724466E+01;
  COFD[7333] = 5.22581725E+00;
  COFD[7334] = -4.54351700E-01;
  COFD[7335] = 1.93332012E-02;
  COFD[7336] = -2.20271744E+01;
  COFD[7337] = 5.56193702E+00;
  COFD[7338] = -4.88512557E-01;
  COFD[7339] = 2.04380728E-02;
  COFD[7340] = -2.20271744E+01;
  COFD[7341] = 5.56193702E+00;
  COFD[7342] = -4.88512557E-01;
  COFD[7343] = 2.04380728E-02;
  COFD[7344] = -2.01210977E+01;
  COFD[7345] = 5.01930029E+00;
  COFD[7346] = -4.31305027E-01;
  COFD[7347] = 1.84846322E-02;
  COFD[7348] = -1.66209539E+01;
  COFD[7349] = 4.10820924E+00;
  COFD[7350] = -3.21095223E-01;
  COFD[7351] = 1.40301968E-02;
  COFD[7352] = -2.03845195E+01;
  COFD[7353] = 5.56619223E+00;
  COFD[7354] = -4.88860312E-01;
  COFD[7355] = 2.04450332E-02;
  COFD[7356] = -2.01469646E+01;
  COFD[7357] = 5.01930029E+00;
  COFD[7358] = -4.31305027E-01;
  COFD[7359] = 1.84846322E-02;
  COFD[7360] = -1.83862875E+01;
  COFD[7361] = 3.54020950E+00;
  COFD[7362] = -1.52304836E-01;
  COFD[7363] = 2.96268874E-03;
  COFD[7364] = -2.15521831E+01;
  COFD[7365] = 5.35030481E+00;
  COFD[7366] = -4.68818560E-01;
  COFD[7367] = 1.98942796E-02;
  COFD[7368] = -2.15609204E+01;
  COFD[7369] = 5.34961360E+00;
  COFD[7370] = -4.68762622E-01;
  COFD[7371] = 1.98932200E-02;
  COFD[7372] = -2.00321446E+01;
  COFD[7373] = 5.01930029E+00;
  COFD[7374] = -4.31305027E-01;
  COFD[7375] = 1.84846322E-02;
  COFD[7376] = -2.12005574E+01;
  COFD[7377] = 5.23328794E+00;
  COFD[7378] = -4.55218686E-01;
  COFD[7379] = 1.93667472E-02;
  COFD[7380] = -1.97923614E+01;
  COFD[7381] = 4.01137806E+00;
  COFD[7382] = -2.22734310E-01;
  COFD[7383] = 6.36741567E-03;
  COFD[7384] = -1.98052579E+01;
  COFD[7385] = 4.01137806E+00;
  COFD[7386] = -2.22734310E-01;
  COFD[7387] = 6.36741567E-03;
  COFD[7388] = -2.20571029E+01;
  COFD[7389] = 5.56193702E+00;
  COFD[7390] = -4.88512557E-01;
  COFD[7391] = 2.04380728E-02;
  COFD[7392] = -2.26923929E+01;
  COFD[7393] = 5.45651759E+00;
  COFD[7394] = -4.53709578E-01;
  COFD[7395] = 1.80890894E-02;
  COFD[7396] = -2.20306513E+01;
  COFD[7397] = 5.54982225E+00;
  COFD[7398] = -4.87416516E-01;
  COFD[7399] = 2.04093655E-02;
  COFD[7400] = -2.26915962E+01;
  COFD[7401] = 5.56399361E+00;
  COFD[7402] = -4.75020089E-01;
  COFD[7403] = 1.93065281E-02;
  COFD[7404] = -2.23376731E+01;
  COFD[7405] = 5.29923580E+00;
  COFD[7406] = -4.25997743E-01;
  COFD[7407] = 1.65974476E-02;
  COFD[7408] = -2.26083501E+01;
  COFD[7409] = 5.42359285E+00;
  COFD[7410] = -4.47762010E-01;
  COFD[7411] = 1.77644050E-02;
  COFD[7412] = -2.26614672E+01;
  COFD[7413] = 5.56399361E+00;
  COFD[7414] = -4.75020089E-01;
  COFD[7415] = 1.93065281E-02;
  COFD[7416] = -2.22516246E+01;
  COFD[7417] = 5.58876571E+00;
  COFD[7418] = -4.90865374E-01;
  COFD[7419] = 2.04959778E-02;
  COFD[7420] = -2.26768881E+01;
  COFD[7421] = 5.56399361E+00;
  COFD[7422] = -4.75020089E-01;
  COFD[7423] = 1.93065281E-02;
  COFD[7424] = -2.28074407E+01;
  COFD[7425] = 5.42471690E+00;
  COFD[7426] = -4.47967221E-01;
  COFD[7427] = 1.77756550E-02;
  COFD[7428] = -2.27880734E+01;
  COFD[7429] = 5.36784270E+00;
  COFD[7430] = -4.37680260E-01;
  COFD[7431] = 1.72142944E-02;
  COFD[7432] = -2.28044648E+01;
  COFD[7433] = 5.36784270E+00;
  COFD[7434] = -4.37680260E-01;
  COFD[7435] = 1.72142944E-02;
  COFD[7436] = -2.26212226E+01;
  COFD[7437] = 5.42359285E+00;
  COFD[7438] = -4.47762010E-01;
  COFD[7439] = 1.77644050E-02;
  COFD[7440] = -2.28163248E+01;
  COFD[7441] = 5.42471690E+00;
  COFD[7442] = -4.47967221E-01;
  COFD[7443] = 1.77756550E-02;
  COFD[7444] = -2.28163248E+01;
  COFD[7445] = 5.42471690E+00;
  COFD[7446] = -4.47967221E-01;
  COFD[7447] = 1.77756550E-02;
  COFD[7448] = -2.09387662E+01;
  COFD[7449] = 4.24466286E+00;
  COFD[7450] = -2.57969163E-01;
  COFD[7451] = 8.08847969E-03;
  COFD[7452] = -2.09352589E+01;
  COFD[7453] = 4.24466286E+00;
  COFD[7454] = -2.57969163E-01;
  COFD[7455] = 8.08847969E-03;
  COFD[7456] = -2.16480978E+01;
  COFD[7457] = 4.63605764E+00;
  COFD[7458] = -3.18638225E-01;
  COFD[7459] = 1.11025963E-02;
  COFD[7460] = -2.27963983E+01;
  COFD[7461] = 5.36784270E+00;
  COFD[7462] = -4.37680260E-01;
  COFD[7463] = 1.72142944E-02;
  COFD[7464] = -2.21898890E+01;
  COFD[7465] = 4.95483060E+00;
  COFD[7466] = -3.69235112E-01;
  COFD[7467] = 1.36591532E-02;
  COFD[7468] = -2.16525653E+01;
  COFD[7469] = 4.63605764E+00;
  COFD[7470] = -3.18638225E-01;
  COFD[7471] = 1.11025963E-02;
  COFD[7472] = -1.91071436E+01;
  COFD[7473] = 3.23347145E+00;
  COFD[7474] = -1.05661046E-01;
  COFD[7475] = 6.77853205E-04;
  COFD[7476] = -2.18597213E+01;
  COFD[7477] = 4.70975376E+00;
  COFD[7478] = -3.30443435E-01;
  COFD[7479] = 1.17023656E-02;
  COFD[7480] = -2.11804777E+01;
  COFD[7481] = 4.39928190E+00;
  COFD[7482] = -2.81653808E-01;
  COFD[7483] = 9.25555221E-03;
  COFD[7484] = -2.01090382E+01;
  COFD[7485] = 3.74633126E+00;
  COFD[7486] = -1.82313159E-01;
  COFD[7487] = 4.38484791E-03;
  COFD[7488] = -2.05912391E+01;
  COFD[7489] = 4.02612453E+00;
  COFD[7490] = -2.25065110E-01;
  COFD[7491] = 6.48488941E-03;
  COFD[7492] = -2.06278631E+01;
  COFD[7493] = 4.02612453E+00;
  COFD[7494] = -2.25065110E-01;
  COFD[7495] = 6.48488941E-03;
  COFD[7496] = -2.05939816E+01;
  COFD[7497] = 4.02612453E+00;
  COFD[7498] = -2.25065110E-01;
  COFD[7499] = 6.48488941E-03;
  COFD[7500] = -2.12399178E+01;
  COFD[7501] = 4.28012459E+00;
  COFD[7502] = -2.63385616E-01;
  COFD[7503] = 8.35476331E-03;
  COFD[7504] = -2.12423319E+01;
  COFD[7505] = 4.28012459E+00;
  COFD[7506] = -2.63385616E-01;
  COFD[7507] = 8.35476331E-03;
  COFD[7508] = -2.01457209E+01;
  COFD[7509] = 3.79300207E+00;
  COFD[7510] = -1.89646592E-01;
  COFD[7511] = 4.75161691E-03;
  COFD[7512] = -1.91054994E+01;
  COFD[7513] = 3.23347145E+00;
  COFD[7514] = -1.05661046E-01;
  COFD[7515] = 6.77853205E-04;
  COFD[7516] = -2.01480654E+01;
  COFD[7517] = 3.79300207E+00;
  COFD[7518] = -1.89646592E-01;
  COFD[7519] = 4.75161691E-03;
  COFD[7520] = -2.11893352E+01;
  COFD[7521] = 5.22581725E+00;
  COFD[7522] = -4.54351700E-01;
  COFD[7523] = 1.93332012E-02;
  COFD[7524] = -2.20366853E+01;
  COFD[7525] = 5.56193702E+00;
  COFD[7526] = -4.88512557E-01;
  COFD[7527] = 2.04380728E-02;
  COFD[7528] = -2.20366853E+01;
  COFD[7529] = 5.56193702E+00;
  COFD[7530] = -4.88512557E-01;
  COFD[7531] = 2.04380728E-02;
  COFD[7532] = -2.01317583E+01;
  COFD[7533] = 5.01930029E+00;
  COFD[7534] = -4.31305027E-01;
  COFD[7535] = 1.84846322E-02;
  COFD[7536] = -1.66224848E+01;
  COFD[7537] = 4.10820924E+00;
  COFD[7538] = -3.21095223E-01;
  COFD[7539] = 1.40301968E-02;
  COFD[7540] = -2.03852928E+01;
  COFD[7541] = 5.56619223E+00;
  COFD[7542] = -4.88860312E-01;
  COFD[7543] = 2.04450332E-02;
  COFD[7544] = -2.01581976E+01;
  COFD[7545] = 5.01930029E+00;
  COFD[7546] = -4.31305027E-01;
  COFD[7547] = 1.84846322E-02;
  COFD[7548] = -1.83980831E+01;
  COFD[7549] = 3.54020950E+00;
  COFD[7550] = -1.52304836E-01;
  COFD[7551] = 2.96268874E-03;
  COFD[7552] = -2.15708829E+01;
  COFD[7553] = 5.35030481E+00;
  COFD[7554] = -4.68818560E-01;
  COFD[7555] = 1.98942796E-02;
  COFD[7556] = -2.15800611E+01;
  COFD[7557] = 5.34961360E+00;
  COFD[7558] = -4.68762622E-01;
  COFD[7559] = 1.98932200E-02;
  COFD[7560] = -2.00410522E+01;
  COFD[7561] = 5.01930029E+00;
  COFD[7562] = -4.31305027E-01;
  COFD[7563] = 1.84846322E-02;
  COFD[7564] = -2.12174441E+01;
  COFD[7565] = 5.23328794E+00;
  COFD[7566] = -4.55218686E-01;
  COFD[7567] = 1.93667472E-02;
  COFD[7568] = -1.98097172E+01;
  COFD[7569] = 4.01137806E+00;
  COFD[7570] = -2.22734310E-01;
  COFD[7571] = 6.36741567E-03;
  COFD[7572] = -1.98230753E+01;
  COFD[7573] = 4.01137806E+00;
  COFD[7574] = -2.22734310E-01;
  COFD[7575] = 6.36741567E-03;
  COFD[7576] = -2.20672065E+01;
  COFD[7577] = 5.56193702E+00;
  COFD[7578] = -4.88512557E-01;
  COFD[7579] = 2.04380728E-02;
  COFD[7580] = -2.27159393E+01;
  COFD[7581] = 5.45651759E+00;
  COFD[7582] = -4.53709578E-01;
  COFD[7583] = 1.80890894E-02;
  COFD[7584] = -2.20413371E+01;
  COFD[7585] = 5.54982225E+00;
  COFD[7586] = -4.87416516E-01;
  COFD[7587] = 2.04093655E-02;
  COFD[7588] = -2.27080273E+01;
  COFD[7589] = 5.56399361E+00;
  COFD[7590] = -4.75020089E-01;
  COFD[7591] = 1.93065281E-02;
  COFD[7592] = -2.23545804E+01;
  COFD[7593] = 5.29923580E+00;
  COFD[7594] = -4.25997743E-01;
  COFD[7595] = 1.65974476E-02;
  COFD[7596] = -2.26257261E+01;
  COFD[7597] = 5.42359285E+00;
  COFD[7598] = -4.47762010E-01;
  COFD[7599] = 1.77644050E-02;
  COFD[7600] = -2.26769224E+01;
  COFD[7601] = 5.56399361E+00;
  COFD[7602] = -4.75020089E-01;
  COFD[7603] = 1.93065281E-02;
  COFD[7604] = -2.22740465E+01;
  COFD[7605] = 5.58876571E+00;
  COFD[7606] = -4.90865374E-01;
  COFD[7607] = 2.04959778E-02;
  COFD[7608] = -2.26928352E+01;
  COFD[7609] = 5.56399361E+00;
  COFD[7610] = -4.75020089E-01;
  COFD[7611] = 1.93065281E-02;
  COFD[7612] = -2.28290916E+01;
  COFD[7613] = 5.42471690E+00;
  COFD[7614] = -4.47967221E-01;
  COFD[7615] = 1.77756550E-02;
  COFD[7616] = -2.28105122E+01;
  COFD[7617] = 5.36784270E+00;
  COFD[7618] = -4.37680260E-01;
  COFD[7619] = 1.72142944E-02;
  COFD[7620] = -2.28276691E+01;
  COFD[7621] = 5.36784270E+00;
  COFD[7622] = -4.37680260E-01;
  COFD[7623] = 1.72142944E-02;
  COFD[7624] = -2.26390600E+01;
  COFD[7625] = 5.42359285E+00;
  COFD[7626] = -4.47762010E-01;
  COFD[7627] = 1.77644050E-02;
  COFD[7628] = -2.28383726E+01;
  COFD[7629] = 5.42471690E+00;
  COFD[7630] = -4.47967221E-01;
  COFD[7631] = 1.77756550E-02;
  COFD[7632] = -2.28383726E+01;
  COFD[7633] = 5.42471690E+00;
  COFD[7634] = -4.47967221E-01;
  COFD[7635] = 1.77756550E-02;
  COFD[7636] = -2.09724758E+01;
  COFD[7637] = 4.24466286E+00;
  COFD[7638] = -2.57969163E-01;
  COFD[7639] = 8.08847969E-03;
  COFD[7640] = -2.09687248E+01;
  COFD[7641] = 4.24466286E+00;
  COFD[7642] = -2.57969163E-01;
  COFD[7643] = 8.08847969E-03;
  COFD[7644] = -2.16784285E+01;
  COFD[7645] = 4.63605764E+00;
  COFD[7646] = -3.18638225E-01;
  COFD[7647] = 1.11025963E-02;
  COFD[7648] = -2.28192226E+01;
  COFD[7649] = 5.36784270E+00;
  COFD[7650] = -4.37680260E-01;
  COFD[7651] = 1.72142944E-02;
  COFD[7652] = -2.22175548E+01;
  COFD[7653] = 4.95483060E+00;
  COFD[7654] = -3.69235112E-01;
  COFD[7655] = 1.36591532E-02;
  COFD[7656] = -2.16831767E+01;
  COFD[7657] = 4.63605764E+00;
  COFD[7658] = -3.18638225E-01;
  COFD[7659] = 1.11025963E-02;
  COFD[7660] = -1.91502271E+01;
  COFD[7661] = 3.23347145E+00;
  COFD[7662] = -1.05661046E-01;
  COFD[7663] = 6.77853205E-04;
  COFD[7664] = -2.18914220E+01;
  COFD[7665] = 4.70975376E+00;
  COFD[7666] = -3.30443435E-01;
  COFD[7667] = 1.17023656E-02;
  COFD[7668] = -2.12124425E+01;
  COFD[7669] = 4.39928190E+00;
  COFD[7670] = -2.81653808E-01;
  COFD[7671] = 9.25555221E-03;
  COFD[7672] = -2.01480169E+01;
  COFD[7673] = 3.74633126E+00;
  COFD[7674] = -1.82313159E-01;
  COFD[7675] = 4.38484791E-03;
  COFD[7676] = -2.06278631E+01;
  COFD[7677] = 4.02612453E+00;
  COFD[7678] = -2.25065110E-01;
  COFD[7679] = 6.48488941E-03;
  COFD[7680] = -2.06673833E+01;
  COFD[7681] = 4.02612453E+00;
  COFD[7682] = -2.25065110E-01;
  COFD[7683] = 6.48488941E-03;
  COFD[7684] = -2.06308146E+01;
  COFD[7685] = 4.02612453E+00;
  COFD[7686] = -2.25065110E-01;
  COFD[7687] = 6.48488941E-03;
  COFD[7688] = -2.12781543E+01;
  COFD[7689] = 4.28012459E+00;
  COFD[7690] = -2.63385616E-01;
  COFD[7691] = 8.35476331E-03;
  COFD[7692] = -2.12807608E+01;
  COFD[7693] = 4.28012459E+00;
  COFD[7694] = -2.63385616E-01;
  COFD[7695] = 8.35476331E-03;
  COFD[7696] = -2.01843242E+01;
  COFD[7697] = 3.79300207E+00;
  COFD[7698] = -1.89646592E-01;
  COFD[7699] = 4.75161691E-03;
  COFD[7700] = -1.91484352E+01;
  COFD[7701] = 3.23347145E+00;
  COFD[7702] = -1.05661046E-01;
  COFD[7703] = 6.77853205E-04;
  COFD[7704] = -2.01868574E+01;
  COFD[7705] = 3.79300207E+00;
  COFD[7706] = -1.89646592E-01;
  COFD[7707] = 4.75161691E-03;
  COFD[7708] = -2.11737344E+01;
  COFD[7709] = 5.22581725E+00;
  COFD[7710] = -4.54351700E-01;
  COFD[7711] = 1.93332012E-02;
  COFD[7712] = -2.20279045E+01;
  COFD[7713] = 5.56193702E+00;
  COFD[7714] = -4.88512557E-01;
  COFD[7715] = 2.04380728E-02;
  COFD[7716] = -2.20279045E+01;
  COFD[7717] = 5.56193702E+00;
  COFD[7718] = -4.88512557E-01;
  COFD[7719] = 2.04380728E-02;
  COFD[7720] = -2.01219152E+01;
  COFD[7721] = 5.01930029E+00;
  COFD[7722] = -4.31305027E-01;
  COFD[7723] = 1.84846322E-02;
  COFD[7724] = -1.66210723E+01;
  COFD[7725] = 4.10820924E+00;
  COFD[7726] = -3.21095223E-01;
  COFD[7727] = 1.40301968E-02;
  COFD[7728] = -2.03845794E+01;
  COFD[7729] = 5.56619223E+00;
  COFD[7730] = -4.88860312E-01;
  COFD[7731] = 2.04450332E-02;
  COFD[7732] = -2.01478256E+01;
  COFD[7733] = 5.01930029E+00;
  COFD[7734] = -4.31305027E-01;
  COFD[7735] = 1.84846322E-02;
  COFD[7736] = -1.83871911E+01;
  COFD[7737] = 3.54020950E+00;
  COFD[7738] = -1.52304836E-01;
  COFD[7739] = 2.96268874E-03;
  COFD[7740] = -2.15536066E+01;
  COFD[7741] = 5.35030481E+00;
  COFD[7742] = -4.68818560E-01;
  COFD[7743] = 1.98942796E-02;
  COFD[7744] = -2.15623768E+01;
  COFD[7745] = 5.34961360E+00;
  COFD[7746] = -4.68762622E-01;
  COFD[7747] = 1.98932200E-02;
  COFD[7748] = -2.00328288E+01;
  COFD[7749] = 5.01930029E+00;
  COFD[7750] = -4.31305027E-01;
  COFD[7751] = 1.84846322E-02;
  COFD[7752] = -2.12018450E+01;
  COFD[7753] = 5.23328794E+00;
  COFD[7754] = -4.55218686E-01;
  COFD[7755] = 1.93667472E-02;
  COFD[7756] = -1.97936842E+01;
  COFD[7757] = 4.01137806E+00;
  COFD[7758] = -2.22734310E-01;
  COFD[7759] = 6.36741567E-03;
  COFD[7760] = -1.98066153E+01;
  COFD[7761] = 4.01137806E+00;
  COFD[7762] = -2.22734310E-01;
  COFD[7763] = 6.36741567E-03;
  COFD[7764] = -2.20578781E+01;
  COFD[7765] = 5.56193702E+00;
  COFD[7766] = -4.88512557E-01;
  COFD[7767] = 2.04380728E-02;
  COFD[7768] = -2.26941773E+01;
  COFD[7769] = 5.45651759E+00;
  COFD[7770] = -4.53709578E-01;
  COFD[7771] = 1.80890894E-02;
  COFD[7772] = -2.20314707E+01;
  COFD[7773] = 5.54982225E+00;
  COFD[7774] = -4.87416516E-01;
  COFD[7775] = 2.04093655E-02;
  COFD[7776] = -2.26928496E+01;
  COFD[7777] = 5.56399361E+00;
  COFD[7778] = -4.75020089E-01;
  COFD[7779] = 1.93065281E-02;
  COFD[7780] = -2.23389622E+01;
  COFD[7781] = 5.29923580E+00;
  COFD[7782] = -4.25997743E-01;
  COFD[7783] = 1.65974476E-02;
  COFD[7784] = -2.26096744E+01;
  COFD[7785] = 5.42359285E+00;
  COFD[7786] = -4.47762010E-01;
  COFD[7787] = 1.77644050E-02;
  COFD[7788] = -2.26626472E+01;
  COFD[7789] = 5.56399361E+00;
  COFD[7790] = -4.75020089E-01;
  COFD[7791] = 1.93065281E-02;
  COFD[7792] = -2.22533256E+01;
  COFD[7793] = 5.58876571E+00;
  COFD[7794] = -4.90865374E-01;
  COFD[7795] = 2.04959778E-02;
  COFD[7796] = -2.26781051E+01;
  COFD[7797] = 5.56399361E+00;
  COFD[7798] = -4.75020089E-01;
  COFD[7799] = 1.93065281E-02;
  COFD[7800] = -2.28090843E+01;
  COFD[7801] = 5.42471690E+00;
  COFD[7802] = -4.47967221E-01;
  COFD[7803] = 1.77756550E-02;
  COFD[7804] = -2.27897756E+01;
  COFD[7805] = 5.36784270E+00;
  COFD[7806] = -4.37680260E-01;
  COFD[7807] = 1.72142944E-02;
  COFD[7808] = -2.28062239E+01;
  COFD[7809] = 5.36784270E+00;
  COFD[7810] = -4.37680260E-01;
  COFD[7811] = 1.72142944E-02;
  COFD[7812] = -2.26225815E+01;
  COFD[7813] = 5.42359285E+00;
  COFD[7814] = -4.47762010E-01;
  COFD[7815] = 1.77644050E-02;
  COFD[7816] = -2.28179980E+01;
  COFD[7817] = 5.42471690E+00;
  COFD[7818] = -4.47967221E-01;
  COFD[7819] = 1.77756550E-02;
  COFD[7820] = -2.28179980E+01;
  COFD[7821] = 5.42471690E+00;
  COFD[7822] = -4.47967221E-01;
  COFD[7823] = 1.77756550E-02;
  COFD[7824] = -2.09412972E+01;
  COFD[7825] = 4.24466286E+00;
  COFD[7826] = -2.57969163E-01;
  COFD[7827] = 8.08847969E-03;
  COFD[7828] = -2.09377722E+01;
  COFD[7829] = 4.24466286E+00;
  COFD[7830] = -2.57969163E-01;
  COFD[7831] = 8.08847969E-03;
  COFD[7832] = -2.16503821E+01;
  COFD[7833] = 4.63605764E+00;
  COFD[7834] = -3.18638225E-01;
  COFD[7835] = 1.11025963E-02;
  COFD[7836] = -2.27981291E+01;
  COFD[7837] = 5.36784270E+00;
  COFD[7838] = -4.37680260E-01;
  COFD[7839] = 1.72142944E-02;
  COFD[7840] = -2.21919778E+01;
  COFD[7841] = 4.95483060E+00;
  COFD[7842] = -3.69235112E-01;
  COFD[7843] = 1.36591532E-02;
  COFD[7844] = -2.16548702E+01;
  COFD[7845] = 4.63605764E+00;
  COFD[7846] = -3.18638225E-01;
  COFD[7847] = 1.11025963E-02;
  COFD[7848] = -1.91103508E+01;
  COFD[7849] = 3.23347145E+00;
  COFD[7850] = -1.05661046E-01;
  COFD[7851] = 6.77853205E-04;
  COFD[7852] = -2.18621059E+01;
  COFD[7853] = 4.70975376E+00;
  COFD[7854] = -3.30443435E-01;
  COFD[7855] = 1.17023656E-02;
  COFD[7856] = -2.11828815E+01;
  COFD[7857] = 4.39928190E+00;
  COFD[7858] = -2.81653808E-01;
  COFD[7859] = 9.25555221E-03;
  COFD[7860] = -2.01119507E+01;
  COFD[7861] = 3.74633126E+00;
  COFD[7862] = -1.82313159E-01;
  COFD[7863] = 4.38484791E-03;
  COFD[7864] = -2.05939816E+01;
  COFD[7865] = 4.02612453E+00;
  COFD[7866] = -2.25065110E-01;
  COFD[7867] = 6.48488941E-03;
  COFD[7868] = -2.06308146E+01;
  COFD[7869] = 4.02612453E+00;
  COFD[7870] = -2.25065110E-01;
  COFD[7871] = 6.48488941E-03;
  COFD[7872] = -2.05967391E+01;
  COFD[7873] = 4.02612453E+00;
  COFD[7874] = -2.25065110E-01;
  COFD[7875] = 6.48488941E-03;
  COFD[7876] = -2.12427768E+01;
  COFD[7877] = 4.28012459E+00;
  COFD[7878] = -2.63385616E-01;
  COFD[7879] = 8.35476331E-03;
  COFD[7880] = -2.12452048E+01;
  COFD[7881] = 4.28012459E+00;
  COFD[7882] = -2.63385616E-01;
  COFD[7883] = 8.35476331E-03;
  COFD[7884] = -2.01486063E+01;
  COFD[7885] = 3.79300207E+00;
  COFD[7886] = -1.89646592E-01;
  COFD[7887] = 4.75161691E-03;
  COFD[7888] = -1.91086959E+01;
  COFD[7889] = 3.23347145E+00;
  COFD[7890] = -1.05661046E-01;
  COFD[7891] = 6.77853205E-04;
  COFD[7892] = -2.01509644E+01;
  COFD[7893] = 3.79300207E+00;
  COFD[7894] = -1.89646592E-01;
  COFD[7895] = 4.75161691E-03;
  COFD[7896] = -2.10674576E+01;
  COFD[7897] = 5.15027524E+00;
  COFD[7898] = -4.46126111E-01;
  COFD[7899] = 1.90401391E-02;
  COFD[7900] = -2.19248232E+01;
  COFD[7901] = 5.49350509E+00;
  COFD[7902] = -4.81613405E-01;
  COFD[7903] = 2.02171734E-02;
  COFD[7904] = -2.19248232E+01;
  COFD[7905] = 5.49350509E+00;
  COFD[7906] = -4.81613405E-01;
  COFD[7907] = 2.02171734E-02;
  COFD[7908] = -1.99785079E+01;
  COFD[7909] = 4.92184026E+00;
  COFD[7910] = -4.19745472E-01;
  COFD[7911] = 1.80268154E-02;
  COFD[7912] = -1.64898688E+01;
  COFD[7913] = 4.01175649E+00;
  COFD[7914] = -3.08860971E-01;
  COFD[7915] = 1.35100076E-02;
  COFD[7916] = -2.03113865E+01;
  COFD[7917] = 5.50136606E+00;
  COFD[7918] = -4.82461887E-01;
  COFD[7919] = 2.02471523E-02;
  COFD[7920] = -2.00047011E+01;
  COFD[7921] = 4.92184026E+00;
  COFD[7922] = -4.19745472E-01;
  COFD[7923] = 1.80268154E-02;
  COFD[7924] = -1.91326722E+01;
  COFD[7925] = 3.82263611E+00;
  COFD[7926] = -1.93983472E-01;
  COFD[7927] = 4.95789388E-03;
  COFD[7928] = -2.13955911E+01;
  COFD[7929] = 5.25183817E+00;
  COFD[7930] = -4.57376333E-01;
  COFD[7931] = 1.94504429E-02;
  COFD[7932] = -2.14072722E+01;
  COFD[7933] = 5.25183817E+00;
  COFD[7934] = -4.57376333E-01;
  COFD[7935] = 1.94504429E-02;
  COFD[7936] = -1.98885544E+01;
  COFD[7937] = 4.92184026E+00;
  COFD[7938] = -4.19745472E-01;
  COFD[7939] = 1.80268154E-02;
  COFD[7940] = -2.10843943E+01;
  COFD[7941] = 5.15315713E+00;
  COFD[7942] = -4.46344043E-01;
  COFD[7943] = 1.90431546E-02;
  COFD[7944] = -2.04488873E+01;
  COFD[7945] = 4.26473557E+00;
  COFD[7946] = -2.61033037E-01;
  COFD[7947] = 8.23906412E-03;
  COFD[7948] = -2.04620454E+01;
  COFD[7949] = 4.26473557E+00;
  COFD[7950] = -2.61033037E-01;
  COFD[7951] = 8.23906412E-03;
  COFD[7952] = -2.19550900E+01;
  COFD[7953] = 5.49350509E+00;
  COFD[7954] = -4.81613405E-01;
  COFD[7955] = 2.02171734E-02;
  COFD[7956] = -2.28655682E+01;
  COFD[7957] = 5.50522401E+00;
  COFD[7958] = -4.63604304E-01;
  COFD[7959] = 1.86600785E-02;
  COFD[7960] = -2.19053842E+01;
  COFD[7961] = 5.47162499E+00;
  COFD[7962] = -4.79195552E-01;
  COFD[7963] = 2.01289088E-02;
  COFD[7964] = -2.27965342E+01;
  COFD[7965] = 5.58520405E+00;
  COFD[7966] = -4.80873447E-01;
  COFD[7967] = 1.96836519E-02;
  COFD[7968] = -2.26171730E+01;
  COFD[7969] = 5.39548142E+00;
  COFD[7970] = -4.42524166E-01;
  COFD[7971] = 1.74743365E-02;
  COFD[7972] = -2.28265392E+01;
  COFD[7973] = 5.49552429E+00;
  COFD[7974] = -4.60932565E-01;
  COFD[7975] = 1.84885333E-02;
  COFD[7976] = -2.27658512E+01;
  COFD[7977] = 5.58520405E+00;
  COFD[7978] = -4.80873447E-01;
  COFD[7979] = 1.96836519E-02;
  COFD[7980] = -2.22093818E+01;
  COFD[7981] = 5.53457356E+00;
  COFD[7982] = -4.85892223E-01;
  COFD[7983] = 2.03611937E-02;
  COFD[7984] = -2.27815515E+01;
  COFD[7985] = 5.58520405E+00;
  COFD[7986] = -4.80873447E-01;
  COFD[7987] = 1.96836519E-02;
  COFD[7988] = -2.30221686E+01;
  COFD[7989] = 5.49616184E+00;
  COFD[7990] = -4.61067688E-01;
  COFD[7991] = 1.84964487E-02;
  COFD[7992] = -2.30100565E+01;
  COFD[7993] = 5.44285423E+00;
  COFD[7994] = -4.51235128E-01;
  COFD[7995] = 1.79537737E-02;
  COFD[7996] = -2.30268799E+01;
  COFD[7997] = 5.44285423E+00;
  COFD[7998] = -4.51235128E-01;
  COFD[7999] = 1.79537737E-02;
  COFD[8000] = -2.28396733E+01;
  COFD[8001] = 5.49552429E+00;
  COFD[8002] = -4.60932565E-01;
  COFD[8003] = 1.84885333E-02;
  COFD[8004] = -2.30312769E+01;
  COFD[8005] = 5.49616184E+00;
  COFD[8006] = -4.61067688E-01;
  COFD[8007] = 1.84964487E-02;
  COFD[8008] = -2.30312769E+01;
  COFD[8009] = 5.49616184E+00;
  COFD[8010] = -4.61067688E-01;
  COFD[8011] = 1.84964487E-02;
  COFD[8012] = -2.14953227E+01;
  COFD[8013] = 4.46010097E+00;
  COFD[8014] = -2.91026334E-01;
  COFD[8015] = 9.71970079E-03;
  COFD[8016] = -2.14916791E+01;
  COFD[8017] = 4.46010097E+00;
  COFD[8018] = -2.91026334E-01;
  COFD[8019] = 9.71970079E-03;
  COFD[8020] = -2.20710209E+01;
  COFD[8021] = 4.79594018E+00;
  COFD[8022] = -3.44052659E-01;
  COFD[8023] = 1.23869631E-02;
  COFD[8024] = -2.30185990E+01;
  COFD[8025] = 5.44285423E+00;
  COFD[8026] = -4.51235128E-01;
  COFD[8027] = 1.79537737E-02;
  COFD[8028] = -2.26042714E+01;
  COFD[8029] = 5.11098789E+00;
  COFD[8030] = -3.94152299E-01;
  COFD[8031] = 1.49235263E-02;
  COFD[8032] = -2.20756458E+01;
  COFD[8033] = 4.79594018E+00;
  COFD[8034] = -3.44052659E-01;
  COFD[8035] = 1.23869631E-02;
  COFD[8036] = -1.98144876E+01;
  COFD[8037] = 3.51050013E+00;
  COFD[8038] = -1.46814800E-01;
  COFD[8039] = 2.65826831E-03;
  COFD[8040] = -2.22981911E+01;
  COFD[8041] = 4.87626494E+00;
  COFD[8042] = -3.56718447E-01;
  COFD[8043] = 1.30246317E-02;
  COFD[8044] = -2.16820587E+01;
  COFD[8045] = 4.59101412E+00;
  COFD[8046] = -3.11439033E-01;
  COFD[8047] = 1.07377082E-02;
  COFD[8048] = -2.06395044E+01;
  COFD[8049] = 3.95070639E+00;
  COFD[8050] = -2.13597271E-01;
  COFD[8051] = 5.92237399E-03;
  COFD[8052] = -2.12399178E+01;
  COFD[8053] = 4.28012459E+00;
  COFD[8054] = -2.63385616E-01;
  COFD[8055] = 8.35476331E-03;
  COFD[8056] = -2.12781543E+01;
  COFD[8057] = 4.28012459E+00;
  COFD[8058] = -2.63385616E-01;
  COFD[8059] = 8.35476331E-03;
  COFD[8060] = -2.12427768E+01;
  COFD[8061] = 4.28012459E+00;
  COFD[8062] = -2.63385616E-01;
  COFD[8063] = 8.35476331E-03;
  COFD[8064] = -2.17746518E+01;
  COFD[8065] = 4.48837319E+00;
  COFD[8066] = -2.95423315E-01;
  COFD[8067] = 9.93861345E-03;
  COFD[8068] = -2.17771730E+01;
  COFD[8069] = 4.48837319E+00;
  COFD[8070] = -2.95423315E-01;
  COFD[8071] = 9.93861345E-03;
  COFD[8072] = -2.07296110E+01;
  COFD[8073] = 4.01830333E+00;
  COFD[8074] = -2.23776659E-01;
  COFD[8075] = 6.41816213E-03;
  COFD[8076] = -1.98127614E+01;
  COFD[8077] = 3.51050013E+00;
  COFD[8078] = -1.46814800E-01;
  COFD[8079] = 2.65826831E-03;
  COFD[8080] = -2.07320605E+01;
  COFD[8081] = 4.01830333E+00;
  COFD[8082] = -2.23776659E-01;
  COFD[8083] = 6.41816213E-03;
  COFD[8084] = -2.10685665E+01;
  COFD[8085] = 5.15027524E+00;
  COFD[8086] = -4.46126111E-01;
  COFD[8087] = 1.90401391E-02;
  COFD[8088] = -2.19254467E+01;
  COFD[8089] = 5.49350509E+00;
  COFD[8090] = -4.81613405E-01;
  COFD[8091] = 2.02171734E-02;
  COFD[8092] = -2.19254467E+01;
  COFD[8093] = 5.49350509E+00;
  COFD[8094] = -4.81613405E-01;
  COFD[8095] = 2.02171734E-02;
  COFD[8096] = -1.99792069E+01;
  COFD[8097] = 4.92184026E+00;
  COFD[8098] = -4.19745472E-01;
  COFD[8099] = 1.80268154E-02;
  COFD[8100] = -1.64899690E+01;
  COFD[8101] = 4.01175649E+00;
  COFD[8102] = -3.08860971E-01;
  COFD[8103] = 1.35100076E-02;
  COFD[8104] = -2.03114371E+01;
  COFD[8105] = 5.50136606E+00;
  COFD[8106] = -4.82461887E-01;
  COFD[8107] = 2.02471523E-02;
  COFD[8108] = -2.00054378E+01;
  COFD[8109] = 4.92184026E+00;
  COFD[8110] = -4.19745472E-01;
  COFD[8111] = 1.80268154E-02;
  COFD[8112] = -1.91334458E+01;
  COFD[8113] = 3.82263611E+00;
  COFD[8114] = -1.93983472E-01;
  COFD[8115] = 4.95789388E-03;
  COFD[8116] = -2.13968193E+01;
  COFD[8117] = 5.25183817E+00;
  COFD[8118] = -4.57376333E-01;
  COFD[8119] = 1.94504429E-02;
  COFD[8120] = -2.14085295E+01;
  COFD[8121] = 5.25183817E+00;
  COFD[8122] = -4.57376333E-01;
  COFD[8123] = 1.94504429E-02;
  COFD[8124] = -1.98891383E+01;
  COFD[8125] = 4.92184026E+00;
  COFD[8126] = -4.19745472E-01;
  COFD[8127] = 1.80268154E-02;
  COFD[8128] = -2.10855030E+01;
  COFD[8129] = 5.15315713E+00;
  COFD[8130] = -4.46344043E-01;
  COFD[8131] = 1.90431546E-02;
  COFD[8132] = -2.04500269E+01;
  COFD[8133] = 4.26473557E+00;
  COFD[8134] = -2.61033037E-01;
  COFD[8135] = 8.23906412E-03;
  COFD[8136] = -2.04632155E+01;
  COFD[8137] = 4.26473557E+00;
  COFD[8138] = -2.61033037E-01;
  COFD[8139] = 8.23906412E-03;
  COFD[8140] = -2.19557524E+01;
  COFD[8141] = 5.49350509E+00;
  COFD[8142] = -4.81613405E-01;
  COFD[8143] = 2.02171734E-02;
  COFD[8144] = -2.28671163E+01;
  COFD[8145] = 5.50522401E+00;
  COFD[8146] = -4.63604304E-01;
  COFD[8147] = 1.86600785E-02;
  COFD[8148] = -2.19060849E+01;
  COFD[8149] = 5.47162499E+00;
  COFD[8150] = -4.79195552E-01;
  COFD[8151] = 2.01289088E-02;
  COFD[8152] = -2.27976129E+01;
  COFD[8153] = 5.58520405E+00;
  COFD[8154] = -4.80873447E-01;
  COFD[8155] = 1.96836519E-02;
  COFD[8156] = -2.26182831E+01;
  COFD[8157] = 5.39548142E+00;
  COFD[8158] = -4.42524166E-01;
  COFD[8159] = 1.74743365E-02;
  COFD[8160] = -2.28276802E+01;
  COFD[8161] = 5.49552429E+00;
  COFD[8162] = -4.60932565E-01;
  COFD[8163] = 1.84885333E-02;
  COFD[8164] = -2.27668657E+01;
  COFD[8165] = 5.58520405E+00;
  COFD[8166] = -4.80873447E-01;
  COFD[8167] = 1.96836519E-02;
  COFD[8168] = -2.22108556E+01;
  COFD[8169] = 5.53457356E+00;
  COFD[8170] = -4.85892223E-01;
  COFD[8171] = 2.03611937E-02;
  COFD[8172] = -2.27825983E+01;
  COFD[8173] = 5.58520405E+00;
  COFD[8174] = -4.80873447E-01;
  COFD[8175] = 1.96836519E-02;
  COFD[8176] = -2.30235915E+01;
  COFD[8177] = 5.49616184E+00;
  COFD[8178] = -4.61067688E-01;
  COFD[8179] = 1.84964487E-02;
  COFD[8180] = -2.30115315E+01;
  COFD[8181] = 5.44285423E+00;
  COFD[8182] = -4.51235128E-01;
  COFD[8183] = 1.79537737E-02;
  COFD[8184] = -2.30284054E+01;
  COFD[8185] = 5.44285423E+00;
  COFD[8186] = -4.51235128E-01;
  COFD[8187] = 1.79537737E-02;
  COFD[8188] = -2.28408447E+01;
  COFD[8189] = 5.49552429E+00;
  COFD[8190] = -4.60932565E-01;
  COFD[8191] = 1.84885333E-02;
  COFD[8192] = -2.30327260E+01;
  COFD[8193] = 5.49616184E+00;
  COFD[8194] = -4.61067688E-01;
  COFD[8195] = 1.84964487E-02;
  COFD[8196] = -2.30327260E+01;
  COFD[8197] = 5.49616184E+00;
  COFD[8198] = -4.61067688E-01;
  COFD[8199] = 1.84964487E-02;
  COFD[8200] = -2.14975434E+01;
  COFD[8201] = 4.46010097E+00;
  COFD[8202] = -2.91026334E-01;
  COFD[8203] = 9.71970079E-03;
  COFD[8204] = -2.14938837E+01;
  COFD[8205] = 4.46010097E+00;
  COFD[8206] = -2.91026334E-01;
  COFD[8207] = 9.71970079E-03;
  COFD[8208] = -2.20730177E+01;
  COFD[8209] = 4.79594018E+00;
  COFD[8210] = -3.44052659E-01;
  COFD[8211] = 1.23869631E-02;
  COFD[8212] = -2.30200994E+01;
  COFD[8213] = 5.44285423E+00;
  COFD[8214] = -4.51235128E-01;
  COFD[8215] = 1.79537737E-02;
  COFD[8216] = -2.26060919E+01;
  COFD[8217] = 5.11098789E+00;
  COFD[8218] = -3.94152299E-01;
  COFD[8219] = 1.49235263E-02;
  COFD[8220] = -2.20776612E+01;
  COFD[8221] = 4.79594018E+00;
  COFD[8222] = -3.44052659E-01;
  COFD[8223] = 1.23869631E-02;
  COFD[8224] = -1.98173310E+01;
  COFD[8225] = 3.51050013E+00;
  COFD[8226] = -1.46814800E-01;
  COFD[8227] = 2.65826831E-03;
  COFD[8228] = -2.23002787E+01;
  COFD[8229] = 4.87626494E+00;
  COFD[8230] = -3.56718447E-01;
  COFD[8231] = 1.30246317E-02;
  COFD[8232] = -2.16841638E+01;
  COFD[8233] = 4.59101412E+00;
  COFD[8234] = -3.11439033E-01;
  COFD[8235] = 1.07377082E-02;
  COFD[8236] = -2.06420749E+01;
  COFD[8237] = 3.95070639E+00;
  COFD[8238] = -2.13597271E-01;
  COFD[8239] = 5.92237399E-03;
  COFD[8240] = -2.12423319E+01;
  COFD[8241] = 4.28012459E+00;
  COFD[8242] = -2.63385616E-01;
  COFD[8243] = 8.35476331E-03;
  COFD[8244] = -2.12807608E+01;
  COFD[8245] = 4.28012459E+00;
  COFD[8246] = -2.63385616E-01;
  COFD[8247] = 8.35476331E-03;
  COFD[8248] = -2.12452048E+01;
  COFD[8249] = 4.28012459E+00;
  COFD[8250] = -2.63385616E-01;
  COFD[8251] = 8.35476331E-03;
  COFD[8252] = -2.17771730E+01;
  COFD[8253] = 4.48837319E+00;
  COFD[8254] = -2.95423315E-01;
  COFD[8255] = 9.93861345E-03;
  COFD[8256] = -2.17797069E+01;
  COFD[8257] = 4.48837319E+00;
  COFD[8258] = -2.95423315E-01;
  COFD[8259] = 9.93861345E-03;
  COFD[8260] = -2.07321565E+01;
  COFD[8261] = 4.01830333E+00;
  COFD[8262] = -2.23776659E-01;
  COFD[8263] = 6.41816213E-03;
  COFD[8264] = -1.98155950E+01;
  COFD[8265] = 3.51050013E+00;
  COFD[8266] = -1.46814800E-01;
  COFD[8267] = 2.65826831E-03;
  COFD[8268] = -2.07346185E+01;
  COFD[8269] = 4.01830333E+00;
  COFD[8270] = -2.23776659E-01;
  COFD[8271] = 6.41816213E-03;
  COFD[8272] = -2.15158962E+01;
  COFD[8273] = 5.33752141E+00;
  COFD[8274] = -4.67533000E-01;
  COFD[8275] = 1.98534748E-02;
  COFD[8276] = -2.22016620E+01;
  COFD[8277] = 5.60207576E+00;
  COFD[8278] = -4.91440062E-01;
  COFD[8279] = 2.04756122E-02;
  COFD[8280] = -2.22016620E+01;
  COFD[8281] = 5.60207576E+00;
  COFD[8282] = -4.91440062E-01;
  COFD[8283] = 2.04756122E-02;
  COFD[8284] = -2.04116775E+01;
  COFD[8285] = 5.11312010E+00;
  COFD[8286] = -4.42283881E-01;
  COFD[8287] = 1.89133999E-02;
  COFD[8288] = -1.68779241E+01;
  COFD[8289] = 4.19641658E+00;
  COFD[8290] = -3.31942486E-01;
  COFD[8291] = 1.44766740E-02;
  COFD[8292] = -2.05465835E+01;
  COFD[8293] = 5.60286061E+00;
  COFD[8294] = -4.91304371E-01;
  COFD[8295] = 2.04602837E-02;
  COFD[8296] = -2.04379423E+01;
  COFD[8297] = 5.11312010E+00;
  COFD[8298] = -4.42283881E-01;
  COFD[8299] = 1.89133999E-02;
  COFD[8300] = -1.76622769E+01;
  COFD[8301] = 3.19751878E+00;
  COFD[8302] = -1.01992197E-01;
  COFD[8303] = 5.63017356E-04;
  COFD[8304] = -2.17333356E+01;
  COFD[8305] = 5.39086886E+00;
  COFD[8306] = -4.71799032E-01;
  COFD[8307] = 1.99310503E-02;
  COFD[8308] = -2.17368272E+01;
  COFD[8309] = 5.38871351E+00;
  COFD[8310] = -4.71617136E-01;
  COFD[8311] = 1.99270815E-02;
  COFD[8312] = -2.03215052E+01;
  COFD[8313] = 5.11312010E+00;
  COFD[8314] = -4.42283881E-01;
  COFD[8315] = 1.89133999E-02;
  COFD[8316] = -2.15402530E+01;
  COFD[8317] = 5.34327104E+00;
  COFD[8318] = -4.68144718E-01;
  COFD[8319] = 1.98746594E-02;
  COFD[8320] = -1.93533937E+01;
  COFD[8321] = 3.78551156E+00;
  COFD[8322] = -1.88278443E-01;
  COFD[8323] = 4.67669958E-03;
  COFD[8324] = -1.93666097E+01;
  COFD[8325] = 3.78551156E+00;
  COFD[8326] = -1.88278443E-01;
  COFD[8327] = 4.67669958E-03;
  COFD[8328] = -2.22320027E+01;
  COFD[8329] = 5.60207576E+00;
  COFD[8330] = -4.91440062E-01;
  COFD[8331] = 2.04756122E-02;
  COFD[8332] = -2.26107099E+01;
  COFD[8333] = 5.37828363E+00;
  COFD[8334] = -4.39471072E-01;
  COFD[8335] = 1.73093139E-02;
  COFD[8336] = -2.22319042E+01;
  COFD[8337] = 5.59979579E+00;
  COFD[8338] = -4.91615330E-01;
  COFD[8339] = 2.05018544E-02;
  COFD[8340] = -2.26476618E+01;
  COFD[8341] = 5.50595231E+00;
  COFD[8342] = -4.63781372E-01;
  COFD[8343] = 1.86710651E-02;
  COFD[8344] = -2.22000351E+01;
  COFD[8345] = 5.19999151E+00;
  COFD[8346] = -4.08912144E-01;
  COFD[8347] = 1.56905571E-02;
  COFD[8348] = -2.25041898E+01;
  COFD[8349] = 5.33883161E+00;
  COFD[8350] = -4.32711075E-01;
  COFD[8351] = 1.69510393E-02;
  COFD[8352] = -2.26168567E+01;
  COFD[8353] = 5.50595231E+00;
  COFD[8354] = -4.63781372E-01;
  COFD[8355] = 1.86710651E-02;
  COFD[8356] = -2.23963088E+01;
  COFD[8357] = 5.61198329E+00;
  COFD[8358] = -4.91433699E-01;
  COFD[8359] = 2.04246565E-02;
  COFD[8360] = -2.26326185E+01;
  COFD[8361] = 5.50595231E+00;
  COFD[8362] = -4.63781372E-01;
  COFD[8363] = 1.86710651E-02;
  COFD[8364] = -2.27068437E+01;
  COFD[8365] = 5.34036599E+00;
  COFD[8366] = -4.32974135E-01;
  COFD[8367] = 1.69649822E-02;
  COFD[8368] = -2.26367406E+01;
  COFD[8369] = 5.26148618E+00;
  COFD[8370] = -4.19570725E-01;
  COFD[8371] = 1.62579061E-02;
  COFD[8372] = -2.26536602E+01;
  COFD[8373] = 5.26148618E+00;
  COFD[8374] = -4.19570725E-01;
  COFD[8375] = 1.62579061E-02;
  COFD[8376] = -2.25173817E+01;
  COFD[8377] = 5.33883161E+00;
  COFD[8378] = -4.32711075E-01;
  COFD[8379] = 1.69510393E-02;
  COFD[8380] = -2.27160019E+01;
  COFD[8381] = 5.34036599E+00;
  COFD[8382] = -4.32974135E-01;
  COFD[8383] = 1.69649822E-02;
  COFD[8384] = -2.27160019E+01;
  COFD[8385] = 5.34036599E+00;
  COFD[8386] = -4.32974135E-01;
  COFD[8387] = 1.69649822E-02;
  COFD[8388] = -2.03898345E+01;
  COFD[8389] = 3.96664171E+00;
  COFD[8390] = -2.16019029E-01;
  COFD[8391] = 6.04101691E-03;
  COFD[8392] = -2.03861602E+01;
  COFD[8393] = 3.96664171E+00;
  COFD[8394] = -2.16019029E-01;
  COFD[8395] = 6.04101691E-03;
  COFD[8396] = -2.13209374E+01;
  COFD[8397] = 4.45290995E+00;
  COFD[8398] = -2.89908411E-01;
  COFD[8399] = 9.66407483E-03;
  COFD[8400] = -2.26453315E+01;
  COFD[8401] = 5.26148618E+00;
  COFD[8402] = -4.19570725E-01;
  COFD[8403] = 1.62579061E-02;
  COFD[8404] = -2.18643476E+01;
  COFD[8405] = 4.77317111E+00;
  COFD[8406] = -3.40643783E-01;
  COFD[8407] = 1.22214470E-02;
  COFD[8408] = -2.13255977E+01;
  COFD[8409] = 4.45290995E+00;
  COFD[8410] = -2.89908411E-01;
  COFD[8411] = 9.66407483E-03;
  COFD[8412] = -1.84218513E+01;
  COFD[8413] = 2.89954031E+00;
  COFD[8414] = -5.65611695E-02;
  COFD[8415] = -1.66809604E-03;
  COFD[8416] = -2.15500301E+01;
  COFD[8417] = 4.53381655E+00;
  COFD[8418] = -3.02724309E-01;
  COFD[8419] = 1.03102268E-02;
  COFD[8420] = -2.07265150E+01;
  COFD[8421] = 4.16273738E+00;
  COFD[8422] = -2.45570259E-01;
  COFD[8423] = 7.48180552E-03;
  COFD[8424] = -1.95673377E+01;
  COFD[8425] = 3.47169223E+00;
  COFD[8426] = -1.41092730E-01;
  COFD[8427] = 2.38419177E-03;
  COFD[8428] = -2.01457209E+01;
  COFD[8429] = 3.79300207E+00;
  COFD[8430] = -1.89646592E-01;
  COFD[8431] = 4.75161691E-03;
  COFD[8432] = -2.01843242E+01;
  COFD[8433] = 3.79300207E+00;
  COFD[8434] = -1.89646592E-01;
  COFD[8435] = 4.75161691E-03;
  COFD[8436] = -2.01486063E+01;
  COFD[8437] = 3.79300207E+00;
  COFD[8438] = -1.89646592E-01;
  COFD[8439] = 4.75161691E-03;
  COFD[8440] = -2.07296110E+01;
  COFD[8441] = 4.01830333E+00;
  COFD[8442] = -2.23776659E-01;
  COFD[8443] = 6.41816213E-03;
  COFD[8444] = -2.07321565E+01;
  COFD[8445] = 4.01830333E+00;
  COFD[8446] = -2.23776659E-01;
  COFD[8447] = 6.41816213E-03;
  COFD[8448] = -1.96465937E+01;
  COFD[8449] = 3.53681519E+00;
  COFD[8450] = -1.51056334E-01;
  COFD[8451] = 2.87478307E-03;
  COFD[8452] = -1.84201065E+01;
  COFD[8453] = 2.89954031E+00;
  COFD[8454] = -5.65611695E-02;
  COFD[8455] = -1.66809604E-03;
  COFD[8456] = -1.96490671E+01;
  COFD[8457] = 3.53681519E+00;
  COFD[8458] = -1.51056334E-01;
  COFD[8459] = 2.87478307E-03;
  COFD[8460] = -2.19460742E+01;
  COFD[8461] = 5.41691945E+00;
  COFD[8462] = -4.73388270E-01;
  COFD[8463] = 1.99279280E-02;
  COFD[8464] = -2.24061628E+01;
  COFD[8465] = 5.58316712E+00;
  COFD[8466] = -4.82794221E-01;
  COFD[8467] = 1.98538380E-02;
  COFD[8468] = -2.24061628E+01;
  COFD[8469] = 5.58316712E+00;
  COFD[8470] = -4.82794221E-01;
  COFD[8471] = 1.98538380E-02;
  COFD[8472] = -2.10539440E+01;
  COFD[8473] = 5.28406281E+00;
  COFD[8474] = -4.61218665E-01;
  COFD[8475] = 1.96036779E-02;
  COFD[8476] = -1.75093793E+01;
  COFD[8477] = 4.38503692E+00;
  COFD[8478] = -3.55082200E-01;
  COFD[8479] = 1.54254372E-02;
  COFD[8480] = -2.07600357E+01;
  COFD[8481] = 5.58361212E+00;
  COFD[8482] = -4.82575879E-01;
  COFD[8483] = 1.98332857E-02;
  COFD[8484] = -2.10809853E+01;
  COFD[8485] = 5.28406281E+00;
  COFD[8486] = -4.61218665E-01;
  COFD[8487] = 1.96036779E-02;
  COFD[8488] = -1.51955918E+01;
  COFD[8489] = 1.97841280E+00;
  COFD[8490] = 7.85094165E-02;
  COFD[8491] = -8.10071182E-03;
  COFD[8492] = -2.22863937E+01;
  COFD[8493] = 5.51906049E+00;
  COFD[8494] = -4.84378475E-01;
  COFD[8495] = 2.03153818E-02;
  COFD[8496] = -2.22987451E+01;
  COFD[8497] = 5.51906049E+00;
  COFD[8498] = -4.84378475E-01;
  COFD[8499] = 2.03153818E-02;
  COFD[8500] = -2.09614032E+01;
  COFD[8501] = 5.28406281E+00;
  COFD[8502] = -4.61218665E-01;
  COFD[8503] = 1.96036779E-02;
  COFD[8504] = -2.19605868E+01;
  COFD[8505] = 5.41868079E+00;
  COFD[8506] = -4.73445943E-01;
  COFD[8507] = 1.99235961E-02;
  COFD[8508] = -1.82786627E+01;
  COFD[8509] = 3.21736474E+00;
  COFD[8510] = -1.03272422E-01;
  COFD[8511] = 5.63117513E-04;
  COFD[8512] = -1.82925198E+01;
  COFD[8513] = 3.21736474E+00;
  COFD[8514] = -1.03272422E-01;
  COFD[8515] = 5.63117513E-04;
  COFD[8516] = -2.24373043E+01;
  COFD[8517] = 5.58316712E+00;
  COFD[8518] = -4.82794221E-01;
  COFD[8519] = 1.98538380E-02;
  COFD[8520] = -2.23868643E+01;
  COFD[8521] = 5.16350806E+00;
  COFD[8522] = -4.02853220E-01;
  COFD[8523] = 1.53752462E-02;
  COFD[8524] = -2.24414308E+01;
  COFD[8525] = 5.58455232E+00;
  COFD[8526] = -4.83725835E-01;
  COFD[8527] = 1.99244840E-02;
  COFD[8528] = -2.26024615E+01;
  COFD[8529] = 5.37189964E+00;
  COFD[8530] = -4.38371109E-01;
  COFD[8531] = 1.72507977E-02;
  COFD[8532] = -2.17286491E+01;
  COFD[8533] = 4.88252869E+00;
  COFD[8534] = -3.57706506E-01;
  COFD[8535] = 1.30744059E-02;
  COFD[8536] = -2.22353053E+01;
  COFD[8537] = 5.10895195E+00;
  COFD[8538] = -3.93822647E-01;
  COFD[8539] = 1.49066324E-02;
  COFD[8540] = -2.25703091E+01;
  COFD[8541] = 5.37189964E+00;
  COFD[8542] = -4.38371109E-01;
  COFD[8543] = 1.72507977E-02;
  COFD[8544] = -2.26183413E+01;
  COFD[8545] = 5.58499587E+00;
  COFD[8546] = -4.81446176E-01;
  COFD[8547] = 1.97322465E-02;
  COFD[8548] = -2.25867494E+01;
  COFD[8549] = 5.37189964E+00;
  COFD[8550] = -4.38371109E-01;
  COFD[8551] = 1.72507977E-02;
  COFD[8552] = -2.24418849E+01;
  COFD[8553] = 5.11126858E+00;
  COFD[8554] = -3.94197754E-01;
  COFD[8555] = 1.49258559E-02;
  COFD[8556] = -2.22985686E+01;
  COFD[8557] = 5.00145214E+00;
  COFD[8558] = -3.76474258E-01;
  COFD[8559] = 1.40201948E-02;
  COFD[8560] = -2.23165711E+01;
  COFD[8561] = 5.00145214E+00;
  COFD[8562] = -3.76474258E-01;
  COFD[8563] = 1.40201948E-02;
  COFD[8564] = -2.22491379E+01;
  COFD[8565] = 5.10895195E+00;
  COFD[8566] = -3.93822647E-01;
  COFD[8567] = 1.49066324E-02;
  COFD[8568] = -2.24516025E+01;
  COFD[8569] = 5.11126858E+00;
  COFD[8570] = -3.94197754E-01;
  COFD[8571] = 1.49258559E-02;
  COFD[8572] = -2.24516025E+01;
  COFD[8573] = 5.11126858E+00;
  COFD[8574] = -3.94197754E-01;
  COFD[8575] = 1.49258559E-02;
  COFD[8576] = -1.94902645E+01;
  COFD[8577] = 3.46782579E+00;
  COFD[8578] = -1.40466854E-01;
  COFD[8579] = 2.35226276E-03;
  COFD[8580] = -1.94862316E+01;
  COFD[8581] = 3.46782579E+00;
  COFD[8582] = -1.40466854E-01;
  COFD[8583] = 2.35226276E-03;
  COFD[8584] = -2.03841283E+01;
  COFD[8585] = 3.93738709E+00;
  COFD[8586] = -2.11564714E-01;
  COFD[8587] = 5.82251403E-03;
  COFD[8588] = -2.23077045E+01;
  COFD[8589] = 5.00145214E+00;
  COFD[8590] = -3.76474258E-01;
  COFD[8591] = 1.40201948E-02;
  COFD[8592] = -2.12727289E+01;
  COFD[8593] = 4.40206167E+00;
  COFD[8594] = -2.82080836E-01;
  COFD[8595] = 9.27666397E-03;
  COFD[8596] = -2.03891969E+01;
  COFD[8597] = 3.93738709E+00;
  COFD[8598] = -2.11564714E-01;
  COFD[8599] = 5.82251403E-03;
  COFD[8600] = -1.71422079E+01;
  COFD[8601] = 2.24264041E+00;
  COFD[8602] = 4.01129596E-02;
  COFD[8603] = -6.28731339E-03;
  COFD[8604] = -2.07008726E+01;
  COFD[8605] = 4.05358575E+00;
  COFD[8606] = -2.29089538E-01;
  COFD[8607] = 6.67706929E-03;
  COFD[8608] = -1.98385206E+01;
  COFD[8609] = 3.66741345E+00;
  COFD[8610] = -1.70294153E-01;
  COFD[8611] = 3.79604426E-03;
  COFD[8612] = -1.82937673E+01;
  COFD[8613] = 2.81782887E+00;
  COFD[8614] = -4.45806084E-02;
  COFD[8615] = -2.24026517E-03;
  COFD[8616] = -1.91054994E+01;
  COFD[8617] = 3.23347145E+00;
  COFD[8618] = -1.05661046E-01;
  COFD[8619] = 6.77853205E-04;
  COFD[8620] = -1.91484352E+01;
  COFD[8621] = 3.23347145E+00;
  COFD[8622] = -1.05661046E-01;
  COFD[8623] = 6.77853205E-04;
  COFD[8624] = -1.91086959E+01;
  COFD[8625] = 3.23347145E+00;
  COFD[8626] = -1.05661046E-01;
  COFD[8627] = 6.77853205E-04;
  COFD[8628] = -1.98127614E+01;
  COFD[8629] = 3.51050013E+00;
  COFD[8630] = -1.46814800E-01;
  COFD[8631] = 2.65826831E-03;
  COFD[8632] = -1.98155950E+01;
  COFD[8633] = 3.51050013E+00;
  COFD[8634] = -1.46814800E-01;
  COFD[8635] = 2.65826831E-03;
  COFD[8636] = -1.84201065E+01;
  COFD[8637] = 2.89954031E+00;
  COFD[8638] = -5.65611695E-02;
  COFD[8639] = -1.66809604E-03;
  COFD[8640] = -1.71402380E+01;
  COFD[8641] = 2.24264041E+00;
  COFD[8642] = 4.01129596E-02;
  COFD[8643] = -6.28731339E-03;
  COFD[8644] = -1.84228627E+01;
  COFD[8645] = 2.89954031E+00;
  COFD[8646] = -5.65611695E-02;
  COFD[8647] = -1.66809604E-03;
  COFD[8648] = -2.15169677E+01;
  COFD[8649] = 5.33752141E+00;
  COFD[8650] = -4.67533000E-01;
  COFD[8651] = 1.98534748E-02;
  COFD[8652] = -2.22022634E+01;
  COFD[8653] = 5.60207576E+00;
  COFD[8654] = -4.91440062E-01;
  COFD[8655] = 2.04756122E-02;
  COFD[8656] = -2.22022634E+01;
  COFD[8657] = 5.60207576E+00;
  COFD[8658] = -4.91440062E-01;
  COFD[8659] = 2.04756122E-02;
  COFD[8660] = -2.04123520E+01;
  COFD[8661] = 5.11312010E+00;
  COFD[8662] = -4.42283881E-01;
  COFD[8663] = 1.89133999E-02;
  COFD[8664] = -1.68780205E+01;
  COFD[8665] = 4.19641658E+00;
  COFD[8666] = -3.31942486E-01;
  COFD[8667] = 1.44766740E-02;
  COFD[8668] = -2.05466322E+01;
  COFD[8669] = 5.60286061E+00;
  COFD[8670] = -4.91304371E-01;
  COFD[8671] = 2.04602837E-02;
  COFD[8672] = -2.04386532E+01;
  COFD[8673] = 5.11312010E+00;
  COFD[8674] = -4.42283881E-01;
  COFD[8675] = 1.89133999E-02;
  COFD[8676] = -1.76630236E+01;
  COFD[8677] = 3.19751878E+00;
  COFD[8678] = -1.01992197E-01;
  COFD[8679] = 5.63017356E-04;
  COFD[8680] = -2.17345230E+01;
  COFD[8681] = 5.39086886E+00;
  COFD[8682] = -4.71799032E-01;
  COFD[8683] = 1.99310503E-02;
  COFD[8684] = -2.17380429E+01;
  COFD[8685] = 5.38871351E+00;
  COFD[8686] = -4.71617136E-01;
  COFD[8687] = 1.99270815E-02;
  COFD[8688] = -2.03220683E+01;
  COFD[8689] = 5.11312010E+00;
  COFD[8690] = -4.42283881E-01;
  COFD[8691] = 1.89133999E-02;
  COFD[8692] = -2.15413245E+01;
  COFD[8693] = 5.34327104E+00;
  COFD[8694] = -4.68144718E-01;
  COFD[8695] = 1.98746594E-02;
  COFD[8696] = -1.93544952E+01;
  COFD[8697] = 3.78551156E+00;
  COFD[8698] = -1.88278443E-01;
  COFD[8699] = 4.67669958E-03;
  COFD[8700] = -1.93677407E+01;
  COFD[8701] = 3.78551156E+00;
  COFD[8702] = -1.88278443E-01;
  COFD[8703] = 4.67669958E-03;
  COFD[8704] = -2.22326418E+01;
  COFD[8705] = 5.60207576E+00;
  COFD[8706] = -4.91440062E-01;
  COFD[8707] = 2.04756122E-02;
  COFD[8708] = -2.26122084E+01;
  COFD[8709] = 5.37828363E+00;
  COFD[8710] = -4.39471072E-01;
  COFD[8711] = 1.73093139E-02;
  COFD[8712] = -2.22325803E+01;
  COFD[8713] = 5.59979579E+00;
  COFD[8714] = -4.91615330E-01;
  COFD[8715] = 2.05018544E-02;
  COFD[8716] = -2.26487042E+01;
  COFD[8717] = 5.50595231E+00;
  COFD[8718] = -4.63781372E-01;
  COFD[8719] = 1.86710651E-02;
  COFD[8720] = -2.22011078E+01;
  COFD[8721] = 5.19999151E+00;
  COFD[8722] = -4.08912144E-01;
  COFD[8723] = 1.56905571E-02;
  COFD[8724] = -2.25052925E+01;
  COFD[8725] = 5.33883161E+00;
  COFD[8726] = -4.32711075E-01;
  COFD[8727] = 1.69510393E-02;
  COFD[8728] = -2.26178366E+01;
  COFD[8729] = 5.50595231E+00;
  COFD[8730] = -4.63781372E-01;
  COFD[8731] = 1.86710651E-02;
  COFD[8732] = -2.23977350E+01;
  COFD[8733] = 5.61198329E+00;
  COFD[8734] = -4.91433699E-01;
  COFD[8735] = 2.04246565E-02;
  COFD[8736] = -2.26336299E+01;
  COFD[8737] = 5.50595231E+00;
  COFD[8738] = -4.63781372E-01;
  COFD[8739] = 1.86710651E-02;
  COFD[8740] = -2.27082205E+01;
  COFD[8741] = 5.34036599E+00;
  COFD[8742] = -4.32974135E-01;
  COFD[8743] = 1.69649822E-02;
  COFD[8744] = -2.26381680E+01;
  COFD[8745] = 5.26148618E+00;
  COFD[8746] = -4.19570725E-01;
  COFD[8747] = 1.62579061E-02;
  COFD[8748] = -2.26551368E+01;
  COFD[8749] = 5.26148618E+00;
  COFD[8750] = -4.19570725E-01;
  COFD[8751] = 1.62579061E-02;
  COFD[8752] = -2.25185140E+01;
  COFD[8753] = 5.33883161E+00;
  COFD[8754] = -4.32711075E-01;
  COFD[8755] = 1.69510393E-02;
  COFD[8756] = -2.27174041E+01;
  COFD[8757] = 5.34036599E+00;
  COFD[8758] = -4.32974135E-01;
  COFD[8759] = 1.69649822E-02;
  COFD[8760] = -2.27174041E+01;
  COFD[8761] = 5.34036599E+00;
  COFD[8762] = -4.32974135E-01;
  COFD[8763] = 1.69649822E-02;
  COFD[8764] = -2.03919896E+01;
  COFD[8765] = 3.96664171E+00;
  COFD[8766] = -2.16019029E-01;
  COFD[8767] = 6.04101691E-03;
  COFD[8768] = -2.03882995E+01;
  COFD[8769] = 3.96664171E+00;
  COFD[8770] = -2.16019029E-01;
  COFD[8771] = 6.04101691E-03;
  COFD[8772] = -2.13228736E+01;
  COFD[8773] = 4.45290995E+00;
  COFD[8774] = -2.89908411E-01;
  COFD[8775] = 9.66407483E-03;
  COFD[8776] = -2.26467836E+01;
  COFD[8777] = 5.26148618E+00;
  COFD[8778] = -4.19570725E-01;
  COFD[8779] = 1.62579061E-02;
  COFD[8780] = -2.18661116E+01;
  COFD[8781] = 4.77317111E+00;
  COFD[8782] = -3.40643783E-01;
  COFD[8783] = 1.22214470E-02;
  COFD[8784] = -2.13275520E+01;
  COFD[8785] = 4.45290995E+00;
  COFD[8786] = -2.89908411E-01;
  COFD[8787] = 9.66407483E-03;
  COFD[8788] = -1.84246173E+01;
  COFD[8789] = 2.89954031E+00;
  COFD[8790] = -5.65611695E-02;
  COFD[8791] = -1.66809604E-03;
  COFD[8792] = -2.15520550E+01;
  COFD[8793] = 4.53381655E+00;
  COFD[8794] = -3.02724309E-01;
  COFD[8795] = 1.03102268E-02;
  COFD[8796] = -2.07285570E+01;
  COFD[8797] = 4.16273738E+00;
  COFD[8798] = -2.45570259E-01;
  COFD[8799] = 7.48180552E-03;
  COFD[8800] = -1.95698355E+01;
  COFD[8801] = 3.47169223E+00;
  COFD[8802] = -1.41092730E-01;
  COFD[8803] = 2.38419177E-03;
  COFD[8804] = -2.01480654E+01;
  COFD[8805] = 3.79300207E+00;
  COFD[8806] = -1.89646592E-01;
  COFD[8807] = 4.75161691E-03;
  COFD[8808] = -2.01868574E+01;
  COFD[8809] = 3.79300207E+00;
  COFD[8810] = -1.89646592E-01;
  COFD[8811] = 4.75161691E-03;
  COFD[8812] = -2.01509644E+01;
  COFD[8813] = 3.79300207E+00;
  COFD[8814] = -1.89646592E-01;
  COFD[8815] = 4.75161691E-03;
  COFD[8816] = -2.07320605E+01;
  COFD[8817] = 4.01830333E+00;
  COFD[8818] = -2.23776659E-01;
  COFD[8819] = 6.41816213E-03;
  COFD[8820] = -2.07346185E+01;
  COFD[8821] = 4.01830333E+00;
  COFD[8822] = -2.23776659E-01;
  COFD[8823] = 6.41816213E-03;
  COFD[8824] = -1.96490671E+01;
  COFD[8825] = 3.53681519E+00;
  COFD[8826] = -1.51056334E-01;
  COFD[8827] = 2.87478307E-03;
  COFD[8828] = -1.84228627E+01;
  COFD[8829] = 2.89954031E+00;
  COFD[8830] = -5.65611695E-02;
  COFD[8831] = -1.66809604E-03;
  COFD[8832] = -1.96515528E+01;
  COFD[8833] = 3.53681519E+00;
  COFD[8834] = -1.51056334E-01;
  COFD[8835] = 2.87478307E-03;
}

// List of specs with small weight, dim NLITE
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetKTDIF(int* KTDIF)
{
  KTDIF[0] = 4;
  KTDIF[1] = 5;
}

// Poly fits for thermal diff ratios, dim NO*NLITE*KK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
egtransetCOFTD(amrex::Real* COFTD)
{
  COFTD[0] = 4.31330748E-01;
  COFTD[1] = 9.20535689E-05;
  COFTD[2] = -5.94508898E-08;
  COFTD[3] = 1.21437846E-11;
  COFTD[4] = 3.24743582E-01;
  COFTD[5] = 1.77796660E-04;
  COFTD[6] = -1.08933575E-07;
  COFTD[7] = 2.03593720E-11;
  COFTD[8] = 3.24743582E-01;
  COFTD[9] = 1.77796660E-04;
  COFTD[10] = -1.08933575E-07;
  COFTD[11] = 2.03593720E-11;
  COFTD[12] = 4.06676789E-01;
  COFTD[13] = 3.84699853E-05;
  COFTD[14] = -2.54843294E-08;
  COFTD[15] = 5.86294132E-12;
  COFTD[16] = 0.00000000E+00;
  COFTD[17] = 0.00000000E+00;
  COFTD[18] = 0.00000000E+00;
  COFTD[19] = 0.00000000E+00;
  COFTD[20] = -1.44152190E-01;
  COFTD[21] = -7.99993584E-05;
  COFTD[22] = 4.89707442E-08;
  COFTD[23] = -9.14277269E-12;
  COFTD[24] = 4.12890501E-01;
  COFTD[25] = 3.90577773E-05;
  COFTD[26] = -2.58737105E-08;
  COFTD[27] = 5.95252260E-12;
  COFTD[28] = 2.27466103E-02;
  COFTD[29] = 6.73071543E-04;
  COFTD[30] = -3.40932103E-07;
  COFTD[31] = 5.48493184E-11;
  COFTD[32] = 4.26576987E-01;
  COFTD[33] = 1.20406440E-04;
  COFTD[34] = -7.67293441E-08;
  COFTD[35] = 1.52089282E-11;
  COFTD[36] = 4.28228101E-01;
  COFTD[37] = 1.20872486E-04;
  COFTD[38] = -7.70263335E-08;
  COFTD[39] = 1.52677960E-11;
  COFTD[40] = 3.83434314E-01;
  COFTD[41] = 3.62713408E-05;
  COFTD[42] = -2.40278438E-08;
  COFTD[43] = 5.52786129E-12;
  COFTD[44] = 4.30602469E-01;
  COFTD[45] = 9.35955212E-05;
  COFTD[46] = -6.03979306E-08;
  COFTD[47] = 1.23114290E-11;
  COFTD[48] = 1.22118967E-01;
  COFTD[49] = 6.18369499E-04;
  COFTD[50] = -3.28420406E-07;
  COFTD[51] = 5.44599896E-11;
  COFTD[52] = 1.22692619E-01;
  COFTD[53] = 6.21274281E-04;
  COFTD[54] = -3.29963157E-07;
  COFTD[55] = 5.47158146E-11;
  COFTD[56] = 3.31188133E-01;
  COFTD[57] = 1.81325042E-04;
  COFTD[58] = -1.11095367E-07;
  COFTD[59] = 2.07634046E-11;
  COFTD[60] = 2.93190141E-01;
  COFTD[61] = 4.01428114E-04;
  COFTD[62] = -2.30704675E-07;
  COFTD[63] = 4.05174676E-11;
  COFTD[64] = 3.39554500E-01;
  COFTD[65] = 1.79333587E-04;
  COFTD[66] = -1.10134815E-07;
  COFTD[67] = 2.06425572E-11;
  COFTD[68] = 3.07390533E-01;
  COFTD[69] = 3.26393065E-04;
  COFTD[70] = -1.90993884E-07;
  COFTD[71] = 3.40632978E-11;
  COFTD[72] = 2.49016176E-01;
  COFTD[73] = 4.29034331E-04;
  COFTD[74] = -2.42667349E-07;
  COFTD[75] = 4.20799172E-11;
  COFTD[76] = 2.72758271E-01;
  COFTD[77] = 3.94400799E-04;
  COFTD[78] = -2.25799420E-07;
  COFTD[79] = 3.95323710E-11;
  COFTD[80] = 3.03699588E-01;
  COFTD[81] = 3.22473949E-04;
  COFTD[82] = -1.88700553E-07;
  COFTD[83] = 3.36542879E-11;
  COFTD[84] = 3.86105710E-01;
  COFTD[85] = 2.28759408E-04;
  COFTD[86] = -1.39424407E-07;
  COFTD[87] = 2.58988578E-11;
  COFTD[88] = 3.05611370E-01;
  COFTD[89] = 3.24503916E-04;
  COFTD[90] = -1.89888419E-07;
  COFTD[91] = 3.38661408E-11;
  COFTD[92] = 2.82908671E-01;
  COFTD[93] = 4.08284609E-04;
  COFTD[94] = -2.33779842E-07;
  COFTD[95] = 4.09340632E-11;
  COFTD[96] = 2.71945062E-01;
  COFTD[97] = 4.30812732E-04;
  COFTD[98] = -2.45083425E-07;
  COFTD[99] = 4.26911430E-11;
  COFTD[100] = 2.73199845E-01;
  COFTD[101] = 4.32800547E-04;
  COFTD[102] = -2.46214265E-07;
  COFTD[103] = 4.28881244E-11;
  COFTD[104] = 2.74035711E-01;
  COFTD[105] = 3.96247941E-04;
  COFTD[106] = -2.26856932E-07;
  COFTD[107] = 3.97175174E-11;
  COFTD[108] = 2.83646335E-01;
  COFTD[109] = 4.09349182E-04;
  COFTD[110] = -2.34389406E-07;
  COFTD[111] = 4.10407959E-11;
  COFTD[112] = 2.83646335E-01;
  COFTD[113] = 4.09349182E-04;
  COFTD[114] = -2.34389406E-07;
  COFTD[115] = 4.10407959E-11;
  COFTD[116] = 1.50553808E-01;
  COFTD[117] = 6.51988971E-04;
  COFTD[118] = -3.48887298E-07;
  COFTD[119] = 5.81439240E-11;
  COFTD[120] = 1.50452182E-01;
  COFTD[121] = 6.51548872E-04;
  COFTD[122] = -3.48651796E-07;
  COFTD[123] = 5.81046762E-11;
  COFTD[124] = 1.85970048E-01;
  COFTD[125] = 5.93904787E-04;
  COFTD[126] = -3.23045546E-07;
  COFTD[127] = 5.44407301E-11;
  COFTD[128] = 2.72586795E-01;
  COFTD[129] = 4.31829359E-04;
  COFTD[130] = -2.45661770E-07;
  COFTD[131] = 4.27918850E-11;
  COFTD[132] = 2.18838644E-01;
  COFTD[133] = 5.37085760E-04;
  COFTD[134] = -2.96799677E-07;
  COFTD[135] = 5.05806993E-11;
  COFTD[136] = 1.86145950E-01;
  COFTD[137] = 5.94466539E-04;
  COFTD[138] = -3.23351103E-07;
  COFTD[139] = 5.44922236E-11;
  COFTD[140] = 7.58907321E-02;
  COFTD[141] = 7.63274749E-04;
  COFTD[142] = -3.95039197E-07;
  COFTD[143] = 6.44197377E-11;
  COFTD[144] = 1.94963582E-01;
  COFTD[145] = 5.84808032E-04;
  COFTD[146] = -3.19255164E-07;
  COFTD[147] = 5.39383123E-11;
  COFTD[148] = 1.62995538E-01;
  COFTD[149] = 6.30692137E-04;
  COFTD[150] = -3.39449676E-07;
  COFTD[151] = 5.67922010E-11;
  COFTD[152] = 1.11512541E-01;
  COFTD[153] = 7.13567616E-04;
  COFTD[154] = -3.75173442E-07;
  COFTD[155] = 6.18023947E-11;
  COFTD[156] = 1.35223836E-01;
  COFTD[157] = 6.78703244E-04;
  COFTD[158] = -3.60611266E-07;
  COFTD[159] = 5.98141526E-11;
  COFTD[160] = 1.36071956E-01;
  COFTD[161] = 6.82960053E-04;
  COFTD[162] = -3.62873010E-07;
  COFTD[163] = 6.01893054E-11;
  COFTD[164] = 1.35289332E-01;
  COFTD[165] = 6.79031980E-04;
  COFTD[166] = -3.60785931E-07;
  COFTD[167] = 5.98431242E-11;
  COFTD[168] = 1.55057471E-01;
  COFTD[169] = 6.55341598E-04;
  COFTD[170] = -3.51111027E-07;
  COFTD[171] = 5.85626268E-11;
  COFTD[172] = 1.55120909E-01;
  COFTD[173] = 6.55609717E-04;
  COFTD[174] = -3.51254676E-07;
  COFTD[175] = 5.85865864E-11;
  COFTD[176] = 1.15129668E-01;
  COFTD[177] = 7.08341867E-04;
  COFTD[178] = -3.73021739E-07;
  COFTD[179] = 6.15119165E-11;
  COFTD[180] = 7.58718064E-02;
  COFTD[181] = 7.63084402E-04;
  COFTD[182] = -3.94940681E-07;
  COFTD[183] = 6.44036726E-11;
  COFTD[184] = 1.15174996E-01;
  COFTD[185] = 7.08620756E-04;
  COFTD[186] = -3.73168605E-07;
  COFTD[187] = 6.15361349E-11;
  COFTD[188] = 2.01521521E-01;
  COFTD[189] = 5.62743751E-04;
  COFTD[190] = -3.08519054E-07;
  COFTD[191] = 5.22805672E-11;
  COFTD[192] = 9.90747140E-02;
  COFTD[193] = 6.44198017E-04;
  COFTD[194] = -3.38484184E-07;
  COFTD[195] = 5.57353833E-11;
  COFTD[196] = 9.90747140E-02;
  COFTD[197] = 6.44198017E-04;
  COFTD[198] = -3.38484184E-07;
  COFTD[199] = 5.57353833E-11;
  COFTD[200] = 2.35281489E-01;
  COFTD[201] = 4.65667373E-04;
  COFTD[202] = -2.60938016E-07;
  COFTD[203] = 4.49268709E-11;
  COFTD[204] = 1.44152190E-01;
  COFTD[205] = 7.99993584E-05;
  COFTD[206] = -4.89707442E-08;
  COFTD[207] = 9.14277269E-12;
  COFTD[208] = 0.00000000E+00;
  COFTD[209] = 0.00000000E+00;
  COFTD[210] = 0.00000000E+00;
  COFTD[211] = 0.00000000E+00;
  COFTD[212] = 2.37051899E-01;
  COFTD[213] = 4.69171356E-04;
  COFTD[214] = -2.62901483E-07;
  COFTD[215] = 4.52649298E-11;
  COFTD[216] = -1.74351746E-01;
  COFTD[217] = 8.62242165E-04;
  COFTD[218] = -3.79543417E-07;
  COFTD[219] = 5.60259034E-11;
  COFTD[220] = 1.79839678E-01;
  COFTD[221] = 6.01720824E-04;
  COFTD[222] = -3.26432767E-07;
  COFTD[223] = 5.49110406E-11;
  COFTD[224] = 1.80186380E-01;
  COFTD[225] = 6.02880848E-04;
  COFTD[226] = -3.27062078E-07;
  COFTD[227] = 5.50169005E-11;
  COFTD[228] = 2.28559479E-01;
  COFTD[229] = 4.52363220E-04;
  COFTD[230] = -2.53482997E-07;
  COFTD[231] = 4.36433068E-11;
  COFTD[232] = 2.00119185E-01;
  COFTD[233] = 5.64791694E-04;
  COFTD[234] = -3.09444383E-07;
  COFTD[235] = 5.24137469E-11;
  COFTD[236] = -1.60980730E-01;
  COFTD[237] = 9.03804574E-04;
  COFTD[238] = -4.06926592E-07;
  COFTD[239] = 6.09200234E-11;
  COFTD[240] = -1.61357064E-01;
  COFTD[241] = 9.05917454E-04;
  COFTD[242] = -4.07877889E-07;
  COFTD[243] = 6.10624399E-11;
  COFTD[244] = 1.00038655E-01;
  COFTD[245] = 6.50465703E-04;
  COFTD[246] = -3.41777446E-07;
  COFTD[247] = 5.62776574E-11;
  COFTD[248] = -2.00308977E-02;
  COFTD[249] = 8.50438113E-04;
  COFTD[250] = -4.21063477E-07;
  COFTD[251] = 6.67958138E-11;
  COFTD[252] = 1.05123703E-01;
  COFTD[253] = 6.50663360E-04;
  COFTD[254] = -3.42563171E-07;
  COFTD[255] = 5.64801866E-11;
  COFTD[256] = 1.63717030E-02;
  COFTD[257] = 7.92417622E-04;
  COFTD[258] = -3.99443901E-07;
  COFTD[259] = 6.40698319E-11;
  COFTD[260] = -5.08743421E-02;
  COFTD[261] = 8.54340362E-04;
  COFTD[262] = -4.15925370E-07;
  COFTD[263] = 6.53061561E-11;
  COFTD[264] = -2.71689899E-02;
  COFTD[265] = 8.37231102E-04;
  COFTD[266] = -4.12886635E-07;
  COFTD[267] = 6.53403612E-11;
  COFTD[268] = 1.62735599E-02;
  COFTD[269] = 7.87667334E-04;
  COFTD[270] = -3.97049364E-07;
  COFTD[271] = 6.36857539E-11;
  COFTD[272] = 9.86932164E-02;
  COFTD[273] = 7.20973229E-04;
  COFTD[274] = -3.77134366E-07;
  COFTD[275] = 6.19201176E-11;
  COFTD[276] = 1.63244604E-02;
  COFTD[277] = 7.90131000E-04;
  COFTD[278] = -3.98291254E-07;
  COFTD[279] = 6.38849501E-11;
  COFTD[280] = -2.73819402E-02;
  COFTD[281] = 8.52005822E-04;
  COFTD[282] = -4.20232297E-07;
  COFTD[283] = 6.65085726E-11;
  COFTD[284] = -4.05264355E-02;
  COFTD[285] = 8.65034494E-04;
  COFTD[286] = -4.23754623E-07;
  COFTD[287] = 6.67873033E-11;
  COFTD[288] = -4.06196633E-02;
  COFTD[289] = 8.67024435E-04;
  COFTD[290] = -4.24729436E-07;
  COFTD[291] = 6.69409420E-11;
  COFTD[292] = -2.72323151E-02;
  COFTD[293] = 8.39182512E-04;
  COFTD[294] = -4.13848987E-07;
  COFTD[295] = 6.54926559E-11;
  COFTD[296] = -2.74175456E-02;
  COFTD[297] = 8.53113705E-04;
  COFTD[298] = -4.20778735E-07;
  COFTD[299] = 6.65950553E-11;
  COFTD[300] = -2.74175456E-02;
  COFTD[301] = 8.53113705E-04;
  COFTD[302] = -4.20778735E-07;
  COFTD[303] = 6.65950553E-11;
  COFTD[304] = -1.56336324E-01;
  COFTD[305] = 9.43813169E-04;
  COFTD[306] = -4.29437354E-07;
  COFTD[307] = 6.47087882E-11;
  COFTD[308] = -1.56283578E-01;
  COFTD[309] = 9.43494735E-04;
  COFTD[310] = -4.29292465E-07;
  COFTD[311] = 6.46869560E-11;
  COFTD[312] = -1.27834665E-01;
  COFTD[313] = 9.32694794E-04;
  COFTD[314] = -4.33669877E-07;
  COFTD[315] = 6.62180131E-11;
  COFTD[316] = -4.05741399E-02;
  COFTD[317] = 8.66052741E-04;
  COFTD[318] = -4.24253431E-07;
  COFTD[319] = 6.68659197E-11;
  COFTD[320] = -9.79660257E-02;
  COFTD[321] = 9.15123006E-04;
  COFTD[322] = -4.33959377E-07;
  COFTD[323] = 6.70596193E-11;
  COFTD[324] = -1.27895065E-01;
  COFTD[325] = 9.33135477E-04;
  COFTD[326] = -4.33874780E-07;
  COFTD[327] = 6.62493001E-11;
  COFTD[328] = -2.05602903E-01;
  COFTD[329] = 9.42340760E-04;
  COFTD[330] = -4.07849079E-07;
  COFTD[331] = 5.95629124E-11;
  COFTD[332] = -1.21244023E-01;
  COFTD[333] = 9.32246390E-04;
  COFTD[334] = -4.35567983E-07;
  COFTD[335] = 6.67043784E-11;
  COFTD[336] = -1.46424645E-01;
  COFTD[337] = 9.40059486E-04;
  COFTD[338] = -4.31101382E-07;
  COFTD[339] = 6.52732513E-11;
  COFTD[340] = -1.84147288E-01;
  COFTD[341] = 9.47998208E-04;
  COFTD[342] = -4.20567090E-07;
  COFTD[343] = 6.23866446E-11;
  COFTD[344] = -1.67878773E-01;
  COFTD[345] = 9.47688293E-04;
  COFTD[346] = -4.27045082E-07;
  COFTD[347] = 6.39653063E-11;
  COFTD[348] = -1.68404248E-01;
  COFTD[349] = 9.50654641E-04;
  COFTD[350] = -4.28381771E-07;
  COFTD[351] = 6.41655234E-11;
  COFTD[352] = -1.67919410E-01;
  COFTD[353] = 9.47917693E-04;
  COFTD[354] = -4.27148454E-07;
  COFTD[355] = 6.39807899E-11;
  COFTD[356] = -1.55196365E-01;
  COFTD[357] = 9.48792621E-04;
  COFTD[358] = -4.32428822E-07;
  COFTD[359] = 6.52268489E-11;
  COFTD[360] = -1.55228099E-01;
  COFTD[361] = 9.48986630E-04;
  COFTD[362] = -4.32517245E-07;
  COFTD[363] = 6.52401865E-11;
  COFTD[364] = -1.81012946E-01;
  COFTD[365] = 9.48324652E-04;
  COFTD[366] = -4.22061213E-07;
  COFTD[367] = 6.27335639E-11;
  COFTD[368] = -2.05577270E-01;
  COFTD[369] = 9.42223273E-04;
  COFTD[370] = -4.07798230E-07;
  COFTD[371] = 5.95554864E-11;
  COFTD[372] = -1.81048566E-01;
  COFTD[373] = 9.48511266E-04;
  COFTD[374] = -4.22144268E-07;
  COFTD[375] = 6.27459088E-11;
}

// compute the critical parameters for each species
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS(
  amrex::Real* Tci, amrex::Real* ai, amrex::Real* bi, amrex::Real* acentric_i)
{

  amrex::Real EPS[47];
  amrex::Real SIG[47];
  amrex::Real wt[47];
  amrex::Real Rcst = 83.144598; // in bar [CGS] !
  amrex::Real avogadro = 6.02214199e23;
  amrex::Real boltzmann = 1.3806503e-16; // we work in CGS

  egtransetEPS(EPS);
  egtransetSIG(SIG);
  get_mw(wt);

  // species 0: N2
  // Imported from NIST
  Tci[0] = 126.192000;
  ai[0] = 1e6 * 0.42748 * Rcst * Rcst * Tci[0] * Tci[0] /
          (28.013400 * 28.013400 * 33.958000);
  bi[0] = 0.08664 * Rcst * Tci[0] / (28.013400 * 33.958000);
  acentric_i[0] = 0.037200;

  // species 1: S-CH2
  Tci[1] = 1.316 * EPS[1];
  ai[1] = (5.55 * avogadro * avogadro * EPS[1] * boltzmann * 1e-24 * SIG[1] *
           SIG[1] * SIG[1]) /
          (wt[1] * wt[1]);
  bi[1] = 0.855 * avogadro * 1e-24 * SIG[1] * SIG[1] * SIG[1] / (wt[1]);
  acentric_i[1] = 0.0;

  // species 2: T-CH2
  Tci[2] = 1.316 * EPS[2];
  ai[2] = (5.55 * avogadro * avogadro * EPS[2] * boltzmann * 1e-24 * SIG[2] *
           SIG[2] * SIG[2]) /
          (wt[2] * wt[2]);
  bi[2] = 0.855 * avogadro * 1e-24 * SIG[2] * SIG[2] * SIG[2] / (wt[2]);
  acentric_i[2] = 0.0;

  // species 3: O
  Tci[3] = 1.316 * EPS[3];
  ai[3] = (5.55 * avogadro * avogadro * EPS[3] * boltzmann * 1e-24 * SIG[3] *
           SIG[3] * SIG[3]) /
          (wt[3] * wt[3]);
  bi[3] = 0.855 * avogadro * 1e-24 * SIG[3] * SIG[3] * SIG[3] / (wt[3]);
  acentric_i[3] = 0.0;

  // species 4: H2
  // Imported from NIST
  Tci[4] = 33.145000;
  ai[4] = 1e6 * 0.42748 * Rcst * Rcst * Tci[4] * Tci[4] /
          (2.015880 * 2.015880 * 12.964000);
  bi[4] = 0.08664 * Rcst * Tci[4] / (2.015880 * 12.964000);
  acentric_i[4] = -0.219000;

  // species 5: H
  Tci[5] = 1.316 * EPS[5];
  ai[5] = (5.55 * avogadro * avogadro * EPS[5] * boltzmann * 1e-24 * SIG[5] *
           SIG[5] * SIG[5]) /
          (wt[5] * wt[5]);
  bi[5] = 0.855 * avogadro * 1e-24 * SIG[5] * SIG[5] * SIG[5] / (wt[5]);
  acentric_i[5] = 0.0;

  // species 6: OH
  Tci[6] = 1.316 * EPS[6];
  ai[6] = (5.55 * avogadro * avogadro * EPS[6] * boltzmann * 1e-24 * SIG[6] *
           SIG[6] * SIG[6]) /
          (wt[6] * wt[6]);
  bi[6] = 0.855 * avogadro * 1e-24 * SIG[6] * SIG[6] * SIG[6] / (wt[6]);
  acentric_i[6] = 0.0;

  // species 7: H2O
  // Imported from NIST
  Tci[7] = 647.096000;
  ai[7] = 1e6 * 0.42748 * Rcst * Rcst * Tci[7] * Tci[7] /
          (18.015340 * 18.015340 * 220.640000);
  bi[7] = 0.08664 * Rcst * Tci[7] / (18.015340 * 220.640000);
  acentric_i[7] = 0.344300;

  // species 8: O2
  // Imported from NIST
  Tci[8] = 154.581000;
  ai[8] = 1e6 * 0.42748 * Rcst * Rcst * Tci[8] * Tci[8] /
          (31.998800 * 31.998800 * 50.430466);
  bi[8] = 0.08664 * Rcst * Tci[8] / (31.998800 * 50.430466);
  acentric_i[8] = 0.022200;

  // species 9: HO2
  Tci[9] = 1.316 * EPS[9];
  ai[9] = (5.55 * avogadro * avogadro * EPS[9] * boltzmann * 1e-24 * SIG[9] *
           SIG[9] * SIG[9]) /
          (wt[9] * wt[9]);
  bi[9] = 0.855 * avogadro * 1e-24 * SIG[9] * SIG[9] * SIG[9] / (wt[9]);
  acentric_i[9] = 0.0;

  // species 10: CH
  Tci[10] = 1.316 * EPS[10];
  ai[10] = (5.55 * avogadro * avogadro * EPS[10] * boltzmann * 1e-24 * SIG[10] *
            SIG[10] * SIG[10]) /
           (wt[10] * wt[10]);
  bi[10] = 0.855 * avogadro * 1e-24 * SIG[10] * SIG[10] * SIG[10] / (wt[10]);
  acentric_i[10] = 0.0;

  // species 11: CO
  // Imported from NIST
  Tci[11] = 132.850000;
  ai[11] = 1e6 * 0.42748 * Rcst * Rcst * Tci[11] * Tci[11] /
           (28.010000 * 28.010000 * 34.940000);
  bi[11] = 0.08664 * Rcst * Tci[11] / (28.010000 * 34.940000);
  acentric_i[11] = 0.045000;

  // species 12: HCO
  Tci[12] = 1.316 * EPS[12];
  ai[12] = (5.55 * avogadro * avogadro * EPS[12] * boltzmann * 1e-24 * SIG[12] *
            SIG[12] * SIG[12]) /
           (wt[12] * wt[12]);
  bi[12] = 0.855 * avogadro * 1e-24 * SIG[12] * SIG[12] * SIG[12] / (wt[12]);
  acentric_i[12] = 0.0;

  // species 13: CH2O
  Tci[13] = 1.316 * EPS[13];
  ai[13] = (5.55 * avogadro * avogadro * EPS[13] * boltzmann * 1e-24 * SIG[13] *
            SIG[13] * SIG[13]) /
           (wt[13] * wt[13]);
  bi[13] = 0.855 * avogadro * 1e-24 * SIG[13] * SIG[13] * SIG[13] / (wt[13]);
  acentric_i[13] = 0.0;

  // species 14: CH3
  Tci[14] = 1.316 * EPS[14];
  ai[14] = (5.55 * avogadro * avogadro * EPS[14] * boltzmann * 1e-24 * SIG[14] *
            SIG[14] * SIG[14]) /
           (wt[14] * wt[14]);
  bi[14] = 0.855 * avogadro * 1e-24 * SIG[14] * SIG[14] * SIG[14] / (wt[14]);
  acentric_i[14] = 0.0;

  // species 15: CO2
  // Imported from NIST
  Tci[15] = 304.120000;
  ai[15] = 1e6 * 0.42748 * Rcst * Rcst * Tci[15] * Tci[15] /
           (44.009950 * 44.009950 * 73.740000);
  bi[15] = 0.08664 * Rcst * Tci[15] / (44.009950 * 73.740000);
  acentric_i[15] = 0.225000;

  // species 16: CH4
  // Imported from NIST
  Tci[16] = 190.560000;
  ai[16] = 1e6 * 0.42748 * Rcst * Rcst * Tci[16] * Tci[16] /
           (16.043030 * 16.043030 * 45.990000);
  bi[16] = 0.08664 * Rcst * Tci[16] / (16.043030 * 45.990000);
  acentric_i[16] = 0.011000;

  // species 17: C2H3
  Tci[17] = 1.316 * EPS[17];
  ai[17] = (5.55 * avogadro * avogadro * EPS[17] * boltzmann * 1e-24 * SIG[17] *
            SIG[17] * SIG[17]) /
           (wt[17] * wt[17]);
  bi[17] = 0.855 * avogadro * 1e-24 * SIG[17] * SIG[17] * SIG[17] / (wt[17]);
  acentric_i[17] = 0.0;

  // species 18: C2H4
  // Imported from NIST
  Tci[18] = 282.340000;
  ai[18] = 1e6 * 0.42748 * Rcst * Rcst * Tci[18] * Tci[18] /
           (28.054000 * 28.054000 * 50.410000);
  bi[18] = 0.08664 * Rcst * Tci[18] / (28.054000 * 50.410000);
  acentric_i[18] = 0.087000;

  // species 19: C2H5
  Tci[19] = 1.316 * EPS[19];
  ai[19] = (5.55 * avogadro * avogadro * EPS[19] * boltzmann * 1e-24 * SIG[19] *
            SIG[19] * SIG[19]) /
           (wt[19] * wt[19]);
  bi[19] = 0.855 * avogadro * 1e-24 * SIG[19] * SIG[19] * SIG[19] / (wt[19]);
  acentric_i[19] = 0.0;

  // species 20: C2H
  Tci[20] = 1.316 * EPS[20];
  ai[20] = (5.55 * avogadro * avogadro * EPS[20] * boltzmann * 1e-24 * SIG[20] *
            SIG[20] * SIG[20]) /
           (wt[20] * wt[20]);
  bi[20] = 0.855 * avogadro * 1e-24 * SIG[20] * SIG[20] * SIG[20] / (wt[20]);
  acentric_i[20] = 0.0;

  // species 21: HCCO
  Tci[21] = 1.316 * EPS[21];
  ai[21] = (5.55 * avogadro * avogadro * EPS[21] * boltzmann * 1e-24 * SIG[21] *
            SIG[21] * SIG[21]) /
           (wt[21] * wt[21]);
  bi[21] = 0.855 * avogadro * 1e-24 * SIG[21] * SIG[21] * SIG[21] / (wt[21]);
  acentric_i[21] = 0.0;

  // species 22: C2H2
  // Imported from NIST
  Tci[22] = 308.300000;
  ai[22] = 1e6 * 0.42748 * Rcst * Rcst * Tci[22] * Tci[22] /
           (26.038000 * 26.038000 * 61.140000);
  bi[22] = 0.08664 * Rcst * Tci[22] / (26.038000 * 61.140000);
  acentric_i[22] = 0.189000;

  // species 23: C3H3
  Tci[23] = 1.316 * EPS[23];
  ai[23] = (5.55 * avogadro * avogadro * EPS[23] * boltzmann * 1e-24 * SIG[23] *
            SIG[23] * SIG[23]) /
           (wt[23] * wt[23]);
  bi[23] = 0.855 * avogadro * 1e-24 * SIG[23] * SIG[23] * SIG[23] / (wt[23]);
  acentric_i[23] = 0.0;

  // species 24: A-C3H5
  Tci[24] = 1.316 * EPS[24];
  ai[24] = (5.55 * avogadro * avogadro * EPS[24] * boltzmann * 1e-24 * SIG[24] *
            SIG[24] * SIG[24]) /
           (wt[24] * wt[24]);
  bi[24] = 0.855 * avogadro * 1e-24 * SIG[24] * SIG[24] * SIG[24] / (wt[24]);
  acentric_i[24] = 0.0;

  // species 25: N-C3H7
  Tci[25] = 1.316 * EPS[25];
  ai[25] = (5.55 * avogadro * avogadro * EPS[25] * boltzmann * 1e-24 * SIG[25] *
            SIG[25] * SIG[25]) /
           (wt[25] * wt[25]);
  bi[25] = 0.855 * avogadro * 1e-24 * SIG[25] * SIG[25] * SIG[25] / (wt[25]);
  acentric_i[25] = 0.0;

  // species 26: C2H6
  // Imported from NIST
  Tci[26] = 305.320000;
  ai[26] = 1e6 * 0.42748 * Rcst * Rcst * Tci[26] * Tci[26] /
           (30.070120 * 30.070120 * 48.720000);
  bi[26] = 0.08664 * Rcst * Tci[26] / (30.070120 * 48.720000);
  acentric_i[26] = 0.099000;

  // species 27: P-C3H4
  Tci[27] = 1.316 * EPS[27];
  ai[27] = (5.55 * avogadro * avogadro * EPS[27] * boltzmann * 1e-24 * SIG[27] *
            SIG[27] * SIG[27]) /
           (wt[27] * wt[27]);
  bi[27] = 0.855 * avogadro * 1e-24 * SIG[27] * SIG[27] * SIG[27] / (wt[27]);
  acentric_i[27] = 0.0;

  // species 28: A-C3H4
  Tci[28] = 1.316 * EPS[28];
  ai[28] = (5.55 * avogadro * avogadro * EPS[28] * boltzmann * 1e-24 * SIG[28] *
            SIG[28] * SIG[28]) /
           (wt[28] * wt[28]);
  bi[28] = 0.855 * avogadro * 1e-24 * SIG[28] * SIG[28] * SIG[28] / (wt[28]);
  acentric_i[28] = 0.0;

  // species 29: A1
  Tci[29] = 1.316 * EPS[29];
  ai[29] = (5.55 * avogadro * avogadro * EPS[29] * boltzmann * 1e-24 * SIG[29] *
            SIG[29] * SIG[29]) /
           (wt[29] * wt[29]);
  bi[29] = 0.855 * avogadro * 1e-24 * SIG[29] * SIG[29] * SIG[29] / (wt[29]);
  acentric_i[29] = 0.0;

  // species 30: A1-
  Tci[30] = 1.316 * EPS[30];
  ai[30] = (5.55 * avogadro * avogadro * EPS[30] * boltzmann * 1e-24 * SIG[30] *
            SIG[30] * SIG[30]) /
           (wt[30] * wt[30]);
  bi[30] = 0.855 * avogadro * 1e-24 * SIG[30] * SIG[30] * SIG[30] / (wt[30]);
  acentric_i[30] = 0.0;

  // species 31: C5H5
  Tci[31] = 1.316 * EPS[31];
  ai[31] = (5.55 * avogadro * avogadro * EPS[31] * boltzmann * 1e-24 * SIG[31] *
            SIG[31] * SIG[31]) /
           (wt[31] * wt[31]);
  bi[31] = 0.855 * avogadro * 1e-24 * SIG[31] * SIG[31] * SIG[31] / (wt[31]);
  acentric_i[31] = 0.0;

  // species 32: C3H6
  Tci[32] = 1.316 * EPS[32];
  ai[32] = (5.55 * avogadro * avogadro * EPS[32] * boltzmann * 1e-24 * SIG[32] *
            SIG[32] * SIG[32]) /
           (wt[32] * wt[32]);
  bi[32] = 0.855 * avogadro * 1e-24 * SIG[32] * SIG[32] * SIG[32] / (wt[32]);
  acentric_i[32] = 0.0;

  // species 33: C4H8
  Tci[33] = 1.316 * EPS[33];
  ai[33] = (5.55 * avogadro * avogadro * EPS[33] * boltzmann * 1e-24 * SIG[33] *
            SIG[33] * SIG[33]) /
           (wt[33] * wt[33]);
  bi[33] = 0.855 * avogadro * 1e-24 * SIG[33] * SIG[33] * SIG[33] / (wt[33]);
  acentric_i[33] = 0.0;

  // species 34: C5H6
  Tci[34] = 1.316 * EPS[34];
  ai[34] = (5.55 * avogadro * avogadro * EPS[34] * boltzmann * 1e-24 * SIG[34] *
            SIG[34] * SIG[34]) /
           (wt[34] * wt[34]);
  bi[34] = 0.855 * avogadro * 1e-24 * SIG[34] * SIG[34] * SIG[34] / (wt[34]);
  acentric_i[34] = 0.0;

  // species 35: A2
  Tci[35] = 1.316 * EPS[35];
  ai[35] = (5.55 * avogadro * avogadro * EPS[35] * boltzmann * 1e-24 * SIG[35] *
            SIG[35] * SIG[35]) /
           (wt[35] * wt[35]);
  bi[35] = 0.855 * avogadro * 1e-24 * SIG[35] * SIG[35] * SIG[35] / (wt[35]);
  acentric_i[35] = 0.0;

  // species 36: C5H10
  Tci[36] = 1.316 * EPS[36];
  ai[36] = (5.55 * avogadro * avogadro * EPS[36] * boltzmann * 1e-24 * SIG[36] *
            SIG[36] * SIG[36]) /
           (wt[36] * wt[36]);
  bi[36] = 0.855 * avogadro * 1e-24 * SIG[36] * SIG[36] * SIG[36] / (wt[36]);
  acentric_i[36] = 0.0;

  // species 37: C5H11
  Tci[37] = 1.316 * EPS[37];
  ai[37] = (5.55 * avogadro * avogadro * EPS[37] * boltzmann * 1e-24 * SIG[37] *
            SIG[37] * SIG[37]) /
           (wt[37] * wt[37]);
  bi[37] = 0.855 * avogadro * 1e-24 * SIG[37] * SIG[37] * SIG[37] / (wt[37]);
  acentric_i[37] = 0.0;

  // species 38: A1C2H2
  Tci[38] = 1.316 * EPS[38];
  ai[38] = (5.55 * avogadro * avogadro * EPS[38] * boltzmann * 1e-24 * SIG[38] *
            SIG[38] * SIG[38]) /
           (wt[38] * wt[38]);
  bi[38] = 0.855 * avogadro * 1e-24 * SIG[38] * SIG[38] * SIG[38] / (wt[38]);
  acentric_i[38] = 0.0;

  // species 39: A1CH2
  Tci[39] = 1.316 * EPS[39];
  ai[39] = (5.55 * avogadro * avogadro * EPS[39] * boltzmann * 1e-24 * SIG[39] *
            SIG[39] * SIG[39]) /
           (wt[39] * wt[39]);
  bi[39] = 0.855 * avogadro * 1e-24 * SIG[39] * SIG[39] * SIG[39] / (wt[39]);
  acentric_i[39] = 0.0;

  // species 40: A1CHO
  Tci[40] = 1.316 * EPS[40];
  ai[40] = (5.55 * avogadro * avogadro * EPS[40] * boltzmann * 1e-24 * SIG[40] *
            SIG[40] * SIG[40]) /
           (wt[40] * wt[40]);
  bi[40] = 0.855 * avogadro * 1e-24 * SIG[40] * SIG[40] * SIG[40] / (wt[40]);
  acentric_i[40] = 0.0;

  // species 41: A1CH3
  Tci[41] = 1.316 * EPS[41];
  ai[41] = (5.55 * avogadro * avogadro * EPS[41] * boltzmann * 1e-24 * SIG[41] *
            SIG[41] * SIG[41]) /
           (wt[41] * wt[41]);
  bi[41] = 0.855 * avogadro * 1e-24 * SIG[41] * SIG[41] * SIG[41] / (wt[41]);
  acentric_i[41] = 0.0;

  // species 42: C7H15
  Tci[42] = 1.316 * EPS[42];
  ai[42] = (5.55 * avogadro * avogadro * EPS[42] * boltzmann * 1e-24 * SIG[42] *
            SIG[42] * SIG[42]) /
           (wt[42] * wt[42]);
  bi[42] = 0.855 * avogadro * 1e-24 * SIG[42] * SIG[42] * SIG[42] / (wt[42]);
  acentric_i[42] = 0.0;

  // species 43: N-C7H16
  Tci[43] = 1.316 * EPS[43];
  ai[43] = (5.55 * avogadro * avogadro * EPS[43] * boltzmann * 1e-24 * SIG[43] *
            SIG[43] * SIG[43]) /
           (wt[43] * wt[43]);
  bi[43] = 0.855 * avogadro * 1e-24 * SIG[43] * SIG[43] * SIG[43] / (wt[43]);
  acentric_i[43] = 0.0;

  // species 44: A1C2H*
  Tci[44] = 1.316 * EPS[44];
  ai[44] = (5.55 * avogadro * avogadro * EPS[44] * boltzmann * 1e-24 * SIG[44] *
            SIG[44] * SIG[44]) /
           (wt[44] * wt[44]);
  bi[44] = 0.855 * avogadro * 1e-24 * SIG[44] * SIG[44] * SIG[44] / (wt[44]);
  acentric_i[44] = 0.0;

  // species 45: A2-
  Tci[45] = 1.316 * EPS[45];
  ai[45] = (5.55 * avogadro * avogadro * EPS[45] * boltzmann * 1e-24 * SIG[45] *
            SIG[45] * SIG[45]) /
           (wt[45] * wt[45]);
  bi[45] = 0.855 * avogadro * 1e-24 * SIG[45] * SIG[45] * SIG[45] / (wt[45]);
  acentric_i[45] = 0.0;

  // species 46: A1C2H
  Tci[46] = 1.316 * EPS[46];
  ai[46] = (5.55 * avogadro * avogadro * EPS[46] * boltzmann * 1e-24 * SIG[46] *
            SIG[46] * SIG[46]) /
           (wt[46] * wt[46]);
  bi[46] = 0.855 * avogadro * 1e-24 * SIG[46] * SIG[46] * SIG[46] / (wt[46]);
  acentric_i[46] = 0.0;
}

// compute the critical parameter quantities for each species for SRK
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
GET_CRITPARAMS_SRK(
  amrex::Real* sqrtOneOverTc,
  amrex::Real* sqrtAsti,
  amrex::Real* Bi,
  amrex::Real* Fomega)
{

  // species 0: N2
  // Imported from NIST
  sqrtOneOverTc[0] = 8.9019282240563e-02;
  sqrtAsti[0] = 4.2022983929562e+04;
  Bi[0] = 9.5560052221563e-01;
  Fomega[0] = 5.4259343186608e-01;

  // species 1: S-CH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[1] = 7.2642504557751e-02;
  sqrtAsti[1] = 1.0564067619908e+05;
  Bi[1] = 2.0142023516102e+00;
  Fomega[1] = 4.8508000000000e-01;

  // species 2: T-CH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[2] = 7.2642504557751e-02;
  sqrtAsti[2] = 1.0564067619908e+05;
  Bi[2] = 2.0142023516102e+00;
  Fomega[2] = 4.8508000000000e-01;

  // species 3: O
  // Computed from Lennard-Jones
  sqrtOneOverTc[3] = 9.7460146948181e-02;
  sqrtAsti[3] = 4.2500156012386e+04;
  Bi[3] = 6.6930234851885e-01;
  Fomega[3] = 4.8508000000000e-01;

  // species 4: H2
  // Imported from NIST
  sqrtOneOverTc[4] = 1.7369646834812e-01;
  sqrtAsti[4] = 2.4824229305911e+05;
  Bi[4] = 9.1362254169923e+00;
  Fomega[4] = 1.3798618890700e-01;

  // species 5: H
  // Computed from Lennard-Jones
  sqrtOneOverTc[5] = 7.2391579785311e-02;
  sqrtAsti[5] = 5.8451221185793e+05;
  Bi[5] = 4.4006634563410e+00;
  Fomega[5] = 4.8508000000000e-01;

  // species 6: OH
  // Computed from Lennard-Jones
  sqrtOneOverTc[6] = 9.7460146948181e-02;
  sqrtAsti[6] = 3.9981183985545e+04;
  Bi[6] = 6.2963299076575e-01;
  Fomega[6] = 4.8508000000000e-01;

  // species 7: H2O
  // Imported from NIST
  sqrtOneOverTc[7] = 3.9311140369715e-02;
  sqrtAsti[7] = 1.3145468419592e+05;
  Bi[7] = 1.1727204136223e+00;
  Fomega[7] = 1.0013577274636e+00;

  // species 8: O2
  // Imported from NIST
  sqrtOneOverTc[8] = 8.0430717653241e-02;
  sqrtAsti[8] = 3.6980081924740e+04;
  Bi[8] = 6.9005216444999e-01;
  Fomega[8] = 5.1945301904908e-01;

  // species 9: HO2
  // Computed from Lennard-Jones
  sqrtOneOverTc[9] = 8.4114315417892e-02;
  sqrtAsti[9] = 3.3657825710980e+04;
  Bi[9] = 6.4505861132042e-01;
  Fomega[9] = 4.8508000000000e-01;

  // species 10: CH
  // Computed from Lennard-Jones
  sqrtOneOverTc[10] = 9.7460146948181e-02;
  sqrtAsti[10] = 5.2228281438065e+04;
  Bi[10] = 8.2250313188056e-01;
  Fomega[10] = 4.8508000000000e-01;

  // species 11: CO
  // Imported from NIST
  sqrtOneOverTc[11] = 8.6759935530451e-02;
  sqrtAsti[11] = 4.3619324712923e+04;
  Bi[11] = 9.7786303823350e-01;
  Fomega[11] = 5.5459948367500e-01;

  // species 12: HCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[12] = 3.9062261583604e-02;
  sqrtAsti[12] = 8.7202351509582e+04;
  Bi[12] = 8.2098075206475e-01;
  Fomega[12] = 4.8508000000000e-01;

  // species 13: CH2O
  // Computed from Lennard-Jones
  sqrtOneOverTc[13] = 3.9062261583604e-02;
  sqrtAsti[13] = 8.4274889632487e+04;
  Bi[13] = 7.9341968505345e-01;
  Fomega[13] = 4.8508000000000e-01;

  // species 14: CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[14] = 7.2642504557751e-02;
  sqrtAsti[14] = 9.8558148656101e+04;
  Bi[14] = 1.8791630452967e+00;
  Fomega[14] = 4.8508000000000e-01;

  // species 15: CO2
  // Imported from NIST
  sqrtOneOverTc[15] = 5.7342616962522e-02;
  sqrtAsti[15] = 4.3745610142919e+04;
  Bi[15] = 6.7506167841745e-01;
  Fomega[15] = 8.2653709187500e-01;

  // species 16: CH4
  // Imported from NIST
  sqrtOneOverTc[16] = 7.2440948474968e-02;
  sqrtAsti[16] = 9.5215046085708e+04;
  Bi[16] = 1.8605203320660e+00;
  Fomega[16] = 5.0213035482700e-01;

  // species 17: C2H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[17] = 6.0297445312864e-02;
  sqrtAsti[17] = 7.3975040719223e+04;
  Bi[17] = 1.3120960627055e+00;
  Fomega[17] = 4.8508000000000e-01;

  // species 18: C2H4
  // Imported from NIST
  sqrtOneOverTc[18] = 5.9513267432530e-02;
  sqrtAsti[18] = 7.7056842134487e+04;
  Bi[18] = 1.4381805192666e+00;
  Fomega[18] = 6.1893034120300e-01;

  // species 19: C2H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[19] = 5.4879915006830e-02;
  sqrtAsti[19] = 8.1297663542693e+04;
  Bi[19] = 1.4105965766665e+00;
  Fomega[19] = 4.8508000000000e-01;

  // species 20: C2H
  // Computed from Lennard-Jones
  sqrtOneOverTc[20] = 6.0297445312864e-02;
  sqrtAsti[20] = 7.9933238165885e+04;
  Bi[20] = 1.4177766724704e+00;
  Fomega[20] = 4.8508000000000e-01;

  // species 21: HCCO
  // Computed from Lennard-Jones
  sqrtOneOverTc[21] = 7.1174827921716e-02;
  sqrtAsti[21] = 1.9669985462832e+04;
  Bi[21] = 1.9608582502049e-01;
  Fomega[21] = 4.8508000000000e-01;

  // species 22: C2H2
  // Imported from NIST
  sqrtOneOverTc[22] = 5.6952558345025e-02;
  sqrtAsti[22] = 8.2318059295808e+04;
  Bi[22] = 1.3950602011188e+00;
  Fomega[22] = 7.7293553202700e-01;

  // species 23: C3H3
  // Computed from Lennard-Jones
  sqrtOneOverTc[23] = 5.4912571906481e-02;
  sqrtAsti[23] = 7.0364101467487e+04;
  Bi[23] = 1.4218018738211e+00;
  Fomega[23] = 4.8508000000000e-01;

  // species 24: A-C3H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[24] = 5.3367780663448e-02;
  sqrtAsti[24] = 7.3719333603301e+04;
  Bi[24] = 1.5501433096373e+00;
  Fomega[24] = 4.8508000000000e-01;

  // species 25: N-C3H7
  // Computed from Lennard-Jones
  sqrtOneOverTc[25] = 5.3367780663448e-02;
  sqrtAsti[25] = 7.0270235769881e+04;
  Bi[25] = 1.4776169360332e+00;
  Fomega[25] = 4.8508000000000e-01;

  // species 26: C2H6
  // Imported from NIST
  sqrtOneOverTc[26] = 5.7229819101749e-02;
  sqrtAsti[26] = 7.9078494187583e+04;
  Bi[26] = 1.5012924285481e+00;
  Fomega[26] = 6.3721234098700e-01;

  // species 27: P-C3H4
  // Computed from Lennard-Jones
  sqrtOneOverTc[27] = 5.4912571906481e-02;
  sqrtAsti[27] = 6.8593802845767e+04;
  Bi[27] = 1.3860305949290e+00;
  Fomega[27] = 4.8508000000000e-01;

  // species 28: A-C3H4
  // Computed from Lennard-Jones
  sqrtOneOverTc[28] = 5.4912571906481e-02;
  sqrtAsti[28] = 6.8593802845767e+04;
  Bi[28] = 1.3860305949290e+00;
  Fomega[28] = 4.8508000000000e-01;

  // species 29: A1
  // Computed from Lennard-Jones
  sqrtOneOverTc[29] = 4.0433282083300e-02;
  sqrtAsti[29] = 5.5979242684102e+04;
  Bi[29] = 9.7578748676763e-01;
  Fomega[29] = 4.8508000000000e-01;

  // species 30: A1-
  // Computed from Lennard-Jones
  sqrtOneOverTc[30] = 4.0433282083300e-02;
  sqrtAsti[30] = 5.6711054431898e+04;
  Bi[30] = 9.8854387131179e-01;
  Fomega[30] = 4.8508000000000e-01;

  // species 31: C5H5
  // Computed from Lennard-Jones
  sqrtOneOverTc[31] = 4.3585502734650e-02;
  sqrtAsti[31] = 6.0733276041371e+04;
  Bi[31] = 1.1121913303558e+00;
  Fomega[31] = 4.8508000000000e-01;

  // species 32: C3H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[32] = 5.3367780663448e-02;
  sqrtAsti[32] = 7.1953475180922e+04;
  Bi[32] = 1.5130114815887e+00;
  Fomega[32] = 4.8508000000000e-01;

  // species 33: C4H8
  // Computed from Lennard-Jones
  sqrtOneOverTc[33] = 4.6883752603436e-02;
  sqrtAsti[33] = 6.3399361467271e+04;
  Bi[33] = 1.2087420352802e+00;
  Fomega[33] = 4.8508000000000e-01;

  // species 34: C5H6
  // Computed from Lennard-Jones
  sqrtOneOverTc[34] = 4.3585502734650e-02;
  sqrtAsti[34] = 5.9807158584528e+04;
  Bi[34] = 1.0952316029455e+00;
  Fomega[34] = 4.8508000000000e-01;

  // species 35: A2
  // Computed from Lennard-Jones
  sqrtOneOverTc[35] = 3.4718739807230e-02;
  sqrtAsti[35] = 5.0168394806899e+04;
  Bi[35] = 9.4816210348327e-01;
  Fomega[35] = 4.8508000000000e-01;

  // species 36: C5H10
  // Computed from Lennard-Jones
  sqrtOneOverTc[36] = 4.4357383504839e-02;
  sqrtAsti[36] = 6.0069014652861e+04;
  Bi[36] = 1.2141210724076e+00;
  Fomega[36] = 4.8508000000000e-01;

  // species 37: C5H11
  // Computed from Lennard-Jones
  sqrtOneOverTc[37] = 4.1522480054230e-02;
  sqrtAsti[37] = 5.5676377396677e+04;
  Bi[37] = 9.2711802203379e-01;
  Fomega[37] = 4.8508000000000e-01;

  // species 38: A1C2H2
  // Computed from Lennard-Jones
  sqrtOneOverTc[38] = 3.7298915755524e-02;
  sqrtAsti[38] = 5.5513432610637e+04;
  Bi[38] = 1.0782684234790e+00;
  Fomega[38] = 4.8508000000000e-01;

  // species 39: A1CH2
  // Computed from Lennard-Jones
  sqrtOneOverTc[39] = 3.9168585794863e-02;
  sqrtAsti[39] = 5.5108720650870e+04;
  Bi[39] = 1.0353482313257e+00;
  Fomega[39] = 4.8508000000000e-01;

  // species 40: A1CHO
  // Computed from Lennard-Jones
  sqrtOneOverTc[40] = 3.9168585794863e-02;
  sqrtAsti[40] = 4.7324102362102e+04;
  Bi[40] = 8.8909568396788e-01;
  Fomega[40] = 4.8508000000000e-01;

  // species 41: A1CH3
  // Computed from Lennard-Jones
  sqrtOneOverTc[41] = 3.9168585794863e-02;
  sqrtAsti[41] = 5.4505844727925e+04;
  Bi[41] = 1.0240217749472e+00;
  Fomega[41] = 4.8508000000000e-01;

  // species 42: C7H15
  // Computed from Lennard-Jones
  sqrtOneOverTc[42] = 4.0661373572610e-02;
  sqrtAsti[42] = 5.6333073070963e+04;
  Bi[42] = 1.2690649622964e+00;
  Fomega[42] = 4.8508000000000e-01;

  // species 43: N-C7H16
  // Computed from Lennard-Jones
  sqrtOneOverTc[43] = 4.0661373572610e-02;
  sqrtAsti[43] = 5.5766397379575e+04;
  Bi[43] = 1.2562989577857e+00;
  Fomega[43] = 4.8508000000000e-01;

  // species 44: A1C2H*
  // Computed from Lennard-Jones
  sqrtOneOverTc[44] = 3.7666196799696e-02;
  sqrtAsti[44] = 5.2189392010015e+04;
  Bi[44] = 9.5287026321588e-01;
  Fomega[44] = 4.8508000000000e-01;

  // species 45: A2-
  // Computed from Lennard-Jones
  sqrtOneOverTc[45] = 3.4718739807230e-02;
  sqrtAsti[45] = 5.0566061966088e+04;
  Bi[45] = 9.5567784983301e-01;
  Fomega[45] = 4.8508000000000e-01;

  // species 46: A1C2H
  // Computed from Lennard-Jones
  sqrtOneOverTc[46] = 3.7666196799696e-02;
  sqrtAsti[46] = 5.1674324774701e+04;
  Bi[46] = 9.4346620171629e-01;
  Fomega[46] = 4.8508000000000e-01;
}

// gauss-jordan solver external routine
// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort("sgjsolve not implemented, choose a different solver ");
}

// Replace this routine with the one generated by the Gauss Jordan solver of DW
AMREX_GPU_HOST_DEVICE AMREX_FORCE_INLINE void
sgjsolve_simplified(amrex::Real* /*A*/, amrex::Real* /*x*/, amrex::Real* /*b*/)
{
  amrex::Abort(
    "sgjsolve_simplified not implemented, choose a different solver ");
}

#endif
